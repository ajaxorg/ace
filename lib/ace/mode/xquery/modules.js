define(function(require, exports, module) {
    exports.Modules = 
{ "http://xbrl.io/modules/bizql/components" : { "ns" : "http://xbrl.io/modules/bizql/components", "description" : " <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">This module provides functionality for retrieving components.</p>\n <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">Components help organizing the facts contained in archives\n in smaller parts that \"make sense\" together. A component is identified\n with a CID (component ID).</p>\n <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">A component is made of networks (see the networks module) and hypercubes\n (see the hypercubes module).</p>\n <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">With this module, you can retrieve all components, all components belonging\n to one or several archives. You can retrieve the CID of a component or retrieve\n the components associated with a couple of CIDs.</p>\n", "sees" : [  ], "authors" : [ "<xqdoc:author xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">Charles Hoffman</xqdoc:author>", "<xqdoc:author xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">Matthias Brantner</xqdoc:author>", "<xqdoc:author xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">Dennis Knochenwefel</xqdoc:author>", "<xqdoc:author xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">Ghislain Fourny</xqdoc:author>" ], "version" : null, "encoding" : "utf-8", "namespaces" : [ { "uri" : "http://xbrl.io/modules/bizql/archives", "prefix" : "archives" }, { "uri" : "http://xbrl.io/modules/bizql/components", "prefix" : "components" }, { "uri" : "http://www.28msec.com/modules/credentials", "prefix" : "credentials" }, { "uri" : "http://xbrl.io/modules/bizql/facts", "prefix" : "facts" }, { "uri" : "http://www.28msec.com/modules/mongodb", "prefix" : "mongo" }, { "uri" : "http://zorba.io/options/versioning", "prefix" : "ver" } ], "functions" : [ { "isDocumented" : true, "arity" : 1, "name" : "cid", "qname" : "components:cid", "signature" : "($component-or-id as item()) as atomic", "description" : " <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">Converts the input to a normalized component id (CID). The input\n can be either an CID, or an component object which contains an _id.</p>\n", "summary" : "<p>  Converts the input to a normalized component id (CID).</p>", "annotation_str" : "", "annotations" : [  ], "updating" : false, "parameters" : [ { "name" : "component-or-id", "type" : "item()", "occurrence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> an component object or an CID.</div>" } ], "returns" : { "type" : "atomic", "description" : "the normalized CID." }, "errors" : [ "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">components:INVALID_PARAMETER if the CID or component is not valid.</xqdoc:error>" ] }, { "isDocumented" : true, "arity" : 1, "name" : "components-for-archives", "qname" : "components:components-for-archives", "signature" : "($archive-or-ids as item()*) as object()*", "description" : " <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">Retrieves all components that belong to the supplied archives.</p>\n", "summary" : "<p>  Retrieves all components that belong to the supplied archives.</p>", "annotation_str" : "", "annotations" : [  ], "updating" : false, "parameters" : [ { "name" : "archive-or-ids", "type" : "item()", "occurrence" : "*", "description" : "" } ], "returns" : { "type" : "object()*", "description" : "all components in the archive with this AID." }, "errors" : [  ] }, { "isDocumented" : true, "arity" : 0, "name" : "components", "qname" : "components:components", "signature" : "() as object()*", "description" : " <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">Retrieves all components.</p>\n", "summary" : "<p>  Retrieves all components.</p>", "annotation_str" : "", "annotations" : [  ], "updating" : false, "parameters" : [  ], "returns" : { "type" : "object()*", "description" : "all components." }, "errors" : [  ] }, { "isDocumented" : true, "arity" : 1, "name" : "components", "qname" : "components:components", "signature" : "($component-or-ids as item()*) as object()*", "description" : " <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">Retrieves the components with the given CIDs.</p>\n", "summary" : "<p>  Retrieves the components with the given CIDs.</p>", "annotation_str" : "", "annotations" : [  ], "updating" : false, "parameters" : [ { "name" : "component-or-ids", "type" : "item()", "occurrence" : "*", "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> the CIDs or the components themselves.</div>" } ], "returns" : { "type" : "object()*", "description" : "the components whose _id field matches one of these CIDs." }, "errors" : [  ] }, { "isDocumented" : true, "arity" : 1, "name" : "num-abstract-primary-items-in-hypercubes", "qname" : "components:num-abstract-primary-items-in-hypercubes", "signature" : "($components-or-ids) as integer*", "description" : " Return the number of (distinct) abstract primary items being\n in a hypercube for each of the given components.\n", "summary" : "<p> Return the number of (distinct) abstract primary items being\n in a hypercube for each of the given components.</p>", "annotation_str" : "", "annotations" : [  ], "updating" : false, "parameters" : [ { "name" : "components-or-ids", "type" : null, "occurrence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> list of archives or IDs</div>" } ], "returns" : { "type" : "integer*", "description" : "the said number of primary items" }, "errors" : [  ] }, { "isDocumented" : true, "arity" : 1, "name" : "num-concrete-primary-items-in-hypercubes", "qname" : "components:num-concrete-primary-items-in-hypercubes", "signature" : "($components-or-ids) as integer*", "description" : " Return the number of (distinct) concrete primary items being\n in a hypercube for each of the given components.\n", "summary" : "<p> Return the number of (distinct) concrete primary items being\n in a hypercube for each of the given components.</p>", "annotation_str" : "", "annotations" : [  ], "updating" : false, "parameters" : [ { "name" : "components-or-ids", "type" : null, "occurrence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> list of archives or IDs</div>" } ], "returns" : { "type" : "integer*", "description" : "the said number of primary items" }, "errors" : [  ] }, { "isDocumented" : true, "arity" : 1, "name" : "num-concrete-primary-items-not-in-hypercubes", "qname" : "components:num-concrete-primary-items-not-in-hypercubes", "signature" : "($components-or-ids) as integer*", "description" : " Return the number of (distinct) concrete primary items not being\n in a hypercube for each of the given components.\n", "summary" : "<p> Return the number of (distinct) concrete primary items not being\n in a hypercube for each of the given components.</p>", "annotation_str" : "", "annotations" : [  ], "updating" : false, "parameters" : [ { "name" : "components-or-ids", "type" : null, "occurrence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> list of archives or IDs</div>" } ], "returns" : { "type" : "integer*", "description" : "the said number of primary items" }, "errors" : [  ] }, { "isDocumented" : true, "arity" : 1, "name" : "num-distinct-abstract-primary-items-not-in-hypercubes", "qname" : "components:num-distinct-abstract-primary-items-not-in-hypercubes", "signature" : "($components-or-ids) as integer*", "description" : " Return the number of (distinct) abstract primary items not being\n in a hypercube for each of the given components.\n", "summary" : "<p> Return the number of (distinct) abstract primary items not being\n in a hypercube for each of the given components.</p>", "annotation_str" : "", "annotations" : [  ], "updating" : false, "parameters" : [ { "name" : "components-or-ids", "type" : null, "occurrence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> list of archives or IDs</div>" } ], "returns" : { "type" : "integer*", "description" : "the said number of primary items" }, "errors" : [  ] }, { "isDocumented" : true, "arity" : 1, "name" : "num-domains", "qname" : "components:num-domains", "signature" : "($components-or-ids) as integer*", "description" : " Return the number of (distinct) domains in each of the given components.\n", "summary" : "<p> Return the number of (distinct) domains in each of the given components.</p>", "annotation_str" : "", "annotations" : [  ], "updating" : false, "parameters" : [ { "name" : "components-or-ids", "type" : null, "occurrence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> list of archives or IDs</div>" } ], "returns" : { "type" : "integer*", "description" : "the said number of domains" }, "errors" : [  ] }, { "isDocumented" : true, "arity" : 1, "name" : "num-explicit-dimensions", "qname" : "components:num-explicit-dimensions", "signature" : "($components-or-ids) as integer*", "description" : " Return the number of (distinct) explicit dimensions in each of the given components.\n", "summary" : "<p> Return the number of (distinct) explicit dimensions in each of the given components.</p>", "annotation_str" : "", "annotations" : [  ], "updating" : false, "parameters" : [ { "name" : "components-or-ids", "type" : null, "occurrence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> list of archives or IDs</div>" } ], "returns" : { "type" : "integer*", "description" : "the said number of dimensions" }, "errors" : [  ] }, { "isDocumented" : true, "arity" : 1, "name" : "num-hypercubes", "qname" : "components:num-hypercubes", "signature" : "($components-or-ids as item()*) as integer*", "description" : " Return the number of hypercubes in each of the given components.\n", "summary" : "<p> Return the number of hypercubes in each of the given components.</p>", "annotation_str" : "", "annotations" : [  ], "updating" : false, "parameters" : [ { "name" : "components-or-ids", "type" : "item()", "occurrence" : "*", "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> list of archives or IDs</div>" } ], "returns" : { "type" : "integer*", "description" : "the said number of hypercubes" }, "errors" : [  ] }, { "isDocumented" : true, "arity" : 1, "name" : "num-members", "qname" : "components:num-members", "signature" : "($components-or-ids) as integer*", "description" : " Return the number of (distinct) members in each of the given components.\n", "summary" : "<p> Return the number of (distinct) members in each of the given components.</p>", "annotation_str" : "", "annotations" : [  ], "updating" : false, "parameters" : [ { "name" : "components-or-ids", "type" : null, "occurrence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> list of archives or IDs</div>" } ], "returns" : { "type" : "integer*", "description" : "the said number of members" }, "errors" : [  ] }, { "isDocumented" : true, "arity" : 1, "name" : "num-networks", "qname" : "components:num-networks", "signature" : "($components-or-ids) as integer*", "description" : " Return the number of networks in each of the given components.\n", "summary" : "<p> Return the number of networks in each of the given components.</p>", "annotation_str" : "", "annotations" : [  ], "updating" : false, "parameters" : [ { "name" : "components-or-ids", "type" : null, "occurrence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> list of archives or IDs</div>" } ], "returns" : { "type" : "integer*", "description" : "the said number of networks" }, "errors" : [  ] } ], "variables" : [ { "name" : "components:col", "type" : "xs:string", "description" : " Name of the collection the components are stored in.\n" }, { "name" : "components:ARCHIVE", "type" : "xs:string", "description" : " Name of the field pointing to the archive.\n" } ] }, "http://jsound.io/modules/validate" : { "ns" : "http://jsound.io/modules/validate", "description" : " JSound simple validator.\n This is a JSONiq implemenation of the JSound (the schema for JSON) validator.\n", "sees" : [  ], "authors" : [ "<xqdoc:author xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">Cezar Andrei</xqdoc:author>" ], "version" : null, "encoding" : "utf-8", "namespaces" : [ { "uri" : "http://zorba.io/annotations", "prefix" : "an" }, { "uri" : "http://zorba.io/modules/fetch", "prefix" : "fetch" }, { "uri" : "http://jsoniq.org/functions", "prefix" : "jn" }, { "uri" : "http://jsound.io/modules/validate", "prefix" : "jsv" }, { "uri" : "http://jsound.io/modules/validate/map", "prefix" : "map" }, { "uri" : "http://zorba.io/options/versioning", "prefix" : "ver" } ], "functions" : [ { "isDocumented" : true, "arity" : 3, "name" : "jsd-valid", "qname" : "jsv:jsd-valid", "signature" : "($ns as string, $name as string, $instance as json-item()) as boolean", "description" : " Validates the $instance JSON item against the JSound type with name $name\n and namespace $ns, from the JSound schema definition $jsd.\n", "summary" : "<p> Validates the $instance JSON item against the JSound type with name $name\n and namespace $ns, from the JSound schema definition $jsd.</p>", "annotation_str" : " %an:sequential", "annotations" : [ { "prefix" : "an", "ns" : "http://zorba.io/annotations", "name" : "sequential", "value" : "" } ], "updating" : false, "parameters" : [ { "name" : "ns", "type" : "string", "occurrence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> the namespace of the expected type</div>" }, { "name" : "name", "type" : "string", "occurrence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> the name of the expected type</div>" }, { "name" : "instance", "type" : "json-item()", "occurrence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> the instance to be validated</div>" } ], "returns" : { "type" : "boolean", "description" : "true if the instance is valid, otherwise throws an error." }, "errors" : [ "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">jsv:BadJSoundFormat If the schema is not a valid JSound schema</xqdoc:error>", "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">jsv:Invalid If the instance does not conform to the JSound schema</xqdoc:error>", "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">zerr:ZXQP0025 If the schema namespace URI cannot be resolved.</xqdoc:error>", "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">jn:JNDY0021 If the loaded schema is syntactically incorrect</xqdoc:error>" ] }, { "isDocumented" : true, "arity" : 4, "name" : "jsd-valid", "qname" : "jsv:jsd-valid", "signature" : "($jsd as object(), $name as string, $ns as string, $instance as item()) as boolean", "description" : " Validates the $instance JSON item against the JSound type with name $name\n and namespace $ns, from the JSound schema definition $jsd.\n", "summary" : "<p> Validates the $instance JSON item against the JSound type with name $name\n and namespace $ns, from the JSound schema definition $jsd.</p>", "annotation_str" : " %an:sequential", "annotations" : [ { "prefix" : "an", "ns" : "http://zorba.io/annotations", "name" : "sequential", "value" : "" } ], "updating" : false, "parameters" : [ { "name" : "jsd", "type" : "object()", "occurrence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> the JSound schema as a JSON object to be validated against</div>" }, { "name" : "name", "type" : "string", "occurrence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> the name of the expected type</div>" }, { "name" : "ns", "type" : "string", "occurrence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> the namespace of the expected type</div>" }, { "name" : "instance", "type" : "item()", "occurrence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> the instance to be validated</div>" } ], "returns" : { "type" : "boolean", "description" : "true if the instance is valid, otherwise throws an error." }, "errors" : [ "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">jsv:BadJSoundFormat If the schema is not a valid JSound schema</xqdoc:error>", "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">jsv:Invalid If the instance does not conform to the JSound schema</xqdoc:error>" ] } ], "variables" : [  ] }, "http://xbrl.io/modules/bizql/archives" : { "ns" : "http://xbrl.io/modules/bizql/archives", "description" : " <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">This module provides functions for retrieving metadata about archives.</p>\n <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">Archives represent the granularity of \"report shipping\", i.e., an entity\n reports one archive at a time. An archive is identified with an AID (archive ID).</p>\n <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">Archives are made of reported facts (see facts module),\n which are structured and organized in components (see components module).</p>\n <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">With this module, you can retrieve all archives, or a certain number of archives\n with their AIDs, or obtain the AID of archives you already have. You can also retrieve\n all archives submitted by one or several entities.</p>\n <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">Archive information is stored in a MongoDB datasource called <b>xbrl</b>.</p>\n", "sees" : [  ], "authors" : [ "<xqdoc:author xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">Charles Hoffman</xqdoc:author>", "<xqdoc:author xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">Matthias Brantner</xqdoc:author>", "<xqdoc:author xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">Dennis Knochenwefel</xqdoc:author>", "<xqdoc:author xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">Ghislain Fourny</xqdoc:author>" ], "version" : null, "encoding" : "utf-8", "namespaces" : [ { "uri" : "http://xbrl.io/modules/bizql/archives", "prefix" : "archives" }, { "uri" : "http://www.28msec.com/modules/credentials", "prefix" : "credentials" }, { "uri" : "http://xbrl.io/modules/bizql/entities", "prefix" : "entities" }, { "uri" : "http://www.w3.org/2005/xqt-errors", "prefix" : "err" }, { "uri" : "http://www.28msec.com/modules/mongodb", "prefix" : "mongo" }, { "uri" : "http://zorba.io/options/versioning", "prefix" : "ver" } ], "functions" : [ { "isDocumented" : true, "arity" : 1, "name" : "aid", "qname" : "archives:aid", "signature" : "($archives-or-ids as item()*) as atomic*", "description" : " <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">Converts the input to a normalized archive identifier (AID). The input\n can be either a pure AID, or an archive object which contains an AID.</p>\n", "summary" : "<p>  Converts the input to a normalized archive identifier (AID).</p>", "annotation_str" : "", "annotations" : [  ], "updating" : false, "parameters" : [ { "name" : "archives-or-ids", "type" : "item()", "occurrence" : "*", "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> a sequence of archive objects or identifiers (AID).</div>" } ], "returns" : { "type" : "atomic*", "description" : "the normalized AIDs." }, "errors" : [ "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">archives:INVALID_PARAMETER if the AID or archive is not valid</xqdoc:error>" ] }, { "isDocumented" : true, "arity" : 1, "name" : "archives-for-entities", "qname" : "archives:archives-for-entities", "signature" : "($entities-or-ids as item()*) as object()*", "description" : " <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">Return all archives created by the supplied entities.</p>\n", "summary" : "<p>  Return all archives created by the supplied entities.</p>", "annotation_str" : "", "annotations" : [  ], "updating" : false, "parameters" : [ { "name" : "entities-or-ids", "type" : "item()", "occurrence" : "*", "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> arbitrary number of entity objects or EIDs.</div>" } ], "returns" : { "type" : "object()*", "description" : "all archives created by these entities." }, "errors" : [  ] }, { "isDocumented" : true, "arity" : 0, "name" : "archives", "qname" : "archives:archives", "signature" : "() as object()*", "description" : " <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">Retrieves all archives.</p>\n", "summary" : "<p>  Retrieves all archives.</p>", "annotation_str" : "", "annotations" : [  ], "updating" : false, "parameters" : [  ], "returns" : { "type" : "object()*", "description" : "all archives." }, "errors" : [  ] }, { "isDocumented" : true, "arity" : 1, "name" : "archives", "qname" : "archives:archives", "signature" : "($archive-or-ids as item()*) as object()*", "description" : " <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">Retrieves the archives with the given AIDs.</p>\n", "summary" : "<p>  Retrieves the archives with the given AIDs.</p>", "annotation_str" : "", "annotations" : [  ], "updating" : false, "parameters" : [ { "name" : "archive-or-ids", "type" : "item()", "occurrence" : "*", "description" : "" } ], "returns" : { "type" : "object()*", "description" : "the archives with the given AIDs the empty sequence if no archive was found or if the input is an empty sequence." }, "errors" : [  ] }, { "isDocumented" : true, "arity" : 1, "name" : "entities", "qname" : "archives:entities", "signature" : "($archives-or-ids as item()*) as object()*", "description" : " <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">Returns the entities that submitted the supplied archives.</p>\n", "summary" : "<p>  Returns the entities that submitted the supplied archives.</p>", "annotation_str" : "", "annotations" : [  ], "updating" : false, "parameters" : [ { "name" : "archives-or-ids", "type" : "item()", "occurrence" : "*", "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> a sequence of archives or their identifiers (AID).</div>" } ], "returns" : { "type" : "object()*", "description" : "the submitting entities." }, "errors" : [  ] }, { "isDocumented" : true, "arity" : 1, "name" : "num-abstract-primary-items-in-hypercubes", "qname" : "archives:num-abstract-primary-items-in-hypercubes", "signature" : "($archives-or-ids) as integer*", "description" : " Return the number of (distinct) abstract primary items being\n in a hypercube for each of the given archives.\n", "summary" : "<p> Return the number of (distinct) abstract primary items being\n in a hypercube for each of the given archives.</p>", "annotation_str" : "", "annotations" : [  ], "updating" : false, "parameters" : [ { "name" : "archives-or-ids", "type" : null, "occurrence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> list of archives or IDs</div>" } ], "returns" : { "type" : "integer*", "description" : "the said number of primary items" }, "errors" : [  ] }, { "isDocumented" : true, "arity" : 1, "name" : "num-components", "qname" : "archives:num-components", "signature" : "($archives-or-ids) as integer*", "description" : " Return the number of components of each of the given archives.\n", "summary" : "<p> Return the number of components of each of the given archives.</p>", "annotation_str" : "", "annotations" : [  ], "updating" : false, "parameters" : [ { "name" : "archives-or-ids", "type" : null, "occurrence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> list of archives or IDs</div>" } ], "returns" : { "type" : "integer*", "description" : "the said number of components" }, "errors" : [  ] }, { "isDocumented" : true, "arity" : 1, "name" : "num-concrete-primary-items-in-hypercubes", "qname" : "archives:num-concrete-primary-items-in-hypercubes", "signature" : "($archives-or-ids) as integer*", "description" : " Return the number of (distinct) concrete primary items being\n in a hypercube for each of the given archives.\n", "summary" : "<p> Return the number of (distinct) concrete primary items being\n in a hypercube for each of the given archives.</p>", "annotation_str" : "", "annotations" : [  ], "updating" : false, "parameters" : [ { "name" : "archives-or-ids", "type" : null, "occurrence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> list of archives or IDs</div>" } ], "returns" : { "type" : "integer*", "description" : "the said number of primary items" }, "errors" : [  ] }, { "isDocumented" : true, "arity" : 1, "name" : "num-concrete-primary-items-not-in-hypercubes", "qname" : "archives:num-concrete-primary-items-not-in-hypercubes", "signature" : "($archives-or-ids) as integer*", "description" : " Return the number of (distinct) concrete primary items not being\n in a hypercube for each of the given archives.\n", "summary" : "<p> Return the number of (distinct) concrete primary items not being\n in a hypercube for each of the given archives.</p>", "annotation_str" : "", "annotations" : [  ], "updating" : false, "parameters" : [ { "name" : "archives-or-ids", "type" : null, "occurrence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> list of archives or IDs</div>" } ], "returns" : { "type" : "integer*", "description" : "the said number of primary items" }, "errors" : [  ] }, { "isDocumented" : true, "arity" : 1, "name" : "num-distinct-abstract-primary-items-not-in-hypercubes", "qname" : "archives:num-distinct-abstract-primary-items-not-in-hypercubes", "signature" : "($archives-or-ids) as integer*", "description" : " Return the number of (distinct) abstract primary items not being\n in a hypercube for each of the given archives.\n", "summary" : "<p> Return the number of (distinct) abstract primary items not being\n in a hypercube for each of the given archives.</p>", "annotation_str" : "", "annotations" : [  ], "updating" : false, "parameters" : [ { "name" : "archives-or-ids", "type" : null, "occurrence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> list of archives or IDs</div>" } ], "returns" : { "type" : "integer*", "description" : "the said number of primary items" }, "errors" : [  ] }, { "isDocumented" : true, "arity" : 1, "name" : "num-domains", "qname" : "archives:num-domains", "signature" : "($archives-or-ids) as integer*", "description" : " Return the number of (distinct) domains in each of the given archives.\n", "summary" : "<p> Return the number of (distinct) domains in each of the given archives.</p>", "annotation_str" : "", "annotations" : [  ], "updating" : false, "parameters" : [ { "name" : "archives-or-ids", "type" : null, "occurrence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> list of archives or IDs</div>" } ], "returns" : { "type" : "integer*", "description" : "the said number of domains" }, "errors" : [  ] }, { "isDocumented" : true, "arity" : 1, "name" : "num-explicit-dimensions", "qname" : "archives:num-explicit-dimensions", "signature" : "($archives-or-ids) as integer*", "description" : " Return the number of (distinct) explicit dimensions in each of the given archives.\n", "summary" : "<p> Return the number of (distinct) explicit dimensions in each of the given archives.</p>", "annotation_str" : "", "annotations" : [  ], "updating" : false, "parameters" : [ { "name" : "archives-or-ids", "type" : null, "occurrence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> list of archives or IDs</div>" } ], "returns" : { "type" : "integer*", "description" : "the said number of dimensions" }, "errors" : [  ] }, { "isDocumented" : true, "arity" : 1, "name" : "num-facts", "qname" : "archives:num-facts", "signature" : "($archives-or-ids) as integer*", "description" : " Return the number of facts of each of the given archives.\n", "summary" : "<p> Return the number of facts of each of the given archives.</p>", "annotation_str" : "", "annotations" : [  ], "updating" : false, "parameters" : [ { "name" : "archives-or-ids", "type" : null, "occurrence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> list of archives or IDs</div>" } ], "returns" : { "type" : "integer*", "description" : "the said number of facts" }, "errors" : [  ] }, { "isDocumented" : true, "arity" : 1, "name" : "num-footnotes", "qname" : "archives:num-footnotes", "signature" : "($archives-or-ids) as integer*", "description" : " Return the number of XBRL footnotes of each of the given archives.\n", "summary" : "<p> Return the number of XBRL footnotes of each of the given archives.</p>", "annotation_str" : "", "annotations" : [  ], "updating" : false, "parameters" : [ { "name" : "archives-or-ids", "type" : null, "occurrence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> list of archives or IDs</div>" } ], "returns" : { "type" : "integer*", "description" : "the said number of footnotes" }, "errors" : [  ] }, { "isDocumented" : true, "arity" : 1, "name" : "num-hypercubes", "qname" : "archives:num-hypercubes", "signature" : "($archives-or-ids as item()*) as integer*", "description" : " Return the number of hypercubes in each of the given archives.\n", "summary" : "<p> Return the number of hypercubes in each of the given archives.</p>", "annotation_str" : "", "annotations" : [  ], "updating" : false, "parameters" : [ { "name" : "archives-or-ids", "type" : "item()", "occurrence" : "*", "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> list of archives or IDs</div>" } ], "returns" : { "type" : "integer*", "description" : "the said number of hypercubes" }, "errors" : [  ] }, { "isDocumented" : true, "arity" : 1, "name" : "num-members", "qname" : "archives:num-members", "signature" : "($archives-or-ids) as integer*", "description" : " Return the number of (distinct) members in each of the given archives.\n", "summary" : "<p> Return the number of (distinct) members in each of the given archives.</p>", "annotation_str" : "", "annotations" : [  ], "updating" : false, "parameters" : [ { "name" : "archives-or-ids", "type" : null, "occurrence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> list of archives or IDs</div>" } ], "returns" : { "type" : "integer*", "description" : "the said number of members" }, "errors" : [  ] }, { "isDocumented" : true, "arity" : 1, "name" : "num-networks", "qname" : "archives:num-networks", "signature" : "($archives-or-ids) as integer*", "description" : " Return the number of networks in each of the given archives.\n", "summary" : "<p> Return the number of networks in each of the given archives.</p>", "annotation_str" : "", "annotations" : [  ], "updating" : false, "parameters" : [ { "name" : "archives-or-ids", "type" : null, "occurrence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> list of archives or IDs</div>" } ], "returns" : { "type" : "integer*", "description" : "the said number of networks" }, "errors" : [  ] } ], "variables" : [ { "name" : "archives:col", "type" : "string", "description" : " Name of the collection the archives are stored in.\n" }, { "name" : "archives:ENTITY", "type" : "string", "description" : " Name of the field which points to the reporting entity.\n" } ] }, "http://www.28msec.com/modules/xmlrpc" : { "ns" : "http://www.28msec.com/modules/xmlrpc", "description" : " XML RPC Client Module\n This module provides the functions necessary to execute remote call\n procedures using\n <a xmlns:xqdoc=\"http://www.xqdoc.org/1.0\" href=\"http://www.xmlrpc.com/spec\" target=\"_blank\">XML-RPC</a>.\n The application/mashup creator does not need to know the\n specifics of <a xmlns:xqdoc=\"http://www.xqdoc.org/1.0\" href=\"http://www.xmlrpc.com/spec\" target=\"_blank\">XML-RPC</a> to use this module.\n Usage:\n <pre xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">xmlrpc:invoke(\"http://www.advogato.org/XMLRPC\", \"test.sumprod\", (5, 7))</pre>\n <pre xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">xmlrpc:invoke(\"http://www.advogato.org/XMLRPC\", \"test.capitalize\", \"HelloWorld\")</pre>\n <pre xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">xmlrpc:invoice(\"http://www.example.com/XMLRPC\", \"test.foo\", (\"some-parameter\",\n                      &lt;struct&gt;\n                        &lt;member&gt;\n                          &lt;name&gt;Foo&lt;/name&gt;\n                          &lt;value&gt;&lt;string&gt;Bar&lt;/string&gt;&lt;/value&gt;\n                        &lt;/member&gt;\n                      &lt;/struct&gt;))</pre>\n", "sees" : [ "<xqdoc:see xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"><a href=\"http://www.xmlrpc.com/spec\" target=\"_blank\">XML-RPC Specification</a></xqdoc:see>", "<xqdoc:see xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"><a href=\"http://en.wikipedia.org/wiki/XML-RPC\" target=\"_blank\">XML-RPC Wikipedia article</a></xqdoc:see>" ], "authors" : [ "<xqdoc:author xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">William Candillon {william.candillon@28msec.com}</xqdoc:author>" ], "version" : null, "encoding" : "utf-8", "namespaces" : [ { "uri" : "http://zorba.io/annotations", "prefix" : "ann" }, { "uri" : "http://expath.org/ns/http-client", "prefix" : "http" }, { "uri" : "http://expath.org/ns/http-client", "prefix" : "http-client" }, { "uri" : "http://zorba.io/options/versioning", "prefix" : "ver" }, { "uri" : "http://www.28msec.com/modules/xmlrpc", "prefix" : "xmlrpc" } ], "functions" : [ { "isDocumented" : true, "arity" : 2, "name" : "invoke", "qname" : "xmlrpc:invoke", "signature" : "($endpoint-url as xs:string, $method as xs:string) as item()*", "description" : " Invoke a remote method without parameters.\n Calling this function is equivalent to xmlrpc:invoke($url, $method, ())\n", "summary" : "<p> Invoke a remote method without parameters.</p>", "annotation_str" : " %ann:sequential", "annotations" : [ { "prefix" : "ann", "ns" : "http://zorba.io/annotations", "name" : "sequential", "value" : "" } ], "updating" : false, "parameters" : [ { "name" : "endpoint-url", "type" : "xs:string", "occurrence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> URL of the XML-RPC server.</div>" }, { "name" : "method", "type" : "xs:string", "occurrence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> Name of the method to invoke.</div>" } ], "returns" : { "type" : "item()*", "description" : "Result of the method invocation." }, "errors" : [  ] }, { "isDocumented" : true, "arity" : 3, "name" : "invoke", "qname" : "xmlrpc:invoke", "signature" : "($endpoint-url as xs:string, $method as xs:string, $parameters as item()*) as item()*", "description" : " Invoke a remote method with parameters.\n", "summary" : "<p> Invoke a remote method with parameters.</p>", "annotation_str" : " %ann:sequential", "annotations" : [ { "prefix" : "ann", "ns" : "http://zorba.io/annotations", "name" : "sequential", "value" : "" } ], "updating" : false, "parameters" : [ { "name" : "endpoint-url", "type" : "xs:string", "occurrence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> URL of the XML-RPC server.</div>" }, { "name" : "method", "type" : "xs:string", "occurrence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> Name of the method to invoke.</div>" }, { "name" : "parameters", "type" : "item()", "occurrence" : "*", "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> Method parameters. Struct and Arrays need to follow XML-RPC format. Atomic types will be automatically convert to the proper XML-RPC data format.</div>" } ], "returns" : { "type" : "item()*", "description" : "Result of the method invocation." }, "errors" : [  ] } ], "variables" : [ { "name" : "xmlrpc:ERR_001", "type" : "xs:QName", "description" : " XML-RPC serialization error.\n" } ] }, "http://zorba.io/modules/unordered-maps" : { "ns" : "http://zorba.io/modules/unordered-maps", "description" : " This module defines a set of functions for working with maps. A map\n is identified by a string and can be created using the map:create function\n and dropped using the map:drop function.\n <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"/>\n It is possible to create persistent and transient maps. The lifetime of a\n transient map is limited by the execution of the current query.\n A persistent map lives until it is explicitly dropped.\n Accordingly, it is also available to other requests.\n <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"/>\n For example,\n <pre xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">map:create(\"my-map\", [\"string\", \"integer\"], { \"persistent\" : false })</pre>\n will create a transient map named my-map having two keys.\n The types of the keys are string and integer.\n <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"/>\n The key of a particular entry in the map can consist of a tuple of\n atomic values (called key attributes). The actual type of each attribute\n is determined when the map is created. The value of each entry is a\n sequence of items. If an item in this sequence is a object or array,\n this item needs to belong to a collection, otherwise, an error is raised.\n", "sees" : [  ], "authors" : [ "<xqdoc:author xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">Matthias Brantner</xqdoc:author>" ], "version" : null, "encoding" : "utf-8", "namespaces" : [ { "uri" : "http://zorba.io/annotations", "prefix" : "an" }, { "uri" : "http://zorba.io/modules/unordered-maps", "prefix" : "map" }, { "uri" : "http://zorba.io/options/versioning", "prefix" : "ver" }, { "uri" : "http://zorba.io/errors", "prefix" : "zerr" } ], "functions" : [ { "isDocumented" : true, "arity" : 0, "name" : "available-maps", "qname" : "map:available-maps", "signature" : "() as string* external", "description" : " The function returns a sequence of names of the maps that are\n available (persistent and non-persistent). The sequence will be\n empty if there are no maps.\n <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"/>\n", "summary" : "<p> The function returns a sequence of names of the maps that are\n available (persistent and non-persistent).</p>", "annotation_str" : "", "annotations" : [  ], "updating" : false, "parameters" : [  ], "returns" : { "type" : "string*", "description" : "A sequence of string, one for each available map, or an empty sequence." }, "errors" : [  ] }, { "isDocumented" : true, "arity" : 2, "name" : "create", "qname" : "map:create", "signature" : "($name as string, $key-types as item()) as empty-sequence() external", "description" : " Create a persistent map with a given name and type identifiers for the key\n attributes.\n <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"/>\n If the map has only one key attribute, a single type identifier is given,\n for more than one key attribute an array of type identifiers is given.\n Calling this function is equivalent to calling create with the options\n <code xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">{ \"persistent\" : true }</code>\n Note that the function is sequential and immediately creates the map.\n <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"/>\n Each key-type should be specified as string (e.g. \"integer\",\n \"string\", \"boolean\", \"double\", or \"datetime\").\n <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"/>\n For example,\n <pre xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">map:create(\"my-map\", \"string\")</pre> or\n <pre xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">map:create(\"my-map\", [\"string\", \"integer\"])</pre>.\n", "summary" : "<p> Create a persistent map with a given name and type identifiers for the key\n attributes.</p>", "annotation_str" : " %an:sequential", "annotations" : [ { "prefix" : "an", "ns" : "http://zorba.io/annotations", "name" : "sequential", "value" : "" } ], "updating" : false, "parameters" : [ { "name" : "name", "type" : "string", "occurrence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> the name of the map (the restrictions on collection names apply)</div>" }, { "name" : "key-types", "type" : "item()", "occurrence" : null, "description" : "" } ], "returns" : { "type" : "empty-sequence()", "description" : "the function is sequential and immediately creates the corresponding map. It returns the empty-sequence." }, "errors" : [ "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">err:XPTY0004 if any of the key attribute types is not a subtype of anyAtomicType.</xqdoc:error>", "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">zerr:ZSTR0001 if a map with the given name already exists.</xqdoc:error>", "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">zerr:ZDDY1000 if the given name is not a legal collection name</xqdoc:error>", "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">zerr:ZDDY0043 if any of the given options has an invalid type</xqdoc:error>" ] }, { "isDocumented" : true, "arity" : 3, "name" : "create", "qname" : "map:create", "signature" : "($name as string, $key-types as item(), $options as object()) as empty-sequence() external", "description" : " Create a map with a given name, type identifiers for the key attributes, and\n options.\n <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"/>\n If the map has only one key attribute, a single type identifier is given,\n for more than one key attribute an array of type identifiers is given.\n Currently only one option is supported: To create a transient map the object\n <code xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">{ \"persistent\" : false }</code>\n has to be passed to the $options parameter.\n Note that the function is sequential and immediately creates the map in the\n store.\n <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"/>\n Note that a map cannot be created if it already exists in a parent context.\n For example, a map that was created in an outer query cannot be\n created again in an inner query executed using the\n <code xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">reflection:eval-s</code> function.\n", "summary" : "<p> Create a map with a given name, type identifiers for the key attributes, and\n options.</p>", "annotation_str" : " %an:sequential", "annotations" : [ { "prefix" : "an", "ns" : "http://zorba.io/annotations", "name" : "sequential", "value" : "" } ], "updating" : false, "parameters" : [ { "name" : "name", "type" : "string", "occurrence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> the name of the map (the restrictions on collection names apply)</div>" }, { "name" : "key-types", "type" : "item()", "occurrence" : null, "description" : "" }, { "name" : "options", "type" : "object()", "occurrence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> an object describing options for the map</div>" } ], "returns" : { "type" : "empty-sequence()", "description" : "the function is sequential and immediately creates the corresponding map but returns the empty-sequence." }, "errors" : [ "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">err:XPTY0004 if any of the attribute types is not a subtype of anyAtomicType.</xqdoc:error>", "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">zerr:ZSTR0001 if a map with the given name already exists.</xqdoc:error>", "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">zerr:ZDDY1000 if the given name is not a legal collection name</xqdoc:error>", "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">zerr:ZDDY0043 if any of the given options has an invalid type</xqdoc:error>" ] }, { "isDocumented" : true, "arity" : 2, "name" : "delete", "qname" : "map:delete", "signature" : "($name as string, $key as item()) as empty-sequence() external", "description" : " Removes an entry identified by the given key from the map.\n <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"/>\n If the map has only one key attribute, a single key value is given, for\n more than one key attribute an array of key values is given.\n <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"/>\n Note that it is possible to insert entries with empty key attributes.\n However as the removing the entries is based on the \"eq\" comparison and\n as \"eq\" with an empty sequence always return false, it is not possible\n to delete these entries.\n", "summary" : "<p> Removes an entry identified by the given key from the map.</p>", "annotation_str" : " %an:sequential", "annotations" : [ { "prefix" : "an", "ns" : "http://zorba.io/annotations", "name" : "sequential", "value" : "" } ], "updating" : false, "parameters" : [ { "name" : "name", "type" : "string", "occurrence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> the name of the map</div>" }, { "name" : "key", "type" : "item()", "occurrence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> either a single attribute key or an array of keys</div>" } ], "returns" : { "type" : "empty-sequence()", "description" : "the function is sequential and immediately deletes the entry into the map but returns the empty-sequence." }, "errors" : [ "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">zerr:ZDDY0023 if a map with the given name does not exist.</xqdoc:error>", "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">zerr:ZDDY0025 if the given number of key attributes does not match the number of key attributes specified when creating the map (see the map:create function).</xqdoc:error>", "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">zerr:ZXQD0005 if any of the given key attributes can not be cast (or is not a subtype) of the corresponding key attribute specified when creating the map.</xqdoc:error>" ] }, { "isDocumented" : true, "arity" : 1, "name" : "drop", "qname" : "map:drop", "signature" : "($name as string) as empty-sequence() external", "description" : " Deletes the map with the given name.\n <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"/>\n Note that a map can only be dropped in the context it was created.\n For example, a map that was created in an outer query cannot be\n dropped in an inner query executed using the\n <code xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">reflection:eval-s</code> function.\n", "summary" : "<p> Deletes the map with the given name.</p>", "annotation_str" : " %an:sequential", "annotations" : [ { "prefix" : "an", "ns" : "http://zorba.io/annotations", "name" : "sequential", "value" : "" } ], "updating" : false, "parameters" : [ { "name" : "name", "type" : "string", "occurrence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> the name of the map to drop</div>" } ], "returns" : { "type" : "empty-sequence()", "description" : "the function is sequential and immediately drops the map. It returns the empty-sequence." }, "errors" : [ "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">zerr:ZDDY0023 if a map with the given name does not exist.</xqdoc:error>" ] }, { "isDocumented" : true, "arity" : 2, "name" : "get", "qname" : "map:get", "signature" : "($name as string, $key as item()) as item()* external", "description" : " Returns the value of the entry with the given key from the map.\n <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"/>\n If the map has only one key attribute, a single key value is given, for\n more than one key attribute an array of key values is given.\n <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"/>\n Note that it is possible to insert entries with empty key attributes.\n However as the getting the entries is based on the \"eq\" comparison and\n as \"eq\" with an empty sequence always return false, it is not possible\n to retrieve these entries.\n <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"/>\n For example,\n <pre xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">map:get(\"my-map\", \"key\")</pre> or\n <pre xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">map:get(\"my-map\", [ \"key1\", \"key2\" ])</pre>.\n", "summary" : "<p> Returns the value of the entry with the given key from the map.</p>", "annotation_str" : "", "annotations" : [  ], "updating" : false, "parameters" : [ { "name" : "name", "type" : "string", "occurrence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> the name of the map</div>" }, { "name" : "key", "type" : "item()", "occurrence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> either a single attribute key or an array of keys</div>" } ], "returns" : { "type" : "item()*", "description" : "the value of the entry in the map identified by the given key. The empty-sequence will be returned if no entry with the given key is contained in the map." }, "errors" : [ "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">zerr:ZDDY0023 if a map with the given name does not exist.</xqdoc:error>", "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">zerr:ZDDY0025 if the given number of key attributes does not match the number of key attributes specified when creating the map (see the map:create function).</xqdoc:error>", "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">zerr:ZXQD0005 if any of the given key attributes can not be cast (or is not a subtype) of the corresponding key attribute specified when creating the map.</xqdoc:error>" ] }, { "isDocumented" : true, "arity" : 3, "name" : "insert", "qname" : "map:insert", "signature" : "($name as string, $key as item(), $value as item()*) as empty-sequence() external", "description" : " Inserts a new entry into the map with the given name.\n <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"/>\n If the map has only one key attribute, a single key value is given, for\n more than one key attribute an array of key values is given.\n If an entry with the given key already exists in the map, the value\n sequences of the existing entry and the sequence passed using $value\n argument are concatenated.\n <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"/>\n If an item in the value sequence is an object or array, this\n item needs to belong to a collection, otherwise, an an error\n is raised.\n <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"/>\n Note that it is possible to insert entries with empty key attributes\n or key attributes having the value <code xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">null</code>. However, as\n the comparison with an empty sequence or null always returns false,\n it is not possible to retrieve these entries.\n <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"/>\n For example,\n <pre xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">map:insert(\"my-map\", \"key\", \"value\")</pre> or\n <pre xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">map:insert(\"my-map\", [ \"key1\", \"key2\" ] , (42, \"value\"))</pre>.\n", "summary" : "<p> Inserts a new entry into the map with the given name.</p>", "annotation_str" : " %an:sequential", "annotations" : [ { "prefix" : "an", "ns" : "http://zorba.io/annotations", "name" : "sequential", "value" : "" } ], "updating" : false, "parameters" : [ { "name" : "name", "type" : "string", "occurrence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> the name of the map</div>" }, { "name" : "key", "type" : "item()", "occurrence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> either a single attribute key or an array of keys</div>" }, { "name" : "value", "type" : "item()", "occurrence" : "*", "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> the value of the entry to insert</div>" } ], "returns" : { "type" : "empty-sequence()", "description" : "the function is sequential and immediately inserts the entry into the map. It returns the empty-sequence." }, "errors" : [ "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">zerr:ZDDY0023 if a map with the given name does not exist.</xqdoc:error>", "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">zerr:ZDDY0025 if the given number of key attributes does not match the number of key attributes specified when creating the map (see the map:create function).</xqdoc:error>", "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">zerr:ZXQD0005 if any of the given key attributes can not be cast (or is not a subtype) of the corresponding key attribute specified when creating the map.</xqdoc:error>", "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">zerr:ZDDY1003 if the value to insert is an object or array it must belong to a collection.</xqdoc:error>" ] }, { "isDocumented" : true, "arity" : 1, "name" : "keys", "qname" : "map:keys", "signature" : "($name as string) as array()* external", "description" : " Returns the keys of all entries of a map. The keys\n are returned as sequence of arrays.\n <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"/>\n The following condition always holds:\n <tt xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">map:size($name) eq count(map:keys($name))</tt>\n", "summary" : "<p> Returns the keys of all entries of a map.</p>", "annotation_str" : "", "annotations" : [  ], "updating" : false, "parameters" : [ { "name" : "name", "type" : "string", "occurrence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> the name of the map</div>" } ], "returns" : { "type" : "array()*", "description" : "an sequence of arrays each array containing the values of all attributes of one key." }, "errors" : [ "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">zerr:ZDDY0023 if a map with the given name does not exist.</xqdoc:error>" ] }, { "isDocumented" : true, "arity" : 1, "name" : "options", "qname" : "map:options", "signature" : "($name as string) as object() external", "description" : " The function returns the options that were passed during creation or the\n default options if no options were passed.\n", "summary" : "<p> The function returns the options that were passed during creation or the\n default options if no options were passed.</p>", "annotation_str" : "", "annotations" : [  ], "updating" : false, "parameters" : [ { "name" : "name", "type" : "string", "occurrence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> the name of the map</div>" } ], "returns" : { "type" : "object()", "description" : "an options object" }, "errors" : [ "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">zerr:ZDDY0023 if a map with the given name does not exist.</xqdoc:error>" ] }, { "isDocumented" : true, "arity" : 1, "name" : "size", "qname" : "map:size", "signature" : "($name as string) as integer external", "description" : " Returns the number of entries in a map.\n <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"/>\n The following condition always holds:\n <tt xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">map:size($name) eq count(map:keys($name))</tt>\n", "summary" : "<p> Returns the number of entries in a map.</p>", "annotation_str" : "", "annotations" : [  ], "updating" : false, "parameters" : [ { "name" : "name", "type" : "string", "occurrence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> the name of the map</div>" } ], "returns" : { "type" : "integer", "description" : "the number of entries in the map." }, "errors" : [ "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">zerr:ZDDY0023 if a map with the given name does not exist.</xqdoc:error>" ] } ], "variables" : [ { "name" : "map:PERSISTENT", "type" : "string", "description" : " Constant containing the field name of the options object\n indiciating whether a map is persistent or transient.\n" } ] }, "http://www.28msec.com/modules/assertion" : { "ns" : "http://www.28msec.com/modules/assertion", "description" : " <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">\n   This module provides a set of assertion functions.\n </p>\n", "sees" : [  ], "authors" : [ "<xqdoc:author xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">28msec</xqdoc:author>" ], "version" : null, "encoding" : "utf-8", "namespaces" : [ { "uri" : "http://zorba.io/annotations", "prefix" : "an" }, { "uri" : "http://www.28msec.com/modules/assertion", "prefix" : "assertion" }, { "uri" : "http://zorba.io/options/versioning", "prefix" : "ver" } ], "functions" : [ { "isDocumented" : true, "arity" : 2, "name" : "equals-deep", "qname" : "assertion:equals-deep", "signature" : "($expected as item()*, $actual as item()*) as item()*", "description" : " Asserts that two objects are deep-equal.\n If they are not, an error containing the diff is raised.\n", "summary" : "<p> Asserts that two objects are deep-equal.</p>", "annotation_str" : "", "annotations" : [  ], "updating" : false, "parameters" : [ { "name" : "expected", "type" : "item()", "occurrence" : "*", "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> expected value</div>" }, { "name" : "actual", "type" : "item()", "occurrence" : "*", "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> actual value</div>" } ], "returns" : { "type" : "item()*", "description" : "actual value" }, "errors" : [ "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">assertion:A003 expected and actual value are not deep-equal</xqdoc:error>" ] }, { "isDocumented" : true, "arity" : 2, "name" : "equals-general", "qname" : "assertion:equals-general", "signature" : "($expected as item()*, $actual as item()*) as item()*", "description" : " Asserts that two objects are equal (by general comarison).\n If they are not, an error containing the diff is raised.\n", "summary" : "<p> Asserts that two objects are equal (by general comarison).</p>", "annotation_str" : "", "annotations" : [  ], "updating" : false, "parameters" : [ { "name" : "expected", "type" : "item()", "occurrence" : "*", "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> expected value</div>" }, { "name" : "actual", "type" : "item()", "occurrence" : "*", "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> actual value</div>" } ], "returns" : { "type" : "item()*", "description" : "actual value" }, "errors" : [ "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">assertion:A002 expected and actual value are not equal</xqdoc:error>" ] }, { "isDocumented" : true, "arity" : 2, "name" : "equals-value", "qname" : "assertion:equals-value", "signature" : "($expected as item()?, $actual as item()?) as item()?", "description" : " Asserts that two objects are equal (by value comparison).\n If they are not, an error containing the diff is raised.\n", "summary" : "<p> Asserts that two objects are equal (by value comparison).</p>", "annotation_str" : "", "annotations" : [  ], "updating" : false, "parameters" : [ { "name" : "expected", "type" : "item()", "occurrence" : "?", "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> expected value</div>" }, { "name" : "actual", "type" : "item()", "occurrence" : "?", "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> actual value</div>" } ], "returns" : { "type" : "item()?", "description" : "actual value" }, "errors" : [ "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">assertion:A001 expected and actual value are not equal</xqdoc:error>" ] } ], "variables" : [ { "name" : "assertion:A001", "type" : "xs:QName", "description" : " xs:QName with namespace URI=\"http://www.28msec.com/modules/assertion\" and\n local name 'A001'. 'equals-value' assertion failed.\n" }, { "name" : "assertion:A002", "type" : "xs:QName", "description" : " xs:QName with namespace URI=\"http://www.28msec.com/modules/assertion\" and\n local name 'A002'. 'equals-general' assertion failed.\n" }, { "name" : "assertion:A003", "type" : "xs:QName", "description" : " xs:QName with namespace URI=\"http://www.28msec.com/modules/assertion\" and\n local name 'A003'. 'equals-general' assertion failed.\n" } ] }, "http://www.zorba-xquery.com/modules/image/basic" : { "ns" : "http://www.zorba-xquery.com/modules/image/basic", "description" : " This module provides function to do the following basic image operations:\n <ul xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">\n   <li>create empty images</li>\n   <li>compare images</li>\n   <li>compress image</li>\n   <li>convert an image one format to another</li>\n   <li>retrieve with, height, format, and exif information from an image</li>\n </ul>\n The following image formats are supported:\n <ul xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">\n   <li>GIF</li>\n   <li>JPEG</li>\n   <li>PNG</li>\n   <li>TIFF</li>\n   <li>BMP</li>\n </ul>\n <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">The errors raised by functions of this module have the namespace\n <tt>http://www.zorba-xquery.com/modules/image/error</tt> (associated with prefix ierr).</p>\n", "sees" : [  ], "authors" : [ "<xqdoc:author xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">Daniel Thomas</xqdoc:author>" ], "version" : null, "encoding" : "utf-8", "namespaces" : [ { "uri" : "http://www.zorba-xquery.com/modules/image/basic", "prefix" : "basic" }, { "uri" : "http://www.w3.org/2005/xqt-errors", "prefix" : "err" }, { "uri" : "http://www.zorba-xquery.com/modules/image/error", "prefix" : "ierr" }, { "uri" : "http://www.zorba-xquery.com/modules/image/image", "prefix" : "image" }, { "uri" : "http://www.w3.org/2000/svg", "prefix" : "svg" }, { "uri" : "http://zorba.io/options/versioning", "prefix" : "ver" } ], "functions" : [ { "isDocumented" : true, "arity" : 2, "name" : "compress", "qname" : "basic:compress", "signature" : "($image as xs:base64Binary, $quality as xs:unsignedInt) as xs:base64Binary external", "description" : " Compresses the passed image.\n Compressing means lowering the quality and reducing the size.\n", "summary" : "<p> Compresses the passed image.</p>", "annotation_str" : "", "annotations" : [  ], "updating" : false, "parameters" : [ { "name" : "image", "type" : "xs:base64Binary", "occurrence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> the image</div>" }, { "name" : "quality", "type" : "xs:unsignedInt", "occurrence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> compression level, 0 to 100</div>" } ], "returns" : { "type" : "xs:base64Binary", "description" : "the compressed image" }, "errors" : [ "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">ierr:IM001 the passed image is invalid.</xqdoc:error>" ] }, { "isDocumented" : true, "arity" : 2, "name" : "convert-svg-string", "qname" : "basic:convert-svg-string", "signature" : "($svg as xs:string, $format as xs:string) as xs:base64Binary", "description" : " Converts an SVG image to a supported image format.\n", "summary" : "<p> Converts an SVG image to a supported image format.</p>", "annotation_str" : "", "annotations" : [  ], "updating" : false, "parameters" : [ { "name" : "svg", "type" : "xs:string", "occurrence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> the image to convert as string</div>" }, { "name" : "format", "type" : "xs:string", "occurrence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> target format</div>" } ], "returns" : { "type" : "xs:base64Binary", "description" : "the resulting image" }, "errors" : [ "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">ierr:IM001 the passed SVG is invalid.</xqdoc:error>" ] }, { "isDocumented" : true, "arity" : 2, "name" : "convert-svg", "qname" : "basic:convert-svg", "signature" : "($svg as element(svg:svg), $format as xs:string) as xs:base64Binary", "description" : " Converts an SVG image to a supported image format.\n", "summary" : "<p> Converts an SVG image to a supported image format.</p>", "annotation_str" : "", "annotations" : [  ], "updating" : false, "parameters" : [ { "name" : "svg", "type" : "element(svg:svg)", "occurrence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> the image to convert</div>" }, { "name" : "format", "type" : "xs:string", "occurrence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> target format</div>" } ], "returns" : { "type" : "xs:base64Binary", "description" : "the resulting image" }, "errors" : [ "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">ierr:IM001 the passed SVG is invalid.</xqdoc:error>" ] }, { "isDocumented" : true, "arity" : 2, "name" : "convert", "qname" : "basic:convert", "signature" : "($image as xs:base64Binary, $format as xs:string) as xs:base64Binary", "description" : " Converts an image to another format.\n", "summary" : "<p> Converts an image to another format.</p>", "annotation_str" : "", "annotations" : [  ], "updating" : false, "parameters" : [ { "name" : "image", "type" : "xs:base64Binary", "occurrence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> the source image</div>" }, { "name" : "format", "type" : "xs:string", "occurrence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> the format (see supported formats above) of the resulting image.</div>" } ], "returns" : { "type" : "xs:base64Binary", "description" : "A new image with the same content as the passed image but with the specified file format." }, "errors" : [ "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">ierr:IM001 the passed image is invalid.</xqdoc:error>", "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">err:FORG0001 unsupported image format</xqdoc:error>" ] }, { "isDocumented" : true, "arity" : 3, "name" : "create", "qname" : "basic:create", "signature" : "($width as xs:unsignedInt, $height as xs:unsignedInt, $format as xs:string) as xs:base64Binary", "description" : " Creates an empty image with background color white.\n", "summary" : "<p> Creates an empty image with background color white.</p>", "annotation_str" : "", "annotations" : [  ], "updating" : false, "parameters" : [ { "name" : "width", "type" : "xs:unsignedInt", "occurrence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> the width of the new image</div>" }, { "name" : "height", "type" : "xs:unsignedInt", "occurrence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> the height of the new image</div>" }, { "name" : "format", "type" : "xs:string", "occurrence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> the format of the new image</div>" } ], "returns" : { "type" : "xs:base64Binary", "description" : "newly created image" }, "errors" : [ "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">err:FORG0001 unsupported image format</xqdoc:error>" ] }, { "isDocumented" : true, "arity" : 2, "name" : "equals", "qname" : "basic:equals", "signature" : "($image1 as xs:base64Binary, $image2 as xs:base64Binary) as xs:boolean external", "description" : " Compares two images.\n", "summary" : "<p> Compares two images.</p>", "annotation_str" : "", "annotations" : [  ], "updating" : false, "parameters" : [ { "name" : "image1", "type" : "xs:base64Binary", "occurrence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> first image</div>" }, { "name" : "image2", "type" : "xs:base64Binary", "occurrence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> second image</div>" } ], "returns" : { "type" : "xs:boolean", "description" : "True if the images are equal." }, "errors" : [ "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">ierr:IM001 one of the passed images is invalid.</xqdoc:error>" ] }, { "isDocumented" : true, "arity" : 2, "name" : "exif", "qname" : "basic:exif", "signature" : "($image as xs:base64Binary, $tag as xs:string) as xs:string? external", "description" : " Reads exif information from an image.\n This function works for JPEG and TIFF images only.\n It returns empty sequence if no exif information matching the passed tag is found.\n", "summary" : "<p> Reads exif information from an image.</p>", "annotation_str" : "", "annotations" : [  ], "updating" : false, "parameters" : [ { "name" : "image", "type" : "xs:base64Binary", "occurrence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> the image</div>" }, { "name" : "tag", "type" : "xs:string", "occurrence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> the field name we want read (e.g. DateTime).</div>" } ], "returns" : { "type" : "xs:string?", "description" : "exif field content" }, "errors" : [ "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">ierr:IM001 the passed image is invalid.</xqdoc:error>" ] }, { "isDocumented" : true, "arity" : 1, "name" : "format", "qname" : "basic:format", "signature" : "($image as xs:base64Binary) as xs:string external", "description" : " Returns the format of the passed image.\n", "summary" : "<p> Returns the format of the passed image.</p>", "annotation_str" : "", "annotations" : [  ], "updating" : false, "parameters" : [ { "name" : "image", "type" : "xs:base64Binary", "occurrence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> the image</div>" } ], "returns" : { "type" : "xs:string", "description" : "the format" }, "errors" : [ "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">ierr:IM001 the passed image is invalid.</xqdoc:error>" ] }, { "isDocumented" : true, "arity" : 1, "name" : "height", "qname" : "basic:height", "signature" : "($image as xs:base64Binary) as xs:unsignedInt external", "description" : " Returns the height of the passed image.\n", "summary" : "<p> Returns the height of the passed image.</p>", "annotation_str" : "", "annotations" : [  ], "updating" : false, "parameters" : [ { "name" : "image", "type" : "xs:base64Binary", "occurrence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> the image</div>" } ], "returns" : { "type" : "xs:unsignedInt", "description" : "the height in pixels" }, "errors" : [ "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">ierr:IM001 the passed image is invalid.</xqdoc:error>" ] }, { "isDocumented" : true, "arity" : 1, "name" : "width", "qname" : "basic:width", "signature" : "($image as xs:base64Binary) as xs:unsignedInt external", "description" : " Returns the width of the passed image.\n", "summary" : "<p> Returns the width of the passed image.</p>", "annotation_str" : "", "annotations" : [  ], "updating" : false, "parameters" : [ { "name" : "image", "type" : "xs:base64Binary", "occurrence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> the image</div>" } ], "returns" : { "type" : "xs:unsignedInt", "description" : "the width in pixels" }, "errors" : [ "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">ierr:IM001 the passed image is invalid.</xqdoc:error>" ] } ], "variables" : [  ] }, "http://api.28.io/indices" : { "ns" : "http://api.28.io/indices", "description" : "", "sees" : [  ], "authors" : [  ], "version" : null, "encoding" : null, "namespaces" : [ { "uri" : "", "prefix" : "an" }, { "uri" : "http://api.28.io/indices", "prefix" : "in" }, { "uri" : "http://www.28msec.com/modules/http/request", "prefix" : "req" }, { "uri" : "http://www.28msec.com/modules/http/response", "prefix" : "resp" }, { "uri" : "http://api.28.io/util", "prefix" : "util" }, { "uri" : "http://api.28.io/validation", "prefix" : "validate" } ], "functions" : [ { "isDocumented" : false, "arity" : 1, "name" : "create-index", "qname" : "in:create-index", "signature" : "($new-index as object()) as empty-sequence()", "description" : "", "summary" : "", "annotation_str" : " %an:sequential", "annotations" : [ { "prefix" : "an", "ns" : "", "name" : "sequential", "value" : "" } ], "updating" : false, "parameters" : [ { "name" : "new-index", "type" : "object()", "occurrence" : null, "description" : "" } ], "returns" : { "type" : "empty-sequence()", "description" : "" }, "errors" : [  ] }, { "isDocumented" : false, "arity" : 1, "name" : "delete-index", "qname" : "in:delete-index", "signature" : "($name) as empty-sequence()", "description" : "", "summary" : "", "annotation_str" : " %an:sequential", "annotations" : [ { "prefix" : "an", "ns" : "", "name" : "sequential", "value" : "" } ], "updating" : false, "parameters" : [ { "name" : "name", "type" : null, "occurrence" : null, "description" : "" } ], "returns" : { "type" : "empty-sequence()", "description" : "" }, "errors" : [  ] }, { "isDocumented" : false, "arity" : 0, "name" : "dispatch", "qname" : "in:dispatch", "signature" : "()", "description" : "", "summary" : "", "annotation_str" : " %an:sequential", "annotations" : [ { "prefix" : "an", "ns" : "", "name" : "sequential", "value" : "" } ], "updating" : false, "parameters" : [  ], "returns" : { "type" : null, "description" : "" }, "errors" : [  ] }, { "isDocumented" : false, "arity" : 1, "name" : "get-index", "qname" : "in:get-index", "signature" : "($name as xs:string) as object()?", "description" : "", "summary" : "", "annotation_str" : " %an:sequential", "annotations" : [ { "prefix" : "an", "ns" : "", "name" : "sequential", "value" : "" } ], "updating" : false, "parameters" : [ { "name" : "name", "type" : "xs:string", "occurrence" : null, "description" : "" } ], "returns" : { "type" : "object()?", "description" : "" }, "errors" : [  ] }, { "isDocumented" : false, "arity" : 0, "name" : "list-indices", "qname" : "in:list-indices", "signature" : "() as array()", "description" : "", "summary" : "", "annotation_str" : " %an:sequential", "annotations" : [ { "prefix" : "an", "ns" : "", "name" : "sequential", "value" : "" } ], "updating" : false, "parameters" : [  ], "returns" : { "type" : "array()", "description" : "" }, "errors" : [  ] }, { "isDocumented" : false, "arity" : 0, "name" : "metadata", "qname" : "in:metadata", "signature" : "()", "description" : "", "summary" : "", "annotation_str" : "", "annotations" : [  ], "updating" : false, "parameters" : [  ], "returns" : { "type" : null, "description" : "" }, "errors" : [  ] }, { "isDocumented" : false, "arity" : 2, "name" : "put-index", "qname" : "in:put-index", "signature" : "($name as xs:string, $new-index-obj as object()) as empty-sequence()", "description" : "", "summary" : "", "annotation_str" : " %an:sequential", "annotations" : [ { "prefix" : "an", "ns" : "", "name" : "sequential", "value" : "" } ], "updating" : false, "parameters" : [ { "name" : "name", "type" : "xs:string", "occurrence" : null, "description" : "" }, { "name" : "new-index-obj", "type" : "object()", "occurrence" : null, "description" : "" } ], "returns" : { "type" : "empty-sequence()", "description" : "" }, "errors" : [  ] }, { "isDocumented" : false, "arity" : 1, "name" : "refresh-index", "qname" : "in:refresh-index", "signature" : "($index as xs:string) as empty-sequence()", "description" : "", "summary" : "", "annotation_str" : " %an:sequential", "annotations" : [ { "prefix" : "an", "ns" : "", "name" : "sequential", "value" : "" } ], "updating" : false, "parameters" : [ { "name" : "index", "type" : "xs:string", "occurrence" : null, "description" : "" } ], "returns" : { "type" : "empty-sequence()", "description" : "" }, "errors" : [  ] }, { "isDocumented" : false, "arity" : 1, "name" : "validate-index", "qname" : "in:validate-index", "signature" : "($index as object()) as empty-sequence()", "description" : "", "summary" : "", "annotation_str" : "", "annotations" : [  ], "updating" : false, "parameters" : [ { "name" : "index", "type" : "object()", "occurrence" : null, "description" : "" } ], "returns" : { "type" : "empty-sequence()", "description" : "" }, "errors" : [  ] } ], "variables" : [  ] }, "http://api.28.io/xdmview" : { "ns" : "http://api.28.io/xdmview", "description" : "", "sees" : [  ], "authors" : [  ], "version" : null, "encoding" : null, "namespaces" : [ { "uri" : "", "prefix" : "an" }, { "uri" : "http://api.28.io/model", "prefix" : "model" }, { "uri" : "http://zorba.io/modules/reference", "prefix" : "ref" }, { "uri" : "http://www.zorba-xquery.com/schemas/xdm", "prefix" : "xdm" }, { "uri" : "http://api.28.io/xdmview", "prefix" : "xdmview" } ], "functions" : [ { "isDocumented" : false, "arity" : 1, "name" : "show-namespaces", "qname" : "xdmview:show-namespaces", "signature" : "($namespaces)", "description" : "", "summary" : "", "annotation_str" : "", "annotations" : [  ], "updating" : false, "parameters" : [ { "name" : "namespaces", "type" : null, "occurrence" : null, "description" : "" } ], "returns" : { "type" : null, "description" : "" }, "errors" : [  ] }, { "isDocumented" : false, "arity" : 3, "name" : "show-node", "qname" : "xdmview:show-node", "signature" : "($node, $namespaces, $include-noderef as xs:boolean)", "description" : "", "summary" : "", "annotation_str" : " %an:sequential", "annotations" : [ { "prefix" : "an", "ns" : "", "name" : "sequential", "value" : "" } ], "updating" : false, "parameters" : [ { "name" : "node", "type" : null, "occurrence" : null, "description" : "" }, { "name" : "namespaces", "type" : null, "occurrence" : null, "description" : "" }, { "name" : "include-noderef", "type" : "xs:boolean", "occurrence" : null, "description" : "" } ], "returns" : { "type" : null, "description" : "" }, "errors" : [  ] }, { "isDocumented" : false, "arity" : 2, "name" : "show-nodes", "qname" : "xdmview:show-nodes", "signature" : "($nodes, $include-noderef as xs:boolean)", "description" : "", "summary" : "", "annotation_str" : " %an:sequential", "annotations" : [ { "prefix" : "an", "ns" : "", "name" : "sequential", "value" : "" } ], "updating" : false, "parameters" : [ { "name" : "nodes", "type" : null, "occurrence" : null, "description" : "" }, { "name" : "include-noderef", "type" : "xs:boolean", "occurrence" : null, "description" : "" } ], "returns" : { "type" : null, "description" : "" }, "errors" : [  ] } ], "variables" : [  ] }, "http://www.zorba-xquery.com/modules/xqdoc/json" : { "ns" : "http://www.zorba-xquery.com/modules/xqdoc/json", "description" : " Convert an XQDoc document into an HTML document.\n This module contains a single <code xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">convert()</code> function\n that transform an XQDoc document into an HTML document.\n Usage:\n <pre xmlns:xqdoc=\"http://www.xqdoc.org/1.0\" class=\"ace-static\" ace-mode=\"xquery\">\n let $xqdoc := xqdoc:xqdoc(\"http://expath.org/ns/file\")\n return html:convert($xqdoc)\n </pre>\n", "sees" : [  ], "authors" : [ "<xqdoc:author xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">William Candillon <a href=\"?anchor=\">wcandillon at gmail dot com</a></xqdoc:author>" ], "version" : null, "encoding" : "utf-8", "namespaces" : [ { "uri" : "http://www.zorba-xquery.com/modules/xqdoc/json", "prefix" : "html" }, { "uri" : "http://www.w3.org/2010/xslt-xquery-serialization", "prefix" : "o" }, { "uri" : "http://www.xqdoc.org/1.0", "prefix" : "xq" } ], "functions" : [ { "isDocumented" : false, "arity" : 1, "name" : "convert", "qname" : "html:convert", "signature" : "($xqdoc as element(xq:xqdoc)) as object()", "description" : "", "summary" : "", "annotation_str" : "", "annotations" : [  ], "updating" : false, "parameters" : [ { "name" : "xqdoc", "type" : "element(xq:xqdoc)", "occurrence" : null, "description" : "" } ], "returns" : { "type" : "object()", "description" : "" }, "errors" : [  ] }, { "isDocumented" : false, "arity" : 1, "name" : "normalize-anchors", "qname" : "html:normalize-anchors", "signature" : "($node)", "description" : "", "summary" : "", "annotation_str" : "", "annotations" : [  ], "updating" : false, "parameters" : [ { "name" : "node", "type" : null, "occurrence" : null, "description" : "" } ], "returns" : { "type" : null, "description" : "" }, "errors" : [  ] } ], "variables" : [  ] }, "http://zorba.io/modules/math" : { "ns" : "http://zorba.io/modules/math", "description" : " Extensive math library.<p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"/>\n", "sees" : [  ], "authors" : [ "<xqdoc:author xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">Daniel Turcanu, Dan Muresan</xqdoc:author>" ], "version" : null, "encoding" : "utf-8", "namespaces" : [ { "uri" : "http://www.w3.org/2005/xpath-functions/math", "prefix" : "W3Cmath" }, { "uri" : "http://zorba.io/modules/math", "prefix" : "math" }, { "uri" : "http://zorba.io/options/versioning", "prefix" : "ver" } ], "functions" : [ { "isDocumented" : true, "arity" : 1, "name" : "acosh", "qname" : "math:acosh", "signature" : "($arg as double) as double external", "description" : " Inverse hyperbolic cosine.\n", "summary" : "<p> Inverse hyperbolic cosine.</p>", "annotation_str" : "", "annotations" : [  ], "updating" : false, "parameters" : [ { "name" : "arg", "type" : "double", "occurrence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> the arg</div>" } ], "returns" : { "type" : "double", "description" : "the result of acosh(arg)" }, "errors" : [  ] }, { "isDocumented" : true, "arity" : 1, "name" : "asinh", "qname" : "math:asinh", "signature" : "($arg as double) as double external", "description" : " Calculate the inverse hyperbolic sine.\n", "summary" : "<p> Calculate the inverse hyperbolic sine.</p>", "annotation_str" : "", "annotations" : [  ], "updating" : false, "parameters" : [ { "name" : "arg", "type" : "double", "occurrence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> the arg</div>" } ], "returns" : { "type" : "double", "description" : "the result of asinh(arg)" }, "errors" : [  ] }, { "isDocumented" : true, "arity" : 1, "name" : "atanh", "qname" : "math:atanh", "signature" : "($arg as double) as double external", "description" : " Calculate the hyperbolic tangent.\n", "summary" : "<p> Calculate the hyperbolic tangent.</p>", "annotation_str" : "", "annotations" : [  ], "updating" : false, "parameters" : [ { "name" : "arg", "type" : "double", "occurrence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> must be in range -1 ... +1 (exclusive)</div>" } ], "returns" : { "type" : "double", "description" : "the result of atanh(arg)" }, "errors" : [  ] }, { "isDocumented" : true, "arity" : 1, "name" : "avedev", "qname" : "math:avedev", "signature" : "($numbers as double+) as double", "description" : " Returns the average of the absolute deviations of data points from their mean.<p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"/>\n The formula is sum(abs(x - average_x))/n, where n is the count of x in the sequence.<p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"/>\n Borrowed from excel module.\n", "summary" : "<p> Returns the average of the absolute deviations of data points from their mean.</p>", "annotation_str" : "", "annotations" : [  ], "updating" : false, "parameters" : [ { "name" : "numbers", "type" : "double", "occurrence" : "+", "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> the sequence of numbers. Sequence can be of any length from 1 up.</div>" } ], "returns" : { "type" : "double", "description" : "The formula result" }, "errors" : [  ] }, { "isDocumented" : true, "arity" : 1, "name" : "cast-as-numeric", "qname" : "math:cast-as-numeric", "signature" : "($number as anyAtomicType) as anyAtomicType", "description" : " Cast the anyAtomicType to a numeric type.<p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"/>\n If the value is already of a numeric type then nothing is changed.\n Otherwise the value is casted to the numeric type that is most appropriate.\n <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"/>\n Borrowed from excel module.\n", "summary" : "<p> Cast the anyAtomicType to a numeric type.</p>", "annotation_str" : "", "annotations" : [  ], "updating" : false, "parameters" : [ { "name" : "number", "type" : "anyAtomicType", "occurrence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> The parameter can be a number, string, boolean value.</div>" } ], "returns" : { "type" : "anyAtomicType", "description" : "The casted value." }, "errors" : [ "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">math:VALUE_NOT_NUMERIC if the value cannot be casted to numeric type.</xqdoc:error>" ] }, { "isDocumented" : true, "arity" : 2, "name" : "ceiling", "qname" : "math:ceiling", "signature" : "($number as double, $significance as double) as double", "description" : " Returns number rounded up, away from zero, to the nearest multiple of significance.<p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"/>\n Significance must have the same sign as number.\n Number and significance must be of a numeric type or castable to numeric.\n Significance must not be zero.<p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"/>\n Borrowed from excel module.\n", "summary" : "<p> Returns number rounded up, away from zero, to the nearest multiple of significance.</p>", "annotation_str" : "", "annotations" : [  ], "updating" : false, "parameters" : [ { "name" : "number", "type" : "double", "occurrence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> The value you want to round.</div>" }, { "name" : "significance", "type" : "double", "occurrence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> The multiple to which you want to round.</div>" } ], "returns" : { "type" : "double", "description" : "The rounded value." }, "errors" : [ "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">math:INVALID_ARGUMENT if significance is zero or it doesn't have the same sign as number.</xqdoc:error>" ] }, { "isDocumented" : true, "arity" : 1, "name" : "cosh", "qname" : "math:cosh", "signature" : "($arg as double) as double external", "description" : " Returns the hyperbolic cosine of x.<p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"/>\n If the result it too large, INF is returned.\n", "summary" : "<p> Returns the hyperbolic cosine of x.</p>", "annotation_str" : "", "annotations" : [  ], "updating" : false, "parameters" : [ { "name" : "arg", "type" : "double", "occurrence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> must be smaller than 7.104760e+002</div>" } ], "returns" : { "type" : "double", "description" : "cosh(arg)" }, "errors" : [  ] }, { "isDocumented" : true, "arity" : 1, "name" : "deg-to-rad", "qname" : "math:deg-to-rad", "signature" : "($deg as double) as double", "description" : " Convert angle from degrees to radians. <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"/>\n The parameter is first converted to value range of (-360, 360).\n", "summary" : "<p> Convert angle from degrees to radians.</p>", "annotation_str" : "", "annotations" : [  ], "updating" : false, "parameters" : [ { "name" : "deg", "type" : "double", "occurrence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> angle in degrees</div>" } ], "returns" : { "type" : "double", "description" : "value in radians (-2PI, 2PI)" }, "errors" : [  ] }, { "isDocumented" : true, "arity" : 1, "name" : "even", "qname" : "math:even", "signature" : "($number as double) as integer", "description" : " Returns number rounded up to the nearest even integer.<p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"/>\n Regardless of the sign of number, a value is rounded up when adjusted away from zero.<p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"/>\n Borrowed from excel module.\n", "summary" : "<p> Returns number rounded up to the nearest even integer.</p>", "annotation_str" : "", "annotations" : [  ], "updating" : false, "parameters" : [ { "name" : "number", "type" : "double", "occurrence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> The value to round.</div>" } ], "returns" : { "type" : "integer", "description" : "The rounded value casted as numeric type." }, "errors" : [  ] }, { "isDocumented" : true, "arity" : 1, "name" : "fact", "qname" : "math:fact", "signature" : "($number as integer) as integer", "description" : " Returns the factorial of a number.<p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"/>\n Borrowed from excel module.\n", "summary" : "<p> Returns the factorial of a number.</p>", "annotation_str" : "", "annotations" : [  ], "updating" : false, "parameters" : [ { "name" : "number", "type" : "integer", "occurrence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> The non-negative number you want the factorial of.</div>" } ], "returns" : { "type" : "integer", "description" : "Returns the factorial of a number. The factorial of a number is equal to 1*2*3*...* number." }, "errors" : [ "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">math:INVALID_ARGUMENT if the number is smaller than zero</xqdoc:error>" ] }, { "isDocumented" : true, "arity" : 1, "name" : "factdouble", "qname" : "math:factdouble", "signature" : "($number as integer) as integer", "description" : " Returns the double factorial of a number.<p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"/>\n Computes the double factorial of n as n(n-2)(n-4)...<p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"/>\n Borrowed from excel module.\n", "summary" : "<p> Returns the double factorial of a number.</p>", "annotation_str" : "", "annotations" : [  ], "updating" : false, "parameters" : [ { "name" : "number", "type" : "integer", "occurrence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> The positive integer value.</div>" } ], "returns" : { "type" : "integer", "description" : "The result as integer." }, "errors" : [ "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">math:INVALID_ARGUMENT if the number is negative.</xqdoc:error>" ] }, { "isDocumented" : true, "arity" : 2, "name" : "floor", "qname" : "math:floor", "signature" : "($number as double, $significance as double) as double", "description" : " Rounds number down, toward zero, to the nearest multiple of significance.<p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"/>\n Significance must have the same sign as number.\n Borrowed from excel module.\n", "summary" : "<p> Rounds number down, toward zero, to the nearest multiple of significance.</p>", "annotation_str" : "", "annotations" : [  ], "updating" : false, "parameters" : [ { "name" : "number", "type" : "double", "occurrence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> The value you want to round.</div>" }, { "name" : "significance", "type" : "double", "occurrence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> The multiple to which you want to round.</div>" } ], "returns" : { "type" : "double", "description" : "The rounded value as numeric type." }, "errors" : [ "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">math:INVALID_ARGUMENT if significance is zero or it doesn't have the same sign as number.</xqdoc:error>" ] }, { "isDocumented" : true, "arity" : 2, "name" : "fmod", "qname" : "math:fmod", "signature" : "($x as double, $y as double) as double external", "description" : " Function performing the modulo operation between the two arguments.\n", "summary" : "<p> Function performing the modulo operation between the two arguments.</p>", "annotation_str" : "", "annotations" : [  ], "updating" : false, "parameters" : [ { "name" : "x", "type" : "double", "occurrence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> the x</div>" }, { "name" : "y", "type" : "double", "occurrence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> the y</div>" } ], "returns" : { "type" : "double", "description" : "The remainder of x/y." }, "errors" : [  ] }, { "isDocumented" : true, "arity" : 1, "name" : "frexp", "qname" : "math:frexp", "signature" : "($arg as double) as double+ external", "description" : " Returns the argument split as mantissa and exponent.<p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"/>\n The recombining formula is (mantissa * 2^exponent).\n", "summary" : "<p> Returns the argument split as mantissa and exponent.</p>", "annotation_str" : "", "annotations" : [  ], "updating" : false, "parameters" : [ { "name" : "arg", "type" : "double", "occurrence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> the double to be split.</div>" } ], "returns" : { "type" : "double+", "description" : "A sequence of two doubles (mantissa, exponent)" }, "errors" : [  ] }, { "isDocumented" : true, "arity" : 1, "name" : "gcd", "qname" : "math:gcd", "signature" : "($numbers as integer+) as integer", "description" : " Returns the greatest common divisor GCD of a sequence of integers.<p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"/>\n The sequence can have one or more positive integers.<p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"/>\n Borrowed from excel module.\n", "summary" : "<p> Returns the greatest common divisor GCD of a sequence of integers.</p>", "annotation_str" : "", "annotations" : [  ], "updating" : false, "parameters" : [ { "name" : "numbers", "type" : "integer", "occurrence" : "+", "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> The sequence of positive integers.</div>" } ], "returns" : { "type" : "integer", "description" : "The GCD as integer." }, "errors" : [ "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">math:INVALID_ARGUMENT if any number is smaller than zero.</xqdoc:error>" ] }, { "isDocumented" : true, "arity" : 1, "name" : "int", "qname" : "math:int", "signature" : "($number as double) as integer", "description" : " Rounds a number down to the nearest integer.<p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"/>\n Positive numbers are rounded toward zero, negative numbers are rounded away from zero.<p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"/>\n Borrowed from excel module.\n", "summary" : "<p> Rounds a number down to the nearest integer.</p>", "annotation_str" : "", "annotations" : [  ], "updating" : false, "parameters" : [ { "name" : "number", "type" : "double", "occurrence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> The value to be rounded.</div>" } ], "returns" : { "type" : "integer", "description" : "The rounded integer." }, "errors" : [  ] }, { "isDocumented" : true, "arity" : 1, "name" : "is-a-number", "qname" : "math:is-a-number", "signature" : "($value as anyAtomicType) as boolean", "description" : " Checks if the anyAtomicType argument is actually a numeric type\n or can be converted to numeric.<p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"/>\n Borrowed from excel module.\n", "summary" : "<p> Checks if the anyAtomicType argument is actually a numeric type\n or can be converted to numeric.</p>", "annotation_str" : "", "annotations" : [  ], "updating" : false, "parameters" : [ { "name" : "value", "type" : "anyAtomicType", "occurrence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> Parameter to be checked.</div>" } ], "returns" : { "type" : "boolean", "description" : "true if the value can be casted to numeric." }, "errors" : [  ] }, { "isDocumented" : true, "arity" : 1, "name" : "is_inf", "qname" : "math:is_inf", "signature" : "($arg as double) as boolean external", "description" : " Checks if the double value is positive or negative infinite.\n", "summary" : "<p> Checks if the double value is positive or negative infinite.</p>", "annotation_str" : "", "annotations" : [  ], "updating" : false, "parameters" : [ { "name" : "arg", "type" : "double", "occurrence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> the double to be checked</div>" } ], "returns" : { "type" : "boolean", "description" : "boolean true if argument is pos INF or neg INF" }, "errors" : [  ] }, { "isDocumented" : true, "arity" : 1, "name" : "is_nan", "qname" : "math:is_nan", "signature" : "($arg as double) as boolean external", "description" : " Checks if the double value is Not a Number (NaN).\n", "summary" : "<p> Checks if the double value is Not a Number (NaN).</p>", "annotation_str" : "", "annotations" : [  ], "updating" : false, "parameters" : [ { "name" : "arg", "type" : "double", "occurrence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> the arg</div>" } ], "returns" : { "type" : "boolean", "description" : "boolean true if the double is NaN" }, "errors" : [  ] }, { "isDocumented" : true, "arity" : 2, "name" : "large", "qname" : "math:large", "signature" : "($numbers as double+, $k as integer) as double", "description" : " Returns the k-th largest value in a data set. <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"/>\n If n is the number of data points in a range,\n   then LARGE(array,1) returns the largest value,\n   and LARGE(array,n) returns the smallest value.<p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"/>\n Borrowed from excel module.<br xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"/>\n", "summary" : "<p> Returns the k-th largest value in a data set.</p>", "annotation_str" : "", "annotations" : [  ], "updating" : false, "parameters" : [ { "name" : "numbers", "type" : "double", "occurrence" : "+", "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> the sequence of numbers The sequence can be of any length, from 1 up.</div>" }, { "name" : "k", "type" : "integer", "occurrence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> the position of largest value, with value from 1 to count of values</div>" } ], "returns" : { "type" : "double", "description" : "The k-th largest value as numeric type" }, "errors" : [ "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">math:INVALID_ARGUMENT if the sequence is empty or k is not a value between 1 and the size of the sequence</xqdoc:error>" ] }, { "isDocumented" : true, "arity" : 1, "name" : "lcm", "qname" : "math:lcm", "signature" : "($numbers as integer+) as integer", "description" : " Returns the least common multiple of integers.<p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"/>\n LCM for two numbers is computed by multiplying them and dividing with GCD.\n The function is applied recursively replacing the first two numbers in the sequence with their LCM.<p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"/>\n Borrowed from excel module.\n", "summary" : "<p> Returns the least common multiple of integers.</p>", "annotation_str" : "", "annotations" : [  ], "updating" : false, "parameters" : [ { "name" : "numbers", "type" : "integer", "occurrence" : "+", "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> The sequence of one or more positive integers.</div>" } ], "returns" : { "type" : "integer", "description" : "The LCM as integer." }, "errors" : [ "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">math:INVALID_ARGUMENT if any number is smaller than zero.</xqdoc:error>" ] }, { "isDocumented" : true, "arity" : 2, "name" : "ldexp", "qname" : "math:ldexp", "signature" : "($x as double, $i as integer) as double external", "description" : " Computes a real number from the mantissa and exponent.<p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"/>\n The formula is (x * 2^i).\n", "summary" : "<p> Computes a real number from the mantissa and exponent.</p>", "annotation_str" : "", "annotations" : [  ], "updating" : false, "parameters" : [ { "name" : "x", "type" : "double", "occurrence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> the mantissa</div>" }, { "name" : "i", "type" : "integer", "occurrence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> the exponent</div>" } ], "returns" : { "type" : "double", "description" : "the computed real number" }, "errors" : [  ] }, { "isDocumented" : true, "arity" : 1, "name" : "median", "qname" : "math:median", "signature" : "($numbers as double*) as double", "description" : " Returns the median of the given numbers. <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"/>\n The median is the number in the middle of a set of numbers.\n Half the numbers have values that are greater than the median,\n and half the numbers have values that are less than the median. <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"/>\n Borrowed from excel module.\n", "summary" : "<p> Returns the median of the given numbers.</p>", "annotation_str" : "", "annotations" : [  ], "updating" : false, "parameters" : [ { "name" : "numbers", "type" : "double", "occurrence" : "*", "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> the sequence of numbers, of any length</div>" } ], "returns" : { "type" : "double", "description" : "for odd count of numbers return the number in the middle of the sorted sequence. For even count of numbers return the average of the two numbers in the middle." }, "errors" : [  ] }, { "isDocumented" : true, "arity" : 2, "name" : "mod", "qname" : "math:mod", "signature" : "($number as double, $divisor as double) as double", "description" : " Returns the remainder after number is divided by divisor.<p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"/>\n The result has the same sign as divisor.<p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"/>\n Borrowed from excel module.\n", "summary" : "<p> Returns the remainder after number is divided by divisor.</p>", "annotation_str" : "", "annotations" : [  ], "updating" : false, "parameters" : [ { "name" : "number", "type" : "double", "occurrence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> The number for which you want to find the remainder.</div>" }, { "name" : "divisor", "type" : "double", "occurrence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> The number by which you want to divide number. This cannot be zero.</div>" } ], "returns" : { "type" : "double", "description" : "The remainder from division as numeric type." }, "errors" : [ "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">math:DIVIDE_BY_0 if divisor is zero after casting to numeric.</xqdoc:error>" ] }, { "isDocumented" : true, "arity" : 1, "name" : "mode", "qname" : "math:mode", "signature" : "($numbers as double*) as double", "description" : " Returns the most frequently occurring, or repetitive, value in a sequence.<p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"/>\n Borrowed from excel module.\n", "summary" : "<p> Returns the most frequently occurring, or repetitive, value in a sequence.</p>", "annotation_str" : "", "annotations" : [  ], "updating" : false, "parameters" : [ { "name" : "numbers", "type" : "double", "occurrence" : "*", "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> the sequence of numbers, of any length</div>" } ], "returns" : { "type" : "double", "description" : "The most occuring number" }, "errors" : [ "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">math:INVALID_INPUT if there are no duplicate numbers</xqdoc:error>" ] }, { "isDocumented" : true, "arity" : 1, "name" : "modf", "qname" : "math:modf", "signature" : "($arg as double) as double+ external", "description" : " Splits a floating-point value into fractional and integer parts.<p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"/>\n Both the fraction and integer keep the original sign of the value.\n", "summary" : "<p> Splits a floating-point value into fractional and integer parts.</p>", "annotation_str" : "", "annotations" : [  ], "updating" : false, "parameters" : [ { "name" : "arg", "type" : "double", "occurrence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> the double to be split.</div>" } ], "returns" : { "type" : "double+", "description" : "A sequence of two doubles (fraction, integer)" }, "errors" : [  ] }, { "isDocumented" : true, "arity" : 2, "name" : "mround", "qname" : "math:mround", "signature" : "($number as decimal, $multiple as double) as double", "description" : " Returns a number rounded to the desired multiple.<p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"/>\n MROUND rounds up, away from zero, if the remainder of dividing number by multiple\n is greater than or equal to half the value of multiple.\n MROUND is computed through math:floor function.<p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"/>\n Borrowed from excel module.\n", "summary" : "<p> Returns a number rounded to the desired multiple.</p>", "annotation_str" : "", "annotations" : [  ], "updating" : false, "parameters" : [ { "name" : "number", "type" : "decimal", "occurrence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> The value to round,</div>" }, { "name" : "multiple", "type" : "double", "occurrence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> The multiple to which you want to round number.</div>" } ], "returns" : { "type" : "double", "description" : "The rounded number up to the desired multiple." }, "errors" : [  ] }, { "isDocumented" : true, "arity" : 1, "name" : "odd", "qname" : "math:odd", "signature" : "($number as double) as integer", "description" : " Returns number rounded up to the nearest odd integer, away from zero.<p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"/>\n Borrowed from excel module.\n", "summary" : "<p> Returns number rounded up to the nearest odd integer, away from zero.</p>", "annotation_str" : "", "annotations" : [  ], "updating" : false, "parameters" : [ { "name" : "number", "type" : "double", "occurrence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> The value to round.</div>" } ], "returns" : { "type" : "integer", "description" : "The odd integer." }, "errors" : [  ] }, { "isDocumented" : true, "arity" : 2, "name" : "percentile", "qname" : "math:percentile", "signature" : "($numbers as double*, $k_at as double) as double", "description" : " Returns the k-th percentile of values in a sequence.<p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"/>\n If k is not a multiple of 1/(n - 1),\n   PERCENTILE interpolates to determine the value at the k-th percentile.\n The function is computed by (max-min)*k + min<p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"/>\n Borrowed from excel module.\n", "summary" : "<p> Returns the k-th percentile of values in a sequence.</p>", "annotation_str" : "", "annotations" : [  ], "updating" : false, "parameters" : [ { "name" : "numbers", "type" : "double", "occurrence" : "*", "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> the sequence of numbers, of any length</div>" }, { "name" : "k_at", "type" : "double", "occurrence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> the percentile, with value between 0 .. 1 inclusive</div>" } ], "returns" : { "type" : "double", "description" : "The computed percentile" }, "errors" : [ "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">math:INVALID_ARGUMENT if percentile is not between 0 .. 1</xqdoc:error>" ] }, { "isDocumented" : true, "arity" : 2, "name" : "percentrank", "qname" : "math:percentrank", "signature" : "($numbers as double*, $x as double) as double", "description" : " Returns the rank of a value in a data set as a percentage of the data set.<p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"/>\n If x does not match one of the values in array,\n   PERCENTRANK interpolates to return the correct percentage rank. <br xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"/>\n The formula is uses: (RANK - 1) / (size - 1) .<p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"/>\n Borrowed from excel module.\n", "summary" : "<p> Returns the rank of a value in a data set as a percentage of the data set.</p>", "annotation_str" : "", "annotations" : [  ], "updating" : false, "parameters" : [ { "name" : "numbers", "type" : "double", "occurrence" : "*", "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> the sequence of numbers. The sequence can be of any length, from 1 up.</div>" }, { "name" : "x", "type" : "double", "occurrence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> is the value for which you want to know the rank</div>" } ], "returns" : { "type" : "double", "description" : "The percentage of rank." }, "errors" : [ "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">math:INVALID_ARGUMENT if the sequence is zero length</xqdoc:error>" ] }, { "isDocumented" : true, "arity" : 3, "name" : "prob", "qname" : "math:prob", "signature" : "($x_range as double+, $prob_range as double+, $range_lower_limit as double) as double", "description" : " This is the same as math:prob#4, only that upper_limit is not specified.<p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"/>\n The probability is computed only for range_lower_limit.<p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"/>\n Borrowed from excel module.\n", "summary" : "<p> This is the same as math:prob#4, only that upper_limit is not specified.</p>", "annotation_str" : "", "annotations" : [  ], "updating" : false, "parameters" : [ { "name" : "x_range", "type" : "double", "occurrence" : "+", "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> is the range of numeric values of x with which there are associated probabilities. This does not need to be ordered.</div>" }, { "name" : "prob_range", "type" : "double", "occurrence" : "+", "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> is a set of probabilities associated with values in x_range.</div>" }, { "name" : "range_lower_limit", "type" : "double", "occurrence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> is the value for which you want a probability.</div>" } ], "returns" : { "type" : "double", "description" : "The probability of the range_lower_limit value" }, "errors" : [ "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">math:INVALID_ARGUMENT if any probability is not between 0 and 1</xqdoc:error>", "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">math:INVALID_ARGUMENT if the sum of probabilities is not equal to 1</xqdoc:error>", "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">math:INVALID_ARGUMENT if x_range and prob_range do not have the same number of values</xqdoc:error>" ] }, { "isDocumented" : true, "arity" : 4, "name" : "prob", "qname" : "math:prob", "signature" : "($x_range as double+, $prob_range as double+, $range_lower_limit as double, $upper_limit as double) as double", "description" : " Returns the probability that values in a range are between two limits.<p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"/>\n Borrowed from excel module.\n", "summary" : "<p> Returns the probability that values in a range are between two limits.</p>", "annotation_str" : "", "annotations" : [  ], "updating" : false, "parameters" : [ { "name" : "x_range", "type" : "double", "occurrence" : "+", "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> is the range of numeric values of x with which there are associated probabilities. This does not need to be ordered.</div>" }, { "name" : "prob_range", "type" : "double", "occurrence" : "+", "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> is a set of probabilities associated with values in x_range.</div>" }, { "name" : "range_lower_limit", "type" : "double", "occurrence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> is the lower bound on the value for which you want a probability.</div>" }, { "name" : "upper_limit", "type" : "double", "occurrence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> is the upper bound on the value for which you want a probability.</div>" } ], "returns" : { "type" : "double", "description" : "The probability of the entire range" }, "errors" : [ "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">math:INVALID_ARGUMENT if any probability is not between 0 and 1</xqdoc:error>", "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">math:INVALID_ARGUMENT if the sum of probabilities is not equal to 1</xqdoc:error>", "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">math:INVALID_ARGUMENT if x_range and prob_range do not have the same number of values</xqdoc:error>" ] }, { "isDocumented" : true, "arity" : 1, "name" : "product", "qname" : "math:product", "signature" : "($numbers as double*) as double", "description" : " Multiplies all the numbers given as arguments and returns the product.<p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"/>\n Borrowed from excel module.\n", "summary" : "<p> Multiplies all the numbers given as arguments and returns the product.</p>", "annotation_str" : "", "annotations" : [  ], "updating" : false, "parameters" : [ { "name" : "numbers", "type" : "double", "occurrence" : "*", "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> The sequence of arguments convertible to numeric types. The sequence can be of any length.</div>" } ], "returns" : { "type" : "double", "description" : "The multiplication result as numeric type." }, "errors" : [  ] }, { "isDocumented" : true, "arity" : 2, "name" : "quartile", "qname" : "math:quartile", "signature" : "($numbers as double*, $quart as integer) as double", "description" : " Returns the quartile of a data set. <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"/>\n Borrowed from excel module.\n", "summary" : "<p> Returns the quartile of a data set.</p>", "annotation_str" : "", "annotations" : [  ], "updating" : false, "parameters" : [ { "name" : "numbers", "type" : "double", "occurrence" : "*", "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> sequence of numbers. The sequence can be of any length, from 1 up.</div>" }, { "name" : "quart", "type" : "integer", "occurrence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> <dl>one of the values 0, 1, 2, 3, 4 with meaning: <dt>0</dt> <dd> compute minimum value</dd> <dt>1</dt> <dd> compute first quartile (25th percentile)</dd> <dt>2</dt> <dd> compute median value (50th percentile)</dd> <dt>3</dt> <dd> compute third quartile (75th percentile)</dd> <dt>4</dt> <dd> compute maximum value</dd></dl></div>" } ], "returns" : { "type" : "double", "description" : "the computed quartile, as numeric type" }, "errors" : [ "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">math:INVALID_ARGUMENT if the sequence is zero length or $quart is not one of the values 0,1,3,4</xqdoc:error>" ] }, { "isDocumented" : true, "arity" : 2, "name" : "quotient", "qname" : "math:quotient", "signature" : "($numerator as double, $denominator as double) as integer", "description" : " Returns the integer portion of a division.<p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"/>\n Borrowed from excel module.\n", "summary" : "<p> Returns the integer portion of a division.</p>", "annotation_str" : "", "annotations" : [  ], "updating" : false, "parameters" : [ { "name" : "numerator", "type" : "double", "occurrence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> The divider.</div>" }, { "name" : "denominator", "type" : "double", "occurrence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> The divisor. It cannot be zero.</div>" } ], "returns" : { "type" : "integer", "description" : "The result value as numeric type." }, "errors" : [ "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">math:DIVIDE_BY_0 if denominator casted as numeric type has value zero.</xqdoc:error>" ] }, { "isDocumented" : true, "arity" : 1, "name" : "rad-to-deg", "qname" : "math:rad-to-deg", "signature" : "($rad as double) as double", "description" : " Convert angle from radians to degrees. <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"/>\n", "summary" : "<p> Convert angle from radians to degrees.</p>", "annotation_str" : "", "annotations" : [  ], "updating" : false, "parameters" : [ { "name" : "rad", "type" : "double", "occurrence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> value in radians</div>" } ], "returns" : { "type" : "double", "description" : "value in degrees (-360, 360)" }, "errors" : [  ] }, { "isDocumented" : true, "arity" : 2, "name" : "rank", "qname" : "math:rank", "signature" : "($x as double, $numbers as double*) as double", "description" : " This RANK function is same as the above, only that $order_ascending is set by default to false.<p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"/>\n Borrowed from excel module.\n", "summary" : "<p> This RANK function is same as the above, only that $order_ascending is set by default to false.</p>", "annotation_str" : "", "annotations" : [  ], "updating" : false, "parameters" : [ { "name" : "x", "type" : "double", "occurrence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> The number whose rank you want to find.</div>" }, { "name" : "numbers", "type" : "double", "occurrence" : "*", "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> the sequence of numbers. The sequence can be of any length.</div>" } ], "returns" : { "type" : "double", "description" : "The rank of $x." }, "errors" : [  ] }, { "isDocumented" : true, "arity" : 3, "name" : "rank", "qname" : "math:rank", "signature" : "($x as double, $numbers as double*, $order_ascending as boolean) as double", "description" : " Returns the rank of a number in a list of numbers. <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"/>\n The rank of a number is its size relative to other values in a list.\n (If you were to sort the list, the rank of the number would be its position.)\n RANK gives duplicate numbers the same rank.<p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"/>\n Borrowed from excel module.\n", "summary" : "<p> Returns the rank of a number in a list of numbers.</p>", "annotation_str" : "", "annotations" : [  ], "updating" : false, "parameters" : [ { "name" : "x", "type" : "double", "occurrence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> The number whose rank you want to find.</div>" }, { "name" : "numbers", "type" : "double", "occurrence" : "*", "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> The sequence of numbers. The sequence can be of any length.</div>" }, { "name" : "order_ascending", "type" : "boolean", "occurrence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> <dl>A boolean having the meaning: <dt>false</dt><dd>then rank the number as if the sequence was sorted in descending order.</dd> <dt>true</dt> <dd>then rank the number as if the sequence was sorted in ascending order.</dd></dl></div>" } ], "returns" : { "type" : "double", "description" : "The rank of $x." }, "errors" : [  ] }, { "isDocumented" : true, "arity" : 1, "name" : "roman", "qname" : "math:roman", "signature" : "($number as integer) as string", "description" : " Converts an Arabic numeral to roman, as text.<p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"/>\n Only the classic format is supported (out of all formats Excel requires).\n M is the largest digit, it represents 1000.\n Numbers bigger than 2000 will be represented by a sequence of \"M\".\n D = 500, C = 100, L = 50, X = 10, V = 5, I = 1.<p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"/>\n Borrowed from excel module.\n", "summary" : "<p> Converts an Arabic numeral to roman, as text.</p>", "annotation_str" : "", "annotations" : [  ], "updating" : false, "parameters" : [ { "name" : "number", "type" : "integer", "occurrence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> A positive integer.</div>" } ], "returns" : { "type" : "string", "description" : "The roman string representation." }, "errors" : [ "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">math:INVALID_ARGUMENT if the input integer is negative</xqdoc:error>" ] }, { "isDocumented" : true, "arity" : 2, "name" : "round", "qname" : "math:round", "signature" : "($number as double, $precision as integer) as double", "description" : " Rounds a number to a specified number of digits.<p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"/>\n If precision is greater than 0 (zero), then number is rounded\n to the specified number of decimal places.\n If num_digits is 0, then number is rounded to the nearest integer.\n If num_digits is less than 0, then number is rounded to the left of the decimal point.\n The 0.5 is rounded away from zero. <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"/>\n Borrowed from excel module.\n", "summary" : "<p> Rounds a number to a specified number of digits.</p>", "annotation_str" : "", "annotations" : [  ], "updating" : false, "parameters" : [ { "name" : "number", "type" : "double", "occurrence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> The number to round.</div>" }, { "name" : "precision", "type" : "integer", "occurrence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> The number of decimal places to keep.</div>" } ], "returns" : { "type" : "double", "description" : "The rounded number as numeric type." }, "errors" : [  ] }, { "isDocumented" : true, "arity" : 2, "name" : "rounddown", "qname" : "math:rounddown", "signature" : "($number as double, $precision as integer) as double", "description" : " Rounds a number down, toward zero.<p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"/>\n If num_digits is greater than 0 (zero), then number is rounded down\n to the specified number of decimal places.\n If num_digits is 0, then number is rounded down to the nearest integer.\n If num_digits is less than 0, then number is rounded down to the left of the decimal point. <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"/>\n Borrowed from excel module.\n", "summary" : "<p> Rounds a number down, toward zero.</p>", "annotation_str" : "", "annotations" : [  ], "updating" : false, "parameters" : [ { "name" : "number", "type" : "double", "occurrence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> The number to round</div>" }, { "name" : "precision", "type" : "integer", "occurrence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> The number of decimal places to keep.</div>" } ], "returns" : { "type" : "double", "description" : "the truncated number toward zero, as numeric type." }, "errors" : [  ] }, { "isDocumented" : true, "arity" : 2, "name" : "roundup", "qname" : "math:roundup", "signature" : "($number as double, $precision as integer) as double", "description" : " Rounds a number up, away from 0 (zero).<p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"/>\n If num_digits is greater than 0 (zero), then number is rounded down\n to the specified number of decimal places.\n If num_digits is 0, then number is rounded down to the nearest integer.\n If num_digits is less than 0, then number is rounded down to the left of the decimal point. <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"/>\n Borrowed from excel module.\n", "summary" : "<p> Rounds a number up, away from 0 (zero).</p>", "annotation_str" : "", "annotations" : [  ], "updating" : false, "parameters" : [ { "name" : "number", "type" : "double", "occurrence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> The number to round</div>" }, { "name" : "precision", "type" : "integer", "occurrence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> The number of decimal places to keep.</div>" } ], "returns" : { "type" : "double", "description" : "The truncated number away from zero, as numeric type." }, "errors" : [  ] }, { "isDocumented" : true, "arity" : 1, "name" : "sign", "qname" : "math:sign", "signature" : "($number as double) as integer", "description" : " Determines the sign of a number. <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"/>\n Returns 1 if the number is positive, zero (0) if the number is 0,\n and -1 if the number is negative.<p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"/>\n Borrowed from excel module.\n", "summary" : "<p> Determines the sign of a number.</p>", "annotation_str" : "", "annotations" : [  ], "updating" : false, "parameters" : [ { "name" : "number", "type" : "double", "occurrence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> The argument</div>" } ], "returns" : { "type" : "integer", "description" : "The sign as (-1, 0, 1)." }, "errors" : [  ] }, { "isDocumented" : true, "arity" : 1, "name" : "sinh", "qname" : "math:sinh", "signature" : "($arg as double) as double external", "description" : " Calculate the hyperbolic sine.\n", "summary" : "<p> Calculate the hyperbolic sine.</p>", "annotation_str" : "", "annotations" : [  ], "updating" : false, "parameters" : [ { "name" : "arg", "type" : "double", "occurrence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> the arg</div>" } ], "returns" : { "type" : "double", "description" : "the result of sinh(arg)" }, "errors" : [  ] }, { "isDocumented" : true, "arity" : 2, "name" : "slope", "qname" : "math:slope", "signature" : "($known_y as double+, $known_x as double+) as double", "description" : " Returns the slope of the linear regression line through data points in known_y's and known_x's.<p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"/>\n The slope is the vertical distance divided by the horizontal distance between\n   any two points on the line, which is the rate of change along the regression line.\n It computes the formula:<p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"/>\n sum((x - average_x)(y - average_y)) / sum((x - average_x)^2)<p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"/>\n where average_x and average_y are computed with AVERAGE function.<p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"/>\n Borrowed from excel module.\n", "summary" : "<p> Returns the slope of the linear regression line through data points in known_y's and known_x's.</p>", "annotation_str" : "", "annotations" : [  ], "updating" : false, "parameters" : [ { "name" : "known_y", "type" : "double", "occurrence" : "+", "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> the sequence of y numbers. The sequence can be of any length, from 1 up.</div>" }, { "name" : "known_x", "type" : "double", "occurrence" : "+", "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> the sequence of x numbers. The sequence can be of any length, from 1 up.</div>" } ], "returns" : { "type" : "double", "description" : "The slope value, as numeric type" }, "errors" : [ "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">math:INVALID_INPUT if there are different numbers of x's and y's or if the sequence is empty</xqdoc:error>", "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">math:DIVIDE_BY_0 if all x's are equal</xqdoc:error>" ] }, { "isDocumented" : true, "arity" : 2, "name" : "small", "qname" : "math:small", "signature" : "($numbers as double*, $k as integer) as double", "description" : " This function computes the k-th smallest value in a data set. <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"/>\n Use this function to return values with a particular relative standing in a data set.\n If n is the number of data points in array, SMALL(array,1) equals the smallest value,\n   and SMALL(array,n) equals the largest value.\n Borrowed from excel module.\n", "summary" : "<p> This function computes the k-th smallest value in a data set.</p>", "annotation_str" : "", "annotations" : [  ], "updating" : false, "parameters" : [ { "name" : "numbers", "type" : "double", "occurrence" : "*", "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> A sequence of numbers. The sequence can be of any length, from 1 up.</div>" }, { "name" : "k", "type" : "integer", "occurrence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> The position (from the smallest) in the sequence of data to return. Must have value between 1 and size of sequence.</div>" } ], "returns" : { "type" : "double", "description" : "The k-th smallest value of $numbers." }, "errors" : [ "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">math:INVALID_ARGUMENT if the sequence is zero length or $k is not a value between 1 and the size of sequence.</xqdoc:error>" ] }, { "isDocumented" : true, "arity" : 1, "name" : "sort-numbers", "qname" : "math:sort-numbers", "signature" : "($numbers as double*) as double*", "description" : " Sorts a sequence of numbers or arguments castable to numeric.<p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"/>\n It first casts all arguments to numeric and then sorts ascending.<p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"/>\n Helper function.<br xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"/>\n Borrowed from excel module.\n", "summary" : "<p> Sorts a sequence of numbers or arguments castable to numeric.</p>", "annotation_str" : "", "annotations" : [  ], "updating" : false, "parameters" : [ { "name" : "numbers", "type" : "double", "occurrence" : "*", "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> The sequence of arguments castable to numeric.</div>" } ], "returns" : { "type" : "double*", "description" : "The sorted sequence as numeric types." }, "errors" : [  ] }, { "isDocumented" : true, "arity" : 3, "name" : "standardize", "qname" : "math:standardize", "signature" : "($x as double, $mean as double, $standard_dev as double) as double", "description" : " Returns a normalized value from a distribution characterized by mean and standard_dev.<p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"/>\n The formula is (x - mean) / standard_dev .<p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"/>\n Borrowed from excel module.\n", "summary" : "<p> Returns a normalized value from a distribution characterized by mean and standard_dev.</p>", "annotation_str" : "", "annotations" : [  ], "updating" : false, "parameters" : [ { "name" : "x", "type" : "double", "occurrence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> is the value you want to normalize</div>" }, { "name" : "mean", "type" : "double", "occurrence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> is the arithmetic mean of the distribution.</div>" }, { "name" : "standard_dev", "type" : "double", "occurrence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> is the standard deviation of the distribution.</div>" } ], "returns" : { "type" : "double", "description" : "The normalized x, as numeric type" }, "errors" : [ "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">math:INVALID_ARGUMENT if standard_dev is a value smaller than zero or equal</xqdoc:error>" ] }, { "isDocumented" : true, "arity" : 1, "name" : "stdev", "qname" : "math:stdev", "signature" : "($numbers as double+) as double", "description" : " Estimates standard deviation based on a sample. <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"/>\n The standard deviation is a measure of how widely values are dispersed\n   from the average value (the mean).\n It is computed with formula:\n sqrt( sum((x-average_x)^2) / (n-1) )    = sqrt ( VAR(numbers) )<p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"/>\n Borrowed from excel module.\n", "summary" : "<p> Estimates standard deviation based on a sample.</p>", "annotation_str" : "", "annotations" : [  ], "updating" : false, "parameters" : [ { "name" : "numbers", "type" : "double", "occurrence" : "+", "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> the sequence of numbers The sequence can be of any length, from 1 up.</div>" } ], "returns" : { "type" : "double", "description" : "the standard deviation, as numeric type" }, "errors" : [  ] }, { "isDocumented" : true, "arity" : 1, "name" : "stdeva", "qname" : "math:stdeva", "signature" : "($numbers as double+) as double", "description" : " Estimates standard deviation based on a sample. <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"/>\n The standard deviation is a measure of how widely values are dispersed\n   from the average value (the mean).\n It is computed with formula:\n sqrt( sum((x-average_x)^2) / (n-1) )    = sqrt ( VARA(numbers) )<p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"/>\n Borrowed from excel module.\n", "summary" : "<p> Estimates standard deviation based on a sample.</p>", "annotation_str" : "", "annotations" : [  ], "updating" : false, "parameters" : [ { "name" : "numbers", "type" : "double", "occurrence" : "+", "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> the sequence of numbers. The sequence can be of any length, from 1 up.</div>" } ], "returns" : { "type" : "double", "description" : "the standard deviation, as numeric type" }, "errors" : [  ] }, { "isDocumented" : true, "arity" : 1, "name" : "stdevp", "qname" : "math:stdevp", "signature" : "($numbers as double+) as double", "description" : " Calculates standard deviation based on the entire population given as arguments. <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"/>\n The standard deviation is a measure of how widely values are dispersed from\n   the average value (the mean).\n It is computed with formula:\n sqrt( sum((x-average_x)^2) / n )    = sqrt ( VARP(numbers) )<p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"/>\n Borrowed from excel module.\n", "summary" : "<p> Calculates standard deviation based on the entire population given as arguments.</p>", "annotation_str" : "", "annotations" : [  ], "updating" : false, "parameters" : [ { "name" : "numbers", "type" : "double", "occurrence" : "+", "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> the sequence of numbers or values castable to numeric The sequence can be of any length, from 1 up.</div>" } ], "returns" : { "type" : "double", "description" : "the standard deviation, as numeric type" }, "errors" : [  ] }, { "isDocumented" : true, "arity" : 1, "name" : "stdevpa", "qname" : "math:stdevpa", "signature" : "($numbers as double+) as double", "description" : " Calculates standard deviation based on the entire population given as arguments. <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"/>\n The standard deviation is a measure of how widely values are dispersed from\n   the average value (the mean).\n It is computed with formula:\n sqrt( sum((x-average_x)^2) / n )    = sqrt ( VARPA(numbers) )<p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"/>\n Borrowed from excel module.\n", "summary" : "<p> Calculates standard deviation based on the entire population given as arguments.</p>", "annotation_str" : "", "annotations" : [  ], "updating" : false, "parameters" : [ { "name" : "numbers", "type" : "double", "occurrence" : "+", "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> the sequence of numbers or values castable to numeric The sequence can be of any length, from 1 up.</div>" } ], "returns" : { "type" : "double", "description" : "the standard deviation, as numeric type" }, "errors" : [  ] }, { "isDocumented" : true, "arity" : 2, "name" : "subtotal", "qname" : "math:subtotal", "signature" : "($function_num as integer, $numbers as double*) as double", "description" : " Returns a subtotal in a sequence of numbers.<p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"/>\n The function applied is given by $function_num.<p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"/>\n Borrowed from excel module.\n", "summary" : "<p> Returns a subtotal in a sequence of numbers.</p>", "annotation_str" : "", "annotations" : [  ], "updating" : false, "parameters" : [ { "name" : "function_num", "type" : "integer", "occurrence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> <dl>defines the function to be applied on sequence values. The possible values are: <dt>1 or 101</dt> <dd> AVERAGE</dd> <dt>2 or 102</dt> <dd> COUNT</dd> <dt>3 or 103</dt> <dd> COUNTA</dd> <dt>4 or 104</dt> <dd> MAX</dd> <dt>5 or 105</dt> <dd> MIN</dd> <dt>6 or 106</dt> <dd> PRODUCT</dd> <dt>7 or 107</dt> <dd> STDEV</dd> <dt>8 or 108</dt> <dd> STDEVP</dd> <dt>9 or 109</dt> <dd> SUM</dd> <dt>10 or 110</dt> <dd> VAR</dd> <dt>11 or 111</dt> <dd> VARP</dd></dl> In this implementation there is no difference between x and 10x.<br/></div>" }, { "name" : "numbers", "type" : "double", "occurrence" : "*", "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> the sequence of numbers. The sequence can be of any length.</div>" } ], "returns" : { "type" : "double", "description" : "The function result, as numeric type" }, "errors" : [ "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">* depends on the function called</xqdoc:error>", "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">math:INVALID_ARGUMENT if $function_num is not a value between 1 .. 11 or 101 .. 111</xqdoc:error>" ] }, { "isDocumented" : true, "arity" : 2, "name" : "sumproduct", "qname" : "math:sumproduct", "signature" : "($array1 as double*, $array2 as double*) as double", "description" : " Multiplies the elements on the same position in each sequence\n and sums up the results.<p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"/>\n Borrowed from excel module.\n", "summary" : "<p> Multiplies the elements on the same position in each sequence\n and sums up the results.</p>", "annotation_str" : "", "annotations" : [  ], "updating" : false, "parameters" : [ { "name" : "array1", "type" : "double", "occurrence" : "*", "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> the sequences of numbers</div>" }, { "name" : "array2", "type" : "double", "occurrence" : "*", "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> the sequences of numbers</div>" } ], "returns" : { "type" : "double", "description" : "the sum of products" }, "errors" : [  ] }, { "isDocumented" : true, "arity" : 1, "name" : "sumsq", "qname" : "math:sumsq", "signature" : "($numbers as double+) as double", "description" : " Returns the sum of the squares of the arguments.<p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"/>\n It uses the sumproduct function.<p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"/>\n Borrowed from excel module.\n", "summary" : "<p> Returns the sum of the squares of the arguments.</p>", "annotation_str" : "", "annotations" : [  ], "updating" : false, "parameters" : [ { "name" : "numbers", "type" : "double", "occurrence" : "+", "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> the sequence of one or more numbers</div>" } ], "returns" : { "type" : "double", "description" : "the sum of squared values, as numeric type" }, "errors" : [  ] }, { "isDocumented" : true, "arity" : 1, "name" : "tanh", "qname" : "math:tanh", "signature" : "($arg as double) as double external", "description" : " Calculate the hyperbolic tangent.\n", "summary" : "<p> Calculate the hyperbolic tangent.</p>", "annotation_str" : "", "annotations" : [  ], "updating" : false, "parameters" : [ { "name" : "arg", "type" : "double", "occurrence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> the arg</div>" } ], "returns" : { "type" : "double", "description" : "the result of tanh(arg)" }, "errors" : [  ] }, { "isDocumented" : true, "arity" : 1, "name" : "trunc", "qname" : "math:trunc", "signature" : "($number as double) as integer", "description" : " Truncates a number to an integer by removing the fractional part of the number.<p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"/>\n Borrowed from excel module.\n", "summary" : "<p> Truncates a number to an integer by removing the fractional part of the number.</p>", "annotation_str" : "", "annotations" : [  ], "updating" : false, "parameters" : [ { "name" : "number", "type" : "double", "occurrence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> The argument .</div>" } ], "returns" : { "type" : "integer", "description" : "The integer value." }, "errors" : [  ] }, { "isDocumented" : true, "arity" : 2, "name" : "trunc", "qname" : "math:trunc", "signature" : "($number as double, $precision as integer) as double", "description" : " Truncates a number down to precision.<p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"/>\n This behaves exactly like rounddown.<p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"/>\n Borrowed from excel module.\n", "summary" : "<p> Truncates a number down to precision.</p>", "annotation_str" : "", "annotations" : [  ], "updating" : false, "parameters" : [ { "name" : "number", "type" : "double", "occurrence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> The argument castable to numeric type.</div>" }, { "name" : "precision", "type" : "integer", "occurrence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> The number of decimal places to keep .</div>" } ], "returns" : { "type" : "double", "description" : "The integer value." }, "errors" : [  ] }, { "isDocumented" : true, "arity" : 1, "name" : "var", "qname" : "math:var", "signature" : "($numbers as double+) as double", "description" : " Estimates variance based on a sample.<p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"/>\n The formula is sum(x - average_x)^2 / (n - 1).\n average_x is computed with AVERAGE function.\n n is the count of numbers from the sequence, excluding empty values.<p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"/>\n Borrowed from excel module.\n", "summary" : "<p> Estimates variance based on a sample.</p>", "annotation_str" : "", "annotations" : [  ], "updating" : false, "parameters" : [ { "name" : "numbers", "type" : "double", "occurrence" : "+", "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> the sequence of numbers. The sequence can be of any length, from 1 up.</div>" } ], "returns" : { "type" : "double", "description" : "The variance, as numeric type" }, "errors" : [  ] }, { "isDocumented" : true, "arity" : 1, "name" : "vara", "qname" : "math:vara", "signature" : "($numbers as double+) as double", "description" : " Estimates variance based on a sample.<p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"/>\n The formula is sum(x - average_x)^2 / (n - 1).\n average_x is computed with AVERAGE function.\n n is the size of sequence, including empty values.<p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"/>\n Borrowed from excel module.\n", "summary" : "<p> Estimates variance based on a sample.</p>", "annotation_str" : "", "annotations" : [  ], "updating" : false, "parameters" : [ { "name" : "numbers", "type" : "double", "occurrence" : "+", "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> the sequence of numbers. The sequence can be of any length, from 1 up.</div>" } ], "returns" : { "type" : "double", "description" : "The variance, as numeric type" }, "errors" : [  ] }, { "isDocumented" : true, "arity" : 1, "name" : "varp", "qname" : "math:varp", "signature" : "($numbers as double+) as double", "description" : " Calculates variance based on the entire population.<p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"/>\n The formula is sum(x - average_x)^2 / n.\n average_x is computed with AVERAGE function.\n n is the count of numbers from the sequence, excluding empty values.<p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"/>\n Borrowed from excel module.<br xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"/>\n", "summary" : "<p> Calculates variance based on the entire population.</p>", "annotation_str" : "", "annotations" : [  ], "updating" : false, "parameters" : [ { "name" : "numbers", "type" : "double", "occurrence" : "+", "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> the sequence of numbers. The sequence can be of any length, from 1 up.</div>" } ], "returns" : { "type" : "double", "description" : "The variance, as numeric type" }, "errors" : [  ] }, { "isDocumented" : true, "arity" : 1, "name" : "varpa", "qname" : "math:varpa", "signature" : "($numbers as double+) as double", "description" : " Calculates variance based on the entire population.<p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"/>\n The formula is sum(x - average_x)^2 / n.\n average_x is computed with AVERAGE function.\n n is the size of sequence, including empty values.<p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"/>\n Borrowed from excel module.\n", "summary" : "<p> Calculates variance based on the entire population.</p>", "annotation_str" : "", "annotations" : [  ], "updating" : false, "parameters" : [ { "name" : "numbers", "type" : "double", "occurrence" : "+", "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> the sequence of numbers. The sequence can be of any length, from 1 up.</div>" } ], "returns" : { "type" : "double", "description" : "The variance, as numeric type" }, "errors" : [  ] } ], "variables" : [  ] }, "http://www.zorba-xquery.com/modules/oauth/error" : { "ns" : "http://www.zorba-xquery.com/modules/oauth/error", "description" : " Module that defines the errors raised in Oauth modules.\n", "sees" : [  ], "authors" : [ "<xqdoc:author xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">Stephanie Russell</xqdoc:author>" ], "version" : null, "encoding" : "utf-8", "namespaces" : [ { "uri" : "http://www.zorba-xquery.com/modules/oauth/error", "prefix" : "oerr" }, { "uri" : "http://zorba.io/options/versioning", "prefix" : "ver" } ], "functions" : [  ], "variables" : [ { "name" : "oerr:errNS", "type" : "xs:string", "description" : " Errors namespace URI.\n" }, { "name" : "oerr:OC001", "type" : "xs:QName", "description" : " xs:QName with namespace URI=\"http://www.zorba-xquery.com/modules/oauth/errors\" and local name 'OC001'. This signing method is not implemented yet.\n" }, { "name" : "oerr:OC002", "type" : "xs:QName", "description" : " xs:QName with namespace URI=\"http://www.zorba-xquery.com/modules/oauth/errors\" and local name 'OC002'. This signing method is not supported.\n" }, { "name" : "oerr:OC003", "type" : "xs:QName", "description" : " xs:QName with namespace URI=\"http://www.zorba-xquery.com/modules/oauth/errors\" and local name 'OC003'. Http 401 error.\n" }, { "name" : "oerr:OC004", "type" : "xs:QName", "description" : " xs:QName with namespace URI=\"http://www.zorba-xquery.com/modules/oauth/errors\" and local name 'OC004'. Http 500 error.\n" }, { "name" : "oerr:OC005", "type" : "xs:QName", "description" : " xs:QName with namespace URI=\"http://www.zorba-xquery.com/modules/oauth/errors\" and local name 'OC004'. Http 500 error.\n" } ] }, "http://jsoniq.org/functions" : { "ns" : "http://jsoniq.org/functions", "description" : " This module contains all of the functions defined by the JSONiq\n specification (see http://jsoniq.org/).\n <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">The module is always imported so you do not need to import it explicitly.\n Also, you do not need to fully qualify a function to invoke it.</p>\n", "sees" : [  ], "authors" : [ "<xqdoc:author xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">Markos Zaharioudakis, Matthias Brantner, Ghislain Fourny</xqdoc:author>" ], "version" : null, "encoding" : "utf-8", "namespaces" : [ { "uri" : "http://www.w3.org/2005/xqt-errors", "prefix" : "err" }, { "uri" : "http://jsoniq.org/errors", "prefix" : "jerr" }, { "uri" : "http://jsoniq.org/functions", "prefix" : "jn" }, { "uri" : "http://jsoniq.org/types", "prefix" : "js" }, { "uri" : "http://zorba.io/modules/schema", "prefix" : "schema" }, { "uri" : "http://zorba.io/options/versioning", "prefix" : "ver" } ], "functions" : [ { "isDocumented" : true, "arity" : 1, "name" : "decode-from-roundtrip", "qname" : "jn:decode-from-roundtrip", "signature" : "($items as item()*) as item()* external", "description" : " This function decodes non-JSON types previously encoded with\n jn:encode-for-roundtrip.\n Calling this version of the function is equivalent to calling the\n 2 argument version of the function with the second argument\n   { \"prefix\" : \"Q{http://jsoniq.org/roundtrip}\" }\n", "summary" : "<p> This function decodes non-JSON types previously encoded with\n jn:encode-for-roundtrip.</p>", "annotation_str" : "", "annotations" : [  ], "updating" : false, "parameters" : [ { "name" : "items", "type" : "item()", "occurrence" : "*", "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> the items to be decoded.</div>" } ], "returns" : { "type" : "item()*", "description" : "the decoded items." }, "errors" : [  ] }, { "isDocumented" : true, "arity" : 2, "name" : "decode-from-roundtrip", "qname" : "jn:decode-from-roundtrip", "signature" : "($items as item()*, $options as object()) as item()* external", "description" : " This function decodes non-JSON types previously encoded with\n jn:encode-for-roundtrip.\n The $options parameter contains options for the decoding process.\n Currently the only supported option is \"prefix\". It specifies the prefix\n that determines if this function decodes an item.\n Example:\n   jn:decode-from-roundtrip(\n     { \"nan\" : { \"pre-type\" : \"double\", \"pre-value\" : \"NaN\" } },\n     { \"prefix\" : \"pre-\" }\n   )\n returns the same instance that would be constructed by\n   { \"nan\" : double(\"NaN\") }\n So\n   let $decoded := jn:decode-from-roundtrip(\n           { \"nan\" : { \"pre-type\" : \"double\", \"pre-value\" : \"NaN\" } },\n           { \"prefix\" : \"pre-\" }\n       )\n   let $nan := $decoded(\"nan\")\n   return\n       ($nan instance of double, $nan)\n returns\n   true NaN\n", "summary" : "<p> This function decodes non-JSON types previously encoded with\n jn:encode-for-roundtrip.</p>", "annotation_str" : "", "annotations" : [  ], "updating" : false, "parameters" : [ { "name" : "items", "type" : "item()", "occurrence" : "*", "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> the items to be decoded.</div>" }, { "name" : "options", "type" : "object()", "occurrence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> the decoding options.</div>" } ], "returns" : { "type" : "item()*", "description" : "the decoded items." }, "errors" : [ "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">jerr:JNTY0023 if $options(\"prefix\") is not a string</xqdoc:error>" ] }, { "isDocumented" : true, "arity" : 1, "name" : "encode-for-roundtrip", "qname" : "jn:encode-for-roundtrip", "signature" : "($items as item()*) as item()* external", "description" : " This function recursively encodes non-JSON types in such a way that they\n can be serialized as JSON while keeping roundtrip capability.\n", "summary" : "<p> This function recursively encodes non-JSON types in such a way that they\n can be serialized as JSON while keeping roundtrip capability.</p>", "annotation_str" : "", "annotations" : [  ], "updating" : false, "parameters" : [ { "name" : "items", "type" : "item()", "occurrence" : "*", "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> the items to be encoded.</div>" } ], "returns" : { "type" : "item()*", "description" : "the encoded items." }, "errors" : [  ] }, { "isDocumented" : true, "arity" : 2, "name" : "encode-for-roundtrip", "qname" : "jn:encode-for-roundtrip", "signature" : "($items as item()*, $options as object()) as item()* external", "description" : " This function recursively encodes non-JSON types in such a way that they\n can be serialized as JSON while keeping roundtrip capability.\n Example:\n   jn:encode-for-roundtrip(\n     { \"nan\" : double(\"NaN\") },\n     { \"prefix\" : \"pre-\" }\n   )\n returns\n   { \"nan\" : { \"pre-type\" : \"double\", \"pre-value\" : \"NaN\" } }\n", "summary" : "<p> This function recursively encodes non-JSON types in such a way that they\n can be serialized as JSON while keeping roundtrip capability.</p>", "annotation_str" : "", "annotations" : [  ], "updating" : false, "parameters" : [ { "name" : "items", "type" : "item()", "occurrence" : "*", "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> the items to be encoded.</div>" }, { "name" : "options", "type" : "object()", "occurrence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> the encoding options.</div>" } ], "returns" : { "type" : "item()*", "description" : "the encoded items." }, "errors" : [ "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">jerr:JNTY0023 if $options(\"prefix\") is not a string</xqdoc:error>" ] }, { "isDocumented" : true, "arity" : 1, "name" : "flatten", "qname" : "jn:flatten", "signature" : "($items as item()*) as item()* external", "description" : " For each item in the given sequence, this function returns the item itself,\n if it is not an array, or a sequence of items \"flattened-out\" from the array.\n Flattening an array means replacing the array with its members, and recursively\n flattening any arrays in the members sequence.\n Note: The function is equivalent to\n   define function jn:flatten($args as item()*)\n   {\n     for $arg in args\n     return\n       if ($arg instance of array())\n       then\n         for $value in $arg[]\n         return\n           if ($value instance of array())\n           then jn:flatten($value[])\n           else $value\n       else\n         $arg\n   };\n", "summary" : "<p> For each item in the given sequence, this function returns the item itself,\n if it is not an array, or a sequence of items \"flattened-out\" from the array.</p>", "annotation_str" : "", "annotations" : [  ], "updating" : false, "parameters" : [ { "name" : "items", "type" : "item()", "occurrence" : "*", "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> A sequence of items</div>" } ], "returns" : { "type" : "item()*", "description" : "The flattened-out items of the arrays in $items." }, "errors" : [  ] }, { "isDocumented" : true, "arity" : 1, "name" : "keys", "qname" : "jn:keys", "signature" : "($o as item()*) as string* external", "description" : " Returns the set of keys belonging to the objects found inside a given\n sequence of items. The keys are returned in an implementation-defined\n order. Duplicate keys are eliminated.\n", "summary" : "<p> Returns the set of keys belonging to the objects found inside a given\n sequence of items.</p>", "annotation_str" : "", "annotations" : [  ], "updating" : false, "parameters" : [ { "name" : "o", "type" : "item()", "occurrence" : "*", "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> A sequence of items. Only object items are actually processed; items of any other kind are simply skipped.</div>" } ], "returns" : { "type" : "string*", "description" : "The distinct keys of the objects in the input sequence." }, "errors" : [  ] }, { "isDocumented" : true, "arity" : 1, "name" : "members", "qname" : "jn:members", "signature" : "($a as item()*) as item()* external", "description" : " Returns the items belonging to the arrays found inside a given sequence\n of items. The items are returned in an implementation-defined order.\n", "summary" : "<p> Returns the items belonging to the arrays found inside a given sequence\n of items.</p>", "annotation_str" : "", "annotations" : [  ], "updating" : false, "parameters" : [ { "name" : "a", "type" : "item()", "occurrence" : "*", "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> A sequence of items. Only array items are actually processed; items of any other kind are simply skipped.</div>" } ], "returns" : { "type" : "item()*", "description" : "The members of the arrays in the input sequence." }, "errors" : [  ] }, { "isDocumented" : true, "arity" : 0, "name" : "null", "qname" : "jn:null", "signature" : "() as js:null external", "description" : " Returns the JSON null.\n", "summary" : "<p> Returns the JSON null.</p>", "annotation_str" : "", "annotations" : [  ], "updating" : false, "parameters" : [  ], "returns" : { "type" : "js:null", "description" : "The JSON null." }, "errors" : [  ] }, { "isDocumented" : true, "arity" : 1, "name" : "parse-json", "qname" : "jn:parse-json", "signature" : "($j as string?) as json-item()* external", "description" : " This function parses a given string as JSON and returns a sequence\n of Objects or Arrays.\n Please note that this function allows to parse sequences of whitespace\n separated objects and arrays.\n", "summary" : "<p> This function parses a given string as JSON and returns a sequence\n of Objects or Arrays.</p>", "annotation_str" : "", "annotations" : [  ], "updating" : false, "parameters" : [ { "name" : "j", "type" : "string", "occurrence" : "?", "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> A string containing a valid JSON text.</div>" } ], "returns" : { "type" : "json-item()*", "description" : "A sequence of JSON Object or Array item." }, "errors" : [ "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">jerr:JNDY0021 if the given string is not valid JSON.</xqdoc:error>" ] }, { "isDocumented" : true, "arity" : 2, "name" : "parse-json", "qname" : "jn:parse-json", "signature" : "($j as string?, $o as object()) as json-item()* external", "description" : " This function parses a given string as JSON and returns a sequence\n of Objects or Arrays.\n", "summary" : "<p> This function parses a given string as JSON and returns a sequence\n of Objects or Arrays.</p>", "annotation_str" : "", "annotations" : [  ], "updating" : false, "parameters" : [ { "name" : "j", "type" : "string", "occurrence" : "?", "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> A string containing a valid JSON text.</div>" }, { "name" : "o", "type" : "object()", "occurrence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> A JSON object defining options to configure the parser. Allowed options are <ul> <li>jsoniq-multiple-top-level-items: allow parsing of sequences of JSON Objects and Arrays (boolean; default: true)</li> <li>jsoniq-strip-top-level-array: if the top-level JSON item is an array, strip it and return its elements as multiple top-level items (boolean; default: false)</li> </ul></div>" } ], "returns" : { "type" : "json-item()*", "description" : "a sequence of JSON Object or Array item." }, "errors" : [ "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">jerr:JNDY0021 if the given string is not valid JSON or if jsoniq-multiple-top-level-items is false and there is additional content after the first JSON Object or Array.</xqdoc:error>", "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">jerr:JNTY0020 if the value for the option jsoniq-multiple-top-level-items is not of type boolean.</xqdoc:error>" ] }, { "isDocumented" : true, "arity" : 2, "name" : "project", "qname" : "jn:project", "signature" : "($items as item()*, $keys as string*) as item()* external", "description" : " For each item in the given sequence, this function returns the item itself,\n if it is not an object, or its \"projected\" copy if it is an object. Projecting\n an object by a set of keys means creating a new object from the specified pairs\n of the source object. Specifically, for each key in $keys, if the object has a\n pair with that key, then a copy of that pair is included in the new object.\n", "summary" : "<p> For each item in the given sequence, this function returns the item itself,\n if it is not an object, or its \"projected\" copy if it is an object.</p>", "annotation_str" : "", "annotations" : [  ], "updating" : false, "parameters" : [ { "name" : "items", "type" : "item()", "occurrence" : "*", "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> A sequence of items.</div>" }, { "name" : "keys", "type" : "string", "occurrence" : "*", "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> The keys of the pairs to include from each object in $items.</div>" } ], "returns" : { "type" : "item()*", "description" : "The projection of the original sequence." }, "errors" : [  ] }, { "isDocumented" : true, "arity" : 1, "name" : "size", "qname" : "jn:size", "signature" : "($a as array()?) as integer? external", "description" : " Returns the size of a JSON array, or the empty sequence if no array is given.\n The size of an Array is the number of members contained within it.\n", "summary" : "<p> Returns the size of a JSON array, or the empty sequence if no array is given.</p>", "annotation_str" : "", "annotations" : [  ], "updating" : false, "parameters" : [ { "name" : "a", "type" : "array()", "occurrence" : "?", "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">rray A JSON array.</div>" } ], "returns" : { "type" : "integer?", "description" : "The number of items in $array, or the empty sequence if $array is empty." }, "errors" : [  ] }, { "isDocumented" : true, "arity" : 2, "name" : "trim", "qname" : "jn:trim", "signature" : "($items as item()*, $keys as string*) as item()* external", "description" : " For each item in the given sequence, this function returns the item itself,\n if it is not an object, or its \"trimmed\" copy, if it is an object. Trimming\n an object by a set of keys means creating a new object containing all the\n pairs of the source object except the ones whose key appears in the given\n set of keys.\n", "summary" : "<p> For each item in the given sequence, this function returns the item itself,\n if it is not an object, or its \"trimmed\" copy, if it is an object.</p>", "annotation_str" : "", "annotations" : [  ], "updating" : false, "parameters" : [ { "name" : "items", "type" : "item()", "occurrence" : "*", "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> A sequence of items.</div>" }, { "name" : "keys", "type" : "string", "occurrence" : "*", "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> The keys of the pairs to exclude from each object in $items.</div>" } ], "returns" : { "type" : "item()*", "description" : "The trimmed version of the input sequence." }, "errors" : [  ] } ], "variables" : [  ] }, "http://zorba.io/modules/xqdoc" : { "ns" : "http://zorba.io/modules/xqdoc", "description" : " <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">\n The goal of xqDoc is to provide a simple vendor neutral solution for\n documenting XQuery modules, as well as tools to generate a user friendly\n presentation of this documentation and cross referencing information.\n Therefore, xqDoc proposes a new commenting convention that extends the\n currently defined XQuery comment style. This convention is modeled\n after Java's Javadoc commenting style, and provides a simple, uniform\n way to document XQuery source code. You can find more information about\n xqDoc on the website of the <a href=\"http://xqdoc.org/\">xqDoc project</a>.\n This library module provides XQDoc utility functions.\n </p>\n <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">\n Generating a user friendly presentation of the documentation is\n accomplished in the following steps:\n <ol>\n  <li>Module, variable, function, collection, and index declarations need\n      to be commented using the xqDoc commenting conventions. For example,\n      this module contains xqDoc-style comments</li>\n  <li>A xqDoc-enabled processor can parse such documentation and generate\n      a vendor neutral XML document which stores all the information about\n      the code and the comments. Such a document adheres to the xqDoc\n      Schema.</li>\n  <li>The information of an XML document generated by the second step,\n      can be transformed into arbitrary presentation formats\n      (e.g. html).</li>\n </ol>\n </p>\n <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">\n This module implements the first and second step of this process.\n That is, Zorba can parse XQuery modules which are annotated with\n xqDoc-style documentation and generate the vendor neutral\n XML representation.\n </p>\n", "sees" : [ "<xqdoc:see xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"><a href=\"http://xqdoc.org/\" target=\"_blank\">xqDoc specification</a></xqdoc:see>", "<xqdoc:see xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"><a href=\"http://www.zorba-xquery.com/tutorials/xqdoc.html\" target=\"_blank\">xqDoc tutorial with Zorba</a></xqdoc:see>" ], "authors" : [ "<xqdoc:author xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">Gabriel Petrovay</xqdoc:author>" ], "version" : null, "encoding" : "utf-8", "namespaces" : [ { "uri" : "http://zorba.io/annotations", "prefix" : "an" }, { "uri" : "http://www.w3.org/2005/xqt-errors", "prefix" : "err" }, { "uri" : "http://zorba.io/modules/fetch", "prefix" : "fetch" }, { "uri" : "http://zorba.io/modules/xqdoc-options", "prefix" : "opt" }, { "uri" : "http://zorba.io/modules/schema", "prefix" : "schema" }, { "uri" : "http://zorba.io/options/versioning", "prefix" : "ver" }, { "uri" : "http://zorba.io/modules/xqdoc", "prefix" : "xqd" }, { "uri" : "http://zorba.io/errors", "prefix" : "zerr" } ], "functions" : [ { "isDocumented" : true, "arity" : 1, "name" : "xqdoc-content", "qname" : "xqd:xqdoc-content", "signature" : "($module as xs:string) as element(*)", "description" : " Generated the an XQDoc XML document for the module provided\n as parameter to this function.\n", "summary" : "<p> Generated the an XQDoc XML document for the module provided\n as parameter to this function.</p>", "annotation_str" : "", "annotations" : [  ], "updating" : false, "parameters" : [ { "name" : "module", "type" : "xs:string", "occurrence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> The module (as string) for which to generate the XQDoc documentation.</div>" } ], "returns" : { "type" : "element(*)", "description" : "An element according to the xqdoc schema (<tt xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">http://zorba.io/modules/xqdoc.xsd</tt>)." }, "errors" : [ "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">zerr::ZXQD0002 if the xqdoc comments in the module contain invalid XML</xqdoc:error>" ] }, { "isDocumented" : true, "arity" : 2, "name" : "xqdoc-content", "qname" : "xqd:xqdoc-content", "signature" : "($module as xs:string, $options as element(opt:enable)) as element(*)", "description" : " Generated the an XQDoc XML document for the module provided\n as parameter to this function.\n In comparison to the single parameter version, this function does not\n generate XQDoc for all language components. By default, the\n following components are deactivated: XQuery comments, import\n statements, variable declarations, function declarations, collection\n declarations,  and index declarations. The second parameter is used to\n enable the XQDoc generation of those components.\n", "summary" : "<p> Generated the an XQDoc XML document for the module provided\n as parameter to this function.</p>", "annotation_str" : "", "annotations" : [  ], "updating" : false, "parameters" : [ { "name" : "module", "type" : "xs:string", "occurrence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> The module (as string) for which to generate the XQDoc documentation.</div>" }, { "name" : "options", "type" : "element(opt:enable)", "occurrence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> XQDoc generation options, e.g.: <pre> &lt;enable xmlns=\"http://zorba.io/modules/xqdoc-options\" comments=\"true\" functions=\"true\" indexes=\"true\" &gt; </pre></div>" } ], "returns" : { "type" : "element(*)", "description" : "An element according to the xqdoc schema (<tt xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">http://zorba.io/modules/xqdoc.xsd</tt>)." }, "errors" : [ "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">zerr::ZXQD0002 if the xqdoc comments in the module contain invalid XML</xqdoc:error>" ] }, { "isDocumented" : true, "arity" : 1, "name" : "xqdoc", "qname" : "xqd:xqdoc", "signature" : "($module-uri as xs:string) as element(*)", "description" : " Generates an XQDoc XML document for the module located\n at the URI provided as parameter to this function.\n", "summary" : "<p> Generates an XQDoc XML document for the module located\n at the URI provided as parameter to this function.</p>", "annotation_str" : " %an:nondeterministic", "annotations" : [ { "prefix" : "an", "ns" : "http://zorba.io/annotations", "name" : "nondeterministic", "value" : "" } ], "updating" : false, "parameters" : [ { "name" : "module-uri", "type" : "xs:string", "occurrence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> The URL of the module for which to generate XQDoc.</div>" } ], "returns" : { "type" : "element(*)", "description" : "An element according to the xqdoc schema (<tt xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">http://zorba.io/modules/xqdoc.xsd</tt>)." }, "errors" : [ "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">zerr::ZXQD0002 if the xqdoc comments in the module contain invalid XML</xqdoc:error>" ] }, { "isDocumented" : true, "arity" : 2, "name" : "xqdoc", "qname" : "xqd:xqdoc", "signature" : "($module-uri as xs:string, $options as element(opt:enable)) as element(*)", "description" : " Generates an XQDoc XML document for the module located\n at the URI provided as parameter to this function.\n In comparison to the single parameter version, this function does not\n generate XQDoc for all language components. By default, the\n following components are deactivated: XQuery comments, import\n statements, variable declarations, function declarations, collection\n declarations,  and index declarations. The second parameter is used to\n enable the XQDoc generation of those components.\n", "summary" : "<p> Generates an XQDoc XML document for the module located\n at the URI provided as parameter to this function.</p>", "annotation_str" : "", "annotations" : [  ], "updating" : false, "parameters" : [ { "name" : "module-uri", "type" : "xs:string", "occurrence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> The URL of the module for which to generate XQDoc.</div>" }, { "name" : "options", "type" : "element(opt:enable)", "occurrence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> XQDoc generation options, e.g.: <pre> &lt;enable xmlns=\"http://zorba.io/modules/xqdoc-options\" comments=\"true\" functions=\"true\" indexes=\"true\" /&gt; </pre></div>" } ], "returns" : { "type" : "element(*)", "description" : "An element according to the xqdoc schema (<tt xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">http://zorba.io/modules/xqdoc.xsd</tt>)." }, "errors" : [ "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">zerr::ZXQD0002 if the xqdoc comments in the module contain invalid XML</xqdoc:error>" ] } ], "variables" : [  ] }, "http://zorba.io/modules/data-cleaning/character-based-string-similarity" : { "ns" : "http://zorba.io/modules/data-cleaning/character-based-string-similarity", "description" : " <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">This library module provides character-based string similarity functions\n that view strings as sequences of characters, generally computing a similarity score\n that corresponds to the cost of transforming one string into another.\n These functions are particularly useful for matching near duplicate strings\n in the presence of typographical errors. </p>\n <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">The logic contained in this module is not specific to any particular XQuery implementation.</p>\n", "sees" : [  ], "authors" : [ "<xqdoc:author xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">Bruno Martins and Diogo Simões</xqdoc:author>" ], "version" : null, "encoding" : "utf-8", "namespaces" : [ { "uri" : "http://zorba.io/modules/data-cleaning/character-based-string-similarity", "prefix" : "simc" }, { "uri" : "http://zorba.io/options/versioning", "prefix" : "ver" } ], "functions" : [ { "isDocumented" : true, "arity" : 2, "name" : "edit-distance", "qname" : "simc:edit-distance", "signature" : "($s1 as xs:string, $s2 as xs:string) as xs:integer", "description" : " <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">Returns the edit distance between two strings.</p>\n <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"/>\n <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">This distance, also refered to as the Levenshtein distance, is defined as the minimum number\n of edits needed to transform one string into the other, with the allowable edit operations\n being insertion, deletion, or substitution of a single character.</p>\n <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"/>\n <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">Example usage : <pre class=\"ace-static\" ace-mode=\"xquery\">edit-distance(\"FLWOR\", \"FLOWER\")</pre></p>\n <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"/>\n <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">The function invocation in the example above returns : <pre class=\"ace-static\" ace-mode=\"xquery\">2</pre></p>\n", "summary" : "<p>  Returns the edit distance between two strings.</p>", "annotation_str" : "", "annotations" : [  ], "updating" : false, "parameters" : [ { "name" : "s1", "type" : "xs:string", "occurrence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> The first string.</div>" }, { "name" : "s2", "type" : "xs:string", "occurrence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> The second string.</div>" } ], "returns" : { "type" : "xs:integer", "description" : "The edit distance between the two strings." }, "errors" : [  ] }, { "isDocumented" : true, "arity" : 4, "name" : "jaro-winkler", "qname" : "simc:jaro-winkler", "signature" : "($s1 as xs:string, $s2 as xs:string, $prefix as xs:integer, $fact as xs:double) as xs:double", "description" : " <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">Returns the Jaro-Winkler similarity coefficient between two strings.</p>\n <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"/>\n <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">This similarity coefficient corresponds to an extension of the Jaro similarity coefficient that weights or\n penalizes strings based on their similarity at the beginning of the string, up to a given prefix size.</p>\n <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"/>\n <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">Example usage : <pre class=\"ace-static\" ace-mode=\"xquery\">jaro-winkler(\"DWAYNE\", \"DUANE\", 4, 0.1 )</pre></p>\n <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"/>\n <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">The function invocation in the example above returns : <pre class=\"ace-static\" ace-mode=\"xquery\">0.8577777777777778</pre></p>\n", "summary" : "<p>  Returns the Jaro-Winkler similarity coefficient between two strings.</p>", "annotation_str" : "", "annotations" : [  ], "updating" : false, "parameters" : [ { "name" : "s1", "type" : "xs:string", "occurrence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> The first string.</div>" }, { "name" : "s2", "type" : "xs:string", "occurrence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> The second string.</div>" }, { "name" : "prefix", "type" : "xs:integer", "occurrence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> The number of characters to consider when testing for equal prefixes in the strings.</div>" }, { "name" : "fact", "type" : "xs:double", "occurrence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> The weighting factor to consider when the input strings have equal prefixes.</div>" } ], "returns" : { "type" : "xs:double", "description" : "The Jaro-Winkler similarity coefficient between the two strings." }, "errors" : [  ] }, { "isDocumented" : true, "arity" : 2, "name" : "jaro", "qname" : "simc:jaro", "signature" : "($s1 as xs:string, $s2 as xs:string) as xs:double", "description" : " <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">Returns the Jaro similarity coefficient between two strings.</p>\n <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"/>\n <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">This similarity coefficient is based on the number of transposed characters and on a\n weighted sum of the percentage of matched characters held within the strings. The higher\n the Jaro-Winkler value is, the more similar the strings are. The coefficient is\n normalized such that 0 equates to no similarity and 1 is an exact match.</p>\n <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"/>\n <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">Example usage : <pre class=\"ace-static\" ace-mode=\"xquery\">jaro(\"FLWOR Found.\", \"FLWOR Foundation\")</pre></p>\n <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"/>\n <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">The function invocation in the example above returns : <pre class=\"ace-static\" ace-mode=\"xquery\">0.5853174603174603</pre></p>\n", "summary" : "<p>  Returns the Jaro similarity coefficient between two strings.</p>", "annotation_str" : "", "annotations" : [  ], "updating" : false, "parameters" : [ { "name" : "s1", "type" : "xs:string", "occurrence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> The first string.</div>" }, { "name" : "s2", "type" : "xs:string", "occurrence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> The second string.</div>" } ], "returns" : { "type" : "xs:double", "description" : "The Jaro similarity coefficient between the two strings." }, "errors" : [  ] }, { "isDocumented" : true, "arity" : 4, "name" : "needleman-wunsch", "qname" : "simc:needleman-wunsch", "signature" : "($s1 as xs:string, $s2 as xs:string, $score as xs:integer, $penalty as xs:integer) as xs:double", "description" : " <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">Returns the Needleman-Wunsch distance between two strings.</p>\n <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"/>\n <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">The Needleman-Wunsch distance is similar to the basic edit distance metric, adding a\n variable cost adjustment to the cost of a gap (i.e., an insertion or deletion) in the\n distance metric.</p>\n <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"/>\n <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">Example usage : <pre class=\"ace-static\" ace-mode=\"xquery\">needleman-wunsch(\"KAK\", \"KQRK\", 1, 1)</pre></p>\n <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"/>\n <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">The function invocation in the example above returns : <pre class=\"ace-static\" ace-mode=\"xquery\">0</pre></p>\n", "summary" : "<p>  Returns the Needleman-Wunsch distance between two strings.</p>", "annotation_str" : "", "annotations" : [  ], "updating" : false, "parameters" : [ { "name" : "s1", "type" : "xs:string", "occurrence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> The first string.</div>" }, { "name" : "s2", "type" : "xs:string", "occurrence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> The second string.</div>" }, { "name" : "score", "type" : "xs:integer", "occurrence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> The score value.</div>" }, { "name" : "penalty", "type" : "xs:integer", "occurrence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> The penalty value.</div>" } ], "returns" : { "type" : "xs:double", "description" : "The Needleman-Wunsch distance between the two strings." }, "errors" : [  ] }, { "isDocumented" : true, "arity" : 4, "name" : "smith-waterman", "qname" : "simc:smith-waterman", "signature" : "($s1 as xs:string, $s2 as xs:string, $score as xs:integer, $penalty as xs:integer) as xs:double", "description" : " <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">Returns the Smith-Waterman distance between two strings.</p>\n <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"/>\n <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">Example usage : <pre class=\"ace-static\" ace-mode=\"xquery\">smith-waterman(\"ACACACTA\", \"AGCACACA\", 2, 1)</pre></p>\n <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"/>\n <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">The function invocation in the example above returns : <pre class=\"ace-static\" ace-mode=\"xquery\">12</pre></p>\n", "summary" : "<p>  Returns the Smith-Waterman distance between two strings.</p>", "annotation_str" : "", "annotations" : [  ], "updating" : false, "parameters" : [ { "name" : "s1", "type" : "xs:string", "occurrence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> The first string.</div>" }, { "name" : "s2", "type" : "xs:string", "occurrence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> The second string.</div>" }, { "name" : "score", "type" : "xs:integer", "occurrence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> The score value.</div>" }, { "name" : "penalty", "type" : "xs:integer", "occurrence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> The penalty value.</div>" } ], "returns" : { "type" : "xs:double", "description" : "The Smith-Waterman distance between the two strings." }, "errors" : [  ] } ], "variables" : [  ] }, "http://expath.org/ns/error" : { "ns" : "http://expath.org/ns/error", "description" : " This module defines all errors for the http-client module.\n", "sees" : [  ], "authors" : [ "<xqdoc:author xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">Markus Pilman</xqdoc:author>" ], "version" : null, "encoding" : "utf-8", "namespaces" : [ { "uri" : "http://expath.org/ns/error", "prefix" : "err" } ], "functions" : [  ], "variables" : [ { "name" : "err:errNS", "type" : "xs:string", "description" : " Error namespace URI.\n" }, { "name" : "err:HC001", "type" : "xs:QName", "description" : " An HTTP error occurred.\n" }, { "name" : "err:HC002", "type" : "xs:QName", "description" : " Error parsing the entity content as XML or HTML.\n" }, { "name" : "err:HC003", "type" : "xs:QName", "description" : " With a multipart response, the override-media-type must be either a multipart media type or application/octet-stream.\n" }, { "name" : "err:HC004", "type" : "xs:QName", "description" : " The src attribute on the body element is mutually exclusive with all other attribute (except the media-type).\n" }, { "name" : "err:HC005", "type" : "xs:QName", "description" : " The request element is not valid.\n" }, { "name" : "err:HC006", "type" : "xs:QName", "description" : " A timeout occurred waiting for the response.\n" }, { "name" : "err:HCV01", "type" : "xs:QName", "description" : " This error is not defined in the specification but used by the Zorba implementation.\n It gets thrown when the user gives wrong arguments which are statically correct,\n but make no sense (for example: http:send-request((), ())).\n" }, { "name" : "err:HCV02", "type" : "xs:QName", "description" : " Zorba specific error\n This error is raised if trying to follow a redirect for a POST, PUT, or\n DELETE request\n" } ] }, "http://www.28msec.com/modules/s3" : { "ns" : "http://www.28msec.com/modules/s3", "description" : " <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">This module provides functionality for managing S3 buckets and object.</p>\n <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">It is not possible to access buckets whose names are not DNS-compliant. For\n instance a bucket name which contains uppercase letters or is longer than 63\n characters is not DNS-compliant. For additional details on bucket naming\n conventions refer to\n <a href=\"http://docs.aws.amazon.com/AmazonS3/latest/dev/BucketRestrictions.html\">\n Bucket Restrictions and Limitations</a>.</p>\n <h2 xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">Authentication</h2>\n <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">For each functionality two methods are provided:\n <ul>\n   <li>one which allows to specify the credentials to use, by means of the\n   optional $credentials parameter (named). If the parameter is not specified,\n   the default credentials in the \"S3\" category will be used. If the parameter\n   is specified it must be either a string or an object. If it is a string it\n   will be interpreted as the name of a credentials in the \"S3\" category. If\n   it is an object it must have the following structure:\n   <ul>\n     <li>accessKey: the AWS access key to use (string, mandatory).</li>\n     <li>secretKey: the AWS secret key to use (string, mandatory).</li>\n     <li>useHttps: whether to use secure HTTPS connections or not.\n     (boolean, optional). The default is <code>false</code></li>\n     <li>defaultBucket: the default bucket name (string, optional).</li>\n   </ul>\n   </li>\n   <li>one which does not allow to specify which credentials to use.\n   In this case the default credentials in the \"S3\" category will be used.</li>\n </ul>\n </p>\n <h2 xmlns:xqdoc=\"http://www.xqdoc.org/1.0\" id=\"determinism\">Important Notice Regarding Function Determinism</h2>\n <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">The non side-effecting functions:\n <ul>\n   <li><a href=\"?anchor=list-buckets-0\">list-buckets#0</a></li>\n   <li><a href=\"?anchor=list-buckets-1\">list-buckets#1</a></li>\n   <li><a href=\"?anchor=list-bucket-0\">list-bucket#0</a></li>\n   <li><a href=\"?anchor=list-bucket-1\">list-bucket#1</a></li>\n   <li><a href=\"?anchor=list-bucket-2\">list-bucket#2</a></li>\n   <li><a href=\"?anchor=list-bucket-3\">list-bucket#3</a></li>\n   <li><a href=\"?anchor=list-bucket-versions-0\">list-bucket-versions#0</a></li>\n   <li><a href=\"?anchor=list-bucket-versions-1\">list-bucket-versions#1</a></li>\n   <li><a href=\"?anchor=list-bucket-versions-2\">list-bucket-versions#2</a></li>\n   <li><a href=\"?anchor=list-bucket-versions-3\">list-bucket-versions#3</a></li>\n   <li><a href=\"?anchor=read-text-1\">read-text#1</a></li>\n   <li><a href=\"?anchor=read-text-2\">read-text#2</a></li>\n   <li><a href=\"?anchor=read-binary-1\">read-binary#1</a></li>\n   <li><a href=\"?anchor=read-binary-2\">read-binary#2</a></li>\n   <li><a href=\"?anchor=read-object-1\">read-object#1</a></li>\n   <li><a href=\"?anchor=read-object-2\">read-object#2</a></li>\n   <li><a href=\"?anchor=object-metadata-1\">object-metadata#1</a></li>\n   <li><a href=\"?anchor=object-metadata-2\">object-metadata#2</a></li>\n   <li><a href=\"?anchor=object-torrent-1\">object-torrent#1</a></li>\n   <li><a href=\"?anchor=object-torrent-2\">object-torrent#2</a></li>\n   <li><a href=\"?anchor=object-permissions-1\">object-permissions#1</a></li>\n   <li><a href=\"?anchor=object-permissions-2\">object-permissions#2</a></li>\n </ul>\n are declared deterministic, which means that their results could be cached\n when invoked multiple times with the same arguments in the same query execution.</p>\n <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">To not use cached results you can use the following alternative functions:\n <ul>\n   <li><a href=\"?anchor=list-buckets-nondeterministic-0\">list-buckets-nondeterministic#0</a></li>\n   <li><a href=\"?anchor=list-buckets-nondeterministic-1\">list-buckets-nondeterministic#1</a></li>\n   <li><a href=\"?anchor=list-bucket-nondeterministic-0\">list-bucket-nondeterministic#0</a></li>\n   <li><a href=\"?anchor=list-bucket-nondeterministic-1\">list-bucket-nondeterministic#1</a></li>\n   <li><a href=\"?anchor=list-bucket-nondeterministic-2\">list-bucket-nondeterministic#2</a></li>\n   <li><a href=\"?anchor=list-bucket-nondeterministic-3\">list-bucket-nondeterministic#3</a></li>\n   <li><a href=\"?anchor=list-bucket-versions-nondeterministic-0\">list-bucket-versions-nondeterministic#0</a></li>\n   <li><a href=\"?anchor=list-bucket-versions-nondeterministic-1\">list-bucket-versions-nondeterministic#1</a></li>\n   <li><a href=\"?anchor=list-bucket-versions-nondeterministic-2\">list-bucket-versions-nondeterministic#2</a></li>\n   <li><a href=\"?anchor=list-bucket-versions-nondeterministic-3\">list-bucket-versions-nondeterministic#3</a></li>\n   <li><a href=\"?anchor=read-text-nondeterministic-1\">read-text-nondeterministic#1</a></li>\n   <li><a href=\"?anchor=read-text-nondeterministic-2\">read-text-nondeterministic#2</a></li>\n   <li><a href=\"?anchor=read-binary-nondeterministic-1\">read-binary-nondeterministic#1</a></li>\n   <li><a href=\"?anchor=read-binary-nondeterministic-2\">read-binary-nondeterministic#2</a></li>\n   <li><a href=\"?anchor=read-object-nondeterministic-1\">read-object-nondeterministic#1</a></li>\n   <li><a href=\"?anchor=read-object-nondeterministic-2\">read-object-nondeterministic#2</a></li>\n   <li><a href=\"?anchor=object-metadata-nondeterministic-1\">object-metadata-nondeterministic#1</a></li>\n   <li><a href=\"?anchor=object-metadata-nondeterministic-2\">object-metadata-nondeterministic#2</a></li>\n   <li><a href=\"?anchor=object-torrent-nondeterministic-1\">object-torrent-nondeterministic#1</a></li>\n   <li><a href=\"?anchor=object-torrent-nondeterministic-2\">object-torrent-nondeterministic#2</a></li>\n   <li><a href=\"?anchor=object-permissions-nondeterministic-1\">object-permissions-nondeterministic#1</a></li>\n   <li><a href=\"?anchor=object-permissions-nondeterministic-2\">object-permissions-nondeterministic#2</a></li>\n </ul>\n which have been declared as being non deterministic.</p>\n", "sees" : [  ], "authors" : [ "<xqdoc:author xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">Alexander Kreutz</xqdoc:author>", "<xqdoc:author xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">Federico Cavalieri</xqdoc:author>" ], "version" : null, "encoding" : "utf-8", "namespaces" : [ { "uri" : "http://zorba.io/annotations", "prefix" : "an" }, { "uri" : "http://www.28msec.com/modules/credentials", "prefix" : "credentials" }, { "uri" : "http://www.w3.org/2005/xqt-errors", "prefix" : "err" }, { "uri" : "http://www.zorba-xquery.com/modules/cryptography/hmac", "prefix" : "hmac" }, { "uri" : "http://zorba.io/modules/http-client", "prefix" : "http" }, { "uri" : "http://jsoniq.org/errors", "prefix" : "jerr" }, { "uri" : "http://www.28msec.com/modules/s3", "prefix" : "s3" }, { "uri" : "http://s3.amazonaws.com/doc/2006-03-01/", "prefix" : "s3s" }, { "uri" : "http://www.28msec.com/modules/sleep", "prefix" : "sleep" }, { "uri" : "http://zorba.io/options/versioning", "prefix" : "ver" } ], "functions" : [ { "isDocumented" : true, "arity" : 2, "name" : "copy-object", "qname" : "s3:copy-object", "signature" : "($s3-object-source as item(), $s3-object-target as item()) as item()*", "description" : " <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">Copies an object already stored on s3 into a target bucket using the\n default credentials. If the target object already exists it will be overwritten.</p>\n <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">The source object metadata is copied to the target object, unless new\n metadata is specified. In this case the target object will possess only the\n specified metadata.</p>\n <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">Unless the permissions for the target are specified, the target object will\n have the \"private\" ACL, that is, the owner gets FULL_CONTROL, and no one else\n has access rights.</p>\n <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">The source S3 object is specified through the $s3-object-source parameter.\n Either a string or a JSON object can be used. If a string is specified, it is\n interpreted as key for an object in the default bucket of the default\n credentials. If no default bucket is present in the default credentials, the\n <code>s3:BUCKET</code> error is raised. If a JSON object is used, it must have\n the following structure:\n <ul>\n   <li>key: the object key (string, mandatory).</li>\n   <li>bucket: the bucket name (string, optional). If this field is not present\n   and the default credentials do not have a default bucket, the\n   <code>s3:BUCKET</code> error is raised.</li>\n   <li>version: the object version (string, optional). If versioning is enabled\n   for the specified object and no version is specified the latest version of\n   the object will be copied. If specified, only that particular version of the\n   object will be copied.</li>\n </ul>\n </p>\n <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">The target S3 object is specified through the $s3-object-target parameter.\n Either a string or a JSON object can be used. If a string is specified and the\n default credentials contain a default bucket, the object will be copied in\n the credentials default bucket. Otherwise, the object will be copied in the\n source object bucket. If a JSON object is used, it must have the following\n structure:\n <ul>\n   <li>key: the object key (string, mandatory).</li>\n   <li>bucket: the bucket name (string, optional). If this field is not present\n   and the default credentials contain a default bucket, the object will be\n   copied in the credentials default bucket. Otherwise, the object will be\n   copied in the source object bucket.</li>\n   <li>metadata: an object specifying additional metadata. Each metadata is a\n   name-value pair and is represented as different fields (object, optional).\n   If not specified, the source object metadata will be copied to the target\n   object. Otherwise the target object metadata will be the specified one.</li>\n   <li>reducedRedundancy: whether to use reduced-redundancy or not (bool,\n   optional). Default is false.</li>\n   <li>permission: the permission to set (string, optional). It must be one of\n   \"private\", \"public-read\", \"public-read-write\", \"authenticated-read\",\n   \"bucket-owner-read\", \"bucket-owner-full-control\". For your convenience the\n   following variables can be used: <code>$s3:ACL-GRANT-PRIVATE</code>,\n   <code>$s3:ACL-GRANT-PUBLIC-READ</code>, <code>$s3:ACL-GRANT-PUBLIC-READ-WRITE</code>,\n   <code>$s3:ACL-GRANT-AUTHENTICATED-READ</code>, <code>$s3:ACL-GRANT-BUCKET-OWNER-READ</code>,\n   <code>$s3:ACL-GRANT-BUCKET-OWNER-FULL-CONTROL</code>. If this field is not\n   specified, the \"private\" ACL is used, that is, the owner gets FULL_CONTROL,\n   and no one else has access rights.</li>\n </ul>\n </p>\n <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">Example:\n <pre>\n let $s3-object-source :=\n {\n   \"key\" : \"test.xml\",\n   \"bucket\": \"28msec\"\n }\n let $s3-object-target :=\n {\n   \"key\" : \"test-copy.xml\",\n   \"bucket\": \"28msec\",\n   \"permisstion\": $s3:ACL-GRANT-PUBLIC-READ\n   \"metadata\":\n   {\n     \"author\": \"28msec\"\n   }\n }\n return s3:copy-object($s3-object-source, $s3-object-target)\n </pre>\n </p>\n <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">Example return object:\n <pre>\n {\n   \"sourceVersion\": \"3/L4kqtJlcpXroDTDmJ+rmSpXd3dIbrHY+MTRCxf3vjVBH40Nr8X8gdRQBpUMLUo\",\n   \"version\": \"QUpfdndhfd8438MNFDN93jdnJFkdmqnh893\",\n   \"lastModified\": \"2009-10-28T22:32:00\",\n   \"eTag\": \"\\\"9b2cf535f27731c974343645a3985328\\\"\",\n   \"expiration\": \"expiry-date=\\\"Fri, 21 Dec 2012 00:00:00 GMT\\\", rule-id=\\\"Rule for testfile.txt\\\"\"\n }\n </pre>\n </p>\n <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">The fields in the returned object have the following meanings:\n <ul>\n   <li>sourceVersion: the version of the copied object. When you enable versioning,\n   Amazon S3 generates a random number for objects added to a bucket. The value\n   is UTF-8 encoded and URL ready. When the soruce object is copied in a bucket where\n   versioning has been suspended, the version ID is always null. (string, optional)</li>\n   <li>version: the version of the copied object. When you enable versioning,\n   Amazon S3 generates a random number for objects added to a bucket. The value\n   is UTF-8 encoded and URL ready. When the soruce object is copied in a bucket where\n   versioning has been suspended, the version ID is always null. (string, optional)</li>\n   <li>lastModified: the last modification date of the target object. (dateTime, optional)</li>\n   <li>eTag: the entity tag is a hash of the copeid object. The eTag only reflects\n   changes to the contents of an object, not its metadata. The eTag is determined\n   when an object is created. The eTag returned by this method is a quoted,\n   32-digit hexadecimal string representing the MD5 digest of the object data.\n   For other objects, the eTag may or may not be an MD5 digest of the object data.\n   (string, optional).</li>\n   <li>expiration: if the object expiration is configured (see\n   <a href=\"http://docs.aws.amazon.com/AmazonS3/latest/API/RESTBucketPUTlifecycle.html\">PUT Bucket lifecycle</a>),\n   this field is present. It includes the expiry-date and rule-id key value\n   pairs providing object expiration information. The value of rule-id is URL\n   encoded.(string, optional).</li>\n </ul>\n </p>\n", "summary" : "<p>  Copies an object already stored on s3 into a target bucket using the\n default credentials.</p>", "annotation_str" : " %an:sequential", "annotations" : [ { "prefix" : "an", "ns" : "http://zorba.io/annotations", "name" : "sequential", "value" : "" } ], "updating" : false, "parameters" : [ { "name" : "s3-object-source", "type" : "item()", "occurrence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> The S3 object or object version to copy from.</div>" }, { "name" : "s3-object-target", "type" : "item()", "occurrence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> The S3 object to write to.</div>" } ], "returns" : { "type" : "item()*", "description" : "the S3 copy result." }, "errors" : [ "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">s3:CREDENTIALS if the default S3 credentials cannot be found or are invalid</xqdoc:error>", "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">s3:OBJECT if the object specification is invalid</xqdoc:error>", "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">s3:BUCKET if no bucket has been specified and no default bucket is present in the used credentials</xqdoc:error>", "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">s3:HTTP an HTTP error occurred sending the request to S3</xqdoc:error>", "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">s3:REQUEST S3 refused to execute the request</xqdoc:error>", "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">s3:RESPONSE the response received from S3 cannot be parsed</xqdoc:error>" ] }, { "isDocumented" : true, "arity" : 3, "name" : "copy-object", "qname" : "s3:copy-object", "signature" : "($credentials as item()?, $s3-object-source as item(), $s3-object-target as item()) as object()", "description" : " <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">Copies an object already stored on S3 into a target bucket using the\n specified credentials. If the target object already exists it will be overwritten.</p>\n <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">The source object metadata is copied to the target object, unless new\n metadata is specified. In this case the target object will possess only the\n specified metadata.</p>\n <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">Unless the permissions for the target are specified, the target object will\n have the \"private\" ACL, that is, the owner gets FULL_CONTROL, and no one else\n has access rights.</p>\n <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">The source S3 object is specified through the $s3-object-source parameter.\n Either a string or a JSON object can be used. If a string is specified, it is\n interpreted as key for an object in the default bucket of the specified\n credentials. If no default bucket is present in the specified credentials, the\n <code>s3:BUCKET</code> error is raised. If a JSON object is used, it must have\n the following structure:\n <ul>\n   <li>key: the object key (string, mandatory).</li>\n   <li>bucket: the bucket name (string, optional). If this field is not present\n   and the specified credentials do not have a default bucket, the\n   <code>s3:BUCKET</code> error is raised.</li>\n   <li>version: the object version (string, optional). If versioning is enabled\n   for the specified object and no version is specified the latest version of\n   the object will be copied. If specified, only that particular version of the\n   object will be copied.</li>\n </ul>\n </p>\n <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">The target S3 object is specified through the $s3-object-target parameter.\n Either a string or a JSON object can be used. If a string is specified and the\n specified credentials contain a default bucket, the object will be copied in\n the credentials default bucket. Otherwise, the object will be copied in the\n source object bucket. If a JSON object is used, it must have the following\n structure:\n <ul>\n   <li>key: the object key (string, mandatory).</li>\n   <li>bucket: the bucket name (string, optional). If this field is not present\n   and the specified credentials contain a default bucket, the object will be\n   copied in the credentials default bucket. Otherwise, the object will be\n   copied in the source object bucket.</li>\n   <li>metadata: an object specifying additional metadata. Each metadata is a\n   name-value pair and is represented as different fields (object, optional).\n   If not specified, the source object metadata will be copied to the target\n   object. Otherwise the target object metadata will be the specified one.</li>\n   <li>reducedRedundancy: whether to use reduced-redundancy or not (bool,\n   optional). Default is false.</li>\n   <li>permission: the permission to set (string, optional). It must be one of\n   \"private\", \"public-read\", \"public-read-write\", \"authenticated-read\",\n   \"bucket-owner-read\", \"bucket-owner-full-control\". For your convenience the\n   following variables can be used: <code>$s3:ACL-GRANT-PRIVATE</code>,\n   <code>$s3:ACL-GRANT-PUBLIC-READ</code>, <code>$s3:ACL-GRANT-PUBLIC-READ-WRITE</code>,\n   <code>$s3:ACL-GRANT-AUTHENTICATED-READ</code>, <code>$s3:ACL-GRANT-BUCKET-OWNER-READ</code>,\n   <code>$s3:ACL-GRANT-BUCKET-OWNER-FULL-CONTROL</code>. If this field is not\n   specified, the \"private\" ACL is used, that is, the owner gets FULL_CONTROL,\n   and no one else has access rights.</li>\n </ul>\n </p>\n <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">Example:\n <pre>\n let $s3-object-source :=\n {\n   \"key\" : \"test.xml\",\n   \"bucket\": \"28msec\"\n }\n let $s3-object-target :=\n {\n   \"key\" : \"test-copy.xml\",\n   \"bucket\": \"28msec\",\n   \"permisstion\": $s3:ACL-GRANT-PUBLIC-READ\n   \"metadata\":\n   {\n     \"author\": \"28msec\"\n   }\n }\n return s3:copy-object(\"credentials\", $s3-object-source, $s3-object-target)\n </pre>\n </p>\n <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">Example return object:\n <pre>\n {\n   \"sourceVersion\": \"3/L4kqtJlcpXroDTDmJ+rmSpXd3dIbrHY+MTRCxf3vjVBH40Nr8X8gdRQBpUMLUo\",\n   \"version\": \"QUpfdndhfd8438MNFDN93jdnJFkdmqnh893\",\n   \"lastModified\": \"2009-10-28T22:32:00\",\n   \"eTag\": \"\\\"9b2cf535f27731c974343645a3985328\\\"\",\n   \"expiration\": \"expiry-date=\\\"Fri, 21 Dec 2012 00:00:00 GMT\\\", rule-id=\\\"Rule for testfile.txt\\\"\"\n }\n </pre>\n </p>\n <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">The fields in the returned object have the following meanings:\n <ul>\n   <li>sourceVersion: the version of the copied object. When you enable versioning,\n   Amazon S3 generates a random number for objects added to a bucket. The value\n   is UTF-8 encoded and URL ready. When the soruce object is copied in a bucket where\n   versioning has been suspended, the version ID is always null. (string, optional)</li>\n   <li>version: the version of the copied object. When you enable versioning,\n   Amazon S3 generates a random number for objects added to a bucket. The value\n   is UTF-8 encoded and URL ready. When the soruce object is copied in a bucket where\n   versioning has been suspended, the version ID is always null. (string, optional)</li>\n   <li>lastModified: the last modification date of the target object. (dateTime, optional)</li>\n   <li>eTag: the entity tag is a hash of the copeid object. The eTag only reflects\n   changes to the contents of an object, not its metadata. The eTag is determined\n   when an object is created. The eTag returned by this method is a quoted,\n   32-digit hexadecimal string representing the MD5 digest of the object data.\n   For other objects, the eTag may or may not be an MD5 digest of the object data.\n   (string, optional).</li>\n </ul>\n </p>\n", "summary" : "<p>  Copies an object already stored on S3 into a target bucket using the\n specified credentials.</p>", "annotation_str" : " %an:sequential", "annotations" : [ { "prefix" : "an", "ns" : "http://zorba.io/annotations", "name" : "sequential", "value" : "" } ], "updating" : false, "parameters" : [ { "name" : "credentials", "type" : "item()", "occurrence" : "?", "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> The credentials to use.</div>" }, { "name" : "s3-object-source", "type" : "item()", "occurrence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> The S3 object or object version to copy from.</div>" }, { "name" : "s3-object-target", "type" : "item()", "occurrence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> The S3 object to write to.</div>" } ], "returns" : { "type" : "object()", "description" : "the S3 copy result." }, "errors" : [ "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">s3:CREDENTIALS if the specified S3 credentials cannot be found or are invalid</xqdoc:error>", "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">s3:OBJECT if the object specification is invalid</xqdoc:error>", "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">s3:BUCKET if no bucket has been specified and no default bucket is present in the used credentials</xqdoc:error>", "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">s3:HTTP an HTTP error occurred sending the request to S3</xqdoc:error>", "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">s3:REQUEST S3 refused to execute the request</xqdoc:error>", "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">s3:RESPONSE the response received from S3 cannot be parsed</xqdoc:error>" ] }, { "isDocumented" : true, "arity" : 1, "name" : "create-bucket", "qname" : "s3:create-bucket", "signature" : "($bucket as string) as empty-sequence()", "description" : " <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">Creates a bucket using the default S3 credentials. The bucket owner will\n be the account of the default S3 credentials.</p>\n <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">The bucket is created with the S3 default bucket settings. Specifically,\n it is created in the US Standard region and the default credentials\n account becomes its owner. The bucket ACL permissions are set to \"private\",\n that is, the owner gets FULL_CONTROL, whereas no one else has access rights.\n The bucket name must comply with the following rules:\n <ul>\n   <li>bucket names must be no more than 255 characters long.</li>\n   <li>bucket names must be a combination of uppercase letters, lowercase letters,\n   numbers, periods (.), dashes (-) and underscores (_).</li>\n </ul>\n For more details, refer to the\n <a href=\"http://docs.aws.amazon.com/AmazonS3/latest/dev/BucketRestrictions.html\">\n Amazon S3 Bucket Restrictions</a> page.\n </p>\n <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">If the specified bucket already exists in the US Standard region and has\n the same owner, its permissions settings are reset and its contents are\n preserved. Otherwise, if the specified bucket already exists an s3:REQUEST\n error is raised.</p>\n <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">Example:\n <pre>\n s3:create-bucket(\"28msec\");\n </pre>\n </p>\n", "summary" : "<p>  Creates a bucket using the default S3 credentials.</p>", "annotation_str" : " %an:sequential", "annotations" : [ { "prefix" : "an", "ns" : "http://zorba.io/annotations", "name" : "sequential", "value" : "" } ], "updating" : false, "parameters" : [ { "name" : "bucket", "type" : "string", "occurrence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> The bucket name.</div>" } ], "returns" : { "type" : "empty-sequence()", "description" : "the empty sequence" }, "errors" : [ "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">s3:CREDENTIALS if the default S3 credentials cannot be found or are invalid</xqdoc:error>", "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">s3:HTTP an HTTP error occurred sending the request to S3</xqdoc:error>", "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">s3:REQUEST S3 refused to execute the request</xqdoc:error>" ] }, { "isDocumented" : true, "arity" : 2, "name" : "create-bucket", "qname" : "s3:create-bucket", "signature" : "($credentials as item()?, $bucket as string) as empty-sequence()", "description" : " <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">Creates a bucket using the specified S3 credentials. The bucket owner will\n be the account of the specified S3 credentials.</p>\n <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">The bucket is created with the S3 default bucket settings. Specifically,\n it is created in the US Standard region and the specified credentials\n account becomes its owner. The bucket ACL permissions are set to \"private\",\n that is, the owner gets FULL_CONTROL, whereas no one else has access rights.\n The bucket name must comply with the following rules:\n <ul>\n   <li>bucket names must be no more than 255 characters long.</li>\n   <li>bucket names must be a combination of uppercase letters, lowercase letters,\n   numbers, periods (.), dashes (-) and underscores (_).</li>\n </ul>\n For more details, refer to the\n <a href=\"http://docs.aws.amazon.com/AmazonS3/latest/dev/BucketRestrictions.html\">\n Amazon S3 Bucket Restrictions</a> page.\n </p>\n <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">If the specified bucket already exists in the US Standard region and has\n the same owner, its permissions settings are reset and its contents are\n preserved. Otherwise, if the specified bucket already exists an s3:REQUEST\n error is raised.</p>\n", "summary" : "<p>  Creates a bucket using the specified S3 credentials.</p>", "annotation_str" : " %an:sequential", "annotations" : [ { "prefix" : "an", "ns" : "http://zorba.io/annotations", "name" : "sequential", "value" : "" } ], "updating" : false, "parameters" : [ { "name" : "credentials", "type" : "item()", "occurrence" : "?", "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> The credentials to use.</div>" }, { "name" : "bucket", "type" : "string", "occurrence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> The bucket name.</div>" } ], "returns" : { "type" : "empty-sequence()", "description" : "the empty sequence" }, "errors" : [ "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">s3:CREDENTIALS if the specified S3 credentials cannot be found or are invalid</xqdoc:error>", "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">s3:HTTP an HTTP error occurred sending the request to S3</xqdoc:error>", "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">s3:REQUEST S3 refused to execute the request</xqdoc:error>" ] }, { "isDocumented" : true, "arity" : 1, "name" : "delete-bucket", "qname" : "s3:delete-bucket", "signature" : "($bucket as string) as empty-sequence()", "description" : " <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">Deletes a bucket using the default S3 credentials. The bucket must be owned\n by the account of the default S3 credentials.</p>\n <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">This operation will fail if the deleted bucket is not empty. All objects,\n object versions, and delete markers have to be deleted beforehand using this\n function.</p>\n <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">Example:\n <pre>\n s3:delete-bucket(\"28msec\");\n </pre>\n </p>\n", "summary" : "<p>  Deletes a bucket using the default S3 credentials.</p>", "annotation_str" : " %an:sequential", "annotations" : [ { "prefix" : "an", "ns" : "http://zorba.io/annotations", "name" : "sequential", "value" : "" } ], "updating" : false, "parameters" : [ { "name" : "bucket", "type" : "string", "occurrence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> The bucket name.</div>" } ], "returns" : { "type" : "empty-sequence()", "description" : "the empty sequence" }, "errors" : [ "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">s3:CREDENTIALS if the default S3 credentials cannot be found or are invalid</xqdoc:error>", "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">s3:HTTP an HTTP error occurred sending the request to S3</xqdoc:error>", "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">s3:REQUEST S3 refused to execute the request</xqdoc:error>" ] }, { "isDocumented" : true, "arity" : 2, "name" : "delete-bucket", "qname" : "s3:delete-bucket", "signature" : "($credentials as item()?, $bucket as string) as empty-sequence()", "description" : " <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">Deletes a bucket using the specified S3 credentials. The bucket must be owned\n by the account of the specified S3 credentials.</p>\n <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">This operation will fail if the deleted bucket is not empty. All objects,\n object versions, and delete markers have to be deleted beforehand using this\n function.</p>\n <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">Example:\n <pre>\n s3:delete-bucket(\"credentials\", \"28msec\");\n </pre>\n </p>\n", "summary" : "<p>  Deletes a bucket using the specified S3 credentials.</p>", "annotation_str" : " %an:sequential", "annotations" : [ { "prefix" : "an", "ns" : "http://zorba.io/annotations", "name" : "sequential", "value" : "" } ], "updating" : false, "parameters" : [ { "name" : "credentials", "type" : "item()", "occurrence" : "?", "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> The credentials to use.</div>" }, { "name" : "bucket", "type" : "string", "occurrence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> The bucket name.</div>" } ], "returns" : { "type" : "empty-sequence()", "description" : "the empty sequence" }, "errors" : [ "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">s3:CREDENTIALS if the specified S3 credentials cannot be found or are invalid</xqdoc:error>", "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">s3:HTTP an HTTP error occurred sending the request to S3</xqdoc:error>", "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">s3:REQUEST S3 refused to execute the request</xqdoc:error>" ] }, { "isDocumented" : true, "arity" : 1, "name" : "delete-object", "qname" : "s3:delete-object", "signature" : "($s3-object as item()) as empty-sequence()", "description" : " <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">Deletes an object or a specific object version from a bucket using the\n default S3 credentials.</p>\n <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">The S3 object is specified through the $s3-object parameter. Either a string\n or a JSON object can be used. If a string is specified, it is interpreted as\n key for an object in the default bucket of the default credentials. If no default\n bucket is present in the default credentials, the <code>s3:BUCKET</code> error\n is raised. If a JSON object is used, it must have the following structure:\n <ul>\n   <li>key: the object key (string, mandatory).</li>\n   <li>bucket: the bucket name (string, optional). If this field is not present\n   and the default credentials do not have a default bucket, the\n   <code>s3:BUCKET</code> error is raised.</li>\n   <li>version: the object version (string, optional). If not specified, the\n   null version of the object is removed, if there is one. To remove a specific\n   version, this field must be specified.</li>\n </ul>\n </p>\n <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">If the bucket is versioned a delete marker is inserted for the object. If\n mfa-deletion is enabled you will not be able to delete an object through\n this method. If the specified bucket exists, and the specified object does not\n exist no errors will be raised.</p>\n <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">Example:\n <pre>\n s3:delete-object(\n {\n   \"key\": \"test.xml\",\n   \"bucket\": \"28msec\",\n   \"version\": \"3/L4kqtJlcpXroDTDmJ+rmSpXd3dIbrHY+MTRCxf3vjVBH40Nr8X8gdRQBpUMLUo\"\n });\n </pre>\n </p>\n", "summary" : "<p>  Deletes an object or a specific object version from a bucket using the\n default S3 credentials.</p>", "annotation_str" : " %an:sequential", "annotations" : [ { "prefix" : "an", "ns" : "http://zorba.io/annotations", "name" : "sequential", "value" : "" } ], "updating" : false, "parameters" : [ { "name" : "s3-object", "type" : "item()", "occurrence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> The S3 object or object version to delete.</div>" } ], "returns" : { "type" : "empty-sequence()", "description" : "the empty sequence" }, "errors" : [ "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">s3:CREDENTIALS if the default S3 credentials cannot be found or are invalid</xqdoc:error>", "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">s3:OBJECT if the object specification is invalid</xqdoc:error>", "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">s3:BUCKET if no bucket has been specified and no default bucket is present in the used credentials</xqdoc:error>", "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">s3:HTTP an HTTP error occurred sending the request to S3</xqdoc:error>", "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">s3:REQUEST S3 refused to execute the request</xqdoc:error>", "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">s3:RESPONSE the response received from S3 cannot be parsed</xqdoc:error>" ] }, { "isDocumented" : true, "arity" : 2, "name" : "delete-object", "qname" : "s3:delete-object", "signature" : "($credentials as item()?, $s3-object as item()) as empty-sequence()", "description" : " <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">Deletes an object or a specific object version from a bucket using the\n specified S3 credentials.</p>\n <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">The S3 object is specified through the $s3-object parameter. Either a string\n or a JSON object can be used. If a string is specified, it is interpreted as\n key for an object in the default bucket of the specified credentials. If no default\n bucket is present in the specified credentials, the <code>s3:BUCKET</code> error\n is raised. If a JSON object is used, it must have the following structure:\n <ul>\n   <li>key: the object key (string, mandatory).</li>\n   <li>bucket: the bucket name (string, optional). If this field is not present\n   and the specified credentials do not have a default bucket, the\n   <code>s3:BUCKET</code> error is raised.</li>\n   <li>version: the object version (string, optional). If not specified, the\n   null version of the object is removed, if there is one. To remove a specific\n   version, this field must be specified.</li>\n </ul>\n </p>\n <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">If the bucket is versioned a delete marker is inserted for the object. If\n mfa-deletion is enabled you will not be able to delete an object through\n this method. If the specified bucket exists, and the specified object does not\n exist no errors will be raised.</p>\n <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">Example:\n <pre>\n s3:delete-object(\"credentials\",\n {\n   \"key\": \"test.xml\",\n   \"bucket\": \"28msec\",\n   \"version\": \"3/L4kqtJlcpXroDTDmJ+rmSpXd3dIbrHY+MTRCxf3vjVBH40Nr8X8gdRQBpUMLUo\"\n });\n </pre>\n </p>\n", "summary" : "<p>  Deletes an object or a specific object version from a bucket using the\n specified S3 credentials.</p>", "annotation_str" : " %an:sequential", "annotations" : [ { "prefix" : "an", "ns" : "http://zorba.io/annotations", "name" : "sequential", "value" : "" } ], "updating" : false, "parameters" : [ { "name" : "credentials", "type" : "item()", "occurrence" : "?", "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> The credentials to use.</div>" }, { "name" : "s3-object", "type" : "item()", "occurrence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> The S3 object or object version to delete.</div>" } ], "returns" : { "type" : "empty-sequence()", "description" : "the empty sequence" }, "errors" : [ "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">s3:CREDENTIALS if the specified S3 credentials cannot be found or are invalid</xqdoc:error>", "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">s3:OBJECT if the object specification is invalid</xqdoc:error>", "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">s3:BUCKET if no bucket has been specified and no default bucket is present in the used credentials</xqdoc:error>", "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">s3:HTTP an HTTP error occurred sending the request to S3</xqdoc:error>", "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">s3:REQUEST S3 refused to execute the request</xqdoc:error>", "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">s3:RESPONSE the response received from S3 cannot be parsed</xqdoc:error>" ] }, { "isDocumented" : true, "arity" : 0, "name" : "list-bucket-nondeterministic", "qname" : "s3:list-bucket-nondeterministic", "signature" : "() as object()", "description" : " <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">Lists the objects in the default bucket of the default S3 credentials.</p>\n <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">This function has the same semantics as\n <a href=\"#list-bucket-0\">list-bucket#0</a>,\n but is declared as being non deterministic and thus should only be used when\n result caching is not desired.</p>\n", "summary" : "<p>  Lists the objects in the default bucket of the default S3 credentials.</p>", "annotation_str" : " %an:nondeterministic", "annotations" : [ { "prefix" : "an", "ns" : "http://zorba.io/annotations", "name" : "nondeterministic", "value" : "" } ], "updating" : false, "parameters" : [  ], "returns" : { "type" : "object()", "description" : "the list of objects in the default bucket of the default S3 credentials" }, "errors" : [ "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">s3:CREDENTIALS if the specified S3 credentials cannot be found or are invalid</xqdoc:error>", "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">s3:BUCKET if no default bucket is present in the default S3 credentials</xqdoc:error>", "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">s3:OPTIONS if the specified options are invalid</xqdoc:error>", "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">s3:HTTP an HTTP error occurred sending the request to S3</xqdoc:error>", "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">s3:REQUEST S3 refused to execute the request</xqdoc:error>", "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">s3:RESPONSE the response received from S3 cannot be parsed</xqdoc:error>" ] }, { "isDocumented" : true, "arity" : 1, "name" : "list-bucket-nondeterministic", "qname" : "s3:list-bucket-nondeterministic", "signature" : "($bucket as string?) as object()", "description" : " <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">Lists the objects in a bucket using the default S3 credentials.</p>\n <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">This function has the same semantics as\n <a href=\"#list-bucket-1\">list-bucket#1</a>,\n but is declared as being non deterministic and thus should only be used when\n result caching is not desired.</p>\n", "summary" : "<p>  Lists the objects in a bucket using the default S3 credentials.</p>", "annotation_str" : " %an:nondeterministic", "annotations" : [ { "prefix" : "an", "ns" : "http://zorba.io/annotations", "name" : "nondeterministic", "value" : "" } ], "updating" : false, "parameters" : [ { "name" : "bucket", "type" : "string", "occurrence" : "?", "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> The bucket to list. If the empty sequence is given, the default bucket of the default S3 credentials will be listed.</div>" } ], "returns" : { "type" : "object()", "description" : "the list of the objects in the specified bucket." }, "errors" : [ "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">s3:CREDENTIALS if the specified S3 credentials cannot be found or are invalid</xqdoc:error>", "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">s3:BUCKET if no bucket has been specified and no default bucket is present in the used credentials</xqdoc:error>", "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">s3:OPTIONS if the specified options are invalid</xqdoc:error>", "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">s3:HTTP an HTTP error occurred sending the request to S3</xqdoc:error>", "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">s3:REQUEST S3 refused to execute the request</xqdoc:error>", "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">s3:RESPONSE the response received from S3 cannot be parsed</xqdoc:error>" ] }, { "isDocumented" : true, "arity" : 2, "name" : "list-bucket-nondeterministic", "qname" : "s3:list-bucket-nondeterministic", "signature" : "($bucket as string?, $options as object()?) as object()", "description" : " <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">Lists the objects in a bucket using the default S3 credentials.\n This method allows the specification of additional listing options.</p>\n <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">This function has the same semantics as\n <a href=\"#list-bucket-2\">list-bucket#2</a>,\n but is declared as being non deterministic and thus should only be used when\n result caching is not desired.</p>\n", "summary" : "<p>  Lists the objects in a bucket using the default S3 credentials.</p>", "annotation_str" : " %an:nondeterministic", "annotations" : [ { "prefix" : "an", "ns" : "http://zorba.io/annotations", "name" : "nondeterministic", "value" : "" } ], "updating" : false, "parameters" : [ { "name" : "bucket", "type" : "string", "occurrence" : "?", "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> The bucket to list. If the empty sequence is given, the default bucket of the default S3 credentials will be listed.</div>" }, { "name" : "options", "type" : "object()", "occurrence" : "?", "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> The listing options.</div>" } ], "returns" : { "type" : "object()", "description" : "the list of the object in the specified bucket" }, "errors" : [ "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">s3:CREDENTIALS if the specified S3 credentials cannot be found or are invalid</xqdoc:error>", "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">s3:BUCKET if no bucket has been specified and no default bucket is present in the default credentials</xqdoc:error>", "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">s3:OPTIONS if the specified options are invalid</xqdoc:error>", "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">s3:HTTP an HTTP error occurred sending the request to S3</xqdoc:error>", "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">s3:REQUEST S3 refused to execute the request</xqdoc:error>", "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">s3:RESPONSE the response received from S3 cannot be parsed</xqdoc:error>" ] }, { "isDocumented" : true, "arity" : 3, "name" : "list-bucket-nondeterministic", "qname" : "s3:list-bucket-nondeterministic", "signature" : "($credentials as item()?, $bucket as string?, $options as object()?) as object()", "description" : " <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">Lists the objects in a bucket using the specified credentials.\n This method allows the specification of additional listing options.</p>\n <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">This function has the same semantics as\n <a href=\"#list-bucket-3\">list-bucket#3</a>,\n but is declared as being non deterministic and thus should only be used when\n result caching is not desired.</p>\n", "summary" : "<p>  Lists the objects in a bucket using the specified credentials.</p>", "annotation_str" : " %an:nondeterministic", "annotations" : [ { "prefix" : "an", "ns" : "http://zorba.io/annotations", "name" : "nondeterministic", "value" : "" } ], "updating" : false, "parameters" : [ { "name" : "credentials", "type" : "item()", "occurrence" : "?", "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> The credentials to use.</div>" }, { "name" : "bucket", "type" : "string", "occurrence" : "?", "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> The bucket to list. If the empty sequence is given, the default bucket of the specified credentials will be listed.</div>" }, { "name" : "options", "type" : "object()", "occurrence" : "?", "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> The listing options.</div>" } ], "returns" : { "type" : "object()", "description" : "the list of the object in the specified bucket" }, "errors" : [ "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">s3:CREDENTIALS if the specified S3 credentials cannot be found or are invalid</xqdoc:error>", "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">s3:BUCKET if no bucket has been specified and no default bucket is present in the used credentials</xqdoc:error>", "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">s3:OPTIONS if the specified options are invalid</xqdoc:error>", "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">s3:HTTP an HTTP error occurred sending the request to S3</xqdoc:error>", "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">s3:REQUEST S3 refused to execute the request</xqdoc:error>", "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">s3:RESPONSE the response received from S3 cannot be parsed</xqdoc:error>" ] }, { "isDocumented" : true, "arity" : 0, "name" : "list-bucket-versions-nondeterministic", "qname" : "s3:list-bucket-versions-nondeterministic", "signature" : "() as object()", "description" : " <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">Lists the objects versions in the default bucket of the default S3\n credentials.</p>\n <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">This function has the same semantics as\n <a href=\"#list-bucket-versions-0\">list-bucket-versions#0</a>,\n but is declared as being non deterministic and thus should only be used when\n result caching is not desired.</p>\n", "summary" : "<p>  Lists the objects versions in the default bucket of the default S3\n credentials.</p>", "annotation_str" : " %an:nondeterministic", "annotations" : [ { "prefix" : "an", "ns" : "http://zorba.io/annotations", "name" : "nondeterministic", "value" : "" } ], "updating" : false, "parameters" : [  ], "returns" : { "type" : "object()", "description" : "the list of the object versions in the default bucket of the default S3 credentials" }, "errors" : [ "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">s3:CREDENTIALS if the specified S3 credentials cannot be found or are invalid</xqdoc:error>", "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">s3:BUCKET if no default bucket is present in the default S3 credentials</xqdoc:error>", "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">s3:OPTIONS if the specified options are invalid</xqdoc:error>", "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">s3:HTTP an HTTP error occurred sending the request to S3</xqdoc:error>", "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">s3:REQUEST S3 refused to execute the request</xqdoc:error>", "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">s3:RESPONSE the response received from S3 cannot be parsed</xqdoc:error>" ] }, { "isDocumented" : true, "arity" : 1, "name" : "list-bucket-versions-nondeterministic", "qname" : "s3:list-bucket-versions-nondeterministic", "signature" : "($bucket as string?) as object()", "description" : " <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">Lists the objects versions in a bucket using the default S3 credentials.</p>\n <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">This function has the same semantics as\n <a href=\"#list-bucket-versions-1\">list-bucket-versions#1</a>,\n but is declared as being non deterministic and thus should only be used when\n result caching is not desired.</p>\n", "summary" : "<p>  Lists the objects versions in a bucket using the default S3 credentials.</p>", "annotation_str" : " %an:nondeterministic", "annotations" : [ { "prefix" : "an", "ns" : "http://zorba.io/annotations", "name" : "nondeterministic", "value" : "" } ], "updating" : false, "parameters" : [ { "name" : "bucket", "type" : "string", "occurrence" : "?", "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> The bucket to list. If the empty sequence is given, the default bucket of the default credentials will be listed.</div>" } ], "returns" : { "type" : "object()", "description" : "the list of the object versions in the specified bucket" }, "errors" : [ "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">s3:CREDENTIALS if the specified S3 credentials cannot be found or are invalid</xqdoc:error>", "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">s3:BUCKET if no bucket has been specified and no default bucket is present in the used credentials</xqdoc:error>", "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">s3:OPTIONS if the specified options are invalid</xqdoc:error>", "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">s3:HTTP an HTTP error occurred sending the request to S3</xqdoc:error>", "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">s3:REQUEST S3 refused to execute the request</xqdoc:error>", "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">s3:RESPONSE the response received from S3 cannot be parsed</xqdoc:error>" ] }, { "isDocumented" : true, "arity" : 2, "name" : "list-bucket-versions-nondeterministic", "qname" : "s3:list-bucket-versions-nondeterministic", "signature" : "($bucket as string?, $options as object()?) as object()", "description" : " <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">Lists the objects versions in a bucket using the default S3 credentials.\n This method allows the specification of additional listing options.</p>\n <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">This function has the same semantics as\n <a href=\"#list-bucket-versions-2\">list-bucket-versions#2</a>,\n but is declared as being non deterministic and thus should only be used when\n result caching is not desired.</p>\n", "summary" : "<p>  Lists the objects versions in a bucket using the default S3 credentials.</p>", "annotation_str" : " %an:nondeterministic", "annotations" : [ { "prefix" : "an", "ns" : "http://zorba.io/annotations", "name" : "nondeterministic", "value" : "" } ], "updating" : false, "parameters" : [ { "name" : "bucket", "type" : "string", "occurrence" : "?", "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> The bucket to list. If the empty sequence is given, the default bucket of the default credentials will be listed.</div>" }, { "name" : "options", "type" : "object()", "occurrence" : "?", "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> The listing options.</div>" } ], "returns" : { "type" : "object()", "description" : "the list of the object versions in the specified bucket" }, "errors" : [ "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">s3:CREDENTIALS if the specified S3 credentials cannot be found or are invalid</xqdoc:error>", "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">s3:BUCKET if no bucket has been specified and no default bucket is present in the default credentials</xqdoc:error>", "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">s3:OPTIONS if the specified options are invalid</xqdoc:error>", "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">s3:HTTP an HTTP error occurred sending the request to S3</xqdoc:error>", "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">s3:REQUEST S3 refused to execute the request</xqdoc:error>", "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">s3:RESPONSE the response received from S3 cannot be parsed</xqdoc:error>" ] }, { "isDocumented" : true, "arity" : 3, "name" : "list-bucket-versions-nondeterministic", "qname" : "s3:list-bucket-versions-nondeterministic", "signature" : "($credentials as item()?, $bucket as string?, $options as object()?) as object()", "description" : " <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">Lists the objects versions in a bucket using the specified credentials.\n This method allows the specification of additional listing options.</p>\n <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">This function has the same semantics as\n <a href=\"#list-bucket-versions-3\">list-bucket-versions#3</a>,\n but is declared as being non deterministic and thus should only be used when\n result caching is not desired.</p>\n", "summary" : "<p>  Lists the objects versions in a bucket using the specified credentials.</p>", "annotation_str" : " %an:nondeterministic", "annotations" : [ { "prefix" : "an", "ns" : "http://zorba.io/annotations", "name" : "nondeterministic", "value" : "" } ], "updating" : false, "parameters" : [ { "name" : "credentials", "type" : "item()", "occurrence" : "?", "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> The credentials to use.</div>" }, { "name" : "bucket", "type" : "string", "occurrence" : "?", "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> The bucket to list. If the empty sequence is given, the default bucket of the specified credentials will be listed.</div>" }, { "name" : "options", "type" : "object()", "occurrence" : "?", "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> The listing options.</div>" } ], "returns" : { "type" : "object()", "description" : "the list of the object in the specified bucket" }, "errors" : [ "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">s3:CREDENTIALS if the specified S3 credentials cannot be found or are invalid</xqdoc:error>", "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">s3:BUCKET if no bucket has been specified and no default bucket is present in the used credentials</xqdoc:error>", "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">s3:OPTIONS if the specified options are invalid</xqdoc:error>", "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">s3:HTTP an HTTP error occurred sending the request to S3</xqdoc:error>", "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">s3:REQUEST S3 refused to execute the request</xqdoc:error>", "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">s3:RESPONSE the response received from S3 cannot be parsed</xqdoc:error>" ] }, { "isDocumented" : true, "arity" : 0, "name" : "list-bucket-versions", "qname" : "s3:list-bucket-versions", "signature" : "() as object()", "description" : " <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">Lists the objects versions in the default bucket of the default S3\n credentials.</p>\n <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">This function is declared as deterministic and should be used whenever result\n caching is acceptable.</p>\n <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">Example:\n <pre>\n s3:list-bucket-versions()\n </pre>\n </p>\n <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">Example return object:\n <pre>\n {\n   \"name\": \"bucket\",\n   \"prefix\": \"\",\n   \"keyMarker\" : \"image.jpg\",\n   \"versionIdMarker\" : \"QUpfdndhfd8438MNFDN93jdnJFkdmqnh893\",\n   \"nextKeyMarker\": \"marker\",\n   \"nextVersionIdMarker\": \"UIORUnfndfhnw89493jJFJ\",\n   \"maxKeys\": 1,\n   \"delimiter\": \"/\",\n   \"isTruncated\": true,\n   \"revisions\":\n   [\n     {\n       \"kind\": \"Version\",\n       \"key\": \"image.jpg\",\n       \"versionId\": \"QUpfdndhfd8438MNFDN93jdnJFkdmqnh893\",\n       \"isLatest\": false,\n       \"lastModified\": \"2009-10-12T17:50:30.000Z\",\n       \"eTag\": \"\\\"fba9dede5f27731c9771645a39863328\\\"\",\n       \"size\": 434234,\n       \"storageClass\": \"STANDARD\",\n       \"owner\":\n       {\n         \"id\": \"75aa57f09aa0c8caeab4f8c24e99d10f8e7faeebf76c078efc7c6caea54ba06a\"\n         \"displayName\": \"mtd@amazon.com\"\n       }\n     },\n     {\n       \"kind\": \"DeleteMarker\",\n       \"key\": \"image.jpg\",\n       \"versionId\": \"03jpff543dhffds434rfdsFDN943fdsFkdmqnh892\",\n       \"isLatest\": true,\n       \"lastModified\": \"2009-10-12T17:50:30.000Z\",\n       \"owner\":\n       {\n         \"id\": \"75aa57f09aa0c8caeab4f8c24e99d10f8e7faeebf76c078efc7c6caea54ba06a\"\n         \"displayName\": \"mtd@amazon.com\"\n       }\n     }\n   ],\n   \"commonPrefixes\": [\"photos/\"]\n }\n </pre>\n </p>\n <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">The fields in the returned object have the following meanings:\n <ul>\n   <li>name: the bucket name (string, mandatory).</li>\n   <li>prefix: the used prefix (string, mandatory).</li>\n   <li>keyMarker: indicates from which key in the listing begins\n   (string, mandatory).</li>\n   <li>versionMarker: indicates from which version  the listing begins\n   (string, optional).</li>\n   <li>nextKeyMarker: when the number of responses exceeds the value of maxKeys,\n   nextKeyMarker specifies the first key not returned that satisfies the search\n   criteria. Use this value for the keyMarker request parameter in a subsequent\n   request. (string, optional)</li>\n   <li>nextVersionMarker: when the number of responses exceeds the value of maxKeys,\n   nextVersionIdMarker specifies the first object version not returned that\n   satisfies the search criteria. Use this value for the versionMarker request\n   parameter in a subsequent request. (string, optional)</li>\n   <li>maxKeys: the maximum number of keys returned in the response body\n   (integer, mandatory).</li>\n   <li>delimiter: the used delimiter (string, optional).</li>\n   <li>isTruncated: whether or not all of the results were returned. All of the\n   results may not be returned if the number of results exceeds that specified\n   by the maxKeys request parameter (boolean, mandatory).</li>\n   <li>revisions: an array of objects listing the bucket object versions\n   (array, mandatory). The fields of each contained object have the following\n   meaning:\n   <ul>\n     <li>kind: the revision kind. One of \"Version\" or \"DeleteMarker\" (string,\n     mandatory).</li>\n     <li>key: the object key (string, mandatory).</li>\n     <li>versionId: the object version id (string, mandatory).</li>\n     <li>lastModified: the object last modification date (dateTime, mandatory).</li>\n     <li>eTag: the entity tag is a hash of the object. The eTag only reflects\n     changes to the contents of an object, not its metadata. The eTag is determined\n     when an object is created. For objects created by the PUT Object operation\n     and the POST Object operation, the eTag is a quoted, 32-digit hexadecimal\n     string representing the MD5 digest of the object data. For other objects,\n     the eTag may or may not be an MD5 digest of the object data. If the eTag is\n     not an MD5 digest of the object data, it will contain one or more non-hexadecimal\n     characters and/or will consist of less than 32 or more than 32 hexadecimal\n     digits.(string, mandatory for \"Version\" objects, not present for\n     \"DeleteMarker\" objects).</li>\n     <li>size: the object size in bytes (integer, mandatory for \"Version\" objects,\n     not present for \"DeleteMarker\" objects).</li>\n     <li>storageClass: the object storage class. One of \"STANDARD\",\n     \"REDUCED_REDUNDANCY\" or \"GLACIER\" (string, mandatory for \"Version\" objects,\n     not present for \"DeleteMarker\" objects).</li>\n     <li>owner: an object which specifies the owner of the object (object,\n     optional). It has the following fields:\n     <ul>\n       <li>id: the user identifier of the object owner (string, mandatory).</li>\n       <li>displayName: the screen name of the object owner (string, mandatory).</li>\n     </ul>\n     </li>\n   </ul>\n   </li>\n   <li>commonPrefixes: an array of strings which contains the list of the common\n   prefixes. It can be present only when the delimiter request parameter is\n   specified (array, optional).</li>\n </ul>\n </p>\n", "summary" : "<p>  Lists the objects versions in the default bucket of the default S3\n credentials.</p>", "annotation_str" : "", "annotations" : [  ], "updating" : false, "parameters" : [  ], "returns" : { "type" : "object()", "description" : "the list of the object versions in the default bucket of the default S3 credentials" }, "errors" : [ "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">s3:CREDENTIALS if the specified S3 credentials cannot be found or are invalid</xqdoc:error>", "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">s3:BUCKET if no default bucket is present in the default S3 credentials</xqdoc:error>", "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">s3:OPTIONS if the specified options are invalid</xqdoc:error>", "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">s3:HTTP an HTTP error occurred sending the request to S3</xqdoc:error>", "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">s3:REQUEST S3 refused to execute the request</xqdoc:error>", "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">s3:RESPONSE the response received from S3 cannot be parsed</xqdoc:error>" ] }, { "isDocumented" : true, "arity" : 1, "name" : "list-bucket-versions", "qname" : "s3:list-bucket-versions", "signature" : "($bucket as string?) as object()", "description" : " <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">Lists the objects versions in a bucket using the default S3 credentials.</p>\n <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">This function is declared as deterministic and should be used whenever result\n caching is acceptable.</p>\n <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">Example:\n <pre>\n s3:list-bucket-versions(\"28msec\")\n </pre>\n </p>\n <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">Example return object:\n <pre>\n {\n   \"name\": \"bucket\",\n   \"prefix\": \"\",\n   \"keyMarker\" : \"image.jpg\",\n   \"versionIdMarker\" : \"QUpfdndhfd8438MNFDN93jdnJFkdmqnh893\",\n   \"nextKeyMarker\": \"marker\",\n   \"nextVersionIdMarker\": \"UIORUnfndfhnw89493jJFJ\",\n   \"maxKeys\": 1,\n   \"delimiter\": \"/\",\n   \"isTruncated\": true,\n   \"revisions\":\n   [\n     {\n       \"kind\": \"Version\",\n       \"key\": \"image.jpg\",\n       \"versionId\": \"QUpfdndhfd8438MNFDN93jdnJFkdmqnh893\",\n       \"isLatest\": false,\n       \"lastModified\": \"2009-10-12T17:50:30.000Z\",\n       \"eTag\": \"\\\"fba9dede5f27731c9771645a39863328\\\"\",\n       \"size\": 434234,\n       \"storageClass\": \"STANDARD\",\n       \"owner\":\n       {\n         \"id\": \"75aa57f09aa0c8caeab4f8c24e99d10f8e7faeebf76c078efc7c6caea54ba06a\"\n         \"displayName\": \"mtd@amazon.com\"\n       }\n     },\n     {\n       \"kind\": \"DeleteMarker\",\n       \"key\": \"image.jpg\",\n       \"versionId\": \"03jpff543dhffds434rfdsFDN943fdsFkdmqnh892\",\n       \"isLatest\": true,\n       \"lastModified\": \"2009-10-12T17:50:30.000Z\",\n       \"owner\":\n       {\n         \"id\": \"75aa57f09aa0c8caeab4f8c24e99d10f8e7faeebf76c078efc7c6caea54ba06a\"\n         \"displayName\": \"mtd@amazon.com\"\n       }\n     }\n   ],\n   \"commonPrefixes\": [\"photos/\"]\n }\n </pre>\n </p>\n <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">The fields in the returned object have the following meanings:\n <ul>\n   <li>name: the bucket name (string, mandatory).</li>\n   <li>prefix: the used prefix (string, mandatory).</li>\n   <li>keyMarker: indicates from which key in the listing begins\n   (string, mandatory).</li>\n   <li>versionMarker: indicates from which version  the listing begins\n   (string, optional).</li>\n   <li>nextKeyMarker: when the number of responses exceeds the value of maxKeys,\n   nextKeyMarker specifies the first key not returned that satisfies the search\n   criteria. Use this value for the keyMarker request parameter in a subsequent\n   request. (string, optional)</li>\n   <li>nextVersionMarker: when the number of responses exceeds the value of maxKeys,\n   nextVersionIdMarker specifies the first object version not returned that\n   satisfies the search criteria. Use this value for the versionMarker request\n   parameter in a subsequent request. (string, optional)</li>\n   <li>maxKeys: the maximum number of keys returned in the response body\n   (integer, mandatory).</li>\n   <li>delimiter: the used delimiter (string, optional).</li>\n   <li>isTruncated: whether or not all of the results were returned. All of the\n   results may not be returned if the number of results exceeds that specified\n   by the maxKeys request parameter (boolean, mandatory).</li>\n   <li>revisions: an array of objects listing the bucket object versions\n   (array, mandatory). The fields of each contained object have the following\n   meaning:\n   <ul>\n     <li>kind: the revision kind. One of \"Version\" or \"DeleteMarker\" (string,\n     mandatory).</li>\n     <li>key: the object key (string, mandatory).</li>\n     <li>versionId: the object version id (string, mandatory).</li>\n     <li>lastModified: the object last modification date (dateTime, mandatory).</li>\n     <li>eTag: the entity tag is a hash of the object. The eTag only reflects\n     changes to the contents of an object, not its metadata. The eTag is determined\n     when an object is created. For objects created by the PUT Object operation\n     and the POST Object operation, the eTag is a quoted, 32-digit hexadecimal\n     string representing the MD5 digest of the object data. For other objects,\n     the eTag may or may not be an MD5 digest of the object data. If the eTag is\n     not an MD5 digest of the object data, it will contain one or more non-hexadecimal\n     characters and/or will consist of less than 32 or more than 32 hexadecimal\n     digits.(string, mandatory for \"Version\" objects, not present for\n     \"DeleteMarker\" objects).</li>\n     <li>size: the object size in bytes (integer, mandatory for \"Version\" objects,\n     not present for \"DeleteMarker\" objects).</li>\n     <li>storageClass: the object storage class. One of \"STANDARD\",\n     \"REDUCED_REDUNDANCY\" or \"GLACIER\" (string, mandatory for \"Version\" objects,\n     not present for \"DeleteMarker\" objects).</li>\n     <li>owner: an object which specifies the owner of the object (object,\n     optional). It has the following fields:\n     <ul>\n       <li>id: the user identifier of the object owner (string, mandatory).</li>\n       <li>displayName: the screen name of the object owner (string, mandatory).</li>\n     </ul>\n     </li>\n   </ul>\n   </li>\n   <li>commonPrefixes: an array of strings which contains the list of the common\n   prefixes. It can be present only when the delimiter request parameter is\n   specified (array, optional).</li>\n </ul>\n </p>\n", "summary" : "<p>  Lists the objects versions in a bucket using the default S3 credentials.</p>", "annotation_str" : "", "annotations" : [  ], "updating" : false, "parameters" : [ { "name" : "bucket", "type" : "string", "occurrence" : "?", "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> The bucket to list. If the empty sequence is given, the default bucket of the default credentials will be listed.</div>" } ], "returns" : { "type" : "object()", "description" : "the list of the object versions in the specified bucket" }, "errors" : [ "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">s3:CREDENTIALS if the specified S3 credentials cannot be found or are invalid</xqdoc:error>", "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">s3:BUCKET if no bucket has been specified and no default bucket is present in the used credentials</xqdoc:error>", "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">s3:OPTIONS if the specified options are invalid</xqdoc:error>", "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">s3:HTTP an HTTP error occurred sending the request to S3</xqdoc:error>", "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">s3:REQUEST S3 refused to execute the request</xqdoc:error>", "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">s3:RESPONSE the response received from S3 cannot be parsed</xqdoc:error>" ] }, { "isDocumented" : true, "arity" : 2, "name" : "list-bucket-versions", "qname" : "s3:list-bucket-versions", "signature" : "($bucket as string?, $options as object()?) as object()", "description" : " <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">Lists the objects versions in a bucket using the default S3 credentials.\n This method allows the specification of additional listing options.</p>\n <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">This function is declared as deterministic and should be used whenever result\n caching is acceptable.</p>\n <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">Example:\n <pre>\n let $options :=\n {\n   \"delimiter\": \"/\",\n   \"maxKeys\": 2,\n   \"keyMarker\": \"image.jpg\",\n   \"versionIdMarker\" : \"QUpfdndhfd8438MNFDN93jdnJFkdmqnh893\"\n }\n return s3:list-bucket-versions(\"28msec\", $options)\n </pre>\n </p>\n <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">The options object must have the following structure:\n <ul>\n   <li>delimiter: the delimiter marks where the listed results stop. For example,\n       a delimiter / lists all objects starting with $prefix plus arbitrary\n       characters but not / (string, optional). Default is the empty string,\n       that is, all objects are listed.</li>\n   <li>keyMarker: specifies a key as starting point; following keys (lexicographically\n       greater than the marker) in alphabetical order are listed (string, optional).\n       Default is the empty string, that is, all objects are listed.</li>\n   <li>versionMarker: specifies the object version you want starting from;\n       following revisions (newer than the marker) are listed (string, optional).\n       By default all versions are listed. Empty string is not allowed.</li>\n   <li>maxKeys: the maximum number of keys returned. If more keys than maxKeys\n       can be fetched, the result contains <IsTruncated>true</IsTruncated>\n       (integer, optional). Default is 1000.</li>\n   <li>prefix: only keys starting with the prefix are returned (string, optional).\n       Default is the empty string, that is, all objects are listed.</li>\n </ul>\n </p>\n <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">Example return object:\n <pre>\n {\n   \"name\": \"bucket\",\n   \"prefix\": \"\",\n   \"keyMarker\" : \"image.jpg\",\n   \"versionIdMarker\" : \"QUpfdndhfd8438MNFDN93jdnJFkdmqnh893\",\n   \"nextKeyMarker\": \"marker\",\n   \"nextVersionIdMarker\": \"UIORUnfndfhnw89493jJFJ\",\n   \"maxKeys\": 1,\n   \"delimiter\": \"/\",\n   \"isTruncated\": true,\n   \"revisions\":\n   [\n     {\n       \"kind\": \"Version\",\n       \"key\": \"image.jpg\",\n       \"versionId\": \"QUpfdndhfd8438MNFDN93jdnJFkdmqnh893\",\n       \"isLatest\": false,\n       \"lastModified\": \"2009-10-12T17:50:30.000Z\",\n       \"eTag\": \"\\\"fba9dede5f27731c9771645a39863328\\\"\",\n       \"size\": 434234,\n       \"storageClass\": \"STANDARD\",\n       \"owner\":\n       {\n         \"id\": \"75aa57f09aa0c8caeab4f8c24e99d10f8e7faeebf76c078efc7c6caea54ba06a\"\n         \"displayName\": \"mtd@amazon.com\"\n       }\n     },\n     {\n       \"kind\": \"DeleteMarker\",\n       \"key\": \"image.jpg\",\n       \"versionId\": \"03jpff543dhffds434rfdsFDN943fdsFkdmqnh892\",\n       \"isLatest\": true,\n       \"lastModified\": \"2009-10-12T17:50:30.000Z\",\n       \"owner\":\n       {\n         \"id\": \"75aa57f09aa0c8caeab4f8c24e99d10f8e7faeebf76c078efc7c6caea54ba06a\"\n         \"displayName\": \"mtd@amazon.com\"\n       }\n     }\n   ],\n   \"commonPrefixes\": [\"photos/\"]\n }\n </pre>\n </p>\n <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">The fields in the returned object have the following meanings:\n <ul>\n   <li>name: the bucket name (string, mandatory).</li>\n   <li>prefix: the used prefix (string, mandatory).</li>\n   <li>keyMarker: indicates from which key in the listing begins\n   (string, mandatory).</li>\n   <li>versionMarker: indicates from which version  the listing begins\n   (string, optional).</li>\n   <li>nextKeyMarker: when the number of responses exceeds the value of maxKeys,\n   nextKeyMarker specifies the first key not returned that satisfies the search\n   criteria. Use this value for the keyMarker request parameter in a subsequent\n   request. (string, optional)</li>\n   <li>nextVersionMarker: when the number of responses exceeds the value of maxKeys,\n   nextVersionIdMarker specifies the first object version not returned that\n   satisfies the search criteria. Use this value for the versionMarker request\n   parameter in a subsequent request. (string, optional)</li>\n   <li>maxKeys: the maximum number of keys returned in the response body\n   (integer, mandatory).</li>\n   <li>delimiter: the used delimiter (string, optional).</li>\n   <li>isTruncated: whether or not all of the results were returned. All of the\n   results may not be returned if the number of results exceeds that specified\n   by the maxKeys request parameter (boolean, mandatory).</li>\n   <li>revisions: an array of objects listing the bucket object versions\n   (array, mandatory). The fields of each contained object have the following\n   meaning:\n   <ul>\n     <li>kind: the revision kind. One of \"Version\" or \"DeleteMarker\" (string,\n     mandatory).</li>\n     <li>key: the object key (string, mandatory).</li>\n     <li>versionId: the object version id (string, mandatory).</li>\n     <li>lastModified: the object last modification date (dateTime, mandatory).</li>\n     <li>eTag: the entity tag is a hash of the object. The eTag only reflects\n     changes to the contents of an object, not its metadata. The eTag is determined\n     when an object is created. For objects created by the PUT Object operation\n     and the POST Object operation, the eTag is a quoted, 32-digit hexadecimal\n     string representing the MD5 digest of the object data. For other objects,\n     the eTag may or may not be an MD5 digest of the object data. If the eTag is\n     not an MD5 digest of the object data, it will contain one or more non-hexadecimal\n     characters and/or will consist of less than 32 or more than 32 hexadecimal\n     digits.(string, mandatory for \"Version\" objects, not present for\n     \"DeleteMarker\" objects).</li>\n     <li>size: the object size in bytes (integer, mandatory for \"Version\" objects,\n     not present for \"DeleteMarker\" objects).</li>\n     <li>storageClass: the object storage class. One of \"STANDARD\",\n     \"REDUCED_REDUNDANCY\" or \"GLACIER\" (string, mandatory for \"Version\" objects,\n     not present for \"DeleteMarker\" objects).</li>\n     <li>owner: an object which specifies the owner of the object (object,\n     optional). It has the following fields:\n     <ul>\n       <li>id: the user identifier of the object owner (string, mandatory).</li>\n       <li>displayName: the screen name of the object owner (string, mandatory).</li>\n     </ul>\n     </li>\n   </ul>\n   </li>\n   <li>commonPrefixes: an array of strings which contains the list of the common\n   prefixes. It can be present only when the delimiter request parameter is\n   specified (array, optional).</li>\n </ul>\n </p>\n", "summary" : "<p>  Lists the objects versions in a bucket using the default S3 credentials.</p>", "annotation_str" : "", "annotations" : [  ], "updating" : false, "parameters" : [ { "name" : "bucket", "type" : "string", "occurrence" : "?", "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> The bucket to list. If the empty sequence is given, the default bucket of the default credentials will be listed.</div>" }, { "name" : "options", "type" : "object()", "occurrence" : "?", "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> The listing options.</div>" } ], "returns" : { "type" : "object()", "description" : "the list of the object versions in the specified bucket" }, "errors" : [ "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">s3:CREDENTIALS if the specified S3 credentials cannot be found or are invalid</xqdoc:error>", "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">s3:BUCKET if no bucket has been specified and no default bucket is present in the default credentials</xqdoc:error>", "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">s3:OPTIONS if the specified options are invalid</xqdoc:error>", "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">s3:HTTP an HTTP error occurred sending the request to S3</xqdoc:error>", "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">s3:REQUEST S3 refused to execute the request</xqdoc:error>", "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">s3:RESPONSE the response received from S3 cannot be parsed</xqdoc:error>" ] }, { "isDocumented" : true, "arity" : 3, "name" : "list-bucket-versions", "qname" : "s3:list-bucket-versions", "signature" : "($credentials as item()?, $bucket as string?, $options as object()?) as object()", "description" : " <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">Lists the objects versions in a bucket using the specified credentials.\n This method allows the specification of additional listing options.</p>\n <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">This function is declared as deterministic and should be used whenever result\n caching is acceptable.</p>\n <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">Example:\n <pre>\n let $options :=\n {\n   \"delimiter\": \"/\",\n   \"maxKeys\": 2,\n   \"keyMarker\": \"image.jpg\",\n   \"versionIdMarker\": \"QUpfdndhfd8438MNFDN93jdnJFkdmqnh893\"\n }\n return s3:list-bucket-versions(\"credentials\", \"28msec\", $options)\n </pre>\n </p>\n <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">The options object must have the following structure:\n <ul>\n   <li>delimiter: the delimiter marks where the listed results stop. For example,\n       a delimiter / lists all objects starting with $prefix plus arbitrary\n       characters but not / (string, optional). Default is the empty string,\n       that is, all objects are listed.</li>\n   <li>keyMarker: specifies a key as starting point; following keys (lexicographically\n       greater than the marker) in alphabetical order are listed (string, optional).\n       Default is the empty string, that is, all objects are listed.</li>\n   <li>versionMarker: specifies the object version you want starting from;\n       following revisions (newer than the marker) are listed (string, optional).\n       By default all versions are listed. Empty string is not allowed.</li>\n   <li>maxKeys: the maximum number of keys returned. If more keys than maxKeys\n       can be fetched, the result contains <IsTruncated>true</IsTruncated>\n       (integer, optional). Default is 1000.</li>\n   <li>prefix: only keys starting with the prefix are returned (string, optional).\n       Default is the empty string, that is, all objects are listed.</li>\n </ul>\n </p>\n <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">Example return object:\n <pre>\n {\n   \"name\": \"bucket\",\n   \"prefix\": \"\",\n   \"keyMarker\" : \"image.jpg\",\n   \"VersionIdMarker\" : \"QUpfdndhfd8438MNFDN93jdnJFkdmqnh893\",\n   \"nextKeyMarker\": \"marker\",\n   \"nextVersionIdMarker\": \"UIORUnfndfhnw89493jJFJ\",\n   \"maxKeys\": 1,\n   \"delimiter\": \"/\",\n   \"isTruncated\": true,\n   \"revisions\":\n   [\n     {\n       \"kind\": \"Version\",\n       \"key\": \"image.jpg\",\n       \"versionId\": \"QUpfdndhfd8438MNFDN93jdnJFkdmqnh893\",\n       \"isLatest\": false,\n       \"lastModified\": \"2009-10-12T17:50:30.000Z\",\n       \"eTag\": \"\\\"fba9dede5f27731c9771645a39863328\\\"\",\n       \"size\": 434234,\n       \"storageClass\": \"STANDARD\",\n       \"owner\":\n       {\n         \"id\": \"75aa57f09aa0c8caeab4f8c24e99d10f8e7faeebf76c078efc7c6caea54ba06a\"\n         \"displayName\": \"mtd@amazon.com\"\n       }\n     },\n     {\n       \"kind\": \"DeleteMarker\",\n       \"key\": \"image.jpg\",\n       \"versionId\": \"03jpff543dhffds434rfdsFDN943fdsFkdmqnh892\",\n       \"isLatest\": true,\n       \"lastModified\": \"2009-10-12T17:50:30.000Z\",\n       \"owner\":\n       {\n         \"id\": \"75aa57f09aa0c8caeab4f8c24e99d10f8e7faeebf76c078efc7c6caea54ba06a\"\n         \"displayName\": \"mtd@amazon.com\"\n       }\n     }\n   ],\n   \"commonPrefixes\": [\"photos/\"]\n }\n </pre>\n </p>\n <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">The fields in the returned object have the following meanings:\n <ul>\n   <li>name: the bucket name (string, mandatory).</li>\n   <li>prefix: the used prefix (string, mandatory).</li>\n   <li>keyMarker: indicates from which key in the listing begins\n   (string, mandatory).</li>\n   <li>versionMarker: indicates from which version  the listing begins\n   (string, optional).</li>\n   <li>nextKeyMarker: when the number of responses exceeds the value of maxKeys,\n   nextKeyMarker specifies the first key not returned that satisfies the search\n   criteria. Use this value for the keyMarker request parameter in a subsequent\n   request. (string, optional)</li>\n   <li>nextVersionMarker: when the number of responses exceeds the value of maxKeys,\n   nextVersionIdMarker specifies the first object version not returned that\n   satisfies the search criteria. Use this value for the versionMarker request\n   parameter in a subsequent request. (string, optional)</li>\n   <li>maxKeys: the maximum number of keys returned in the response body\n   (integer, mandatory).</li>\n   <li>delimiter: the used delimiter (string, optional).</li>\n   <li>isTruncated: whether or not all of the results were returned. All of the\n   results may not be returned if the number of results exceeds that specified\n   by the maxKeys request parameter (boolean, mandatory).</li>\n   <li>revisions: an array of objects listing the bucket object versions\n   (array, mandatory). The fields of each contained object have the following\n   meaning:\n   <ul>\n     <li>kind: the revision kind. One of \"Version\" or \"DeleteMarker\" (string,\n     mandatory).</li>\n     <li>key: the object key (string, mandatory).</li>\n     <li>versionId: the object version id (string, mandatory).</li>\n     <li>lastModified: the object last modification date (dateTime, mandatory).</li>\n     <li>eTag: the entity tag is a hash of the object. The eTag only reflects\n     changes to the contents of an object, not its metadata. The eTag is determined\n     when an object is created. For objects created by the PUT Object operation\n     and the POST Object operation, the eTag is a quoted, 32-digit hexadecimal\n     string representing the MD5 digest of the object data. For other objects,\n     the eTag may or may not be an MD5 digest of the object data. If the eTag is\n     not an MD5 digest of the object data, it will contain one or more non-hexadecimal\n     characters and/or will consist of less than 32 or more than 32 hexadecimal\n     digits.(string, mandatory for \"Version\" objects, not present for\n     \"DeleteMarker\" objects).</li>\n     <li>size: the object size in bytes (integer, mandatory for \"Version\" objects,\n     not present for \"DeleteMarker\" objects).</li>\n     <li>storageClass: the object storage class. One of \"STANDARD\",\n     \"REDUCED_REDUNDANCY\" or \"GLACIER\" (string, mandatory for \"Version\" objects,\n     not present for \"DeleteMarker\" objects).</li>\n     <li>owner: an object which specifies the owner of the object (object,\n     optional). It has the following fields:\n     <ul>\n       <li>id: the user identifier of the object owner (string, mandatory).</li>\n       <li>displayName: the screen name of the object owner (string, mandatory).</li>\n     </ul>\n     </li>\n   </ul>\n   </li>\n   <li>commonPrefixes: an array of strings which contains the list of the common\n   prefixes. It can be present only when the delimiter request parameter is\n   specified (array, optional).</li>\n </ul>\n </p>\n", "summary" : "<p>  Lists the objects versions in a bucket using the specified credentials.</p>", "annotation_str" : "", "annotations" : [  ], "updating" : false, "parameters" : [ { "name" : "credentials", "type" : "item()", "occurrence" : "?", "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> The credentials to use.</div>" }, { "name" : "bucket", "type" : "string", "occurrence" : "?", "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> The bucket to list. If the empty sequence is given, the default bucket of the specified credentials will be listed.</div>" }, { "name" : "options", "type" : "object()", "occurrence" : "?", "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> The listing options.</div>" } ], "returns" : { "type" : "object()", "description" : "the list of the object in the specified bucket" }, "errors" : [ "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">s3:CREDENTIALS if the specified S3 credentials cannot be found or are invalid</xqdoc:error>", "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">s3:BUCKET if no bucket has been specified and no default bucket is present in the used credentials</xqdoc:error>", "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">s3:OPTIONS if the specified options are invalid</xqdoc:error>", "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">s3:HTTP an HTTP error occurred sending the request to S3</xqdoc:error>", "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">s3:REQUEST S3 refused to execute the request</xqdoc:error>", "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">s3:RESPONSE the response received from S3 cannot be parsed</xqdoc:error>" ] }, { "isDocumented" : true, "arity" : 0, "name" : "list-bucket", "qname" : "s3:list-bucket", "signature" : "() as object()", "description" : " <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">Lists the objects in the default bucket of the default S3 credentials.</p>\n <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">This function is declared as deterministic and should be used whenever result\n caching is acceptable.</p>\n <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">Example:\n <pre>\n s3:list-bucket(\"28msec\")\n </pre>\n </p>\n <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">Example return object:\n <pre>\n {\n   \"name\": \"28msec\",\n   \"prefix\": \"\",\n   \"marker\" : \"\",\n   \"nextMarker\": \"marker\",\n   \"maxKeys\": 1,\n   \"delimiter\": \"\",\n   \"isTruncated\": true,\n   \"contents\":\n   [\n     {\n       \"key\": \"image.jpg\",\n       \"lastModified\": \"2009-10-12T17:50:30.000Z\",\n       \"eTag\": \"\\\"fba9dede5f27731c9771645a39863328\\\"\",\n       \"size\": 434234,\n       \"storageClass\": \"STANDARD\"\n       \"owner\":\n       {\n         \"id\": \"75aa57f09aa0c8caeab4f8c24e99d10f8e7faeebf76c078efc7c6caea54ba06a\"\n         \"displayName\": \"mtd@amazon.com\"\n       }\n     }\n   ]\n }\n </pre>\n </p>\n <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">The fields in the returned object have the following meanings:\n <ul>\n   <li>name: the bucket name (string, mandatory).</li>\n   <li>prefix: the used prefix (string, mandatory).</li>\n   <li>marker: indicates where in the bucket listing begins (string, mandatory).</li>\n   <li>nextMarker: when the response is truncated, you can use the key name\n   in this field as marker in the subsequent request to get next set of objects.\n   Amazon S3 lists objects in alphabetical order. This field is returned only\n   if you have specified the delimiter request parameter. If the response does\n   not include the nextMaker field and it is truncated, you can use the value\n   of the last Key in the response as the marker in the subsequent request to\n   get the next set of object keys. (string, optional)</li>\n   <li>maxKeys: the maximum number of keys returned in the response body\n   (integer, mandatory).</li>\n   <li>delimiter: the used delimiter (string, optional).</li>\n   <li>isTruncated: whether or not all of the results were returned. All of the\n   results may not be returned if the number of results exceeds that specified\n   by the maxKeys request parameter (boolean, mandatory).</li>\n   <li>contents: an array of objects listing the bucket content  (array, mandatory).\n   The fields of each contained object have the following meaning:\n   <ul>\n     <li>key: the object key (string, mandatory).</li>\n     <li>lastModified: the object last modification date (dateTime, mandatory).</li>\n     <li>eTag: the entity tag is a hash of the object. The eTag only reflects\n     changes to the contents of an object, not its metadata. The eTag is determined\n     when an object is created. For objects created by the PUT Object operation\n     and the POST Object operation, the eTag is a quoted, 32-digit hexadecimal\n     string representing the MD5 digest of the object data. For other objects,\n     the eTag may or may not be an MD5 digest of the object data. If the eTag is\n     not an MD5 digest of the object data, it will contain one or more non-hexadecimal\n     characters and/or will consist of less than 32 or more than 32 hexadecimal\n     digits.(string, mandatory).</li>\n     <li>storageClass: the object storage class. One of \"STANDARD\",\n     \"REDUCED_REDUNDANCY\" or \"GLACIER\" (string, mandatory).</li>\n     <li>owner: an object which specifies the owner of the object (object,\n     optional). It has the following fields:\n     <ul>\n       <li>id: the user identifier of the object owner (string, mandatory).</li>\n       <li>displayName: the screen name of the object owner (string, mandatory).</li>\n     </ul>\n     </li>\n   </ul>\n   </li>\n </ul>\n </p>\n", "summary" : "<p>  Lists the objects in the default bucket of the default S3 credentials.</p>", "annotation_str" : "", "annotations" : [  ], "updating" : false, "parameters" : [  ], "returns" : { "type" : "object()", "description" : "the list of objects in the default bucket of the default S3 credentials" }, "errors" : [ "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">s3:CREDENTIALS if the specified S3 credentials cannot be found or are invalid</xqdoc:error>", "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">s3:BUCKET if no default bucket is present in the default S3 credentials</xqdoc:error>", "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">s3:OPTIONS if the specified options are invalid</xqdoc:error>", "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">s3:HTTP an HTTP error occurred sending the request to S3</xqdoc:error>", "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">s3:REQUEST S3 refused to execute the request</xqdoc:error>", "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">s3:RESPONSE the response received from S3 cannot be parsed</xqdoc:error>" ] }, { "isDocumented" : true, "arity" : 1, "name" : "list-bucket", "qname" : "s3:list-bucket", "signature" : "($bucket as string?) as object()", "description" : " <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">Lists the objects in a bucket using the default S3 credentials.</p>\n <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">This function is declared as deterministic and should be used whenever result\n caching is acceptable.</p>\n <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">Example:\n <pre>\n s3:list-bucket(\"28msec\")\n </pre>\n </p>\n <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">Example return object:\n <pre>\n {\n   \"name\": \"28msec\",\n   \"prefix\": \"\",\n   \"marker\" : \"\",\n   \"nextMarker\": \"marker\",\n   \"maxKeys\": 1,\n   \"delimiter\": \"\",\n   \"isTruncated\": true,\n   \"contents\":\n   [\n     {\n       \"key\": \"image.jpg\",\n       \"lastModified\": \"2009-10-12T17:50:30.000Z\",\n       \"eTag\": \"\\\"fba9dede5f27731c9771645a39863328\\\"\",\n       \"size\": 434234,\n       \"storageClass\": \"STANDARD\"\n       \"owner\":\n       {\n         \"id\": \"75aa57f09aa0c8caeab4f8c24e99d10f8e7faeebf76c078efc7c6caea54ba06a\"\n         \"displayName\": \"mtd@amazon.com\"\n       }\n     }\n   ]\n }\n </pre>\n The meanings of the fields in the return object are the following:\n <ul>\n   <li>name: the bucket name (string, mandatory).</li>\n   <li>prefix: the used prefix (string, mandatory).</li>\n   <li>marker: indicates where in the bucket listing begins (string, mandatory).</li>\n   <li>nextMarker: when the response is truncated, you can use the key name\n   in this field as marker in the subsequent request to get next set of objects.\n   Amazon S3 lists objects in alphabetical order. This field is returned only\n   if you have specified the delimiter request parameter. If the response does\n   not include the nextMaker field and it is truncated, you can use the value\n   of the last Key in the response as the marker in the subsequent request to\n   get the next set of object keys. (string, optional)</li>\n   <li>maxKeys: the maximum number of keys returned in the response body\n   (integer, mandatory).</li>\n   <li>delimiter: the used delimiter (string, optional).</li>\n   <li>isTruncated: whether or not all of the results were returned. All of the\n   results may not be returned if the number of results exceeds that specified\n   by the maxKeys request parameter (boolean, mandatory).</li>\n   <li>contents: an array of objects listing the bucket content  (array, mandatory).\n   The fields of each contained object have the following meaning:\n   <ul>\n     <li>key: the object key (string, mandatory).</li>\n     <li>lastModified: the object last modification date (dateTime, mandatory).</li>\n     <li>eTag: the entity tag is a hash of the object. The eTag only reflects\n     changes to the contents of an object, not its metadata. The eTag is determined\n     when an object is created. For objects created by the PUT Object operation\n     and the POST Object operation, the eTag is a quoted, 32-digit hexadecimal\n     string representing the MD5 digest of the object data. For other objects,\n     the eTag may or may not be an MD5 digest of the object data. If the eTag is\n     not an MD5 digest of the object data, it will contain one or more non-hexadecimal\n     characters and/or will consist of less than 32 or more than 32 hexadecimal\n     digits.(string, mandatory).</li>\n     <li>storageClass: the object storage class. One of \"STANDARD\",\n     \"REDUCED_REDUNDANCY\" or \"GLACIER\" (string, mandatory).</li>\n     <li>owner: an object which specifies the owner of the object (object,\n     optional). It has the following fields:\n     <ul>\n       <li>id: the user identifier of the object owner (string, mandatory).</li>\n       <li>displayName: the screen name of the object owner (string, mandatory).</li>\n     </ul>\n     </li>\n   </ul>\n   </li>\n </ul>\n </p>\n", "summary" : "<p>  Lists the objects in a bucket using the default S3 credentials.</p>", "annotation_str" : "", "annotations" : [  ], "updating" : false, "parameters" : [ { "name" : "bucket", "type" : "string", "occurrence" : "?", "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> The bucket to list. If the empty sequence is given, the default bucket of the default S3 credentials will be listed.</div>" } ], "returns" : { "type" : "object()", "description" : "the list of the objects in the specified bucket." }, "errors" : [ "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">s3:CREDENTIALS if the specified S3 credentials cannot be found or are invalid</xqdoc:error>", "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">s3:BUCKET if no bucket has been specified and no default bucket is present in the used credentials</xqdoc:error>", "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">s3:OPTIONS if the specified options are invalid</xqdoc:error>", "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">s3:HTTP an HTTP error occurred sending the request to S3</xqdoc:error>", "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">s3:REQUEST S3 refused to execute the request</xqdoc:error>", "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">s3:RESPONSE the response received from S3 cannot be parsed</xqdoc:error>" ] }, { "isDocumented" : true, "arity" : 2, "name" : "list-bucket", "qname" : "s3:list-bucket", "signature" : "($bucket as string?, $options as object()?) as object()", "description" : " <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">Lists the objects in a bucket using the default S3 credentials.\n This method allows the specification of additional listing options.</p>\n <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">This function is declared as deterministic and should be used whenever result\n caching is acceptable.</p>\n <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">Example:\n <pre>\n let $options :=\n {\n   \"delimiter\": \"/\",\n   \"marker\": \"\",\n   \"maxKeys\": 1,\n   \"prefix\": \"\"\n }\n return s3:list-bucket(\"credentials\", \"28msec\", $options)\n </pre>\n </p>\n <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">The options object must have the following structure:\n <ul>\n   <li>delimiter: the delimiter marks where the listed results stop. For example,\n       a delimiter / lists all objects starting with $prefix plus arbitrary\n       characters but not / (string, optional). Default is the empty string,\n       that is, all objects are listed.</li>\n   <li>marker: specifies a key as starting point; following keys (lexicographically\n       greater than the marker) in alphabetical order are listed (string, optional).\n       Default is the empty string, that is, all objects are listed.</li>\n   <li>maxKeys: the maximum number of keys returned. If more keys than maxKeys\n       can be fetched, the result contains <IsTruncated>true</IsTruncated>\n       (integer, optional). Default is 1000.</li>\n   <li>prefix: only keys starting with the prefix are returned (string, optional).\n       Default is the empty string, that is, all objects are listed.</li>\n </ul>\n </p>\n <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">Example return object:\n <pre>\n {\n   \"name\": \"bucket\",\n   \"prefix\": \"\",\n   \"marker\" : \"\",\n   \"nextMarker\": \"marker\",\n   \"maxKeys\": 1,\n   \"delimiter\": \"/\",\n   \"isTruncated\": true,\n   \"contents\":\n   [\n     {\n       \"key\": \"image.jpg\",\n       \"lastModified\": \"2009-10-12T17:50:30.000Z\",\n       \"eTag\": \"\\\"fba9dede5f27731c9771645a39863328\\\"\",\n       \"size\": 434234,\n       \"storageClass\": \"STANDARD\"\n       \"owner\":\n       {\n         \"id\": \"75aa57f09aa0c8caeab4f8c24e99d10f8e7faeebf76c078efc7c6caea54ba06a\"\n         \"displayName\": \"mtd@amazon.com\"\n       }\n     }\n   ],\n   \"commonPrefixes\": [\"photos/\"]\n }\n </pre>\n </p>\n <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">The fields in the returned object have the following meanings:\n <ul>\n   <li>name: the bucket name (string, mandatory).</li>\n   <li>prefix: the used prefix (string, mandatory).</li>\n   <li>marker: indicates where in the bucket listing begins (string, mandatory).</li>\n   <li>nextMarker: when the response is truncated, you can use the key name\n   in this field as marker in the subsequent request to get next set of objects.\n   Amazon S3 lists objects in alphabetical order. This field is returned only\n   if you have specified the delimiter request parameter. If the response does\n   not include the nextMaker field and it is truncated, you can use the value\n   of the last Key in the response as the marker in the subsequent request to\n   get the next set of object keys. (string, optional)</li>\n   <li>maxKeys: the maximum number of keys returned in the response body\n   (integer, mandatory).</li>\n   <li>delimiter: the used delimiter (string, optional).</li>\n   <li>isTruncated: whether or not all of the results were returned. All of the\n   results may not be returned if the number of results exceeds that specified\n   by the maxKeys request parameter (boolean, mandatory).</li>\n   <li>contents: an array of objects listing the bucket content  (array, mandatory).\n   The fields of each contained object have the following meaning:\n   <ul>\n     <li>key: the object key (string, mandatory).</li>\n     <li>lastModified: the object last modification date (dateTime, mandatory).</li>\n     <li>eTag: the entity tag is a hash of the object. The eTag only reflects\n     changes to the contents of an object, not its metadata. The eTag is determined\n     when an object is created. For objects created by the PUT Object operation\n     and the POST Object operation, the eTag is a quoted, 32-digit hexadecimal\n     string representing the MD5 digest of the object data. For other objects,\n     the eTag may or may not be an MD5 digest of the object data. If the eTag is\n     not an MD5 digest of the object data, it will contain one or more non-hexadecimal\n     characters and/or will consist of less than 32 or more than 32 hexadecimal\n     digits.(string, mandatory).</li>\n     <li>storageClass: the object storage class. One of \"STANDARD\",\n     \"REDUCED_REDUNDANCY\" or \"GLACIER\" (string, mandatory).</li>\n     <li>owner: an object which specifies the owner of the object (object,\n     optional). It has the following fields:\n     <ul>\n       <li>id: the user identifier of the object owner (string, mandatory).</li>\n       <li>displayName: the screen name of the object owner (string, mandatory).</li>\n     </ul>\n     </li>\n   </ul>\n   </li>\n   <li>commonPrefixes: an array of strings which contains the list of the common\n   prefixes. It can be present only when the delimiter request parameter is\n   specified (array, optional).</li>\n </ul>\n </p>\n", "summary" : "<p>  Lists the objects in a bucket using the default S3 credentials.</p>", "annotation_str" : "", "annotations" : [  ], "updating" : false, "parameters" : [ { "name" : "bucket", "type" : "string", "occurrence" : "?", "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> The bucket to list. If the empty sequence is given, the default bucket of the default S3 credentials will be listed.</div>" }, { "name" : "options", "type" : "object()", "occurrence" : "?", "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> The listing options.</div>" } ], "returns" : { "type" : "object()", "description" : "the list of the object in the specified bucket" }, "errors" : [ "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">s3:CREDENTIALS if the specified S3 credentials cannot be found or are invalid</xqdoc:error>", "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">s3:BUCKET if no bucket has been specified and no default bucket is present in the default credentials</xqdoc:error>", "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">s3:OPTIONS if the specified options are invalid</xqdoc:error>", "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">s3:HTTP an HTTP error occurred sending the request to S3</xqdoc:error>", "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">s3:REQUEST S3 refused to execute the request</xqdoc:error>", "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">s3:RESPONSE the response received from S3 cannot be parsed</xqdoc:error>" ] }, { "isDocumented" : true, "arity" : 3, "name" : "list-bucket", "qname" : "s3:list-bucket", "signature" : "($credentials as item()?, $bucket as string?, $options as object()?) as object()", "description" : " <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">Lists the objects in a bucket using the specified credentials.\n This method allows the specification of additional listing options.</p>\n <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">This function is declared as deterministic and should be used whenever result\n caching is acceptable.</p>\n <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">Example:\n <pre>\n let $options :=\n {\n   \"delimiter\": \"/\",\n   \"marker\": \"\",\n   \"maxKeys\": 1,\n   \"prefix\": \"\"\n }\n return s3:list-bucket(\"credentials\", \"28msec\", $options)\n </pre>\n </p>\n <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">The options object must have the following structure:\n <ul>\n   <li>delimiter: the delimiter marks where the listed results stop. For example,\n       a delimiter / lists all objects starting with $prefix plus arbitrary\n       characters but not / (string, optional). Default is the empty string,\n       that is, all objects are listed.</li>\n   <li>marker: specifies a key as starting point; following keys (lexicographically\n       greater than the marker) in alphabetical order are listed (string, optional).\n       Default is the empty string, that is, all objects are listed.</li>\n   <li>maxKeys: the maximum number of keys returned. If more keys than maxKeys\n       can be fetched, the result contains <IsTruncated>true</IsTruncated>\n       (integer, optional). Default is 1000.</li>\n   <li>prefix: only keys starting with the prefix are returned (string, optional).\n       Default is the empty string, that is, all objects are listed.</li>\n </ul>\n </p>\n <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">Example result:\n <pre>\n {\n   \"name\": \"bucket\",\n   \"prefix\": \"\",\n   \"marker\" : \"\",\n   \"nextMarker\": \"marker\",\n   \"maxKeys\": 1,\n   \"delimiter\": \"/\",\n   \"isTruncated\": true,\n   \"contents\":\n   [\n     {\n       \"key\": \"image.jpg\",\n       \"lastModified\": \"2009-10-12T17:50:30.000Z\",\n       \"eTag\": \"\\\"fba9dede5f27731c9771645a39863328\\\"\",\n       \"size\": 434234,\n       \"storageClass\": \"STANDARD\"\n       \"owner\":\n       {\n         \"id\": \"75aa57f09aa0c8caeab4f8c24e99d10f8e7faeebf76c078efc7c6caea54ba06a\"\n         \"displayName\": \"mtd@amazon.com\"\n       }\n     }\n   ],\n   \"commonPrefixes\": [\"photos/\"]\n }\n </pre>\n </p>\n <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">The fields in the returned object have the following meanings:\n <ul>\n   <li>name: the bucket name (string, mandatory).</li>\n   <li>prefix: the used prefix (string, mandatory).</li>\n   <li>marker: indicates where in the bucket listing begins (string, mandatory).</li>\n   <li>nextMarker: when the response is truncated, you can use the key name\n   in this field as marker in the subsequent request to get next set of objects.\n   Amazon S3 lists objects in alphabetical order. This field is returned only\n   if you have specified the delimiter request parameter. If the response does\n   not include the nextMaker field and it is truncated, you can use the value\n   of the last Key in the response as the marker in the subsequent request to\n   get the next set of object keys. (string, optional)</li>\n   <li>maxKeys: the maximum number of keys returned in the response body\n   (integer, mandatory).</li>\n   <li>delimiter: the used delimiter (string, optional).</li>\n   <li>isTruncated: whether or not all of the results were returned. All of the\n   results may not be returned if the number of results exceeds that specified\n   by the maxKeys request parameter (boolean, mandatory).</li>\n   <li>contents: an array of objects listing the bucket content  (array, mandatory).\n   The fields of each contained object have the following meaning:\n   <ul>\n     <li>key: the object key (string, mandatory).</li>\n     <li>lastModified: the object last modification date (dateTime, mandatory).</li>\n     <li>eTag: the entity tag is a hash of the object. The eTag only reflects\n     changes to the contents of an object, not its metadata. The eTag is determined\n     when an object is created. For objects created by the PUT Object operation\n     and the POST Object operation, the eTag is a quoted, 32-digit hexadecimal\n     string representing the MD5 digest of the object data. For other objects,\n     the eTag may or may not be an MD5 digest of the object data. If the eTag is\n     not an MD5 digest of the object data, it will contain one or more non-hexadecimal\n     characters and/or will consist of less than 32 or more than 32 hexadecimal\n     digits.(string, mandatory).</li>\n     <li>storageClass: the object storage class. One of \"STANDARD\",\n     \"REDUCED_REDUNDANCY\" or \"GLACIER\" (string, mandatory).</li>\n     <li>owner: an object which specifies the owner of the object (object,\n     optional). It has the following fields:\n     <ul>\n       <li>id: the user identifier of the object owner (string, mandatory).</li>\n       <li>displayName: the screen name of the object owner (string, mandatory).</li>\n     </ul>\n     </li>\n   </ul>\n   </li>\n   <li>commonPrefixes: an array of strings which contains the list of the common\n   prefixes. It can be present only when the delimiter request parameter is\n   specified (array, optional).</li>\n </ul>\n </p>\n", "summary" : "<p>  Lists the objects in a bucket using the specified credentials.</p>", "annotation_str" : "", "annotations" : [  ], "updating" : false, "parameters" : [ { "name" : "credentials", "type" : "item()", "occurrence" : "?", "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> The credentials to use.</div>" }, { "name" : "bucket", "type" : "string", "occurrence" : "?", "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> The bucket to list. If the empty sequence is given, the default bucket of the specified credentials will be listed.</div>" }, { "name" : "options", "type" : "object()", "occurrence" : "?", "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> The listing options.</div>" } ], "returns" : { "type" : "object()", "description" : "the list of the object in the specified bucket" }, "errors" : [ "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">s3:CREDENTIALS if the specified S3 credentials cannot be found or are invalid</xqdoc:error>", "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">s3:BUCKET if no bucket has been specified and no default bucket is present in the used credentials</xqdoc:error>", "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">s3:OPTIONS if the specified options are invalid</xqdoc:error>", "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">s3:HTTP an HTTP error occurred sending the request to S3</xqdoc:error>", "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">s3:REQUEST S3 refused to execute the request</xqdoc:error>", "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">s3:RESPONSE the response received from S3 cannot be parsed</xqdoc:error>" ] }, { "isDocumented" : true, "arity" : 0, "name" : "list-buckets-nondeterministic", "qname" : "s3:list-buckets-nondeterministic", "signature" : "() as object()", "description" : " <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">Lists all buckets owned by the account of the default S3 credentials.</p>\n <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">This function has the same semantics as\n <a href=\"#list-buckets-0\">list-buckets#0</a>,\n but is declared as being non deterministic and thus should only be used when\n result caching is not desired.</p>\n", "summary" : "<p>  Lists all buckets owned by the account of the default S3 credentials.</p>", "annotation_str" : " %an:nondeterministic", "annotations" : [ { "prefix" : "an", "ns" : "http://zorba.io/annotations", "name" : "nondeterministic", "value" : "" } ], "updating" : false, "parameters" : [  ], "returns" : { "type" : "object()", "description" : "the owned buckets list" }, "errors" : [ "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">s3:CREDENTIALS if the default S3 credentials cannot be found or are invalid</xqdoc:error>", "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">s3:HTTP an HTTP error occurred sending the request to S3</xqdoc:error>", "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">s3:REQUEST S3 refused to execute the request</xqdoc:error>", "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">s3:RESPONSE the response received from S3 cannot be parsed</xqdoc:error>" ] }, { "isDocumented" : true, "arity" : 1, "name" : "list-buckets-nondeterministic", "qname" : "s3:list-buckets-nondeterministic", "signature" : "($credentials as item()?) as object()", "description" : " <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">Lists all buckets owned by the account of the specified S3 credentials.</p>\n <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">This function has the same semantics as\n <a href=\"#list-buckets-1\">list-buckets#1</a>,\n but is declared as being non deterministic and thus should only be used when\n result caching is not desired.</p>\n", "summary" : "<p>  Lists all buckets owned by the account of the specified S3 credentials.</p>", "annotation_str" : " %an:nondeterministic", "annotations" : [ { "prefix" : "an", "ns" : "http://zorba.io/annotations", "name" : "nondeterministic", "value" : "" } ], "updating" : false, "parameters" : [ { "name" : "credentials", "type" : "item()", "occurrence" : "?", "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> The credentials to use.</div>" } ], "returns" : { "type" : "object()", "description" : "the owned buckets list" }, "errors" : [ "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">s3:CREDENTIALS if the specified S3 credentials cannot be found or are invalid</xqdoc:error>", "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">s3:HTTP an HTTP error occurred sending the request to S3</xqdoc:error>", "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">s3:REQUEST S3 refused to execute the request</xqdoc:error>", "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">s3:RESPONSE the response received from S3 cannot be parsed</xqdoc:error>" ] }, { "isDocumented" : true, "arity" : 0, "name" : "list-buckets", "qname" : "s3:list-buckets", "signature" : "() as object()", "description" : " <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">Lists all buckets owned by the account of the default S3 credentials.</p>\n <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">This function is declared as deterministic and should be used whenever result\n caching is acceptable.</p>\n <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">Example:\n <pre>\n s3:list-buckets()\n </pre>\n </p>\n <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">Example return object:\n <pre>\n {\n   \"owner\" :\n   {\n     \"id\": \"dfe08489302934392afe39239fe953039d9e2af0c94\",\n     \"displayName\": \"28msec\"\n   },\n   \"buckets\" :\n   [\n     {\n       \"name\": \"28msec\",\n       \"creationDate\": \"2010-11-03T17:42:45.000Z\",\n     }\n   ]\n }\n </pre>\n </p>\n <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">The fields in the returned object have the following meanings:\n <ul>\n   <li>owner: an object which specifies the owner of the bucket (object,\n   mandatory). It has the following fields:\n   <ul>\n     <li>id: the user identifier of the bucket owner (string, mandatory).</li>\n     <li>displayName: the screen name of the bucket owner (string, mandatory).</li>\n   </ul>\n   </li>\n   <li>buckets: an array which contains an object for each owned bucket\n   (array, mandatory). Each object contains the following fields:\n   <ul>\n     <li>name: the bucket name (string, mandatory).</li>\n     <li>creationDate: the bucket creation date. (dateTime, mandatory).</li>\n   </ul>\n   </li>\n </ul>\n </p>\n", "summary" : "<p>  Lists all buckets owned by the account of the default S3 credentials.</p>", "annotation_str" : "", "annotations" : [  ], "updating" : false, "parameters" : [  ], "returns" : { "type" : "object()", "description" : "the owned buckets list" }, "errors" : [ "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">s3:CREDENTIALS if the default S3 credentials cannot be found or are invalid</xqdoc:error>", "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">s3:HTTP an HTTP error occurred sending the request to S3</xqdoc:error>", "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">s3:REQUEST S3 refused to execute the request</xqdoc:error>", "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">s3:RESPONSE the response received from S3 cannot be parsed</xqdoc:error>" ] }, { "isDocumented" : true, "arity" : 1, "name" : "list-buckets", "qname" : "s3:list-buckets", "signature" : "($credentials as item()?) as object()", "description" : " <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">Lists all buckets owned by the account of the specified S3 credentials.</p>\n <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">This function is declared as deterministic and should be used whenever result\n caching is acceptable.</p>\n <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">Example:\n <pre>\n s3:list-buckets(\"credentials\")\n </pre>\n </p>\n <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">Example return object:\n <pre>\n {\n   \"owner\" :\n   {\n     \"id\": \"dfe08489302934392afe39239fe953039d9e2af0c94\",\n     \"displayName\": \"28msec\"\n   },\n   \"buckets\" :\n   [\n     {\n       \"name\": \"28msec\",\n       \"creationDate\": \"2010-11-03T17:42:45.000Z\",\n     }\n   ]\n }\n </pre>\n </p>\n <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">The fields in the returned object have the following meanings:\n <ul>\n   <li>owner: an object which specifies the owner of the bucket (object,\n   mandatory). It has the following fields:\n   <ul>\n     <li>id: the user identifier of the bucket owner (string, mandatory).</li>\n     <li>displayName: the screen name of the bucket owner (string, mandatory).</li>\n   </ul>\n   </li>\n   <li>buckets: an array which contains an object for each owned bucket\n   (array, mandatory). Each object contains the following fields:\n   <ul>\n     <li>name: the bucket name (string, mandatory).</li>\n     <li>creationDate: the bucket creation date. (dateTime, mandatory).</li>\n   </ul>\n   </li>\n </ul>\n </p>\n", "summary" : "<p>  Lists all buckets owned by the account of the specified S3 credentials.</p>", "annotation_str" : "", "annotations" : [  ], "updating" : false, "parameters" : [ { "name" : "credentials", "type" : "item()", "occurrence" : "?", "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> The credentials to use.</div>" } ], "returns" : { "type" : "object()", "description" : "the owned buckets list" }, "errors" : [ "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">s3:CREDENTIALS if the specified S3 credentials cannot be found or are invalid</xqdoc:error>", "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">s3:HTTP an HTTP error occurred sending the request to S3</xqdoc:error>", "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">s3:REQUEST S3 refused to execute the request</xqdoc:error>", "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">s3:RESPONSE the response received from S3 cannot be parsed</xqdoc:error>" ] }, { "isDocumented" : true, "arity" : 1, "name" : "object-metadata-nondeterministic", "qname" : "s3:object-metadata-nondeterministic", "signature" : "($s3-object as item()) as object()", "description" : " <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">Retrieves an object metadata using the default S3 credentials.</p>\n <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">This function has the same semantics as\n <a href=\"#object-metadata-1\">object-metadata#1</a>,\n but is declared as being non deterministic and thus should only be used when\n result caching is not desired.</p>\n", "summary" : "<p>  Retrieves an object metadata using the default S3 credentials.</p>", "annotation_str" : " %an:nondeterministic", "annotations" : [ { "prefix" : "an", "ns" : "http://zorba.io/annotations", "name" : "nondeterministic", "value" : "" } ], "updating" : false, "parameters" : [ { "name" : "s3-object", "type" : "item()", "occurrence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> The S3 object or object version to retrieve the metadata for.</div>" } ], "returns" : { "type" : "object()", "description" : "the specified object metadata." }, "errors" : [ "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">s3:CREDENTIALS if the default S3 credentials cannot be found or are invalid</xqdoc:error>", "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">s3:OBJECT if the object specification is invalid</xqdoc:error>", "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">s3:BUCKET if no bucket has been specified and no default bucket is present in the used credentials</xqdoc:error>", "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">s3:HTTP an HTTP error occurred sending the request to S3</xqdoc:error>", "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">s3:REQUEST S3 refused to execute the request</xqdoc:error>", "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">s3:RESPONSE the response received from S3 cannot be parsed</xqdoc:error>" ] }, { "isDocumented" : true, "arity" : 2, "name" : "object-metadata-nondeterministic", "qname" : "s3:object-metadata-nondeterministic", "signature" : "($credentials as item()?, $s3-object as item()) as object()", "description" : " <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">Retrieves an object metadata using the specified S3 credentials.</p>\n <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">This function has the same semantics as\n <a href=\"#object-metadata-2\">object-metadata#2</a>,\n but is declared as being non deterministic and thus should only be used when\n result caching is not desired.</p>\n", "summary" : "<p>  Retrieves an object metadata using the specified S3 credentials.</p>", "annotation_str" : " %an:nondeterministic", "annotations" : [ { "prefix" : "an", "ns" : "http://zorba.io/annotations", "name" : "nondeterministic", "value" : "" } ], "updating" : false, "parameters" : [ { "name" : "credentials", "type" : "item()", "occurrence" : "?", "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> The credentials to use.</div>" }, { "name" : "s3-object", "type" : "item()", "occurrence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> The S3 object or object version to retrieve the metadata for.</div>" } ], "returns" : { "type" : "object()", "description" : "the specified object metadata." }, "errors" : [ "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">s3:CREDENTIALS if the specified S3 credentials cannot be found or are invalid</xqdoc:error>", "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">s3:OBJECT if the object specification is invalid</xqdoc:error>", "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">s3:BUCKET if no bucket has been specified and no default bucket is present in the used credentials</xqdoc:error>", "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">s3:HTTP an HTTP error occurred sending the request to S3</xqdoc:error>", "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">s3:REQUEST S3 refused to execute the request</xqdoc:error>", "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">s3:RESPONSE the response received from S3 cannot be parsed</xqdoc:error>" ] }, { "isDocumented" : true, "arity" : 1, "name" : "object-metadata", "qname" : "s3:object-metadata", "signature" : "($s3-object as item()) as object()", "description" : " <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">Retrieves an object metadata using the default S3 credentials.</p>\n <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">This function is declared as deterministic and should be used whenever result\n caching is acceptable.</p>\n <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">The S3 object is specified through the $s3-object parameter. Either a string\n or a JSON object can be used. If a string is specified, it is interpreted as\n key for an object in the default bucket of the default credentials. If no default\n bucket is present in the default credentials, the <code>s3:BUCKET</code> error\n is raised. If a JSON object is used, it must have the following structure:\n <ul>\n   <li>key: the object key (string, mandatory).</li>\n   <li>bucket: the bucket name (string, optional). If this field is not present\n   and the default credentials do not have a default bucket, the\n   <code>s3:BUCKET</code> error is raised.</li>\n   <li>version: the object version (string, optional). If versioning is enabled\n   for the specified object and no version is specified the metadata of the\n   latest version of the object will be returned. If specified, only the\n   metadata of that particular version of the object will be returned.</li>\n </ul>\n </p>\n <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">Example:\n <pre>\n let $object :=\n {\n   \"key\": \"object\",\n   \"bucket\": \"28msec\",\n   \"version\": \"3/L4kqtJlcpXroDTDmJ+rmSpXd3dIbrHY+MTRCxf3vjVBH40Nr8X8gdRQBpUMLUo\"\n }\n return s3:metadata-object($object)\n </pre>\n </p>\n <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">Example return object:\n <pre>\n {\n   \"key\": \"test.xml\",\n   \"bucket\": \"28msec\",\n   \"metadata\":\n   {\n     \"author\": \"28msec\"\n   },\n   \"missing-metadata\" : 1,\n   \"version\": \"3GL4kqtJlcpXroDTDm3vjVBH40Nr8X8g\",\n   \"expiration\": \"expiry-date=\\\"Fri, 21 Dec 2012 00:00:00 GMT\\\", rule-id=\\\"Rule for testfile.txt\\\"\"\n   \"restore\": \"x-amz-restore: ongoing-request=\\\"false\\\", expiry-date=\\\"Wed, 07 Nov 2012 00:00:00 GMT\\\"\"\n   \"serverSideEncryption\": \"AES256\",\n   \"lastModified\": \"Mon, 15 Oct 2012 21:58:07 GMT\",\n   \"eTag\": \"1accb31fcf202eba0c0f41fa2f09b4d7\",\n   \"mediaType\": \"text/plain\"\n   \"length\": \"28\"\n }\n </pre>\n </p>\n <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">The fields in the returned object have the following meanings:\n <ul>\n   <li>key: the object key (string, mandatory).</li>\n   <li>bucket: the bucket name (string, mandatory).</li>\n   <li>metadata: an object specifying additional metadata. Each metadata is a\n   name-value pair and is represented as different fields (object, optional).</li>\n   <li>missing-metadata: the number of metadata entries that were not returned\n   in the metadata object. This can happen if you create metadata using an API\n   like SOAP that supports more flexible metadata than the REST API. (integer,\n   optional).</li>\n   <li>version: the object version (string, optional). If versioning is enabled\n   for the specified object and no version is specified the permissions for the\n   latest version of the object will be returned. If specified, only the\n   permissions for that particular version of the object will be returned.</li>\n   <li>expiration: if the object expiration is configured (see\n   <a href=\"http://docs.aws.amazon.com/AmazonS3/latest/API/RESTBucketPUTlifecycle.html\">PUT Bucket lifecycle</a>),\n   this field is present. It includes the expiry-date and rule-id key value\n   pairs providing object expiration information. The value of rule-id is URL\n   encoded.(string, optional).</li>\n   <li>restore: if the object is an archived object (an object whose storage\n   class is Glacier), the response includes this header if either the archive\n   restoration is in progress (see\n   <a href=\"http://docs.aws.amazon.com/AmazonS3/latest/API/RESTObjectPOSTrestore.html\">POST Object restore</a>),\n   or an archive copy is already restored.(string, optional).</li>\n   <li>serverSideEncryption: If the object is stored by using server-side\n   encryption, the response includes this header with a value of the encryption\n   algorithm that was used.(string, optional).</li>\n   <li>lastModified: the date in which the object was last modified (dateTime,\n   optional).</li>\n   <li>eTag: the entity tag is a hash of the object. The eTag only reflects\n   changes to the contents of an object, not its metadata. The eTag is determined\n   when an object is created. For objects created by the PUT Object operation\n   and the POST Object operation, the eTag is a quoted, 32-digit hexadecimal\n   string representing the MD5 digest of the object data. For other objects,\n   the eTag may or may not be an MD5 digest of the object data. If the eTag is\n   not an MD5 digest of the object data, it will contain one or more non-hexadecimal\n   characters and/or will consist of less than 32 or more than 32 hexadecimal\n   digits.(string, optional).</li>\n   <li>mediaType: the object media-type (string, mandatory).</li>\n   <li>length: the object content length (integer, optional).</li>\n </ul>\n </p>\n", "summary" : "<p>  Retrieves an object metadata using the default S3 credentials.</p>", "annotation_str" : "", "annotations" : [  ], "updating" : false, "parameters" : [ { "name" : "s3-object", "type" : "item()", "occurrence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> The S3 object or object version to retrieve the metadata for.</div>" } ], "returns" : { "type" : "object()", "description" : "the specified object metadata." }, "errors" : [ "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">s3:CREDENTIALS if the default S3 credentials cannot be found or are invalid</xqdoc:error>", "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">s3:OBJECT if the object specification is invalid</xqdoc:error>", "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">s3:BUCKET if no bucket has been specified and no default bucket is present in the used credentials</xqdoc:error>", "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">s3:HTTP an HTTP error occurred sending the request to S3</xqdoc:error>", "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">s3:REQUEST S3 refused to execute the request</xqdoc:error>", "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">s3:RESPONSE the response received from S3 cannot be parsed</xqdoc:error>" ] }, { "isDocumented" : true, "arity" : 2, "name" : "object-metadata", "qname" : "s3:object-metadata", "signature" : "($credentials as item()?, $s3-object as item()) as object()", "description" : " <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">Retrieves an object metadata using the specified S3 credentials.</p>\n <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">This function is declared as deterministic and should be used whenever result\n caching is acceptable.</p>\n <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">The S3 object is specified through the $s3-object parameter. Either a string\n or a JSON object can be used. If a string is specified, it is interpreted as\n key for an object in the default bucket of the specified credentials. If no default\n bucket is present in the specified credentials, the <code>s3:BUCKET</code> error\n is raised. If a JSON object is used, it must have the following structure:\n <ul>\n   <li>key: the object key (string, mandatory).</li>\n   <li>bucket: the bucket name (string, optional). If this field is not present\n   and the specified credentials do not have a default bucket, the\n   <code>s3:BUCKET</code> error is raised.</li>\n   <li>version: the object version (string, optional). If versioning is enabled\n   for the specified object and no version is specified the metadata of the\n   latest version of the object will be returned. If specified, only the\n   metadata of that particular version of the object will be returned.</li>\n </ul>\n </p>\n <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">Example:\n <pre>\n let $object :=\n {\n   \"key\": \"object\",\n   \"bucket\": \"28msec\",\n   \"version\": \"3/L4kqtJlcpXroDTDmJ+rmSpXd3dIbrHY+MTRCxf3vjVBH40Nr8X8gdRQBpUMLUo\"\n }\n return s3:metadata-object(\"credentials\", $object)\n </pre>\n </p>\n <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">Example return object:\n <pre>\n {\n   \"key\": \"test.xml\",\n   \"bucket\": \"28msec\",\n   \"metadata\":\n   {\n     \"author\": \"28msec\"\n   },\n   \"missing-metadata\" : 1,\n   \"version\": \"3GL4kqtJlcpXroDTDm3vjVBH40Nr8X8g\",\n   \"expiration\": \"expiry-date=\\\"Fri, 21 Dec 2012 00:00:00 GMT\\\", rule-id=\\\"Rule for testfile.txt\\\"\"\n   \"restore\": \"x-amz-restore: ongoing-request=\\\"false\\\", expiry-date=\\\"Wed, 07 Nov 2012 00:00:00 GMT\\\"\"\n   \"serverSideEncryption\": \"AES256\",\n   \"lastModified\": \"Mon, 15 Oct 2012 21:58:07 GMT\",\n   \"eTag\": \"1accb31fcf202eba0c0f41fa2f09b4d7\",\n   \"mediaType\": \"text/plain\"\n   \"length\": \"28\"\n }\n </pre>\n </p>\n <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">The fields in the returned object have the following meanings:\n <ul>\n   <li>key: the object key (string, mandatory).</li>\n   <li>bucket: the bucket name (string, mandatory).</li>\n   <li>metadata: an object specifying additional metadata. Each metadata is a\n   name-value pair and is represented as different fields (object, optional).</li>\n   <li>missing-metadata: the number of metadata entries that were not returned\n   in the metadata object. This can happen if you create metadata using an API\n   like SOAP that supports more flexible metadata than the REST API. (integer,\n   optional).</li>\n   <li>version: the object version (string, optional). If versioning is enabled\n   for the specified object and no version is specified the permissions for the\n   latest version of the object will be returned. If specified, only the\n   permissions for that particular version of the object will be returned.</li>\n   <li>expiration: if the object expiration is configured (see\n   <a href=\"http://docs.aws.amazon.com/AmazonS3/latest/API/RESTBucketPUTlifecycle.html\">PUT Bucket lifecycle</a>),\n   this field is present. It includes the expiry-date and rule-id key value\n   pairs providing object expiration information. The value of rule-id is URL\n   encoded.(string, optional).</li>\n   <li>restore: if the object is an archived object (an object whose storage\n   class is Glacier), the response includes this header if either the archive\n   restoration is in progress (see\n   <a href=\"http://docs.aws.amazon.com/AmazonS3/latest/API/RESTObjectPOSTrestore.html\">POST Object restore</a>),\n   or an archive copy is already restored.(string, optional).</li>\n   <li>serverSideEncryption: If the object is stored by using server-side\n   encryption, the response includes this header with a value of the encryption\n   algorithm that was used.(string, optional).</li>\n   <li>lastModified: the date in which the object was last modified (dateTime,\n   optional).</li>\n   <li>eTag: the entity tag is a hash of the object. The eTag only reflects\n   changes to the contents of an object, not its metadata. The eTag is determined\n   when an object is created. For objects created by the PUT Object operation\n   and the POST Object operation, the eTag is a quoted, 32-digit hexadecimal\n   string representing the MD5 digest of the object data. For other objects,\n   the eTag may or may not be an MD5 digest of the object data. If the eTag is\n   not an MD5 digest of the object data, it will contain one or more non-hexadecimal\n   characters and/or will consist of less than 32 or more than 32 hexadecimal\n   digits.(string, optional).</li>\n   <li>mediaType: the object media-type (string, mandatory).</li>\n   <li>length: the object content length (integer, optional).</li>\n </ul>\n </p>\n", "summary" : "<p>  Retrieves an object metadata using the specified S3 credentials.</p>", "annotation_str" : "", "annotations" : [  ], "updating" : false, "parameters" : [ { "name" : "credentials", "type" : "item()", "occurrence" : "?", "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> The credentials to use.</div>" }, { "name" : "s3-object", "type" : "item()", "occurrence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> The S3 object or object version to retrieve the metadata for.</div>" } ], "returns" : { "type" : "object()", "description" : "the specified object metadata." }, "errors" : [ "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">s3:CREDENTIALS if the specified S3 credentials cannot be found or are invalid</xqdoc:error>", "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">s3:OBJECT if the object specification is invalid</xqdoc:error>", "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">s3:BUCKET if no bucket has been specified and no default bucket is present in the used credentials</xqdoc:error>", "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">s3:HTTP an HTTP error occurred sending the request to S3</xqdoc:error>", "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">s3:REQUEST S3 refused to execute the request</xqdoc:error>", "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">s3:RESPONSE the response received from S3 cannot be parsed</xqdoc:error>" ] }, { "isDocumented" : true, "arity" : 1, "name" : "object-permissions-nondeterministic", "qname" : "s3:object-permissions-nondeterministic", "signature" : "($s3-object as item()) as object()", "description" : " <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">Retrieves the access control list (ACL) of an S3 object using the default\n S3 credentials.</p>\n <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">This function has the same semantics as\n <a href=\"#object-permissions-1\">object-permissions#1</a>,\n but is declared as being non deterministic and thus should only be used when\n result caching is not desired.</p>\n", "summary" : "<p>  Retrieves the access control list (ACL) of an S3 object using the default\n S3 credentials.</p>", "annotation_str" : " %an:nondeterministic", "annotations" : [ { "prefix" : "an", "ns" : "http://zorba.io/annotations", "name" : "nondeterministic", "value" : "" } ], "updating" : false, "parameters" : [ { "name" : "s3-object", "type" : "item()", "occurrence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> The S3 object or object version to retrieve the ACL for.</div>" } ], "returns" : { "type" : "object()", "description" : "the object ACL" }, "errors" : [ "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">s3:CREDENTIALS if the default S3 credentials cannot be found or are invalid</xqdoc:error>", "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">s3:OBJECT if the object specification is invalid</xqdoc:error>", "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">s3:BUCKET if no bucket has been specified and no default bucket is present in the used credentials</xqdoc:error>", "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">s3:HTTP an HTTP error occurred sending the request to S3</xqdoc:error>", "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">s3:REQUEST S3 refused to execute the request</xqdoc:error>", "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">s3:RESPONSE the response received from S3 cannot be parsed</xqdoc:error>" ] }, { "isDocumented" : true, "arity" : 2, "name" : "object-permissions-nondeterministic", "qname" : "s3:object-permissions-nondeterministic", "signature" : "($credentials as item()?, $s3-object as item()) as object()", "description" : " <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">Retrieves the access control list (ACL) of an S3 object using the specified\n credentials.</p>\n <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">This function has the same semantics as\n <a href=\"#object-permissions-2\">object-permissions#2</a>,\n but is declared as being non deterministic and thus should only be used when\n result caching is not desired.</p>\n", "summary" : "<p>  Retrieves the access control list (ACL) of an S3 object using the specified\n credentials.</p>", "annotation_str" : " %an:nondeterministic", "annotations" : [ { "prefix" : "an", "ns" : "http://zorba.io/annotations", "name" : "nondeterministic", "value" : "" } ], "updating" : false, "parameters" : [ { "name" : "credentials", "type" : "item()", "occurrence" : "?", "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> The credentials to use.</div>" }, { "name" : "s3-object", "type" : "item()", "occurrence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> The S3 object or object version to retrieve the ACL for.</div>" } ], "returns" : { "type" : "object()", "description" : "the object ACL" }, "errors" : [ "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">s3:CREDENTIALS if the specified S3 credentials cannot be found or are invalid</xqdoc:error>", "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">s3:OBJECT if the object specification is invalid</xqdoc:error>", "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">s3:BUCKET if no bucket has been specified and no default bucket is present in the used credentials</xqdoc:error>", "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">s3:HTTP an HTTP error occurred sending the request to S3</xqdoc:error>", "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">s3:REQUEST S3 refused to execute the request</xqdoc:error>", "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">s3:RESPONSE the response received from S3 cannot be parsed</xqdoc:error>" ] }, { "isDocumented" : true, "arity" : 1, "name" : "object-permissions", "qname" : "s3:object-permissions", "signature" : "($s3-object as item()) as object()", "description" : " <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">Retrieves the access control list (ACL) of an S3 object using the default\n S3 credentials.</p>\n <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">This function is declared as deterministic and should be used whenever result\n caching is acceptable.</p>\n <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">The S3 object is specified through the $s3-object parameter. Either a string\n or a JSON object can be used. If a string is specified, it is interpreted as\n key for an object in the default bucket of the default credentials. If no default\n bucket is present in the default credentials, the <code>s3:BUCKET</code> error\n is raised. If a JSON object is used, it must have the following structure:\n <ul>\n   <li>key: the object key (string, mandatory).</li>\n   <li>bucket: the bucket name (string, optional). If this field is not present\n   and the default credentials do not have a default bucket, the\n   <code>s3:BUCKET</code> error is raised.</li>\n   <li>version: the object version (string, optional). If versioning is enabled\n   for the specified object and no version is specified the permissions for the\n   latest version of the object will be returned. If specified, only the\n   permissions for that particular version of the object will be returned.</li>\n </ul>\n </p>\n <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">Example:\n <pre>\n let $object :=\n {\n   \"key\": \"object\",\n   \"bucket\": \"28msec\",\n   \"version\": \"3/L4kqtJlcpXroDTDmJ+rmSpXd3dIbrHY+MTRCxf3vjVBH40Nr8X8gdRQBpUMLUo\"\n }\n return s3:object-permissions($object)\n </pre>\n </p>\n <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">Example return object:\n <pre>\n {\n   \"owner\" :\n   {\n     \"id\" : \"ea3617f5543e366a51bf51f440c221410b8001c34744e9d3a81acb79cff9d2ed\",\n     \"displayName\" : \"28msec\"\n   },\n   \"acl\" :\n   [\n     {\n       \"grantee\" :\n       {\n         \"type\" : \"CanonicalUser\",\n         \"id\" : \"ea3617f5543e366a51bf51f440c221410b8001c34744e9d3a81acb79cff9d2ed\",\n         \"displayName\" : \"28msec\"\n       },\n       \"permission\" : \"FULL_CONTROL\"\n     }\n   ]\n }\n </pre>\n </p>\n <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">The fields in the returned object have the following meanings:\n <ul>\n <li>owner: an object which specifies the owner of the object (object,\n mandatory). It has the following fields:\n   <ul>\n     <li>id: the user identifier of the object owner (string, mandatory).</li>\n     <li>displayName: the screen name of the object owner (string, mandatory).</li>\n   </ul>\n </li>\n <li>acl: an array which contains an object for each grantee with the corresponding\n ACL settings (array, mandatory). Each object contains the following fields:\n   <ul>\n     <li>grantee: specifies the permissions grantee (object, mandatory). It\n     contains the following fields:\n       <ul>\n         <li>type: one of \"AmazonCustomerByEmail\", \"CanonicalUser\" or \"Group\".</li>\n         <li>emailAddress: the customer email address (string, present in all\n         and only AmazonCustomerByEmail grantees).</li>\n         <li>id: the user identifier (string, present in all and only CanonicalUser\n         grantees).</li>\n         <li>displayName: the user screen name (string, present in all and only\n         CanonicalUser grantees).</li>\n         <li>URI: the group URI (string, present in all and only Group grantees).</li>\n       </ul>\n     </li>\n     <li>permission: the granted permissions. One of \"READ\", \"WRITE\", \"READ_ACP\",\n     \"WRITE_ACP\", \"FULL_CONTROL\". (string, mandatory).</li>\n   </ul>\n </li>\n </ul>\n </p>\n", "summary" : "<p>  Retrieves the access control list (ACL) of an S3 object using the default\n S3 credentials.</p>", "annotation_str" : "", "annotations" : [  ], "updating" : false, "parameters" : [ { "name" : "s3-object", "type" : "item()", "occurrence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> The S3 object or object version to retrieve the ACL for.</div>" } ], "returns" : { "type" : "object()", "description" : "the object ACL" }, "errors" : [ "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">s3:CREDENTIALS if the default S3 credentials cannot be found or are invalid</xqdoc:error>", "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">s3:OBJECT if the object specification is invalid</xqdoc:error>", "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">s3:BUCKET if no bucket has been specified and no default bucket is present in the used credentials</xqdoc:error>", "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">s3:HTTP an HTTP error occurred sending the request to S3</xqdoc:error>", "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">s3:REQUEST S3 refused to execute the request</xqdoc:error>", "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">s3:RESPONSE the response received from S3 cannot be parsed</xqdoc:error>" ] }, { "isDocumented" : true, "arity" : 2, "name" : "object-permissions", "qname" : "s3:object-permissions", "signature" : "($credentials as item()?, $s3-object as item()) as object()", "description" : " <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">Retrieves the access control list (ACL) of an S3 object using the specified\n credentials.</p>\n <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">This function is declared as deterministic and should be used whenever result\n caching is acceptable.</p>\n <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">The S3 object is specified through the $s3-object parameter. Either a string\n or a JSON object can be used. If a string is specified, it is interpreted as\n key for an object in the default bucket of the specified credentials. If no default\n bucket is present in the specified credentials, the <code>s3:BUCKET</code> error\n is raised. If a JSON object is used, it must have the following structure:\n <ul>\n   <li>key: the object key (string, mandatory).</li>\n   <li>bucket: the bucket name (string, optional). If this field is not present\n   and the specified credentials does not have a default bucket, the\n   <code>s3:BUCKET</code> error is raised.</li>\n   <li>version: the object version (string, optional). If versioning is enabled\n   for the specified object and no version is specified the permissions for the\n   latest version of the object will be returned. If specified, only the\n   permissions for that particular version of the object will be returned.</li>\n </ul>\n </p>\n <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">Example:\n <pre>\n let $object :=\n {\n   \"key\": \"object\",\n   \"bucket\": \"28msec\",\n   \"version\": \"3/L4kqtJlcpXroDTDmJ+rmSpXd3dIbrHY+MTRCxf3vjVBH40Nr8X8gdRQBpUMLUo\"\n }\n return s3:object-permissions(\"credentials\", $object)\n </pre>\n </p>\n <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">Example return object:\n <pre>\n {\n   \"owner\" :\n   {\n     \"id\" : \"ea3617f5543e366a51bf51f440c221410b8001c34744e9d3a81acb79cff9d2ed\",\n     \"displayName\" : \"28msec\"\n   },\n   \"acl\" :\n   [\n     {\n       \"grantee\" :\n       {\n         \"type\" : \"CanonicalUser\",\n         \"id\" : \"ea3617f5543e366a51bf51f440c221410b8001c34744e9d3a81acb79cff9d2ed\",\n         \"displayName\" : \"28msec\"\n       },\n       \"permission\" : \"FULL_CONTROL\"\n     }\n   ]\n }\n </pre>\n </p>\n <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">The fields in the returned object have the following meanings:\n <ul>\n <li>owner: an object which specifies the owner of the object (object,\n mandatory). It has the following fields:\n   <ul>\n     <li>id: the user identifier of the object owner (string, mandatory).</li>\n     <li>displayName: the screen name of the object owner (string, mandatory).</li>\n   </ul>\n </li>\n <li>acl: an array which contains an object for each grantee with the corresponding\n ACL settings (array, mandatory). Each object contains the following fields:\n   <ul>\n     <li>grantee: specifies the permissions grantee (object, mandatory). It contains\n     the following fields:\n       <ul>\n         <li>type: one of \"AmazonCustomerByEmail\", \"CanonicalUser\" or \"Group\".</li>\n         <li>emailAddress: the customer email address (string, present in all\n         and only AmazonCustomerByEmail grantees).</li>\n         <li>id: the user identifier (string, present in all and only CanonicalUser\n         grantees).</li>\n         <li>displayName: the user screen name (string, present in all and only\n         CanonicalUser grantees).</li>\n         <li>URI: the group URI (string, present in all and only Group grantees).</li>\n       </ul>\n     </li>\n     <li>permission: the granted permissions. One of \"READ\", \"WRITE\", \"READ_ACP\",\n     \"WRITE_ACP\", \"FULL_CONTROL\". (string, mandatory).</li>\n   </ul>\n </li>\n </ul>\n </p>\n", "summary" : "<p>  Retrieves the access control list (ACL) of an S3 object using the specified\n credentials.</p>", "annotation_str" : "", "annotations" : [  ], "updating" : false, "parameters" : [ { "name" : "credentials", "type" : "item()", "occurrence" : "?", "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> The credentials to use.</div>" }, { "name" : "s3-object", "type" : "item()", "occurrence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> The S3 object or object version to retrieve the ACL for.</div>" } ], "returns" : { "type" : "object()", "description" : "the object ACL" }, "errors" : [ "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">s3:CREDENTIALS if the specified S3 credentials cannot be found or are invalid</xqdoc:error>", "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">s3:OBJECT if the object specification is invalid</xqdoc:error>", "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">s3:BUCKET if no bucket has been specified and no default bucket is present in the used credentials</xqdoc:error>", "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">s3:HTTP an HTTP error occurred sending the request to S3</xqdoc:error>", "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">s3:REQUEST S3 refused to execute the request</xqdoc:error>", "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">s3:RESPONSE the response received from S3 cannot be parsed</xqdoc:error>" ] }, { "isDocumented" : true, "arity" : 1, "name" : "object-torrent-nondeterministic", "qname" : "s3:object-torrent-nondeterministic", "signature" : "($s3-object as item()) as base64Binary", "description" : " <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">Returns a torrent file for a given object using the default S3 credentials.</p>\n <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">This function has the same semantics as\n <a href=\"#object-torrent-1\">object-torrent#1</a>,\n but is declared as being non deterministic and thus should only be used when\n result caching is not desired.</p>\n", "summary" : "<p>  Returns a torrent file for a given object using the default S3 credentials.</p>", "annotation_str" : " %an:nondeterministic", "annotations" : [ { "prefix" : "an", "ns" : "http://zorba.io/annotations", "name" : "nondeterministic", "value" : "" } ], "updating" : false, "parameters" : [ { "name" : "s3-object", "type" : "item()", "occurrence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> The S3 object to retrieve the torrent file for</div>" } ], "returns" : { "type" : "base64Binary", "description" : "the base64 encoded torrent file for the specified object." }, "errors" : [ "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">s3:CREDENTIALS if the default S3 credentials cannot be found or are invalid</xqdoc:error>", "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">s3:OBJECT if the object specification is invalid</xqdoc:error>", "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">s3:BUCKET if no bucket has been specified and no default bucket is present in the used credentials</xqdoc:error>", "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">s3:HTTP an HTTP error occurred sending the request to S3</xqdoc:error>", "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">s3:REQUEST S3 refused to execute the request</xqdoc:error>", "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">s3:RESPONSE the response received from S3 cannot be parsed</xqdoc:error>" ] }, { "isDocumented" : true, "arity" : 2, "name" : "object-torrent-nondeterministic", "qname" : "s3:object-torrent-nondeterministic", "signature" : "($credentials as item()?, $s3-object as item()) as base64Binary", "description" : " <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">Returns a torrent file for a given object using the specified S3 credentials.</p>\n <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">This function has the same semantics as\n <a href=\"#object-torrent-2\">object-torrent#2</a>,\n but is declared as being non deterministic and thus should only be used when\n result caching is not desired.</p>\n", "summary" : "<p>  Returns a torrent file for a given object using the specified S3 credentials.</p>", "annotation_str" : " %an:nondeterministic", "annotations" : [ { "prefix" : "an", "ns" : "http://zorba.io/annotations", "name" : "nondeterministic", "value" : "" } ], "updating" : false, "parameters" : [ { "name" : "credentials", "type" : "item()", "occurrence" : "?", "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> The credentials to use.</div>" }, { "name" : "s3-object", "type" : "item()", "occurrence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> The S3 object to retrieve the torrent file for</div>" } ], "returns" : { "type" : "base64Binary", "description" : "the base64 encoded torrent file of the specified object." }, "errors" : [ "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">s3:CREDENTIALS if the specified S3 credentials cannot be found or are invalid</xqdoc:error>", "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">s3:OBJECT if the object specification is invalid</xqdoc:error>", "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">s3:BUCKET if no bucket has been specified and no default bucket is present in the used credentials</xqdoc:error>", "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">s3:HTTP an HTTP error occurred sending the request to S3</xqdoc:error>", "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">s3:REQUEST S3 refused to execute the request</xqdoc:error>", "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">s3:RESPONSE the response received from S3 cannot be parsed</xqdoc:error>" ] }, { "isDocumented" : true, "arity" : 1, "name" : "object-torrent", "qname" : "s3:object-torrent", "signature" : "($s3-object as item()) as base64Binary", "description" : " <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">Returns a torrent file for a given object using the default S3 credentials.</p>\n <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">This function is declared as deterministic and should be used whenever result\n caching is acceptable.</p>\n <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">The S3 object is specified through the $s3-object parameter. Either a string\n or a JSON object can be used. If a string is specified, it is interpreted as\n key for an object in the default bucket of the default credentials. If no default\n bucket is present in the default credentials, the <code>s3:BUCKET</code> error\n is raised. If a JSON object is used, it must have the following structure:\n <ul>\n   <li>key: the object key (string, mandatory).</li>\n   <li>bucket: the bucket name (string, optional). If this field is not present\n   and the default credentials do not have a default bucket, the\n   <code>s3:BUCKET</code> error is raised.</li>\n </ul>\n </p>\n <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">Example:\n <pre>\n let $object :=\n {\n   \"key\": \"object\",\n   \"bucket\": \"28msec\"\n }\n return s3:object-torrent($object)\n </pre>\n </p>\n", "summary" : "<p>  Returns a torrent file for a given object using the default S3 credentials.</p>", "annotation_str" : "", "annotations" : [  ], "updating" : false, "parameters" : [ { "name" : "s3-object", "type" : "item()", "occurrence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> The S3 object to retrieve the torrent file for</div>" } ], "returns" : { "type" : "base64Binary", "description" : "the base64 encoded torrent file for the specified object." }, "errors" : [ "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">s3:CREDENTIALS if the default S3 credentials cannot be found or are invalid</xqdoc:error>", "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">s3:OBJECT if the object specification is invalid</xqdoc:error>", "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">s3:BUCKET if no bucket has been specified and no default bucket is present in the used credentials</xqdoc:error>", "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">s3:HTTP an HTTP error occurred sending the request to S3</xqdoc:error>", "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">s3:REQUEST S3 refused to execute the request</xqdoc:error>", "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">s3:RESPONSE the response received from S3 cannot be parsed</xqdoc:error>" ] }, { "isDocumented" : true, "arity" : 2, "name" : "object-torrent", "qname" : "s3:object-torrent", "signature" : "($credentials as item()?, $s3-object as item()) as base64Binary", "description" : " <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">Returns a torrent file for a given object using the specified S3 credentials.</p>\n <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">This function is declared as deterministic and should be used whenever result\n caching is acceptable.</p>\n <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">The S3 object is specified through the $s3-object parameter. Either a string\n or a JSON object can be used. If a string is specified, it is interpreted as\n key for an object in the default bucket of the specified credentials. If no default\n bucket is present in the specified credentials, the <code>s3:BUCKET</code> error\n is raised. If a JSON object is used, it must have the following structure:\n <ul>\n   <li>key: the object key (string, mandatory).</li>\n   <li>bucket: the bucket name (string, optional). If this field is not present\n   and the specified credentials do not have a default bucket, the\n   <code>s3:BUCKET</code> error is raised.</li>\n </ul>\n </p>\n <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">Example:\n <pre>\n let $object :=\n {\n   \"key\": \"object\",\n   \"bucket\": \"28msec\"\n }\n return s3:object-torrent($object)\n </pre>\n </p>\n", "summary" : "<p>  Returns a torrent file for a given object using the specified S3 credentials.</p>", "annotation_str" : "", "annotations" : [  ], "updating" : false, "parameters" : [ { "name" : "credentials", "type" : "item()", "occurrence" : "?", "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> The credentials to use.</div>" }, { "name" : "s3-object", "type" : "item()", "occurrence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> The S3 object to retrieve the torrent file for</div>" } ], "returns" : { "type" : "base64Binary", "description" : "the base64 encoded torrent file of the specified object." }, "errors" : [ "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">s3:CREDENTIALS if the specified S3 credentials cannot be found or are invalid</xqdoc:error>", "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">s3:OBJECT if the object specification is invalid</xqdoc:error>", "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">s3:BUCKET if no bucket has been specified and no default bucket is present in the used credentials</xqdoc:error>", "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">s3:HTTP an HTTP error occurred sending the request to S3</xqdoc:error>", "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">s3:REQUEST S3 refused to execute the request</xqdoc:error>", "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">s3:RESPONSE the response received from S3 cannot be parsed</xqdoc:error>" ] }, { "isDocumented" : true, "arity" : 1, "name" : "read-binary-nondeterministic", "qname" : "s3:read-binary-nondeterministic", "signature" : "($s3-object as item()) as base64Binary", "description" : " <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">Retrieves the binary content of an S3 object using the default S3 credentials.\n The object content is forced to be interpreted as binaryand will be returned\n as a base64Binary item.</p>\n <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">This function has the same semantics as\n <a href=\"#read-binary-1\">read-binary#1</a>,\n but is declared as being non deterministic and thus should only be used when\n result caching is not desired.</p>\n", "summary" : "<p>  Retrieves the binary content of an S3 object using the default S3 credentials.</p>", "annotation_str" : " %an:nondeterministic", "annotations" : [ { "prefix" : "an", "ns" : "http://zorba.io/annotations", "name" : "nondeterministic", "value" : "" } ], "updating" : false, "parameters" : [ { "name" : "s3-object", "type" : "item()", "occurrence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> The S3 object or object version to retrieve.</div>" } ], "returns" : { "type" : "base64Binary", "description" : "the object or object version binary content." }, "errors" : [ "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">s3:CREDENTIALS if the default S3 credentials cannot be found or are invalid</xqdoc:error>", "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">s3:OBJECT if the object specification is invalid</xqdoc:error>", "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">s3:BUCKET if no bucket has been specified and no default bucket is present in the used credentials</xqdoc:error>", "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">s3:HTTP an HTTP error occurred sending the request to S3</xqdoc:error>", "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">s3:REQUEST S3 refused to execute the request</xqdoc:error>" ] }, { "isDocumented" : true, "arity" : 2, "name" : "read-binary-nondeterministic", "qname" : "s3:read-binary-nondeterministic", "signature" : "($credentials as item()?, $s3-object as item()) as base64Binary", "description" : " <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">Retrieves the binary content of an S3 object using the specified S3 credentials.\n The object content is forced to be interpreted as binaryand will be returned\n as a base64Binary item.</p>\n <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">This function has the same semantics as\n <a href=\"#read-binary-2\">read-binary#2</a>,\n but is declared as being non deterministic and thus should only be used when\n result caching is not desired.</p>\n", "summary" : "<p>  Retrieves the binary content of an S3 object using the specified S3 credentials.</p>", "annotation_str" : " %an:nondeterministic", "annotations" : [ { "prefix" : "an", "ns" : "http://zorba.io/annotations", "name" : "nondeterministic", "value" : "" } ], "updating" : false, "parameters" : [ { "name" : "credentials", "type" : "item()", "occurrence" : "?", "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> The credentials to use.</div>" }, { "name" : "s3-object", "type" : "item()", "occurrence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> The S3 object or object version to retrieve.</div>" } ], "returns" : { "type" : "base64Binary", "description" : "the object or object version binary content." }, "errors" : [ "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">s3:CREDENTIALS if the specified S3 credentials cannot be found or are invalid</xqdoc:error>", "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">s3:OBJECT if the object specification is invalid</xqdoc:error>", "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">s3:BUCKET if no bucket has been specified and no default bucket is present in the used credentials</xqdoc:error>", "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">s3:HTTP an HTTP error occurred sending the request to S3</xqdoc:error>", "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">s3:REQUEST S3 refused to execute the request</xqdoc:error>" ] }, { "isDocumented" : true, "arity" : 1, "name" : "read-binary", "qname" : "s3:read-binary", "signature" : "($s3-object as item()) as base64Binary", "description" : " <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">Retrieves the binary content of an S3 object using the default S3 credentials.\n The object content is forced to be interpreted as binaryand will be returned\n as a base64Binary item.</p>\n <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">This function is declared as deterministic and should be used whenever result\n caching is acceptable.</p>\n <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">The S3 object is specified through the $s3-object parameter. Either a string\n or a JSON object can be used. If a string is specified, it is interpreted as\n key for an object in the default bucket of the default credentials. If no default\n bucket is present in the default credentials, the <code>s3:BUCKET</code> error\n is raised. If a JSON object is used, it must have the following structure:\n <ul>\n   <li>key: the object key (string, mandatory).</li>\n   <li>bucket: the bucket name (string, optional). If this field is not present\n   and the default credentials do not have a default bucket, the\n   <code>s3:BUCKET</code> error is raised.</li>\n   <li>version: the object version (string, optional). If versioning is enabled\n   for the specified object and no version is specified the latest version of\n   the object will be returned. If specified, only that particular version of\n   the object will be returned.</li>\n </ul>\n </p>\n <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">Example:\n <pre>\n let $object :=\n {\n   \"key\": \"object\",\n   \"bucket\": \"28msec\",\n   \"version\": \"3/L4kqtJlcpXroDTDmJ+rmSpXd3dIbrHY+MTRCxf3vjVBH40Nr8X8gdRQBpUMLUo\"\n }\n return s3:read-binary($object)\n </pre>\n </p>\n", "summary" : "<p>  Retrieves the binary content of an S3 object using the default S3 credentials.</p>", "annotation_str" : "", "annotations" : [  ], "updating" : false, "parameters" : [ { "name" : "s3-object", "type" : "item()", "occurrence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> The S3 object or object version to retrieve.</div>" } ], "returns" : { "type" : "base64Binary", "description" : "the object or object version binary content." }, "errors" : [ "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">s3:CREDENTIALS if the default S3 credentials cannot be found or are invalid</xqdoc:error>", "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">s3:OBJECT if the object specification is invalid</xqdoc:error>", "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">s3:BUCKET if no bucket has been specified and no default bucket is present in the used credentials</xqdoc:error>", "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">s3:HTTP an HTTP error occurred sending the request to S3</xqdoc:error>", "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">s3:REQUEST S3 refused to execute the request</xqdoc:error>" ] }, { "isDocumented" : true, "arity" : 2, "name" : "read-binary", "qname" : "s3:read-binary", "signature" : "($credentials as item()?, $s3-object as item()) as base64Binary", "description" : " <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">Retrieves the binary content of an S3 object using the specified S3 credentials.\n The object content is forced to be interpreted as binaryand will be returned\n as a base64Binary item.</p>\n <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">This function is declared as deterministic and should be used whenever result\n caching is acceptable.</p>\n <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">The S3 object is specified through the $s3-object parameter. Either a string\n or a JSON object can be used. If a string is specified, it is interpreted as\n key for an object in the default bucket of the specified credentials. If no default\n bucket is present in the specified credentials, the <code>s3:BUCKET</code> error\n is raised. If a JSON object is used, it must have the following structure:\n <ul>\n   <li>key: the object key (string, mandatory).</li>\n   <li>bucket: the bucket name (string, optional). If this field is not present\n   and the specified credentials do not have a default bucket, the\n   <code>s3:BUCKET</code> error is raised.</li>\n   <li>version: the object version (string, optional). If versioning is enabled\n   for the specified object and no version is specified the latest version of\n   the object will be returned. If specified, only that particular version of\n   the object will be returned.</li>\n </ul>\n </p>\n <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">Example:\n <pre>\n let $object :=\n {\n   \"key\": \"object\",\n   \"bucket\": \"28msec\",\n   \"version\": \"3/L4kqtJlcpXroDTDmJ+rmSpXd3dIbrHY+MTRCxf3vjVBH40Nr8X8gdRQBpUMLUo\"\n }\n return s3:read-binary(\"credentials\", $object)\n </pre>\n </p>\n", "summary" : "<p>  Retrieves the binary content of an S3 object using the specified S3 credentials.</p>", "annotation_str" : "", "annotations" : [  ], "updating" : false, "parameters" : [ { "name" : "credentials", "type" : "item()", "occurrence" : "?", "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> The credentials to use.</div>" }, { "name" : "s3-object", "type" : "item()", "occurrence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> The S3 object or object version to retrieve.</div>" } ], "returns" : { "type" : "base64Binary", "description" : "the object or object version binary content." }, "errors" : [ "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">s3:CREDENTIALS if the specified S3 credentials cannot be found or are invalid</xqdoc:error>", "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">s3:OBJECT if the object specification is invalid</xqdoc:error>", "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">s3:BUCKET if no bucket has been specified and no default bucket is present in the used credentials</xqdoc:error>", "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">s3:HTTP an HTTP error occurred sending the request to S3</xqdoc:error>", "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">s3:REQUEST S3 refused to execute the request</xqdoc:error>" ] }, { "isDocumented" : true, "arity" : 1, "name" : "read-object-nondeterministic", "qname" : "s3:read-object-nondeterministic", "signature" : "($s3-object as item()) as object()", "description" : " <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">Retrieves an S3 object using the default S3 credentials.</p>\n <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">This function has the same semantics as\n <a href=\"#read-object-1\">read-object#1</a>,\n but is declared as being non deterministic and thus should only be used when\n result caching is not desired.</p>\n", "summary" : "<p>  Retrieves an S3 object using the default S3 credentials.</p>", "annotation_str" : " %an:nondeterministic", "annotations" : [ { "prefix" : "an", "ns" : "http://zorba.io/annotations", "name" : "nondeterministic", "value" : "" } ], "updating" : false, "parameters" : [ { "name" : "s3-object", "type" : "item()", "occurrence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> The S3 object or object version to retrieve.</div>" } ], "returns" : { "type" : "object()", "description" : "the specified object." }, "errors" : [ "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">s3:CREDENTIALS if the default S3 credentials cannot be found or are invalid</xqdoc:error>", "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">s3:OBJECT if the object specification is invalid</xqdoc:error>", "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">s3:BUCKET if no bucket has been specified and no default bucket is present in the used credentials</xqdoc:error>", "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">s3:HTTP an HTTP error occurred sending the request to S3</xqdoc:error>", "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">s3:REQUEST S3 refused to execute the request</xqdoc:error>", "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">s3:RESPONSE the response received from S3 cannot be parsed</xqdoc:error>" ] }, { "isDocumented" : true, "arity" : 2, "name" : "read-object-nondeterministic", "qname" : "s3:read-object-nondeterministic", "signature" : "($credentials as item()?, $s3-object as item()) as object()", "description" : " <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">Retrieves an S3 object using the specified S3 credentials.</p>\n <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">This function has the same semantics as\n <a href=\"#read-object-2\">read-object#2</a>,\n but is declared as being non deterministic and thus should only be used when\n result caching is not desired.</p>\n", "summary" : "<p>  Retrieves an S3 object using the specified S3 credentials.</p>", "annotation_str" : " %an:nondeterministic", "annotations" : [ { "prefix" : "an", "ns" : "http://zorba.io/annotations", "name" : "nondeterministic", "value" : "" } ], "updating" : false, "parameters" : [ { "name" : "credentials", "type" : "item()", "occurrence" : "?", "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> The credentials to use.</div>" }, { "name" : "s3-object", "type" : "item()", "occurrence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> The S3 object or object version to retrieve.</div>" } ], "returns" : { "type" : "object()", "description" : "the specified object." }, "errors" : [ "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">s3:CREDENTIALS if the specified S3 credentials cannot be found or are invalid</xqdoc:error>", "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">s3:OBJECT if the object specification is invalid</xqdoc:error>", "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">s3:BUCKET if no bucket has been specified and no default bucket is present in the used credentials</xqdoc:error>", "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">s3:HTTP an HTTP error occurred sending the request to S3</xqdoc:error>", "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">s3:REQUEST S3 refused to execute the request</xqdoc:error>", "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">s3:RESPONSE the response received from S3 cannot be parsed</xqdoc:error>" ] }, { "isDocumented" : true, "arity" : 1, "name" : "read-object", "qname" : "s3:read-object", "signature" : "($s3-object as item()) as object()", "description" : " <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">Retrieves an S3 object using the default S3 credentials.</p>\n <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">This function is declared as deterministic and should be used whenever result\n caching is acceptable.</p>\n <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">The S3 object is specified through the $s3-object parameter. Either a string\n or a JSON object can be used. If a string is specified, it is interpreted as\n key for an object in the default bucket of the default credentials. If no default\n bucket is present in the default credentials, the <code>s3:BUCKET</code> error\n is raised. If a JSON object is used, it must have the following structure:\n <ul>\n   <li>key: the object key (string, mandatory).</li>\n   <li>bucket: the bucket name (string, optional). If this field is not present\n   and the default credentials do not have a default bucket, the\n   <code>s3:BUCKET</code> error is raised.</li>\n   <li>version: the object version (string, optional). If versioning is enabled\n   for the specified object and no version is specified the latest version of\n   the object will be returned. If specified, only that particular version of\n   the object will be returned.</li>\n </ul>\n </p>\n <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">Example:\n <pre>\n let $object :=\n {\n   \"key\": \"object\",\n   \"bucket\": \"28msec\",\n   \"version\": \"3/L4kqtJlcpXroDTDmJ+rmSpXd3dIbrHY+MTRCxf3vjVBH40Nr8X8gdRQBpUMLUo\"\n }\n return s3:read-object($object)\n </pre>\n </p>\n <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">Example return object:\n <pre>\n {\n   \"key\": \"test.xml\",\n   \"bucket\": \"28msec\",\n   \"metadata\":\n   {\n     \"author\": \"28msec\"\n   },\n   \"missing-metadata\" : 1,\n   \"version\": \"3GL4kqtJlcpXroDTDm3vjVBH40Nr8X8g\",\n   \"expiration\": \"expiry-date=\\\"Fri, 21 Dec 2012 00:00:00 GMT\\\", rule-id=\\\"Rule for testfile.txt\\\"\"\n   \"restore\": \"x-amz-restore: ongoing-request=\\\"false\\\", expiry-date=\\\"Wed, 07 Nov 2012 00:00:00 GMT\\\"\"\n   \"serverSideEncryption\": \"AES256\",\n   \"lastModified\": \"Mon, 15 Oct 2012 21:58:07 GMT\",\n   \"eTag\": \"1accb31fcf202eba0c0f41fa2f09b4d7\",\n   \"mediaType\": \"text/plain\"\n   \"length\": \"28\",\n   \"content: \"1234567890123456789012345678\"\n }\n </pre>\n </p>\n <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">The fields in the returned object have the following meanings:\n <ul>\n   <li>key: the object key (string, mandatory).</li>\n   <li>bucket: the bucket name (string, mandatory).</li>\n   <li>metadata: an object specifying additional metadata. Each metadata is a\n   name-value pair and is represented as different fields (object, optional).</li>\n   <li>missing-metadata: the number of metadata entries that were not returned\n   in the metadata object. This can happen if you create metadata using an API\n   like SOAP that supports more flexible metadata than the REST API. (integer,\n   optional).</li>\n   <li>version: the object version (string, optional). If versioning is enabled\n   for the specified object and no version is specified the permissions for the\n   latest version of the object will be returned. If specified, only the\n   permissions for that particular version of the object will be returned.</li>\n   <li>expiration: if the object expiration is configured (see\n   <a href=\"http://docs.aws.amazon.com/AmazonS3/latest/API/RESTBucketPUTlifecycle.html\">PUT Bucket lifecycle</a>),\n   this field is present. It includes the expiry-date and rule-id key value\n   pairs providing object expiration information. The value of rule-id is URL\n   encoded.(string, optional).</li>\n   <li>restore: if the object is an archived object (an object whose storage\n   class is Glacier), the response includes this header if either the archive\n   restoration is in progress (see\n   <a href=\"http://docs.aws.amazon.com/AmazonS3/latest/API/RESTObjectPOSTrestore.html\">POST Object restore</a>),\n   or an archive copy is already restored.(string, optional).</li>\n   <li>serverSideEncryption: If the object is stored by using server-side\n   encryption, the response includes this header with a value of the encryption\n   algorithm that was used.(string, optional).</li>\n   <li>lastModified: the date in which the object was last modified (dateTime,\n   optional).</li>\n   <li>eTag: the entity tag is a hash of the object. The eTag only reflects\n   changes to the contents of an object, not its metadata. The eTag is determined\n   when an object is created. For objects created by the PUT Object operation\n   and the POST Object operation, the eTag is a quoted, 32-digit hexadecimal\n   string representing the MD5 digest of the object data. For other objects,\n   the eTag may or may not be an MD5 digest of the object data. If the eTag is\n   not an MD5 digest of the object data, it will contain one or more non-hexadecimal\n   characters and/or will consist of less than 32 or more than 32 hexadecimal\n   digits.(string, optional).</li>\n   <li>mediaType: the object media-type (string, mandatory).</li>\n   <li>length: the object content length (integer, optional).</li>\n   <li>content: the object content. (item, optional). The type of this field\n   is determined by the media-type returned by the server. If the media-type\n   indicates that the body content is textual, then the content has type string,\n   base64Binary otherwise. Specifically, the body content is considered textual\n   if and only if the MIME-type specified in the media-type is one of:\n   <ul>\n     <li>\"application/json\"</li>\n     <li>\"application/x-javascript\"</li>\n     <li>\"application/xml\"</li>\n     <li>\"application/xml-external-parsed-entity\"</li>\n   </ul>\n   or if the MIME-type starts with \"text/\" or ends with \"+xml\".</li>\n </ul>\n </p>\n", "summary" : "<p>  Retrieves an S3 object using the default S3 credentials.</p>", "annotation_str" : "", "annotations" : [  ], "updating" : false, "parameters" : [ { "name" : "s3-object", "type" : "item()", "occurrence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> The S3 object or object version to retrieve.</div>" } ], "returns" : { "type" : "object()", "description" : "the specified object." }, "errors" : [ "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">s3:CREDENTIALS if the default S3 credentials cannot be found or are invalid</xqdoc:error>", "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">s3:OBJECT if the object specification is invalid</xqdoc:error>", "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">s3:BUCKET if no bucket has been specified and no default bucket is present in the used credentials</xqdoc:error>", "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">s3:HTTP an HTTP error occurred sending the request to S3</xqdoc:error>", "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">s3:REQUEST S3 refused to execute the request</xqdoc:error>", "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">s3:RESPONSE the response received from S3 cannot be parsed</xqdoc:error>" ] }, { "isDocumented" : true, "arity" : 2, "name" : "read-object", "qname" : "s3:read-object", "signature" : "($credentials as item()?, $s3-object as item()) as object()", "description" : " <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">Retrieves an S3 object using the specified S3 credentials.</p>\n <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">This function is declared as deterministic and should be used whenever result\n caching is acceptable.</p>\n <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">The S3 object is specified through the $s3-object parameter. Either a string\n or a JSON object can be used. If a string is specified, it is interpreted as\n key for an object in the default bucket of the specified credentials. If no default\n bucket is present in the specified credentials, the <code>s3:BUCKET</code> error\n is raised. If a JSON object is used, it must have the following structure:\n <ul>\n   <li>key: the object key (string, mandatory).</li>\n   <li>bucket: the bucket name (string, optional). If this field is not present\n   and the specified credentials do not have a default bucket, the\n   <code>s3:BUCKET</code> error is raised.</li>\n   <li>version: the object version (string, optional). If versioning is enabled\n   for the specified object and no version is specified the latest version of\n   the object will be returned. If specified, only that particular version of\n   the object will be returned.</li>\n </ul>\n </p>\n <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">Example:\n <pre>\n let $object :=\n {\n   \"key\": \"object\",\n   \"bucket\": \"28msec\",\n   \"version\": \"3/L4kqtJlcpXroDTDmJ+rmSpXd3dIbrHY+MTRCxf3vjVBH40Nr8X8gdRQBpUMLUo\"\n }\n return s3:read-object($object)\n </pre>\n </p>\n <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">Example return object:\n <pre>\n {\n   \"key\": \"test.xml\",\n   \"bucket\": \"28msec\",\n   \"metadata\":\n   {\n     \"author\": \"28msec\"\n   },\n   \"missing-metadata\" : 1,\n   \"version\": \"3GL4kqtJlcpXroDTDm3vjVBH40Nr8X8g\",\n   \"expiration\": \"expiry-date=\\\"Fri, 21 Dec 2012 00:00:00 GMT\\\", rule-id=\\\"Rule for testfile.txt\\\"\"\n   \"restore\": \"x-amz-restore: ongoing-request=\\\"false\\\", expiry-date=\\\"Wed, 07 Nov 2012 00:00:00 GMT\\\"\"\n   \"serverSideEncryption\": \"AES256\",\n   \"lastModified\": \"Mon, 15 Oct 2012 21:58:07 GMT\",\n   \"eTag\": \"1accb31fcf202eba0c0f41fa2f09b4d7\",\n   \"mediaType\": \"text/plain\"\n   \"length\": \"28\",\n   \"content: \"1234567890123456789012345678\"\n }\n </pre>\n </p>\n <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">The fields in the returned object have the following meanings:\n <ul>\n   <li>key: the object key (string, mandatory).</li>\n   <li>bucket: the bucket name (string, mandatory).</li>\n   <li>metadata: an object specifying additional metadata. Each metadata is a\n   name-value pair and is represented as different fields (object, optional).</li>\n   <li>missing-metadata: the number of metadata entries that were not returned\n   in the metadata object. This can happen if you create metadata using an API\n   like SOAP that supports more flexible metadata than the REST API. (integer,\n   optional).</li>\n   <li>version: the object version (string, optional). If versioning is enabled\n   for the specified object and no version is specified the permissions for the\n   latest version of the object will be returned. If specified, only the\n   permissions for that particular version of the object will be returned.</li>\n   <li>expiration: if the object expiration is configured (see\n   <a href=\"http://docs.aws.amazon.com/AmazonS3/latest/API/RESTBucketPUTlifecycle.html\">PUT Bucket lifecycle</a>),\n   this field is present. It includes the expiry-date and rule-id key value\n   pairs providing object expiration information. The value of rule-id is URL\n   encoded.(string, optional).</li>\n   <li>restore: if the object is an archived object (an object whose storage\n   class is Glacier), the response includes this header if either the archive\n   restoration is in progress (see\n   <a href=\"http://docs.aws.amazon.com/AmazonS3/latest/API/RESTObjectPOSTrestore.html\">POST Object restore</a>),\n   or an archive copy is already restored.(string, optional).</li>\n   <li>serverSideEncryption: If the object is stored by using server-side\n   encryption, the response includes this header with a value of the encryption\n   algorithm that was used.(string, optional).</li>\n   <li>lastModified: the date in which the object was last modified (dateTime,\n   optional).</li>\n   <li>eTag: the entity tag is a hash of the object. The eTag only reflects\n   changes to the contents of an object, not its metadata. The eTag is determined\n   when an object is created. For objects created by the PUT Object operation\n   and the POST Object operation, the eTag is a quoted, 32-digit hexadecimal\n   string representing the MD5 digest of the object data. For other objects,\n   the eTag may or may not be an MD5 digest of the object data. If the eTag is\n   not an MD5 digest of the object data, it will contain one or more non-hexadecimal\n   characters and/or will consist of less than 32 or more than 32 hexadecimal\n   digits.(string, optional).</li>\n   <li>mediaType: the object media-type (string, mandatory).</li>\n   <li>length: the object content length (integer, optional).</li>\n   <li>content: the object content. (item, optional). The type of this field\n   is determined by the media-type returned by the server. If the media-type\n   indicates that the body content is textual,then the content has type string,\n   base64Binary otherwise. Specifically, the body content is considered textual\n   if and only if the MIME-type specified in the media-type is one of:\n   <ul>\n     <li>\"application/json\"</li>\n     <li>\"application/x-javascript\"</li>\n     <li>\"application/xml\"</li>\n     <li>\"application/xml-external-parsed-entity\"</li>\n   </ul>\n   or if the MIME-type starts with \"text/\" or ends with \"+xml\".</li>\n </ul>\n </p>\n", "summary" : "<p>  Retrieves an S3 object using the specified S3 credentials.</p>", "annotation_str" : "", "annotations" : [  ], "updating" : false, "parameters" : [ { "name" : "credentials", "type" : "item()", "occurrence" : "?", "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> The credentials to use.</div>" }, { "name" : "s3-object", "type" : "item()", "occurrence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> The S3 object or object version to retrieve.</div>" } ], "returns" : { "type" : "object()", "description" : "the specified object." }, "errors" : [ "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">s3:CREDENTIALS if the specified S3 credentials cannot be found or are invalid</xqdoc:error>", "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">s3:OBJECT if the object specification is invalid</xqdoc:error>", "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">s3:BUCKET if no bucket has been specified and no default bucket is present in the used credentials</xqdoc:error>", "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">s3:HTTP an HTTP error occurred sending the request to S3</xqdoc:error>", "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">s3:REQUEST S3 refused to execute the request</xqdoc:error>", "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">s3:RESPONSE the response received from S3 cannot be parsed</xqdoc:error>" ] }, { "isDocumented" : true, "arity" : 1, "name" : "read-text-nondeterministic", "qname" : "s3:read-text-nondeterministic", "signature" : "($s3-object as item()) as string", "description" : " <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">Retrieves the textual content of an S3 object using the default S3 credentials.\n The object content is forced to be interpreted as textual, with a UTF-8 charset\n and will be returned as string.</p>\n <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">This function has the same semantics as\n <a href=\"#read-text-1\">read-text#1</a>,\n but is declared as being non deterministic and thus should only be used when\n result caching is not desired.</p>\n", "summary" : "<p>  Retrieves the textual content of an S3 object using the default S3 credentials.</p>", "annotation_str" : " %an:nondeterministic", "annotations" : [ { "prefix" : "an", "ns" : "http://zorba.io/annotations", "name" : "nondeterministic", "value" : "" } ], "updating" : false, "parameters" : [ { "name" : "s3-object", "type" : "item()", "occurrence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> The S3 object or object version to retrieve.</div>" } ], "returns" : { "type" : "string", "description" : "the object or object version textual content." }, "errors" : [ "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">s3:CREDENTIALS if the default S3 credentials cannot be found or are invalid</xqdoc:error>", "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">s3:OBJECT if the object specification is invalid</xqdoc:error>", "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">s3:BUCKET if no bucket has been specified and no default bucket is present in the used credentials</xqdoc:error>", "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">s3:HTTP an HTTP error occurred sending the request to S3</xqdoc:error>", "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">s3:REQUEST S3 refused to execute the request</xqdoc:error>", "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">s3:RESPONSE the response received from S3 cannot be parsed</xqdoc:error>" ] }, { "isDocumented" : true, "arity" : 2, "name" : "read-text-nondeterministic", "qname" : "s3:read-text-nondeterministic", "signature" : "($credentials as item()?, $s3-object as item()) as string", "description" : " <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">Retrieves the textual content of an S3 object using the specified S3 credentials.\n The object content is forced to be interpreted as textual, with a UTF-8 charset\n and will be returned as string.</p>\n <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">This function has the same semantics as\n <a href=\"#read-text-2\">read-text#2</a>,\n but is declared as being non deterministic and thus should only be used when\n result caching is not desired.</p>\n", "summary" : "<p>  Retrieves the textual content of an S3 object using the specified S3 credentials.</p>", "annotation_str" : " %an:nondeterministic", "annotations" : [ { "prefix" : "an", "ns" : "http://zorba.io/annotations", "name" : "nondeterministic", "value" : "" } ], "updating" : false, "parameters" : [ { "name" : "credentials", "type" : "item()", "occurrence" : "?", "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> The credentials to use.</div>" }, { "name" : "s3-object", "type" : "item()", "occurrence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> The S3 object or object version to retrieve.</div>" } ], "returns" : { "type" : "string", "description" : "the object or object version textual content." }, "errors" : [ "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">s3:CREDENTIALS if the specified S3 credentials cannot be found or are invalid</xqdoc:error>", "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">s3:OBJECT if the object specification is invalid</xqdoc:error>", "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">s3:BUCKET if no bucket has been specified and no default bucket is present in the used credentials</xqdoc:error>", "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">s3:HTTP an HTTP error occurred sending the request to S3</xqdoc:error>", "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">s3:REQUEST S3 refused to execute the request</xqdoc:error>", "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">s3:RESPONSE the response received from S3 cannot be parsed</xqdoc:error>" ] }, { "isDocumented" : true, "arity" : 1, "name" : "read-text", "qname" : "s3:read-text", "signature" : "($s3-object as item()) as string", "description" : " <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">Retrieves the textual content of an S3 object using the default S3 credentials.\n The object content is forced to be interpreted as textual, with a UTF-8 charset\n and will be returned as string.</p>\n <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">This function is declared as deterministic and should be used whenever result\n caching is acceptable.</p>\n <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">The S3 object is specified through the $s3-object parameter. Either a string\n or a JSON object can be used. If a string is specified, it is interpreted as\n key for an object in the default bucket of the default credentials. If no default\n bucket is present in the default credentials, the <code>s3:BUCKET</code> error\n is raised. If a JSON object is used, it must have the following structure:\n <ul>\n   <li>key: the object key (string, mandatory).</li>\n   <li>bucket: the bucket name (string, optional). If this field is not present\n   and the default credentials do not have a default bucket, the\n   <code>s3:BUCKET</code> error is raised.</li>\n   <li>version: the object version (string, optional). If versioning is enabled\n   for the specified object and no version is specified the latest version of\n   the object will be returned. If specified, only that particular version of\n   the object will be returned.</li>\n </ul>\n </p>\n <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">Example:\n <pre>\n let $object :=\n {\n   \"key\": \"object\",\n   \"bucket\": \"28msec\",\n   \"version\": \"3/L4kqtJlcpXroDTDmJ+rmSpXd3dIbrHY+MTRCxf3vjVBH40Nr8X8gdRQBpUMLUo\"\n }\n return s3:read-text(\"credentials\", $object)\n </pre>\n </p>\n", "summary" : "<p>  Retrieves the textual content of an S3 object using the default S3 credentials.</p>", "annotation_str" : "", "annotations" : [  ], "updating" : false, "parameters" : [ { "name" : "s3-object", "type" : "item()", "occurrence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> The S3 object or object version to retrieve.</div>" } ], "returns" : { "type" : "string", "description" : "the object or object version textual content." }, "errors" : [ "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">s3:CREDENTIALS if the default S3 credentials cannot be found or are invalid</xqdoc:error>", "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">s3:OBJECT if the object specification is invalid</xqdoc:error>", "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">s3:BUCKET if no bucket has been specified and no default bucket is present in the used credentials</xqdoc:error>", "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">s3:HTTP an HTTP error occurred sending the request to S3</xqdoc:error>", "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">s3:REQUEST S3 refused to execute the request</xqdoc:error>", "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">s3:RESPONSE the response received from S3 cannot be parsed</xqdoc:error>" ] }, { "isDocumented" : true, "arity" : 2, "name" : "read-text", "qname" : "s3:read-text", "signature" : "($credentials as item()?, $s3-object as item()) as string", "description" : " <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">Retrieves the textual content of an S3 object using the specified S3 credentials.\n The object content is forced to be interpreted as textual, with a UTF-8 charset\n and will be returned as string.</p>\n <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">This function is declared as deterministic and should be used whenever result\n caching is acceptable.</p>\n <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">The S3 object is specified through the $s3-object parameter. Either a string\n or a JSON object can be used. If a string is specified, it is interpreted as\n key for an object in the default bucket of the specified credentials. If no default\n bucket is present in the specified credentials, the <code>s3:BUCKET</code> error\n is raised. If a JSON object is used, it must have the following structure:\n <ul>\n   <li>key: the object key (string, mandatory).</li>\n   <li>bucket: the bucket name (string, optional). If this field is not present\n   and the specified credentials do not have a default bucket, the\n   <code>s3:BUCKET</code> error is raised.</li>\n   <li>version: the object version (string, optional). If versioning is enabled\n   for the specified object and no version is specified the latest version of\n   the object will be returned. If specified, only that particular version of\n   the object will be returned.</li>\n </ul>\n </p>\n <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">Example:\n <pre>\n let $object :=\n {\n   \"key\": \"object\",\n   \"bucket\": \"28msec\",\n   \"version\": \"3/L4kqtJlcpXroDTDmJ+rmSpXd3dIbrHY+MTRCxf3vjVBH40Nr8X8gdRQBpUMLUo\"\n }\n return s3:read-text(\"credentials\", $object)\n </pre>\n </p>\n", "summary" : "<p>  Retrieves the textual content of an S3 object using the specified S3 credentials.</p>", "annotation_str" : "", "annotations" : [  ], "updating" : false, "parameters" : [ { "name" : "credentials", "type" : "item()", "occurrence" : "?", "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> The credentials to use.</div>" }, { "name" : "s3-object", "type" : "item()", "occurrence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> The S3 object or object version to retrieve.</div>" } ], "returns" : { "type" : "string", "description" : "the object or object version textual content." }, "errors" : [ "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">s3:CREDENTIALS if the specified S3 credentials cannot be found or are invalid</xqdoc:error>", "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">s3:OBJECT if the object specification is invalid</xqdoc:error>", "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">s3:BUCKET if no bucket has been specified and no default bucket is present in the used credentials</xqdoc:error>", "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">s3:HTTP an HTTP error occurred sending the request to S3</xqdoc:error>", "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">s3:REQUEST S3 refused to execute the request</xqdoc:error>", "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">s3:RESPONSE the response received from S3 cannot be parsed</xqdoc:error>" ] }, { "isDocumented" : true, "arity" : 1, "name" : "set-object-permissions", "qname" : "s3:set-object-permissions", "signature" : "($s3-object as item()) as empty-sequence()", "description" : " <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">Sets the access control list (ACL) of an S3 object using the default S3\n credentials.</p>\n <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">The S3 object is specified through the $s3-object parameter. Either a string\n or a JSON object can be used. If a string is specified, it is interpreted as\n key for an object in the default bucket of the default credentials. If no default\n bucket is present in the default credentials, the <code>s3:BUCKET</code> error\n is raised. If a JSON object is used, it must have the following structure:\n <ul>\n   <li>key: the object key (string, mandatory).</li>\n   <li>bucket: the bucket name (string, optional). If this field is not present\n   and the default credentials do not have a default bucket, the\n   <code>s3:BUCKET</code> error is raised.</li>\n   <li>version: the object version (string, optional). If versioning is enabled\n   for the specified object and no version is specified the permissions for the\n   latest version of the object will be set. If specified, only the\n   permissions for that particular version of the object will be set.</li>\n   <li>permission: the permission to set (string, optional). It must be one of\n   \"private\", \"public-read\", \"public-read-write\", \"authenticated-read\",\n   \"bucket-owner-read\", \"bucket-owner-full-control\". For your convenience the\n   following variables can be used: <code>$s3:ACL-GRANT-PRIVATE</code>,\n   <code>$s3:ACL-GRANT-PUBLIC-READ</code>, <code>$s3:ACL-GRANT-PUBLIC-READ-WRITE</code>,\n   <code>$s3:ACL-GRANT-AUTHENTICATED-READ</code>, <code>$s3:ACL-GRANT-BUCKET-OWNER-READ</code>,\n   <code>$s3:ACL-GRANT-BUCKET-OWNER-FULL-CONTROL</code>. If this field is not\n   specified, the \"private\" ACL is used, that is, the owner gets FULL_CONTROL,\n   and no one else has access rights.</li>\n </ul>\n </p>\n <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">Example:\n <pre>\n let $object :=\n {\n   \"key\": \"object\",\n   \"bucket\": \"28msec\",\n   \"version\": \"3/L4kqtJlcpXroDTDmJ+rmSpXd3dIbrHY+MTRCxf3vjVBH40Nr8X8gdRQBpUMLUo\",\n   \"permission\": $s3:ACL-GRANT-PUBLIC-READ\n }\n return s3:set-object-permissions($object)\n </pre>\n </p>\n", "summary" : "<p>  Sets the access control list (ACL) of an S3 object using the default S3\n credentials.</p>", "annotation_str" : " %an:sequential", "annotations" : [ { "prefix" : "an", "ns" : "http://zorba.io/annotations", "name" : "sequential", "value" : "" } ], "updating" : false, "parameters" : [ { "name" : "s3-object", "type" : "item()", "occurrence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> The S3 object or object version and ACL to set.</div>" } ], "returns" : { "type" : "empty-sequence()", "description" : "the empty sequence" }, "errors" : [ "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">s3:CREDENTIALS if the default S3 credentials cannot be found or are invalid</xqdoc:error>", "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">s3:OBJECT if the object specification is invalid</xqdoc:error>", "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">s3:BUCKET if no bucket has been specified and no default bucket is present in the used credentials</xqdoc:error>", "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">s3:HTTP an HTTP error occurred sending the request to S3</xqdoc:error>", "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">s3:REQUEST S3 refused to execute the request</xqdoc:error>" ] }, { "isDocumented" : true, "arity" : 2, "name" : "set-object-permissions", "qname" : "s3:set-object-permissions", "signature" : "($credentials as item()?, $s3-object as item()) as empty-sequence()", "description" : " <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">Sets the access control list (ACL) of an S3 object using the specified S3\n credentials.</p>\n <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">The S3 object is specified through the $s3-object parameter. Either a string\n or a JSON object can be used. If a string is specified, it is interpreted as\n key for an object in the default bucket of the specified credentials. If no default\n bucket is present in the specified credentials, the <code>s3:BUCKET</code> error\n is raised. If a JSON object is used, it must have the following structure:\n <ul>\n   <li>key: the object key (string, mandatory).</li>\n   <li>bucket: the bucket name (string, optional). If this field is not present\n   and the specified credentials do not have a default bucket, the\n   <code>s3:BUCKET</code> error is raised.</li>\n   <li>version: the object version (string, optional). If versioning is enabled\n   for the specified object and no version is specified the permissions for the\n   latest version of the object will be set. If specified, only the\n   permissions for that particular version of the object will be set.</li>\n   <li>permission: the permission to set (string, optional). It must be one of\n   \"private\", \"public-read\", \"public-read-write\", \"authenticated-read\",\n   \"bucket-owner-read\", \"bucket-owner-full-control\". For your convenience the\n   following variables can be used: <code>$s3:ACL-GRANT-PRIVATE</code>,\n   <code>$s3:ACL-GRANT-PUBLIC-READ</code>, <code>$s3:ACL-GRANT-PUBLIC-READ-WRITE</code>,\n   <code>$s3:ACL-GRANT-AUTHENTICATED-READ</code>, <code>$s3:ACL-GRANT-BUCKET-OWNER-READ</code>,\n   <code>$s3:ACL-GRANT-BUCKET-OWNER-FULL-CONTROL</code>. If this field is not\n   specified, the \"private\" ACL is used, that is, the owner gets FULL_CONTROL,\n   and no one else has access rights.</li>\n </ul>\n </p>\n <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">Example:\n <pre>\n let $object :=\n {\n   \"key\": \"object\",\n   \"bucket\": \"28msec\",\n   \"version\": \"3/L4kqtJlcpXroDTDmJ+rmSpXd3dIbrHY+MTRCxf3vjVBH40Nr8X8gdRQBpUMLUo\",\n   \"permission\": $s3:ACL-GRANT-PUBLIC-READ\n }\n return s3:set-object-permissions($object)\n </pre>\n </p>\n", "summary" : "<p>  Sets the access control list (ACL) of an S3 object using the specified S3\n credentials.</p>", "annotation_str" : " %an:sequential", "annotations" : [ { "prefix" : "an", "ns" : "http://zorba.io/annotations", "name" : "sequential", "value" : "" } ], "updating" : false, "parameters" : [ { "name" : "credentials", "type" : "item()", "occurrence" : "?", "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> The credentials to use.</div>" }, { "name" : "s3-object", "type" : "item()", "occurrence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> The S3 object or object version and ACL to set.</div>" } ], "returns" : { "type" : "empty-sequence()", "description" : "the empty sequence" }, "errors" : [ "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">s3:CREDENTIALS if the specified S3 credentials cannot be found or are invalid</xqdoc:error>", "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">s3:OBJECT if the object specification is invalid</xqdoc:error>", "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">s3:BUCKET if no bucket has been specified and no default bucket is present in the used credentials</xqdoc:error>", "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">s3:HTTP an HTTP error occurred sending the request to S3</xqdoc:error>", "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">s3:REQUEST S3 refused to execute the request</xqdoc:error>" ] }, { "isDocumented" : true, "arity" : 2, "name" : "write-binary", "qname" : "s3:write-binary", "signature" : "($object as item(), $binary-content as base64Binary) as object()", "description" : " <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">Writes a binary object in an S3 bucket using the default S3 credentials.\n If the object already exists it is overwritten.</p>\n <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">The S3 object is specified through the $s3-object parameter. Either a string\n or a JSON object can be used.</p>\n <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">If a string is specified, it is interpreted as\n key for an object in the default bucket of the default credentials. If no default\n bucket is present in the default credentials, the <code>s3:BUCKET</code> error\n is raised. The object media-type will be set to \"binary/octet-stream\", no metadata will\n be set for the object, the object will be stored on standard redundancy storage,\n and the object permission will be set to \"private\", that is, the owner gets\n FULL_CONTROL, and no one else has access rights.</p>\n <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">If a JSON object is used, it must have the following structure:\n <ul>\n   <li>key: the object key (string, mandatory).</li>\n   <li>bucket: the bucket name (string, optional). If this field is not present\n   and the default credentials do not have a default bucket, the\n   <code>s3:BUCKET</code> error is raised.</li>\n   <li>mediaType: the media-type of the object (string, optional). If not specified,\n   \"binary/octet-stream\" is used.</li>\n   <li>metadata: an object specifying additional metadata. Each metadata is a\n   name-value pair and is represented as different fields (object, optional).</li>\n   <li>permission: the permission to set (string, optional). It must be one of\n   \"private\", \"public-read\", \"public-read-write\", \"authenticated-read\",\n   \"bucket-owner-read\", \"bucket-owner-full-control\". For your convenience the\n   following variables can be used: <code>$s3:ACL-GRANT-PRIVATE</code>,\n   <code>$s3:ACL-GRANT-PUBLIC-READ</code>, <code>$s3:ACL-GRANT-PUBLIC-READ-WRITE</code>,\n   <code>$s3:ACL-GRANT-AUTHENTICATED-READ</code>, <code>$s3:ACL-GRANT-BUCKET-OWNER-READ</code>,\n   <code>$s3:ACL-GRANT-BUCKET-OWNER-FULL-CONTROL</code>. If this field is not\n   specified, the \"private\" ACL is used, that is, the owner gets FULL_CONTROL,\n   and no one else has access rights.</li>\n   <li>reducedRedundancy: whether to use reduced-redundancy or not (bool,\n   optional). Default is false.</li>\n </ul>\n </p>\n <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">Example:\n <pre>\n variable $s3-object :=\n {\n   \"key\": \"test.xml\",\n   \"bucket\": \"28msec\",\n   \"permission\": $const:ACL-GRANT-PUBLIC-READ,\n   \"metadata\": { \"author\": \"28msec\" },\n   \"mediaType\": \"application/octet-stream\"\n }\n s3:write-binary($s3-object, base64Binary(\"Mjhtc2Vj\"))\n </pre>\n Example Result:\n <pre>\n {\n   \"expiration\": \"expiry-date=\\\"Fri, 23 Dec 2012 00:00:00 GMT\\\", rule-id=\\\"1\\\"\",\n   \"version\": \"3GL4kqtJlcpXroDTDm3vjVBH40Nr8X8g\",\n   \"eTag\": \"\\\"1b2cf535f27731c974343645a3985328\\\"\"\n }\n </pre>\n </p>\n <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">The meaning of the fields in the result object is the following:\n <ul>\n   <li>expiration: if the object expiration is configured, the response\n   includes this header. It includes the expiry-date and rule-id key-value\n   pairs providing object expiration information. The value of the rule-id is\n   URL encoded. (string, optional)</li>\n   <li>version: the version of the object. When you enable versioning,\n   Amazon S3 generates a random number for objects added to a bucket. The value\n   is UTF-8 encoded and URL ready. When you PUT an object in a bucket where\n   versioning has been suspended, the version ID is always null. (string, optional)</li>\n   <li>eTag: the entity tag is a hash of the object. The eTag only reflects\n   changes to the contents of an object, not its metadata. The eTag is determined\n   when an object is created. The eTag returned by this method is a quoted,\n   32-digit hexadecimal string representing the MD5 digest of the object data.\n   For other objects, the eTag may or may not be an MD5 digest of the object data.\n   (string, optional).</li>\n </ul>\n </p>\n", "summary" : "<p>  Writes a binary object in an S3 bucket using the default S3 credentials.</p>", "annotation_str" : " %an:sequential", "annotations" : [ { "prefix" : "an", "ns" : "http://zorba.io/annotations", "name" : "sequential", "value" : "" } ], "updating" : false, "parameters" : [ { "name" : "object", "type" : "item()", "occurrence" : null, "description" : "" }, { "name" : "binary-content", "type" : "base64Binary", "occurrence" : null, "description" : "" } ], "returns" : { "type" : "object()", "description" : "the S3 operation result." }, "errors" : [ "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">s3:CREDENTIALS if the default S3 credentials cannot be found or are invalid</xqdoc:error>", "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">s3:OBJECT if the object specification is invalid</xqdoc:error>", "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">s3:BUCKET if no bucket has been specified and no default bucket is present in the used credentials</xqdoc:error>", "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">s3:HTTP an HTTP error occurred sending the request to S3</xqdoc:error>", "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">s3:REQUEST S3 refused to execute the request</xqdoc:error>" ] }, { "isDocumented" : true, "arity" : 3, "name" : "write-binary", "qname" : "s3:write-binary", "signature" : "($credentials as item()?, $object as item(), $binary-content as base64Binary) as object()", "description" : " <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">Writes a binary object in an S3 bucket using the specified S3 credentials.\n If the object already exists it is overwritten.</p>\n <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">The S3 object is specified through the $s3-object parameter. Either a string\n or a JSON object can be used.</p>\n <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">If a string is specified, it is interpreted as\n key for an object in the default bucket of the specified credentials. If no default\n bucket is present in the specified credentials, the <code>s3:BUCKET</code> error\n is raised. The object media-type will be set to \"binary/octet-stream\", no metadata will\n be set for the object, the object will be stored on standard redundancy storage,\n and the object permission will be set to \"private\", that is, the owner gets\n FULL_CONTROL, and no one else has access rights.</p>\n <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">If a JSON object is used, it must have the following structure:\n <ul>\n   <li>key: the object key (string, mandatory).</li>\n   <li>bucket: the bucket name (string, optional). If this field is not present\n   and the specified credentials do not have a default bucket, the\n   <code>s3:BUCKET</code> error is raised.</li>\n   <li>mediaType: the media-type of the object (string, optional). If not specified,\n   \"binary/octet-stream\" is used.</li>\n   <li>metadata: an object specifying additional metadata. Each metadata is a\n   name-value pair and is represented as different fields (object, optional).</li>\n   <li>permission: the permission to set (string, optional). It must be one of\n   \"private\", \"public-read\", \"public-read-write\", \"authenticated-read\",\n   \"bucket-owner-read\", \"bucket-owner-full-control\". For your convenience the\n   following variables can be used: <code>$s3:ACL-GRANT-PRIVATE</code>,\n   <code>$s3:ACL-GRANT-PUBLIC-READ</code>, <code>$s3:ACL-GRANT-PUBLIC-READ-WRITE</code>,\n   <code>$s3:ACL-GRANT-AUTHENTICATED-READ</code>, <code>$s3:ACL-GRANT-BUCKET-OWNER-READ</code>,\n   <code>$s3:ACL-GRANT-BUCKET-OWNER-FULL-CONTROL</code>. If this field is not\n   specified, the \"private\" ACL is used, that is, the owner gets FULL_CONTROL,\n   and no one else has access rights.</li>\n   <li>reducedRedundancy: whether to use reduced-redundancy or not (bool,\n   optional). Default is false.</li>\n </ul>\n </p>\n <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">Example:\n <pre>\n variable $s3-object :=\n {\n   \"key\": \"test.xml\",\n   \"bucket\": \"28msec\",\n   \"permission\": $const:ACL-GRANT-PUBLIC-READ,\n   \"metadata\": { \"author\": \"28msec\" },\n   \"mediaType\": \"application/octet-stream\"\n }\n s3:write-binary(\"credentials\", $s3-object, base64Binary(\"Mjhtc2Vj\"))\n </pre>\n </p>\n <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">Example return object:\n <pre>\n {\n   \"expiration\": \"expiry-date=\\\"Fri, 23 Dec 2012 00:00:00 GMT\\\", rule-id=\\\"1\\\"\",\n   \"version\": \"3GL4kqtJlcpXroDTDm3vjVBH40Nr8X8g\",\n   \"eTag\": \"\\\"1b2cf535f27731c974343645a3985328\\\"\"\n }\n </pre>\n </p>\n <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">The fields in the returned object have the following meanings:\n <ul>\n   <li>expiration: if the object expiration is configured, the response\n   includes this header. It includes the expiry-date and rule-id key-value\n   pairs providing object expiration information. The value of the rule-id is\n   URL encoded. (string, optional)</li>\n   <li>version: the version of the object. When you enable versioning,\n   Amazon S3 generates a random number for objects added to a bucket. The value\n   is UTF-8 encoded and URL ready. When you PUT an object in a bucket where\n   versioning has been suspended, the version ID is always null. (string, optional)</li>\n   <li>eTag: the entity tag is a hash of the object. The eTag only reflects\n   changes to the contents of an object, not its metadata. The eTag is determined\n   when an object is created. The eTag returned by this method is a quoted,\n   32-digit hexadecimal string representing the MD5 digest of the object data.\n   For other objects, the eTag may or may not be an MD5 digest of the object data.\n   (string, optional).</li>\n </ul>\n </p>\n", "summary" : "<p>  Writes a binary object in an S3 bucket using the specified S3 credentials.</p>", "annotation_str" : " %an:sequential", "annotations" : [ { "prefix" : "an", "ns" : "http://zorba.io/annotations", "name" : "sequential", "value" : "" } ], "updating" : false, "parameters" : [ { "name" : "credentials", "type" : "item()", "occurrence" : "?", "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> The credentials to use.</div>" }, { "name" : "object", "type" : "item()", "occurrence" : null, "description" : "" }, { "name" : "binary-content", "type" : "base64Binary", "occurrence" : null, "description" : "" } ], "returns" : { "type" : "object()", "description" : "the S3 operation result." }, "errors" : [ "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">s3:CREDENTIALS if the specified S3 credentials cannot be found or are invalid</xqdoc:error>", "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">s3:OBJECT if the object specification is invalid</xqdoc:error>", "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">s3:BUCKET if no bucket has been specified and no default bucket is present in the used credentials</xqdoc:error>", "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">s3:HTTP an HTTP error occurred sending the request to S3</xqdoc:error>", "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">s3:REQUEST S3 refused to execute the request</xqdoc:error>" ] }, { "isDocumented" : true, "arity" : 1, "name" : "write-object", "qname" : "s3:write-object", "signature" : "($s3-object as item()) as object()", "description" : " <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">Writes an object in an S3 bucket using the default S3 credentials.\n If the object already exists it is overwritten.</p>\n <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">The object to write and its contents are specified through the $s3-object\n parameter, which must have the following structure:\n <ul>\n   <li>key: the object key (string, mandatory).</li>\n   <li>bucket: the bucket name (string, optional). If this field is not present\n   and the default credentials do not have a default bucket, the\n   <code>s3:BUCKET</code> error is raised.</li>\n   <li>content: the object content. It must either be a string or a base64Binary\n   atomic. (item, mandatory).</li>\n   <li>mediaType: the media-type of the object (string, optional). If not specified,\n   \"text/plain\" is used if the content field is of type string, \"binary/octet-stream\"\n   if it is of type base64Binary.</li>\n   <li>metadata: an object specifying additional metadata. Each metadata is a\n   name-value pair and is represented as different fields (object, optional).</li>\n   <li>permission: the permission to set (string, optional). It must be one of\n   \"private\", \"public-read\", \"public-read-write\", \"authenticated-read\",\n   \"bucket-owner-read\", \"bucket-owner-full-control\". For your convenience the\n   following variables can be used: <code>$s3:ACL-GRANT-PRIVATE</code>,\n   <code>$s3:ACL-GRANT-PUBLIC-READ</code>, <code>$s3:ACL-GRANT-PUBLIC-READ-WRITE</code>,\n   <code>$s3:ACL-GRANT-AUTHENTICATED-READ</code>, <code>$s3:ACL-GRANT-BUCKET-OWNER-READ</code>,\n   <code>$s3:ACL-GRANT-BUCKET-OWNER-FULL-CONTROL</code>. If this field is not\n   specified, the \"private\" ACL is used, that is, the owner gets FULL_CONTROL,\n   and no one else has access rights.</li>\n   <li>reducedRedundancy: whether to use reduced-redundancy or not (bool,\n   optional). Default is false.</li>\n </ul>\n </p>\n <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">Example:\n <pre>\n variable $s3-object :=\n {\n   \"key\": \"test.xml\",\n   \"bucket\": \"28msec\",\n   \"permission\": $const:ACL-GRANT-PUBLIC-READ,\n   \"metadata\": { \"author\": \"28msec\" },\n   \"content\": serialize({ \"Hello\": \"World\" }),\n   \"mediaType\": \"application/xml\"\n }\n s3:write-object($s3-object)\n </pre>\n </p>\n <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">Example return object:\n <pre>\n {\n   \"expiration\": \"expiry-date=\\\"Fri, 23 Dec 2012 00:00:00 GMT\\\", rule-id=\\\"1\\\"\",\n   \"version\": \"3GL4kqtJlcpXroDTDm3vjVBH40Nr8X8g\",\n   \"eTag\": \"\\\"1b2cf535f27731c974343645a3985328\\\"\"\n }\n </pre>\n </p>\n <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">The fields in the returned object have the following meanings:\n <ul>\n   <li>expiration: if the object expiration is configured, the response\n   includes this header. It includes the expiry-date and rule-id key-value\n   pairs providing object expiration information. The value of the rule-id is\n   URL encoded. (string, optional)</li>\n   <li>version: the version of the object. When you enable versioning,\n   Amazon S3 generates a random number for objects added to a bucket. The value\n   is UTF-8 encoded and URL ready. When you PUT an object in a bucket where\n   versioning has been suspended, the version ID is always null. (string, optional)</li>\n   <li>eTag: the entity tag is a hash of the object. The eTag only reflects\n   changes to the contents of an object, not its metadata. The eTag is determined\n   when an object is created. The eTag returned by this method is a quoted,\n   32-digit hexadecimal string representing the MD5 digest of the object data.\n   For other objects, the eTag may or may not be an MD5 digest of the object data.\n   (string, optional).</li>\n </ul>\n </p>\n", "summary" : "<p>  Writes an object in an S3 bucket using the default S3 credentials.</p>", "annotation_str" : " %an:sequential", "annotations" : [ { "prefix" : "an", "ns" : "http://zorba.io/annotations", "name" : "sequential", "value" : "" } ], "updating" : false, "parameters" : [ { "name" : "s3-object", "type" : "item()", "occurrence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> The S3 object to write.</div>" } ], "returns" : { "type" : "object()", "description" : "the S3 operation result." }, "errors" : [ "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">s3:CREDENTIALS if the default S3 credentials cannot be found or are invalid</xqdoc:error>", "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">s3:OBJECT if the object specification is invalid</xqdoc:error>", "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">s3:BUCKET if no bucket has been specified and no default bucket is present in the used credentials</xqdoc:error>", "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">s3:HTTP an HTTP error occurred sending the request to S3</xqdoc:error>", "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">s3:REQUEST S3 refused to execute the request</xqdoc:error>" ] }, { "isDocumented" : true, "arity" : 2, "name" : "write-object", "qname" : "s3:write-object", "signature" : "($credentials as item()?, $s3-object as object()) as object()", "description" : " <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">Writes an object in an S3 bucket using the specified credentials.\n If the object already exists it is overwritten.</p>\n <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">The object to write and its contents are specified through the $s3-object\n parameter, which must have the following structure:\n <ul>\n   <li>key: the object key (string, mandatory).</li>\n   <li>bucket: the bucket name (string, optional). If this field is not present\n   and the specified credentials do not have a default bucket, the\n   <code>s3:BUCKET</code> error is raised.</li>\n   <li>content: the object content. It must either be a string or a base64Binary\n   atomic. (item, mandatory).</li>\n   <li>mediaType: the media-type of the object (string, optional). If not specified,\n   \"text/plain\" is used if the content field is of type string, \"binary/octet-stream\"\n   if it is of type base64Binary.</li>\n   <li>metadata: an object specifying additional metadata. Each metadata is a\n   name-value pair and is represented as different fields (object, optional).</li>\n   <li>permission: the permission to set (string, optional). It must be one of\n   \"private\", \"public-read\", \"public-read-write\", \"authenticated-read\",\n   \"bucket-owner-read\", \"bucket-owner-full-control\". For your convenience the\n   following variables can be used: <code>$s3:ACL-GRANT-PRIVATE</code>,\n   <code>$s3:ACL-GRANT-PUBLIC-READ</code>, <code>$s3:ACL-GRANT-PUBLIC-READ-WRITE</code>,\n   <code>$s3:ACL-GRANT-AUTHENTICATED-READ</code>, <code>$s3:ACL-GRANT-BUCKET-OWNER-READ</code>,\n   <code>$s3:ACL-GRANT-BUCKET-OWNER-FULL-CONTROL</code>. If this field is not\n   specified, the \"private\" ACL is used, that is, the owner gets FULL_CONTROL,\n   and no one else has access rights.</li>\n   <li>reducedRedundancy: whether to use reduced-redundancy or not (bool,\n   optional). Default is false.</li>\n </ul>\n </p>\n <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">Example:\n <pre>\n variable $s3-object :=\n {\n   \"key\": \"test.xml\",\n   \"bucket\": \"28msec\",\n   \"permission\": $const:ACL-GRANT-PUBLIC-READ,\n   \"metadata\": { \"author\": \"28msec\" },\n   \"content\": serialize({ \"Hello\": \"World\" }),\n   \"mediaType\": \"application/xml\"\n }\n s3:write-object(\"s3\", $s3-object)\n </pre>\n </p>\n <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">Example return object:\n <pre>\n {\n   \"expiration\": \"expiry-date=\\\"Fri, 23 Dec 2012 00:00:00 GMT\\\", rule-id=\\\"1\\\"\",\n   \"version\": \"3GL4kqtJlcpXroDTDm3vjVBH40Nr8X8g\",\n   \"eTag\": \"\\\"1b2cf535f27731c974343645a3985328\\\"\"\n }\n </pre>\n </p>\n <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">The fields in the returned object have the following meanings:\n <ul>\n   <li>expiration: if the object expiration is configured, the response\n   includes this header. It includes the expiry-date and rule-id key-value\n   pairs providing object expiration information. The value of the rule-id is\n   URL encoded. (string, optional)</li>\n   <li>version: the version of the object. When you enable versioning,\n   Amazon S3 generates a random number for objects added to a bucket. The value\n   is UTF-8 encoded and URL ready. When you PUT an object in a bucket where\n   versioning has been suspended, the version ID is always null. (string, optional)</li>\n   <li>eTag: the entity tag is a hash of the object. The eTag only reflects\n   changes to the contents of an object, not its metadata. The eTag is determined\n   when an object is created. The eTag returned by this method is a quoted,\n   32-digit hexadecimal string representing the MD5 digest of the object data.\n   For other objects, the eTag may or may not be an MD5 digest of the object data.\n   (string, optional).</li>\n </ul>\n </p>\n", "summary" : "<p>  Writes an object in an S3 bucket using the specified credentials.</p>", "annotation_str" : " %an:sequential", "annotations" : [ { "prefix" : "an", "ns" : "http://zorba.io/annotations", "name" : "sequential", "value" : "" } ], "updating" : false, "parameters" : [ { "name" : "credentials", "type" : "item()", "occurrence" : "?", "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> The credentials to use.</div>" }, { "name" : "s3-object", "type" : "object()", "occurrence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> The S3 object to write.</div>" } ], "returns" : { "type" : "object()", "description" : "the S3 operation result." }, "errors" : [ "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">s3:CREDENTIALS if the specified S3 credentials cannot be found or are invalid</xqdoc:error>", "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">s3:OBJECT if the object specification is invalid</xqdoc:error>", "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">s3:BUCKET if no bucket has been specified and no default bucket is present in the used credentials</xqdoc:error>", "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">s3:HTTP an HTTP error occurred sending the request to S3</xqdoc:error>", "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">s3:REQUEST S3 refused to execute the request</xqdoc:error>" ] }, { "isDocumented" : true, "arity" : 2, "name" : "write-text", "qname" : "s3:write-text", "signature" : "($object as item(), $text-content as string) as object()", "description" : " <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">Writes a textual object in an S3 bucket using the default S3 credentials.\n If the object already exists it is overwritten.</p>\n <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">The S3 object is specified through the $s3-object parameter. Either a string\n or a JSON object can be used.</p>\n <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">If a string is specified, it is interpreted as\n key for an object in the default bucket of the default credentials. If no default\n bucket is present in the default credentials, the <code>s3:BUCKET</code> error\n is raised. The object media-type will be set to \"text/plain\", no metadata will\n be set for the object, the object will be stored on standard redundancy storage,\n and the object permission will be set to \"private\", that is, the owner gets\n FULL_CONTROL, and no one else has access rights.</p>\n <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">If a JSON object is used, it must have the following structure:\n <ul>\n   <li>key: the object key (string, mandatory).</li>\n   <li>bucket: the bucket name (string, optional). If this field is not present\n   and the default credentials do not have a default bucket, the\n   <code>s3:BUCKET</code> error is raised.</li>\n   <li>mediaType: the media-type of the object (string, optional). If not specified,\n   \"text/plain\" is used.</li>\n   <li>metadata: an object specifying additional metadata. Each metadata is a\n   name-value pair and is represented as different fields (object, optional).</li>\n   <li>permission: the permission to set (string, optional). It must be one of\n   \"private\", \"public-read\", \"public-read-write\", \"authenticated-read\",\n   \"bucket-owner-read\", \"bucket-owner-full-control\". For your convenience the\n   following variables can be used: <code>$s3:ACL-GRANT-PRIVATE</code>,\n   <code>$s3:ACL-GRANT-PUBLIC-READ</code>, <code>$s3:ACL-GRANT-PUBLIC-READ-WRITE</code>,\n   <code>$s3:ACL-GRANT-AUTHENTICATED-READ</code>, <code>$s3:ACL-GRANT-BUCKET-OWNER-READ</code>,\n   <code>$s3:ACL-GRANT-BUCKET-OWNER-FULL-CONTROL</code>. If this field is not\n   specified, the \"private\" ACL is used, that is, the owner gets FULL_CONTROL,\n   and no one else has access rights.</li>\n   <li>reducedRedundancy: whether to use reduced-redundancy or not (bool,\n   optional). Default is false.</li>\n </ul>\n </p>\n <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">Example:\n <pre>\n variable $s3-object :=\n {\n   \"key\": \"test.xml\",\n   \"bucket\": \"28msec\",\n   \"permission\": $const:ACL-GRANT-PUBLIC-READ,\n   \"metadata\": { \"author\": \"28msec\" },\n   \"mediaType\": \"text/xml\"\n }\n s3:write-text($s3-object, serialize(&lt;a/&gt;))\n </pre>\n </p>\n <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">Example return object:\n <pre>\n {\n   \"expiration\": \"expiry-date=\\\"Fri, 23 Dec 2012 00:00:00 GMT\\\", rule-id=\\\"1\\\"\",\n   \"version\": \"3GL4kqtJlcpXroDTDm3vjVBH40Nr8X8g\",\n   \"eTag\": \"\\\"1b2cf535f27731c974343645a3985328\\\"\"\n }\n </pre>\n </p>\n <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">The fields in the returned object have the following meanings:\n <ul>\n   <li>expiration: if the object expiration is configured, the response\n   includes this header. It includes the expiry-date and rule-id key-value\n   pairs providing object expiration information. The value of the rule-id is\n   URL encoded. (string, optional)</li>\n   <li>version: the version of the object. When you enable versioning,\n   Amazon S3 generates a random number for objects added to a bucket. The value\n   is UTF-8 encoded and URL ready. When you PUT an object in a bucket where\n   versioning has been suspended, the version ID is always null. (string, optional)</li>\n   <li>eTag: the entity tag is a hash of the object. The eTag only reflects\n   changes to the contents of an object, not its metadata. The eTag is determined\n   when an object is created. The eTag returned by this method is a quoted,\n   32-digit hexadecimal string representing the MD5 digest of the object data.\n   For other objects, the eTag may or may not be an MD5 digest of the object data.\n   (string, optional).</li>\n </ul>\n </p>\n", "summary" : "<p>  Writes a textual object in an S3 bucket using the default S3 credentials.</p>", "annotation_str" : " %an:sequential", "annotations" : [ { "prefix" : "an", "ns" : "http://zorba.io/annotations", "name" : "sequential", "value" : "" } ], "updating" : false, "parameters" : [ { "name" : "object", "type" : "item()", "occurrence" : null, "description" : "" }, { "name" : "text-content", "type" : "string", "occurrence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> The textual object content.</div>" } ], "returns" : { "type" : "object()", "description" : "the S3 operation result." }, "errors" : [ "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">s3:CREDENTIALS if the default S3 credentials cannot be found or are invalid</xqdoc:error>", "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">s3:OBJECT if the object specification is invalid</xqdoc:error>", "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">s3:BUCKET if no bucket has been specified and no default bucket is present in the used credentials</xqdoc:error>", "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">s3:HTTP an HTTP error occurred sending the request to S3</xqdoc:error>", "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">s3:REQUEST S3 refused to execute the request</xqdoc:error>" ] }, { "isDocumented" : true, "arity" : 3, "name" : "write-text", "qname" : "s3:write-text", "signature" : "($credentials as item()?, $object as item(), $text-content as string) as object()", "description" : " <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">Writes a text object in an S3 bucket using the specified S3 credentials.\n If the object already exists it is overwritten.</p>\n <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">The S3 object is specified through the $s3-object parameter. Either a string\n or a JSON object can be used.</p>\n <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">If a string is specified, it is interpreted as\n key for an object in the default bucket of the specified credentials. If no default\n bucket is present in the specified credentials, the <code>s3:BUCKET</code> error\n is raised. The object media-type will be set to \"text/plain\", no metadata will\n be set for the object, the object will be stored on standard redundancy storage,\n and the object permission will be set to \"private\", that is, the owner gets\n FULL_CONTROL, and no one else has access rights.</p>\n <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">If a JSON object is used, it must have the following structure:\n <ul>\n   <li>key: the object key (string, mandatory).</li>\n   <li>bucket: the bucket name (string, optional). If this field is not present\n   and the specified credentials do not have a default bucket, the\n   <code>s3:BUCKET</code> error is raised.</li>\n   <li>mediaType: the media-type of the object (string, optional). If not specified,\n   \"text/plain\" is used.</li>\n   <li>metadata: an object specifying additional metadata. Each metadata is a\n   name-value pair and is represented as different fields (object, optional).</li>\n   <li>permission: the permission to set (string, optional). It must be one of\n   \"private\", \"public-read\", \"public-read-write\", \"authenticated-read\",\n   \"bucket-owner-read\", \"bucket-owner-full-control\". For your convenience the\n   following variables can be used: <code>$s3:ACL-GRANT-PRIVATE</code>,\n   <code>$s3:ACL-GRANT-PUBLIC-READ</code>, <code>$s3:ACL-GRANT-PUBLIC-READ-WRITE</code>,\n   <code>$s3:ACL-GRANT-AUTHENTICATED-READ</code>, <code>$s3:ACL-GRANT-BUCKET-OWNER-READ</code>,\n   <code>$s3:ACL-GRANT-BUCKET-OWNER-FULL-CONTROL</code>. If this field is not\n   specified, the \"private\" ACL is used, that is, the owner gets FULL_CONTROL,\n   and no one else has access rights.</li>\n   <li>reducedRedundancy: whether to use reduced-redundancy or not (bool,\n   optional). Default is false.</li>\n </ul>\n </p>\n <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">Example:\n <pre>\n variable $s3-object :=\n {\n   \"key\": \"test.xml\",\n   \"bucket\": \"28msec\",\n   \"permission\": $const:ACL-GRANT-PUBLIC-READ,\n   \"metadata\": { \"author\": \"28msec\" },\n   \"mediaType\": \"text/xml\"\n }\n s3:write-text(\"credentials\", $s3-object, serialize(&lt;a/&gt;))\n </pre>\n </p>\n <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">Example return object:\n <pre>\n {\n   \"expiration\": \"expiry-date=\\\"Fri, 23 Dec 2012 00:00:00 GMT\\\", rule-id=\\\"1\\\"\",\n   \"version\": \"3GL4kqtJlcpXroDTDm3vjVBH40Nr8X8g\",\n   \"eTag\": \"\\\"1b2cf535f27731c974343645a3985328\\\"\"\n }\n </pre>\n </p>\n <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">The fields in the returned object have the following meanings:\n <ul>\n   <li>expiration: if the object expiration is configured, the response\n   includes this header. It includes the expiry-date and rule-id key-value\n   pairs providing object expiration information. The value of the rule-id is\n   URL encoded. (string, optional)</li>\n   <li>version: the version of the object. When you enable versioning,\n   Amazon S3 generates a random number for objects added to a bucket. The value\n   is UTF-8 encoded and URL ready. When you PUT an object in a bucket where\n   versioning has been suspended, the version ID is always null. (string, optional)</li>\n   <li>eTag: the entity tag is a hash of the object. The eTag only reflects\n   changes to the contents of an object, not its metadata. The eTag is determined\n   when an object is created. The eTag returned by this method is a quoted,\n   32-digit hexadecimal string representing the MD5 digest of the object data.\n   For other objects, the eTag may or may not be an MD5 digest of the object data.\n   (string, optional).</li>\n </ul>\n </p>\n", "summary" : "<p>  Writes a text object in an S3 bucket using the specified S3 credentials.</p>", "annotation_str" : " %an:sequential", "annotations" : [ { "prefix" : "an", "ns" : "http://zorba.io/annotations", "name" : "sequential", "value" : "" } ], "updating" : false, "parameters" : [ { "name" : "credentials", "type" : "item()", "occurrence" : "?", "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> The credentials to use.</div>" }, { "name" : "object", "type" : "item()", "occurrence" : null, "description" : "" }, { "name" : "text-content", "type" : "string", "occurrence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> The textual object content.</div>" } ], "returns" : { "type" : "object()", "description" : "the S3 operation result." }, "errors" : [ "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">s3:CREDENTIALS if the specified S3 credentials cannot be found or are invalid</xqdoc:error>", "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">s3:OBJECT if the object specification is invalid</xqdoc:error>", "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">s3:BUCKET if no bucket has been specified and no default bucket is present in the used credentials</xqdoc:error>", "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">s3:HTTP an HTTP error occurred sending the request to S3</xqdoc:error>", "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">s3:REQUEST S3 refused to execute the request</xqdoc:error>" ] } ], "variables" : [ { "name" : "s3:ACL-GRANT-PRIVATE", "type" : "item()*", "description" : " The private canned ACL. It is applicable to buckets and objects.\n Owner gets FULL_CONTROL. No one else has access rights.\n" }, { "name" : "s3:ACL-GRANT-PUBLIC-READ", "type" : "item()*", "description" : " The public-read canned ACL. Applicable to buckets and objects.\n Owner gets FULL_CONTROL. The AllUsers group gets READ access.\n" }, { "name" : "s3:ACL-GRANT-PUBLIC-READ-WRITE", "type" : "item()*", "description" : " The public-read-write canned ACL. Applicable to buckets and objects.\n Owner gets FULL_CONTROL. The AllUsers group gets READ and WRITE access.\n Granting this on a bucket is generally not recommended.\n" }, { "name" : "s3:ACL-GRANT-AUTHENTICATED-READ", "type" : "item()*", "description" : " The autenticated-read canned ACL. Applicable to buckets and objects.\n Owner gets FULL_CONTROL. The AuthenticatedUsers group gets READ access.\n" }, { "name" : "s3:ACL-GRANT-BUCKET-OWNER-READ", "type" : "item()*", "description" : " The grant-bucket-owner-read canned ACL. Applicable to objects.\n Object owner gets FULL_CONTROL. Bucket owner gets READ access.\n If you specify this canned ACL when creating a bucket, Amazon S3 ignores it.\n" }, { "name" : "s3:ACL-GRANT-BUCKET-OWNER-FULL-CONTROL", "type" : "item()*", "description" : " The grant-bucket-owner-full-control canned ACL. Applicable to objects.\n Both the object owner and the bucket owner get FULL_CONTROL over the object.\n If you specify this canned ACL when creating a bucket, Amazon S3 ignores it.\n" } ] }, "http://api.28.io/authorization" : { "ns" : "http://api.28.io/authorization", "description" : "", "sees" : [  ], "authors" : [  ], "version" : null, "encoding" : null, "namespaces" : [ { "uri" : "", "prefix" : "an" }, { "uri" : "http://api.28.io/authorization", "prefix" : "authorization" }, { "uri" : "http://zorba.io/modules/base64", "prefix" : "base64" }, { "uri" : "http://zorba.io/modules/hmac", "prefix" : "hmac" }, { "uri" : "http://expath.org/ns/http-client", "prefix" : "http-client" }, { "uri" : "http://www.28msec.com/modules/project", "prefix" : "project" }, { "uri" : "http://www.28msec.com/modules/http/request", "prefix" : "req" }, { "uri" : "http://www.28msec.com/modules/http/response", "prefix" : "res" } ], "functions" : [ { "isDocumented" : false, "arity" : 0, "name" : "authorized", "qname" : "authorization:authorized", "signature" : "() as xs:boolean", "description" : "", "summary" : "", "annotation_str" : " %an:sequential", "annotations" : [ { "prefix" : "an", "ns" : "", "name" : "sequential", "value" : "" } ], "updating" : false, "parameters" : [  ], "returns" : { "type" : "xs:boolean", "description" : "" }, "errors" : [  ] }, { "isDocumented" : false, "arity" : 0, "name" : "html-do-login", "qname" : "authorization:html-do-login", "signature" : "()", "description" : "", "summary" : "", "annotation_str" : " %an:sequential", "annotations" : [ { "prefix" : "an", "ns" : "", "name" : "sequential", "value" : "" } ], "updating" : false, "parameters" : [  ], "returns" : { "type" : null, "description" : "" }, "errors" : [  ] }, { "isDocumented" : false, "arity" : 0, "name" : "html-show-login", "qname" : "authorization:html-show-login", "signature" : "()", "description" : "", "summary" : "", "annotation_str" : " %an:sequential", "annotations" : [ { "prefix" : "an", "ns" : "", "name" : "sequential", "value" : "" } ], "updating" : false, "parameters" : [  ], "returns" : { "type" : null, "description" : "" }, "errors" : [  ] } ], "variables" : [  ] }, "http://zorba.io/modules/store/static/integrity-constraints/dml" : { "ns" : "http://zorba.io/modules/store/static/integrity-constraints/dml", "description" : " This module defines a function to check if an integrity constraint is\n satisfied.\n The integrity constraint needs to be declared in the prolog of a module.\n <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"/>\n This module is part of\n <a xmlns:xqdoc=\"http://www.xqdoc.org/1.0\" href=\"../zorba/xqddf.html\">Zorba's XQuery Data Definition Facility</a>.\n All the integrity constraints managed by this module have to be pre-declared\n in the prolog of a module.\n Please refer to the\n <a xmlns:xqdoc=\"http://www.xqdoc.org/1.0\" href=\"../zorba/data_lifecycle.html\">general documentation</a>\n for more information and examples.\n", "sees" : [ "<xqdoc:see xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"><a href=\"../zorba/data_lifecycle.html\">Data Lifecycle</a></xqdoc:see>", "<xqdoc:see xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"><a href=\"../zorba/xqddf.html\">XQuery Data Definition Facility</a></xqdoc:see>", "<xqdoc:see xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">http://zorba.io/modules/store/static/integrity-constraints/dml</xqdoc:see>", "<xqdoc:see xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">http://zorba.io/modules/store/static/collections/dml</xqdoc:see>", "<xqdoc:see xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">http://zorba.io/modules/store/static/collections/ddl</xqdoc:see>", "<xqdoc:see xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">http://zorba.io/modules/store/static/indexes/ddl</xqdoc:see>", "<xqdoc:see xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">http://zorba.io/modules/store/static/indexes/dml</xqdoc:see>", "<xqdoc:see xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">http://zorba.io/errors</xqdoc:see>" ], "authors" : [ "<xqdoc:author xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">Nicolae Brinza, Matthias Brantner, David Graf, Till Westmann, Markos Zaharioudakis</xqdoc:author>" ], "version" : null, "encoding" : "utf-8", "namespaces" : [ { "uri" : "http://zorba.io/modules/store/static/integrity-constraints/dml", "prefix" : "icdml" }, { "uri" : "http://zorba.io/options/versioning", "prefix" : "ver" }, { "uri" : "http://zorba.io/errors", "prefix" : "zerr" } ], "functions" : [ { "isDocumented" : true, "arity" : 1, "name" : "check-integrity-constraint", "qname" : "icdml:check-integrity-constraint", "signature" : "($name as xs:QName) as xs:boolean external", "description" : " Checks if the specified constraints are valid in the database.\n", "summary" : "<p> Checks if the specified constraints are valid in the database.</p>", "annotation_str" : "", "annotations" : [  ], "updating" : false, "parameters" : [ { "name" : "name", "type" : "xs:QName", "occurrence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> The name of the integrity constraint to check.</div>" } ], "returns" : { "type" : "xs:boolean", "description" : "true if the constraints are valid; false otherwise." }, "errors" : [ "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">zerr:ZDDY0031 if the integrity constraint is not declared.</xqdoc:error>", "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">zerr:ZDDY0032 if the integrity constraint is not available.</xqdoc:error>" ] } ], "variables" : [  ] }, "http://zorba.io/modules/excel/statistical" : { "ns" : "http://zorba.io/modules/excel/statistical", "description" : " This is a library module offering a part of the set of statistical functions\n defined by Microsoft Excel 2003.\n", "sees" : [ "<xqdoc:see xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"><a href=\"http://office.microsoft.com/en-us/excel/CH062528311033.aspx\" target=\"_blank\">Excel 2003 Documentation: Statistical Functions</a></xqdoc:see>" ], "authors" : [ "<xqdoc:author xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">Daniel Turcanu</xqdoc:author>" ], "version" : null, "encoding" : "utf-8", "namespaces" : [ { "uri" : "http://zorba.io/modules/excel/statistical", "prefix" : "excel" }, { "uri" : "http://zorba.io/modules/excel/errors", "prefix" : "excel-err" }, { "uri" : "http://zorba.io/modules/excel/math", "prefix" : "excel-math" }, { "uri" : "http://zorba.io/options/versioning", "prefix" : "ver" } ], "functions" : [ { "isDocumented" : true, "arity" : 1, "name" : "avedev", "qname" : "excel:avedev", "signature" : "($numbers as xs:anyAtomicType+) as xs:anyAtomicType", "description" : " Returns the average of the absolute deviations of data points from their mean.\n The formula is sum(abs(x - average_x))/n, where n is the count of x in the sequence.\n", "summary" : "<p> Returns the average of the absolute deviations of data points from their mean.</p>", "annotation_str" : "", "annotations" : [  ], "updating" : false, "parameters" : [ { "name" : "numbers", "type" : "xs:anyAtomicType", "occurrence" : "+", "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> the sequence of numbers or values castable to numeric. Sequence can be of any length from 1 up.</div>" } ], "returns" : { "type" : "xs:anyAtomicType", "description" : "The formula result" }, "errors" : [ "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">excel-err:Value if the parameters cannot be casted to numeric type</xqdoc:error>" ] }, { "isDocumented" : true, "arity" : 1, "name" : "average", "qname" : "excel:average", "signature" : "($numbers as xs:anyAtomicType*) as xs:anyAtomicType", "description" : " Returns the average (arithmetic mean) of the arguments.\n Arguments can be empty values, otherwise must be castable to numeric.\n If sequence is empty then zero is returned.\n The sequence can be of any length.\n", "summary" : "<p> Returns the average (arithmetic mean) of the arguments.</p>", "annotation_str" : "", "annotations" : [  ], "updating" : false, "parameters" : [ { "name" : "numbers", "type" : "xs:anyAtomicType", "occurrence" : "*", "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> The sequence of numbers or empty values.</div>" } ], "returns" : { "type" : "xs:anyAtomicType", "description" : "The sum of all numbers divided by the number of non-empty values." }, "errors" : [ "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">excel-err:Value if the parameters cannot be casted to numeric type.</xqdoc:error>" ] }, { "isDocumented" : true, "arity" : 1, "name" : "averagea", "qname" : "excel:averagea", "signature" : "($numbers as xs:anyAtomicType+) as xs:anyAtomicType", "description" : " Calculates the average (arithmetic mean) of the values in the sequence of arguments.\n Arguments can be of any type.\n The numbers are added, and the sum is divided by the size of entire sequence.\n", "summary" : "<p> Calculates the average (arithmetic mean) of the values in the sequence of arguments.</p>", "annotation_str" : "", "annotations" : [  ], "updating" : false, "parameters" : [ { "name" : "numbers", "type" : "xs:anyAtomicType", "occurrence" : "+", "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> the sequence of values of any type. The sequence can be of any length, from 1 up.</div>" } ], "returns" : { "type" : "xs:anyAtomicType", "description" : "The result" }, "errors" : [  ] }, { "isDocumented" : true, "arity" : 1, "name" : "count", "qname" : "excel:count", "signature" : "($numbers as xs:anyAtomicType*) as xs:integer", "description" : " Counts the number of cells that contain numbers or values castable to numeric.\n", "summary" : "<p> Counts the number of cells that contain numbers or values castable to numeric.</p>", "annotation_str" : "", "annotations" : [  ], "updating" : false, "parameters" : [ { "name" : "numbers", "type" : "xs:anyAtomicType", "occurrence" : "*", "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> The sequence of values, of any length.</div>" } ], "returns" : { "type" : "xs:integer", "description" : "The count of numbers." }, "errors" : [  ] }, { "isDocumented" : true, "arity" : 1, "name" : "counta", "qname" : "excel:counta", "signature" : "($numbers as xs:anyAtomicType*) as xs:integer", "description" : " Counts the number of values that are not empty.\n Empty values are the one with string value \"\".\n", "summary" : "<p> Counts the number of values that are not empty.</p>", "annotation_str" : "", "annotations" : [  ], "updating" : false, "parameters" : [ { "name" : "numbers", "type" : "xs:anyAtomicType", "occurrence" : "*", "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> the sequence of values of any type, any length</div>" } ], "returns" : { "type" : "xs:integer", "description" : "The count of non-empty values" }, "errors" : [  ] }, { "isDocumented" : true, "arity" : 1, "name" : "countblank", "qname" : "excel:countblank", "signature" : "($cells as xs:anyAtomicType*) as xs:integer", "description" : " Counts the empty values in a sequence.\n The empty values are the ones with string value \"\".\n The value 0 is not counted.\n", "summary" : "<p> Counts the empty values in a sequence.</p>", "annotation_str" : "", "annotations" : [  ], "updating" : false, "parameters" : [ { "name" : "cells", "type" : "xs:anyAtomicType", "occurrence" : "*", "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> the sequence of values, of any length</div>" } ], "returns" : { "type" : "xs:integer", "description" : "The count" }, "errors" : [  ] }, { "isDocumented" : true, "arity" : 2, "name" : "large", "qname" : "excel:large", "signature" : "($numbers as xs:anyAtomicType*, $k as xs:integer) as xs:anyAtomicType", "description" : " Returns the k-th largest value in a data set.\n If n is the number of data points in a range,\n   then LARGE(array,1) returns the largest value,\n   and LARGE(array,n) returns the smallest value.\n", "summary" : "<p> Returns the k-th largest value in a data set.</p>", "annotation_str" : "", "annotations" : [  ], "updating" : false, "parameters" : [ { "name" : "numbers", "type" : "xs:anyAtomicType", "occurrence" : "*", "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> the sequence of numbers or values castable to numeric. The sequence can be of any length, from 1 up.</div>" }, { "name" : "k", "type" : "xs:integer", "occurrence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> the position of largest value, with value from 1 to count of values</div>" } ], "returns" : { "type" : "xs:anyAtomicType", "description" : "The k-th largest value as numeric type" }, "errors" : [ "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">excel-err:Value if the parameters cannot be casted to numeric type</xqdoc:error>", "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">excel-err:Num if the sequence is empty</xqdoc:error>", "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">excel-err:Num if k is not a value between 1 and the sequence size</xqdoc:error>" ] }, { "isDocumented" : true, "arity" : 1, "name" : "max", "qname" : "excel:max", "signature" : "($numbers as xs:anyAtomicType*) as xs:anyAtomicType", "description" : " Returns the largest number in a sequence.\n", "summary" : "<p> Returns the largest number in a sequence.</p>", "annotation_str" : "", "annotations" : [  ], "updating" : false, "parameters" : [ { "name" : "numbers", "type" : "xs:anyAtomicType", "occurrence" : "*", "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> the sequence of numbers or values castable to numeric. The sequence can be of any length.</div>" } ], "returns" : { "type" : "xs:anyAtomicType", "description" : "The max" }, "errors" : [ "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">excel-err:Value if the parameters cannot be casted to numeric type</xqdoc:error>" ] }, { "isDocumented" : true, "arity" : 1, "name" : "maxa", "qname" : "excel:maxa", "signature" : "($numbers as xs:anyAtomicType*) as xs:anyAtomicType", "description" : " Returns the largest value in a list of arguments.\n In this implementation there is no difference between MAX and MAXA.\n", "summary" : "<p> Returns the largest value in a list of arguments.</p>", "annotation_str" : "", "annotations" : [  ], "updating" : false, "parameters" : [ { "name" : "numbers", "type" : "xs:anyAtomicType", "occurrence" : "*", "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> the sequence of numbers or values castable to numeric The sequence can be of any length.</div>" } ], "returns" : { "type" : "xs:anyAtomicType", "description" : "The max" }, "errors" : [ "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">excel-err:Value if the parameters cannot be casted to numeric type</xqdoc:error>" ] }, { "isDocumented" : true, "arity" : 1, "name" : "median", "qname" : "excel:median", "signature" : "($numbers as xs:anyAtomicType*) as xs:anyAtomicType", "description" : " Returns the median of the given numbers.\n The median is the number in the middle of a set of numbers.\n Half the numbers have values that are greater than the median,\n and half the numbers have values that are less than the median.\n", "summary" : "<p> Returns the median of the given numbers.</p>", "annotation_str" : "", "annotations" : [  ], "updating" : false, "parameters" : [ { "name" : "numbers", "type" : "xs:anyAtomicType", "occurrence" : "*", "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> the sequence of numbers, of any length</div>" } ], "returns" : { "type" : "xs:anyAtomicType", "description" : "for odd count of numbers return the number in the middle of the sorted sequence. For even count of numbers return the average of the two numbers in the middle." }, "errors" : [ "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">excel-err:Value if the parameters cannot be casted to numeric type</xqdoc:error>" ] }, { "isDocumented" : true, "arity" : 1, "name" : "min", "qname" : "excel:min", "signature" : "($numbers as xs:anyAtomicType*) as xs:anyAtomicType", "description" : " Returns the smallest number in a sequence.\n", "summary" : "<p> Returns the smallest number in a sequence.</p>", "annotation_str" : "", "annotations" : [  ], "updating" : false, "parameters" : [ { "name" : "numbers", "type" : "xs:anyAtomicType", "occurrence" : "*", "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> the sequence of numbers or values castable to numeric. The sequence can be of any length.</div>" } ], "returns" : { "type" : "xs:anyAtomicType", "description" : "The min" }, "errors" : [ "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">excel-err:Value if the parameters cannot be casted to numeric type</xqdoc:error>" ] }, { "isDocumented" : true, "arity" : 1, "name" : "mina", "qname" : "excel:mina", "signature" : "($numbers as xs:anyAtomicType*) as xs:anyAtomicType", "description" : " Returns the smallest value in a list of arguments.\n In this implementation there is no difference between MAX and MAXA.\n", "summary" : "<p> Returns the smallest value in a list of arguments.</p>", "annotation_str" : "", "annotations" : [  ], "updating" : false, "parameters" : [ { "name" : "numbers", "type" : "xs:anyAtomicType", "occurrence" : "*", "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> the sequence of numbers or values castable to numeric The sequence can be of any length.</div>" } ], "returns" : { "type" : "xs:anyAtomicType", "description" : "The min" }, "errors" : [ "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">excel-err:Value if the parameters cannot be casted to numeric type</xqdoc:error>" ] }, { "isDocumented" : true, "arity" : 1, "name" : "mode", "qname" : "excel:mode", "signature" : "($numbers as xs:anyAtomicType*) as xs:anyAtomicType", "description" : " Returns the most frequently occurring, or repetitive, value in a sequence.\n Arguments must be castable to numeric.\n", "summary" : "<p> Returns the most frequently occurring, or repetitive, value in a sequence.</p>", "annotation_str" : "", "annotations" : [  ], "updating" : false, "parameters" : [ { "name" : "numbers", "type" : "xs:anyAtomicType", "occurrence" : "*", "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> the sequence of numbers, of any length</div>" } ], "returns" : { "type" : "xs:anyAtomicType", "description" : "The most occuring number" }, "errors" : [ "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">excel-err:Value if the parameters cannot be casted to numeric type</xqdoc:error>", "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">fn:QName(\"http://zorba.io/modules/excel/errors\", \"excel-err:NA\") if there are no duplicate numbers</xqdoc:error>" ] }, { "isDocumented" : true, "arity" : 2, "name" : "percentile", "qname" : "excel:percentile", "signature" : "($numbers as xs:anyAtomicType*, $k_at as xs:anyAtomicType) as xs:anyAtomicType", "description" : " Returns the k-th percentile of values in a sequence.\n If k is not a multiple of 1/(n - 1),\n   PERCENTILE interpolates to determine the value at the k-th percentile.\n The function is computed by (max-min)*k + min\n", "summary" : "<p> Returns the k-th percentile of values in a sequence.</p>", "annotation_str" : "", "annotations" : [  ], "updating" : false, "parameters" : [ { "name" : "numbers", "type" : "xs:anyAtomicType", "occurrence" : "*", "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> the sequence of numbers, of any length</div>" }, { "name" : "k_at", "type" : "xs:anyAtomicType", "occurrence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> the percentile, with value between 0 .. 1 inclusive</div>" } ], "returns" : { "type" : "xs:anyAtomicType", "description" : "The computed percentile" }, "errors" : [ "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">excel-err:Value if the parameters cannot be casted to numeric type</xqdoc:error>", "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">excel-err:Num if percentile is not between 0 .. 1</xqdoc:error>" ] }, { "isDocumented" : true, "arity" : 2, "name" : "percentrank", "qname" : "excel:percentrank", "signature" : "($numbers as xs:anyAtomicType*, $x as xs:anyAtomicType) as xs:decimal", "description" : " Returns the rank of a value in a data set as a percentage of the data set.\n If x does not match one of the values in array,\n   PERCENTRANK interpolates to return the correct percentage rank. <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"/>\n The formula is uses: (RANK - 1) / (size - 1) .\n", "summary" : "<p> Returns the rank of a value in a data set as a percentage of the data set.</p>", "annotation_str" : "", "annotations" : [  ], "updating" : false, "parameters" : [ { "name" : "numbers", "type" : "xs:anyAtomicType", "occurrence" : "*", "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> the sequence of numbers or values castable to numbers. The sequence can be of any length, from 1 up.</div>" }, { "name" : "x", "type" : "xs:anyAtomicType", "occurrence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> is the value for which you want to know the rank</div>" } ], "returns" : { "type" : "xs:decimal", "description" : "The percentage of rank." }, "errors" : [ "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">excel-err:Value if the parameters cannot be casted to numeric type</xqdoc:error>", "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">excel-err:Num if the sequence is zero length</xqdoc:error>" ] }, { "isDocumented" : true, "arity" : 3, "name" : "prob", "qname" : "excel:prob", "signature" : "($x_range as xs:anyAtomicType+, $prob_range as xs:anyAtomicType+, $range_lower_limit as xs:anyAtomicType) as xs:anyAtomicType", "description" : " This is the same as above, only that upper_limit is not specified.\n The probability is computed only for range_lower_limit.\n", "summary" : "<p> This is the same as above, only that upper_limit is not specified.</p>", "annotation_str" : "", "annotations" : [  ], "updating" : false, "parameters" : [ { "name" : "x_range", "type" : "xs:anyAtomicType", "occurrence" : "+", "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> is the range of numeric values of x with which there are associated probabilities. This does not need to be ordered.</div>" }, { "name" : "prob_range", "type" : "xs:anyAtomicType", "occurrence" : "+", "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> is a set of probabilities associated with values in x_range.</div>" }, { "name" : "range_lower_limit", "type" : "xs:anyAtomicType", "occurrence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> is the value for which you want a probability.</div>" } ], "returns" : { "type" : "xs:anyAtomicType", "description" : "The probability of the range_lower_limit value" }, "errors" : [ "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">excel-err:Num if any probability is not between 0 and 1</xqdoc:error>", "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">excel-err:Num if the sum of probabilities is not equal to 1</xqdoc:error>", "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">excel-err:Value if any parameter is not castable to numeric</xqdoc:error>", "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">excel-err:Num if x_range and prob_range do not have the same number of values</xqdoc:error>" ] }, { "isDocumented" : true, "arity" : 4, "name" : "prob", "qname" : "excel:prob", "signature" : "($x_range as xs:anyAtomicType+, $prob_range as xs:anyAtomicType+, $range_lower_limit as xs:anyAtomicType, $upper_limit as xs:anyAtomicType) as xs:anyAtomicType", "description" : " Returns the probability that values in a range are between two limits.\n", "summary" : "<p> Returns the probability that values in a range are between two limits.</p>", "annotation_str" : "", "annotations" : [  ], "updating" : false, "parameters" : [ { "name" : "x_range", "type" : "xs:anyAtomicType", "occurrence" : "+", "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> is the range of numeric values of x with which there are associated probabilities. This does not need to be ordered.</div>" }, { "name" : "prob_range", "type" : "xs:anyAtomicType", "occurrence" : "+", "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> is a set of probabilities associated with values in x_range.</div>" }, { "name" : "range_lower_limit", "type" : "xs:anyAtomicType", "occurrence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> is the lower bound on the value for which you want a probability.</div>" }, { "name" : "upper_limit", "type" : "xs:anyAtomicType", "occurrence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> is the upper bound on the value for which you want a probability.</div>" } ], "returns" : { "type" : "xs:anyAtomicType", "description" : "The probability of the entire range" }, "errors" : [ "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">excel-err:Num if any probability is not between 0 and 1</xqdoc:error>", "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">excel-err:Num if the sum of probabilities is not equal to 1</xqdoc:error>", "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">excel-err:Value if any parameter is not castable to numeric</xqdoc:error>", "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">excel-err:Num if x_range and prob_range do not have the same number of values</xqdoc:error>" ] }, { "isDocumented" : true, "arity" : 2, "name" : "quartile", "qname" : "excel:quartile", "signature" : "($numbers as xs:anyAtomicType*, $quart as xs:integer) as xs:anyAtomicType", "description" : " Returns the quartile of a data set.\n", "summary" : "<p> Returns the quartile of a data set.</p>", "annotation_str" : "", "annotations" : [  ], "updating" : false, "parameters" : [ { "name" : "numbers", "type" : "xs:anyAtomicType", "occurrence" : "*", "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> sequence of numbers or values castable to numbers. The sequence can be of any length, from 1 up.</div>" }, { "name" : "quart", "type" : "xs:integer", "occurrence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> <dl>one of the values 0, 1, 2, 3, 4 with meaning: <dt>0</dt> <dd> compute minimum value</dd> <dt>1</dt> <dd> compute first quartile (25th percentile)</dd> <dt>2</dt> <dd> compute median value (50th percentile)</dd> <dt>3</dt> <dd> compute third quartile (75th percentile)</dd> <dt>4</dt> <dd> compute maximum value</dd></dl></div>" } ], "returns" : { "type" : "xs:anyAtomicType", "description" : "the computed quartile, as numeric type" }, "errors" : [ "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">excel-err:Value if the parameters cannot be casted to numeric type</xqdoc:error>", "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">excel-err:Num if the sequence is zero length</xqdoc:error>", "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">excel-err:Num if $quart is not one of the values 0, 1, 2, 3, 4</xqdoc:error>" ] }, { "isDocumented" : true, "arity" : 2, "name" : "rank", "qname" : "excel:rank", "signature" : "($x as xs:anyAtomicType, $numbers as xs:anyAtomicType*) as xs:decimal", "description" : " This RANK function is same as the above, only that $order_ascending is set by default to false.\n", "summary" : "<p> This RANK function is same as the above, only that $order_ascending is set by default to false.</p>", "annotation_str" : "", "annotations" : [  ], "updating" : false, "parameters" : [ { "name" : "x", "type" : "xs:anyAtomicType", "occurrence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> The number whose rank you want to find.</div>" }, { "name" : "numbers", "type" : "xs:anyAtomicType", "occurrence" : "*", "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> the sequence of numbers or values castable to numbers. The sequence can be of any length.</div>" } ], "returns" : { "type" : "xs:decimal", "description" : "The rank of $x." }, "errors" : [ "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">excel-err:Value if the parameters cannot be casted to numeric type.</xqdoc:error>" ] }, { "isDocumented" : true, "arity" : 3, "name" : "rank", "qname" : "excel:rank", "signature" : "($x as xs:anyAtomicType, $numbers as xs:anyAtomicType*, $order_ascending as xs:boolean) as xs:decimal", "description" : " Returns the rank of a number in a list of numbers.\n The rank of a number is its size relative to other values in a list.\n (If you were to sort the list, the rank of the number would be its position.)\n RANK gives duplicate numbers the same rank.\n", "summary" : "<p> Returns the rank of a number in a list of numbers.</p>", "annotation_str" : "", "annotations" : [  ], "updating" : false, "parameters" : [ { "name" : "x", "type" : "xs:anyAtomicType", "occurrence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> The number whose rank you want to find.</div>" }, { "name" : "numbers", "type" : "xs:anyAtomicType", "occurrence" : "*", "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> The sequence of numbers or values castable to numbers. The sequence can be of any length.</div>" }, { "name" : "order_ascending", "type" : "xs:boolean", "occurrence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> <dl>A boolean having the meaning: <dt>false</dt><dd>then rank the number as if the sequence was sorted in descending order.</dd> <dt>true</dt> <dd>then rank the number as if the sequence was sorted in ascending order.</dd></dl></div>" } ], "returns" : { "type" : "xs:decimal", "description" : "The rank of $x." }, "errors" : [ "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">excel-err:Value if the parameters cannot be casted to numeric type.</xqdoc:error>" ] }, { "isDocumented" : true, "arity" : 2, "name" : "slope", "qname" : "excel:slope", "signature" : "($known_y as xs:anyAtomicType+, $known_x as xs:anyAtomicType+) as xs:anyAtomicType", "description" : " Returns the slope of the linear regression line through data points in known_y's and known_x's.\n The slope is the vertical distance divided by the horizontal distance between\n   any two points on the line, which is the rate of change along the regression line.\n It computes the formula:<p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"/>\n sum((x - average_x)(y - average_y)) / sum((x - average_x)^2)  <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"/>\n where average_x and average_y are computed with AVERAGE function.\n", "summary" : "<p> Returns the slope of the linear regression line through data points in known_y's and known_x's.</p>", "annotation_str" : "", "annotations" : [  ], "updating" : false, "parameters" : [ { "name" : "known_y", "type" : "xs:anyAtomicType", "occurrence" : "+", "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> the sequence of y numbers. The sequence can be of any length, from 1 up.</div>" }, { "name" : "known_x", "type" : "xs:anyAtomicType", "occurrence" : "+", "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> the sequence of x numbers. The sequence can be of any length, from 1 up.</div>" } ], "returns" : { "type" : "xs:anyAtomicType", "description" : "The slope value, as numeric type" }, "errors" : [ "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">excel-err:Value if any parameter cannot be casted to numeric</xqdoc:error>", "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">fn:QName(\"http://zorba.io/modules/excel/errors\", \"excel-err:NA\") if there are different numbers of x's and y's</xqdoc:error>", "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">fn:QName(\"http://zorba.io/modules/excel/errors\", \"excel-err:NA\") if any sequence is empty</xqdoc:error>", "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">excel-err:Div0 if all x's are equal</xqdoc:error>" ] }, { "isDocumented" : true, "arity" : 2, "name" : "small", "qname" : "excel:small", "signature" : "($numbers as xs:anyAtomicType*, $k as xs:integer) as xs:anyAtomicType", "description" : " This function computes the k-th smallest value in a data set.\n Use this function to return values with a particular relative standing in a data set.\n If n is the number of data points in array, SMALL(array,1) equals the smallest value,\n   and SMALL(array,n) equals the largest value.\n", "summary" : "<p> This function computes the k-th smallest value in a data set.</p>", "annotation_str" : "", "annotations" : [  ], "updating" : false, "parameters" : [ { "name" : "numbers", "type" : "xs:anyAtomicType", "occurrence" : "*", "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> A sequence of numbers or values castable to numeric. The sequence can be of any length, from 1 up.</div>" }, { "name" : "k", "type" : "xs:integer", "occurrence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> The position (from the smallest) in the sequence of data to return. Must have value between 1 and size of sequence.</div>" } ], "returns" : { "type" : "xs:anyAtomicType", "description" : "The k-th smallest value of $numbers." }, "errors" : [ "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">excel-err:Value if the parameters cannot be casted to numeric type.</xqdoc:error>", "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">excel-err:Num if the sequence is zero length.</xqdoc:error>", "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">excel-err:Num if $k is not a value between 1 and the size of sequence.</xqdoc:error>" ] }, { "isDocumented" : true, "arity" : 3, "name" : "standardize", "qname" : "excel:standardize", "signature" : "($x as xs:anyAtomicType, $mean as xs:anyAtomicType, $standard_dev as xs:anyAtomicType) as xs:double", "description" : " Returns a normalized value from a distribution characterized by mean and standard_dev.<p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"/>\n The formula is (x - mean) / standard_dev .\n", "summary" : "<p> Returns a normalized value from a distribution characterized by mean and standard_dev.</p>", "annotation_str" : "", "annotations" : [  ], "updating" : false, "parameters" : [ { "name" : "x", "type" : "xs:anyAtomicType", "occurrence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> is the value you want to normalize</div>" }, { "name" : "mean", "type" : "xs:anyAtomicType", "occurrence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> is the arithmetic mean of the distribution.</div>" }, { "name" : "standard_dev", "type" : "xs:anyAtomicType", "occurrence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> is the standard deviation of the distribution.</div>" } ], "returns" : { "type" : "xs:double", "description" : "The normalized x, as numeric type" }, "errors" : [ "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">excel-err:Value if any parameter cannot be casted to numeric</xqdoc:error>", "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">excel-err:Num if standard_dev is a value smaller than zero or equal</xqdoc:error>" ] }, { "isDocumented" : true, "arity" : 1, "name" : "var", "qname" : "excel:var", "signature" : "($numbers as xs:anyAtomicType+) as xs:anyAtomicType", "description" : " Estimates variance based on a sample.<p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"/>\n The formula is sum(x - average_x)^2 / (n - 1).<p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"/>\n average_x is computed with AVERAGE function.<p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"/>\n n is the count of numbers from the sequence, excluding empty values.\n", "summary" : "<p> Estimates variance based on a sample.</p>", "annotation_str" : "", "annotations" : [  ], "updating" : false, "parameters" : [ { "name" : "numbers", "type" : "xs:anyAtomicType", "occurrence" : "+", "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> the sequence of numbers or values castable to numeric. The sequence can be of any length, from 1 up.</div>" } ], "returns" : { "type" : "xs:anyAtomicType", "description" : "The variance, as numeric type" }, "errors" : [ "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">excel-err:Value if the parameters cannot be casted to numeric type</xqdoc:error>" ] }, { "isDocumented" : true, "arity" : 1, "name" : "vara", "qname" : "excel:vara", "signature" : "($numbers as xs:anyAtomicType+) as xs:anyAtomicType", "description" : " Estimates variance based on a sample.<p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"/>\n The formula is sum(x - average_x)^2 / (n - 1).<p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"/>\n average_x is computed with AVERAGE function.<p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"/>\n n is the size of sequence, including empty values.<p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"/>\n", "summary" : "<p> Estimates variance based on a sample.</p>", "annotation_str" : "", "annotations" : [  ], "updating" : false, "parameters" : [ { "name" : "numbers", "type" : "xs:anyAtomicType", "occurrence" : "+", "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> the sequence of numbers or values castable to numeric. The sequence can be of any length, from 1 up.</div>" } ], "returns" : { "type" : "xs:anyAtomicType", "description" : "The variance, as numeric type" }, "errors" : [ "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">excel-err:Value if the parameters cannot be casted to numeric type</xqdoc:error>" ] }, { "isDocumented" : true, "arity" : 1, "name" : "varp", "qname" : "excel:varp", "signature" : "($numbers as xs:anyAtomicType+) as xs:anyAtomicType", "description" : " Calculates variance based on the entire population.<p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"/>\n The formula is sum(x - average_x)^2 / n.<p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"/>\n average_x is computed with AVERAGE function.<p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"/>\n n is the count of numbers from the sequence, excluding empty values.<p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"/>\n", "summary" : "<p> Calculates variance based on the entire population.</p>", "annotation_str" : "", "annotations" : [  ], "updating" : false, "parameters" : [ { "name" : "numbers", "type" : "xs:anyAtomicType", "occurrence" : "+", "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> the sequence of numbers or values castable to numeric. The sequence can be of any length, from 1 up.</div>" } ], "returns" : { "type" : "xs:anyAtomicType", "description" : "The variance, as numeric type" }, "errors" : [ "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">excel-err:Value if the parameters cannot be casted to numeric type</xqdoc:error>" ] }, { "isDocumented" : true, "arity" : 1, "name" : "varpa", "qname" : "excel:varpa", "signature" : "($numbers as xs:anyAtomicType+) as xs:anyAtomicType", "description" : " Calculates variance based on the entire population.<p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"/>\n The formula is sum(x - average_x)^2 / n.<p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"/>\n average_x is computed with AVERAGE function.<p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"/>\n n is the size of sequence, including empty values.<p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"/>\n", "summary" : "<p> Calculates variance based on the entire population.</p>", "annotation_str" : "", "annotations" : [  ], "updating" : false, "parameters" : [ { "name" : "numbers", "type" : "xs:anyAtomicType", "occurrence" : "+", "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> the sequence of numbers or values castable to numeric. The sequence can be of any length, from 1 up.</div>" } ], "returns" : { "type" : "xs:anyAtomicType", "description" : "The variance, as numeric type" }, "errors" : [ "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">excel-err:Value if the parameters cannot be casted to numeric type</xqdoc:error>" ] } ], "variables" : [  ] }, "http://www.zorba-xquery.com/modules/languages/xslt" : { "ns" : "http://www.zorba-xquery.com/modules/languages/xslt", "description" : " This module provides XSLT 1.0 transformation functionality.\n <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">For details on XSLT see\n <a href=\"http://www.w3.org/TR/xslt\">XSLT 1.0 specification</a>.</p>\n <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">This module implements the invoking of an XSLT transformation from XQuery\n described in <a href=\"http://lists.w3.org/Archives/Member/w3c-xsl-wg/2008Apr/0052.html\">\n    Michael Kay's proposal</a>.</p>\n <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">Example:\n <pre class=\"ace-static\" ace-mode=\"xquery\">import module namespace\n        xslt = \"http://www.zorba-xquery.com/modules/languages/xslt\";\n let $source :=\n     &lt;catalog&gt;\n         &lt;cd&gt;\n           &lt;title&gt;Empire Burlesque&lt;/title&gt;\n           &lt;artist&gt;Bob Dylan&lt;/artist&gt;\n           &lt;country&gt;USA&lt;/country&gt;\n           &lt;company&gt;Columbia&lt;/company&gt;\n           &lt;price&gt;10.90&lt;/price&gt;\n           &lt;year&gt;1985&lt;/year&gt;\n         &lt;/cd&gt;\n         &lt;cd&gt;\n           &lt;title&gt;Hide your heart&lt;/title&gt;\n           &lt;artist&gt;Bonnie Tyler&lt;/artist&gt;\n           &lt;country&gt;UK&lt;/country&gt;\n           &lt;company&gt;CBS Records&lt;/company&gt;\n           &lt;price&gt;9.90&lt;/price&gt;\n           &lt;year&gt;1988&lt;/year&gt;\n         &lt;/cd&gt;\n     &lt;/catalog&gt;\n let $stylesheet :=\n   &lt;xsl:stylesheet version=\"1.0\"\n       xmlns:xsl=\"http://www.w3.org/1999/XSL/Transform\"&gt;\n     &lt;xsl:template match=\"/\"&gt;\n       &lt;html&gt;\n       &lt;body&gt;\n       &lt;h2&gt;Music Collection&amp;lt;/h2&gt;\n         &lt;table border=\"1\"&gt;\n           &lt;tr bgcolor=\"lightblue\"&gt;\n             &lt;th&gt;Title&amp;lt;/th&gt;\n             &lt;th&gt;Artist&amp;lt;/th&gt;\n           &lt;/tr&gt;\n           &lt;xsl:for-each select=\"catalog/cd\"&gt;\n            &lt;tr&gt;\n              &lt;td&gt;&amp;lt;xsl:value-of select=\"title\"/&gt;&lt;/td&gt;\n              &lt;td&gt;&amp;lt;xsl:value-of select=\"artist\"/&gt;&lt;/td&gt;\n           &lt;/tr&gt;\n           &lt;/xsl:for-each&gt;\n         &lt;/table&gt;\n       &lt;/body&gt;\n       &lt;/html&gt;\n     &lt;/xsl:template&gt;\n   &lt;/xsl:stylesheet&gt;\n return\n   xslt:transform( $source, $stylesheet)</pre></p>\n", "sees" : [  ], "authors" : [ "<xqdoc:author xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">Cezar Andrei</xqdoc:author>" ], "version" : null, "encoding" : "utf-8", "namespaces" : [ { "uri" : "http://zorba.io/options/versioning", "prefix" : "ver" }, { "uri" : "http://www.zorba-xquery.com/modules/languages/xslt", "prefix" : "xslt" } ], "functions" : [ { "isDocumented" : true, "arity" : 2, "name" : "transform", "qname" : "xslt:transform", "signature" : "($source as node(), $stylesheet as node()) as node() external", "description" : "<p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">Invokes an XSLT transformation.</p>\n", "summary" : "<p>Invokes an XSLT transformation.</p>", "annotation_str" : "", "annotations" : [  ], "updating" : false, "parameters" : [ { "name" : "source", "type" : "node()", "occurrence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> the input document to the transformation</div>" }, { "name" : "stylesheet", "type" : "node()", "occurrence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> the XSLT stylesheet module</div>" } ], "returns" : { "type" : "node()", "description" : "the result tree produced by the transformation" }, "errors" : [ "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">xslt:XSLT001 if $stylesheet is not a valid XSLT stylesheet</xqdoc:error>", "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">xslt:XSLT002 if result can not be imported</xqdoc:error>" ] } ], "variables" : [  ] }, "http://zorba.io/modules/data-cleaning/phonetic-string-similarity" : { "ns" : "http://zorba.io/modules/data-cleaning/phonetic-string-similarity", "description" : " <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">This library module provides phonetic string similarity functions, comparing strings with basis on how they sound.</p>\n <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"/>\n <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">These metrics are particularly effective in matching names, since names are often spelled in different\n ways that sound the same.</p>\n <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"/>\n <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">The logic contained in this module is not specific to any particular XQuery implementation.</p>\n", "sees" : [  ], "authors" : [ "<xqdoc:author xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">Bruno Martins</xqdoc:author>" ], "version" : null, "encoding" : "utf-8", "namespaces" : [ { "uri" : "http://zorba.io/modules/data-cleaning/phonetic-string-similarity", "prefix" : "simp" }, { "uri" : "http://zorba.io/options/versioning", "prefix" : "ver" } ], "functions" : [ { "isDocumented" : true, "arity" : 1, "name" : "metaphone-key", "qname" : "simp:metaphone-key", "signature" : "($s1 as xs:string) as xs:string", "description" : " <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">Returns the Metaphone key for a given string.</p>\n <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">The Metaphone algorithm produces variable length keys as its output, as opposed to Soundex's fixed-length keys.</p>\n <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"/>\n <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">Example usage : <pre class=\"ace-static\" ace-mode=\"xquery\">metaphone-key(\"ALEKSANDER\")</pre></p>\n <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"/>\n <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">The function invocation in the example above returns : <pre class=\"ace-static\" ace-mode=\"xquery\">\"ALKSNTR\"</pre></p>\n", "summary" : "<p>  Returns the Metaphone key for a given string.</p>", "annotation_str" : "", "annotations" : [  ], "updating" : false, "parameters" : [ { "name" : "s1", "type" : "xs:string", "occurrence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> The string.</div>" } ], "returns" : { "type" : "xs:string", "description" : "The Metaphone key for the given input string." }, "errors" : [  ] }, { "isDocumented" : true, "arity" : 2, "name" : "metaphone", "qname" : "simp:metaphone", "signature" : "($s1 as xs:string, $s2 as xs:string) as xs:boolean", "description" : " <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">Checks if two strings have the same Metaphone key.</p>\n <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"/>\n <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">Example usage : <pre class=\"ace-static\" ace-mode=\"xquery\">metaphone(\"ALEKSANDER\", \"ALEXANDRE\")</pre></p>\n <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"/>\n <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">The function invocation in the example above returns : <pre class=\"ace-static\" ace-mode=\"xquery\">true</pre></p>\n", "summary" : "<p>  Checks if two strings have the same Metaphone key.</p>", "annotation_str" : "", "annotations" : [  ], "updating" : false, "parameters" : [ { "name" : "s1", "type" : "xs:string", "occurrence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> The first string.</div>" }, { "name" : "s2", "type" : "xs:string", "occurrence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> The second string.</div>" } ], "returns" : { "type" : "xs:boolean", "description" : "Returns true if both strings have the same Metaphone key and false otherwise." }, "errors" : [  ] }, { "isDocumented" : true, "arity" : 1, "name" : "soundex-key", "qname" : "simp:soundex-key", "signature" : "($s1 as xs:string) as xs:string", "description" : " <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">Returns the Soundex key for a given string.</p>\n <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"/>\n <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">Example usage : <pre class=\"ace-static\" ace-mode=\"xquery\">soundex-key(\"Robert\")</pre></p>\n <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"/>\n <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">The function invocation in the example above returns : <pre class=\"ace-static\" ace-mode=\"xquery\">\"R163\"</pre></p>\n", "summary" : "<p>  Returns the Soundex key for a given string.</p>", "annotation_str" : "", "annotations" : [  ], "updating" : false, "parameters" : [ { "name" : "s1", "type" : "xs:string", "occurrence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> The string.</div>" } ], "returns" : { "type" : "xs:string", "description" : "The Soundex key for the given input string." }, "errors" : [  ] }, { "isDocumented" : true, "arity" : 2, "name" : "soundex", "qname" : "simp:soundex", "signature" : "($s1 as xs:string, $s2 as xs:string) as xs:boolean", "description" : " <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">Checks if two strings have the same Soundex key.</p>\n <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"/>\n <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">Example usage : <pre class=\"ace-static\" ace-mode=\"xquery\">soundex( \"Robert\" , \"Rupert\" )</pre></p>\n <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"/>\n <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">The function invocation in the example above returns : <pre class=\"ace-static\" ace-mode=\"xquery\">true</pre></p>\n", "summary" : "<p>  Checks if two strings have the same Soundex key.</p>", "annotation_str" : "", "annotations" : [  ], "updating" : false, "parameters" : [ { "name" : "s1", "type" : "xs:string", "occurrence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> The first string.</div>" }, { "name" : "s2", "type" : "xs:string", "occurrence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> The second string.</div>" } ], "returns" : { "type" : "xs:boolean", "description" : "Returns true if both strings have the same Soundex key and false otherwise." }, "errors" : [  ] } ], "variables" : [  ] }, "http://www.28msec.com/modules/collections" : { "ns" : "http://www.28msec.com/modules/collections", "description" : " This module provides functions to work with collections. For example,\n it contains functions to retrieve the content of a collection or the\n names of all collections.\n <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">The module is always imported so you don't need to import it explicitly.\n Also, you don't need to fully qualify a function to invoke it.</p>\n", "sees" : [  ], "authors" : [  ], "version" : null, "encoding" : "utf-8", "namespaces" : [ { "uri" : "http://zorba.io/annotations", "prefix" : "an" }, { "uri" : "http://zorba.io/options/versioning", "prefix" : "ver" }, { "uri" : "http://zorba.io/errors", "prefix" : "zerr" } ], "functions" : [ { "isDocumented" : true, "arity" : 2, "name" : "apply-insert", "qname" : "db:apply-insert", "signature" : "($name as string, $content as item()*) as item()* external", "description" : " This function does the same as the insert function and it immediately applies\n the resulting pending updates and returns the items that have been inserted.\n Note that each item in the content sequence is copied before insertion. This\n function provides an efficient way to retrieve the actual copies that have\n been inserted.\n", "summary" : "<p> This function does the same as the insert function and it immediately applies\n the resulting pending updates and returns the items that have been inserted.</p>", "annotation_str" : " %an:sequential", "annotations" : [ { "prefix" : "an", "ns" : "http://zorba.io/annotations", "name" : "sequential", "value" : "" } ], "updating" : false, "parameters" : [ { "name" : "name", "type" : "string", "occurrence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> The name of the collection to which the items should be added.</div>" }, { "name" : "content", "type" : "item()", "occurrence" : "*", "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> The sequences of items whose copies should be added to the collection.</div>" } ], "returns" : { "type" : "item()*", "description" : "The result of the function is the sequence of items that have been inserted into the collection." }, "errors" : [ "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">zerr:ZDDY0003 if the collection identified by <tt>$name</tt> does not exist.</xqdoc:error>", "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">zerr:ZDTY0001 if any of the items in the $content do not match the expected type (as specified in the collection declaration) or are not XML documents, XML elements, JSON objects, or JSON arrays.</xqdoc:error>" ] }, { "isDocumented" : true, "arity" : 0, "name" : "available-collections", "qname" : "db:available-collections", "signature" : "() as string* external", "description" : " Return the names of all existing collections.\n", "summary" : "<p> Return the names of all existing collections.</p>", "annotation_str" : "", "annotations" : [  ], "updating" : false, "parameters" : [  ], "returns" : { "type" : "string*", "description" : "The names of all existing collections." }, "errors" : [  ] }, { "isDocumented" : true, "arity" : 1, "name" : "collection-name", "qname" : "db:collection-name", "signature" : "($o as item()) as string external", "description" : " The collection-name function returns the name of the containing collection\n of the given item.\n", "summary" : "<p> The collection-name function returns the name of the containing collection\n of the given item.</p>", "annotation_str" : "", "annotations" : [  ], "updating" : false, "parameters" : [ { "name" : "o", "type" : "item()", "occurrence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> The item for which to get the name of the collection.</div>" } ], "returns" : { "type" : "string", "description" : "The name of the containing collection." }, "errors" : [ "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">zerr:ZDDY0011 if the given item does not belong to a collection.</xqdoc:error>" ] }, { "isDocumented" : true, "arity" : 1, "name" : "collection", "qname" : "db:collection", "signature" : "($name as string) as item()* external", "description" : " The collection function returns the sequence of items that belong\n to the collection identified by the given name.\n Please note that the order of the items returned is not deterministic,\n i.e. it might change between invocations. You can use\n <tt xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">db:collection($name, 0)</tt> to get a deterministic order.\n", "summary" : "<p> The collection function returns the sequence of items that belong\n to the collection identified by the given name.</p>", "annotation_str" : "", "annotations" : [  ], "updating" : false, "parameters" : [ { "name" : "name", "type" : "string", "occurrence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> The name of the collection.</div>" } ], "returns" : { "type" : "item()*", "description" : "The content of the collection." }, "errors" : [ "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">zerr:ZDDY0003 if the collection identified by $name does not exist.</xqdoc:error>" ] }, { "isDocumented" : true, "arity" : 2, "name" : "collection", "qname" : "db:collection", "signature" : "($name as string, $skip as integer) as item()* external", "description" : " The collection function returns the sequence of items that belong to\n the collection identified\n by the given name. The skip parameter allows to (efficiently) skip\n a given number of items.\n Note that the collections are generally unordered. However, there\n is an implicit deterministic ordering (i.e. sorting by the _id field\n in MongoDB) that is used by this function. This ordering is not present\n for the <tt xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">db:collection#1</tt> function. In order to return items with\n a stable ordering, db:collection($name, 0) can be used.\n", "summary" : "<p> The collection function returns the sequence of items that belong to\n the collection identified\n by the given name.</p>", "annotation_str" : "", "annotations" : [  ], "updating" : false, "parameters" : [ { "name" : "name", "type" : "string", "occurrence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> The name of the collection.</div>" }, { "name" : "skip", "type" : "integer", "occurrence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> The number of items to skip starting from the beginning.</div>" } ], "returns" : { "type" : "item()*", "description" : "The content of the collection starting at the <tt xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">$skip</tt>+1 item." }, "errors" : [ "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">zerr:ZDDY0003 if the collection identified by $name does not exist</xqdoc:error>" ] }, { "isDocumented" : true, "arity" : 3, "name" : "collection", "qname" : "db:collection", "signature" : "($name as string, $start as string, $skip as integer) as item()* external", "description" : " The collection function returns the sequence of items that belong to\n the collection identified\n by the given name. The start parameter is a reference and determines\n the first item to return. The skip parameter allows to (efficiently) skip\n a given number of items starting at the item referenced by <tt xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">$start</tt>.\n The start parameter is useful for efficiently implementing pagination.\n Note that the collections are generally unordered. However, there\n is an implicit deterministic ordering (i.e. sorting by the _id field\n in MongoDB) that is used by this function. This ordering is not present\n for the <tt xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">db:collection#1</tt> function. In order to return items with\n a stable ordering, db:collection($name, $start, 0) can be used.\n Example:\n <pre xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">\n import module namespace ref = \"http://zorba.io/modules/reference\";\n let $ref := ref:reference(db:collection(\"test\", 1)[1])\n return\n   db:collection(\"test\", $ref, 1)\n </pre>\n", "summary" : "<p> The collection function returns the sequence of items that belong to\n the collection identified\n by the given name.</p>", "annotation_str" : "", "annotations" : [  ], "updating" : false, "parameters" : [ { "name" : "name", "type" : "string", "occurrence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> The name of the collection.</div>" }, { "name" : "start", "type" : "string", "occurrence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> The reference to the first item to return.</div>" }, { "name" : "skip", "type" : "integer", "occurrence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> The number of collection items to skip.</div>" } ], "returns" : { "type" : "item()*", "description" : "The content of the collection starting at the item referenced by <tt xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">$start</tt> and skipping <tt xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">$skip</tt> items." }, "errors" : [ "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">zerr:ZDDY0003 if the collection identified by <tt>$name</tt> does not exist.</xqdoc:error>", "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">zerr:ZAPI0028 If the given reference $start is not a valid reference.</xqdoc:error>", "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">zerr:ZSTR0066 if the given reference $start does not reference an item of this collection.</xqdoc:error>" ] }, { "isDocumented" : true, "arity" : 1, "name" : "create", "qname" : "db:create", "signature" : "($name as string) external", "description" : " The create function is an updating function that creates\n a new collection with the given name.\n It is not possible to create collections that start with\n \"system.\" or \"_28\" (zerr:ZDDY1000).\n Collections are identified by a name (string). Names are not allowed to\n contain the <tt xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">$</tt> sign or exceed the length of 70 characters.\n This is consistent with the restrictions for names of collections in MongoDB.\n", "summary" : "<p> The create function is an updating function that creates\n a new collection with the given name.</p>", "annotation_str" : "", "annotations" : [  ], "updating" : true, "parameters" : [ { "name" : "name", "type" : "string", "occurrence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> The name of the collection to create.</div>" } ], "returns" : { "type" : null, "description" : "The result of the function is an empty XDM instance and a pending update list which, once applied, creates a collection with the given name." }, "errors" : [ "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">zerr:ZDDY0002 if a collection with the given name already exists.</xqdoc:error>", "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">zerr:ZDDY1000 if the given name is not a legal collection name</xqdoc:error>" ] }, { "isDocumented" : true, "arity" : 2, "name" : "create", "qname" : "db:create", "signature" : "($name as string, $content as item()*) external", "description" : " The create function is an updating function which creates\n a new collection with the given name. Moreover, it adds copies\n of the sequence <tt xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">$content</tt> to the new collection.\n It is not possible to create collections that start with\n \"system.\" or \"_28\" (zerr:ZDDY1000).\n Collections are identified by a name (string). Names are not allowed to\n contain the <tt xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">$</tt> sign or exceed the length of 70 characters.\n This is consistent with the restrictions for names of collections in MongoDB.\n", "summary" : "<p> The create function is an updating function which creates\n a new collection with the given name.</p>", "annotation_str" : "", "annotations" : [  ], "updating" : true, "parameters" : [ { "name" : "name", "type" : "string", "occurrence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> The string of the collection to create.</div>" }, { "name" : "content", "type" : "item()", "occurrence" : "*", "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> The sequences of items that should be added to the new collection.</div>" } ], "returns" : { "type" : null, "description" : "The result of the function is an empty XDM instance and a pending update list which, once applied, creates a collection with the given name and inserts the given items into it." }, "errors" : [ "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">zerr:ZDDY0002 if a collection with the given name already exists.</xqdoc:error>", "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">zerr:ZDTY0001 if any of the items in the $content do not match the expected type (as specified in the collection declaration) or are not XML documents, XML elements, JSON objects, or JSON arrays.</xqdoc:error>", "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">zerr:ZDDY1000 if the given name is not a legal collection name</xqdoc:error>" ] }, { "isDocumented" : true, "arity" : 1, "name" : "delete", "qname" : "db:delete", "signature" : "($target as item()*) external", "description" : " The delete function is an updating function that deletes zero or more items\n (JSON objects, JSON arrays, or XML nodes) from a collection.\n Please note that the all of the items belong to the same collection\n (zerr:ZDDY0011).\n", "summary" : "<p> The delete function is an updating function that deletes zero or more items\n (JSON objects, JSON arrays, or XML nodes) from a collection.</p>", "annotation_str" : "", "annotations" : [  ], "updating" : true, "parameters" : [ { "name" : "target", "type" : "item()", "occurrence" : "*", "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> the items that should be deleted from the containing collection.</div>" } ], "returns" : { "type" : null, "description" : "The result of this function is an empty XDM instance and a pending update list which, once applied, deletes the items from the collections." }, "errors" : [ "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">zerr:ZDDY0003 if the collection identified by <tt>$name</tt> does not exist.</xqdoc:error>", "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">zerr:ZDDY0011 if any item in the <tt>$target</tt> sequence is not a member of a collection or not all items belong to the same collection.</xqdoc:error>" ] }, { "isDocumented" : false, "arity" : 1, "name" : "drop", "qname" : "db:drop", "signature" : "($name as string) external", "description" : "", "summary" : "", "annotation_str" : "", "annotations" : [  ], "updating" : true, "parameters" : [ { "name" : "name", "type" : "string", "occurrence" : null, "description" : "" } ], "returns" : { "type" : null, "description" : "" }, "errors" : [  ] }, { "isDocumented" : true, "arity" : 2, "name" : "edit", "qname" : "db:edit", "signature" : "($target as item(), $content as item()) external", "description" : " The edit function is an updating function that edits the first supplied\n item so as to make it look exactly like a copy of the second supplied item,\n while retaining its original identity.\n", "summary" : "<p> The edit function is an updating function that edits the first supplied\n item so as to make it look exactly like a copy of the second supplied item,\n while retaining its original identity.</p>", "annotation_str" : "", "annotations" : [  ], "updating" : true, "parameters" : [ { "name" : "target", "type" : "item()", "occurrence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> The target item, that must be edited.</div>" }, { "name" : "content", "type" : "item()", "occurrence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> The content item, that serves as an edit goal.</div>" } ], "returns" : { "type" : null, "description" : "The result of the function is an empty XDM instance and a pending update list which, once applied, performs the edit." }, "errors" : [ "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">zerr:ZDDY0017 if the $target item is not a member of a collection.</xqdoc:error>", "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">zerr:ZDDY0040 if the target cannot be updated to match the content (for example because the target is a node and the content is an object).</xqdoc:error>", "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">zerr:ZDTY0001 if $content does not match the expected type (as specified in the collection declaration) according to the rules for SequenceType Matching.</xqdoc:error>" ] }, { "isDocumented" : false, "arity" : 1, "name" : "index-keys", "qname" : "db:index-keys", "signature" : "($index-name as string) as array()* external", "description" : "", "summary" : "", "annotation_str" : "", "annotations" : [  ], "updating" : false, "parameters" : [ { "name" : "index-name", "type" : "string", "occurrence" : null, "description" : "" } ], "returns" : { "type" : "array()*", "description" : "" }, "errors" : [  ] }, { "isDocumented" : true, "arity" : 2, "name" : "insert", "qname" : "db:insert", "signature" : "($name as string, $content as item()*) external", "description" : " The insert function is an updating function that inserts copies of the given\n items into a collection.\n", "summary" : "<p> The insert function is an updating function that inserts copies of the given\n items into a collection.</p>", "annotation_str" : "", "annotations" : [  ], "updating" : true, "parameters" : [ { "name" : "name", "type" : "string", "occurrence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> The name of the collection to which the items should be added.</div>" }, { "name" : "content", "type" : "item()", "occurrence" : "*", "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> The sequences of items whose copies should be added.</div>" } ], "returns" : { "type" : null, "description" : "The result of the function is an empty XDM instance and a pending update list which, once applied, inserts the items into the collection." }, "errors" : [ "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">zerr:ZDDY0003 if the collection identified by <tt>$name</tt> does not exist.</xqdoc:error>", "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">zerr:ZDTY0001 if any of the items in the $content do not match the expected type (as specified in the collection declaration) or are not XML documents, XML elements, JSON objects, or JSON arrays.</xqdoc:error>" ] }, { "isDocumented" : true, "arity" : 1, "name" : "is-available-collection", "qname" : "db:is-available-collection", "signature" : "($name as string) as boolean external", "description" : " Determine if the collection with the given name exists.\n", "summary" : "<p> Determine if the collection with the given name exists.</p>", "annotation_str" : "", "annotations" : [  ], "updating" : false, "parameters" : [ { "name" : "name", "type" : "string", "occurrence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> The string of the collection in question.</div>" } ], "returns" : { "type" : "boolean", "description" : "true if collection with the given name exists, false otherwise." }, "errors" : [  ] }, { "isDocumented" : false, "arity" : 2, "name" : "lookup", "qname" : "db:lookup", "signature" : "($index-name as string, $key as item()) as item()* external", "description" : "", "summary" : "", "annotation_str" : "", "annotations" : [  ], "updating" : false, "parameters" : [ { "name" : "index-name", "type" : "string", "occurrence" : null, "description" : "" }, { "name" : "key", "type" : "item()", "occurrence" : null, "description" : "" } ], "returns" : { "type" : "item()*", "description" : "" }, "errors" : [  ] }, { "isDocumented" : false, "arity" : 3, "name" : "lookup", "qname" : "db:lookup", "signature" : "($index-name as string, $keys as item(), $skip as integer) as item()* external", "description" : "", "summary" : "", "annotation_str" : "", "annotations" : [  ], "updating" : false, "parameters" : [ { "name" : "index-name", "type" : "string", "occurrence" : null, "description" : "" }, { "name" : "keys", "type" : "item()", "occurrence" : null, "description" : "" }, { "name" : "skip", "type" : "integer", "occurrence" : null, "description" : "" } ], "returns" : { "type" : "item()*", "description" : "" }, "errors" : [  ] }, { "isDocumented" : false, "arity" : 1, "name" : "refresh", "qname" : "db:refresh", "signature" : "($index-name as string) external", "description" : "", "summary" : "", "annotation_str" : "", "annotations" : [  ], "updating" : true, "parameters" : [ { "name" : "index-name", "type" : "string", "occurrence" : null, "description" : "" } ], "returns" : { "type" : null, "description" : "" }, "errors" : [  ] }, { "isDocumented" : true, "arity" : 1, "name" : "truncate", "qname" : "db:truncate", "signature" : "($name as string) external", "description" : " The truncate function is an updating function that deletes the\n entire content of a given collection.\n Please note that applying this function can not be undone in case\n an error happens during the application of the containing PUL.\n", "summary" : "<p> The truncate function is an updating function that deletes the\n entire content of a given collection.</p>", "annotation_str" : "", "annotations" : [  ], "updating" : true, "parameters" : [ { "name" : "name", "type" : "string", "occurrence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> The name of the collection whose content to delete.</div>" } ], "returns" : { "type" : null, "description" : "The result of this function is an empty XDM instance and a pending update list which, once applied, deletes the nodes." }, "errors" : [ "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">zerr:ZDDY0003 if the collection identified by <tt>$name</tt> does not exist.</xqdoc:error>" ] } ], "variables" : [  ] }, "http://expath.org/ns/http-client" : { "ns" : "http://expath.org/ns/http-client", "description" : " <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">\n This module provides an implementation of the\n <a href=\"http://expath.org/modules/http-client/\">EXPath Http Client</a>.\n It provides functions for making HTTP requests and is a superset of the\n module specified by EXPath.\n Specifically, it implements the <code>http:send-request()</code> functions\n as specified by EXPath. Moreover, it adds an additional function\n <code>http:read()</code> (with several arities for the sake of ease).\n </p>\n <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">\n In general, both functions take a description of the HTTP request to make\n as parameter, execute the request, and return a representation of the HTTP\n response. For instance, in the following code snippet, we fetch the Zorba\n home page:\n </p>\n <pre xmlns:xqdoc=\"http://www.xqdoc.org/1.0\" class=\"ace-static\" ace-mode=\"xquery\">import module namespace http = \"http://expath.org/ns/http-client\";\n http:send-request(\n  &lt;http:request href=\"http://zorba.io\" method=\"get\" /&gt;\n )\n </pre>\n <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">\n The <code>http:send-request()</code> functions are declared as sequential.\n Sequential functions are allowed to have side effects. For example, most probably,\n an HTTP POST request is a request that has side effects because it adds/changes\n a remote resource. Sequential functions are specified in the\n <a href=\"http://zorba.io/documentation/2.9/zorba/scripting_tutorial.html\">XQuery Scripting Extension</a>.\n In contrast, the http:read() functions are not declared as sequential -\n they are declared as being non deterministic though, which\n means that several calls may return different results.\n HTTP requests performed using these functions are <b>not</b> allowed to have\n side effects.\n </p>\n <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">\n The response is returned as a sequence of one or more items. The first\n one is an <code>http:response</code> element with quite the same\n structure as an http:request, but without the content itself.\n The content is returned as the second item (or several items in case of\n a multipart response) as a string, a document node, or a binary item.\n This depends on the content-type returned.\n Specifically, the rules are as follows:\n <ul>\n  <li>A document node is returned if the media type has a MIME type of\n     text/xml, application/xml, text/xml-external-parsed-entity, or\n     application/xml-external-parsed-entity, as defined in [RFC 3023]\n     (except that application/xml-dtd is considered a text media type).\n     MIME types ending by +xml are also XML media types.</li>\n  <li>A document node is returned if the media type has a MIME type of\n      text/html. In order to be able to make HTML parseable, tidy is automatically\n      invoked. If you want to prevent that, you can also set your own content-type\n      by setting the override-media-type attribute in the request element.\n       For tidying, the following <a href=\"http://tidy.sourceforge.net/docs/quickref.html\">options</a>\n       will be used:\n       <ul>\n         <li>TidyXmlOut=yes</li>\n         <li>TidyDoctypeMode=TidyDoctypeOmit</li>\n         <li>TidyQuoteNbsp=yes</li>\n         <li>TidyCharEncoding=\"utf8\"</li>\n         <li>TidyNewline=\"LF\"</li>\n       </ul>\n  </li>\n  <li>An xs:string item is returned if the media type has a text MIME type,\n     i.e. beginning with text/.</li>\n  <li>An xs:base64Binary item is returned for all the other media types.</li>\n </ul>\n </p>\n <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">\n The structure of a request element is defined in the schema that is imported\n by this module. The details are described in the\n <a href=\"http://expath.org/spec/http-client#d2e183\">specification</a>.\n Analogously, the response element is also described in this\n <a href=\"http://expath.org/spec/http-client#d2e491\">specification</a>.\n </p>\n", "sees" : [ "<xqdoc:see xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"><a href=\"http://www.w3.org/TR/xquery-3/#FunctionDeclns\">XQuery 3.0: Function Declaration</a></xqdoc:see>" ], "authors" : [ "<xqdoc:author xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">Federico Cavalieri, Markus Pilman</xqdoc:author>" ], "version" : null, "encoding" : "utf-8", "namespaces" : [ { "uri" : "http://zorba.io/annotations", "prefix" : "an" }, { "uri" : "http://expath.org/ns/error", "prefix" : "err" }, { "uri" : "http://expath.org/ns/http-client", "prefix" : "http" }, { "uri" : "http://zorba.io/modules/http-client-wrapper", "prefix" : "http-wrapper" }, { "uri" : "http://expath.org/ns/http-client", "prefix" : "https" }, { "uri" : "http://www.zorba-xquery.com/modules/converters/html", "prefix" : "tidy" }, { "uri" : "http://www.zorba-xquery.com/modules/converters/html-options", "prefix" : "tidy-options" }, { "uri" : "http://zorba.io/options/versioning", "prefix" : "ver" } ], "functions" : [ { "isDocumented" : true, "arity" : 1, "name" : "send-request", "qname" : "http:send-request", "signature" : "($request as element(*)) as item()+", "description" : " Function for convenience.\n Calling this function is equivalent to calling\n <code xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">\n http:send-request($request, (), ())\n </code>\n", "summary" : "<p> Function for convenience.</p>", "annotation_str" : " %an:sequential", "annotations" : [ { "prefix" : "an", "ns" : "http://zorba.io/annotations", "name" : "sequential", "value" : "" } ], "updating" : false, "parameters" : [ { "name" : "request", "type" : "element(*)", "occurrence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> see request parameter of the sequential <a href=\"#send-request-3\">send-request</a> function with three parameters.</div>" } ], "returns" : { "type" : "item()+", "description" : "see return value of the sequential <a xmlns:xqdoc=\"http://www.xqdoc.org/1.0\" href=\"#send-request-3\">send-request</a> function with three parameters." }, "errors" : [  ] }, { "isDocumented" : true, "arity" : 2, "name" : "send-request", "qname" : "http:send-request", "signature" : "($request as element(*)?, $href as xs:string?) as item()+", "description" : " Function for convenience.\n Calling this function is equivalent to calling\n <code xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">\n http:send-request($request, $href, ())\n </code>\n", "summary" : "<p> Function for convenience.</p>", "annotation_str" : " %an:sequential", "annotations" : [ { "prefix" : "an", "ns" : "http://zorba.io/annotations", "name" : "sequential", "value" : "" } ], "updating" : false, "parameters" : [ { "name" : "request", "type" : "element(*)", "occurrence" : "?", "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> see request parameter of the sequential <a href=\"#send-request-3\">send-request</a> function with three parameters.</div>" }, { "name" : "href", "type" : "xs:string", "occurrence" : "?", "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> see href parameter of the sequential <a href=\"#send-request-3\">send-request</a> function with three parameters.</div>" } ], "returns" : { "type" : "item()+", "description" : "see return of <a xmlns:xqdoc=\"http://www.xqdoc.org/1.0\" href=\"#send-request-3\">send-request</a>" }, "errors" : [  ] }, { "isDocumented" : true, "arity" : 3, "name" : "send-request", "qname" : "http:send-request", "signature" : "($request as element(*)?, $href as xs:string?, $bodies as item()*) as item()+", "description" : " This function sends an HTTP request and returns the corresponding response.\n <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">\n This function is declared as sequential (see XQuery Scripting).\n Sequential functions are allowed to have side effects. For example, most probably,\n an HTTP POST request is a request that has side effects because it adds/changes\n a remote resource.\n </p>\n", "summary" : "<p> This function sends an HTTP request and returns the corresponding response.</p>", "annotation_str" : " %an:sequential", "annotations" : [ { "prefix" : "an", "ns" : "http://zorba.io/annotations", "name" : "sequential", "value" : "" } ], "updating" : false, "parameters" : [ { "name" : "request", "type" : "element(*)", "occurrence" : "?", "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> Contains the various parameters of the request. See the <a href=\"http://expath.org/spec/http-client#d2e183\">specification</a>. for a full description of the structure of this element.</div>" }, { "name" : "href", "type" : "xs:string", "occurrence" : "?", "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> is the HTTP or HTTPS URI to send the request to. It must be a valid xs:anyURI, but is declared as a string to be able to pass literal strings (without requiring to explicitly cast it to an xs:anyURI.)</div>" }, { "name" : "bodies", "type" : "item()", "occurrence" : "*", "description" : "" } ], "returns" : { "type" : "item()+", "description" : "a sequence of items, where the first item is a element of type http:responseType. The response element is also described in the <a xmlns:xqdoc=\"http://www.xqdoc.org/1.0\" href=\"http://expath.org/spec/http-client#d2e483\">specification</a>. If there is one (or several, in case of multipart) response body, the response bodies are the next items in the sequence." }, "errors" : [  ] } ], "variables" : [  ] }, "http://zorba.io/modules/schema" : { "ns" : "http://zorba.io/modules/schema", "description" : " This module provides function that are related to XML Schema support\n in Zorba.\n", "sees" : [  ], "authors" : [ "<xqdoc:author xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">Cezar Andrei, Matthias Brantner</xqdoc:author>" ], "version" : null, "encoding" : "utf-8", "namespaces" : [ { "uri" : "http://zorba.io/modules/schema", "prefix" : "schema" }, { "uri" : "http://zorba.io/options/versioning", "prefix" : "ver" } ], "functions" : [ { "isDocumented" : true, "arity" : 1, "name" : "is-validated", "qname" : "schema:is-validated", "signature" : "($node as node()) as xs:boolean external", "description" : " This function returns true if the given node has been validated,\n and false otherwise.\n", "summary" : "<p> This function returns true if the given node has been validated,\n and false otherwise.</p>", "annotation_str" : "", "annotations" : [  ], "updating" : false, "parameters" : [ { "name" : "node", "type" : "node()", "occurrence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> the node item that should be checked for validation</div>" } ], "returns" : { "type" : "xs:boolean", "description" : "true if the given node has been validated, false otherwise." }, "errors" : [  ] }, { "isDocumented" : true, "arity" : 1, "name" : "schema-type", "qname" : "schema:schema-type", "signature" : "($item as item()) as xs:QName? external", "description" : " This function returns the name of the type of the item passed\n as parameter.\n", "summary" : "<p> This function returns the name of the type of the item passed\n as parameter.</p>", "annotation_str" : "", "annotations" : [  ], "updating" : false, "parameters" : [ { "name" : "item", "type" : "item()", "occurrence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> the item from which the name of the type should be returned.</div>" } ], "returns" : { "type" : "xs:QName?", "description" : "the name of the type (as QName) of the item passed as parameter." }, "errors" : [  ] }, { "isDocumented" : true, "arity" : 1, "name" : "validate-in-place", "qname" : "schema:validate-in-place", "signature" : "($node as node()) external", "description" : " Updating function that validates the document in place. After the updating\n query is applied the $node will contain the validated content.\n", "summary" : "<p> Updating function that validates the document in place.</p>", "annotation_str" : "", "annotations" : [  ], "updating" : true, "parameters" : [ { "name" : "node", "type" : "node()", "occurrence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> the document or element to be validated, otherwise error</div>" } ], "returns" : { "type" : null, "description" : "The result of the function is an empty XDM instance and a pending update list that consists the schema:validate-in-place($node)) primitive." }, "errors" : [  ] } ], "variables" : [  ] }, "http://www.28msec.com/modules/mongodb" : { "ns" : "http://www.28msec.com/modules/mongodb", "description" : " <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">This module provides a driver to access a\n <a href=\"http://www.mongodb.org/\">MongoDB</a> database - similar to\n drivers for other high-level languages like e.g.\n <a href=\"http://api.mongodb.org/python/current/\">PyMongo</a>.</p>\n <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">Here is a simple example of how we can raise the salary of each\n developer by 10%.\n Starting with an <em>employees</em> collection in MongoDB that contains\n <pre>\n { \"name\" : \"Peter\", \"role\" : \"developer\" , \"salary\" : 80 }\n { \"name\" : \"Paul\",  \"role\" : \"developer\" , \"salary\" : 75 }\n { \"name\" : \"Mary\",  \"role\" : \"manager\"   , \"salary\" : 90 } </pre>\n we can get a connection\n <pre>\n variable $conn := mongo:connect(\"hostname\", 27017, \"db\", \"user\", \"password\");\n </pre>\n run this update\n <pre>\n for $emp in mongo:find($conn, \"employees\")\n where $emp(\"role\") = \"developer\"\n let $salary := $emp(\"salary\")\n return {\n   replace value of json $emp(\"salary\") with $salary * 1.1;\n   mongo:save($conn, \"employees\", $emp)\n };\n </pre>\n and get the names and the current salaries using\n <pre>\n mongo:find($conn, \"employees\", {}, { \"_id\" : false, \"role\" : false }, {}) </pre>\n In this query we have removed the <em>_id</em> and <em>role</em> fields from\n the results and get\n <pre>\n { \"name\" : \"Peter\", \"salary\" : 88   }\n { \"name\" : \"Paul\",  \"salary\" : 82.5 }\n { \"name\" : \"Mary\",  \"salary\" : 90   }\n </pre>\n </p>\n <h2 xmlns:xqdoc=\"http://www.xqdoc.org/1.0\" id=\"determinism\">Important Notice Regarding Function Determinism</h2>\n <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">The non side-effecting functions:\n <ul>\n   <li><a href=\"?anchor=connect-0\">connect#0</a></li>\n   <li><a href=\"?anchor=connect-1\">connect#1</a></li>\n   <li><a href=\"?anchor=connect-2\">connect#2</a></li>\n   <li><a href=\"?anchor=connect-5\">connect#5</a></li>\n   <li><a href=\"?anchor=collection-names-1\">collection-names#1</a></li>\n   <li><a href=\"?anchor=count-2\">count#2</a></li>\n   <li><a href=\"?anchor=count-3\">count#3</a></li>\n   <li><a href=\"?anchor=find-2\">find#2</a></li>\n   <li><a href=\"?anchor=find-3\">find#3</a></li>\n   <li><a href=\"?anchor=find-4\">find#4</a></li>\n   <li><a href=\"?anchor=find-5\">find#5</a></li>\n </ul>\n are declared deterministic, which means that their results could be cached\n when invoked multiple times with the same arguments in the same query execution.</p>\n <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">To not use cached results you can use the following alternative functions:\n <ul>\n   <li><a href=\"?anchor=connect-nondeterministic-0\">connect-nondeterministic#0</a></li>\n   <li><a href=\"?anchor=connect-nondeterministic-1\">connect-nondeterministic#1</a></li>\n   <li><a href=\"?anchor=connect-nondeterministic-2\">connect-nondeterministic#2</a></li>\n   <li><a href=\"?anchor=connect-nondeterministic-5\">connect-nondeterministic#5</a></li>\n   <li><a href=\"?anchor=collection-names-nondeterministic-1\">collection-names-nondeterministic#1</a></li>\n   <li><a href=\"?anchor=count-nondeterministic-2\">count-nondeterministic#2</a></li>\n   <li><a href=\"?anchor=count-nondeterministic-3\">count-nondeterministic#3</a></li>\n   <li><a href=\"?anchor=find-nondeterministic-2\">find-nondeterministic#2</a></li>\n   <li><a href=\"?anchor=find-nondeterministic-3\">find-nondeterministic#3</a></li>\n   <li><a href=\"?anchor=find-nondeterministic-4\">find-nondeterministic#4</a></li>\n   <li><a href=\"?anchor=find-nondeterministic-5\">find-nondeterministic#5</a></li>\n </ul>\n which have been declared as being non deterministic.</p>\n <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">Three different functions have been defined to run mongo commands:\n <ul>\n   <li><a href=\"?anchor=run-cmd-2\">run-cmd#2</a></li>\n   <li><a href=\"?anchor=run-cmd-nondeterministic-2\">run-cmd-nondeterministic#2</a></li>\n   <li><a href=\"?anchor=run-cmd-deterministic-2\">run-cmd-deterministic#2</a></li>\n </ul>\n If your application depends on the ordering of side-effects from commands issued\n through these functions you should use <a href=\"?anchor=run-cmd-2\">run-cmd#2</a>,\n which has been declared as sequential.\n For non-side-effecting commands you can also use\n <a href=\"?anchor=run-cmd-nondeterministic-2\">run-cmd-nondeterministic#2</a> and\n <a href=\"?anchor=run-cmd-deterministic-2\">run-cmd-deterministic#2</a>.\n The results of commands executed by means of\n <a href=\"?anchor=run-cmd-deterministic-2\">run-cmd-deterministic#2</a> (which is\n declared <i>deterministic</i>) could be cached, whereas the results of\n commands executed by means of\n <a href=\"?anchor=run-cmd-nondeterministic-2\">run-cmd-nondeterministic#2</a> (which is\n declared <i>non-deterministic</i>) are never cached.</p>\n", "sees" : [  ], "authors" : [ "<xqdoc:author xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">28msec</xqdoc:author>" ], "version" : null, "encoding" : "utf-8", "namespaces" : [ { "uri" : "http://zorba.io/annotations", "prefix" : "an" }, { "uri" : "http://www.28msec.com/modules/credentials", "prefix" : "credentials" }, { "uri" : "http://www.28msec.com/modules/mongodb/types", "prefix" : "m-schema" }, { "uri" : "http://www.28msec.com/modules/mongodb", "prefix" : "mongo" }, { "uri" : "http://zorba.io/options/versioning", "prefix" : "ver" } ], "functions" : [ { "isDocumented" : true, "arity" : 1, "name" : "collection-names-nondeterministic", "qname" : "mongo:collection-names-nondeterministic", "signature" : "($db as xs:anyURI) as xs:string* external", "description" : " <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">Get a list of all the collection names in this database.</p>\n <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">This function has the same semantics as\n <a href=\"#collection-names-1\">collection-names#1</a>,\n but is declared as being non deterministic and thus should only be used when\n result caching is not desired.</p>\n", "summary" : "<p>  Get a list of all the collection names in this database.</p>", "annotation_str" : " %an:nondeterministic", "annotations" : [ { "prefix" : "an", "ns" : "http://zorba.io/annotations", "name" : "nondeterministic", "value" : "" } ], "updating" : false, "parameters" : [ { "name" : "db", "type" : "xs:anyURI", "occurrence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> a database connection identifier</div>" } ], "returns" : { "type" : "xs:string*", "description" : "a list of the names of all collection in the given database." }, "errors" : [ "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">mongo:MONGO004 invalid database identifier</xqdoc:error>", "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">mongo:MONGO005 if any mongodb error happens</xqdoc:error>" ] }, { "isDocumented" : true, "arity" : 1, "name" : "collection-names", "qname" : "mongo:collection-names", "signature" : "($db as xs:anyURI) as xs:string* external", "description" : " <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">Get a list of all the collection names in this database.</p>\n <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">This function is declared as deterministic and should be used whenever result\n caching is acceptable.</p>\n", "summary" : "<p>  Get a list of all the collection names in this database.</p>", "annotation_str" : "", "annotations" : [  ], "updating" : false, "parameters" : [ { "name" : "db", "type" : "xs:anyURI", "occurrence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> a database connection identifier</div>" } ], "returns" : { "type" : "xs:string*", "description" : "a list of the names of all collection in the given database." }, "errors" : [ "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">mongo:MONGO004 invalid database identifier</xqdoc:error>", "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">mongo:MONGO005 if any mongodb error happens</xqdoc:error>" ] }, { "isDocumented" : true, "arity" : 0, "name" : "connect-nondeterministic", "qname" : "mongo:connect-nondeterministic", "signature" : "() as xs:anyURI", "description" : " <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">Connect to this project's default MongoDB database.</p>\n <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">This function has the same semantics as <a href=\"#connect-0\">connect#0</a>,\n but is declared as being non deterministic and thus should only be used when\n result caching is not desired.</p>\n", "summary" : "<p>  Connect to this project's default MongoDB database.</p>", "annotation_str" : " %an:nondeterministic", "annotations" : [ { "prefix" : "an", "ns" : "http://zorba.io/annotations", "name" : "nondeterministic", "value" : "" } ], "updating" : false, "parameters" : [  ], "returns" : { "type" : "xs:anyURI", "description" : "an identifier for a connection to the MongoDB database." }, "errors" : [ "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">mongo:MONGO002 connection to MongoDB failed</xqdoc:error>", "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">mongo:MONGO003 authentication to the MongoDB database failed</xqdoc:error>" ] }, { "isDocumented" : true, "arity" : 1, "name" : "connect-nondeterministic", "qname" : "mongo:connect-nondeterministic", "signature" : "($connection-config as item()) as xs:anyURI", "description" : " <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">Connect to a MongoDB database.</p>\n <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">This function has the same semantics as <a href=\"#connect-1\">connect#1</a>,\n but is declared as being non deterministic and thus should only be used when\n result caching is not desired.</p>\n", "summary" : "<p>  Connect to a MongoDB database.</p>", "annotation_str" : " %an:nondeterministic", "annotations" : [ { "prefix" : "an", "ns" : "http://zorba.io/annotations", "name" : "nondeterministic", "value" : "" } ], "updating" : false, "parameters" : [ { "name" : "connection-config", "type" : "item()", "occurrence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> the connection specification.</div>" } ], "returns" : { "type" : "xs:anyURI", "description" : "an identifier for a connection to the MongoDB database." }, "errors" : [ "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">mongo:MONGO001 if the connection specification is invalid</xqdoc:error>", "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">mongo:MONGO002 connection to MongoDB failed</xqdoc:error>", "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">mongo:MONGO003 authentication to the MongoDB database failed</xqdoc:error>" ] }, { "isDocumented" : true, "arity" : 2, "name" : "connect-nondeterministic", "qname" : "mongo:connect-nondeterministic", "signature" : "($credentials-name as xs:string?, $options as object()) as xs:anyURI", "description" : " <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">Connect to a MongoDB database.</p>\n <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">This function has the same semantics as <a href=\"#connect-2\">connect#2</a>,\n but is declared as being non deterministic and thus should only be used when\n result caching is not desired.</p>\n", "summary" : "<p>  Connect to a MongoDB database.</p>", "annotation_str" : " %an:nondeterministic", "annotations" : [ { "prefix" : "an", "ns" : "http://zorba.io/annotations", "name" : "nondeterministic", "value" : "" } ], "updating" : false, "parameters" : [ { "name" : "credentials-name", "type" : "xs:string", "occurrence" : "?", "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> the name of the credentials to use.</div>" }, { "name" : "options", "type" : "object()", "occurrence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> the name of the credentials to use.</div>" } ], "returns" : { "type" : "xs:anyURI", "description" : "an identifier for a connection to the MongoDB database." }, "errors" : [ "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">mongo:MONGO001 if the connection specification is invalid</xqdoc:error>", "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">mongo:MONGO002 connection to MongoDB failed</xqdoc:error>", "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">mongo:MONGO003 authentication to the MongoDB database failed</xqdoc:error>" ] }, { "isDocumented" : true, "arity" : 5, "name" : "connect-nondeterministic", "qname" : "mongo:connect-nondeterministic", "signature" : "($host as xs:string, $port as xs:integer?, $db as xs:string, $user as xs:string?, $pass as xs:string?) as xs:anyURI", "description" : " <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">Connect to a MongoDB database.</p>\n <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">This function has the same semantics as <a href=\"#connect-5\">connect#5</a>,\n but is declared as being non deterministic and thus should only be used when\n result caching is not desired.</p>\n", "summary" : "<p>  Connect to a MongoDB database.</p>", "annotation_str" : " %an:nondeterministic", "annotations" : [ { "prefix" : "an", "ns" : "http://zorba.io/annotations", "name" : "nondeterministic", "value" : "" } ], "updating" : false, "parameters" : [ { "name" : "host", "type" : "xs:string", "occurrence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> the host to connect to</div>" }, { "name" : "port", "type" : "xs:integer", "occurrence" : "?", "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> the port to connect to</div>" }, { "name" : "db", "type" : "xs:string", "occurrence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> the database to connect to</div>" }, { "name" : "user", "type" : "xs:string", "occurrence" : "?", "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> the user used to authorize access to the db</div>" }, { "name" : "pass", "type" : "xs:string", "occurrence" : "?", "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> the password used to authorize access to the db</div>" } ], "returns" : { "type" : "xs:anyURI", "description" : "an identifier for a connection to the MongoDB database." }, "errors" : [ "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">mongo:MONGO002 connection to MongoDB failed</xqdoc:error>", "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">mongo:MONGO003 authentication to the MongoDB database failed</xqdoc:error>" ] }, { "isDocumented" : true, "arity" : 0, "name" : "connect", "qname" : "mongo:connect", "signature" : "() as xs:anyURI", "description" : " <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">Connect to this project's default MongoDB database.</p>\n <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">This function is declared as deterministic and should be used whenever result\n caching is acceptable.</p>\n", "summary" : "<p>  Connect to this project's default MongoDB database.</p>", "annotation_str" : " %an:strictlydeterministic", "annotations" : [ { "prefix" : "an", "ns" : "http://zorba.io/annotations", "name" : "strictlydeterministic", "value" : "" } ], "updating" : false, "parameters" : [  ], "returns" : { "type" : "xs:anyURI", "description" : "an identifier for a connection to the MongoDB database." }, "errors" : [ "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">mongo:MONGO002 connection to MongoDB failed</xqdoc:error>", "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">mongo:MONGO003 authentication to the MongoDB database failed</xqdoc:error>" ] }, { "isDocumented" : true, "arity" : 1, "name" : "connect", "qname" : "mongo:connect", "signature" : "($connection-config as item()) as xs:anyURI", "description" : " <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">Connect to a MongoDB database.</p>\n <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">This function is declared as deterministic and should be used whenever result\n caching is acceptable.</p>\n <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">The $connection-config parameter is used to specify the connection information.\n If a string is used, then the function will interpret it as the name of\n a credential in the MongoDB category.\n If an object is used, then the function will open a connection using it.\n The object structure is the following:\n <ul>\n   <li>host (string; mandatory)</li>\n   <li>port (integer; default: 27017)</li>\n   <li>db (string; mandatory)</li>\n   <li>user (string)</li>\n   <li>pass (string)</li>\n   <li>timeout (decimal; default: 0)</li>\n   <li>pre-digested (boolean; default: false)</li>\n </ul>\n </p>\n <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">For example, using stored credential:\n <pre>mongo:connect(\"credentials-name\")</pre>\n <p>For example, specifying the connection information:</p>\n <pre>mongo:connect(\n   {\n     \"host\": \"hostname\",\n     \"port\": 11011,\n     \"db\": \"mydb\",\n     \"user\": \"myuser\"\n     \"password: \"mypass\"\n   })</pre>.\n </p>\n", "summary" : "<p>  Connect to a MongoDB database.</p>", "annotation_str" : " %an:strictlydeterministic", "annotations" : [ { "prefix" : "an", "ns" : "http://zorba.io/annotations", "name" : "strictlydeterministic", "value" : "" } ], "updating" : false, "parameters" : [ { "name" : "connection-config", "type" : "item()", "occurrence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> the connection specification.</div>" } ], "returns" : { "type" : "xs:anyURI", "description" : "an identifier for a connection to the MongoDB database." }, "errors" : [ "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">mongo:MONGO001 if the connection specification is invalid</xqdoc:error>", "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">mongo:MONGO002 connection to MongoDB failed</xqdoc:error>", "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">mongo:MONGO003 authentication to the MongoDB database failed</xqdoc:error>" ] }, { "isDocumented" : true, "arity" : 2, "name" : "connect", "qname" : "mongo:connect", "signature" : "($credentials-name as xs:string?, $options as object()) as xs:anyURI", "description" : " <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">Connect to a MongoDB database.</p>\n <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">This function is declared as deterministic and should be used whenever result\n caching is acceptable.</p>\n <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">The $credentials-name parameter is used to specify the connection information.\n If empty a connection will be opened to the project default MongoDB database.\n Otherwise, the function will use it to identify a credential in the MongoDB category.\n </p>\n <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> The $options object can be used to specify connection options. The following\n fields are supported:\n <ul>\n   <li>timeout (decimal; default: 0)</li>\n </ul>\n </p>\n <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">For example, connecting to the project default MongoDB database:\n <pre>mongo:connect((), {\"timeout\": 10})</pre>\n </p>\n <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">For example, specifying the connection information:\n <pre>mongo:connect(\"credentials-name\", {\"timeout\": 10})</pre>\n </p>\n", "summary" : "<p>  Connect to a MongoDB database.</p>", "annotation_str" : " %an:strictlydeterministic", "annotations" : [ { "prefix" : "an", "ns" : "http://zorba.io/annotations", "name" : "strictlydeterministic", "value" : "" } ], "updating" : false, "parameters" : [ { "name" : "credentials-name", "type" : "xs:string", "occurrence" : "?", "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> the name of the credentials to use.</div>" }, { "name" : "options", "type" : "object()", "occurrence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> the name of the credentials to use.</div>" } ], "returns" : { "type" : "xs:anyURI", "description" : "an identifier for a connection to the MongoDB database." }, "errors" : [ "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">mongo:MONGO001 if the connection specification is invalid</xqdoc:error>", "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">mongo:MONGO002 connection to MongoDB failed</xqdoc:error>", "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">mongo:MONGO003 authentication to the MongoDB database failed</xqdoc:error>" ] }, { "isDocumented" : true, "arity" : 5, "name" : "connect", "qname" : "mongo:connect", "signature" : "($host as xs:string, $port as xs:integer?, $db as xs:string, $user as xs:string?, $pass as xs:string?) as xs:anyURI", "description" : " <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">Connect to a MongoDB database.</p>\n <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">This function is declared as deterministic and should be used whenever result\n caching is acceptable.</p>\n", "summary" : "<p>  Connect to a MongoDB database.</p>", "annotation_str" : " %an:strictlydeterministic", "annotations" : [ { "prefix" : "an", "ns" : "http://zorba.io/annotations", "name" : "strictlydeterministic", "value" : "" } ], "updating" : false, "parameters" : [ { "name" : "host", "type" : "xs:string", "occurrence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> the host to connect to</div>" }, { "name" : "port", "type" : "xs:integer", "occurrence" : "?", "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> the port to connect to</div>" }, { "name" : "db", "type" : "xs:string", "occurrence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> the database to connect to</div>" }, { "name" : "user", "type" : "xs:string", "occurrence" : "?", "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> the user used to authorize access to the db</div>" }, { "name" : "pass", "type" : "xs:string", "occurrence" : "?", "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> the password used to authorize access to the db</div>" } ], "returns" : { "type" : "xs:anyURI", "description" : "an identifier for a connection to the MongoDB database." }, "errors" : [ "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">mongo:MONGO002 connection to MongoDB failed</xqdoc:error>", "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">mongo:MONGO003 authentication to the MongoDB database failed</xqdoc:error>" ] }, { "isDocumented" : true, "arity" : 3, "name" : "copy", "qname" : "mongo:copy", "signature" : "($db as xs:anyURI, $from-db as xs:string, $to-db as xs:string) as empty-sequence()", "description" : " <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">Copies a MongoDB database. Be aware, you must call\n this function on the admin database.</p>\n", "summary" : "<p>  Copies a MongoDB database.</p>", "annotation_str" : " %an:sequential", "annotations" : [ { "prefix" : "an", "ns" : "http://zorba.io/annotations", "name" : "sequential", "value" : "" } ], "updating" : false, "parameters" : [ { "name" : "db", "type" : "xs:anyURI", "occurrence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> a database connection identifier</div>" }, { "name" : "from-db", "type" : "xs:string", "occurrence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> the name of the source database</div>" }, { "name" : "to-db", "type" : "xs:string", "occurrence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> the name of the target database</div>" } ], "returns" : { "type" : "empty-sequence()", "description" : "the function has side-effects and returns the empty sequence." }, "errors" : [ "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">mongo:MONGO004 invalid database identifier</xqdoc:error>", "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">mongo:MONGO005 if copy operation fails</xqdoc:error>", "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">mongo:MONGO006 if any mongodb error happens</xqdoc:error>" ] }, { "isDocumented" : true, "arity" : 2, "name" : "count-nondeterministic", "qname" : "mongo:count-nondeterministic", "signature" : "($db as xs:anyURI, $coll as xs:string) as xs:integer external", "description" : " <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">Counts the number of documents in the given collection.</p>\n <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">This function has the same semantics as <a href=\"#count-2\">count#2</a>,\n but is declared as being non deterministic and thus should only be used when\n result caching is not desired.</p>\n", "summary" : "<p>  Counts the number of documents in the given collection.</p>", "annotation_str" : " %an:nondeterministic", "annotations" : [ { "prefix" : "an", "ns" : "http://zorba.io/annotations", "name" : "nondeterministic", "value" : "" } ], "updating" : false, "parameters" : [ { "name" : "db", "type" : "xs:anyURI", "occurrence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> a database connection identifier</div>" }, { "name" : "coll", "type" : "xs:string", "occurrence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> the name of the collection</div>" } ], "returns" : { "type" : "xs:integer", "description" : "the said count" }, "errors" : [ "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">mongo:MONGO005 if any mongodb error happens</xqdoc:error>" ] }, { "isDocumented" : true, "arity" : 3, "name" : "count-nondeterministic", "qname" : "mongo:count-nondeterministic", "signature" : "($db as xs:anyURI, $coll as xs:string, $query as object()) as xs:integer external", "description" : " <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">Counts the number of documents satisfying the query in the given collection.</p>\n <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">This function has the same semantics as <a href=\"#count-3\">count#3</a>,\n but is declared as being non deterministic and thus should only be used when\n result caching is not desired.</p>\n", "summary" : "<p>  Counts the number of documents satisfying the query in the given collection.</p>", "annotation_str" : " %an:nondeterministic", "annotations" : [ { "prefix" : "an", "ns" : "http://zorba.io/annotations", "name" : "nondeterministic", "value" : "" } ], "updating" : false, "parameters" : [ { "name" : "db", "type" : "xs:anyURI", "occurrence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> a database connection identifier</div>" }, { "name" : "coll", "type" : "xs:string", "occurrence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> the name of the collection</div>" }, { "name" : "query", "type" : "object()", "occurrence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> the query specifying which objects to count</div>" } ], "returns" : { "type" : "xs:integer", "description" : "the said count" }, "errors" : [ "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">mongo:MONGO005 if any mongodb error happens</xqdoc:error>" ] }, { "isDocumented" : true, "arity" : 2, "name" : "count", "qname" : "mongo:count", "signature" : "($db as xs:anyURI, $coll as xs:string) as xs:integer external", "description" : " <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">Counts the number of documents in the given collection.</p>\n <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">This function is declared as deterministic and should be used whenever result\n caching is acceptable.</p>\n", "summary" : "<p>  Counts the number of documents in the given collection.</p>", "annotation_str" : "", "annotations" : [  ], "updating" : false, "parameters" : [ { "name" : "db", "type" : "xs:anyURI", "occurrence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> a database connection identifier</div>" }, { "name" : "coll", "type" : "xs:string", "occurrence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> the name of the collection</div>" } ], "returns" : { "type" : "xs:integer", "description" : "the said count" }, "errors" : [ "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">mongo:MONGO005 if any mongodb error happens</xqdoc:error>" ] }, { "isDocumented" : true, "arity" : 3, "name" : "count", "qname" : "mongo:count", "signature" : "($db as xs:anyURI, $coll as xs:string, $query as object()) as xs:integer external", "description" : " <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">Counts the number of documents satisfying the query in the given collection.</p>\n <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">This function is declared as deterministic and should be used whenever result\n caching is acceptable.</p>\n", "summary" : "<p>  Counts the number of documents satisfying the query in the given collection.</p>", "annotation_str" : "", "annotations" : [  ], "updating" : false, "parameters" : [ { "name" : "db", "type" : "xs:anyURI", "occurrence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> a database connection identifier</div>" }, { "name" : "coll", "type" : "xs:string", "occurrence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> the name of the collection</div>" }, { "name" : "query", "type" : "object()", "occurrence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> the query specifying which objects to count</div>" } ], "returns" : { "type" : "xs:integer", "description" : "the said count" }, "errors" : [ "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">mongo:MONGO005 if any mongodb error happens</xqdoc:error>" ] }, { "isDocumented" : true, "arity" : 1, "name" : "disconnect", "qname" : "mongo:disconnect", "signature" : "($db as xs:anyURI) as empty-sequence() external", "description" : " <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">Disconnect from a MongoDB database.</p>\n", "summary" : "<p>  Disconnect from a MongoDB database.</p>", "annotation_str" : " %an:sequential", "annotations" : [ { "prefix" : "an", "ns" : "http://zorba.io/annotations", "name" : "sequential", "value" : "" } ], "updating" : false, "parameters" : [ { "name" : "db", "type" : "xs:anyURI", "occurrence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> a database connection identifier</div>" } ], "returns" : { "type" : "empty-sequence()", "description" : "the function has side-effects and returns the empty sequence." }, "errors" : [ "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">mongo:MONGO004 invalid database identifier</xqdoc:error>", "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">mongo:MONGO005 if any mongodb error happens</xqdoc:error>" ] }, { "isDocumented" : true, "arity" : 2, "name" : "drop-collection", "qname" : "mongo:drop-collection", "signature" : "($db as xs:anyURI, $coll as xs:string) as empty-sequence() external", "description" : " <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">Drop a collection.</p>\n", "summary" : "<p>  Drop a collection.</p>", "annotation_str" : " %an:sequential", "annotations" : [ { "prefix" : "an", "ns" : "http://zorba.io/annotations", "name" : "sequential", "value" : "" } ], "updating" : false, "parameters" : [ { "name" : "db", "type" : "xs:anyURI", "occurrence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> a database connection identifier</div>" }, { "name" : "coll", "type" : "xs:string", "occurrence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> the name of the collection</div>" } ], "returns" : { "type" : "empty-sequence()", "description" : "the function has side-effects and returns the empty sequence." }, "errors" : [ "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">mongo:MONGO004 invalid database identifier</xqdoc:error>", "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">mongo:MONGO005 if any mongodb error happens</xqdoc:error>" ] }, { "isDocumented" : true, "arity" : 2, "name" : "find-nondeterministic", "qname" : "mongo:find-nondeterministic", "signature" : "($db as xs:anyURI, $coll as xs:string) as object()*", "description" : " <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">Returns all objects of the given collection.</p>\n <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">This function has the same semantics as <a href=\"#find-2\">find#2</a>,\n but is declared as being non deterministic and thus should only be used when\n result caching is not desired.</p>\n", "summary" : "<p>  Returns all objects of the given collection.</p>", "annotation_str" : " %an:nondeterministic", "annotations" : [ { "prefix" : "an", "ns" : "http://zorba.io/annotations", "name" : "nondeterministic", "value" : "" } ], "updating" : false, "parameters" : [ { "name" : "db", "type" : "xs:anyURI", "occurrence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> a database connection identifier</div>" }, { "name" : "coll", "type" : "xs:string", "occurrence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> the name of the collection</div>" } ], "returns" : { "type" : "object()*", "description" : "all objects of the given collection" }, "errors" : [ "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">mongo:MONGO004 invalid database identifier</xqdoc:error>", "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">mongo:MONGO005 if any mongodb error happens</xqdoc:error>" ] }, { "isDocumented" : true, "arity" : 3, "name" : "find-nondeterministic", "qname" : "mongo:find-nondeterministic", "signature" : "($db as xs:anyURI, $coll as xs:string, $query as object()) as object()*", "description" : " <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">Performs a query operation on the given collection and\n returns all matches.</p>\n <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">This function has the same semantics as <a href=\"#find-3\">find#3</a>,\n but is declared as being non deterministic and thus should only be used when\n result caching is not desired.</p>\n", "summary" : "<p>  Performs a query operation on the given collection and\n returns all matches.</p>", "annotation_str" : " %an:nondeterministic", "annotations" : [ { "prefix" : "an", "ns" : "http://zorba.io/annotations", "name" : "nondeterministic", "value" : "" } ], "updating" : false, "parameters" : [ { "name" : "db", "type" : "xs:anyURI", "occurrence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> a database connection identifier</div>" }, { "name" : "coll", "type" : "xs:string", "occurrence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> the name of the collection</div>" }, { "name" : "query", "type" : "object()", "occurrence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> the query operation to perform</div>" } ], "returns" : { "type" : "object()*", "description" : "all matches returned by the given query operation" }, "errors" : [ "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">mongo:MONGO004 invalid database identifier</xqdoc:error>", "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">mongo:MONGO005 if any mongodb error happens</xqdoc:error>", "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">mongo:MONGO006 if the given query could not be converted to BSON</xqdoc:error>" ] }, { "isDocumented" : true, "arity" : 4, "name" : "find-nondeterministic", "qname" : "mongo:find-nondeterministic", "signature" : "($db as xs:anyURI, $coll as xs:string, $query as object(), $options as object()) as object()*", "description" : " <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">Performs a query operation on the given collection and\n returns all matches.</p>\n <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">This function has the same semantics as <a href=\"#find-4\">find#4</a>,\n but is declared as being non deterministic and thus should only be used when\n result caching is not desired.</p>\n", "summary" : "<p>  Performs a query operation on the given collection and\n returns all matches.</p>", "annotation_str" : " %an:nondeterministic", "annotations" : [ { "prefix" : "an", "ns" : "http://zorba.io/annotations", "name" : "nondeterministic", "value" : "" } ], "updating" : false, "parameters" : [ { "name" : "db", "type" : "xs:anyURI", "occurrence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> a database connection identifier</div>" }, { "name" : "coll", "type" : "xs:string", "occurrence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> the name of the collection</div>" }, { "name" : "query", "type" : "object()", "occurrence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> the query operation to perform</div>" }, { "name" : "options", "type" : "object()", "occurrence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> the options for this operation (see find#5 for available options)</div>" } ], "returns" : { "type" : "object()*", "description" : "all matches returned by the given query operation" }, "errors" : [ "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">mongo:MONGO004 invalid database identifier</xqdoc:error>", "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">mongo:MONGO005 if any mongodb error happens</xqdoc:error>", "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">mongo:MONGO006 if the given query could not be converted to BSON</xqdoc:error>" ] }, { "isDocumented" : true, "arity" : 5, "name" : "find-nondeterministic", "qname" : "mongo:find-nondeterministic", "signature" : "($db as xs:anyURI, $coll as xs:string, $query as object(), $projection as object(), $options as object()) as object()* external", "description" : " <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">Performs a query operation on the given collection and\n returns all matches.</p>\n <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">This function has the same semantics as <a href=\"#find-5\">find#5</a>,\n but is declared as being non deterministic and thus should only be used when\n result caching is not desired.</p>\n", "summary" : "<p>  Performs a query operation on the given collection and\n returns all matches.</p>", "annotation_str" : " %an:nondeterministic", "annotations" : [ { "prefix" : "an", "ns" : "http://zorba.io/annotations", "name" : "nondeterministic", "value" : "" } ], "updating" : false, "parameters" : [ { "name" : "db", "type" : "xs:anyURI", "occurrence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> a database connection identifier</div>" }, { "name" : "coll", "type" : "xs:string", "occurrence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> the name of the collection</div>" }, { "name" : "query", "type" : "object()", "occurrence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> the query operation to perform</div>" }, { "name" : "projection", "type" : "object()", "occurrence" : null, "description" : "" }, { "name" : "options", "type" : "object()", "occurrence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> the options for this operation</div>" } ], "returns" : { "type" : "object()*", "description" : "all matches returned by the given query operation" }, "errors" : [ "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">mongo:MONGO004 invalid database identifier</xqdoc:error>", "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">mongo:MONGO005 if any mongodb error happens</xqdoc:error>", "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">mongo:MONGO006 if the given query or projection could not be converted to BSON</xqdoc:error>" ] }, { "isDocumented" : true, "arity" : 2, "name" : "find", "qname" : "mongo:find", "signature" : "($db as xs:anyURI, $coll as xs:string) as object()*", "description" : " <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">Returns all objects of the given collection.</p>\n <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">This function is declared as deterministic and should be used whenever result\n caching is acceptable.</p>\n", "summary" : "<p>  Returns all objects of the given collection.</p>", "annotation_str" : "", "annotations" : [  ], "updating" : false, "parameters" : [ { "name" : "db", "type" : "xs:anyURI", "occurrence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> a database connection identifier</div>" }, { "name" : "coll", "type" : "xs:string", "occurrence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> the name of the collection</div>" } ], "returns" : { "type" : "object()*", "description" : "all objects of the given collection" }, "errors" : [ "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">mongo:MONGO004 invalid database identifier</xqdoc:error>", "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">mongo:MONGO005 if any mongodb error happens</xqdoc:error>" ] }, { "isDocumented" : true, "arity" : 3, "name" : "find", "qname" : "mongo:find", "signature" : "($db as xs:anyURI, $coll as xs:string, $query as object()) as object()*", "description" : " <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">Performs a query operation on the given collection and\n returns all matches.</p>\n <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">This function is declared as deterministic and should be used whenever result\n caching is acceptable.</p>\n", "summary" : "<p>  Performs a query operation on the given collection and\n returns all matches.</p>", "annotation_str" : "", "annotations" : [  ], "updating" : false, "parameters" : [ { "name" : "db", "type" : "xs:anyURI", "occurrence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> a database connection identifier</div>" }, { "name" : "coll", "type" : "xs:string", "occurrence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> the name of the collection</div>" }, { "name" : "query", "type" : "object()", "occurrence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> the query operation to perform</div>" } ], "returns" : { "type" : "object()*", "description" : "all matches returned by the given query operation" }, "errors" : [ "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">mongo:MONGO004 invalid database identifier</xqdoc:error>", "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">mongo:MONGO005 if any mongodb error happens</xqdoc:error>", "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">mongo:MONGO006 if the given query could not be converted to BSON</xqdoc:error>" ] }, { "isDocumented" : true, "arity" : 4, "name" : "find", "qname" : "mongo:find", "signature" : "($db as xs:anyURI, $coll as xs:string, $query as object(), $options as object()) as object()*", "description" : " <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">Performs a query operation on the given collection and\n returns all matches.</p>\n <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">This function is declared as deterministic and should be used whenever result\n caching is acceptable.</p>\n", "summary" : "<p>  Performs a query operation on the given collection and\n returns all matches.</p>", "annotation_str" : "", "annotations" : [  ], "updating" : false, "parameters" : [ { "name" : "db", "type" : "xs:anyURI", "occurrence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> a database connection identifier</div>" }, { "name" : "coll", "type" : "xs:string", "occurrence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> the name of the collection</div>" }, { "name" : "query", "type" : "object()", "occurrence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> the query operation to perform</div>" }, { "name" : "options", "type" : "object()", "occurrence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> the options for this operation (see find#5 for available options)</div>" } ], "returns" : { "type" : "object()*", "description" : "all matches returned by the given query operation" }, "errors" : [ "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">mongo:MONGO004 invalid database identifier</xqdoc:error>", "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">mongo:MONGO005 if any mongodb error happens</xqdoc:error>", "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">mongo:MONGO006 if the given query could not be converted to BSON</xqdoc:error>" ] }, { "isDocumented" : true, "arity" : 5, "name" : "find", "qname" : "mongo:find", "signature" : "($db as xs:anyURI, $coll as xs:string, $query as object(), $projection as object(), $options as object()) as object()* external", "description" : " <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">Performs a query operation on the given collection and\n returns all matches.</p>\n <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">This function is declared as deterministic and should be used whenever result\n caching is acceptable.</p>\n <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">Available options:\n <ul>\n   <li>to-return: the maximum number of objects to return (0 = unlimited)</li>\n   <li>to-skip: start with the n-th object</li>\n   <li>batch-size: the number of objects to return in one batch</li>\n   <li>slave-ok: allow this query to be run against a replica secondary</li>\n   <li>await-data: the server will block for some extra time before returning,\n   waiting for more data to return</li>\n   <li>partial-results: return partial results if some shards are down instead\n   of returning an error</li>\n </ul>\n </p>\n", "summary" : "<p>  Performs a query operation on the given collection and\n returns all matches.</p>", "annotation_str" : "", "annotations" : [  ], "updating" : false, "parameters" : [ { "name" : "db", "type" : "xs:anyURI", "occurrence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> a database connection identifier</div>" }, { "name" : "coll", "type" : "xs:string", "occurrence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> the name of the collection</div>" }, { "name" : "query", "type" : "object()", "occurrence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> the query operation to perform</div>" }, { "name" : "projection", "type" : "object()", "occurrence" : null, "description" : "" }, { "name" : "options", "type" : "object()", "occurrence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> the options for this operation</div>" } ], "returns" : { "type" : "object()*", "description" : "all matches returned by the given query operation" }, "errors" : [ "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">mongo:MONGO004 invalid database identifier</xqdoc:error>", "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">mongo:MONGO005 if any mongodb error happens</xqdoc:error>", "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">mongo:MONGO006 if the given query or projection could not be converted to BSON</xqdoc:error>" ] }, { "isDocumented" : true, "arity" : 1, "name" : "is-connected", "qname" : "mongo:is-connected", "signature" : "($db as xs:anyURI) as xs:boolean external", "description" : " <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">Checks if the given identifiers is valid and the corresponding\n connection is open.</p>\n", "summary" : "<p>  Checks if the given identifiers is valid and the corresponding\n connection is open.</p>", "annotation_str" : "", "annotations" : [  ], "updating" : false, "parameters" : [ { "name" : "db", "type" : "xs:anyURI", "occurrence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> a database connection identifier</div>" } ], "returns" : { "type" : "xs:boolean", "description" : "true if the given connection identifier is valid and the corresponding connection is open, false otherwise." }, "errors" : [ "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">mongo:MONGO004 invalid database identifier</xqdoc:error>", "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">mongo:MONGO005 if any mongodb error happens</xqdoc:error>" ] }, { "isDocumented" : true, "arity" : 3, "name" : "remove", "qname" : "mongo:remove", "signature" : "($db as xs:anyURI, $coll as xs:string, $remove as object()) as empty-sequence()", "description" : " <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">Performs a remove operation on the given collection.</p>\n <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">The operation will be checked and an error is raised if\n one of them fails.</p>\n", "summary" : "<p>  Performs a remove operation on the given collection.</p>", "annotation_str" : " %an:sequential", "annotations" : [ { "prefix" : "an", "ns" : "http://zorba.io/annotations", "name" : "sequential", "value" : "" } ], "updating" : false, "parameters" : [ { "name" : "db", "type" : "xs:anyURI", "occurrence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> a database connection identifier</div>" }, { "name" : "coll", "type" : "xs:string", "occurrence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> the name of the collection</div>" }, { "name" : "remove", "type" : "object()", "occurrence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> the remove command to be performed</div>" } ], "returns" : { "type" : "empty-sequence()", "description" : "the function has side-effects and returns the empty sequence." }, "errors" : [ "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">mongo:MONGO004 invalid database identifier</xqdoc:error>", "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">mongo:MONGO005 if any mongodb error happens</xqdoc:error>", "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">mongo:MONGO006 if the given document could not be converted to BSON</xqdoc:error>" ] }, { "isDocumented" : true, "arity" : 4, "name" : "remove", "qname" : "mongo:remove", "signature" : "($db as xs:anyURI, $coll as xs:string, $remove as object(), $options as object()) as empty-sequence() external", "description" : " <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">Performs a remove operation on the given collection.</p>\n <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">\n <ul>\n   <li>safe: If to true, the operation will wait for a response from\n    the database and an error is raised if the operation fails.\n    Otherwise, the operation will not wait for a response.</li>\n  <li>just-one: true if the operation should stop after a single match\n    has been found and deleted</li>\n </ul>\n </p>\n", "summary" : "<p>  Performs a remove operation on the given collection.</p>", "annotation_str" : " %an:sequential", "annotations" : [ { "prefix" : "an", "ns" : "http://zorba.io/annotations", "name" : "sequential", "value" : "" } ], "updating" : false, "parameters" : [ { "name" : "db", "type" : "xs:anyURI", "occurrence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> a database connection identifier</div>" }, { "name" : "coll", "type" : "xs:string", "occurrence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> the name of the collection</div>" }, { "name" : "remove", "type" : "object()", "occurrence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> the remove command to be performed</div>" }, { "name" : "options", "type" : "object()", "occurrence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> the options for this operation</div>" } ], "returns" : { "type" : "empty-sequence()", "description" : "the function has side-effects and returns the empty sequence." }, "errors" : [ "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">mongo:MONGO004 invalid database identifier</xqdoc:error>", "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">mongo:MONGO005 if any mongodb error happens</xqdoc:error>", "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">mongo:MONGO006 if the given document could not be converted to BSON</xqdoc:error>" ] }, { "isDocumented" : true, "arity" : 2, "name" : "run-cmd-deterministic", "qname" : "mongo:run-cmd-deterministic", "signature" : "($db as xs:anyURI, $cmd as object()) as object() external", "description" : " <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">Executes a\n <a href=\"http://docs.mongodb.org/manual/reference/commands/\">database command</a>.</p>\n <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">This function is marked as deterministic and should be used whenever the\n specified command has no side-effects and result caching is desired.</p>\n", "summary" : "<p>  Executes a\n  database command .</p>", "annotation_str" : "", "annotations" : [  ], "updating" : false, "parameters" : [ { "name" : "db", "type" : "xs:anyURI", "occurrence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> a database connection identifier</div>" }, { "name" : "cmd", "type" : "object()", "occurrence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> the database command to execute</div>" } ], "returns" : { "type" : "object()", "description" : "The result object. Typically has { ok : ..., errmsg : ... } fields set." }, "errors" : [ "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">mongo:MONGO004 invalid database identifier</xqdoc:error>", "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">mongo:MONGO006 if any mongodb error happens</xqdoc:error>" ] }, { "isDocumented" : true, "arity" : 2, "name" : "run-cmd-nondeterministic", "qname" : "mongo:run-cmd-nondeterministic", "signature" : "($db as xs:anyURI, $cmd as object()) as object() external", "description" : " <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">Executes a\n <a href=\"http://docs.mongodb.org/manual/reference/commands/\">database command</a>.</p>\n <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">This function is marked as non-deterministic and should be used whenever the\n specified command has no side-effects and result caching is undesired.</p>\n", "summary" : "<p>  Executes a\n  database command .</p>", "annotation_str" : " %an:nondeterministic", "annotations" : [ { "prefix" : "an", "ns" : "http://zorba.io/annotations", "name" : "nondeterministic", "value" : "" } ], "updating" : false, "parameters" : [ { "name" : "db", "type" : "xs:anyURI", "occurrence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> a database connection identifier</div>" }, { "name" : "cmd", "type" : "object()", "occurrence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> the database command to execute</div>" } ], "returns" : { "type" : "object()", "description" : "The result object. Typically has { ok : ..., errmsg : ... } fields set." }, "errors" : [ "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">mongo:MONGO004 invalid database identifier</xqdoc:error>", "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">mongo:MONGO006 if any mongodb error happens</xqdoc:error>" ] }, { "isDocumented" : true, "arity" : 2, "name" : "run-cmd", "qname" : "mongo:run-cmd", "signature" : "($db as xs:anyURI, $cmd as object()) as object() external", "description" : " <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">Executes a\n <a href=\"http://docs.mongodb.org/manual/reference/commands/\">database command</a>.</p>\n <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">This function is marked as sequential and should be used whenever the\n specified command has side-effects.</p>\n", "summary" : "<p>  Executes a\n  database command .</p>", "annotation_str" : " %an:sequential", "annotations" : [ { "prefix" : "an", "ns" : "http://zorba.io/annotations", "name" : "sequential", "value" : "" } ], "updating" : false, "parameters" : [ { "name" : "db", "type" : "xs:anyURI", "occurrence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> a database connection identifier</div>" }, { "name" : "cmd", "type" : "object()", "occurrence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> the database command to execute</div>" } ], "returns" : { "type" : "object()", "description" : "The result object. Typically has { ok : ..., errmsg : ... } fields set." }, "errors" : [ "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">mongo:MONGO004 invalid database identifier</xqdoc:error>", "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">mongo:MONGO006 if any mongodb error happens</xqdoc:error>" ] }, { "isDocumented" : true, "arity" : 3, "name" : "save", "qname" : "mongo:save", "signature" : "($db as xs:anyURI, $coll as xs:string, $doc as object()) as empty-sequence()", "description" : " <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">Save a sequence of documents in the given collection.</p>\n <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">If a document to be save already has an \"_id\" field, then an\n upsert operation is performed an any existing document with that\n id will be overwritten. Otherwise, an insert operation is performed\n and the \"_id\" generated for each document will be returned.</p>\n <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">Each safe operation will be checked and an error is raised if\n one of them fails.</p>\n", "summary" : "<p>  Save a sequence of documents in the given collection.</p>", "annotation_str" : " %an:sequential", "annotations" : [ { "prefix" : "an", "ns" : "http://zorba.io/annotations", "name" : "sequential", "value" : "" } ], "updating" : false, "parameters" : [ { "name" : "db", "type" : "xs:anyURI", "occurrence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> a database connection identifier</div>" }, { "name" : "coll", "type" : "xs:string", "occurrence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> the name of the collection</div>" }, { "name" : "doc", "type" : "object()", "occurrence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> the document to be saved or upserted</div>" } ], "returns" : { "type" : "empty-sequence()", "description" : "the documents that have been inserted with \"_id\" fields." }, "errors" : [ "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">mongo:MONGO004 invalid database identifier</xqdoc:error>", "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">mongo:MONGO005 if any mongodb error happens</xqdoc:error>", "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">mongo:MONGO006 if the given document could not be converted to BSON</xqdoc:error>" ] }, { "isDocumented" : true, "arity" : 4, "name" : "save", "qname" : "mongo:save", "signature" : "($db as xs:anyURI, $coll as xs:string, $doc as object(), $options as object()) as m-schema:oid? external", "description" : " <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">Save a sequence of documents in the given collection.</p>\n <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">If a document to be saved already has an \"_id\" field, then an\n upsert operation is performed and any existing document with that\n id will be overwritten. Otherwise, an insert operation is performed.</p>\n <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">If the manipulate option is set to true, an \"_id\" field will be\n added to the document. The new id will be returned. Otherwise,\n the \"_id\" field will be added by the server.</p>\n <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">If the safe options is set to true, each operation will wait for a\n response from the database and an error is raised if the operation\n fails. Otherwise, the operation will not wait for a response.</p>\n", "summary" : "<p>  Save a sequence of documents in the given collection.</p>", "annotation_str" : " %an:sequential", "annotations" : [ { "prefix" : "an", "ns" : "http://zorba.io/annotations", "name" : "sequential", "value" : "" } ], "updating" : false, "parameters" : [ { "name" : "db", "type" : "xs:anyURI", "occurrence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> a database connection identifier</div>" }, { "name" : "coll", "type" : "xs:string", "occurrence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> the name of the collection</div>" }, { "name" : "doc", "type" : "object()", "occurrence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> the document to be saved or upserted</div>" }, { "name" : "options", "type" : "object()", "occurrence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> the options for this operation</div>" } ], "returns" : { "type" : "m-schema:oid?", "description" : "a generated OID if the manipulate option was set to true, the empty sequence otherwise." }, "errors" : [ "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">mongo:MONGO004 invalid database identifier</xqdoc:error>", "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">mongo:MONGO005 if any mongodb error happens</xqdoc:error>", "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">mongo:MONGO006 if the given document could not be converted to BSON</xqdoc:error>" ] }, { "isDocumented" : true, "arity" : 4, "name" : "update", "qname" : "mongo:update", "signature" : "($db as xs:anyURI, $coll as xs:string, $query as object(), $update as object()) as empty-sequence()", "description" : " <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">Performs an update command on the given collection.</p>\n <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">The operation will be checked and an error is raised if\n one of them fails. Also, this function only modifies one\n document matching the query and does not do any upserts.</p>\n", "summary" : "<p>  Performs an update command on the given collection.</p>", "annotation_str" : " %an:sequential", "annotations" : [ { "prefix" : "an", "ns" : "http://zorba.io/annotations", "name" : "sequential", "value" : "" } ], "updating" : false, "parameters" : [ { "name" : "db", "type" : "xs:anyURI", "occurrence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> a database connection identifier</div>" }, { "name" : "coll", "type" : "xs:string", "occurrence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> the name of the collection</div>" }, { "name" : "query", "type" : "object()", "occurrence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> the query to select the objects that are updated</div>" }, { "name" : "update", "type" : "object()", "occurrence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> the update specification to be performed</div>" } ], "returns" : { "type" : "empty-sequence()", "description" : "the function has side-effects and returns the empty sequence." }, "errors" : [ "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">mongo:MONGO004 invalid database identifier</xqdoc:error>", "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">mongo:MONGO005 if any mongodb error happens</xqdoc:error>", "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">mongo:MONGO006 if the given objects could not be converted to BSON</xqdoc:error>" ] }, { "isDocumented" : true, "arity" : 5, "name" : "update", "qname" : "mongo:update", "signature" : "($db as xs:anyURI, $coll as xs:string, $query as object(), $update as object(), $options as object()) as empty-sequence() external", "description" : " <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">Performs an update operation on the given collection.</p>\n <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">\n <ul>\n   <li>safe: If to true, the operation will wait for a response from\n    the database and an error is raised if the operation fails.\n    Otherwise, the operation will not wait for a response.</li>\n  <li>multi: indicates if all documents matching criteria should be updated\n  rather than just one.</li>\n  <li>upsert: if this should be an \"upsert\" operation; that is,\n  if the record(s) do not exist, insert one. Upsert only inserts a single document.</li>\n </ul>\n </p>\n", "summary" : "<p>  Performs an update operation on the given collection.</p>", "annotation_str" : " %an:sequential", "annotations" : [ { "prefix" : "an", "ns" : "http://zorba.io/annotations", "name" : "sequential", "value" : "" } ], "updating" : false, "parameters" : [ { "name" : "db", "type" : "xs:anyURI", "occurrence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> a database connection identifier</div>" }, { "name" : "coll", "type" : "xs:string", "occurrence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> the name of the collection</div>" }, { "name" : "query", "type" : "object()", "occurrence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> the query to select the objects that are updated</div>" }, { "name" : "update", "type" : "object()", "occurrence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> the update specification to be performed</div>" }, { "name" : "options", "type" : "object()", "occurrence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> the options for this operation</div>" } ], "returns" : { "type" : "empty-sequence()", "description" : "the function has side-effects and returns the empty sequence." }, "errors" : [ "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">mongo:MONGO004 invalid database identifier</xqdoc:error>", "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">mongo:MONGO005 if any mongodb error happens</xqdoc:error>", "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">mongo:MONGO006 if the given objects could not be converted to BSON</xqdoc:error>" ] } ], "variables" : [  ] }, "http://jsoniq.org/function-library" : { "ns" : "http://jsoniq.org/function-library", "description" : " <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">This module provides extensions to the JSONiq core function library.</p>\n <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">The module is always imported so you do not need to import it explicitly.\n Also, you do not need to fully qualify a function to invoke it.</p>\n", "sees" : [ "<xqdoc:see xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">http://jsoniq.org/</xqdoc:see>" ], "authors" : [ "<xqdoc:author xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">Ghislain Fourny</xqdoc:author>" ], "version" : null, "encoding" : "utf-8", "namespaces" : [ { "uri" : "http://jsoniq.org/functions", "prefix" : "jn" }, { "uri" : "http://jsoniq.org/function-library", "prefix" : "libjn" }, { "uri" : "http://zorba.io/options/versioning", "prefix" : "ver" } ], "functions" : [ { "isDocumented" : true, "arity" : 1, "name" : "accumulate", "qname" : "libjn:accumulate", "signature" : "($items as item()*) as object()", "description" : " This function dynamically builds an object, like the {||} syntax, except that\n it does not throw an error upon pair collision. Instead, it accumulates them\n into an array, if more than one.\n", "summary" : "<p> This function dynamically builds an object, like the {||} syntax, except that\n it does not throw an error upon pair collision.</p>", "annotation_str" : "", "annotations" : [  ], "updating" : false, "parameters" : [ { "name" : "items", "type" : "item()", "occurrence" : "*", "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> A sequence of items, the objects of which are going to be accumulated into a single object.</div>" } ], "returns" : { "type" : "object()", "description" : "The accumulated object." }, "errors" : [  ] }, { "isDocumented" : true, "arity" : 1, "name" : "descendant-arrays", "qname" : "libjn:descendant-arrays", "signature" : "($items as item()*) as array()*", "description" : " This function returns all arrays contained at any depth within a sequence of items.\n", "summary" : "<p> This function returns all arrays contained at any depth within a sequence of items.</p>", "annotation_str" : "", "annotations" : [  ], "updating" : false, "parameters" : [ { "name" : "items", "type" : "item()", "occurrence" : "*", "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> A sequence of items.</div>" } ], "returns" : { "type" : "array()*", "description" : "The descendant arrays of the input sequence." }, "errors" : [  ] }, { "isDocumented" : true, "arity" : 1, "name" : "descendant-objects", "qname" : "libjn:descendant-objects", "signature" : "($items as item()*) as object()*", "description" : " This function returns all objects contained at any depth within a sequence of items.\n", "summary" : "<p> This function returns all objects contained at any depth within a sequence of items.</p>", "annotation_str" : "", "annotations" : [  ], "updating" : false, "parameters" : [ { "name" : "items", "type" : "item()", "occurrence" : "*", "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> A sequence of items.</div>" } ], "returns" : { "type" : "object()*", "description" : "The descendant objects of the input sequence." }, "errors" : [  ] }, { "isDocumented" : true, "arity" : 1, "name" : "descendant-pairs-priv", "qname" : "libjn:descendant-pairs-priv", "signature" : "($i as item()) as object()*", "description" : " Helper function for libjn:descendant-pairs()\n", "summary" : "<p> Helper function for libjn:descendant-pairs()\n</p>", "annotation_str" : "", "annotations" : [  ], "updating" : false, "parameters" : [ { "name" : "i", "type" : "item()", "occurrence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> An item</div>" } ], "returns" : { "type" : "object()*", "description" : "The descendant pairs of the item" }, "errors" : [  ] }, { "isDocumented" : true, "arity" : 1, "name" : "descendant-pairs", "qname" : "libjn:descendant-pairs", "signature" : "($items as item()*) as object()*", "description" : " This function returns all pairs contained at any depth within an sequence of items.\n", "summary" : "<p> This function returns all pairs contained at any depth within an sequence of items.</p>", "annotation_str" : "", "annotations" : [  ], "updating" : false, "parameters" : [ { "name" : "items", "type" : "item()", "occurrence" : "*", "description" : "" } ], "returns" : { "type" : "object()*", "description" : "All direct and indirect descendant pairs." }, "errors" : [  ] }, { "isDocumented" : true, "arity" : 1, "name" : "intersect", "qname" : "libjn:intersect", "signature" : "($items as item()*) as object()", "description" : " This function returns the intersection of the objects contained in the\n given sequence of items, aggregating values corresponding to the same key\n into an array.\n", "summary" : "<p> This function returns the intersection of the objects contained in the\n given sequence of items, aggregating values corresponding to the same key\n into an array.</p>", "annotation_str" : "", "annotations" : [  ], "updating" : false, "parameters" : [ { "name" : "items", "type" : "item()", "occurrence" : "*", "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> A sequence of items.</div>" } ], "returns" : { "type" : "object()", "description" : "The insersection of the objects contained in $items." }, "errors" : [  ] }, { "isDocumented" : true, "arity" : 1, "name" : "values", "qname" : "libjn:values", "signature" : "($items as item()*) as item()*", "description" : " This functions returns all values of all objects contained in a sequence of items.\n", "summary" : "<p> This functions returns all values of all objects contained in a sequence of items.</p>", "annotation_str" : "", "annotations" : [  ], "updating" : false, "parameters" : [ { "name" : "items", "type" : "item()", "occurrence" : "*", "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> A sequence of items.</div>" } ], "returns" : { "type" : "item()*", "description" : "The values inside the objects of the sequence." }, "errors" : [  ] } ], "variables" : [  ] }, "http://zorba.io/modules/node-position" : { "ns" : "http://zorba.io/modules/node-position", "description" : " <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">This module provides a function (np:node-position) that, given a node,\n returns positional information about the node in the form of an xs:anyURI\n item. The module also defines functions that use such positional information\n to determine: (1) positional relationships between two nodes (e.g. if one\n is the ancestor of another) and (2) positional properties of a single node\n (e.g. its level in the tree).</p>\n <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"/>\n <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">Within this module, the term \"node position\" will be used to refer to an\n xs:anyURI item that is returned by the np:node-position function.</p>\n", "sees" : [  ], "authors" : [ "<xqdoc:author xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">Federico Cavalieri, Markos Zaharioudakis</xqdoc:author>" ], "version" : null, "encoding" : "utf-8", "namespaces" : [ { "uri" : "http://zorba.io/modules/node-position", "prefix" : "np" }, { "uri" : "http://zorba.io/options/versioning", "prefix" : "ver" } ], "functions" : [ { "isDocumented" : true, "arity" : 2, "name" : "ancestor-of", "qname" : "np:ancestor-of", "signature" : "($pos1 as xs:anyURI, $pos2 as xs:anyURI) as xs:boolean external", "description" : " <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">Determines whether the node position given as second argument is\n an ancestor of the node position given as first argument.</p>\n <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"/>\n <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">If the two positions were obtained within the same snapshot S, then the\n result of the function applies to the corresponding nodes as well, that\n is, within snapshot S, the second node is an ancestor of the first.</p>\n <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">Otherwise, the result of the function does not imply anything about the\n positional relationship of the two nodes.</p>\n", "summary" : "<p>  Determines whether the node position given as second argument is\n an ancestor of the node position given as first argument.</p>", "annotation_str" : "", "annotations" : [  ], "updating" : false, "parameters" : [ { "name" : "pos1", "type" : "xs:anyURI", "occurrence" : null, "description" : "" }, { "name" : "pos2", "type" : "xs:anyURI", "occurrence" : null, "description" : "" } ], "returns" : { "type" : "xs:boolean", "description" : "true if the node position $n-pos2 is an ancestor of the node position $n-pos1; false otherwise." }, "errors" : [ "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">zerr:ZAPI0028 if one of the given URI is not a valid node position computed by the <tt>np:node-position</tt> function.</xqdoc:error>" ] }, { "isDocumented" : true, "arity" : 2, "name" : "attribute-of", "qname" : "np:attribute-of", "signature" : "($n-pos1 as xs:anyURI, $n-pos2 as xs:anyURI) as xs:boolean external", "description" : " <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">Determines whether the node position given as second argument is\n an attribute of the node position given as first argument.</p>\n <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"/>\n <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">If the two positions were obtained within the same snapshot S, then the\n result of the function applies to the corresponding nodes as well, that\n is, within snapshot S, the second node is an attribute of the first.</p>\n <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">Otherwise, the result of the function does not imply anything about the\n positional relationship of the two nodes.</p>\n", "summary" : "<p>  Determines whether the node position given as second argument is\n an attribute of the node position given as first argument.</p>", "annotation_str" : "", "annotations" : [  ], "updating" : false, "parameters" : [ { "name" : "n-pos1", "type" : "xs:anyURI", "occurrence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> the potential parent node position</div>" }, { "name" : "n-pos2", "type" : "xs:anyURI", "occurrence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> the potential attribute node position</div>" } ], "returns" : { "type" : "xs:boolean", "description" : "true if the node position $n-pos2 is an attribute of the node position $n-pos1; false otherwise." }, "errors" : [ "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">zerr:ZAPI0028 if one of the given URI is not a valid node position computed by the <tt>np:node-position</tt> function.</xqdoc:error>" ] }, { "isDocumented" : true, "arity" : 2, "name" : "child-of", "qname" : "np:child-of", "signature" : "($n-pos1 as xs:anyURI, $n-pos2 as xs:anyURI) as xs:boolean external", "description" : " <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">Determines whether the node position given as second argument is\n a child of the node position given as first argument.</p>\n <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"/>\n <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">If the two positions were obtained within the same snapshot S, then the\n result of the function applies to the corresponding nodes as well, that\n is, within snapshot S, the second node is a child of the first.</p>\n <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">Otherwise, the result of the function does not imply anything about the\n positional relationship of the two nodes.</p>\n", "summary" : "<p>  Determines whether the node position given as second argument is\n a child of the node position given as first argument.</p>", "annotation_str" : "", "annotations" : [  ], "updating" : false, "parameters" : [ { "name" : "n-pos1", "type" : "xs:anyURI", "occurrence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> the potential parent node position</div>" }, { "name" : "n-pos2", "type" : "xs:anyURI", "occurrence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> the potential child node position</div>" } ], "returns" : { "type" : "xs:boolean", "description" : "true if the node position $n-pos2 is a child of the node position $n-pos1; false otherwise." }, "errors" : [ "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">zerr:ZAPI0028 if one of the given URI is not a valid node position computed by the <tt>np:node-position</tt> function.</xqdoc:error>" ] }, { "isDocumented" : true, "arity" : 2, "name" : "descendant-of", "qname" : "np:descendant-of", "signature" : "($n-pos1 as xs:anyURI, $n-pos2 as xs:anyURI) as xs:boolean external", "description" : " <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">Determines whether the node position given as second argument is\n a descendant of the node position given as first argument.</p>\n <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"/>\n <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">If the two positions were obtained within the same snapshot S, then the\n result of the function applies to the corresponding nodes as well, that\n is, within snapshot S, the second node is a descendant of the first.</p>\n <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">Otherwise, the result of the function does not imply anything about the\n positional relationship of the two nodes.</p>\n", "summary" : "<p>  Determines whether the node position given as second argument is\n a descendant of the node position given as first argument.</p>", "annotation_str" : "", "annotations" : [  ], "updating" : false, "parameters" : [ { "name" : "n-pos1", "type" : "xs:anyURI", "occurrence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> the potential ancestor node position</div>" }, { "name" : "n-pos2", "type" : "xs:anyURI", "occurrence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> the potential descendant node position</div>" } ], "returns" : { "type" : "xs:boolean", "description" : "true if the node position $n-pos2 is a descendant of the node position $n-pos1; false otherwise." }, "errors" : [ "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">zerr:ZAPI0028 if one of the given URI is not a valid node position computed by the <tt>np:node-position</tt> function.</xqdoc:error>" ] }, { "isDocumented" : true, "arity" : 2, "name" : "following-in-document-order-of", "qname" : "np:following-in-document-order-of", "signature" : "($n-pos1 as xs:anyURI, $n-pos2 as xs:anyURI) as xs:boolean external", "description" : " <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">Determines whether the node position given as second argument is\n following in document order the node position given as first argument.</p>\n <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"/>\n <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">If the two positions were obtained within the same snapshot S, then the\n result of the function applies to the corresponding nodes as well, that\n is, within snapshot S, the second node is following in document order the\n first.</p>\n <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">Otherwise, the result of the function does not imply anything about\n the positional relationship of the two nodes.</p>\n", "summary" : "<p>  Determines whether the node position given as second argument is\n following in document order the node position given as first argument.</p>", "annotation_str" : "", "annotations" : [  ], "updating" : false, "parameters" : [ { "name" : "n-pos1", "type" : "xs:anyURI", "occurrence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> the potential preceding node position</div>" }, { "name" : "n-pos2", "type" : "xs:anyURI", "occurrence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> the potential following node position</div>" } ], "returns" : { "type" : "xs:boolean", "description" : "true if the node position $n-pos2 is following in document order the node position $n-pos1; false otherwise." }, "errors" : [ "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">zerr:ZAPI0028 if one of the given URI is not a valid node position computed by the <tt>np:node-position</tt> function.</xqdoc:error>" ] }, { "isDocumented" : true, "arity" : 2, "name" : "following-of", "qname" : "np:following-of", "signature" : "($n-pos1 as xs:anyURI, $n-pos2 as xs:anyURI) as xs:boolean external", "description" : " <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">Determines whether the node position given as second argument is\n following the node position given as first argument.</p>\n <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"/>\n <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">If the two positions were obtained within the same snapshot S, then the\n result of the function applies to the corresponding nodes as well, that\n is, within snapshot S, the second node is following the first.</p>\n <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">Otherwise, the result of the function does not imply anything about the\n positional relationship of the two nodes.</p>\n", "summary" : "<p>  Determines whether the node position given as second argument is\n following the node position given as first argument.</p>", "annotation_str" : "", "annotations" : [  ], "updating" : false, "parameters" : [ { "name" : "n-pos1", "type" : "xs:anyURI", "occurrence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> the potential preceding node position</div>" }, { "name" : "n-pos2", "type" : "xs:anyURI", "occurrence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> the potential following node position</div>" } ], "returns" : { "type" : "xs:boolean", "description" : "true if node positions $n-pos1 and $n-pos2 belong to the same XML tree and $n-pos2 is following the node position $n-pos1; false otherwise." }, "errors" : [ "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">zerr:ZAPI0028 if one of the given URI is not a valid node position computed by the <tt>np:node-position</tt> function.</xqdoc:error>" ] }, { "isDocumented" : true, "arity" : 2, "name" : "following-sibling-of", "qname" : "np:following-sibling-of", "signature" : "($n-pos1 as xs:anyURI, $n-pos2 as xs:anyURI) as xs:boolean external", "description" : " <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">Determines whether the node position given as second argument is\n a following-sibling of the node position given as first argument.</p>\n <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"/>\n <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">If the two positions were obtained within the same snapshot S, then the\n result of the function applies to the corresponding nodes as well, that\n is, within snapshot S, the second node is a following-sibling of the first.</p>\n <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">Otherwise, the result of the function does not imply anything about the\n positional relationship of the two nodes.</p>\n", "summary" : "<p>  Determines whether the node position given as second argument is\n a following-sibling of the node position given as first argument.</p>", "annotation_str" : "", "annotations" : [  ], "updating" : false, "parameters" : [ { "name" : "n-pos1", "type" : "xs:anyURI", "occurrence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> the potential preceding-sibling node position</div>" }, { "name" : "n-pos2", "type" : "xs:anyURI", "occurrence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> the potential following-sibling node position</div>" } ], "returns" : { "type" : "xs:boolean", "description" : "true if the node position $n-pos2 is a following-sibling of the node position $n-pos1; false otherwise." }, "errors" : [ "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">zerr:ZAPI0028 if one of the given URI is not a valid node position computed by the <tt>np:node-position</tt> function.</xqdoc:error>" ] }, { "isDocumented" : true, "arity" : 1, "name" : "in-collection", "qname" : "np:in-collection", "signature" : "($n-pos as xs:anyURI) as xs:boolean external", "description" : " <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">Determines whether a node position belongs to a collection.</p>\n", "summary" : "<p>  Determines whether a node position belongs to a collection.</p>", "annotation_str" : "", "annotations" : [  ], "updating" : false, "parameters" : [ { "name" : "n-pos", "type" : "xs:anyURI", "occurrence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> the node position</div>" } ], "returns" : { "type" : "xs:boolean", "description" : "true if the node position $n-pos belongs to a collection; false otherwise." }, "errors" : [ "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">zerr:ZAPI0028 if the given URI is not a valid node position computed by the <tt>np:node-position</tt> function.</xqdoc:error>" ] }, { "isDocumented" : true, "arity" : 2, "name" : "in-same-collection-of", "qname" : "np:in-same-collection-of", "signature" : "($n-pos1 as xs:anyURI, $n-pos2 as xs:anyURI) as xs:boolean external", "description" : " <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">Determines whether two node positions belong to the same collection.</p>\n <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"/>\n <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">If the two positions were obtained within the same snapshot S, then the\n result of the function applies to the corresponding nodes as well, that\n is, within snapshot S, the two nodes belong to the same collection.</p>\n <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">Otherwise, the result of the function does not imply anything about\n the positional relationship of the two nodes.</p>\n", "summary" : "<p>  Determines whether two node positions belong to the same collection.</p>", "annotation_str" : "", "annotations" : [  ], "updating" : false, "parameters" : [ { "name" : "n-pos1", "type" : "xs:anyURI", "occurrence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> a node position</div>" }, { "name" : "n-pos2", "type" : "xs:anyURI", "occurrence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> a node position</div>" } ], "returns" : { "type" : "xs:boolean", "description" : "true if the two nodes whose node positions are $n-pos1 and $n-pos2 belong to the same collection." }, "errors" : [ "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">zerr:ZAPI0028 if one of the given URI is not a valid node position computed by the <tt>np:node-position</tt> function.</xqdoc:error>" ] }, { "isDocumented" : true, "arity" : 2, "name" : "in-same-tree-of", "qname" : "np:in-same-tree-of", "signature" : "($n-pos1 as xs:anyURI, $n-pos2 as xs:anyURI) as xs:boolean external", "description" : " <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">Determines whether two node positions belong to the same tree.</p>\n <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"/>\n <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">If the two positions were obtained within the same snapshot S, then the\n result of the function applies to the corresponding nodes as well, that\n is, within snapshot S, the two nodes belong to the same tree.</p>\n <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">Otherwise, the result of the function does not imply anything about\n the positional relationship of the two nodes.</p>\n", "summary" : "<p>  Determines whether two node positions belong to the same tree.</p>", "annotation_str" : "", "annotations" : [  ], "updating" : false, "parameters" : [ { "name" : "n-pos1", "type" : "xs:anyURI", "occurrence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> a node position</div>" }, { "name" : "n-pos2", "type" : "xs:anyURI", "occurrence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> a node position</div>" } ], "returns" : { "type" : "xs:boolean", "description" : "true if the two nodes whose node positions are $n-pos1 and $n-pos2 belong to the same tree." }, "errors" : [ "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">zerr:ZAPI0028 if one of the given URI is not a valid node position computed by the <tt>np:node-position</tt> function.</xqdoc:error>" ] }, { "isDocumented" : true, "arity" : 2, "name" : "in-subtree-of", "qname" : "np:in-subtree-of", "signature" : "($n-pos1 as xs:anyURI, $n-pos2 as xs:anyURI) as xs:boolean external", "description" : " <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">Determines whether the node position given as second argument belongs\n to the subtree rooted at the node position given as first argument.</p>\n <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"/>\n <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">If the two positions were obtained within the same snapshot S, then the\n result of the function applies to the corresponding nodes as well, that\n is, within snapshot S, the second node belongs to the subtree rooted at the\n first. Otherwise, the result of the function does not imply anything about\n the positional relationship of the two nodes.</p>\n <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"/>\n <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">This function differs from np:descendant-of in the way it treats attribute\n nodes. np:descendant-of follows the XQuery/XPath specification for the\n descendant axis, and as a result, it does not consider attributes as\n descendants of any nodes; it will always return false if $n-pos2 was\n obtained from an attribute node.In contrast, np:in-subtree-of will return\n true if $n-pos2 was obtained from an attribute node that appeared in the\n subtree of the node that $n-pos1 was obtained from.</p>\n", "summary" : "<p>  Determines whether the node position given as second argument belongs\n to the subtree rooted at the node position given as first argument.</p>", "annotation_str" : "", "annotations" : [  ], "updating" : false, "parameters" : [ { "name" : "n-pos1", "type" : "xs:anyURI", "occurrence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> the potential subtree root node position</div>" }, { "name" : "n-pos2", "type" : "xs:anyURI", "occurrence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> the potential node in the subtree node position</div>" } ], "returns" : { "type" : "xs:boolean", "description" : "true if the node position $n-pos2 belongs to the subtree rooted at the node position $n-pos1; false otherwise." }, "errors" : [ "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">zerr:ZAPI0028 if one of the given URI is not a valid node position computed by the <tt>np:node-position</tt> function.</xqdoc:error>" ] }, { "isDocumented" : true, "arity" : 1, "name" : "is-attribute", "qname" : "np:is-attribute", "signature" : "($n-pos1 as xs:anyURI) as xs:boolean external", "description" : " <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">Determines whether a node position corresponds to an attribute node.</p>\n", "summary" : "<p>  Determines whether a node position corresponds to an attribute node.</p>", "annotation_str" : "", "annotations" : [  ], "updating" : false, "parameters" : [ { "name" : "n-pos1", "type" : "xs:anyURI", "occurrence" : null, "description" : "" } ], "returns" : { "type" : "xs:boolean", "description" : "true if the node position $n-pos corresponds to an attribute; false otherwise." }, "errors" : [ "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">zerr:ZAPI0028 if the given URI is not a valid node position computed by the <tt>np:node-position</tt> function.</xqdoc:error>" ] }, { "isDocumented" : true, "arity" : 1, "name" : "is-comment", "qname" : "np:is-comment", "signature" : "($n-pos1 as xs:anyURI) as xs:boolean external", "description" : " <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">Determines whether a node position corresponds to a comment node.</p>\n", "summary" : "<p>  Determines whether a node position corresponds to a comment node.</p>", "annotation_str" : "", "annotations" : [  ], "updating" : false, "parameters" : [ { "name" : "n-pos1", "type" : "xs:anyURI", "occurrence" : null, "description" : "" } ], "returns" : { "type" : "xs:boolean", "description" : "true if the node position $n-pos corresponds to an comment; false otherwise." }, "errors" : [ "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">zerr:ZAPI0028 if the given URI is not a valid node position computed by the <tt>np:node-position</tt> function.</xqdoc:error>" ] }, { "isDocumented" : true, "arity" : 1, "name" : "is-document", "qname" : "np:is-document", "signature" : "($n-pos1 as xs:anyURI) as xs:boolean external", "description" : " <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">Determines whether a node position corresponds to a document node.</p>\n", "summary" : "<p>  Determines whether a node position corresponds to a document node.</p>", "annotation_str" : "", "annotations" : [  ], "updating" : false, "parameters" : [ { "name" : "n-pos1", "type" : "xs:anyURI", "occurrence" : null, "description" : "" } ], "returns" : { "type" : "xs:boolean", "description" : "true if the node position $n-pos corresponds to a document; false otherwise." }, "errors" : [ "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">zerr:ZAPI0028 if the given URI is not a valid node position computed by the <tt>np:node-position</tt> function.</xqdoc:error>" ] }, { "isDocumented" : true, "arity" : 1, "name" : "is-element", "qname" : "np:is-element", "signature" : "($n-pos1 as xs:anyURI) as xs:boolean external", "description" : " <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">Determines whether a node position corresponds to an element node.</p>\n", "summary" : "<p>  Determines whether a node position corresponds to an element node.</p>", "annotation_str" : "", "annotations" : [  ], "updating" : false, "parameters" : [ { "name" : "n-pos1", "type" : "xs:anyURI", "occurrence" : null, "description" : "" } ], "returns" : { "type" : "xs:boolean", "description" : "true if the node position $n-pos corresponds to an element; false otherwise." }, "errors" : [ "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">zerr:ZAPI0028 if the given URI is not a valid node position computed by the <tt>np:node-position</tt> function.</xqdoc:error>" ] }, { "isDocumented" : true, "arity" : 1, "name" : "is-processing-instruction", "qname" : "np:is-processing-instruction", "signature" : "($n-pos1 as xs:anyURI) as xs:boolean external", "description" : " <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">Determines whether a node position corresponds to an processing-instruction\n node.</p>\n", "summary" : "<p>  Determines whether a node position corresponds to an processing-instruction\n node.</p>", "annotation_str" : "", "annotations" : [  ], "updating" : false, "parameters" : [ { "name" : "n-pos1", "type" : "xs:anyURI", "occurrence" : null, "description" : "" } ], "returns" : { "type" : "xs:boolean", "description" : "true if the node position $n-pos corresponds to a processing instruction; false otherwise." }, "errors" : [ "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">zerr:ZAPI0028 if the given URI is not a valid node position computed by the <tt>np:node-position</tt> function.</xqdoc:error>" ] }, { "isDocumented" : true, "arity" : 1, "name" : "is-text", "qname" : "np:is-text", "signature" : "($n-pos1 as xs:anyURI) as xs:boolean external", "description" : " <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">Determines whether a node position corresponds to a text node.</p>\n", "summary" : "<p>  Determines whether a node position corresponds to a text node.</p>", "annotation_str" : "", "annotations" : [  ], "updating" : false, "parameters" : [ { "name" : "n-pos1", "type" : "xs:anyURI", "occurrence" : null, "description" : "" } ], "returns" : { "type" : "xs:boolean", "description" : "true if the node position $n-pos corresponds to a text; false otherwise." }, "errors" : [ "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">zerr:ZAPI0028 if the given URI is not a valid node position computed by the <tt>np:node-position</tt> function.</xqdoc:error>" ] }, { "isDocumented" : true, "arity" : 1, "name" : "level", "qname" : "np:level", "signature" : "($n-pos as xs:anyURI) as xs:integer external", "description" : " <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">Computes the level of a node position in its tree.</p>\n <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"/>\n <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">Note: The root node of a tree is at level one.</p>\n <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"/>\n <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">The result of the function applies to the corresponding node as well,\n that is, within the snapshot in which the position was computed, the node\n level is the returned one.</p>\n <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">The result of the function does not imply anything about the\n node level in other snapshots.</p>\n", "summary" : "<p>  Computes the level of a node position in its tree.</p>", "annotation_str" : "", "annotations" : [  ], "updating" : false, "parameters" : [ { "name" : "n-pos", "type" : "xs:anyURI", "occurrence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> the node position of the node whose level should be determined.</div>" } ], "returns" : { "type" : "xs:integer", "description" : "the level in the tree of the node position $n-pos as xs:integer." }, "errors" : [ "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">zerr:ZAPI0028 if the given URI is not a valid node position computed by the <tt>np:node-position</tt> function.</xqdoc:error>" ] }, { "isDocumented" : true, "arity" : 1, "name" : "node-position", "qname" : "np:node-position", "signature" : "($arg as node()) as xs:anyURI external", "description" : " <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">Return a URI item containing positional information for a given node.</p>\n <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"/>\n <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">Within a snapshot, each has a different positional URI. However,\n different nodes in different snapshots might have the same URI.</p>\n", "summary" : "<p>  Return a URI item containing positional information for a given node.</p>", "annotation_str" : "", "annotations" : [  ], "updating" : false, "parameters" : [ { "name" : "arg", "type" : "node()", "occurrence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> the node for which the positional information URI should be computed</div>" } ], "returns" : { "type" : "xs:anyURI", "description" : "the opaque positional information URI of the node." }, "errors" : [  ] }, { "isDocumented" : true, "arity" : 2, "name" : "parent-of", "qname" : "np:parent-of", "signature" : "($n-pos1 as xs:anyURI, $n-pos2 as xs:anyURI) as xs:boolean external", "description" : " <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">Determines whether the node position given as second argument is\n the parent of the node position given as first argument.</p>\n <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"/>\n <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">If the two positions were obtained within the same snapshot S, then the\n result of the function applies to the corresponding nodes as well, that\n is, within snapshot S, the second node is the parent of the first.</p>\n <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">Otherwise, the result of the function does not imply anything about the\n positional relationship of the two nodes.</p>\n", "summary" : "<p>  Determines whether the node position given as second argument is\n the parent of the node position given as first argument.</p>", "annotation_str" : "", "annotations" : [  ], "updating" : false, "parameters" : [ { "name" : "n-pos1", "type" : "xs:anyURI", "occurrence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> the potential child node position</div>" }, { "name" : "n-pos2", "type" : "xs:anyURI", "occurrence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> the potential parent node position</div>" } ], "returns" : { "type" : "xs:boolean", "description" : "true if the node position $n-pos2 is the parent of the node position $n-pos1; false otherwise." }, "errors" : [ "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">zerr:ZAPI0028 if one of the given URI is not a valid node position computed by the <tt>np:node-position</tt> function.</xqdoc:error>" ] }, { "isDocumented" : true, "arity" : 2, "name" : "preceding-in-document-order-of", "qname" : "np:preceding-in-document-order-of", "signature" : "($n-pos1 as xs:anyURI, $n-pos2 as xs:anyURI) as xs:boolean external", "description" : " <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">Determines whether the node position given as second argument is\n preceding in document order the node position given as first argument.</p>\n <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"/>\n <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">If the two positions were obtained within the same snapshot S, then the\n result of the function applies to the corresponding nodes as well, that\n is, within snapshot S, the second node is preceding in document order the\n first.</p>\n <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">Otherwise, the result of the function does not imply anything about\n the positional relationship of the two nodes.</p>\n", "summary" : "<p>  Determines whether the node position given as second argument is\n preceding in document order the node position given as first argument.</p>", "annotation_str" : "", "annotations" : [  ], "updating" : false, "parameters" : [ { "name" : "n-pos1", "type" : "xs:anyURI", "occurrence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> the potential following node position</div>" }, { "name" : "n-pos2", "type" : "xs:anyURI", "occurrence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> the potential preceding node position</div>" } ], "returns" : { "type" : "xs:boolean", "description" : "true if the node position $n-pos2 is preceding in document order the node position $n-pos1; false otherwise." }, "errors" : [ "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">zerr:ZAPI0028 if one of the given URI is not a valid node position computed by the <tt>np:node-position</tt> function.</xqdoc:error>" ] }, { "isDocumented" : true, "arity" : 2, "name" : "preceding-of", "qname" : "np:preceding-of", "signature" : "($n-pos1 as xs:anyURI, $n-pos2 as xs:anyURI) as xs:boolean external", "description" : " <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">Determines whether the node position given as second argument is\n preceding the node position given as first argument.</p>\n <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"/>\n <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">If the two positions were obtained within the same snapshot S, then the\n result of the function applies to the corresponding nodes as well, that\n is, within snapshot S, the second node is preceding the first.</p>\n <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">Otherwise, the result of the function does not imply anything about the\n positional relationship of the two nodes.</p>\n", "summary" : "<p>  Determines whether the node position given as second argument is\n preceding the node position given as first argument.</p>", "annotation_str" : "", "annotations" : [  ], "updating" : false, "parameters" : [ { "name" : "n-pos1", "type" : "xs:anyURI", "occurrence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> the potential following node position</div>" }, { "name" : "n-pos2", "type" : "xs:anyURI", "occurrence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> the potential preceding node position</div>" } ], "returns" : { "type" : "xs:boolean", "description" : "true if node positions $n-pos1 and $n-pos2 belong to the same XML tree and $n-pos2 is preceding the node position $n-pos1; false otherwise." }, "errors" : [ "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">zerr:ZAPI0028 if one of the given URI is not a valid node position computed by the <tt>np:node-position</tt> function.</xqdoc:error>" ] }, { "isDocumented" : true, "arity" : 2, "name" : "preceding-sibling-of", "qname" : "np:preceding-sibling-of", "signature" : "($n-pos1 as xs:anyURI, $n-pos2 as xs:anyURI) as xs:boolean external", "description" : " <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">Determines whether the node position given as second argument is\n a preceding-sibling of the node position given as first argument.</p>\n <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"/>\n <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">If the two positions were obtained within the same snapshot S, then the\n result of the function applies to the corresponding nodes as well, that\n is, within snapshot S, the second node is a preceding-sibling of the first.</p>\n <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">Otherwise, the result of the function does not imply anything about the\n positional relationship of the two nodes.</p>\n", "summary" : "<p>  Determines whether the node position given as second argument is\n a preceding-sibling of the node position given as first argument.</p>", "annotation_str" : "", "annotations" : [  ], "updating" : false, "parameters" : [ { "name" : "n-pos1", "type" : "xs:anyURI", "occurrence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> the potential following-sibling node position</div>" }, { "name" : "n-pos2", "type" : "xs:anyURI", "occurrence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> the potential preceding-sibling node position</div>" } ], "returns" : { "type" : "xs:boolean", "description" : "true if the node position $n-pos2 is a preceding-sibling of the node position $n-pos1; false otherwise." }, "errors" : [ "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">zerr:ZAPI0028 if one of the given URI is not a valid node position computed by the <tt>np:node-position</tt> function.</xqdoc:error>" ] }, { "isDocumented" : true, "arity" : 2, "name" : "sibling-of", "qname" : "np:sibling-of", "signature" : "($n-pos1 as xs:anyURI, $n-pos2 as xs:anyURI) as xs:boolean external", "description" : " <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">Determines whether two node positions are siblings.</p>\n <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"/>\n <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">If the two positions were obtained within the same snapshot S, then the\n result of the function applies to the corresponding nodes as well, that\n is, within snapshot S, the second node is a sibling of the first.</p>\n <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">Otherwise, the result of the function does not imply anything about the\n positional relationship of the two nodes.</p>\n", "summary" : "<p>  Determines whether two node positions are siblings.</p>", "annotation_str" : "", "annotations" : [  ], "updating" : false, "parameters" : [ { "name" : "n-pos1", "type" : "xs:anyURI", "occurrence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> a node position</div>" }, { "name" : "n-pos2", "type" : "xs:anyURI", "occurrence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> a node position</div>" } ], "returns" : { "type" : "xs:boolean", "description" : "true if the two node positions $n-pos1 and $n-pos2 are siblings; false otherwise." }, "errors" : [ "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">zerr:ZAPI0028 if one of the given URI is not a valid node position computed by the <tt>np:node-position</tt> function.</xqdoc:error>" ] } ], "variables" : [  ] }, "http://www.zorba-xquery.com/modules/cryptography/hash" : { "ns" : "http://www.zorba-xquery.com/modules/cryptography/hash", "description" : " This module provides functions that perform different hash operations.\n", "sees" : [  ], "authors" : [ "<xqdoc:author xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">Gabriel Petrovay, Markus Pilman</xqdoc:author>" ], "version" : null, "encoding" : "utf-8", "namespaces" : [ { "uri" : "http://www.zorba-xquery.com/modules/cryptography/hash", "prefix" : "hash" }, { "uri" : "http://zorba.io/options/versioning", "prefix" : "ver" } ], "functions" : [ { "isDocumented" : true, "arity" : 2, "name" : "hash-impl", "qname" : "hash:hash-impl", "signature" : "($value as xs:string, $alg as xs:string) as xs:string external", "description" : " This function computes a hash value of the string provided as parameter.\n The function expects the hash algorithm to be used as parameter.\n", "summary" : "<p> This function computes a hash value of the string provided as parameter.</p>", "annotation_str" : "", "annotations" : [  ], "updating" : false, "parameters" : [ { "name" : "value", "type" : "xs:string", "occurrence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> The string to be hashed.</div>" }, { "name" : "alg", "type" : "xs:string", "occurrence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> The algorithm to use for this hashing operation. Currently only \"md5\" and \"sha1\" algorithms are available. If no valid algorithm name is given, md5 will be used.</div>" } ], "returns" : { "type" : "xs:string", "description" : "The hash of the provided string. In case SHA1 is used, the resulting hash value is base64 encoded." }, "errors" : [  ] }, { "isDocumented" : true, "arity" : 1, "name" : "md5", "qname" : "hash:md5", "signature" : "($value as xs:string) as xs:string", "description" : " Computes the MD5 hash of the string provided as parameter.\n", "summary" : "<p> Computes the MD5 hash of the string provided as parameter.</p>", "annotation_str" : "", "annotations" : [  ], "updating" : false, "parameters" : [ { "name" : "value", "type" : "xs:string", "occurrence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> The string to hash.</div>" } ], "returns" : { "type" : "xs:string", "description" : "The MD5 hash of the provided string." }, "errors" : [  ] }, { "isDocumented" : true, "arity" : 1, "name" : "sha1", "qname" : "hash:sha1", "signature" : "($value as xs:string) as xs:string", "description" : " Computes the SHA1 hash of the string provided as parameter.\n", "summary" : "<p> Computes the SHA1 hash of the string provided as parameter.</p>", "annotation_str" : "", "annotations" : [  ], "updating" : false, "parameters" : [ { "name" : "value", "type" : "xs:string", "occurrence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> The string to hash.</div>" } ], "returns" : { "type" : "xs:string", "description" : "The base64 encoded SHA1 hash of the provided string." }, "errors" : [  ] } ], "variables" : [  ] }, "http://zorba.io/modules/excel/lookup" : { "ns" : "http://zorba.io/modules/excel/lookup", "description" : " This module implements some Excel 2003 lookup functions.\n", "sees" : [ "<xqdoc:see xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"><a href=\"http://office.microsoft.com/en-us/excel/CH062528281033.aspx\" target=\"_blank\">Excel 2003 Documentation: Lookup Functions</a></xqdoc:see>" ], "authors" : [ "<xqdoc:author xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">Daniel Turcanu</xqdoc:author>" ], "version" : null, "encoding" : "utf-8", "namespaces" : [ { "uri" : "http://zorba.io/modules/excel/lookup", "prefix" : "excel" }, { "uri" : "http://zorba.io/modules/excel/errors", "prefix" : "excel-err" }, { "uri" : "http://zorba.io/modules/excel/math", "prefix" : "excel-math" }, { "uri" : "http://zorba.io/options/versioning", "prefix" : "ver" } ], "functions" : [ { "isDocumented" : true, "arity" : 2, "name" : "choose", "qname" : "excel:choose", "signature" : "($index_num as xs:integer, $values as xs:anyAtomicType*) as xs:anyAtomicType", "description" : " Uses index_num to return a value from the sequence of value arguments.\n", "summary" : "<p> Uses index_num to return a value from the sequence of value arguments.</p>", "annotation_str" : "", "annotations" : [  ], "updating" : false, "parameters" : [ { "name" : "index_num", "type" : "xs:integer", "occurrence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> The position in the sequence, 1 based.</div>" }, { "name" : "values", "type" : "xs:anyAtomicType", "occurrence" : "*", "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> The sequence of values.</div>" } ], "returns" : { "type" : "xs:anyAtomicType", "description" : "The value at the index position." }, "errors" : [ "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">excel-err:Value if index is smaller than 1 or bigger than the size of sequence.</xqdoc:error>" ] }, { "isDocumented" : true, "arity" : 30, "name" : "choose", "qname" : "excel:choose", "signature" : "($index_num as xs:integer, $value_sequence1 as xs:anyAtomicType*, $value_sequence2 as xs:anyAtomicType*, $value_sequence3 as xs:anyAtomicType*, $value_sequence4 as xs:anyAtomicType*, $value_sequence5 as xs:anyAtomicType*, $value_sequence6 as xs:anyAtomicType*, $value_sequence7 as xs:anyAtomicType*, $value_sequence8 as xs:anyAtomicType*, $value_sequence9 as xs:anyAtomicType*, $value_sequence10 as xs:anyAtomicType*, $value_sequence11 as xs:anyAtomicType*, $value_sequence12 as xs:anyAtomicType*, $value_sequence13 as xs:anyAtomicType*, $value_sequence14 as xs:anyAtomicType*, $value_sequence15 as xs:anyAtomicType*, $value_sequence16 as xs:anyAtomicType*, $value_sequence17 as xs:anyAtomicType*, $value_sequence18 as xs:anyAtomicType*, $value_sequence19 as xs:anyAtomicType*, $value_sequence20 as xs:anyAtomicType*, $value_sequence21 as xs:anyAtomicType*, $value_sequence22 as xs:anyAtomicType*, $value_sequence23 as xs:anyAtomicType*, $value_sequence24 as xs:anyAtomicType*, $value_sequence25 as xs:anyAtomicType*, $value_sequence26 as xs:anyAtomicType*, $value_sequence27 as xs:anyAtomicType*, $value_sequence28 as xs:anyAtomicType*, $value_sequence29 as xs:anyAtomicType*) as xs:anyAtomicType*", "description" : " Uses index_num to return a sequence from the list of sequences.\n Use CHOOSE to select one of up to 29 sequences based on the index number.\n", "summary" : "<p> Uses index_num to return a sequence from the list of sequences.</p>", "annotation_str" : "", "annotations" : [  ], "updating" : false, "parameters" : [ { "name" : "index_num", "type" : "xs:integer", "occurrence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> the position in the sequence, 1 based</div>" }, { "name" : "value_sequence1", "type" : "xs:anyAtomicType", "occurrence" : "*", "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> a sequence of values. Specify the empty sequence () if you don't need it.</div>" }, { "name" : "value_sequence2", "type" : "xs:anyAtomicType", "occurrence" : "*", "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> a sequence of values. Specify the empty sequence () if you don't need it.</div>" }, { "name" : "value_sequence3", "type" : "xs:anyAtomicType", "occurrence" : "*", "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> a sequence of values. Specify the empty sequence () if you don't need it.</div>" }, { "name" : "value_sequence4", "type" : "xs:anyAtomicType", "occurrence" : "*", "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> a sequence of values. Specify the empty sequence () if you don't need it.</div>" }, { "name" : "value_sequence5", "type" : "xs:anyAtomicType", "occurrence" : "*", "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> a sequence of values. Specify the empty sequence () if you don't need it.</div>" }, { "name" : "value_sequence6", "type" : "xs:anyAtomicType", "occurrence" : "*", "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> a sequence of values. Specify the empty sequence () if you don't need it.</div>" }, { "name" : "value_sequence7", "type" : "xs:anyAtomicType", "occurrence" : "*", "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> a sequence of values. Specify the empty sequence () if you don't need it.</div>" }, { "name" : "value_sequence8", "type" : "xs:anyAtomicType", "occurrence" : "*", "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> a sequence of values. Specify the empty sequence () if you don't need it.</div>" }, { "name" : "value_sequence9", "type" : "xs:anyAtomicType", "occurrence" : "*", "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> a sequence of values. Specify the empty sequence () if you don't need it.</div>" }, { "name" : "value_sequence10", "type" : "xs:anyAtomicType", "occurrence" : "*", "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> a sequence of values. Specify the empty sequence () if you don't need it.</div>" }, { "name" : "value_sequence11", "type" : "xs:anyAtomicType", "occurrence" : "*", "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> a sequence of values. Specify the empty sequence () if you don't need it.</div>" }, { "name" : "value_sequence12", "type" : "xs:anyAtomicType", "occurrence" : "*", "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> a sequence of values. Specify the empty sequence () if you don't need it.</div>" }, { "name" : "value_sequence13", "type" : "xs:anyAtomicType", "occurrence" : "*", "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> a sequence of values. Specify the empty sequence () if you don't need it.</div>" }, { "name" : "value_sequence14", "type" : "xs:anyAtomicType", "occurrence" : "*", "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> a sequence of values. Specify the empty sequence () if you don't need it.</div>" }, { "name" : "value_sequence15", "type" : "xs:anyAtomicType", "occurrence" : "*", "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> a sequence of values. Specify the empty sequence () if you don't need it.</div>" }, { "name" : "value_sequence16", "type" : "xs:anyAtomicType", "occurrence" : "*", "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> a sequence of values. Specify the empty sequence () if you don't need it.</div>" }, { "name" : "value_sequence17", "type" : "xs:anyAtomicType", "occurrence" : "*", "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> a sequence of values. Specify the empty sequence () if you don't need it.</div>" }, { "name" : "value_sequence18", "type" : "xs:anyAtomicType", "occurrence" : "*", "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> a sequence of values. Specify the empty sequence () if you don't need it.</div>" }, { "name" : "value_sequence19", "type" : "xs:anyAtomicType", "occurrence" : "*", "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> a sequence of values. Specify the empty sequence () if you don't need it.</div>" }, { "name" : "value_sequence20", "type" : "xs:anyAtomicType", "occurrence" : "*", "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> a sequence of values. Specify the empty sequence () if you don't need it.</div>" }, { "name" : "value_sequence21", "type" : "xs:anyAtomicType", "occurrence" : "*", "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> a sequence of values. Specify the empty sequence () if you don't need it.</div>" }, { "name" : "value_sequence22", "type" : "xs:anyAtomicType", "occurrence" : "*", "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> a sequence of values. Specify the empty sequence () if you don't need it.</div>" }, { "name" : "value_sequence23", "type" : "xs:anyAtomicType", "occurrence" : "*", "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> a sequence of values. Specify the empty sequence () if you don't need it.</div>" }, { "name" : "value_sequence24", "type" : "xs:anyAtomicType", "occurrence" : "*", "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> a sequence of values. Specify the empty sequence () if you don't need it.</div>" }, { "name" : "value_sequence25", "type" : "xs:anyAtomicType", "occurrence" : "*", "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> a sequence of values. Specify the empty sequence () if you don't need it.</div>" }, { "name" : "value_sequence26", "type" : "xs:anyAtomicType", "occurrence" : "*", "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> a sequence of values. Specify the empty sequence () if you don't need it.</div>" }, { "name" : "value_sequence27", "type" : "xs:anyAtomicType", "occurrence" : "*", "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> a sequence of values. Specify the empty sequence () if you don't need it.</div>" }, { "name" : "value_sequence28", "type" : "xs:anyAtomicType", "occurrence" : "*", "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> a sequence of values. Specify the empty sequence () if you don't need it.</div>" }, { "name" : "value_sequence29", "type" : "xs:anyAtomicType", "occurrence" : "*", "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> a sequence of values. Specify the empty sequence () if you don't need it.</div>" } ], "returns" : { "type" : "xs:anyAtomicType*", "description" : "The value at the index position" }, "errors" : [ "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">excel-err:Value if index is smaller than 1 or bigger than 29</xqdoc:error>" ] }, { "isDocumented" : true, "arity" : 5, "name" : "hlookup", "qname" : "excel:hlookup", "signature" : "($lookup_value as xs:anyAtomicType, $table_array as xs:anyAtomicType+, $table_width as xs:integer, $table_height as xs:integer, $row_index_num as xs:integer) as xs:anyAtomicType", "description" : " Same as above, only that range_lookup is defaulted to true.\n That is, this Hlookup looks for the approximate value\n   and the first row must be ordered ascending.\n", "summary" : "<p> Same as above, only that range_lookup is defaulted to true.</p>", "annotation_str" : "", "annotations" : [  ], "updating" : false, "parameters" : [ { "name" : "lookup_value", "type" : "xs:anyAtomicType", "occurrence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> the value to be searched. Allowed types are numeric, string, boolean. <p/> Boolean values are compared only with booleans. Numbers are compared only with numbers, if range_lookup is not zero. The other types are converted to string and compared to string value of all values.</div>" }, { "name" : "table_array", "type" : "xs:anyAtomicType", "occurrence" : "+", "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> the sequence of values, row after row</div>" }, { "name" : "table_width", "type" : "xs:integer", "occurrence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> the number of values in a row</div>" }, { "name" : "table_height", "type" : "xs:integer", "occurrence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> the number of rows</div>" }, { "name" : "row_index_num", "type" : "xs:integer", "occurrence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> the row index, 1 based</div>" } ], "returns" : { "type" : "xs:anyAtomicType", "description" : "The value found, with original type" }, "errors" : [ "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">excel-err:Value if the array contains less elements than specified by table_height and table_width</xqdoc:error>", "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">excel-err:Value if row_index_num is outside the range 1 .. table_height</xqdoc:error>", "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">excel-err:Value if range_lookup is true and the value searched is smaller than the first value in the header</xqdoc:error>", "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">excel-err:Value if range_lookup=false and the value cannot be found</xqdoc:error>" ] }, { "isDocumented" : true, "arity" : 6, "name" : "hlookup", "qname" : "excel:hlookup", "signature" : "($lookup_value as xs:anyAtomicType, $table_array as xs:anyAtomicType+, $table_width as xs:integer, $table_height as xs:integer, $row_index_num as xs:integer, $range_lookup as xs:boolean) as xs:anyAtomicType", "description" : " Searches for a value in the top row of an array of values,\n   and then returns a value in the same column from a row you specify in the array.\n <dl xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">Array is specified with 3 parameters:\n <dt>table_array</dt> <dd>is a sequence of elements, first row first, then second row and so on</dd>\n <dt>table_width</dt> <dd>specifies the number of elements in a row</dd>\n <dt>table_height</dt> <dd>specifies the number of rows</dd></dl>\n The number of elements in table_array must be equal or more than table_width * table_height.<p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"/>\n For wildchar matching, the XQuery regex matcher is used.\n", "summary" : "<p> Searches for a value in the top row of an array of values,\n   and then returns a value in the same column from a row you specify in the array.</p>", "annotation_str" : "", "annotations" : [  ], "updating" : false, "parameters" : [ { "name" : "lookup_value", "type" : "xs:anyAtomicType", "occurrence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> the value to be searched. Allowed types are numeric, string, boolean. <p/> Boolean values are compared only with booleans. Numbers are compared only with numbers, if range_lookup is not zero. The other types are converted to string and compared to string value of all values.</div>" }, { "name" : "table_array", "type" : "xs:anyAtomicType", "occurrence" : "+", "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> the sequence of values, row after row</div>" }, { "name" : "table_width", "type" : "xs:integer", "occurrence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> the number of values in a row</div>" }, { "name" : "table_height", "type" : "xs:integer", "occurrence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> the number of rows</div>" }, { "name" : "row_index_num", "type" : "xs:integer", "occurrence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> the row index, 1 based</div>" }, { "name" : "range_lookup", "type" : "xs:boolean", "occurrence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> <dl>specifies the algorithm to use: <dt>true</dt> <dd>find approximative match. First row of array must be sorted in ascending order.</dd> <dt>false</dt> <dd>find exact match, using xquery regex First row of array can be in any order. </dd></dl></div>" } ], "returns" : { "type" : "xs:anyAtomicType", "description" : "The value found, with original type" }, "errors" : [ "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">excel-err:Value if the array contains less elements than specified by table_height and table_width</xqdoc:error>", "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">excel-err:Value if row_index_num is outside the range 1 .. table_height</xqdoc:error>", "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">excel-err:Value if range_lookup is true and the value searched is smaller than the first value in the header</xqdoc:error>", "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">excel-err:Value if range_lookup=false and the value cannot be found</xqdoc:error>" ] }, { "isDocumented" : true, "arity" : 5, "name" : "index", "qname" : "excel:index", "signature" : "($array as xs:anyAtomicType+, $array_height as xs:integer, $array_width as xs:integer, $row_num as xs:integer, $column_num as xs:integer) as xs:anyAtomicType+", "description" : " Returns a value from within an array.<p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"/>\n This is the Array form of the Excel Index function.<p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"/>\n <dl xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">Array is specified with 3 parameters:\n <dt>array</dt> <dd>is a sequence of elements, first row first, then second row and so on</dd>\n <dt>array_height</dt> <dd>specifies the number of rows</dd>\n <dt>array_width</dt> <dd>specifies the number of elements in a row</dd></dl>\n The number of elements in array must be equal or more than array_width * array_height.\n", "summary" : "<p> Returns a value from within an array.</p>", "annotation_str" : "", "annotations" : [  ], "updating" : false, "parameters" : [ { "name" : "array", "type" : "xs:anyAtomicType", "occurrence" : "+", "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> the sequence of values, row after row</div>" }, { "name" : "array_height", "type" : "xs:integer", "occurrence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> the number of rows</div>" }, { "name" : "array_width", "type" : "xs:integer", "occurrence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> the number of values in a row</div>" }, { "name" : "row_num", "type" : "xs:integer", "occurrence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> the row position of the value, 1 based</div>" }, { "name" : "column_num", "type" : "xs:integer", "occurrence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> the column position of the value, 1 based</div>" } ], "returns" : { "type" : "xs:anyAtomicType+", "description" : "The value from x-y in the array" }, "errors" : [ "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">excel-err:Value if the array contains less elements than specified by table_height and table_width</xqdoc:error>", "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">excel-err:Ref if row_num is outside the range</xqdoc:error>" ] }, { "isDocumented" : true, "arity" : 3, "name" : "lookup", "qname" : "excel:lookup", "signature" : "($lookup_value as xs:anyAtomicType, $lookup_vector as xs:anyAtomicType+, $result_vector as xs:anyAtomicType+) as xs:anyAtomicType", "description" : " The Vector form. <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"/>\n Looks in a sequence for a value\n   and return a value from the same position in a second sequence.\n If the value is not found, then it matches the largest value in lookup_vector\n   that is less than or equal to lookup_value.\n", "summary" : "<p> The Vector form.</p>", "annotation_str" : "", "annotations" : [  ], "updating" : false, "parameters" : [ { "name" : "lookup_value", "type" : "xs:anyAtomicType", "occurrence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> the value to be searched</div>" }, { "name" : "lookup_vector", "type" : "xs:anyAtomicType", "occurrence" : "+", "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> the sequence to be searched, in ascending order.</div>" }, { "name" : "result_vector", "type" : "xs:anyAtomicType", "occurrence" : "+", "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> the sequence containing the result values</div>" } ], "returns" : { "type" : "xs:anyAtomicType", "description" : "a value from $result_vector" }, "errors" : [ "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">excel-err:NA if lookup value is smaller than the first value in lookup_vector</xqdoc:error>", "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">excel-err:NA if position found is outside the result range</xqdoc:error>" ] }, { "isDocumented" : true, "arity" : 4, "name" : "lookup", "qname" : "excel:lookup", "signature" : "($lookup_value as xs:anyAtomicType, $array as xs:anyAtomicType+, $array_width as xs:integer, $array_height as xs:integer) as xs:anyAtomicType", "description" : " The Array form.<p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"/>\n It looks in the first row or column of an array for the specified value\n   and returns a value from the same position in the last row or column of the array.<p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"/>\n If array covers an area that is wider than it is tall (more columns than rows),\n   LOOKUP searches for lookup_value in the first row.<p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"/>\n If array is square or is taller than it is wide (more rows than columns),\n   LOOKUP searches in the first column.<p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"/>\n The values in the first row or first column must be in ascending order.\n", "summary" : "<p> The Array form.</p>", "annotation_str" : "", "annotations" : [  ], "updating" : false, "parameters" : [ { "name" : "lookup_value", "type" : "xs:anyAtomicType", "occurrence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> the value to be searched. If the value is not found, then it matches the largest value in lookup_vector that is less than or equal to lookup_value.</div>" }, { "name" : "array", "type" : "xs:anyAtomicType", "occurrence" : "+", "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> the array sequence, row after row</div>" }, { "name" : "array_width", "type" : "xs:integer", "occurrence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> the number of values in a row</div>" }, { "name" : "array_height", "type" : "xs:integer", "occurrence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> the number of rows in the array</div>" } ], "returns" : { "type" : "xs:anyAtomicType", "description" : "The corresponding value in the last row or column" }, "errors" : [ "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">excel-err:Value if array contains less values than specified by array_width and array_height or array_width = 0 or array_height = 0</xqdoc:error>", "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">excel-err:NA if the lookup_value is smaller than the first value in the row or column</xqdoc:error>" ] }, { "isDocumented" : true, "arity" : 2, "name" : "match", "qname" : "excel:match", "signature" : "($lookup_value as xs:anyAtomicType, $sequence as xs:anyAtomicType+) as xs:anyAtomicType", "description" : " Same as above, but match_type is defaulted to 1.\n It finds the largest value that is less than or equal to lookup_value.\n", "summary" : "<p> Same as above, but match_type is defaulted to 1.</p>", "annotation_str" : "", "annotations" : [  ], "updating" : false, "parameters" : [ { "name" : "lookup_value", "type" : "xs:anyAtomicType", "occurrence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> value to be searched.</div>" }, { "name" : "sequence", "type" : "xs:anyAtomicType", "occurrence" : "+", "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> the vector where to search the value</div>" } ], "returns" : { "type" : "xs:anyAtomicType", "description" : "The position of found value" }, "errors" : [ "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">excel-err:NA for match_type 1 or -1, the lookup_value is smaller or larger than the first value in sequence</xqdoc:error>", "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">excel-err:Value if range_lookup=0 and the value cannot be found</xqdoc:error>" ] }, { "isDocumented" : true, "arity" : 3, "name" : "match", "qname" : "excel:match", "signature" : "($lookup_value as xs:anyAtomicType, $sequence as xs:anyAtomicType+, $match_type as xs:integer) as xs:anyAtomicType", "description" : " Returns the relative position of an item in a sequence that\n   matches a specified value in a specified order.\n Only for one dimensional vector.\n", "summary" : "<p> Returns the relative position of an item in a sequence that\n   matches a specified value in a specified order.</p>", "annotation_str" : "", "annotations" : [  ], "updating" : false, "parameters" : [ { "name" : "lookup_value", "type" : "xs:anyAtomicType", "occurrence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> value to be searched.</div>" }, { "name" : "sequence", "type" : "xs:anyAtomicType", "occurrence" : "+", "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> the vector where to search the value</div>" }, { "name" : "match_type", "type" : "xs:integer", "occurrence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> <dl>specifies the algorithm used for searching. Possible values: <dt>1</dt> <dd> finds the largest value that is less than or equal to lookup_value. Sequence must be in ascending order.</dd> <dt>0</dt> <dd> finds the first value that is exactly equal to lookup_value. <p/> Sequence can be in any order.<p/> If lookup_value is boolean, then only booleans are compared.<p/> For other types, they are casted to string and then compared using xquery regular expressions. Lookup_value can be a xquery regular expression.</dd> <dt>-1</dt> <dd> finds the smallest value that is greater than or equal to lookup_value.<p/> Sequence must be in descending order.</dd></dl></div>" } ], "returns" : { "type" : "xs:anyAtomicType", "description" : "The position of found value" }, "errors" : [ "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">excel-err:NA for match_type 1 or -1, the lookup_value is smaller or larger than the first value in sequence</xqdoc:error>", "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">excel-err:Value if range_lookup=0 and the value cannot be found</xqdoc:error>" ] }, { "isDocumented" : true, "arity" : 5, "name" : "offset", "qname" : "excel:offset", "signature" : "($reference as xs:anyAtomicType+, $reference_height as xs:integer, $reference_width as xs:integer, $rows as xs:integer, $cols as xs:integer) as xs:anyAtomicType*", "description" : " Same as above, only that the sub-array is specified only by rows and cols relative position.\n The sub-array height and width is computed to contain the remaining elements of the array.\n", "summary" : "<p> Same as above, only that the sub-array is specified only by rows and cols relative position.</p>", "annotation_str" : "", "annotations" : [  ], "updating" : false, "parameters" : [ { "name" : "reference", "type" : "xs:anyAtomicType", "occurrence" : "+", "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> the reference array</div>" }, { "name" : "reference_height", "type" : "xs:integer", "occurrence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> the number of rows in the reference array</div>" }, { "name" : "reference_width", "type" : "xs:integer", "occurrence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> the number of elements in the reference array row</div>" }, { "name" : "rows", "type" : "xs:integer", "occurrence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> the relative row position where the sub-array starts. It must be a positive value, zero relative.</div>" }, { "name" : "cols", "type" : "xs:integer", "occurrence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> the relative column position where the sub-array starts. It must be a positive value, zero relative.</div>" } ], "returns" : { "type" : "xs:anyAtomicType*", "description" : "The sequence specifying the sub-array, row after row" }, "errors" : [ "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">excel-err:NA rows or cols are negative</xqdoc:error>", "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">excel-err:NA height or width are smaller than 1</xqdoc:error>", "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">excel-err:Value reference array contains less elements than specified by reference_height and reference_width</xqdoc:error>", "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">excel-err:NA the resulted sub-array is not completely contained inside reference array</xqdoc:error>" ] }, { "isDocumented" : true, "arity" : 7, "name" : "offset", "qname" : "excel:offset", "signature" : "($reference as xs:anyAtomicType+, $reference_height as xs:integer, $reference_width as xs:integer, $rows as xs:integer, $cols as xs:integer, $height as xs:integer, $width as xs:integer) as xs:anyAtomicType*", "description" : " Returns a sub-array from an array.\n The inner array must be within the reference array\n", "summary" : "<p> Returns a sub-array from an array.</p>", "annotation_str" : "", "annotations" : [  ], "updating" : false, "parameters" : [ { "name" : "reference", "type" : "xs:anyAtomicType", "occurrence" : "+", "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> the reference array</div>" }, { "name" : "reference_height", "type" : "xs:integer", "occurrence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> the number of rows in the reference array</div>" }, { "name" : "reference_width", "type" : "xs:integer", "occurrence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> the number of elements in the reference array row</div>" }, { "name" : "rows", "type" : "xs:integer", "occurrence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> the relative row position where the sub-array starts. It must be a positive value, zero relative.</div>" }, { "name" : "cols", "type" : "xs:integer", "occurrence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> the relative column position where the sub-array starts. It must be a positive value, zero relative.</div>" }, { "name" : "height", "type" : "xs:integer", "occurrence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> the desired height of sub-array. The sub-array must be inside the reference array.</div>" }, { "name" : "width", "type" : "xs:integer", "occurrence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> the desired width of sub-array. The sub-array must be inside the reference array.</div>" } ], "returns" : { "type" : "xs:anyAtomicType*", "description" : "The sequence specifying the sub-array, row after row" }, "errors" : [ "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">excel-err:NA rows or cols are negative</xqdoc:error>", "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">excel-err:NA height or width are smaller than 1</xqdoc:error>", "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">excel-err:Value reference array contains less elements than specified by reference_height and reference_width</xqdoc:error>", "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">excel-err:NA the resulted sub-array is not completely contained inside reference array</xqdoc:error>" ] }, { "isDocumented" : true, "arity" : 3, "name" : "transpose", "qname" : "excel:transpose", "signature" : "($array as xs:anyAtomicType+, $array_width as xs:integer, $array_height as xs:integer) as xs:anyAtomicType+", "description" : " Transposes an array. The rows become columns and vice versa.\n", "summary" : "<p> Transposes an array.</p>", "annotation_str" : "", "annotations" : [  ], "updating" : false, "parameters" : [ { "name" : "array", "type" : "xs:anyAtomicType", "occurrence" : "+", "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> the sequence specifying the array, row after row</div>" }, { "name" : "array_width", "type" : "xs:integer", "occurrence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> the number of elements in a row</div>" }, { "name" : "array_height", "type" : "xs:integer", "occurrence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> the number of rows in the array</div>" } ], "returns" : { "type" : "xs:anyAtomicType+", "description" : "The transposed array. It will be a sequence specifying an array, row after row. The result width is the input height. The result height is the input width." }, "errors" : [ "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">excel-err:Value the array contains less elements than specified by array_width and array_height</xqdoc:error>" ] }, { "isDocumented" : true, "arity" : 5, "name" : "vlookup", "qname" : "excel:vlookup", "signature" : "($lookup_value as xs:anyAtomicType, $table_array as xs:anyAtomicType+, $table_width as xs:integer, $table_height as xs:integer, $col_index_num as xs:integer) as xs:anyAtomicType", "description" : " Same as above, with range_lookup defaulted to true.\n It finds the largest value that is less than or equal to lookup_value.\n First column must be in ascending order.\n", "summary" : "<p> Same as above, with range_lookup defaulted to true.</p>", "annotation_str" : "", "annotations" : [  ], "updating" : false, "parameters" : [ { "name" : "lookup_value", "type" : "xs:anyAtomicType", "occurrence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> the value to be searched. Allowed types are numeric, string, boolean. <p/> Boolean values are compared only with booleans. Numbers are compared only with numbers, if range_lookup is not zero. The other types are converted to string and compared to string value of all values.</div>" }, { "name" : "table_array", "type" : "xs:anyAtomicType", "occurrence" : "+", "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> the sequence of values, row after row</div>" }, { "name" : "table_width", "type" : "xs:integer", "occurrence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> the number of values in a row</div>" }, { "name" : "table_height", "type" : "xs:integer", "occurrence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> the number of rows</div>" }, { "name" : "col_index_num", "type" : "xs:integer", "occurrence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> the row index, 1 based</div>" } ], "returns" : { "type" : "xs:anyAtomicType", "description" : "The value found, with original type" }, "errors" : [ "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">excel-err:Value if the array contains less elements than specified by table_height and table_width</xqdoc:error>", "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">excel-err:Value if col_index_num is outside the range 1 .. table_height</xqdoc:error>", "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">excel-err:Value if range_lookup is true and the value searched is smaller than the first value in the first column</xqdoc:error>", "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">excel-err:Value if range_lookup=false and the value cannot be found</xqdoc:error>" ] }, { "isDocumented" : true, "arity" : 6, "name" : "vlookup", "qname" : "excel:vlookup", "signature" : "($lookup_value as xs:anyAtomicType, $table_array as xs:anyAtomicType+, $table_width as xs:integer, $table_height as xs:integer, $col_index_num as xs:integer, $range_lookup as xs:boolean) as xs:anyAtomicType", "description" : " Searches for a value in the first column of a table array\n   and returns a value in the same row from another column in the table array.\n <dl xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">Array is specified with 3 parameters:\n <dt>table_array</dt> <dd>is a sequence of elements, first row first, then second row and so on</dd>\n <dt>table_width</dt> <dd>specifies the number of elements in a row</dd>\n <dt>table_height</dt> <dd>specifies the number of rows</dd></dl>\n For wildchar matching, the XQuery regex matcher is used.\n", "summary" : "<p> Searches for a value in the first column of a table array\n   and returns a value in the same row from another column in the table array.</p>", "annotation_str" : "", "annotations" : [  ], "updating" : false, "parameters" : [ { "name" : "lookup_value", "type" : "xs:anyAtomicType", "occurrence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> the value to be searched. Allowed types are numeric, string, boolean. <p/> Boolean values are compared only with booleans. Numbers are compared only with numbers, if range_lookup is not zero. The other types are converted to string and compared to string value of all values.</div>" }, { "name" : "table_array", "type" : "xs:anyAtomicType", "occurrence" : "+", "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> the sequence of values, row after row</div>" }, { "name" : "table_width", "type" : "xs:integer", "occurrence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> the number of values in a row</div>" }, { "name" : "table_height", "type" : "xs:integer", "occurrence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> the number of rows</div>" }, { "name" : "col_index_num", "type" : "xs:integer", "occurrence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> the row index, 1 based</div>" }, { "name" : "range_lookup", "type" : "xs:boolean", "occurrence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> <dl>specified the algorithm to use: <dt>true</dt> <dd> find approximative match. First column of array must be sorted in ascending order.</dd> <dt>false</dt> <dd> find exact match, using xquery regex. First column of array can be in any order.</dd></dl></div>" } ], "returns" : { "type" : "xs:anyAtomicType", "description" : "The value found, with original type" }, "errors" : [ "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">excel-err:Value if the array contains less elements than specified by table_height and table_width</xqdoc:error>", "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">excel-err:Value if col_index_num is outside the range 1 .. table_height</xqdoc:error>", "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">excel-err:Value if range_lookup is true and the value searched is smaller than the first value in the first column</xqdoc:error>", "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">excel-err:Value if range_lookup=false and the value cannot be found</xqdoc:error>" ] } ], "variables" : [  ] }, "http://zorba.io/modules/datetime" : { "ns" : "http://zorba.io/modules/datetime", "description" : " <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">This module provides functions to retrieve the current dateTime and to\n parse dates and times.</p>\n <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"/>\n <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">In contrast to the current-dateTime functions specified in\n <a href=\"http://www.w3.org/TR/xpath-functions-30/\">XQuery Functions and\n Operators</a>, the functions in this module are nondeterministic, that is,\n they do not return the current dateTime from the dynamic context, but return\n the actual value.</p>\n <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"/>\n <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">Dates and times are parsed according to the format given by\n <a href=\"http://pubs.opengroup.org/onlinepubs/007904975/functions/strptime.html\">strptime</a>.</p>\n <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">However, date and time values must be \"complete.\"</p>\n <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">For a date, the year and either month and day or day of the year must have\n been parsed.</p>\n <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">For a time, the hour must have been parsed.\n (If either the minute, second, or timezone has not been parsed, they default\n to 0.)</p>\n <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">For a dateTime, the parsing requirements of both date and time must be met.</p>\n <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"/>\n <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">When a locale is given,\n it must be of the form {lang}[{sep}{country}[{encoding}]] where\n {lang} is an ISO 639-1 2-letter or 639-2 3-letter language code,\n {sep} is either '-' or '_',\n {country} is an ISO 3166-1 2-letter country code,\n and {encoding} is any string that begins with a '.'.</p>\n <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">The {sep}, {country}, and {encoding} are optional;\n {encoding} is always ignored.</p>\n <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">Examples include: de, en-US, fr_CA, ru_RU.UTF-8.</p>\n", "sees" : [ "<xqdoc:see xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">http://www.w3.org/TR/xpath-functions/#context</xqdoc:see>" ], "authors" : [ "<xqdoc:author xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">Matthias Brantner</xqdoc:author>", "<xqdoc:author xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">Paul J. Lucas</xqdoc:author>" ], "version" : null, "encoding" : "utf-8", "namespaces" : [ { "uri" : "http://zorba.io/annotations", "prefix" : "an" }, { "uri" : "http://zorba.io/modules/datetime", "prefix" : "datetime" }, { "uri" : "http://zorba.io/options/versioning", "prefix" : "ver" } ], "functions" : [ { "isDocumented" : true, "arity" : 0, "name" : "current-date", "qname" : "datetime:current-date", "signature" : "() as xs:date external", "description" : " <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">Gets the current date value in Universal time.</p>\n <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">Note that this function is not stable: it returns the value of the date when\n the function is invoked.</p>\n", "summary" : "<p>  Gets the current date value in Universal time.</p>", "annotation_str" : " %an:nondeterministic", "annotations" : [ { "prefix" : "an", "ns" : "http://zorba.io/annotations", "name" : "nondeterministic", "value" : "" } ], "updating" : false, "parameters" : [  ], "returns" : { "type" : "xs:date", "description" : "the non-stable date value" }, "errors" : [  ] }, { "isDocumented" : true, "arity" : 0, "name" : "current-dateTime", "qname" : "datetime:current-dateTime", "signature" : "() as xs:dateTimeStamp external", "description" : " <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">Gets the current dateTime value in Universal time.</p>\n <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">Note that this function is not stable: it returns the value of the date and\n time when the function is invoked.</p>\n", "summary" : "<p>  Gets the current dateTime value in Universal time.</p>", "annotation_str" : " %an:nondeterministic", "annotations" : [ { "prefix" : "an", "ns" : "http://zorba.io/annotations", "name" : "nondeterministic", "value" : "" } ], "updating" : false, "parameters" : [  ], "returns" : { "type" : "xs:dateTimeStamp", "description" : "the non-stable datetime value" }, "errors" : [  ] }, { "isDocumented" : true, "arity" : 0, "name" : "current-time", "qname" : "datetime:current-time", "signature" : "() as xs:time external", "description" : " <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">Return the current time value in Universal time.</p>\n <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">Note that this function is not stable: it returns the value of the time when\n the function is invoked.</p>\n", "summary" : "<p>  Return the current time value in Universal time.</p>", "annotation_str" : " %an:nondeterministic", "annotations" : [ { "prefix" : "an", "ns" : "http://zorba.io/annotations", "name" : "nondeterministic", "value" : "" } ], "updating" : false, "parameters" : [  ], "returns" : { "type" : "xs:time", "description" : "the non-stable time value" }, "errors" : [  ] }, { "isDocumented" : true, "arity" : 1, "name" : "millis-to-dateTime", "qname" : "datetime:millis-to-dateTime", "signature" : "($millis as xs:long) as xs:dateTime external", "description" : " <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">Converts the given number of milliseconds since epoch into its corresponding\n xs:dateTime.</p>\n", "summary" : "<p>  Converts the given number of milliseconds since epoch into its corresponding\n xs:dateTime.</p>", "annotation_str" : "", "annotations" : [  ], "updating" : false, "parameters" : [ { "name" : "millis", "type" : "xs:long", "occurrence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> The number of milliseconds since epoch.</div>" } ], "returns" : { "type" : "xs:dateTime", "description" : "Returns an xs:dateTime." }, "errors" : [  ] }, { "isDocumented" : true, "arity" : 2, "name" : "parse-date", "qname" : "datetime:parse-date", "signature" : "($input as xs:string, $format as xs:string) as xs:date external", "description" : " <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">Parses a date from a string in the current locale.</p>\n", "summary" : "<p>  Parses a date from a string in the current locale.</p>", "annotation_str" : "", "annotations" : [  ], "updating" : false, "parameters" : [ { "name" : "input", "type" : "xs:string", "occurrence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> The string to parse.</div>" }, { "name" : "format", "type" : "xs:string", "occurrence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> The format string containing zero or more conversion specifications and ordinary characters. All ordinary characters are matched exactly with the buffer; all whitespace characters match any amount of whitespace in the buffer.</div>" } ], "returns" : { "type" : "xs:date", "description" : "Returns an xs:date." }, "errors" : [ "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">datetime:INVALID_SPECIFICATION if $format contains an invalid conversion specification.</xqdoc:error>", "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">datetime:INSUFFICIENT_BUFFER if $input is insufficient for $format.</xqdoc:error>", "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">datetime:INVALID_VALUE if $input contains an invalid value for a conversion specification.</xqdoc:error>", "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">datetime:LITERAL_MISMATCH if there is a literal characer mismatch between $input and $format.</xqdoc:error>", "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">datetime:INCOMPLETE_DATE_OR_TIME if the date is incomplete.</xqdoc:error>" ] }, { "isDocumented" : true, "arity" : 3, "name" : "parse-date", "qname" : "datetime:parse-date", "signature" : "($input as xs:string, $format as xs:string, $locale as xs:string) as xs:date external", "description" : " <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">Parses a date from a string in the given locale.</p>\n", "summary" : "<p>  Parses a date from a string in the given locale.</p>", "annotation_str" : "", "annotations" : [  ], "updating" : false, "parameters" : [ { "name" : "input", "type" : "xs:string", "occurrence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> The string to parse.</div>" }, { "name" : "format", "type" : "xs:string", "occurrence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> The format string containing zero or more conversion specifications and ordinary characters. All ordinary characters are matched exactly with the buffer; all whitespace characters match any amount of whitespace in the buffer.</div>" }, { "name" : "locale", "type" : "xs:string", "occurrence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> The locale to use.</div>" } ], "returns" : { "type" : "xs:date", "description" : "Returns an xs:date." }, "errors" : [ "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">datetime:INVALID_SPECIFICATION if $format contains an invalid conversion specification.</xqdoc:error>", "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">datetime:INSUFFICIENT_BUFFER if $input is insufficient for $format.</xqdoc:error>", "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">datetime:INVALID_VALUE if $input contains an invalid value for a conversion specification.</xqdoc:error>", "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">datetime:LITERAL_MISMATCH if there is a literal characer mismatch between $input and $format.</xqdoc:error>", "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">datetime:INCOMPLETE_DATE_OR_TIME if the date is incomplete.</xqdoc:error>", "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">datetime:INVALID_LOCALE if $locale is in an invalid format.</xqdoc:error>", "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">datetime:UNKNOWN_LOCALE if $locale is unknown.</xqdoc:error>", "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">datetime:UNSUPPORTED_LOCALE if $locale is unsupported by the operating system.</xqdoc:error>" ] }, { "isDocumented" : true, "arity" : 2, "name" : "parse-dateTime", "qname" : "datetime:parse-dateTime", "signature" : "($input as xs:string, $format as xs:string) as xs:dateTime external", "description" : " <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">Parses a dateTime from a string in the current locale.</p>\n", "summary" : "<p>  Parses a dateTime from a string in the current locale.</p>", "annotation_str" : "", "annotations" : [  ], "updating" : false, "parameters" : [ { "name" : "input", "type" : "xs:string", "occurrence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> The string to parse.</div>" }, { "name" : "format", "type" : "xs:string", "occurrence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> The format string containing zero or more conversion specifications and ordinary characters. All ordinary characters are matched exactly with the buffer; all whitespace characters match any amount of whitespace in the buffer.</div>" } ], "returns" : { "type" : "xs:dateTime", "description" : "Returns an xs:dateTime." }, "errors" : [ "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">datetime:INVALID_SPECIFICATION if $format contains an invalid conversion specification.</xqdoc:error>", "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">datetime:INSUFFICIENT_BUFFER if $input is insufficient for $format.</xqdoc:error>", "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">datetime:INVALID_VALUE if $input contains an invalid value for a conversion specification.</xqdoc:error>", "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">datetime:LITERAL_MISMATCH if there is a literal characer mismatch between $input and $format.</xqdoc:error>", "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">datetime:INCOMPLETE_DATE_OR_TIME if either the date or time is incomplete.</xqdoc:error>" ] }, { "isDocumented" : true, "arity" : 3, "name" : "parse-dateTime", "qname" : "datetime:parse-dateTime", "signature" : "($input as xs:string, $format as xs:string, $locale as xs:string) as xs:dateTime external", "description" : " <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">Parses a dateTime from a string in the given locale.</p>\n", "summary" : "<p>  Parses a dateTime from a string in the given locale.</p>", "annotation_str" : "", "annotations" : [  ], "updating" : false, "parameters" : [ { "name" : "input", "type" : "xs:string", "occurrence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> The string to parse.</div>" }, { "name" : "format", "type" : "xs:string", "occurrence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> The format string containing zero or more conversion specifications and ordinary characters. All ordinary characters are matched exactly with the buffer; all whitespace characters match any amount of whitespace in the buffer.</div>" }, { "name" : "locale", "type" : "xs:string", "occurrence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> The locale to use.</div>" } ], "returns" : { "type" : "xs:dateTime", "description" : "Returns an xs:dateTime." }, "errors" : [ "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">datetime:INVALID_SPECIFICATION if $format contains an invalid conversion specification.</xqdoc:error>", "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">datetime:INSUFFICIENT_BUFFER if $input is insufficient for $format.</xqdoc:error>", "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">datetime:INVALID_VALUE if $input contains an invalid value for a conversion specification.</xqdoc:error>", "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">datetime:LITERAL_MISMATCH if there is a literal characer mismatch between $input and $format.</xqdoc:error>", "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">datetime:INCOMPLETE_DATE_OR_TIME if either the date or time is incomplete.</xqdoc:error>", "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">datetime:INVALID_LOCALE if $locale is in an invalid format.</xqdoc:error>", "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">datetime:UNKNOWN_LOCALE if $locale is unknown.</xqdoc:error>", "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">datetime:UNSUPPORTED_LOCALE if $locale is unsupported by the operating system.</xqdoc:error>" ] }, { "isDocumented" : true, "arity" : 2, "name" : "parse-time", "qname" : "datetime:parse-time", "signature" : "($input as xs:string, $format as xs:string) as xs:time external", "description" : " <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">Parses a time from a string in the current locale.</p>\n", "summary" : "<p>  Parses a time from a string in the current locale.</p>", "annotation_str" : "", "annotations" : [  ], "updating" : false, "parameters" : [ { "name" : "input", "type" : "xs:string", "occurrence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> The string to parse.</div>" }, { "name" : "format", "type" : "xs:string", "occurrence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> The format string containing zero or more conversion specifications and ordinary characters. All ordinary characters are matched exactly with the buffer; all whitespace characters match any amount of whitespace in the buffer.</div>" } ], "returns" : { "type" : "xs:time", "description" : "Returns an xs:time." }, "errors" : [ "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">datetime:INVALID_SPECIFICATION if $format contains an invalid conversion specification.</xqdoc:error>", "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">datetime:INSUFFICIENT_BUFFER if $input is insufficient for $format.</xqdoc:error>", "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">datetime:INVALID_VALUE if $input contains an invalid value for a conversion specification.</xqdoc:error>", "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">datetime:LITERAL_MISMATCH if there is a literal characer mismatch between $input and $format.</xqdoc:error>", "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">datetime:INCOMPLETE_DATE_OR_TIME if the hour has not been parsed.</xqdoc:error>" ] }, { "isDocumented" : true, "arity" : 3, "name" : "parse-time", "qname" : "datetime:parse-time", "signature" : "($input as xs:string, $format as xs:string, $locale as xs:string) as xs:time external", "description" : " <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">Parses a time from a string in the given locale.</p>\n", "summary" : "<p>  Parses a time from a string in the given locale.</p>", "annotation_str" : "", "annotations" : [  ], "updating" : false, "parameters" : [ { "name" : "input", "type" : "xs:string", "occurrence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> The string to parse.</div>" }, { "name" : "format", "type" : "xs:string", "occurrence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> The format string containing zero or more conversion specifications and ordinary characters. All ordinary characters are matched exactly with the buffer; all whitespace characters match any amount of whitespace in the buffer.</div>" }, { "name" : "locale", "type" : "xs:string", "occurrence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> The locale to use.</div>" } ], "returns" : { "type" : "xs:time", "description" : "Returns an xs:time." }, "errors" : [ "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">datetime:INVALID_SPECIFICATION if $format contains an invalid conversion specification.</xqdoc:error>", "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">datetime:INSUFFICIENT_BUFFER if $input is insufficient for $format.</xqdoc:error>", "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">datetime:INVALID_VALUE if $input contains an invalid value for a conversion specification.</xqdoc:error>", "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">datetime:LITERAL_MISMATCH if there is a literal characer mismatch between $input and $format.</xqdoc:error>", "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">datetime:INCOMPLETE_DATE_OR_TIME if the hour has not been parsed.</xqdoc:error>", "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">datetime:INVALID_LOCALE if $locale is in an invalid format.</xqdoc:error>", "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">datetime:UNKNOWN_LOCALE if $locale is unknown.</xqdoc:error>", "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">datetime:UNSUPPORTED_LOCALE if $locale is unsupported by the operating system.</xqdoc:error>" ] }, { "isDocumented" : true, "arity" : 0, "name" : "timestamp", "qname" : "datetime:timestamp", "signature" : "() as xs:long external", "description" : " <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">Gets the the number of milliseconds since epoch.</p>\n", "summary" : "<p>  Gets the the number of milliseconds since epoch.</p>", "annotation_str" : " %an:nondeterministic", "annotations" : [ { "prefix" : "an", "ns" : "http://zorba.io/annotations", "name" : "nondeterministic", "value" : "" } ], "updating" : false, "parameters" : [  ], "returns" : { "type" : "xs:long", "description" : "the said number of milliseconds." }, "errors" : [  ] }, { "isDocumented" : true, "arity" : 0, "name" : "utc-offset", "qname" : "datetime:utc-offset", "signature" : "() as xs:long external", "description" : " <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">Gets the offset of the current timezone from Universal time.</p>\n", "summary" : "<p>  Gets the offset of the current timezone from Universal time.</p>", "annotation_str" : " %an:nondeterministic", "annotations" : [ { "prefix" : "an", "ns" : "http://zorba.io/annotations", "name" : "nondeterministic", "value" : "" } ], "updating" : false, "parameters" : [  ], "returns" : { "type" : "xs:long", "description" : "the offset in seconds with positive values being east of the prime meridian." }, "errors" : [  ] } ], "variables" : [  ] }, "http://www.28msec.com/modules/http/util/diagnostic" : { "ns" : "http://www.28msec.com/modules/http/util/diagnostic", "description" : " This module provides utility functions to help with diagnostic analysis\n / debugging of RESTful Apps or webapps.\n", "sees" : [  ], "authors" : [ "<xqdoc:author xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">28msec</xqdoc:author>" ], "version" : null, "encoding" : "utf-8", "namespaces" : [ { "uri" : "http://zorba.io/modules/base64", "prefix" : "base64" }, { "uri" : "http://www.28msec.com/modules/http/util/diagnostic", "prefix" : "diagnostic" }, { "uri" : "http://www.w3.org/2005/xqt-errors", "prefix" : "err" }, { "uri" : "http://www.28msec.com/modules/http/util/multipart", "prefix" : "multipart" }, { "uri" : "http://www.28msec.com/modules/http/request", "prefix" : "request" }, { "uri" : "http://zorba.io/options/versioning", "prefix" : "ver" } ], "functions" : [ { "isDocumented" : true, "arity" : 0, "name" : "serialize-request-as-html", "qname" : "diagnostic:serialize-request-as-html", "signature" : "() as element(*)*", "description" : " <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">Returns a sequence of html elements listing all request\n characteristics.</p>\n <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">This function is helpful for debugging purposes. It can be used\n to output request information within an HTML page.</p>\n", "summary" : "<p>  Returns a sequence of html elements listing all request\n characteristics.</p>", "annotation_str" : "", "annotations" : [  ], "updating" : false, "parameters" : [  ], "returns" : { "type" : "element(*)*", "description" : "HTML elements describing the request" }, "errors" : [  ] }, { "isDocumented" : true, "arity" : 0, "name" : "serialize-request-as-txt", "qname" : "diagnostic:serialize-request-as-txt", "signature" : "() as xs:string*", "description" : " <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">Returns a sequence of xs:string listing all request\n characteristics.</p>\n <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">This function is helpful for debugging purposes. It can be used\n to output request information as plan text.</p>\n", "summary" : "<p>  Returns a sequence of xs:string listing all request\n characteristics.</p>", "annotation_str" : "", "annotations" : [  ], "updating" : false, "parameters" : [  ], "returns" : { "type" : "xs:string*", "description" : "sequence of strings describing each characteristic of a request" }, "errors" : [  ] } ], "variables" : [  ] }, "http://www.28msec.com/modules/credentials" : { "ns" : "http://www.28msec.com/modules/credentials", "description" : " <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">This module provides functionality for storing credentials\n using an AES-encrypted file the project configuration folder.</p>\n <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">Specifically, the credentials will be stored in the <tt>credentials</tt>\n file in the <tt>config</tt> folder in the project root folder.\n The credentials file is encrypted using 256bit AES encryption. The AES\n key is computed using the project seed. If the project seed is changed the\n credential store is re-encrypted transparently.</p>\n <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">Each credential has an associated name and category.\n Credentials can be retrieved specifying their name and category.</p>\n <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">For each category, it is possible to specify the default credentials.\n A category default credentials can then be easily retrieved. </p>\n <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">The name of credentials and categories can contain lowercase or\n uppercase letters, digits, and the following special characters: \"_\" , \"-\",\n \".\". Additionally it must not be empty and must start with a lowercase\n or uppercase letter.</p>\n", "sees" : [  ], "authors" : [ "<xqdoc:author xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">Federico Cavalieri</xqdoc:author>" ], "version" : null, "encoding" : "utf-8", "namespaces" : [ { "uri" : "http://zorba.io/annotations", "prefix" : "an" }, { "uri" : "http://www.28msec.com/modules/credentials", "prefix" : "credentials" }, { "uri" : "http://www.w3.org/2005/xqt-errors", "prefix" : "err" }, { "uri" : "http://jsoniq.org/errors", "prefix" : "jerr" }, { "uri" : "http://www.28msec.com/modules/mongodb", "prefix" : "mongo" }, { "uri" : "http://zorba.io/options/versioning", "prefix" : "ver" } ], "functions" : [ { "isDocumented" : true, "arity" : 3, "name" : "add-credentials", "qname" : "credentials:add-credentials", "signature" : "($category as string, $name as string, $credentials as object()) as object()", "description" : " <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">Adds the given credentials to the credential store.\n The credentials are not set as default.</p>\n <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">If credentials  with the given name and category are already present an\n error is raised.</p>\n <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">Example:\n <pre>\n import module namespace credentials = \"http://www.28msec.com/modules/credentials\";\n credentials:add-credentials(\"S3\", \"DataBucket\", { ... });\n </pre>\n </p>\n", "summary" : "<p>  Adds the given credentials to the credential store.</p>", "annotation_str" : " %an:sequential", "annotations" : [ { "prefix" : "an", "ns" : "http://zorba.io/annotations", "name" : "sequential", "value" : "" } ], "updating" : false, "parameters" : [ { "name" : "category", "type" : "string", "occurrence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> The credentials category name.</div>" }, { "name" : "name", "type" : "string", "occurrence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> The credentials name.</div>" }, { "name" : "credentials", "type" : "object()", "occurrence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> An object containing the credentials data.</div>" } ], "returns" : { "type" : "object()", "description" : "the credential object" }, "errors" : [ "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">credentials:EXIST if credentials with the given name and category are already present.</xqdoc:error>", "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">credentials:NAME if the credentials or category name is invalid</xqdoc:error>", "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">credentials:MONGO-DEFAULT if the specified credentials and category name correspond with the default MongoDB credentials</xqdoc:error>", "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">credentials:TEST if a connection cannot be established using the specified credentials</xqdoc:error>", "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">credentials:CREDENTIALS-STORE if an internal error arises accessing the crendentials store</xqdoc:error>" ] }, { "isDocumented" : true, "arity" : 4, "name" : "add-credentials", "qname" : "credentials:add-credentials", "signature" : "($category as string, $name as string, $credentials as object(), $default as boolean) as object()", "description" : " <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">Adds the given credentials to the credential store,\n either as default or not.</p>\n <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">If credentials  with the given name and category are already present an\n error is raised.</p>\n <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">Example:\n <pre>\n import module namespace credentials = \"http://www.28msec.com/modules/credentials\";\n credentials:add-credentials(\"S3\", \"DataBucket\", { ... }, true);\n </pre>\n </p>\n", "summary" : "<p>  Adds the given credentials to the credential store,\n either as default or not.</p>", "annotation_str" : " %an:sequential", "annotations" : [ { "prefix" : "an", "ns" : "http://zorba.io/annotations", "name" : "sequential", "value" : "" } ], "updating" : false, "parameters" : [ { "name" : "category", "type" : "string", "occurrence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> The credentials category name.</div>" }, { "name" : "name", "type" : "string", "occurrence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> The credentials name.</div>" }, { "name" : "credentials", "type" : "object()", "occurrence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> An object containing the credentials data.</div>" }, { "name" : "default", "type" : "boolean", "occurrence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> Whether the credentials will be default or not.</div>" } ], "returns" : { "type" : "object()", "description" : "the credential object" }, "errors" : [ "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">credentials:EXIST if credentials with the given name and category are already present.</xqdoc:error>", "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">credentials:NAME if the credentials or category name is invalid</xqdoc:error>", "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">credentials:MONGO-DEFAULT if trying to add the default MongoDB credentials</xqdoc:error>", "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">credentials:TEST if a connection cannot be established using the specified credentials</xqdoc:error>", "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">credentials:CREDENTIALS-STORE if an internal error arises accessing the crendentials store</xqdoc:error>" ] }, { "isDocumented" : true, "arity" : 1, "name" : "credentials", "qname" : "credentials:credentials", "signature" : "($category as string) as object()?", "description" : " <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">Returns the given category's default credentials, if any.</p>\n <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">If no default credentials are present for the given category\n the empty sequence is returned.</p>\n <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">Example:\n <pre>\n import module namespace credentials = \"http://www.28msec.com/modules/credentials\";\n credentials:credentials(\"S3\")\n </pre>\n </p>\n", "summary" : "<p>  Returns the given category's default credentials, if any.</p>", "annotation_str" : " %an:strictlydeterministic", "annotations" : [ { "prefix" : "an", "ns" : "http://zorba.io/annotations", "name" : "strictlydeterministic", "value" : "" } ], "updating" : false, "parameters" : [ { "name" : "category", "type" : "string", "occurrence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> The category name.</div>" } ], "returns" : { "type" : "object()?", "description" : "The specified category default credentials, if any." }, "errors" : [ "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">credentials:NAME if the credentials or category name is invalid</xqdoc:error>", "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">credentials:MONGO-DEFAULT if the specified category is MongoDB</xqdoc:error>", "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">credentials:CREDENTIALS-STORE if an internal error arises accessing the crendentials store</xqdoc:error>" ] }, { "isDocumented" : true, "arity" : 2, "name" : "credentials", "qname" : "credentials:credentials", "signature" : "($category as string, $name as string) as object()?", "description" : " <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">Returns the specified credentials, if present in the credential store.</p>\n <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">If the specified credentials are not present the empty sequence is returned.</p>\n <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">Example:\n <pre>\n import module namespace credentials = \"http://www.28msec.com/modules/credentials\";\n credentials:credentials(\"S3\", \"DataBucket\")\n </pre>\n </p>\n", "summary" : "<p>  Returns the specified credentials, if present in the credential store.</p>", "annotation_str" : " %an:strictlydeterministic", "annotations" : [ { "prefix" : "an", "ns" : "http://zorba.io/annotations", "name" : "strictlydeterministic", "value" : "" } ], "updating" : false, "parameters" : [ { "name" : "category", "type" : "string", "occurrence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> The credentials category name.</div>" }, { "name" : "name", "type" : "string", "occurrence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> The credentials name.</div>" } ], "returns" : { "type" : "object()?", "description" : "The specified credentials, if present." }, "errors" : [ "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">credentials:NAME if the credentials or category name is invalid</xqdoc:error>", "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">credentials:MONGO-DEFAULT if the credentials or category name is invalid</xqdoc:error>", "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">credentials:CREDENTIALS-STORE if an internal error arises accessing the crendentials store</xqdoc:error>" ] }, { "isDocumented" : true, "arity" : 0, "name" : "list-categories", "qname" : "credentials:list-categories", "signature" : "() as array()", "description" : " <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">Lists all the credentials categories in the credentials store.</p>\n <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">If no credentials are stored the empty sequence is returned.</p>\n <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">Example:\n <pre>\n import module namespace credentials = \"http://www.28msec.com/modules/credentials\";\n credentials:list-categories()\n </pre>\n </p>\n <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">The returned array contains the name of each distinct credential category.</p>\n", "summary" : "<p>  Lists all the credentials categories in the credentials store.</p>", "annotation_str" : "", "annotations" : [  ], "updating" : false, "parameters" : [  ], "returns" : { "type" : "array()", "description" : "An array of all the distinct credentials categories in the credentials store." }, "errors" : [ "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">credentials:CREDENTIALS-STORE if an internal error arises accessing the crendentials store</xqdoc:error>" ] }, { "isDocumented" : true, "arity" : 1, "name" : "list-category-credentials", "qname" : "credentials:list-category-credentials", "signature" : "($category-name as string) as array()", "description" : " <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">Lists all the credentials of the specified category in the\n credentials store.</p>\n <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">If no credentials for the given category are stored the empty\n sequence is returned.</p>\n <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">Example:\n <pre>\n import module namespace credentials = \"http://www.28msec.com/modules/credentials\";\n credentials:list-category-credentials(\"category-name\")\n </pre>\n </p>\n <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">The returned array contains one object for each credential. Each object has\n the following structure:\n <pre>\n {\n   \"category\": \"category-name\",\n   \"name\": \"credential-name\",\n   \"default\": true\n }\n </pre>\n Specifically the fields of each object have the following meaning:\n <ul>\n  <li>category: the name of the credentials category (string)</li>\n  <li>name: the name of the credentials (string)</li>\n  <li>default: whether the credentials are the default credentials in\n      their category (boolean)</li>\n </ul>\n </p>\n", "summary" : "<p>  Lists all the credentials of the specified category in the\n credentials store.</p>", "annotation_str" : "", "annotations" : [  ], "updating" : false, "parameters" : [ { "name" : "category-name", "type" : "string", "occurrence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> The credentials category name.</div>" } ], "returns" : { "type" : "array()", "description" : "An array of all the credentials of the specified category in the credentials store." }, "errors" : [ "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">credentials:NAME if the credentials or category name is invalid</xqdoc:error>", "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">credentials:CREDENTIALS-STORE if an internal error arises accessing the crendentials store</xqdoc:error>" ] }, { "isDocumented" : true, "arity" : 0, "name" : "list-credentials", "qname" : "credentials:list-credentials", "signature" : "() as array()", "description" : " <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">Lists all the credentials in the credentials store.</p>\n <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">If no credentials are stored the empty sequence is returned.</p>\n <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">Example:\n <pre>\n import module namespace credentials = \"http://www.28msec.com/modules/credentials\";\n credentials:list-credentials()\n </pre>\n </p>\n <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">The returned array contains one object for each credential. Each object has\n the following structure:\n <pre>\n {\n   \"category\": \"category-name\",\n   \"name\": \"credential-name\",\n   \"default\": true\n }\n </pre>\n Specifically the fields of each object have the following meaning:\n <ul>\n  <li>category: the name of the credentials category (string)</li>\n  <li>name: the name of the credentials (string)</li>\n  <li>default: whether the credentials are the default credentials in\n      their category (boolean)</li>\n </ul>\n </p>\n", "summary" : "<p>  Lists all the credentials in the credentials store.</p>", "annotation_str" : "", "annotations" : [  ], "updating" : false, "parameters" : [  ], "returns" : { "type" : "array()", "description" : "An array of all credentials in the credentials store." }, "errors" : [ "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">credentials:CREDENTIALS-STORE if an internal error arises accessing the crendentials store</xqdoc:error>" ] }, { "isDocumented" : true, "arity" : 2, "name" : "make-default", "qname" : "credentials:make-default", "signature" : "($category as string, $name as string) as empty-sequence()", "description" : " <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">Makes the specified credentials the default for their category.</p>\n <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">It is not allowed to call this method on credentials in the \"MongoDB\" category.</p>\n <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">If the specified credentials are not present an error is raised.</p>\n <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">Example:\n <pre>\n import module namespace credentials = \"http://www.28msec.com/modules/credentials\";\n credentials:make-default(\"S3\", \"DataBucket\");\n </pre>\n </p>\n", "summary" : "<p>  Makes the specified credentials the default for their category.</p>", "annotation_str" : " %an:sequential", "annotations" : [ { "prefix" : "an", "ns" : "http://zorba.io/annotations", "name" : "sequential", "value" : "" } ], "updating" : false, "parameters" : [ { "name" : "category", "type" : "string", "occurrence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> The credentials category name.</div>" }, { "name" : "name", "type" : "string", "occurrence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> The credentials name.</div>" } ], "returns" : { "type" : "empty-sequence()", "description" : "The empty sequence." }, "errors" : [ "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">credentials:NOT-EXIST if no credentials with the given name and category are present.</xqdoc:error>", "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">credentials:NAME if the credentials or category name is invalid</xqdoc:error>", "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">credentials:MONGO-DEFAULT if the specified category is MongoDB</xqdoc:error>", "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">credentials:CREDENTIALS-STORE if an internal error arises accessing the crendentials store</xqdoc:error>" ] }, { "isDocumented" : true, "arity" : 2, "name" : "remove-credentials", "qname" : "credentials:remove-credentials", "signature" : "($category as string, $name as string) as empty-sequence()", "description" : " <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">Removes the specified credentials from the credential store.</p>\n <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">If no credentials with the given name and category are present\n in the category store an error is raised.</p>\n <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">Example:\n <pre>\n import module namespace credentials = \"http://www.28msec.com/modules/credentials\";\n credentials:remove-credentials(\"S3\", \"DataBucket\");\n </pre>\n </p>\n", "summary" : "<p>  Removes the specified credentials from the credential store.</p>", "annotation_str" : " %an:sequential", "annotations" : [ { "prefix" : "an", "ns" : "http://zorba.io/annotations", "name" : "sequential", "value" : "" } ], "updating" : false, "parameters" : [ { "name" : "category", "type" : "string", "occurrence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> The credentials category name.</div>" }, { "name" : "name", "type" : "string", "occurrence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> The credentials name.</div>" } ], "returns" : { "type" : "empty-sequence()", "description" : "The empty sequence." }, "errors" : [ "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">credentials:NOT-EXIST if no credentials with the given name and category exist.</xqdoc:error>", "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">credentials:NAME if the credentials or category name is invalid</xqdoc:error>", "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">credentials:MONGO-DEFAULT if the specified credentials and category name correspond with the default MongoDB credentials</xqdoc:error>", "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">credentials:CREDENTIALS-STORE if an internal error arises accessing the crendentials store</xqdoc:error>" ] }, { "isDocumented" : true, "arity" : 5, "name" : "update-credentials", "qname" : "credentials:update-credentials", "signature" : "($category as string, $name as string, $new-default as boolean?, $new-name as string?, $new-credentials as object()?) as empty-sequence()", "description" : " <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">Updates the specified credentials in the credential store.</p>\n <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">It is possible to specify whether the credentials should become or stop being the\n default credentials in their category, rename the credentials or change the credentials\n object. These three changes are specified by means of the $new-default, $new-name and\n $new-credentials parameter. If the corresponding parameter is the empty sequence the\n corresponding property will not be changed.</p>\n <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">For example the following query renames the \"DataBucket\" credentials in the \"S3\"\n category as \"Bucket\":\n <pre>\n import module namespace credentials = \"http://www.28msec.com/modules/credentials\";\n credentials:update-credentials(\"S3\", \"DataBucket\", (), \"Bucket\", () );\n </pre>\n </p>\n", "summary" : "<p>  Updates the specified credentials in the credential store.</p>", "annotation_str" : " %an:sequential", "annotations" : [ { "prefix" : "an", "ns" : "http://zorba.io/annotations", "name" : "sequential", "value" : "" } ], "updating" : false, "parameters" : [ { "name" : "category", "type" : "string", "occurrence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> The credentials category name.</div>" }, { "name" : "name", "type" : "string", "occurrence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> The credentials name.</div>" }, { "name" : "new-default", "type" : "boolean", "occurrence" : "?", "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> Whether the credentials should become/stop being the default credentials in their category. If it is an empty sequence the current default property will not be changed.</div>" }, { "name" : "new-name", "type" : "string", "occurrence" : "?", "description" : "" }, { "name" : "new-credentials", "type" : "object()", "occurrence" : "?", "description" : "" } ], "returns" : { "type" : "empty-sequence()", "description" : "the empty sequence" }, "errors" : [ "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">credentials:NOT-EXIST if credentials with the given name and category do not exist.</xqdoc:error>", "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">credentials:EXIST if credentials with the given new name and category are already present.</xqdoc:error>", "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">credentials:NAME if the credentials or category name is invalid</xqdoc:error>", "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">credentials:MONGO-DEFAULT if the specified credentials or category name correspond with the default MongoDB credentials</xqdoc:error>", "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">credentials:TEST if a connection cannot be established using the specified credentials</xqdoc:error>", "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">credentials:CREDENTIALS-STORE if an internal error arises accessing the crendentials store</xqdoc:error>" ] } ], "variables" : [  ] }, "http://www.28msec.com/modules/parallelism" : { "ns" : "http://www.28msec.com/modules/parallelism", "description" : " <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">This module provides functionality for executing FLWOR queries in parallel.</p>\n <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">There are two kinds of parallel jobs: map jobs and shuffle jobs.</p>\n <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">A map job runs a mapping function on the items of an input collection. The input\n collection is chunked and the mapping function is called on each chunk in parallel.\n The results are either inserted in a single collection, or on one ouptut collection\n for each chunk.</p>\n <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">A shuffle job shuffles the items of an input collection to several output collections.\n The input collection is chunked and each chunk is processed in parallel.\n The selection of the output collection for each item is done with a shuffling function.</p>\n <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">It is also possible to run a map or shuffle job on the output of another map or shuffle\n job (piping).\n Keep in mind though that if an intermediate output is in a\n single collection, no chunking can be done: only the first job of the pipeline can chunk\n its input.\n Hence, for performance, it makes sense that all intermediate jobs\n in the pipeline (except the last one, although not compulsory) output to automatically\n generated temporary collections rather than a single collection. That way, the next job\n can be executed on these collections in parallel.</p>\n <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">Map jobs allow the parallel execution of \"simple\" FLWORs: a for on a big collection, let clauses,\n small for clauses, where clauses.\n Map-shuffle-map piping allows the parallel execution of FLWORs containing a group by clause.\n Jobs can be composed in many ways, for example map-map-shuffle-map-shuffle-map. This way,\n FLWORs with several group by clauses can be parallelized.\n In some circumstances, FLWORs with order by clauses (using bucket sort) can also be\n parallelized, but one should keep in mind that collections are not ordered so that\n any ordering within a map job is susceptible to be lost in the output.</p>\n", "sees" : [  ], "authors" : [ "<xqdoc:author xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">Ghislain Fourny</xqdoc:author>", "<xqdoc:author xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">Julien Ribon</xqdoc:author>" ], "version" : null, "encoding" : "utf-8", "namespaces" : [ { "uri" : "", "prefix" : "an" }, { "uri" : "http://www.28msec.com/modules/asynchronous-jobs", "prefix" : "job" }, { "uri" : "http://www.28msec.com/modules/parallelism", "prefix" : "parallel" }, { "uri" : "http://zorba.io/modules/random", "prefix" : "rand" }, { "uri" : "http://www.28msec.com/modules/store", "prefix" : "store" } ], "functions" : [ { "isDocumented" : true, "arity" : 1, "name" : "job-statuses", "qname" : "parallel:job-statuses", "signature" : "($id as xs:string) as object()?", "description" : " <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">Returns the statuses of the underlying asynchronous jobs, as an object\n indicating the number of chunks in each status.</p>\n", "summary" : "<p>  Returns the statuses of the underlying asynchronous jobs, as an object\n indicating the number of chunks in each status.</p>", "annotation_str" : " %an:nondeterministic", "annotations" : [ { "prefix" : "an", "ns" : "", "name" : "nondeterministic", "value" : "" } ], "updating" : false, "parameters" : [ { "name" : "id", "type" : "xs:string", "occurrence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> The id of the parallel job to query, as it was returned by map or shuffle.</div>" } ], "returns" : { "type" : "object()?", "description" : "The statuses of the underlying jobs. The empty sequence if the parallel job does not exist." }, "errors" : [  ] }, { "isDocumented" : true, "arity" : 2, "name" : "map", "qname" : "parallel:map", "signature" : "($input as xs:string, $function as function (item()*) as item()*) as xs:string", "description" : " <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">Schedules a parallel map job on a collection or on the output of another\n parallel job.</p>\n <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">The name of the output collections are randomly generated (one for\n each chunk and start with <tt>_28.temporary</tt>.</p>\n <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">Example of usage:</p>\n parallel:map(\"input\", my:function#1)\n", "summary" : "<p>  Schedules a parallel map job on a collection or on the output of another\n parallel job.</p>", "annotation_str" : " %an:sequential", "annotations" : [ { "prefix" : "an", "ns" : "", "name" : "sequential", "value" : "" } ], "updating" : false, "parameters" : [ { "name" : "input", "type" : "xs:string", "occurrence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> The name of the collection to process, or the id of a parallel job of which the output will be taken.</div>" }, { "name" : "function", "type" : "function (item()*) as item()*", "occurrence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> the function which is run in parallel on the collection's contents.</div>" } ], "returns" : { "type" : "xs:string", "description" : "A parallel job id that can be used to query the parallel job's properties." }, "errors" : [ "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">job:JBDY0005 if the supplied function does not have a name.</xqdoc:error>", "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">job:JBDY0006 if the supplied function is in the local namespace.</xqdoc:error>", "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">job:JPDY0001 if the input is not an available collection or a parallel job id.</xqdoc:error>" ] }, { "isDocumented" : true, "arity" : 3, "name" : "map", "qname" : "parallel:map", "signature" : "($input as xs:string, $function as function (item()*) as item()*, $options as object()?) as xs:string", "description" : " <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">Schedules a parallel map job on a collection or on the output of another\n parallel job.</p>\n <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">The $options parameter allows for the specification of properties for\n the parallel job. Allowed options are:\n <ul>\n   <li><tt>output-collection as string</tt>: the name of the collection in\n     which the output of the executed query is stored. If not specified,\n     the result of the query will be stored in a collection withing the\n     MongoDB database associated with the project. The name of the\n     collection is randomly generated and starts with <tt>_28.temporary</tt>\n   </li>\n   <li><tt>chunk-size</tt>: the size of the chunks the collection must be split\n   into, if it is not already sharded (default: MongoDB sharding, or 1000).\n   </li>\n </ul>\n </p>\n <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">Example of usage:</p>\n parallel:map(\"input\", my:function#1, { \"chunk-size\" : xs:int(1000) })\n parallel:map(\"input\",\n              my:function#1,\n              {\n                \"chunk-size\" : xs:int(1000),\n                \"output-collection\" : output\"\n              }\n )\n", "summary" : "<p>  Schedules a parallel map job on a collection or on the output of another\n parallel job.</p>", "annotation_str" : " %an:sequential", "annotations" : [ { "prefix" : "an", "ns" : "", "name" : "sequential", "value" : "" } ], "updating" : false, "parameters" : [ { "name" : "input", "type" : "xs:string", "occurrence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> The name of the collection to process, or the id of a parallel job of which the output will be taken.</div>" }, { "name" : "function", "type" : "function (item()*) as item()*", "occurrence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> The function which is run in parallel on the collection's contents.</div>" }, { "name" : "options", "type" : "object()", "occurrence" : "?", "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> An object specifying above options for the parallel job.</div>" } ], "returns" : { "type" : "xs:string", "description" : "A parallel job id that can be used to query the parallel job's properties." }, "errors" : [ "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">err:XPTY0004 if the type of a supplied option is incorrect.</xqdoc:error>", "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">job:JBDY0005 if the supplied function does not have a name.</xqdoc:error>", "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">job:JBDY0006 if the supplied function is in the local namespace.</xqdoc:error>", "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">job:JPDY0001 if the input is not an available collection or a parallel job id.</xqdoc:error>" ] }, { "isDocumented" : true, "arity" : 1, "name" : "output-collections", "qname" : "parallel:output-collections", "signature" : "($id as xs:string) as xs:string*", "description" : " <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">Returns the output collections of the specified parallel job.</p>\n", "summary" : "<p>  Returns the output collections of the specified parallel job.</p>", "annotation_str" : " %an:nondeterministic", "annotations" : [ { "prefix" : "an", "ns" : "", "name" : "nondeterministic", "value" : "" } ], "updating" : false, "parameters" : [ { "name" : "id", "type" : "xs:string", "occurrence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> The id of the parallel job to query, as it was returned by map or shuffle.</div>" } ], "returns" : { "type" : "xs:string*", "description" : "The names of the output collections to which the corresponding parallel job writes. The empty sequence if the job does not exist." }, "errors" : [  ] }, { "isDocumented" : true, "arity" : 1, "name" : "results", "qname" : "parallel:results", "signature" : "($id as xs:string) as item()*", "description" : " <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">Returns the results of the specified parallel job.</p>\n", "summary" : "<p>  Returns the results of the specified parallel job.</p>", "annotation_str" : " %an:nondeterministic", "annotations" : [ { "prefix" : "an", "ns" : "", "name" : "nondeterministic", "value" : "" } ], "updating" : false, "parameters" : [ { "name" : "id", "type" : "xs:string", "occurrence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> The id of the parallel job to query, as it was returned by map or shuffle.</div>" } ], "returns" : { "type" : "item()*", "description" : "The structured items output by the corresponding parallel job. The empty sequence if the job does not exist." }, "errors" : [  ] }, { "isDocumented" : true, "arity" : 2, "name" : "shuffle", "qname" : "parallel:shuffle", "signature" : "($input as xs:string, $function as function (item()) as xs:integer) as xs:string", "description" : " <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">Schedules a parallel shuffle job on a collection or on the output of another\n parallel job.</p>\n <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">The output collection for each item is determined by calling the shuffle function,\n which gives an integer i. The i-th output collection\n is then taken. If necessary, a modulo operation is done\n to make sure that the integer is comprised between 1 and the number of output collections.</p>\n <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">The name of the output collections are randomly generated (10 of them) and\n start with <tt>_28.temporary</tt>.</p>\n <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">Example of usage:</p>\n parallel:shuffle(\"input\", my:function#1)\n", "summary" : "<p>  Schedules a parallel shuffle job on a collection or on the output of another\n parallel job.</p>", "annotation_str" : " %an:sequential", "annotations" : [ { "prefix" : "an", "ns" : "", "name" : "sequential", "value" : "" } ], "updating" : false, "parameters" : [ { "name" : "input", "type" : "xs:string", "occurrence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> The name of the collection to process, or the id of a parallel job of which the output will be taken.</div>" }, { "name" : "function", "type" : "function (item()) as xs:integer", "occurrence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> the function which is run on each item to determine where it is shuffled to.</div>" } ], "returns" : { "type" : "xs:string", "description" : "A parallel job id that can be used to query the parallel job's properties." }, "errors" : [ "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">job:JBDY0005 if the supplied function does not have a name.</xqdoc:error>", "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">job:JBDY0006 if the supplied function is in the local namespace.</xqdoc:error>", "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">job:JPDY0001 if the input is not an available collection or a parallel job id.</xqdoc:error>" ] }, { "isDocumented" : true, "arity" : 3, "name" : "shuffle", "qname" : "parallel:shuffle", "signature" : "($input as item(), $function as function (item()) as xs:integer, $options as object()?) as xs:string", "description" : " <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">Schedules a parallel shuffle job on a collection or on the output of another\n parallel job.</p>\n <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">The output collection for each item is determined by calling the shuffle function,\n which gives an integer i. The i-th output collection\n is then taken. If necessary, a modulo operation is done\n to make sure that the integer is comprised between 1 and the number of output collections.</p>\n <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">The $options parameter allows for the specification of properties for\n the parallel shuffle job. Allowed options are:\n <ul>\n   <li><tt>number-of-output-collections as integer</tt>: the number of output collections\n     to automatically generate if none are provided. The default value is 10. An error is raised\n     if the provided value is not positive.\n   </li>\n   <li><tt>output-collections as array</tt>: an array with the names of the collections in\n     which the items of the input collections are shuffled. If not specified,\n     these collections will be automatically generated (as many as specified in the\n     <tt>number-of-output-collections</tt> option) in the\n     MongoDB database associated with the project. The name of the\n     collections are randomly generated and start with <tt>_28.temporary</tt>\n   </li>\n   <li><tt>chunk-size</tt>: the size of the chunks the collection must be split\n   into, if it is not already sharded (default: MongoDB sharding, or 1000).\n   </li>\n </ul>\n </p>\n <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">Example of usage:</p>\n parallel:shuffle(\"input\", my:function#1, { \"chunk-size\" : xs:int(1000) })\n parallel:shuffle(\"input\",\n                  my:function#1,\n                  {\n                    \"chunk-size\" : xs:int(1000),\n                    \"output-collections\" : [ \"output1\", \"output2\" ]\n                  }\n )\n parallel:shuffle(\"input\",\n                  my:function#1,\n                  {\n                    \"number-of-output-collections\" : 20\n                  }\n )\n", "summary" : "<p>  Schedules a parallel shuffle job on a collection or on the output of another\n parallel job.</p>", "annotation_str" : " %an:sequential", "annotations" : [ { "prefix" : "an", "ns" : "", "name" : "sequential", "value" : "" } ], "updating" : false, "parameters" : [ { "name" : "input", "type" : "item()", "occurrence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> The name of the collection to process, or the id of a parallel job of which the output will be taken.</div>" }, { "name" : "function", "type" : "function (item()) as xs:integer", "occurrence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> the function which is run on each item to determine where it is shuffled to.</div>" }, { "name" : "options", "type" : "object()", "occurrence" : "?", "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> An object specifying above options for the parallel shuffle job.</div>" } ], "returns" : { "type" : "xs:string", "description" : "A parallel job id that can be used to query the parallel job's properties." }, "errors" : [ "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">err:XPTY0004 if the type of a supplied option is incorrect.</xqdoc:error>", "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">job:JBDY0005 if the supplied function does not have a name.</xqdoc:error>", "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">job:JBDY0006 if the supplied function is in the local namespace.</xqdoc:error>", "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">job:JPDY0001 if the input is not an available collection or a parallel job id.</xqdoc:error>", "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">err:FOCA0002 if number-of-output-collections is not a positive integer.</xqdoc:error>" ] }, { "isDocumented" : true, "arity" : 1, "name" : "status", "qname" : "parallel:status", "signature" : "($id as xs:string) as xs:string?", "description" : " <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">Returns the general status of the parallel job.</p>\n", "summary" : "<p>  Returns the general status of the parallel job.</p>", "annotation_str" : " %an:nondeterministic", "annotations" : [ { "prefix" : "an", "ns" : "", "name" : "nondeterministic", "value" : "" } ], "updating" : false, "parameters" : [ { "name" : "id", "type" : "xs:string", "occurrence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> id of the parallel job to query, as it was returned by map or shuffle.</div>" } ], "returns" : { "type" : "xs:string?", "description" : "The status of the corresponding parallel job. The empty sequence if the job does not exist." }, "errors" : [  ] } ], "variables" : [  ] }, "http://www.zorba-xquery.com/modules/image/graphviz" : { "ns" : "http://www.zorba-xquery.com/modules/image/graphviz", "description" : " <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">Module that provides functions for generating SVG graphs.</p>\n <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">The module provides two function for generating graphs given in the :\n <ul><li>DOT language (see <a href=\"http://www.graphviz.org/\">\n http://www.graphviz.org</a>)</li><li>or in the XML-based Graph eXchange\n Language (see <a href=\"http://www.gupro.de/GXL/\">http://www.gupro.de/GXL/</a>),\n respectively.</li></ul>\n Both functions use the Graphviz Visualization Library in order to\n layout and render the graphs. As a result, both return a sequence\n of (document)-nodes (one for each input graph).\n These nodes are instances of the Scalable Vector Graphics (SVG) format.\n SVG is a language for describing two-dimensional graphics and\n graphical applications in XML. More information about SVG can\n be found at <a href=\"http://www.w3.org/Graphics/SVG/\">http://www.w3.org/Graphics/SVG/</a>.\n As second parameters, both functions take a sequence of strings that\n are parameters for the graph generation and rendering algorithms.\n Currently, only the empty-sequence is allowed here.\n These parameters exist for future use.</p>\n <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">Please note that this feature is only available on Unix-based\n platforms (i.e. not on Windows).</p>\n", "sees" : [  ], "authors" : [ "<xqdoc:author xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"><a href=\"http://www.28msec.com/home/index\">28msec</a></xqdoc:author>" ], "version" : null, "encoding" : "utf-8", "namespaces" : [ { "uri" : "http://www.zorba-xquery.com/modules/image/graphviz", "prefix" : "gr" }, { "uri" : "http://zorba.io/options/versioning", "prefix" : "ver" } ], "functions" : [ { "isDocumented" : true, "arity" : 2, "name" : "dot", "qname" : "gr:dot", "signature" : "($dot as xs:string*, $params as xs:string*) as node()* external", "description" : " Layout one ore more graphs given in the DOT language and render\n them as SVG. For example,\n <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"><code>\n dot(\"digraph mygraph { p -&gt; q }\", ())\n </code></p>\n", "summary" : "<p> Layout one ore more graphs given in the DOT language and render\n them as SVG.</p>", "annotation_str" : "", "annotations" : [  ], "updating" : false, "parameters" : [ { "name" : "dot", "type" : "xs:string", "occurrence" : "*", "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> A dot description of the graph to render.</div>" }, { "name" : "params", "type" : "xs:string", "occurrence" : "*", "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> Parameters to configure the layout and rendering process. Currently, only the empty-sequence is allowed here.</div>" } ], "returns" : { "type" : "node()*", "description" : "A graph for each item in the sequence given using the first parameter. The result sequence consists of items which are instance of the SVG data model." }, "errors" : [  ] }, { "isDocumented" : true, "arity" : 2, "name" : "gxl", "qname" : "gr:gxl", "signature" : "($gxl as node()*, $params as xs:string*) as node()* external", "description" : " Layout one ore more graphs given in the GXL language and render\n them as SVG.\n", "summary" : "<p> Layout one ore more graphs given in the GXL language and render\n them as SVG.</p>", "annotation_str" : "", "annotations" : [  ], "updating" : false, "parameters" : [ { "name" : "gxl", "type" : "node()", "occurrence" : "*", "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> A GXL description of the graph to render.</div>" }, { "name" : "params", "type" : "xs:string", "occurrence" : "*", "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> Parameters to configure the layout and rendering process. Currently, only the empty-sequence is allowed here.</div>" } ], "returns" : { "type" : "node()*", "description" : "A graph for each item in the sequence given using the first parameter. The result sequence consists of items which are instance of the SVG data model." }, "errors" : [  ] } ], "variables" : [  ] }, "http://zorba.io/modules/data-cleaning/token-based-string-similarity" : { "ns" : "http://zorba.io/modules/data-cleaning/token-based-string-similarity", "description" : " <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">This library module provides token-based string similarity functions that view strings\n as sets or multi-sets of tokens and use set-related properties to compute similarity scores.</p>\n <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">The tokens correspond to groups of characters extracted from the strings being compared, such as\n individual words or character n-grams.</p>\n <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"/>\n <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">These functions are particularly useful for matching near duplicate strings in cases where\n typographical conventions often lead to rearrangement of words (e.g., \"John Smith\" versus \"Smith, John\").</p>\n <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"/>\n <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">The logic contained in this module is not specific to any particular XQuery implementation,\n although the module requires the trigonometic functions of XQuery 3.0 or a math extension\n function such as sqrt($x as numeric) for computing the square root.</p>\n", "sees" : [  ], "authors" : [ "<xqdoc:author xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">Bruno Martins</xqdoc:author>" ], "version" : null, "encoding" : "utf-8", "namespaces" : [ { "uri" : "http://www.w3.org/2005/xpath-functions/math", "prefix" : "math" }, { "uri" : "http://zorba.io/modules/data-cleaning/set-similarity", "prefix" : "set" }, { "uri" : "http://zorba.io/modules/data-cleaning/token-based-string-similarity", "prefix" : "simt" }, { "uri" : "http://zorba.io/options/versioning", "prefix" : "ver" } ], "functions" : [ { "isDocumented" : true, "arity" : 3, "name" : "cosine-ngrams", "qname" : "simt:cosine-ngrams", "signature" : "($s1 as xs:string, $s2 as xs:string, $n as xs:integer) as xs:double", "description" : " <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">Returns the cosine similarity coefficient between sets of character n-grams extracted from two strings.</p>\n <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">The n-grams from each string are weighted according to their occurence frequency (i.e., weighted according to\n the term-frequency heuristic from Information Retrieval).</p>\n <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"/>\n <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">Example usage : <pre class=\"ace-static\" ace-mode=\"xquery\"> cosine-ngrams(\"DWAYNE\", \"DUANE\", 2 ) </pre></p>\n <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"/>\n <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">The function invocation in the example above returns : <pre class=\"ace-static\" ace-mode=\"xquery\"> 0.2401922307076307 </pre></p>\n", "summary" : "<p>  Returns the cosine similarity coefficient between sets of character n-grams extracted from two strings.</p>", "annotation_str" : "", "annotations" : [  ], "updating" : false, "parameters" : [ { "name" : "s1", "type" : "xs:string", "occurrence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> The first string.</div>" }, { "name" : "s2", "type" : "xs:string", "occurrence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> The second string.</div>" }, { "name" : "n", "type" : "xs:integer", "occurrence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> The number of characters to consider when extracting n-grams.</div>" } ], "returns" : { "type" : "xs:double", "description" : "The cosine similarity coefficient between the sets n-grams extracted from the two strings." }, "errors" : [  ] }, { "isDocumented" : true, "arity" : 3, "name" : "cosine-tokens", "qname" : "simt:cosine-tokens", "signature" : "($s1 as xs:string, $s2 as xs:string, $r as xs:string) as xs:double", "description" : " <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">Returns the cosine similarity coefficient between sets of tokens extracted from two strings. The tokens\n from each string are weighted according to their occurence frequency (i.e., weighted according to the\n term-frequency heuristic from Information Retrieval).</p>\n <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"/>\n <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">Example usage : <pre class=\"ace-static\" ace-mode=\"xquery\"> cosine-tokens(\"The FLWOR Foundation\", \"FLWOR Found.\", \" +\" ) </pre></p>\n <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"/>\n <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">The function invocation in the example above returns : <pre class=\"ace-static\" ace-mode=\"xquery\"> 0.408248290463863 </pre></p>\n", "summary" : "<p>  Returns the cosine similarity coefficient between sets of tokens extracted from two strings.</p>", "annotation_str" : "", "annotations" : [  ], "updating" : false, "parameters" : [ { "name" : "s1", "type" : "xs:string", "occurrence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> The first string.</div>" }, { "name" : "s2", "type" : "xs:string", "occurrence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> The second string.</div>" }, { "name" : "r", "type" : "xs:string", "occurrence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> A regular expression forming the delimiter character(s) which mark the boundaries between adjacent tokens.</div>" } ], "returns" : { "type" : "xs:double", "description" : "The cosine similarity coefficient between the sets tokens extracted from the two strings." }, "errors" : [  ] }, { "isDocumented" : true, "arity" : 2, "name" : "cosine", "qname" : "simt:cosine", "signature" : "($desc1 as xs:string*, $desc2 as xs:string*) as xs:double", "description" : " <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">Auxiliary function for computing the cosine similarity coefficient between strings,\n using stringdescriptors based on sets of character n-grams or sets of tokens extracted from two strings.</p>\n <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"/>\n <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">Example usage : <pre class=\"ace-static\" ace-mode=\"xquery\"> cosine( (\"aa\",\"bb\") , (\"bb\",\"aa\")) </pre></p>\n <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"/>\n <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">The function invocation in the example above returns : <pre class=\"ace-static\" ace-mode=\"xquery\"> 1.0 </pre></p>\n", "summary" : "<p>  Auxiliary function for computing the cosine similarity coefficient between strings,\n using stringdescriptors based on sets of character n-grams or sets of tokens extracted from two strings.</p>", "annotation_str" : "", "annotations" : [  ], "updating" : false, "parameters" : [ { "name" : "desc1", "type" : "xs:string", "occurrence" : "*", "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> The descriptor for the first string.</div>" }, { "name" : "desc2", "type" : "xs:string", "occurrence" : "*", "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> The descriptor for the second string.</div>" } ], "returns" : { "type" : "xs:double", "description" : "The cosine similarity coefficient between the descriptors for the two strings." }, "errors" : [  ] }, { "isDocumented" : true, "arity" : 3, "name" : "dice-ngrams", "qname" : "simt:dice-ngrams", "signature" : "($s1 as xs:string, $s2 as xs:string, $n as xs:integer) as xs:double", "description" : " <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">Returns the Dice similarity coefficient between sets of character n-grams extracted from two strings.</p>\n <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"/>\n <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">Example usage : <pre class=\"ace-static\" ace-mode=\"xquery\"> dice-ngrams(\"DWAYNE\", \"DUANE\", 2 ) </pre></p>\n <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"/>\n <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">The function invocation in the example above returns : <pre class=\"ace-static\" ace-mode=\"xquery\"> 0.4615384615384616 </pre></p>\n", "summary" : "<p>  Returns the Dice similarity coefficient between sets of character n-grams extracted from two strings.</p>", "annotation_str" : "", "annotations" : [  ], "updating" : false, "parameters" : [ { "name" : "s1", "type" : "xs:string", "occurrence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> The first string.</div>" }, { "name" : "s2", "type" : "xs:string", "occurrence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> The second string.</div>" }, { "name" : "n", "type" : "xs:integer", "occurrence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> The number of characters to consider when extracting n-grams.</div>" } ], "returns" : { "type" : "xs:double", "description" : "The Dice similarity coefficient between the sets of character n-grams extracted from the two strings." }, "errors" : [  ] }, { "isDocumented" : true, "arity" : 3, "name" : "dice-tokens", "qname" : "simt:dice-tokens", "signature" : "($s1 as xs:string, $s2 as xs:string, $r as xs:string) as xs:double", "description" : " <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">Returns the Dice similarity coefficient between sets of tokens extracted from two strings.</p>\n <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"/>\n <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">Example usage : <pre class=\"ace-static\" ace-mode=\"xquery\"> dice-tokens(\"The FLWOR Foundation\", \"FLWOR Found.\", \" +\" ) </pre></p>\n <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"/>\n <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">The function invocation in the example above returns : <pre class=\"ace-static\" ace-mode=\"xquery\"> 0.4 </pre></p>\n", "summary" : "<p>  Returns the Dice similarity coefficient between sets of tokens extracted from two strings.</p>", "annotation_str" : "", "annotations" : [  ], "updating" : false, "parameters" : [ { "name" : "s1", "type" : "xs:string", "occurrence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> The first string.</div>" }, { "name" : "s2", "type" : "xs:string", "occurrence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> The second string.</div>" }, { "name" : "r", "type" : "xs:string", "occurrence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> A regular expression forming the delimiter character(s) which mark the boundaries between adjacent tokens.</div>" } ], "returns" : { "type" : "xs:double", "description" : "The Dice similarity coefficient between the sets tokens extracted from the two strings." }, "errors" : [  ] }, { "isDocumented" : true, "arity" : 3, "name" : "jaccard-ngrams", "qname" : "simt:jaccard-ngrams", "signature" : "($s1 as xs:string, $s2 as xs:string, $n as xs:integer) as xs:double", "description" : " <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">Returns the Jaccard similarity coefficient between sets of character n-grams extracted from two strings.</p>\n <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"/>\n <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">Example usage : <pre class=\"ace-static\" ace-mode=\"xquery\"> jaccard-ngrams(\"DWAYNE\", \"DUANE\", 2 ) </pre></p>\n <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"/>\n <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">The function invocation in the example above returns : <pre class=\"ace-static\" ace-mode=\"xquery\"> 0.3 </pre></p>\n", "summary" : "<p>  Returns the Jaccard similarity coefficient between sets of character n-grams extracted from two strings.</p>", "annotation_str" : "", "annotations" : [  ], "updating" : false, "parameters" : [ { "name" : "s1", "type" : "xs:string", "occurrence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> The first string.</div>" }, { "name" : "s2", "type" : "xs:string", "occurrence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> The second string.</div>" }, { "name" : "n", "type" : "xs:integer", "occurrence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> The number of characters to consider when extracting n-grams.</div>" } ], "returns" : { "type" : "xs:double", "description" : "The Jaccard similarity coefficient between the sets of character n-grams extracted from the two strings." }, "errors" : [  ] }, { "isDocumented" : true, "arity" : 3, "name" : "jaccard-tokens", "qname" : "simt:jaccard-tokens", "signature" : "($s1 as xs:string, $s2 as xs:string, $r as xs:string) as xs:double", "description" : " <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">Returns the Jaccard similarity coefficient between sets of tokens extracted from two strings.</p>\n <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"/>\n <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">Example usage : <pre class=\"ace-static\" ace-mode=\"xquery\"> jaccard-tokens(\"The FLWOR Foundation\", \"FLWOR Found.\", \" +\" ) </pre></p>\n <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"/>\n <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">The function invocation in the example above returns : <pre class=\"ace-static\" ace-mode=\"xquery\"> 0.25 </pre></p>\n", "summary" : "<p>  Returns the Jaccard similarity coefficient between sets of tokens extracted from two strings.</p>", "annotation_str" : "", "annotations" : [  ], "updating" : false, "parameters" : [ { "name" : "s1", "type" : "xs:string", "occurrence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> The first string.</div>" }, { "name" : "s2", "type" : "xs:string", "occurrence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> The second string.</div>" }, { "name" : "r", "type" : "xs:string", "occurrence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> A regular expression forming the delimiter character(s) which mark the boundaries between adjacent tokens.</div>" } ], "returns" : { "type" : "xs:double", "description" : "The Jaccard similarity coefficient between the sets tokens extracted from the two strings." }, "errors" : [  ] }, { "isDocumented" : true, "arity" : 2, "name" : "ngrams", "qname" : "simt:ngrams", "signature" : "($s as xs:string, $n as xs:integer) as xs:string*", "description" : " <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">Returns the individual character n-grams forming a string.</p>\n <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"/>\n <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">Example usage : <pre class=\"ace-static\" ace-mode=\"xquery\"> ngrams(\"FLWOR\", 2 ) </pre></p>\n <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"/>\n <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">The function invocation in the example above returns : <pre class=\"ace-static\" ace-mode=\"xquery\"> (\"_F\" , \"FL\" , \"LW\" , \"WO\" , \"LW\" , \"WO\" , \"OR\" , \"R_\") </pre></p>\n", "summary" : "<p>  Returns the individual character n-grams forming a string.</p>", "annotation_str" : "", "annotations" : [  ], "updating" : false, "parameters" : [ { "name" : "s", "type" : "xs:string", "occurrence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> The input string.</div>" }, { "name" : "n", "type" : "xs:integer", "occurrence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> The number of characters to consider when extracting n-grams.</div>" } ], "returns" : { "type" : "xs:string*", "description" : "The sequence of strings with the extracted n-grams." }, "errors" : [  ] }, { "isDocumented" : true, "arity" : 3, "name" : "overlap-ngrams", "qname" : "simt:overlap-ngrams", "signature" : "($s1 as xs:string, $s2 as xs:string, $n as xs:integer) as xs:double", "description" : " <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">Returns the overlap similarity coefficient between sets of character n-grams extracted from two strings.</p>\n <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"/>\n <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">Example usage : <pre class=\"ace-static\" ace-mode=\"xquery\"> overlap-ngrams(\"DWAYNE\", \"DUANE\", 2 ) </pre></p>\n <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"/>\n <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">The function invocation in the example above returns : <pre class=\"ace-static\" ace-mode=\"xquery\"> 0.5 </pre></p>\n", "summary" : "<p>  Returns the overlap similarity coefficient between sets of character n-grams extracted from two strings.</p>", "annotation_str" : "", "annotations" : [  ], "updating" : false, "parameters" : [ { "name" : "s1", "type" : "xs:string", "occurrence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> The first string.</div>" }, { "name" : "s2", "type" : "xs:string", "occurrence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> The second string.</div>" }, { "name" : "n", "type" : "xs:integer", "occurrence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> The number of characters to consider when extracting n-grams.</div>" } ], "returns" : { "type" : "xs:double", "description" : "The overlap similarity coefficient between the sets of character n-grams extracted from the two strings." }, "errors" : [  ] }, { "isDocumented" : true, "arity" : 3, "name" : "overlap-tokens", "qname" : "simt:overlap-tokens", "signature" : "($s1 as xs:string, $s2 as xs:string, $r as xs:string) as xs:double", "description" : " <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">Returns the overlap similarity coefficient between sets of tokens extracted from two strings.</p>\n <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"/>\n <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">Example usage : <pre class=\"ace-static\" ace-mode=\"xquery\"> overlap-tokens(\"The FLWOR Foundation\", \"FLWOR Found.\", \" +\" ) </pre></p>\n <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"/>\n <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">The function invocation in the example above returns : <pre class=\"ace-static\" ace-mode=\"xquery\"> 0.5 </pre></p>\n", "summary" : "<p>  Returns the overlap similarity coefficient between sets of tokens extracted from two strings.</p>", "annotation_str" : "", "annotations" : [  ], "updating" : false, "parameters" : [ { "name" : "s1", "type" : "xs:string", "occurrence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> The first string.</div>" }, { "name" : "s2", "type" : "xs:string", "occurrence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> The second string.</div>" }, { "name" : "r", "type" : "xs:string", "occurrence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> A regular expression forming the delimiter character(s) which mark the boundaries between adjacent tokens.</div>" } ], "returns" : { "type" : "xs:double", "description" : "The overlap similarity coefficient between the sets tokens extracted from the two strings." }, "errors" : [  ] } ], "variables" : [  ] }, "http://www.zorba-xquery.com/modules/image/paint" : { "ns" : "http://www.zorba-xquery.com/modules/image/paint", "description" : " This module provides a function to extend an image with additional shapes.\n Fully supported image formats are:\n <ul xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">\n   <li>GIF</li>\n   <li>JPEG</li>\n   <li>PNG</li>\n   <li>TIFF</li>\n   <li>BMP</li>\n </ul>\n <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">The errors raised by functions of this module have the namespace\n <tt>http://www.zorba-xquery.com/modules/image/error</tt> (associated with prefix ierr).</p>\n", "sees" : [  ], "authors" : [ "<xqdoc:author xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">Daniel Thomas</xqdoc:author>" ], "version" : null, "encoding" : "utf-8", "namespaces" : [ { "uri" : "http://www.w3.org/2005/xqt-errors", "prefix" : "err" }, { "uri" : "http://www.zorba-xquery.com/modules/image/error", "prefix" : "ierr" }, { "uri" : "http://www.zorba-xquery.com/modules/image/image", "prefix" : "img" }, { "uri" : "http://www.zorba-xquery.com/modules/image/paint", "prefix" : "paint" }, { "uri" : "http://zorba.io/options/versioning", "prefix" : "ver" } ], "functions" : [ { "isDocumented" : true, "arity" : 2, "name" : "paint", "qname" : "paint:paint", "signature" : "($image as xs:base64Binary, $shapes as element(*)*) as xs:base64Binary", "description" : " Extends the passed image with a sequence of shapes.\n The shapes are passed as a sequence of elements.\n The possibilities for shape elements are:\n    <ul xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">\n      <li> line:\n        <pre class=\"brush: xml\">\n          &lt;img:line&gt;\n            &lt;img:start&gt;&lt;img:x&gt;-20&lt;/img:x&gt;&lt;img:y&gt;-20&lt;/img:y&gt;&lt;/img:start&gt;\n            &lt;img:end&gt;&lt;img:x&gt;80&lt;/img:x&gt;&lt;img:y&gt;80&lt;/img:y&gt;&lt;/img:end&gt;\n          &lt;/img:line&gt;</pre>\n      </li>\n       <li> polyline:\n         <pre class=\"brush: xml\">\n           &lt;img:polyLine&gt;\n             &lt;img:point&gt;&lt;img:x&gt;10&lt;/img:x&gt;&lt;img:y&gt;10&lt;/img:y&gt;&lt;/img:point&gt;\n             &lt;img:point&gt;&lt;img:x&gt;40&lt;/img:x&gt;&lt;img:y&gt;80&lt;/img:y&gt;&lt;/point&gt;\n             &lt;img:point&gt;&lt;img:x&gt;50&lt;/img:x&gt;&lt;img:y&gt;30&lt;/img:y&gt;&lt;/point&gt;\n             &lt;img:point&gt;&lt;img:x&gt;200&lt;/img:x&gt;&lt;img:y&gt;200&lt;/img:y&gt;&lt;/point&gt;\n           &lt;/img:polyLine&gt;\n         </pre>\n       </li>\n       <li> stroked polyline:\n         <pre class=\"brush: xml\">\n           &lt;img:strokedPolyLine&gt;\n             &lt;img:point&gt;&lt;img:x&gt;10&lt;/img:x&gt;&lt;img:y&gt;10&lt;/img:y&gt;&lt;/img:point&gt;\n             &lt;img:point&gt;&lt;img:x&gt;40&lt;/img:x&gt;&lt;img:y&gt;80&lt;/img:y&gt;&lt;/img:point&gt;\n             &lt;img:point&gt;&lt;img:x&gt;50&lt;/img:x&gt;&lt;img:y&gt;30&lt;/img:y&gt;&lt;/img:point&gt;\n             &lt;img:strokeLength&gt;5&lt;/img:strokeLength&gt;&lt;img:gapLength&gt;2&lt;/img:gapLength&gt;\n           &lt;/img:strokedPolyLine&gt;\n         </pre>\n       </li>\n       <li> rectangle:\n         <pre class=\"brush: xml\">\n           &lt;img:rectangle&gt;\n             &lt;img:upperLeft&gt;&lt;img:x&gt;20&lt;/img:x&gt;&lt;img:y&gt;20&lt;/img:y&gt;&lt;/img:upperLeft&gt;\n             &lt;img:lowerRight&gt;&lt;img:x&gt;50&lt;/img:x&gt;&lt;img:y&gt;50&lt;/img:y&gt;&lt;/img:lowerRight&gt;\n           &lt;/img:rectangle&gt;\n         </pre>\n       </li>\n       <li> rounded rectangle:\n         <pre class=\"brush: xml\">\n           &lt;img:roundedRectangle&gt;\n             &lt;img:upperLeft&gt;&lt;img:x&gt;20&lt;/img:x&gt;&lt;img:y&gt;20&lt;/img:y&gt;&lt;/img:upperLeft&gt;\n             &lt;img:lowerRight&gt;&lt;img:x&gt;50&lt;/img:x&gt;&lt;img:y&gt;50&lt;/img:y&gt;&lt;/img:lowerRight&gt;\n             &lt;img:cornerWidth&gt;10&lt;/img:cornerWidth&gt;&lt;img:cornerHeight&gt;10&lt;/img:cornerHeight&gt;\n           &lt;/img:roundedRectangle&gt;\n         </pre>\n       </li>\n       <li> circle:\n         <pre class=\"brush: xml\">\n           &lt;img:circle&gt;\n             &lt;img:origin&gt;&lt;img:x&gt;20&lt;/img:x&gt;&lt;img:y&gt;20&lt;/img:y&gt;&lt;/img:origin&gt;\n             &lt;img:perimeter&gt;5&lt;/img:perimeter&gt;\n           &lt;/img:circle&gt;\n         </pre>\n       </li>\n       <li> ellipse:\n         <pre class=\"brush: xml\">\n           &lt;img:ellipse&gt;\n             &lt;img:origin&gt;&lt;img:x&gt;50&lt;/img:x&gt;&lt;img:y&gt;50&lt;/img:y&gt;&lt;/img:origin&gt;\n             &lt;img:perimeterX&gt;30&lt;/img:perimeterX&gt;&lt;img:perimeterY&gt;20&lt;/img:perimeterY&gt;\n           &lt;/img:ellipse&gt;\n         </pre>\n       </li>\n       <li> arc:\n         <pre class=\"brush: xml\">\n           &lt;img:arc&gt;\n             &lt;img:origin&gt;&lt;img:x&gt;50&lt;/img:x&gt;&lt;img:y&gt;50&lt;/img:y&gt;&lt;/img:origin&gt;\n             &lt;img:perimeterX&gt;10&lt;/img:perimeterX&gt;&lt;img:perimeterY&gt;20&lt;/img:perimeterY&gt;\n             &lt;img:startDegrees&gt;180&lt;/img:startDegrees&gt;&lt;img:endDegrees&gt;270&lt;/img:endDegrees&gt;\n           &lt;/img:arc&gt;\n         </pre>\n       </li>\n       <li> polygon:\n         <pre class=\"brush: xml\">\n           &lt;img:polygon&gt;\n             &lt;img:point&gt;&lt;img:x&gt;10&lt;/img:x&gt;&lt;img:y&gt;10&lt;/img:y&gt;&lt;/img:point&gt;\n             &lt;img:point&gt;&lt;img:x&gt;40&lt;/img:x&gt;&lt;img:y&gt;80&lt;/img:y&gt;&lt;/img:point&gt;\n             &lt;img:point&gt;&lt;img:x&gt;50&lt;/img:x&gt;&lt;img:y&gt;30&lt;/img:y&gt;&lt;/img:point&gt;\n           &lt;/img:polygon&gt;\n         </pre>\n       </li>\n       <li> text:\n         <pre class=\"brush: xml\">\n           &lt;img:text&gt;\n             &lt;img:origin&gt;&lt;img:x&gt;20&lt;/img:x&gt;&lt;img:y&gt;20&lt;/img:y&gt;&lt;/img:origin&gt;\n             &lt;img:text&gt;Hello Zorba&lt;/img:text&gt;&lt;img:font&gt;&lt;/img:font&gt;&lt;img:font-size&gt;12&lt;/img:font-size&gt;\n           &lt;/img:text&gt;\n         </pre>\n       </li>\n     </ul>\n Optionally, each of the shape elements can contain elements to define the stroke with, stroke color, fill color, and anti-aliasing.\n E.g.:\n <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">\n   <pre class=\"brush: xml\">\n     &lt;img:rectangle&gt;\n       &lt;img:strokeWidth&gt;5&lt;/img:strokeWidth&gt;\n       &lt;img:strokeColor&gt;#00AF00&lt;/img:strokeColor&gt;\n       &lt;img:fillColor&gt;#A10000&lt;/img:fillColor&gt;\n       &lt;img:antiAliasing&gt;true&lt;/img:antiAliasing&gt;\n       &lt;img:upperLeft&gt;&lt;img:x&gt;20&lt;/img:x&gt;&lt;img:y&gt;20&lt;/img:y&gt;&lt;/img:upperLeft&gt;\n       &lt;img:lowerRight&gt;&lt;img:x&gt;50&lt;/img:x&gt;&lt;img:y&gt;50&lt;/img:y&gt;&lt;/img:lowerRight&gt;\n     &lt;/img:rectangle&gt;\n   </pre>\n  </p>\n", "summary" : "<p> Extends the passed image with a sequence of shapes.</p>", "annotation_str" : "", "annotations" : [  ], "updating" : false, "parameters" : [ { "name" : "image", "type" : "xs:base64Binary", "occurrence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> the passed image</div>" }, { "name" : "shapes", "type" : "element(*)", "occurrence" : "*", "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> the shapes</div>" } ], "returns" : { "type" : "xs:base64Binary", "description" : "image with additional shapes" }, "errors" : [ "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">ierr:IM001 the passed image is invalid.</xqdoc:error>", "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">err:FORG0001 one of the passed shape elements is invalid.</xqdoc:error>" ] } ], "variables" : [  ] }, "http://zorba.io/modules/fetch" : { "ns" : "http://zorba.io/modules/fetch", "description" : " <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">This module provides functions to fetch the content of a resource identified\n by a URI. For example, it fetches the content of file or http resources.</p>\n <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">In order to retrieve such content, the functions use the\n URI resolution and URL resolver process as documented at\n <a href=\"../zorba/uriresolvers.html\">\n URI Resolvers</a>.</p>\n", "sees" : [  ], "authors" : [ "<xqdoc:author xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">Matthias Brantner</xqdoc:author>" ], "version" : null, "encoding" : "utf-8", "namespaces" : [ { "uri" : "http://zorba.io/annotations", "prefix" : "an" }, { "uri" : "http://zorba.io/modules/fetch", "prefix" : "fetch" }, { "uri" : "http://zorba.io/options/versioning", "prefix" : "ver" }, { "uri" : "http://zorba.io/errors", "prefix" : "zerr" } ], "functions" : [ { "isDocumented" : true, "arity" : 1, "name" : "content-binary", "qname" : "fetch:content-binary", "signature" : "($uri as xs:string) as xs:base64Binary", "description" : " <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">Tries to fetch the resource referred to by the given URI and\n returning it as base64Binary.</p>\n <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">It queries all URI mappers and resolvers with kind\n <tt>EntityData::SOME_CONTENT</tt>.</p>\n", "summary" : "<p>  Tries to fetch the resource referred to by the given URI and\n returning it as base64Binary.</p>", "annotation_str" : " %an:streamable", "annotations" : [ { "prefix" : "an", "ns" : "http://zorba.io/annotations", "name" : "streamable", "value" : "" } ], "updating" : false, "parameters" : [ { "name" : "uri", "type" : "xs:string", "occurrence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> the resource to fetch.</div>" } ], "returns" : { "type" : "xs:base64Binary", "description" : "the resource referred to by the given URI as streamble base64Binary." }, "errors" : [ "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">uri:URI_UNRESOLVED_OR_NOSTREAM if the URI could not be resolved or did not resolve to a <tt>StreamResource</tt>.</xqdoc:error>" ] }, { "isDocumented" : true, "arity" : 2, "name" : "content-binary", "qname" : "fetch:content-binary", "signature" : "($uri as xs:string, $entity-kind as xs:string) as xs:base64Binary external", "description" : " <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">Tries to fetch the resource referred to by the given URI and\n returning it as base64Binary.</p>\n <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">It queries all URI mappers and resolvers with kind the specified\n entity kind.</p>\n", "summary" : "<p>  Tries to fetch the resource referred to by the given URI and\n returning it as base64Binary.</p>", "annotation_str" : " %an:streamable", "annotations" : [ { "prefix" : "an", "ns" : "http://zorba.io/annotations", "name" : "streamable", "value" : "" } ], "updating" : false, "parameters" : [ { "name" : "uri", "type" : "xs:string", "occurrence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> the resource to fetch.</div>" }, { "name" : "entity-kind", "type" : "xs:string", "occurrence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> the kind of resource to fetch.</div>" } ], "returns" : { "type" : "xs:base64Binary", "description" : "the resource referred to by the given URI as streamble base64Binary." }, "errors" : [ "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">uri:URI_UNRESOLVED_OR_NOSTREAM if the URI could not be resolved or did not resolve to a <tt>StreamResource</tt>.</xqdoc:error>" ] }, { "isDocumented" : true, "arity" : 1, "name" : "content", "qname" : "fetch:content", "signature" : "($uri as xs:string) as xs:string", "description" : " <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">Tries to fetch the resource referred to by the given URI.</p>\n <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">It queries all URI mappers and resolvers with kind\n <tt>EntityData::SOME_CONTENT</tt>.</p>\n <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">The content is assumed to be UTF-8 encoded.</p>\n", "summary" : "<p>  Tries to fetch the resource referred to by the given URI.</p>", "annotation_str" : " %an:streamable", "annotations" : [ { "prefix" : "an", "ns" : "http://zorba.io/annotations", "name" : "streamable", "value" : "" } ], "updating" : false, "parameters" : [ { "name" : "uri", "type" : "xs:string", "occurrence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> the resource to fetch.</div>" } ], "returns" : { "type" : "xs:string", "description" : "the resource referred to by the given URI as streamble string." }, "errors" : [ "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">uri:URI_UNRESOLVED_OR_NOSTREAM if the URI could not be resolved or did not resolve to a <tt>StreamResource</tt>.</xqdoc:error>" ] }, { "isDocumented" : true, "arity" : 2, "name" : "content", "qname" : "fetch:content", "signature" : "($uri as xs:string, $entity-kind as xs:string) as xs:string", "description" : " <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">Tries to fetch the resource referred to by the given URI.</p>\n <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">It queries all URI mappers and resolvers with kind the specified\n entity kind.</p>\n <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">The content is assumed to be UTF-8 encoded.</p>\n", "summary" : "<p>  Tries to fetch the resource referred to by the given URI.</p>", "annotation_str" : " %an:streamable", "annotations" : [ { "prefix" : "an", "ns" : "http://zorba.io/annotations", "name" : "streamable", "value" : "" } ], "updating" : false, "parameters" : [ { "name" : "uri", "type" : "xs:string", "occurrence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> the resource to fetch.</div>" }, { "name" : "entity-kind", "type" : "xs:string", "occurrence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> the kind of resource to fetch.</div>" } ], "returns" : { "type" : "xs:string", "description" : "the resource referred to by the given URI as streamble string." }, "errors" : [ "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">uri:URI_NOT_RESOLVED_OR_NOSTREAM if the URI could not be resolved or did not resolve to a <tt>StreamResource</tt>.</xqdoc:error>" ] }, { "isDocumented" : true, "arity" : 3, "name" : "content", "qname" : "fetch:content", "signature" : "($uri as xs:string, $entity-kind as xs:string, $encoding as xs:string) as xs:string external", "description" : " <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">Tries to fetch the resource referred to by the given URI.</p>\n <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">It queries all URI mappers and resolvers with kind the specified\n entity kind.</p>\n", "summary" : "<p>  Tries to fetch the resource referred to by the given URI.</p>", "annotation_str" : " %an:streamable", "annotations" : [ { "prefix" : "an", "ns" : "http://zorba.io/annotations", "name" : "streamable", "value" : "" } ], "updating" : false, "parameters" : [ { "name" : "uri", "type" : "xs:string", "occurrence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> the resource to fetch.</div>" }, { "name" : "entity-kind", "type" : "xs:string", "occurrence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> the kind of resource to fetch.</div>" }, { "name" : "encoding", "type" : "xs:string", "occurrence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> the encoding of the content</div>" } ], "returns" : { "type" : "xs:string", "description" : "the resource referred to by the given URI as streamble string." }, "errors" : [ "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">uri:URI_UNRESOLVED_OR_NOSTREAM if the URI could not be resolved or did not resolve to a <tt>StreamResource</tt>.</xqdoc:error>", "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">uri:CHARSET_UNKNOWN if the given encoding is invalid or not supported.</xqdoc:error>" ] } ], "variables" : [  ] }, "http://xbrl.io/modules/bizql/concept-maps" : { "ns" : "http://xbrl.io/modules/bizql/concept-maps", "description" : " <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">This module provides functions for storing, retrieving, and modifying\n concept maps. Concept maps can be used in BizQL queries.</p>\n <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">A concept map is a network of concepts that can be contained in a report schema.\n It maps \"virtual\" concepts to reported concepts, which allows comparison across\n archives that use different vocabularies (so-called extension facts).</p>\n <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">With this module, you can retrieve the concept map associated with each report\n schema. You can also query for facts by making implicitly use of the mapping.</p>\n", "sees" : [  ], "authors" : [ "<xqdoc:author xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">Charles Hoffman</xqdoc:author>", "<xqdoc:author xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">Matthias Brantner</xqdoc:author>", "<xqdoc:author xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">Dennis Knochenwefel</xqdoc:author>", "<xqdoc:author xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">Ghislain Fourny</xqdoc:author>" ], "version" : null, "encoding" : "utf-8", "namespaces" : [ { "uri" : "http://xbrl.io/modules/bizql/archives", "prefix" : "archives" }, { "uri" : "http://xbrl.io/modules/bizql/concept-maps", "prefix" : "concept-maps" }, { "uri" : "http://xbrl.io/modules/bizql/facts", "prefix" : "facts" }, { "uri" : "http://xbrl.io/modules/bizql/networks", "prefix" : "networks" }, { "uri" : "http://xbrl.io/modules/bizql/report-schemas", "prefix" : "report-schemas" }, { "uri" : "http://zorba.io/options/versioning", "prefix" : "ver" } ], "functions" : [ { "isDocumented" : true, "arity" : 0, "name" : "concept-maps", "qname" : "concept-maps:concept-maps", "signature" : "() as object()*", "description" : " <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">Retrieves all concept maps.</p>\n", "summary" : "<p>  Retrieves all concept maps.</p>", "annotation_str" : "", "annotations" : [  ], "updating" : false, "parameters" : [  ], "returns" : { "type" : "object()*", "description" : "all concept maps." }, "errors" : [  ] }, { "isDocumented" : true, "arity" : 1, "name" : "concept-maps", "qname" : "concept-maps:concept-maps", "signature" : "($report-schemas-or-ids as item()*) as object()*", "description" : " <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">Return the concept maps from the given report schemas.</p>\n", "summary" : "<p>  Return the concept maps from the given report schemas.</p>", "annotation_str" : "", "annotations" : [  ], "updating" : false, "parameters" : [ { "name" : "report-schemas-or-ids", "type" : "item()", "occurrence" : "*", "description" : "" } ], "returns" : { "type" : "object()*", "description" : "the concept maps from the report schemas." }, "errors" : [  ] }, { "isDocumented" : true, "arity" : 3, "name" : "facts-for-archives-and-concepts", "qname" : "concept-maps:facts-for-archives-and-concepts", "signature" : "($archive-or-ids as item()*, $concepts as string*, $concept-maps as object()*) as object()*", "description" : " <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">Resolves the supplied concepts according to the supplied concept map.</p>\n", "summary" : "<p>  Resolves the supplied concepts according to the supplied concept map.</p>", "annotation_str" : "", "annotations" : [  ], "updating" : false, "parameters" : [ { "name" : "archive-or-ids", "type" : "item()", "occurrence" : "*", "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> a sequence of archives or AIDs (or $concept-maps:ALL_OF_THEM to do no filter on archives).</div>" }, { "name" : "concepts", "type" : "string", "occurrence" : "*", "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> a sequence of concept names (or $concept-maps:ALL_OF_THEM to do no filter on concepts).</div>" }, { "name" : "concept-maps", "type" : "object()", "occurrence" : "*", "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> a sequence of concept maps.</div>" } ], "returns" : { "type" : "object()*", "description" : "the resolved facts, with the concept name overriden with the new name." }, "errors" : [  ] }, { "isDocumented" : true, "arity" : 4, "name" : "facts-for-archives-and-concepts", "qname" : "concept-maps:facts-for-archives-and-concepts", "signature" : "($archive-or-ids as item()*, $concepts as string*, $concept-maps as object()+, $options as object()?) as object()*", "description" : " <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">Resolves the supplied concepts according to the supplied concept map.</p>\n", "summary" : "<p>  Resolves the supplied concepts according to the supplied concept map.</p>", "annotation_str" : "", "annotations" : [  ], "updating" : false, "parameters" : [ { "name" : "archive-or-ids", "type" : "item()", "occurrence" : "*", "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> a sequence of archives or AIDs (or $concept-maps:ALL_OF_THEM to do no filter on archives).</div>" }, { "name" : "concepts", "type" : "string", "occurrence" : "*", "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> a sequence of concept names (or $concept-maps:ALL_OF_THEM to do no filter on concepts).</div>" }, { "name" : "concept-maps", "type" : "object()", "occurrence" : "+", "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> a sequence of concept maps.</div>" }, { "name" : "options", "type" : "object()", "occurrence" : "?", "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> <a href=\"facts#standard_options\">standard fact retrieving options</a>.</div>" } ], "returns" : { "type" : "object()*", "description" : "the resolved facts, with the concept name overriden with the new name." }, "errors" : [  ] } ], "variables" : [ { "name" : "concept-maps:ALL_OF_THEM", "type" : "boolean", "description" : " Joker for all archives or all concepts.\n" } ] }, "http://www.28msec.com/modules/http/cookie" : { "ns" : "http://www.28msec.com/modules/http/cookie", "description" : " The Sausalito Cookie module provides function to manipulate\n HTTP-Cookies.\n", "sees" : [  ], "authors" : [ "<xqdoc:author xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">28msec</xqdoc:author>" ], "version" : null, "encoding" : "utf-8", "namespaces" : [ { "uri" : "http://zorba.io/annotations", "prefix" : "an" }, { "uri" : "http://www.28msec.com/modules/http/cookie", "prefix" : "cookie" }, { "uri" : "http://www.28msec.com/modules/http/cookie", "prefix" : "cookie-schema" }, { "uri" : "http://www.28msec.com/modules/http/request", "prefix" : "req" }, { "uri" : "http://www.28msec.com/modules/http/response", "prefix" : "resp" }, { "uri" : "http://zorba.io/modules/schema", "prefix" : "schema" }, { "uri" : "http://www.zorba-xquery.com/modules/cryptography/hmac", "prefix" : "sec" }, { "uri" : "http://zorba.io/modules/uri", "prefix" : "uri" }, { "uri" : "http://zorba.io/options/versioning", "prefix" : "ver" } ], "functions" : [ { "isDocumented" : true, "arity" : 1, "name" : "create-session", "qname" : "cookie:create-session", "signature" : "($sessionData as node()) as empty-sequence()", "description" : " Creates a client-side cookie named \"_session\", containing the\n <tt xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">$sessionData</tt> node value together with its signature.\n The signature is generated with the server's private key.\n", "summary" : "<p> Creates a client-side cookie named \"_session\", containing the\n  $sessionData  node value together with its signature.</p>", "annotation_str" : " %an:sequential", "annotations" : [ { "prefix" : "an", "ns" : "http://zorba.io/annotations", "name" : "sequential", "value" : "" } ], "updating" : false, "parameters" : [ { "name" : "sessionData", "type" : "node()", "occurrence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> The data to be used for the session.</div>" } ], "returns" : { "type" : "empty-sequence()", "description" : "The empty-sequence is returned." }, "errors" : [  ] }, { "isDocumented" : true, "arity" : 2, "name" : "create-session", "qname" : "cookie:create-session", "signature" : "($sessionData as node(), $expires as xs:dateTime) as empty-sequence()", "description" : " Creates a client-side cookie named \"_session\", containing the\n <tt xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">$sessionData</tt> node value together with its signature.\n The signature is generated with the server's private key.\n The cookie is also set to expire on the date specified by\n <tt xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">$expires</tt>.\n", "summary" : "<p> Creates a client-side cookie named \"_session\", containing the\n  $sessionData  node value together with its signature.</p>", "annotation_str" : " %an:sequential", "annotations" : [ { "prefix" : "an", "ns" : "http://zorba.io/annotations", "name" : "sequential", "value" : "" } ], "updating" : false, "parameters" : [ { "name" : "sessionData", "type" : "node()", "occurrence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> The data to be used for the session.</div>" }, { "name" : "expires", "type" : "xs:dateTime", "occurrence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> The expiration time of the cookie.</div>" } ], "returns" : { "type" : "empty-sequence()", "description" : "The empty-sequence is returned." }, "errors" : [  ] }, { "isDocumented" : true, "arity" : 3, "name" : "create-session", "qname" : "cookie:create-session", "signature" : "($sessionData as node(), $expires as xs:dateTime?, $path as xs:string?) as empty-sequence()", "description" : " Creates a client-side cookie named \"_session\", containing the\n <tt xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">$sessionData</tt> node value together with its signature.\n The signature is generated with the server's private key.\n The cookie is also set to expire on the date specified by\n <tt xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">$expires</tt>. The cookie is only valid for the specified path.\n", "summary" : "<p> Creates a client-side cookie named \"_session\", containing the\n  $sessionData  node value together with its signature.</p>", "annotation_str" : " %an:sequential", "annotations" : [ { "prefix" : "an", "ns" : "http://zorba.io/annotations", "name" : "sequential", "value" : "" } ], "updating" : false, "parameters" : [ { "name" : "sessionData", "type" : "node()", "occurrence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> The data to be used for the session.</div>" }, { "name" : "expires", "type" : "xs:dateTime", "occurrence" : "?", "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> The expiration time of the cookie.</div>" }, { "name" : "path", "type" : "xs:string", "occurrence" : "?", "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> The path of the URL for which the cookie is valid.</div>" } ], "returns" : { "type" : "empty-sequence()", "description" : "The empty-sequence is returned." }, "errors" : [  ] }, { "isDocumented" : true, "arity" : 0, "name" : "delete-session", "qname" : "cookie:delete-session", "signature" : "() as empty-sequence()", "description" : " Delete the \"_session\" cookie from the client. The next\n user request will not receive a valid session cookie\n anymore\n", "summary" : "<p> Delete the \"_session\" cookie from the client.</p>", "annotation_str" : " %an:sequential", "annotations" : [ { "prefix" : "an", "ns" : "http://zorba.io/annotations", "name" : "sequential", "value" : "" } ], "updating" : false, "parameters" : [  ], "returns" : { "type" : "empty-sequence()", "description" : "The empty-sequence is returned." }, "errors" : [  ] }, { "isDocumented" : true, "arity" : 1, "name" : "delete-session", "qname" : "cookie:delete-session", "signature" : "($path as xs:string?) as empty-sequence()", "description" : " Delete the \"_session\" cookie from the client. The next\n user request will not receive a valid session cookie\n anymore\n", "summary" : "<p> Delete the \"_session\" cookie from the client.</p>", "annotation_str" : " %an:sequential", "annotations" : [ { "prefix" : "an", "ns" : "http://zorba.io/annotations", "name" : "sequential", "value" : "" } ], "updating" : false, "parameters" : [ { "name" : "path", "type" : "xs:string", "occurrence" : "?", "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> The path of the URL for which the cookie is valid.</div>" } ], "returns" : { "type" : "empty-sequence()", "description" : "The empty-sequence is returned." }, "errors" : [  ] }, { "isDocumented" : true, "arity" : 1, "name" : "get", "qname" : "cookie:get", "signature" : "($name as xs:string?) as element(cookie:cookie)*", "description" : " Returns the cookie in the request having the given name or the empty sequence\n if no such cookie exists. The cookie format returned is:\n <tt xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">\n &lt;cookie:cookie\n   name=\"..\"&gt;...&lt;/cookie:cookie&gt;</tt>.\n The content of the cookie element is the value of the cookie.\n", "summary" : "<p> Returns the cookie in the request having the given name or the empty sequence\n if no such cookie exists.</p>", "annotation_str" : "", "annotations" : [  ], "updating" : false, "parameters" : [ { "name" : "name", "type" : "xs:string", "occurrence" : "?", "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> The name of the cookie that should be retrieved.</div>" } ], "returns" : { "type" : "element(cookie:cookie)*", "description" : "The cookie with the given name or the empty sequence if no cookie with the given name exist" }, "errors" : [ "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">cookie:S003 if $decode evaluates to fn:true() and the value of the cookie cannot be parsed.</xqdoc:error>" ] }, { "isDocumented" : true, "arity" : 2, "name" : "get", "qname" : "cookie:get", "signature" : "($name as xs:string?, $decode as xs:boolean) as element(cookie:cookie)*", "description" : " Returns the cookies in the request having the given name. If no name is given,\n it returns all available cookies. If no cookie value decoding is wanted,\n the user must specify a second argument that evaluates to fn:false().\n", "summary" : "<p> Returns the cookies in the request having the given name.</p>", "annotation_str" : "", "annotations" : [  ], "updating" : false, "parameters" : [ { "name" : "name", "type" : "xs:string", "occurrence" : "?", "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> The name of the cookie that should be retrieved</div>" }, { "name" : "decode", "type" : "xs:boolean", "occurrence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> Boolean to specify if cookie value decoding id needed</div>" } ], "returns" : { "type" : "element(cookie:cookie)*", "description" : "The cookie with the given name or the empty sequence if no cookie with the given name exist" }, "errors" : [ "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">cookie:S003 if $decode evaluates to fn:true() and the value of the cookie cannot be parsed.</xqdoc:error>" ] }, { "isDocumented" : true, "arity" : 0, "name" : "session-data", "qname" : "cookie:session-data", "signature" : "() as node()", "description" : " Reads the \"_session\" cookie in the request and verifies if the signature\n matches the ad-hoc computed signature of the content of the session. If the\n verification is successful, the function returns the session data. Otherwise,\n an error is raised.\n", "summary" : "<p> Reads the \"_session\" cookie in the request and verifies if the signature\n matches the ad-hoc computed signature of the content of the session.</p>", "annotation_str" : "", "annotations" : [  ], "updating" : false, "parameters" : [  ], "returns" : { "type" : "node()", "description" : "The session data is returned if verification succesful." }, "errors" : [  ] }, { "isDocumented" : true, "arity" : 1, "name" : "set", "qname" : "cookie:set", "signature" : "($cookie as element(cookie:cookie)) as empty-sequence()", "description" : " Adds a <tt xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">Set-Cookie</tt> header to the response. This function is equivalent to\n <tt xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">cookie:set($cookie, fn:true())</tt>.\n", "summary" : "<p> Adds a  Set-Cookie  header to the response.</p>", "annotation_str" : " %an:sequential", "annotations" : [ { "prefix" : "an", "ns" : "http://zorba.io/annotations", "name" : "sequential", "value" : "" } ], "updating" : false, "parameters" : [ { "name" : "cookie", "type" : "element(cookie:cookie)", "occurrence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> The XML representation of the cookie to be sent to the client.</div>" } ], "returns" : { "type" : "empty-sequence()", "description" : "The empty-sequence is returned." }, "errors" : [ "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">cookie:S002 if the cookie is bigger than 4096 bytes.</xqdoc:error>" ] }, { "isDocumented" : true, "arity" : 2, "name" : "set", "qname" : "cookie:set", "signature" : "($cookie as element(cookie:cookie), $encode as xs:boolean) as empty-sequence()", "description" : " Adds a <tt xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">Set-Cookie</tt> header to the response.\n The cookie parameter needs to adhere to the cookie schema. For example,\n <tt xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">\n &lt;cookie:cookie\n   name=\"xs:string\"\n   expires=\"xs:datetime\"\n   domain=\"xs:string\"\n   path=\"xs:string\"\n   secure=\"xs:boolean\"&gt;value&lt;/cookie:cookie&gt;\n </tt>.\n If the cookie parameter is not valid according to the schema, err:XQDY0027 is raised.\n If $encode evaluates to fn:true(), then the child nodes of the cookie element will be\n serialized using XML serialization (omitting the XML declaration). In order not to\n break the cookie syntax, any occurence of whitespace or column in the value will be\n encoded on the client using the URL encoding format. For this reason also the '%'\n character will be encoded using the same format.\n If $encode evaluates to fn:false(), the children nodes of the cookie element will be\n serialized as text and no encoding will be performed whatsoever. It is the\n responsibility of the caller to make sure the text serialization will not produce an\n invalid cookie.\n", "summary" : "<p> Adds a  Set-Cookie  header to the response.</p>", "annotation_str" : " %an:sequential", "annotations" : [ { "prefix" : "an", "ns" : "http://zorba.io/annotations", "name" : "sequential", "value" : "" } ], "updating" : false, "parameters" : [ { "name" : "cookie", "type" : "element(cookie:cookie)", "occurrence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> The cookie to send to the client</div>" }, { "name" : "encode", "type" : "xs:boolean", "occurrence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> if encoding should be performed on the value or not</div>" } ], "returns" : { "type" : "empty-sequence()", "description" : "The empty-sequence is returned." }, "errors" : [ "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">cookie:S002 if the cookie is bigger than 4096 bytes.</xqdoc:error>" ] }, { "isDocumented" : true, "arity" : 0, "name" : "validate-session", "qname" : "cookie:validate-session", "signature" : "() as xs:boolean", "description" : " Reads the \"_session\" cookie in the request and verifies if\n the signature matches the ad-hoc computed signature of the\n content of the session. The signature is generated with a\n server private key. If no cookie named \"_session\" exists,\n this function returns false.\n", "summary" : "<p> Reads the \"_session\" cookie in the request and verifies if\n the signature matches the ad-hoc computed signature of the\n content of the session.</p>", "annotation_str" : "", "annotations" : [  ], "updating" : false, "parameters" : [  ], "returns" : { "type" : "xs:boolean", "description" : "Returns <tt xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">true</tt> if the session is valid, and and false otherwise." }, "errors" : [  ] } ], "variables" : [  ] }, "http://www.28msec.com/modules/couchbase" : { "ns" : "http://www.28msec.com/modules/couchbase", "description" : " This module provides functionality to interact with the\n Couchbase NoSQL database.<p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"/>\n The module is built using the libcouchbase 2.0 C client library and\n exposes most of its functionality in JSONiq.\n Beyond just allowing for basic key-value store operations (e.g.\n put-/get-text or put-/get-binary, this module also allows to work\n with Couchbase views in order to allow for complex JSON query\n operations.\n", "sees" : [  ], "authors" : [ "<xqdoc:author xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">Cristi Dumitru</xqdoc:author>" ], "version" : null, "encoding" : "utf-8", "namespaces" : [ { "uri" : "http://zorba.io/annotations", "prefix" : "an" }, { "uri" : "http://www.28msec.com/modules/couchbase", "prefix" : "cb" }, { "uri" : "http://zorba.io/options/versioning", "prefix" : "ver" }, { "uri" : "http://www.zorba-xquery.com/modules/couchbase", "prefix" : "zcb" } ], "functions" : [ { "isDocumented" : true, "arity" : 1, "name" : "connect", "qname" : "cb:connect", "signature" : "($options as object()) as anyURI", "description" : " Connect to the Couchbase server.<p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"/>\n <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">The input to the function is an object that contains the connection\n information. Specifically, it allows for the following options:\n <ul>\n   <li><tt>host</tt>: the endpoint of the Couchbase server (mandatory)</li>\n   <li><tt>user</tt>: the user used for connecting (optional)</li>\n   <li><tt>password</tt>: the password used for connecting (optional)</li>\n   <li><tt>bucket</tt>: name of an existing bucket (mandatory)</li>\n </ul></p>\n <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">Example:\n <ul><li><pre>\n $conn := cb:connect({\n   \"host\" : \"192.168.1.56:8091\",\n   \"username\" : (),\n   \"password\" : (),\n   \"bucket\" : \"default\"\n });\n </pre></li></ul></p>\n <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">The function returns an opaque URI that represents the connection.\n This URI has to be passed to other functions of this module that require\n the <tt>$conn</tt> parameter as a first argument.</p>\n", "summary" : "<p> Connect to the Couchbase server.</p>", "annotation_str" : " %an:sequential", "annotations" : [ { "prefix" : "an", "ns" : "http://zorba.io/annotations", "name" : "sequential", "value" : "" } ], "updating" : false, "parameters" : [ { "name" : "options", "type" : "object()", "occurrence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> a object that contains the host, bucket, and authentication information.</div>" } ], "returns" : { "type" : "anyURI", "description" : "an identifier for the established connection." }, "errors" : [ "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">LCB0001 if the connection to the given host/bucket could not be established.</xqdoc:error>", "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">CB0001 if mandatory connection information is missing.</xqdoc:error>", "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">CB0007 if a given option is not supported.</xqdoc:error>" ] }, { "isDocumented" : true, "arity" : 4, "name" : "connect", "qname" : "cb:connect", "signature" : "($host as string, $username as string?, $password as string?, $bucket as string) as anyURI", "description" : " Connect to the Couchbase server.<p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"/>\n <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">The function returns an opaque URI that represents the connection.\n This URI has to be passed to other functions of this module that require\n the <tt>$conn</tt> parameter as a first argument.</p>\n <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">Example:\n <ul><li><pre>\n $conn := cb:connect(\"192.168.1.56:8091\", (), (), \"default\");\n </pre></li></ul></p>\n", "summary" : "<p> Connect to the Couchbase server.</p>", "annotation_str" : " %an:sequential", "annotations" : [ { "prefix" : "an", "ns" : "http://zorba.io/annotations", "name" : "sequential", "value" : "" } ], "updating" : false, "parameters" : [ { "name" : "host", "type" : "string", "occurrence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> address of the couchbase server (mandatory) <code>\"192.168.1.56:8091\"</code></div>" }, { "name" : "username", "type" : "string", "occurrence" : "?", "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> username used for the connection</div>" }, { "name" : "password", "type" : "string", "occurrence" : "?", "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> password used for the connection</div>" }, { "name" : "bucket", "type" : "string", "occurrence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> name of the bucket to use (mandatory) <code>\"default\"</code></div>" } ], "returns" : { "type" : "anyURI", "description" : "an identifier that represents the connection to the server." }, "errors" : [ "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">LCB0001 if the connection to the given host/bucket could not be established.</xqdoc:error>" ] }, { "isDocumented" : true, "arity" : 3, "name" : "create-view", "qname" : "cb:create-view", "signature" : "($conn as anyURI, $doc-name as string, $view-names as string*) as string*", "description" : " Create a document and views.<p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"/>\n If the document already exists, it is replaced.\n A document can hold several views that must be specified in the same call.\n <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">Example:\n <ul><li><pre>\n $views := cb:create-view($conn, \"zip\", (\"bystate\", \"bycity\"));\n </pre></li></ul></p>\n", "summary" : "<p> Create a document and views.</p>", "annotation_str" : " %an:sequential", "annotations" : [ { "prefix" : "an", "ns" : "http://zorba.io/annotations", "name" : "sequential", "value" : "" } ], "updating" : false, "parameters" : [ { "name" : "conn", "type" : "anyURI", "occurrence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> The identifier of the active connection</div>" }, { "name" : "doc-name", "type" : "string", "occurrence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> The name of the document to create</div>" }, { "name" : "view-names", "type" : "string", "occurrence" : "*", "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> The names of the views to create in the document</div>" } ], "returns" : { "type" : "string*", "description" : "The paths for the views that have been created." }, "errors" : [ "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">LCB0002 if any error occurs in the communication with the server.</xqdoc:error>" ] }, { "isDocumented" : true, "arity" : 4, "name" : "create-view", "qname" : "cb:create-view", "signature" : "($conn as anyURI, $doc-name as string, $view-names as string*, $options as object()*) as string*", "description" : " Create a document and views.<p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"/>\n If the document already exists, it is replaced.\n A document can hold several views that must be specified in the same call.\n <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">In addition, the function allows to specify several options:\n <ul>\n   <li><tt>key</tt>: <tt>string</tt> name of the value that will be used\n        as key in the view</li>\n   <li><tt>values</tt>: <tt>string/array</tt> name of the value(s) that\n        will be used as values in the view</li>\n   <li><tt>function</tt>: <tt>javascript function</tt> the map function\n        that will create the connection between key and value.<br/>\n        If <tt>function</tt> is specified, the <tt>key</tt> and\n        <tt>values</tt> options are ignored.</li>\n </ul></p>\n <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">Example:\n <ul><li><pre>\n $views := cb:create-view($conn, \"zip\", \"bystate\", { \"key\": \"doc.state\", \"values\" : [\"doc.pop\", \"doc.city\"] });\n </pre></li>\n <li><pre>\n $views := cb:create-view($conn, \"zip\", \"bycity\", { \"function\": \"function(doc, meta) {  emit(doc.state, null); }\"});\n </pre></li></ul></p>\n", "summary" : "<p> Create a document and views.</p>", "annotation_str" : " %an:sequential", "annotations" : [ { "prefix" : "an", "ns" : "http://zorba.io/annotations", "name" : "sequential", "value" : "" } ], "updating" : false, "parameters" : [ { "name" : "conn", "type" : "anyURI", "occurrence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> The identifier of the active connection</div>" }, { "name" : "doc-name", "type" : "string", "occurrence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> The name of the document to create</div>" }, { "name" : "view-names", "type" : "string", "occurrence" : "*", "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> The names of the views to create in the document</div>" }, { "name" : "options", "type" : "object()", "occurrence" : "*", "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> An object with additional options</div>" } ], "returns" : { "type" : "string*", "description" : "The paths for the views that have been created." }, "errors" : [ "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">LCB0002 if any error occurs in the communication with the server.</xqdoc:error>", "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">CB0005 if the number of options doesn't match the number of view-names.</xqdoc:error>", "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">CB0007 if any of the options is not supported.</xqdoc:error>", "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">CB0010 if any of the given options has an invalid type.</xqdoc:error>" ] }, { "isDocumented" : true, "arity" : 2, "name" : "delete-view", "qname" : "cb:delete-view", "signature" : "($conn as anyURI, $doc as string*) as string*", "description" : " Delete a document and its views.<p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"/>\n If the document doesn't exists, the function does nothing.\n All the views hold in the document are deleted.\n <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">Example:\n <ul><li><pre>\n cb:delete-view($conn, \"zip\");\n </pre></li></ul></p>\n", "summary" : "<p> Delete a document and its views.</p>", "annotation_str" : " %an:sequential", "annotations" : [ { "prefix" : "an", "ns" : "http://zorba.io/annotations", "name" : "sequential", "value" : "" } ], "updating" : false, "parameters" : [ { "name" : "conn", "type" : "anyURI", "occurrence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> The identifier of the active connection</div>" }, { "name" : "doc", "type" : "string", "occurrence" : "*", "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">-name The name of the document to delete</div>" } ], "returns" : { "type" : "string*", "description" : "a empty sequence." }, "errors" : [ "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">LCB0002 if any error occurs in the communication with the server.</xqdoc:error>" ] }, { "isDocumented" : true, "arity" : 1, "name" : "flush", "qname" : "cb:flush", "signature" : "($conn as anyURI) as empty-sequence()", "description" : " Remove all values and their keys.<p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"/>\n <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">Example:\n <ul><li><pre>\n cb:flush($conn);\n </pre></li></ul></p>\n", "summary" : "<p> Remove all values and their keys.</p>", "annotation_str" : " %an:sequential", "annotations" : [ { "prefix" : "an", "ns" : "http://zorba.io/annotations", "name" : "sequential", "value" : "" } ], "updating" : false, "parameters" : [ { "name" : "conn", "type" : "anyURI", "occurrence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> The identifier of the active connection</div>" } ], "returns" : { "type" : "empty-sequence()", "description" : "a empty sequence." }, "errors" : [ "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">LCB0002 if any error occurs in the communication with the server.</xqdoc:error>" ] }, { "isDocumented" : true, "arity" : 2, "name" : "get-binary", "qname" : "cb:get-binary", "signature" : "($conn as anyURI, $key as string*) as base64Binary*", "description" : " Retrieve the values matching the given string keys, as base64Binary.<p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"/>\n <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">Example:\n <ul><li><pre>\n $result := cb:get-binary($conn, \"image\");\n </pre></li></ul></p>\n", "summary" : "<p> Retrieve the values matching the given string keys, as base64Binary.</p>", "annotation_str" : " %an:sequential", "annotations" : [ { "prefix" : "an", "ns" : "http://zorba.io/annotations", "name" : "sequential", "value" : "" } ], "updating" : false, "parameters" : [ { "name" : "conn", "type" : "anyURI", "occurrence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> The identifier of the active connection</div>" }, { "name" : "key", "type" : "string", "occurrence" : "*", "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> The requested keys</div>" } ], "returns" : { "type" : "base64Binary*", "description" : "A sequence of base64Binary values corresponding to the keys" }, "errors" : [ "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">LCB0002 if any error occurs in the communication with the server.</xqdoc:error>" ] }, { "isDocumented" : true, "arity" : 3, "name" : "get-binary", "qname" : "cb:get-binary", "signature" : "($conn as anyURI, $key as string*, $options as object()) as base64Binary*", "description" : " Retrieve the values matching the given string keys, as base64Binary.<p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"/>\n <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">In addition, the function allows to specify several options:\n <ul>\n   <li><tt>expiration-time</tt>: <tt>integer</tt> value for refreshing the\n        expiration time in seconds\n       (default 0, which means values are kept indefinitely)</li>\n </ul></p>\n <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">Example:\n <ul><li><pre>\n $result := cb:get-binary($conn, \"image\",{ \"expiration-time\" : 60 * 60 });\n </pre></li></ul></p>\n", "summary" : "<p> Retrieve the values matching the given string keys, as base64Binary.</p>", "annotation_str" : " %an:sequential", "annotations" : [ { "prefix" : "an", "ns" : "http://zorba.io/annotations", "name" : "sequential", "value" : "" } ], "updating" : false, "parameters" : [ { "name" : "conn", "type" : "anyURI", "occurrence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> The identifier of the active connection</div>" }, { "name" : "key", "type" : "string", "occurrence" : "*", "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> The requested keys</div>" }, { "name" : "options", "type" : "object()", "occurrence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> An object with additional options</div>" } ], "returns" : { "type" : "base64Binary*", "description" : "A sequence of base64Binary values corresponding to the keys" }, "errors" : [ "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">LCB0002 if any error occurs in the communication with the server.</xqdoc:error>", "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">CB0007 if any of the options is not supported.</xqdoc:error>", "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">CB0009 if the given expiration time is not an integer.</xqdoc:error>" ] }, { "isDocumented" : true, "arity" : 2, "name" : "get-text", "qname" : "cb:get-text", "signature" : "($conn as anyURI, $key as string*) as string*", "description" : " Retrieve the values matching the given string keys, as string.<p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"/>\n <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">Example:\n <ul><li><pre>\n $result := cb:get-text($conn, \"35040\");\n </pre></li></ul></p>\n", "summary" : "<p> Retrieve the values matching the given string keys, as string.</p>", "annotation_str" : " %an:sequential", "annotations" : [ { "prefix" : "an", "ns" : "http://zorba.io/annotations", "name" : "sequential", "value" : "" } ], "updating" : false, "parameters" : [ { "name" : "conn", "type" : "anyURI", "occurrence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> The identifier of the active connection</div>" }, { "name" : "key", "type" : "string", "occurrence" : "*", "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> The requested keys</div>" } ], "returns" : { "type" : "string*", "description" : "A sequence of string values corresponding to the keys" }, "errors" : [ "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">LCB0002 if any error occurs in the communication with the server.</xqdoc:error>" ] }, { "isDocumented" : true, "arity" : 3, "name" : "get-text", "qname" : "cb:get-text", "signature" : "($conn as anyURI, $key as string*, $options as object()) as string*", "description" : " Retrieve the values matching the given string keys, as string.<p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"/>\n <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">In addition, the function allows to specify several options:\n <ul>\n   <li><tt>expiration-time</tt>: <tt>integer</tt> value for refreshing the\n        expiration time in seconds\n       (default 0, which means values are kept indefinitely)</li>\n   <li><tt>encoding</tt>: <tt>string</tt> name of the encoding of the\n        returned string (default UTF-8)</li>\n </ul></p>\n <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">Example:\n <ul><li><pre>\n $result := cb:get-text($conn, \"35040\", { \"encoding\" : \"ASCII\" } );\n </pre></li></ul></p>\n", "summary" : "<p> Retrieve the values matching the given string keys, as string.</p>", "annotation_str" : " %an:sequential", "annotations" : [ { "prefix" : "an", "ns" : "http://zorba.io/annotations", "name" : "sequential", "value" : "" } ], "updating" : false, "parameters" : [ { "name" : "conn", "type" : "anyURI", "occurrence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> The identifier of the active connection</div>" }, { "name" : "key", "type" : "string", "occurrence" : "*", "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> The requested key</div>" }, { "name" : "options", "type" : "object()", "occurrence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> An object with additional options</div>" } ], "returns" : { "type" : "string*", "description" : "A sequence of string values corresponding to the keys" }, "errors" : [ "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">LCB0002 if any error occurs in the communication with the server.</xqdoc:error>", "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">CB0006 if the given encoding is not supported.</xqdoc:error>", "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">CB0007 if any of the options is not supported.</xqdoc:error>", "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">CB0009 if the given expiration time is not an integer.</xqdoc:error>" ] }, { "isDocumented" : true, "arity" : 3, "name" : "put-binary", "qname" : "cb:put-binary", "signature" : "($conn as anyURI, $key as string*, $value as base64Binary*) as empty-sequence()", "description" : " Store base64binary values along with their string keys.<p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"/>\n <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">Example:\n <ul><li><pre>\n cb:put-binary($conn, \"image\",\n   http:get-binary(\"http://localhost:8091/images/couchbase_logo.png\")[2]);\n </pre></li></ul></p>\n", "summary" : "<p> Store base64binary values along with their string keys.</p>", "annotation_str" : " %an:sequential", "annotations" : [ { "prefix" : "an", "ns" : "http://zorba.io/annotations", "name" : "sequential", "value" : "" } ], "updating" : false, "parameters" : [ { "name" : "conn", "type" : "anyURI", "occurrence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> The identifier of the active connection</div>" }, { "name" : "key", "type" : "string", "occurrence" : "*", "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> The keys to store</div>" }, { "name" : "value", "type" : "base64Binary", "occurrence" : "*", "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> The base64 binary values to be stored</div>" } ], "returns" : { "type" : "empty-sequence()", "description" : "a empty sequence." }, "errors" : [ "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">LCB0002 if any error occurs in the communication with the server.</xqdoc:error>", "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">CB0005 if the number of keys doesn't match the number of values.</xqdoc:error>" ] }, { "isDocumented" : true, "arity" : 4, "name" : "put-binary", "qname" : "cb:put-binary", "signature" : "($conn as anyURI, $key as string*, $value as base64Binary*, $options as object()) as empty-sequence()", "description" : " Store base64Binary values along with their string keys.<p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"/>\n <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">In addition, the function allows to specify several options:\n <ul>\n   <li><tt>expiration-time</tt>: <tt>integer</tt> value for refreshing the\n        expiration time in seconds\n       (default 0, which means values are kept indefinitely)</li>\n   <li><tt>operation</tt>: <tt>add/replace/set/append/prepend</tt> type of\n       operation</li>\n   <li><tt>wait</tt>: <tt>persist/false</tt> if the system should wait for\n        persistence of the keys</li>\n </ul></p>\n <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">Example:\n <ul><li><pre>\n cb:put-binary($conn, \"image\",\n   http:get-binary(\"http://localhost:8091/images/couchbase_logo.png\")[2],\n   { \"expiration-time\" : 60 * 60 * 24 });\n </pre></li></ul></p>\n", "summary" : "<p> Store base64Binary values along with their string keys.</p>", "annotation_str" : " %an:sequential", "annotations" : [ { "prefix" : "an", "ns" : "http://zorba.io/annotations", "name" : "sequential", "value" : "" } ], "updating" : false, "parameters" : [ { "name" : "conn", "type" : "anyURI", "occurrence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> The identifier of the active connection</div>" }, { "name" : "key", "type" : "string", "occurrence" : "*", "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> The keys to store</div>" }, { "name" : "value", "type" : "base64Binary", "occurrence" : "*", "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> The base64Binary values to be stored</div>" }, { "name" : "options", "type" : "object()", "occurrence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> An object with additional options</div>" } ], "returns" : { "type" : "empty-sequence()", "description" : "a empty sequence." }, "errors" : [ "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">LCB0002 if any error occurs in the communication with the server.</xqdoc:error>", "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">CB0005 if the number of keys doesn't match the number of values.</xqdoc:error>", "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">CB0007 if any of the options is not supported.</xqdoc:error>", "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">CB0009 if the given expiration time is not an integer.</xqdoc:error>", "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">CB0011 if the stored Variable was not stored</xqdoc:error>" ] }, { "isDocumented" : true, "arity" : 3, "name" : "put-text", "qname" : "cb:put-text", "signature" : "($conn as anyURI, $key as string*, $value as string*) as empty-sequence()", "description" : " Store string values along with their string keys.<p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"/>\n The values are stored with the UTF-8 encoding and a default\n expiration time 0.\n <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">Example:\n <ul><li><pre>\n cb:put-text($conn, \"35040\", fn:serialize({\n                      \"city\" : \"CALERA\",\n                      \"loc\" : [ -86.755987, 33.1098 ],\n                      \"pop\" : 4675,\n                      \"state\" : \"AL\",\n                      \"_id\" : \"35040\"\n                    }));\n </pre></li></ul></p>\n", "summary" : "<p> Store string values along with their string keys.</p>", "annotation_str" : " %an:sequential", "annotations" : [ { "prefix" : "an", "ns" : "http://zorba.io/annotations", "name" : "sequential", "value" : "" } ], "updating" : false, "parameters" : [ { "name" : "conn", "type" : "anyURI", "occurrence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> The identifier of the active connection</div>" }, { "name" : "key", "type" : "string", "occurrence" : "*", "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> The keys to store</div>" }, { "name" : "value", "type" : "string", "occurrence" : "*", "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> The string values to be stored.</div>" } ], "returns" : { "type" : "empty-sequence()", "description" : "a empty sequence." }, "errors" : [ "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">LCB0002 if any error occurs in the communication with the server.</xqdoc:error>", "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">CB0005 if the number of keys doesn't match the number of values.</xqdoc:error>" ] }, { "isDocumented" : true, "arity" : 4, "name" : "put-text", "qname" : "cb:put-text", "signature" : "($conn as anyURI, $key as string*, $value as string*, $options as object()) as empty-sequence()", "description" : " Store string values along with their string keys.<p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"/>\n <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">In addition, the function allows to specify several options:\n <ul>\n   <li><tt>expiration-time</tt>: <tt>integer</tt> value for refreshing the\n        expiration time in seconds\n       (default 0, which means values are kept indefinitely)</li>\n   <li><tt>encoding</tt>: <tt>string</tt> name of the encoding of the\n        returned string (default UTF-8)</li>\n   <li><tt>operation</tt>: <tt>add/replace/set/append/prepend</tt> type\n        of operation</li>\n   <li><tt>wait</tt>: <tt>persist/false</tt> if the system should wait for\n        persistence of the keys</li>\n </ul></p>\n <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">Example:\n <ul><li><pre>\n cb:put-text($conn, \"35040\", fn:serialize({\n                      \"city\" : \"CALERA\",\n                      \"loc\" : [ -86.755987, 33.1098 ],\n                      \"pop\" : 4675,\n                      \"state\" : \"AL\",\n                      \"_id\" : \"35040\"\n                    }), { \"expiration-time\" : 60 * 60 * 24 });\n </pre></li></ul></p>\n", "summary" : "<p> Store string values along with their string keys.</p>", "annotation_str" : " %an:sequential", "annotations" : [ { "prefix" : "an", "ns" : "http://zorba.io/annotations", "name" : "sequential", "value" : "" } ], "updating" : false, "parameters" : [ { "name" : "conn", "type" : "anyURI", "occurrence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> The identifier of the active connection</div>" }, { "name" : "key", "type" : "string", "occurrence" : "*", "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> The keys to store</div>" }, { "name" : "value", "type" : "string", "occurrence" : "*", "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> The string values to be stored</div>" }, { "name" : "options", "type" : "object()", "occurrence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> An object with additional options</div>" } ], "returns" : { "type" : "empty-sequence()", "description" : "a empty sequence." }, "errors" : [ "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">LCB0002 if any error occurs in the communication with the server.</xqdoc:error>", "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">CB0005 if the number of keys doesn't match the number of values.</xqdoc:error>", "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">CB0006 if the given encoding is not supported.</xqdoc:error>", "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">CB0007 if any of the options is not supported.</xqdoc:error>", "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">CB0009 if the given expiration time is not an integer.</xqdoc:error>", "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">CB0011 if the stored Variable was not stored</xqdoc:error>" ] }, { "isDocumented" : true, "arity" : 2, "name" : "remove", "qname" : "cb:remove", "signature" : "($conn as anyURI, $key as string*) as empty-sequence()", "description" : " Remove the values matching the given string keys.<p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"/>\n <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">Example:\n <ul><li><pre>\n cb:remove($conn, \"35040\");\n </pre></li></ul></p>\n", "summary" : "<p> Remove the values matching the given string keys.</p>", "annotation_str" : " %an:sequential", "annotations" : [ { "prefix" : "an", "ns" : "http://zorba.io/annotations", "name" : "sequential", "value" : "" } ], "updating" : false, "parameters" : [ { "name" : "conn", "type" : "anyURI", "occurrence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> The identifier of the active connection</div>" }, { "name" : "key", "type" : "string", "occurrence" : "*", "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> The requested keys to have their values removed</div>" } ], "returns" : { "type" : "empty-sequence()", "description" : "a empty sequence." }, "errors" : [ "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">LCB0002 if any error occurs in the communication with the server.</xqdoc:error>" ] }, { "isDocumented" : true, "arity" : 3, "name" : "touch", "qname" : "cb:touch", "signature" : "($conn as anyURI, $key as string*, $exp-time as integer) as empty-sequence()", "description" : " Refresh the expiration time of the given string keys.<p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"/>\n <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">Example:\n <ul><li><pre>\n cb:touch($conn, \"35040\", 60 * 60 * 24);\n </pre></li></ul></p>\n", "summary" : "<p> Refresh the expiration time of the given string keys.</p>", "annotation_str" : " %an:sequential", "annotations" : [ { "prefix" : "an", "ns" : "http://zorba.io/annotations", "name" : "sequential", "value" : "" } ], "updating" : false, "parameters" : [ { "name" : "conn", "type" : "anyURI", "occurrence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> The identifier of the active connection</div>" }, { "name" : "key", "type" : "string", "occurrence" : "*", "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> The keys to touch</div>" }, { "name" : "exp-time", "type" : "integer", "occurrence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> New expiration time in seconds</div>" } ], "returns" : { "type" : "empty-sequence()", "description" : "a empty sequence." }, "errors" : [ "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">LCB0002 if any error occurs in the communication with the server.</xqdoc:error>" ] }, { "isDocumented" : true, "arity" : 2, "name" : "view", "qname" : "cb:view", "signature" : "($conn as anyURI, $path as string*) as object()*", "description" : " Retrieve the content of existing views. <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"/>\n <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">Example:\n <ul><li><pre>\n $results := cb:view($conn, \"_design/zip/_view/bystate\");\n </pre></li></ul></p>\n", "summary" : "<p> Retrieve the content of existing views.</p>", "annotation_str" : " %an:sequential", "annotations" : [ { "prefix" : "an", "ns" : "http://zorba.io/annotations", "name" : "sequential", "value" : "" } ], "updating" : false, "parameters" : [ { "name" : "conn", "type" : "anyURI", "occurrence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> The identifier of the active connection</div>" }, { "name" : "path", "type" : "string", "occurrence" : "*", "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> The view path</div>" } ], "returns" : { "type" : "object()*", "description" : "information about the view" }, "errors" : [ "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">LCB0002 if any error occurs in the communication with the server.</xqdoc:error>" ] }, { "isDocumented" : true, "arity" : 3, "name" : "view", "qname" : "cb:view", "signature" : "($conn as anyURI, $path as string*, $options as object()) as object()*", "description" : " Retrieve the content of existing views.<p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"/>\n <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">Example:\n <ul><li><pre>\n $results := cb:view($conn, \"_design/zip/_view/bystate\", { \"limit\": 100 });\n </pre></li></ul></p>\n <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">In addition, the function allows to specify several options:\n <ul>\n   <li><tt>encoding</tt>: <tt>string</tt> name of the encoding of the\n        returned string (default UTF-8)</li>\n   <li><tt>stale</tt>: if the system should wait for persistence of the keys\n    <ul>\n      <li><tt>ok</tt> the view is not updated</li>\n      <li><tt>false</tt> the view is updated before the function view is\n      executed, this options needs the key to be on disk before the call of\n      the function.</li>\n      <li><tt>update_after</tt> the view is updated after the call\n      of the function.</li>\n    </ul></li>\n   <li><tt>limit</tt>: <tt>integer</tt> how many rows qill be shown\n         (default all)</li>\n </ul></p>\n", "summary" : "<p> Retrieve the content of existing views.</p>", "annotation_str" : " %an:sequential", "annotations" : [ { "prefix" : "an", "ns" : "http://zorba.io/annotations", "name" : "sequential", "value" : "" } ], "updating" : false, "parameters" : [ { "name" : "conn", "type" : "anyURI", "occurrence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> The identifier of the active connection</div>" }, { "name" : "path", "type" : "string", "occurrence" : "*", "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> The view path <code>\"_design/test/_view/vies\"</code></div>" }, { "name" : "options", "type" : "object()", "occurrence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> An object with additional options</div>" } ], "returns" : { "type" : "object()*", "description" : "information about the view" }, "errors" : [ "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">LCB0002 if any error occurs in the communication with the server.</xqdoc:error>", "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">CB0007 if any of the options is not supported.</xqdoc:error>" ] } ], "variables" : [  ] }, "http://zorba.io/modules/random" : { "ns" : "http://zorba.io/modules/random", "description" : " This module provides several functions for generating (pseudo-)random\n numbers and strings.\n", "sees" : [  ], "authors" : [ "<xqdoc:author xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">Matthias Brantner, Sorin Nasoi</xqdoc:author>" ], "version" : null, "encoding" : "utf-8", "namespaces" : [ { "uri" : "http://zorba.io/annotations", "prefix" : "an" }, { "uri" : "http://zorba.io/modules/random", "prefix" : "r" }, { "uri" : "http://zorba.io/options/versioning", "prefix" : "ver" }, { "uri" : "http://zorba.io/errors", "prefix" : "zerr" } ], "functions" : [ { "isDocumented" : true, "arity" : 2, "name" : "random-between", "qname" : "r:random-between", "signature" : "($lower as integer, $upper as integer) as integer", "description" : " <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">This function generates one random number within a given range.\n The function is nondeterministic.</p>\n <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">The function is based on <tt>r:random-between#3</tt>.\n Specifically, it returns the value of invoking\n <tt>r:random-betwen($lower, $upper, 1)</tt>.</p>\n", "summary" : "<p>  This function generates one random number within a given range.</p>", "annotation_str" : " %an:nondeterministic", "annotations" : [ { "prefix" : "an", "ns" : "http://zorba.io/annotations", "name" : "nondeterministic", "value" : "" } ], "updating" : false, "parameters" : [ { "name" : "lower", "type" : "integer", "occurrence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> the lower bound for the random number</div>" }, { "name" : "upper", "type" : "integer", "occurrence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> the upper bound for the random number</div>" } ], "returns" : { "type" : "integer", "description" : "a random integer within the given range" }, "errors" : [  ] }, { "isDocumented" : true, "arity" : 3, "name" : "random-between", "qname" : "r:random-between", "signature" : "($lower as integer, $upper as integer, $num as integer) as integer*", "description" : " <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">This function generates an arbitrary number of random numbers\n within a given range. The function is nondeterministic because\n the sequence is <b>not</b> repeatable.</p>\n", "summary" : "<p>  This function generates an arbitrary number of random numbers\n within a given range.</p>", "annotation_str" : " %an:nondeterministic", "annotations" : [ { "prefix" : "an", "ns" : "http://zorba.io/annotations", "name" : "nondeterministic", "value" : "" } ], "updating" : false, "parameters" : [ { "name" : "lower", "type" : "integer", "occurrence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> the lower bound for every value within the sequence</div>" }, { "name" : "upper", "type" : "integer", "occurrence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> the upper bound for every value within the sequence</div>" }, { "name" : "num", "type" : "integer", "occurrence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> the length of the sequence returned</div>" } ], "returns" : { "type" : "integer*", "description" : "<tt xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">$num</tt> pseudo-random integers within (and including) the range specified by <tt xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">$lower</tt> and <tt xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">$upper</tt>. It returns <tt xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">$num</tt>-times <tt xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">$lower</tt> if <tt xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">$lower</tt> is equal to <tt xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">$upper</tt> and the empty sequence if <tt xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">$num</tt> is negative." }, "errors" : [ "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">r:INVALID_ARGUMENT if <tt>$lower</tt> is greater than <tt>$upper</tt></xqdoc:error>" ] }, { "isDocumented" : true, "arity" : 0, "name" : "random", "qname" : "r:random", "signature" : "() as integer", "description" : " <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">This function generates one random number.\n The function is nondeterministic.</p>\n <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">The function is based on <tt>r:random#1</tt>. Specifically, it\n returns the value of invoking <tt>r:random(1)</tt>.</p>\n", "summary" : "<p>  This function generates one random number.</p>", "annotation_str" : " %an:nondeterministic", "annotations" : [ { "prefix" : "an", "ns" : "http://zorba.io/annotations", "name" : "nondeterministic", "value" : "" } ], "updating" : false, "parameters" : [  ], "returns" : { "type" : "integer", "description" : "a random integer" }, "errors" : [  ] }, { "isDocumented" : true, "arity" : 1, "name" : "random", "qname" : "r:random", "signature" : "($num as integer) as integer* external", "description" : " <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">This function generates an arbitrary number of random numbers.\n The function is nondeterministic because the sequence is\n <b>not</b> repeatable.</p>\n <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">However, the function is based on posix function <tt>srand()</tt> and\n <tt>rand()</tt>. Specifically, it invokes <tt>srand()</tt>\n with some random number based on the current time\n and then returns the values returned by invoking\n <tt>rand()</tt> <tt>$num</tt>-times.</p>\n", "summary" : "<p>  This function generates an arbitrary number of random numbers.</p>", "annotation_str" : " %an:nondeterministic", "annotations" : [ { "prefix" : "an", "ns" : "http://zorba.io/annotations", "name" : "nondeterministic", "value" : "" } ], "updating" : false, "parameters" : [ { "name" : "num", "type" : "integer", "occurrence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> the length of the sequence returned</div>" } ], "returns" : { "type" : "integer*", "description" : "<tt xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">$num</tt> random integers, or the empty sequence if <tt xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">$num</tt> is negative." }, "errors" : [  ] }, { "isDocumented" : true, "arity" : 4, "name" : "seeded-random-between", "qname" : "r:seeded-random-between", "signature" : "($seed as integer, $lower as integer, $upper as integer, $num as integer) as integer*", "description" : " <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">This function generates an arbitrary number of pseudo-random numbers\n within a given range. The sequence is repeatable by calling the\n function with the same seed and boundaries.</p>\n <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">The function is based on the function <tt>r:seeded-random#2</tt>.\n Specifically, its result is repeatable if called with the\n same arguments.</p>\n", "summary" : "<p>  This function generates an arbitrary number of pseudo-random numbers\n within a given range.</p>", "annotation_str" : "", "annotations" : [  ], "updating" : false, "parameters" : [ { "name" : "seed", "type" : "integer", "occurrence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> the initial seed value for the sequence</div>" }, { "name" : "lower", "type" : "integer", "occurrence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> the lower bound for every value within the sequence</div>" }, { "name" : "upper", "type" : "integer", "occurrence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> the upper bound for every value within the sequence</div>" }, { "name" : "num", "type" : "integer", "occurrence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> the length of the sequence returned</div>" } ], "returns" : { "type" : "integer*", "description" : "<tt xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">$num</tt> pseudo-random integers within (and including) the range specified by <tt xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">$lower</tt> and <tt xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">$upper</tt>. It returns <tt xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">$num</tt>-times <tt xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">$lower</tt> if <tt xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">$lower</tt> is equal to <tt xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">$upper</tt> and the empty sequence if <tt xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">$num</tt> is negative." }, "errors" : [ "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">zerr:ZQXD0004 if the given seed is negative or great than the max value of <tt>unsigned int</tt> on the given platform.</xqdoc:error>", "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">r:INVALID_ARGUMENT if <tt>$lower</tt> is greater than <tt>$upper</tt></xqdoc:error>" ] }, { "isDocumented" : true, "arity" : 2, "name" : "seeded-random", "qname" : "r:seeded-random", "signature" : "($seed as integer, $num as integer) as integer* external", "description" : " <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">This function generates an arbitrary number of pseudo-random numbers.\n The sequence is repeatable by calling the function with the same\n seed.</p>\n <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">The function is based on posix function <tt>srand()</tt> and\n <tt>rand()</tt>. Specifically, it invokes <tt>srand($seed)</tt>\n and then returns the values returned by invoking <tt>rand()</tt>\n <tt>$num</tt>-times.</p>\n <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">Sequences returned by this function are not thread-safe (i.e.\n if multiple XQuery programs invoking this function are executed\n concurrently in several threads). This is because the function is\n based on <tt>srand()</tt> and <tt>rand()</tt>.</p>\n", "summary" : "<p>  This function generates an arbitrary number of pseudo-random numbers.</p>", "annotation_str" : "", "annotations" : [  ], "updating" : false, "parameters" : [ { "name" : "seed", "type" : "integer", "occurrence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> the initial seed value for the sequence</div>" }, { "name" : "num", "type" : "integer", "occurrence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> the length of the sequence returned</div>" } ], "returns" : { "type" : "integer*", "description" : "<tt xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">$num</tt> pseudo-random integers, or the empty sequence if <tt xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">$num</tt> is negative." }, "errors" : [ "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">zerr:ZQXD0004 if the given seed is negative or great than the max value of <tt>unsigned int</tt> on the given platform.</xqdoc:error>" ] }, { "isDocumented" : true, "arity" : 0, "name" : "uuid", "qname" : "r:uuid", "signature" : "() as string external", "description" : " <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">This function returns a uuid.</p>\n <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> Note, that the function is not stable,\n that is, it returns a different UUID everytime the function is invoked.</p>\n", "summary" : "<p>  This function returns a uuid.</p>", "annotation_str" : " %an:nondeterministic", "annotations" : [ { "prefix" : "an", "ns" : "http://zorba.io/annotations", "name" : "nondeterministic", "value" : "" } ], "updating" : false, "parameters" : [  ], "returns" : { "type" : "string", "description" : "the generated UUID as string" }, "errors" : [  ] } ], "variables" : [  ] }, "http://www.zorba-xquery.com/modules/http-client" : { "ns" : "http://www.zorba-xquery.com/modules/http-client", "description" : " <h1 xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">Introduction</h1>\n <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">\n This module provides provides simple functions for performing HTTP requests\n (GET, POST, DELETE etc.), as well as a more flexible general\n purpose function (<a href=\"?anchor=send-request-3\">send-request()</a>).\n </p>\n <h1 xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">Examples of how to use this module</h1>\n <h4 xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">Simple GET Request</h4>\n <pre xmlns:xqdoc=\"http://www.xqdoc.org/1.0\" class=\"ace-static\" ace-mode=\"xquery\">\n import module namespace http=\"http://www.zorba-xquery.com/modules/http-client\";\n declare namespace svg=\"http://www.w3.org/2000/svg\";\n http:get(\"http://www.w3.org/Graphics/SVG/svglogo.svg\")[2]/svg:svg/svg:title\n </pre>\n <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">\n This example downloads an XML resource from the web (in this case,\n an SVG file, which is an XML-based image format) and returns it as\n a document node. Since the XML is in a namespace, we declare that\n namespace; we can then perform a path expression directly on the\n return value of http:get().\n </p>\n <h4 xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">Simple GET Request (retrieving XHTML)</h4>\n   <pre xmlns:xqdoc=\"http://www.xqdoc.org/1.0\" class=\"ace-static\" ace-mode=\"xquery\">\n   import module namespace http=\"http://www.zorba-xquery.com/modules/http-client\";\n   declare namespace xhtml=\"http://www.w3.org/1999/xhtml\";\n   http:get-node( \"http://www.w3.org\" )[2]//xhtml:body\n   </pre>\n <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">\n This example shows how to retrieve an XHTML resource. XHTML is\n XML, so the http:get-node() function will return it as a document node\n and you can operate on it with the full power of XQuery. As above, since this\n XML is in a particular namespace, the above query defines that namespace\n with the prefix \"xhtml\" so it can easily perform path expressions, etc.\n </p>\n <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">\n Note: many webservers, include www.w3.org, return XHTML with the\n HTTP Content-Type \"text/html\". Zorba cannot assume that \"text/html\"\n is actually XHTML, and so http:get() would have returned raw text\n rather than a document node. That is why the example above uses\n http:get-node(), which overrides the server's Content-Type and tells\n Zorba to attempt to parse the result as XML.\n </p>\n <h4 xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">Simple GET Request (retrieving HTML as text)</h4>\n <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">\n Note that XQuery does <b>not</b> understand plain HTML, and so if the URL\n you retrieve contains plain HTML data (not XHTML), it will be treated as\n plain text as shown in the next example. If you want to operate on the HTML\n with XQuery, you should use the HTML language module which can transform\n HTML to XHTML. The HTML module is supported by the Zorba team, but it is\n not a \"core module\", meaning that it is not shipped with every Zorba\n installation and may not be available. See\n <a href=\"http://www.zorba-xquery.com/site2/html/downloads.html\">the Zorba downloads\n page</a> for information about obtaining this module if you do not\n have it.</p>\n <pre xmlns:xqdoc=\"http://www.xqdoc.org/1.0\" class=\"ace-static\" ace-mode=\"xquery\">\n import module namespace http=\"http://www.zorba-xquery.com/modules/http-client\";\n http:get(\"http://www.example.com\")[2]\n </pre>\n returns\n   <pre xmlns:xqdoc=\"http://www.xqdoc.org/1.0\" class=\"ace-static\" ace-mode=\"xml\">\n   &lt;!DOCTYPE HTML PUBLIC \"-//W3C//DTD HTML 4.01 Transitional//EN\"&gt;\n   &lt;html&gt;\n     &lt;head&gt;\n       &lt;meta http-equiv=\"Content-Type\"\n       content=\"text/html; charset=utf-8\" /&gt;\n       &lt;title&gt;Example Web Page&lt;/title&gt;\n     &lt;/head&gt;\n     &lt;body&gt;\n       &lt;p&gt;You have reached this web page by typing \"example.com\",\n       \"example.net\", or \"example.org\" into your web browser.&lt;/p&gt;\n       &lt;p&gt;These domain names are reserved for use in documentation and are\n       Not available for registration. See\n       &lt;a href=\"http://www.rfc-editor.org/rfc/rfc2606.txt\"&gt;RFC 2606&lt;/a&gt;,\n       Section 3.&lt;/p&gt;\n     &lt;/body&gt;\n   &lt;/html&gt;\n   </pre>\n <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">Note that the response data above is a simple\n xs:string value containing the HTML data, not actual XML data. If you\n executed the above query using the Zorba command-line client, you would\n have actually seen data like the following:</p>\n <pre xmlns:xqdoc=\"http://www.xqdoc.org/1.0\" class=\"ace-static\" ace-mode=\"xml\">\n   &amp;lt;!DOCTYPE HTML PUBLIC \"-//W3C//DTD HTML 4.01 Transitional//EN\"&amp;gt;\n   &amp;lt;html&amp;gt;\n      ...\n </pre>\n <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">because Zorba would attempt to serialize it as XML data, and would\n escape all the raw angle brackets in the original xs:string.</p>\n <h4 xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">Simple POST Request</h4>\n <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">\n Here is a simple example which sends text content by making an HTTP POST\n request.\n </p>\n <pre xmlns:xqdoc=\"http://www.xqdoc.org/1.0\" class=\"ace-static\" ace-mode=\"xquery\">\n import module namespace http=\"http://www.zorba-xquery.com/modules/http-client\";\n http:post( \"...\", \"Hello World\" )\n </pre>\n <h1 xmlns:xqdoc=\"http://www.xqdoc.org/1.0\" id=\"standard_return\">Return Values</h1>\n <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">Most functions in this module (all except\n <a href=\"?anchor=options-1\">options()</a>) return one or more items.\n (<a href=\"?anchor=head-1\">head()</a> returns exactly one.) For all of these,\n the first item returned will be a &lt;http-schema:response&gt;\n element, as seen in the examples above. This element has \"status\" and\n \"message\" attributes, representing the result of the HTTP call. It\n also has any number of &lt;http-schema:header&gt; child elements that\n encode the HTTP headers returned by the HTTP server. Finally, it\n will generally contain a &lt;http-schema:body&gt; child element with\n a \"media-type\" attribute that identifies the content-type of the\n result data.</p>\n <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">The full schema of this &lt;http-schema:response&gt; element is\n part of the <a href=\"http://expath.org/modules/http-client/\">EXPath\n HTTP Client module</a>. You can see the schema\n <a href=\"schemas/expath.org_ns_http-client.html\">here</a>.</p>\n <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">Any items in function return values after the initial\n &lt;http-schema:response&gt; element are the body/bodies of the HTTP\n response from the server. (MIME Multi-part responses will have\n more than one body.) The type of these items depends on the\n Content-Type for each body. Each item will be:</p>\n <ul xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">\n  <li>\n    an element node, if the returned content type is one of:\n    <ul>\n      <li>text/xml</li>\n      <li>application/xml</li>\n      <li>text/xml-external-parsed-entity</li>\n      <li>application/xml-external-parsed-entity</li>\n      <li>or if the Content-Type ends with \"+xml\".</li>\n    </ul>\n  </li>\n  <li>\n    an xs:string, if the returned content type starts with \"text/\"\n    and does not match the above XML content types strings, or if\n    it is one of:\n    <ul>\n      <li>\"application/json\"</li>\n      <li>\"application/x-javascript\"</li>\n    </ul>\n  </li>\n  <li>xs:base64Binary for all other content types.</li>\n </ul>\n <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">This return value - a sequence of items comprising one\n &lt;http-schema:response&gt; element followed by zero or more\n response items - is referred to as the \"standard http-client\n return type\" in the function declarations below.</p>\n <h1 xmlns:xqdoc=\"http://www.xqdoc.org/1.0\" id=\"url_string\">$href Arguments to Functions</h1>\n All functions in this module accept a URL argument named $href. In\n all cases, the value passed to $href must be a valid xs:anyURI.\n However, all functions declare $href to be of type xs:string. This\n is for convenience, since you can pass a string literal value (that\n is, a URL in double-quotes spelled out explicitly in your query)\n to an xs:string parameter.\n <h1 xmlns:xqdoc=\"http://www.xqdoc.org/1.0\" id=\"get_warning\">Important Notice Regarding get() Functions</h1>\n All of the get() functions in this module -\n <a xmlns:xqdoc=\"http://www.xqdoc.org/1.0\" href=\"?anchor=get-1\">get()</a>, <a xmlns:xqdoc=\"http://www.xqdoc.org/1.0\" href=\"?anchor=get-node-1\">get-node()</a>,\n <a xmlns:xqdoc=\"http://www.xqdoc.org/1.0\" href=\"?anchor=get-text-1\">get-text()</a>, and\n <a xmlns:xqdoc=\"http://www.xqdoc.org/1.0\" href=\"?anchor=get-binary()\">get-binary()</a> - are declared to be\n <i xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">nondeterministic</i>, which means that Zorba will not cache\n their results. However, they are <b xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">not</b> declared to be\n <i xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">sequential</i>, which means that Zorba may re-order them\n as part of its query optimization. According to the HTTP RFC,\n GET requests should only return data, and should not have any\n side-effects. However, in practice it is not uncommon for GET\n requests to have side-effects. If your application depends on\n the ordering of side-effects from making GET requests, you should\n either use the more complex <a xmlns:xqdoc=\"http://www.xqdoc.org/1.0\" href=\"?anchor=send-request-3\">send-request()</a>\n function (which <b xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">is</b> declared <i xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">sequential</i>), or alterately\n wrap each call to get() in your own sequential function, to ensure\n that Zorba does not place the GET requests out of order.\n <h1 xmlns:xqdoc=\"http://www.xqdoc.org/1.0\" id=\"expath_relation\">Relation to the EXPath http-client module</h1>\n <a xmlns:xqdoc=\"http://www.xqdoc.org/1.0\" href=\"http://expath.org/\">EXPath</a> defines its own http-client\n module, which is available separately for Zorba as a non-core module.\n There are two primary differences between EXPath's http-client and\n Zorba's core http-client (this module):\n <ol xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">\n   <li>EXPath defines only the send-request() function, although it\n does include convenient 1- and 2-argument forms in addition to the\n full 3-argument form. EXPath does not include the simpler get(),\n post(), put(), delete(), head(), and options() functions defined by\n this module.</li>\n   <li>EXPath specifies that all HTML content returned from the\n HTTP server will be <i>tidied up</i> into valid XML, and then parsed\n into an element. As this required an additional third-party library\n dependency, Zorba's http-client module does not perform this tidying.\n Instead, HTML content is returned as a string (with special XML\n characters replaced with XML entity references, as shown in the\n above examples).</li>\n </ol>\n See <a xmlns:xqdoc=\"http://www.xqdoc.org/1.0\" href=\"http://www.expath.org/spec/http-client\">the full spec\n of the EXPath http-client module</a> for more information.\n", "sees" : [ "<xqdoc:see xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"><a href=\"http://www.w3.org/TR/xquery-11/#FunctionDeclns\">XQuery 1.1: Function Declaration</a></xqdoc:see>" ], "authors" : [ "<xqdoc:author xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">Markus Pilman, Federico Cavalieri</xqdoc:author>" ], "version" : null, "encoding" : "utf-8", "namespaces" : [ { "uri" : "http://zorba.io/annotations", "prefix" : "an" }, { "uri" : "http://www.w3.org/2005/xqt-errors", "prefix" : "err" }, { "uri" : "http://expath.org/ns/error", "prefix" : "error" }, { "uri" : "http://www.zorba-xquery.com/modules/http-client", "prefix" : "http" }, { "uri" : "http://expath.org/ns/http-client", "prefix" : "http-schema" }, { "uri" : "http://zorba.io/modules/http-client-wrapper", "prefix" : "http-wrapper" }, { "uri" : "http://jsoniq.org/functions", "prefix" : "jn" }, { "uri" : "http://zorba.io/modules/http-client", "prefix" : "json-http" }, { "uri" : "http://jsoniq.org/function-library", "prefix" : "libjn" }, { "uri" : "http://www.w3.org/2010/xslt-xquery-serialization", "prefix" : "ser" }, { "uri" : "http://zorba.io/options/versioning", "prefix" : "ver" } ], "functions" : [ { "isDocumented" : true, "arity" : 1, "name" : "delete", "qname" : "http:delete", "signature" : "($href as xs:string) as item()+", "description" : " This function makes an HTTP DELETE request to a given URL.\n", "summary" : "<p> This function makes an HTTP DELETE request to a given URL.</p>", "annotation_str" : " %an:sequential", "annotations" : [ { "prefix" : "an", "ns" : "http://zorba.io/annotations", "name" : "sequential", "value" : "" } ], "updating" : false, "parameters" : [ { "name" : "href", "type" : "xs:string", "occurrence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> The URL to which the request will be made (see <a href=\"#url_string\">note</a> above).</div>" } ], "returns" : { "type" : "item()+", "description" : "<a xmlns:xqdoc=\"http://www.xqdoc.org/1.0\" href=\"#standard_return\">standard http-client return type</a>." }, "errors" : [ "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">error:HC001 An HTTP error occurred.</xqdoc:error>", "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">error:HC002 Error parsing the response content as XML.</xqdoc:error>", "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">error:HC006 A timeout occurred waiting for the response.</xqdoc:error>", "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">error:HCV02 Trying to follow a redirect of a DELETE request.</xqdoc:error>" ] }, { "isDocumented" : true, "arity" : 1, "name" : "get-binary", "qname" : "http:get-binary", "signature" : "($href as xs:string) as item()+", "description" : " This function makes a GET request on a given URL. All returned bodies\n are forced to be interpreted as binary data, and will be returned\n as xs:base64Binary items.\n", "summary" : "<p> This function makes a GET request on a given URL.</p>", "annotation_str" : " %an:nondeterministic", "annotations" : [ { "prefix" : "an", "ns" : "http://zorba.io/annotations", "name" : "nondeterministic", "value" : "" } ], "updating" : false, "parameters" : [ { "name" : "href", "type" : "xs:string", "occurrence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> The URL to which the request will be made (see <a href=\"#url_string\">note</a> above).</div>" } ], "returns" : { "type" : "item()+", "description" : "<a xmlns:xqdoc=\"http://www.xqdoc.org/1.0\" href=\"#standard_return\">standard http-client return type</a>." }, "errors" : [ "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">error:HC001 An HTTP error occurred.</xqdoc:error>", "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">error:HC002 Error parsing the response content as XML.</xqdoc:error>", "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">error:HC006 A timeout occurred waiting for the response.</xqdoc:error>" ] }, { "isDocumented" : true, "arity" : 1, "name" : "get-node", "qname" : "http:get-node", "signature" : "($href as xs:string) as item()+", "description" : " This function makes a GET request to a given URL. All returned bodies\n are forced to be interpreted as XML and parsed into elements.\n", "summary" : "<p> This function makes a GET request to a given URL.</p>", "annotation_str" : " %an:nondeterministic", "annotations" : [ { "prefix" : "an", "ns" : "http://zorba.io/annotations", "name" : "nondeterministic", "value" : "" } ], "updating" : false, "parameters" : [ { "name" : "href", "type" : "xs:string", "occurrence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> The URL to which the request will be made (see <a href=\"#url_string\">note</a> above).</div>" } ], "returns" : { "type" : "item()+", "description" : "<a xmlns:xqdoc=\"http://www.xqdoc.org/1.0\" href=\"#standard_return\">standard http-client return type</a>." }, "errors" : [ "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">error:HC001 An HTTP error occurred.</xqdoc:error>", "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">error:HC002 Error parsing the response content as XML.</xqdoc:error>", "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">error:HC006 A timeout occurred waiting for the response.</xqdoc:error>" ] }, { "isDocumented" : true, "arity" : 1, "name" : "get-text", "qname" : "http:get-text", "signature" : "($href as xs:string) as item()+", "description" : " This function makes a GET request to a given URL. All returned bodies\n are forced to be interpreted as plain strings, and will be returned\n as xs:string items.\n", "summary" : "<p> This function makes a GET request to a given URL.</p>", "annotation_str" : " %an:nondeterministic", "annotations" : [ { "prefix" : "an", "ns" : "http://zorba.io/annotations", "name" : "nondeterministic", "value" : "" } ], "updating" : false, "parameters" : [ { "name" : "href", "type" : "xs:string", "occurrence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> The URL to which the request will be made (see <a href=\"#url_string\">note</a> above).</div>" } ], "returns" : { "type" : "item()+", "description" : "<a xmlns:xqdoc=\"http://www.xqdoc.org/1.0\" href=\"#standard_return\">standard http-client return type</a>." }, "errors" : [ "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">error:HC001 An HTTP error occurred.</xqdoc:error>", "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">error:HC002 Error parsing the response content as XML.</xqdoc:error>", "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">error:HC006 A timeout occurred waiting for the response.</xqdoc:error>" ] }, { "isDocumented" : true, "arity" : 1, "name" : "get", "qname" : "http:get", "signature" : "($href as xs:string) as item()+", "description" : " This function makes a GET request to a given URL.\n", "summary" : "<p> This function makes a GET request to a given URL.</p>", "annotation_str" : " %an:nondeterministic", "annotations" : [ { "prefix" : "an", "ns" : "http://zorba.io/annotations", "name" : "nondeterministic", "value" : "" } ], "updating" : false, "parameters" : [ { "name" : "href", "type" : "xs:string", "occurrence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> The URL to which the request will be made (see <a href=\"#url_string\">note</a> above).</div>" } ], "returns" : { "type" : "item()+", "description" : "<a xmlns:xqdoc=\"http://www.xqdoc.org/1.0\" href=\"#standard_return\">standard http-client return type</a>." }, "errors" : [ "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">error:HC001 An HTTP error occurred.</xqdoc:error>", "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">error:HC002 Error parsing the response content as XML.</xqdoc:error>", "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">error:HC006 A timeout occurred waiting for the response.</xqdoc:error>" ] }, { "isDocumented" : true, "arity" : 1, "name" : "head", "qname" : "http:head", "signature" : "($href as xs:string) as item()", "description" : " This function makes an HTTP HEAD request on a given URL.\n", "summary" : "<p> This function makes an HTTP HEAD request on a given URL.</p>", "annotation_str" : " %an:nondeterministic", "annotations" : [ { "prefix" : "an", "ns" : "http://zorba.io/annotations", "name" : "nondeterministic", "value" : "" } ], "updating" : false, "parameters" : [ { "name" : "href", "type" : "xs:string", "occurrence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> The URL to which the request will be made (see <a href=\"#url_string\">note</a> above).</div>" } ], "returns" : { "type" : "item()", "description" : "<a xmlns:xqdoc=\"http://www.xqdoc.org/1.0\" href=\"#standard_return\">standard http-client return type</a> (since HEAD never returns any body data, only the &lt;http-schema:response&gt; element will be returned)." }, "errors" : [ "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">error:HC001 An HTTP error occurred.</xqdoc:error>", "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">error:HC006 A timeout occurred waiting for the response.</xqdoc:error>" ] }, { "isDocumented" : true, "arity" : 1, "name" : "options", "qname" : "http:options", "signature" : "($href as xs:string) as xs:string*", "description" : " This function makes an HTTP OPTIONS request, which asks the server\n which operations it supports.\n", "summary" : "<p> This function makes an HTTP OPTIONS request, which asks the server\n which operations it supports.</p>", "annotation_str" : " %an:nondeterministic", "annotations" : [ { "prefix" : "an", "ns" : "http://zorba.io/annotations", "name" : "nondeterministic", "value" : "" } ], "updating" : false, "parameters" : [ { "name" : "href", "type" : "xs:string", "occurrence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> The URL to which the request will be made (see <a href=\"#url_string\">note</a> above).</div>" } ], "returns" : { "type" : "xs:string*", "description" : "A sequence of xs:string values of the allowed operations." }, "errors" : [ "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">error:HC001 An HTTP error occurred.</xqdoc:error>", "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">error:HC006 A timeout occurred waiting for the response.</xqdoc:error>" ] }, { "isDocumented" : true, "arity" : 2, "name" : "post", "qname" : "http:post", "signature" : "($href as xs:string, $body as item()) as item()+", "description" : " This function makes an HTTP POST request to a given URL. If the body\n passed to this function is an element, it will be serialized to XML\n to be sent to the server, and the Content-Type sent to the server will\n be \"text/xml\". Otherwise, the body will be converted to\n a plain string, and the Content-Type will be \"text/plain\".\n", "summary" : "<p> This function makes an HTTP POST request to a given URL.</p>", "annotation_str" : " %an:sequential", "annotations" : [ { "prefix" : "an", "ns" : "http://zorba.io/annotations", "name" : "sequential", "value" : "" } ], "updating" : false, "parameters" : [ { "name" : "href", "type" : "xs:string", "occurrence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> The URL to which the request will be made (see <a href=\"#url_string\">note</a> above).</div>" }, { "name" : "body", "type" : "item()", "occurrence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> The body which will be sent to the server.</div>" } ], "returns" : { "type" : "item()+", "description" : "<a xmlns:xqdoc=\"http://www.xqdoc.org/1.0\" href=\"#standard_return\">standard http-client return type</a>." }, "errors" : [ "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">error:HC001 An HTTP error occurred.</xqdoc:error>", "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">error:HC002 Error parsing the response content as XML.</xqdoc:error>", "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">error:HC006 A timeout occurred waiting for the response.</xqdoc:error>", "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">error:HCV02 Trying to follow a redirect of a POST request.</xqdoc:error>" ] }, { "isDocumented" : true, "arity" : 3, "name" : "post", "qname" : "http:post", "signature" : "($href as xs:string, $body as item(), $content-type as xs:string) as item()+", "description" : " This function makes an HTTP POST request to a given URL. If the body\n passed to this function is an element, it will be serialized\n according to the $content-type parameter as follows:\n <ul xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">\n  <li>If $content-type is \"text/xml\", \"application/xml\",\n \"text/xml-external-parsed-entity\", or\n \"application/xml-external-parsed-entity\", or if it ends with \"+xml\",\n $body will be serialized to XML.</li>\n  <li>If $content-type starts with \"text/html\", $body will be\n serialized to HTML.</li>\n  <li>Otherwise, $body will be serialized to text.</li>\n </ul>\n If $body is not an element, $body will be serialized to text\n regardless of $content-type.\n <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">In any case, Content-Type of the request sent to the server will\n be $content-type.</p>\n", "summary" : "<p> This function makes an HTTP POST request to a given URL.</p>", "annotation_str" : " %an:sequential", "annotations" : [ { "prefix" : "an", "ns" : "http://zorba.io/annotations", "name" : "sequential", "value" : "" } ], "updating" : false, "parameters" : [ { "name" : "href", "type" : "xs:string", "occurrence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> The URL to which the request will be made (see <a href=\"#url_string\">note</a> above).</div>" }, { "name" : "body", "type" : "item()", "occurrence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> The body which will be sent to the server</div>" }, { "name" : "content-type", "type" : "xs:string", "occurrence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> The content type of the body as described above.</div>" } ], "returns" : { "type" : "item()+", "description" : "The first element of the result is the metadata (like headers, status etc), the next elements are the response" }, "errors" : [ "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">error:HC001 An HTTP error occurred.</xqdoc:error>", "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">error:HC002 Error parsing the response content as XML.</xqdoc:error>", "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">error:HC006 A timeout occurred waiting for the response.</xqdoc:error>", "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">error:HCV02 Trying to follow a redirect of a POST request.</xqdoc:error>" ] }, { "isDocumented" : true, "arity" : 2, "name" : "put", "qname" : "http:put", "signature" : "($href as xs:string, $body as item()) as item()+", "description" : " This function makes an HTTP PUT request to a given URL. If the body\n passed to this function is an element, it will be serialized to XML\n to be sent to the server, and the Content-Type sent to the server will\n be \"text/xml\". Otherwise, the body will be converted to\n a plain string, and the Content-Type will be \"text/plain\".\n", "summary" : "<p> This function makes an HTTP PUT request to a given URL.</p>", "annotation_str" : " %an:sequential", "annotations" : [ { "prefix" : "an", "ns" : "http://zorba.io/annotations", "name" : "sequential", "value" : "" } ], "updating" : false, "parameters" : [ { "name" : "href", "type" : "xs:string", "occurrence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> The URL to which the request will be made (see <a href=\"#url_string\">note</a> above).</div>" }, { "name" : "body", "type" : "item()", "occurrence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> The body which will be sent to the server.</div>" } ], "returns" : { "type" : "item()+", "description" : "<a xmlns:xqdoc=\"http://www.xqdoc.org/1.0\" href=\"#standard_return\">standard http-client return type</a>." }, "errors" : [ "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">error:HC001 An HTTP error occurred.</xqdoc:error>", "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">error:HC002 Error parsing the response content as XML.</xqdoc:error>", "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">error:HC006 A timeout occurred waiting for the response.</xqdoc:error>", "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">error:HCV02 Trying to follow a redirect of a PUT request.</xqdoc:error>" ] }, { "isDocumented" : true, "arity" : 3, "name" : "put", "qname" : "http:put", "signature" : "($href as xs:string, $body as item(), $content-type as xs:string) as item()+", "description" : " This function makes an HTTP PUT request to a given URL. If the body\n passed to this function is an element, it will be serialized\n according to the $content-type parameter as follows:\n <ul xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">\n  <li>If $content-type is \"text/xml\", \"application/xml\",\n \"text/xml-external-parsed-entity\", or\n \"application/xml-external-parsed-entity\", or if it ends with \"+xml\",\n $body will be serialized to XML.</li>\n  <li>If $content-type starts with \"text/html\", $body will be\n serialized to HTML.</li>\n  <li>Otherwise, $body will be serialized to text.</li>\n </ul>\n If $body is not an element, $body will be serialized to text\n regardless of $content-type.\n <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">In any case, Content-Type of the request sent to the server will\n be $content-type.</p>\n", "summary" : "<p> This function makes an HTTP PUT request to a given URL.</p>", "annotation_str" : " %an:sequential", "annotations" : [ { "prefix" : "an", "ns" : "http://zorba.io/annotations", "name" : "sequential", "value" : "" } ], "updating" : false, "parameters" : [ { "name" : "href", "type" : "xs:string", "occurrence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> The URL to which the request will be made (see <a href=\"#url_string\">note</a> above).</div>" }, { "name" : "body", "type" : "item()", "occurrence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> The body which will be sent to the server.</div>" }, { "name" : "content-type", "type" : "xs:string", "occurrence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> The content type of $body as described above.</div>" } ], "returns" : { "type" : "item()+", "description" : "<a xmlns:xqdoc=\"http://www.xqdoc.org/1.0\" href=\"#standard_return\">standard http-client return type</a>." }, "errors" : [ "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">error:HC001 An HTTP error occurred.</xqdoc:error>", "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">error:HC002 Error parsing the response content as XML.</xqdoc:error>", "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">error:HC006 A timeout occurred waiting for the response.</xqdoc:error>", "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">error:HCV02 Trying to follow a redirect of a PUT request.</xqdoc:error>" ] }, { "isDocumented" : true, "arity" : 3, "name" : "send-request", "qname" : "http:send-request", "signature" : "($request as element(http-schema:request)?, $href as xs:string?, $bodies as item()*) as item()+", "description" : " This function sends an HTTP request and returns the corresponding response.\n Its inputs, outputs, and behavior are identical to the\n <a xmlns:xqdoc=\"http://www.xqdoc.org/1.0\" href=\"http://expath.org/spec/http-client\">EXPath http-client</a>'s\n send-request() function (except that HTML responses are not tidied\n into XML - see <a xmlns:xqdoc=\"http://www.xqdoc.org/1.0\" href=\"#expath_relation\">the note above</a>). It\n is provided here for use in Zorba installations that do not have\n the EXPath module available. If you have the option of using the\n EXPath module instead of this function, please do so, as it will\n allow your application to be more interoperable between different\n XQuery engines.\n Full documentation of the $request parameter can be found in\n <a xmlns:xqdoc=\"http://www.xqdoc.org/1.0\" href=\"http://expath.org/spec/http-client#d2e183\">the EXPath\n specification</a>.\n", "summary" : "<p> This function sends an HTTP request and returns the corresponding response.</p>", "annotation_str" : " %an:sequential", "annotations" : [ { "prefix" : "an", "ns" : "http://zorba.io/annotations", "name" : "sequential", "value" : "" } ], "updating" : false, "parameters" : [ { "name" : "request", "type" : "element(http-schema:request)", "occurrence" : "?", "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> Contains the various parameters of the request (see above).</div>" }, { "name" : "href", "type" : "xs:string", "occurrence" : "?", "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> The URL to which the request will be made (see <a href=\"#url_string\">note</a> above). If this parameter is specified, it will override the \"href\" attribute of $request.</div>" }, { "name" : "bodies", "type" : "item()", "occurrence" : "*", "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> is the request body content, for HTTP methods that can contain a body in the request (i.e. POST and PUT). It is an error if this param is not the empty sequence for methods</div>" } ], "returns" : { "type" : "item()+", "description" : "<a xmlns:xqdoc=\"http://www.xqdoc.org/1.0\" href=\"#standard_return\">standard http-client return type</a>." }, "errors" : [ "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">error:HC001 An HTTP error occurred.</xqdoc:error>", "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">error:HC002 Error parsing the response content as XML.</xqdoc:error>", "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">error:HC003 With a multipart response, the override-media-type must be either a multipart media type or application/octet-stream.</xqdoc:error>", "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">error:HC004 The src attribute on the body element is mutually exclusive with all other attribute (except the media-type).</xqdoc:error>", "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">error:HC005 The input request element is not valid.</xqdoc:error>", "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">error:HC006 A timeout occurred waiting for the response.</xqdoc:error>", "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">error:HCV02 Trying to follow a redirect of a POST, PUT, or DELETE request</xqdoc:error>" ] } ], "variables" : [  ] }, "http://xbrl.io/modules/bizql/profiles/sec/networks" : { "ns" : "http://xbrl.io/modules/bizql/profiles/sec/networks", "description" : " <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">This module provides functionality for querying SEC networks in SEC filings.</p>\n <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">SEC Networks are actually XBRL Components. In the SEC profiles, all XBRL networks\n in an XBRL component must be consistent to each other. A way to look at it is that\n the SEC Network can be identified with the XBRL presentation network it contains.</p>\n <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">For XBRL-generic operations on XBRL components, use the\n generic components module.</p>\n", "sees" : [  ], "authors" : [ "<xqdoc:author xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">Charles Hoffman</xqdoc:author>", "<xqdoc:author xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">Matthias Brantner</xqdoc:author>", "<xqdoc:author xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">Dennis Knochenwefel</xqdoc:author>", "<xqdoc:author xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">Ghislain Fourny</xqdoc:author>" ], "version" : null, "encoding" : "utf-8", "namespaces" : [ { "uri" : "http://xbrl.io/modules/bizql/archives", "prefix" : "archives" }, { "uri" : "http://xbrl.io/modules/bizql/components", "prefix" : "components" }, { "uri" : "http://www.28msec.com/modules/credentials", "prefix" : "credentials" }, { "uri" : "http://xbrl.io/modules/bizql/facts", "prefix" : "facts" }, { "uri" : "http://xbrl.io/modules/bizql/profiles/sec/filings", "prefix" : "filings" }, { "uri" : "http://xbrl.io/modules/bizql/hypercubes", "prefix" : "hypercubes" }, { "uri" : "http://www.28msec.com/modules/mongodb", "prefix" : "mongo" }, { "uri" : "http://xbrl.io/modules/bizql/networks", "prefix" : "networks" }, { "uri" : "http://xbrl.io/modules/bizql/profiles/sec/core", "prefix" : "sec" }, { "uri" : "http://xbrl.io/modules/bizql/profiles/sec/networks", "prefix" : "sec-networks" }, { "uri" : "http://zorba.io/options/versioning", "prefix" : "ver" } ], "functions" : [ { "isDocumented" : true, "arity" : 1, "name" : "abstracts", "qname" : "sec-networks:abstracts", "signature" : "($networks-or-ids as item()*) as object()*", "description" : " <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">Returns all SEC Abstracts contained in the supplied SEC Networks.</p>\n <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">SEC Abstracts are XBRL abstract primary items that may or may not be associated\n with a hypercube -- except those that are SEC LineItems (i.e., source of an all relation).</p>\n", "summary" : "<p>  Returns all SEC Abstracts contained in the supplied SEC Networks.</p>", "annotation_str" : "", "annotations" : [  ], "updating" : false, "parameters" : [ { "name" : "networks-or-ids", "type" : "item()", "occurrence" : "*", "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> a sequence of SEC Network objects, or their XBRL Component IDs.</div>" } ], "returns" : { "type" : "object()*", "description" : "the SEC Abstracts." }, "errors" : [  ] }, { "isDocumented" : true, "arity" : 1, "name" : "axes", "qname" : "sec-networks:axes", "signature" : "($networks-or-ids as item()*) as object()*", "description" : " <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">Returns all SEC Axes contained in the supplied SEC Networks.</p>\n <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">SEC Axes are XBRL dimensions.</p>\n", "summary" : "<p>  Returns all SEC Axes contained in the supplied SEC Networks.</p>", "annotation_str" : "", "annotations" : [  ], "updating" : false, "parameters" : [ { "name" : "networks-or-ids", "type" : "item()", "occurrence" : "*", "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> a sequence of SEC Network objects, or their XBRL Component IDs.</div>" } ], "returns" : { "type" : "object()*", "description" : "the SEC Axes." }, "errors" : [  ] }, { "isDocumented" : true, "arity" : 1, "name" : "categories", "qname" : "sec-networks:categories", "signature" : "($networks-or-ids) as string*", "description" : " <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">Return the categories of the supplied SEC networks (Statement, Disclosure, Document or Schedule).</p>\n", "summary" : "<p>  Return the categories of the supplied SEC networks (Statement, Disclosure, Document or Schedule).</p>", "annotation_str" : "", "annotations" : [  ], "updating" : false, "parameters" : [ { "name" : "networks-or-ids", "type" : null, "occurrence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> a sequence of SEC Network objects, or their XBRL Component IDs.</div>" } ], "returns" : { "type" : "string*", "description" : "the category of each network." }, "errors" : [  ] }, { "isDocumented" : true, "arity" : 1, "name" : "concepts", "qname" : "sec-networks:concepts", "signature" : "($networks-or-ids as item()*) as object()*", "description" : " <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">Returns all SEC Concepts contained in the supplied SEC Networks.</p>\n <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">SEC Concepts are XBRL concrete primary items that may or may not be associated\n with a hypercube.</p>\n", "summary" : "<p>  Returns all SEC Concepts contained in the supplied SEC Networks.</p>", "annotation_str" : "", "annotations" : [  ], "updating" : false, "parameters" : [ { "name" : "networks-or-ids", "type" : "item()", "occurrence" : "*", "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> a sequence of SEC Network objects, or their XBRL Component IDs.</div>" } ], "returns" : { "type" : "object()*", "description" : "the SEC Concepts." }, "errors" : [  ] }, { "isDocumented" : true, "arity" : 1, "name" : "disclosures", "qname" : "sec-networks:disclosures", "signature" : "($networks-or-ids as item()*) as string+", "description" : " <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">Returns the disclosures of the suplied networks.</p>\n", "summary" : "<p>  Returns the disclosures of the suplied networks.</p>", "annotation_str" : "", "annotations" : [  ], "updating" : false, "parameters" : [ { "name" : "networks-or-ids", "type" : "item()", "occurrence" : "*", "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> a sequence of SEC Network objects, or their XBRL Component IDs.</div>" } ], "returns" : { "type" : "string+", "description" : "the disclosure names, or \"UncategorizedInformation\" if none." }, "errors" : [  ] }, { "isDocumented" : true, "arity" : 1, "name" : "fact-tables", "qname" : "sec-networks:fact-tables", "signature" : "($networks-or-ids as item()*) as array()", "description" : " <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">Retrieves all facts belonging to the SEC Network.</p>\n", "summary" : "<p>  Retrieves all facts belonging to the SEC Network.</p>", "annotation_str" : "", "annotations" : [  ], "updating" : false, "parameters" : [ { "name" : "networks-or-ids", "type" : "item()", "occurrence" : "*", "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> a sequence of SEC Network objects, or their XBRL Component IDs.</div>" } ], "returns" : { "type" : "array()", "description" : "a array populated with fact values." }, "errors" : [  ] }, { "isDocumented" : true, "arity" : 2, "name" : "fact-tables", "qname" : "sec-networks:fact-tables", "signature" : "($networks-or-ids as item()*, $options as object()?) as array()", "description" : " <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">Retrieves all facts belonging to the SEC Network.</p>\n", "summary" : "<p>  Retrieves all facts belonging to the SEC Network.</p>", "annotation_str" : "", "annotations" : [  ], "updating" : false, "parameters" : [ { "name" : "networks-or-ids", "type" : "item()", "occurrence" : "*", "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> a sequence of SEC Network objects, or their XBRL Component IDs.</div>" }, { "name" : "options", "type" : "object()", "occurrence" : "?", "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> <a href=\"core#standard_options\">standard SEC BizQL options</a>.</div>" } ], "returns" : { "type" : "array()", "description" : "a array of arrays filled with fact values." }, "errors" : [  ] }, { "isDocumented" : true, "arity" : 1, "name" : "facts", "qname" : "sec-networks:facts", "signature" : "($networks-or-ids as item()*) as object()*", "description" : " <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">Retrieves all facts belonging to the SEC Network.</p>\n", "summary" : "<p>  Retrieves all facts belonging to the SEC Network.</p>", "annotation_str" : "", "annotations" : [  ], "updating" : false, "parameters" : [ { "name" : "networks-or-ids", "type" : "item()", "occurrence" : "*", "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> a sequence of SEC Network objects, or their XBRL Component IDs.</div>" } ], "returns" : { "type" : "object()*", "description" : "a sequence of facts." }, "errors" : [  ] }, { "isDocumented" : true, "arity" : 2, "name" : "facts", "qname" : "sec-networks:facts", "signature" : "($networks-or-ids as item()*, $options as object()?) as object()*", "description" : " <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">Retrieves all facts belonging to the SEC Network.</p>\n", "summary" : "<p>  Retrieves all facts belonging to the SEC Network.</p>", "annotation_str" : "", "annotations" : [  ], "updating" : false, "parameters" : [ { "name" : "networks-or-ids", "type" : "item()", "occurrence" : "*", "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> a sequence of SEC Network objects, or their XBRL Component IDs.</div>" }, { "name" : "options", "type" : "object()", "occurrence" : "?", "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> <a href=\"core#standard_options\">standard SEC BizQL options</a>.</div>" } ], "returns" : { "type" : "object()*", "description" : "a sequence of facts." }, "errors" : [  ] }, { "isDocumented" : true, "arity" : 1, "name" : "line-items-report-elements", "qname" : "sec-networks:line-items-report-elements", "signature" : "($networks-or-ids as item()*) as object()*", "description" : " <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">Returns all SEC LineItems report elements contained in the supplied SEC Networks.</p>\n <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">This is not to be confused with the \"line items\" terminology, which includes all\n SEC Abstracts and SEC Concepts.</p>\n <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">SEC LineItems report elements are XBRL abstract primary items that are top-level in their\n association with an XBRL hypercube (source of an all relation).</p>\n", "summary" : "<p>  Returns all SEC LineItems report elements contained in the supplied SEC Networks.</p>", "annotation_str" : "", "annotations" : [  ], "updating" : false, "parameters" : [ { "name" : "networks-or-ids", "type" : "item()", "occurrence" : "*", "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> a sequence of SEC Network objects, or their XBRL Component IDs.</div>" } ], "returns" : { "type" : "object()*", "description" : "the SEC LineItems report elements." }, "errors" : [  ] }, { "isDocumented" : true, "arity" : 1, "name" : "line-items", "qname" : "sec-networks:line-items", "signature" : "($networks-or-ids as item()*) as object()*", "description" : " <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">Returns all SEC Line Items (Concepts and Abstracts) contained in the\n supplied SEC Networks. Not to be confused with the LineItems report element.</p>\n", "summary" : "<p>  Returns all SEC Line Items (Concepts and Abstracts) contained in the\n supplied SEC Networks.</p>", "annotation_str" : "", "annotations" : [  ], "updating" : false, "parameters" : [ { "name" : "networks-or-ids", "type" : "item()", "occurrence" : "*", "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> a sequence of SEC Network objects, or their XBRL Component IDs.</div>" } ], "returns" : { "type" : "object()*", "description" : "the SEC Line Items." }, "errors" : [  ] }, { "isDocumented" : true, "arity" : 1, "name" : "members", "qname" : "sec-networks:members", "signature" : "($networks-or-ids as item()*) as object()*", "description" : " <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">Returns all SEC Members contained in the supplied SEC Networks.</p>\n <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">SEC Members are XBRL members that are in the transitive closure of SEC Axes\n via the dimension-domain and domain-member relations.</p>\n", "summary" : "<p>  Returns all SEC Members contained in the supplied SEC Networks.</p>", "annotation_str" : "", "annotations" : [  ], "updating" : false, "parameters" : [ { "name" : "networks-or-ids", "type" : "item()", "occurrence" : "*", "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> a sequence of SEC Network objects, or their XBRL Component IDs.</div>" } ], "returns" : { "type" : "object()*", "description" : "the SEC Members." }, "errors" : [  ] }, { "isDocumented" : true, "arity" : 1, "name" : "model-structures", "qname" : "sec-networks:model-structures", "signature" : "($networks-or-ids as item()*) as object()*", "description" : " <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">Computes the model structure of the supplied SEC Network, which is a hierarchy\n of SEC Report Elements (Tables, Axes, Members, LineItems, Abstracts, Concepts).</p>\n", "summary" : "<p>  Computes the model structure of the supplied SEC Network, which is a hierarchy\n of SEC Report Elements (Tables, Axes, Members, LineItems, Abstracts, Concepts).</p>", "annotation_str" : "", "annotations" : [  ], "updating" : false, "parameters" : [ { "name" : "networks-or-ids", "type" : "item()", "occurrence" : "*", "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> a sequence of SEC Network objects, or their XBRL Component IDs.</div>" } ], "returns" : { "type" : "object()*", "description" : "the model structures of these SEC Networks." }, "errors" : [  ] }, { "isDocumented" : true, "arity" : 1, "name" : "networks-for-disclosures", "qname" : "sec-networks:networks-for-disclosures", "signature" : "($disclosures as string*) as object()*", "description" : " <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">Retrieves all SEC Networks that bear the supplied disclosures.</p>\n", "summary" : "<p>  Retrieves all SEC Networks that bear the supplied disclosures.</p>", "annotation_str" : "", "annotations" : [  ], "updating" : false, "parameters" : [ { "name" : "disclosures", "type" : "string", "occurrence" : "*", "description" : "" } ], "returns" : { "type" : "object()*", "description" : "all models that match one of the disclosures." }, "errors" : [  ] }, { "isDocumented" : true, "arity" : 2, "name" : "networks-for-filings-and-categories", "qname" : "sec-networks:networks-for-filings-and-categories", "signature" : "($archive-or-ids as item()*, $categories as string*) as object()*", "description" : " <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">Retrieves all models that belong to the archives given as first\n parameter and that match the supplied category.</p>\n <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">A category can be any of \"Statement\", \"Disclosure\", \"Document\",\n \"Schedule\", or \"Unknown\".</p>\n", "summary" : "<p>  Retrieves all models that belong to the archives given as first\n parameter and that match the supplied category.</p>", "annotation_str" : "", "annotations" : [  ], "updating" : false, "parameters" : [ { "name" : "archive-or-ids", "type" : "item()", "occurrence" : "*", "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> an arbitrary number of archive identifiers (AIDs) or archive objects.</div>" }, { "name" : "categories", "type" : "string", "occurrence" : "*", "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> a list of categories.</div>" } ], "returns" : { "type" : "object()*", "description" : "all said models" }, "errors" : [  ] }, { "isDocumented" : true, "arity" : 2, "name" : "networks-for-filings-and-disclosures", "qname" : "sec-networks:networks-for-filings-and-disclosures", "signature" : "($archive-or-ids as item()*, $disclosures as string*) as object()*", "description" : " <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">Retrieves all models that belong to the archives given as first\n parameter and that match the supplied disclosures.</p>\n", "summary" : "<p>  Retrieves all models that belong to the archives given as first\n parameter and that match the supplied disclosures.</p>", "annotation_str" : "", "annotations" : [  ], "updating" : false, "parameters" : [ { "name" : "archive-or-ids", "type" : "item()", "occurrence" : "*", "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> an arbitrary number of archive identifiers (AIDs) or archive objects.</div>" }, { "name" : "disclosures", "type" : "string", "occurrence" : "*", "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> a list of disclosures.</div>" } ], "returns" : { "type" : "object()*", "description" : "all models in the archives and that match one of the disclosures." }, "errors" : [  ] }, { "isDocumented" : true, "arity" : 1, "name" : "networks-for-filings", "qname" : "sec-networks:networks-for-filings", "signature" : "($archives-or-ids as item()*) as object()*", "description" : " <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">Retrieves all SEC Networks in a given filing.</p>\n", "summary" : "<p>  Retrieves all SEC Networks in a given filing.</p>", "annotation_str" : "", "annotations" : [  ], "updating" : false, "parameters" : [ { "name" : "archives-or-ids", "type" : "item()", "occurrence" : "*", "description" : "" } ], "returns" : { "type" : "object()*", "description" : "all networks in the supplied filings." }, "errors" : [  ] }, { "isDocumented" : true, "arity" : 1, "name" : "num-abstracts", "qname" : "sec-networks:num-abstracts", "signature" : "($networks-or-ids as item()*) as integer*", "description" : " Return the number of (distinct) SEC Abstracts in each of the given components.\n", "summary" : "<p> Return the number of (distinct) SEC Abstracts in each of the given components.</p>", "annotation_str" : "", "annotations" : [  ], "updating" : false, "parameters" : [ { "name" : "networks-or-ids", "type" : "item()", "occurrence" : "*", "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> list of components or IDs</div>" } ], "returns" : { "type" : "integer*", "description" : "the said number of abstracts" }, "errors" : [  ] }, { "isDocumented" : true, "arity" : 1, "name" : "num-axes", "qname" : "sec-networks:num-axes", "signature" : "($networks-or-ids as item()*) as integer*", "description" : " Return the number of (distinct) SEC Axes in each of the given components.\n", "summary" : "<p> Return the number of (distinct) SEC Axes in each of the given components.</p>", "annotation_str" : "", "annotations" : [  ], "updating" : false, "parameters" : [ { "name" : "networks-or-ids", "type" : "item()", "occurrence" : "*", "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> list of components or IDs</div>" } ], "returns" : { "type" : "integer*", "description" : "the said number of axes" }, "errors" : [  ] }, { "isDocumented" : true, "arity" : 1, "name" : "num-concepts", "qname" : "sec-networks:num-concepts", "signature" : "($networks-or-ids as item()*) as integer*", "description" : " Return the number of (distinct) SEC Concepts in each of the given components.\n", "summary" : "<p> Return the number of (distinct) SEC Concepts in each of the given components.</p>", "annotation_str" : "", "annotations" : [  ], "updating" : false, "parameters" : [ { "name" : "networks-or-ids", "type" : "item()", "occurrence" : "*", "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> list of components or IDs</div>" } ], "returns" : { "type" : "integer*", "description" : "the said number of concepts" }, "errors" : [  ] }, { "isDocumented" : true, "arity" : 1, "name" : "num-line-items", "qname" : "sec-networks:num-line-items", "signature" : "($networks-or-ids as item()*) as integer*", "description" : " Return the number of (distinct) SEC LineItems report elements in each of the given components.\n", "summary" : "<p> Return the number of (distinct) SEC LineItems report elements in each of the given components.</p>", "annotation_str" : "", "annotations" : [  ], "updating" : false, "parameters" : [ { "name" : "networks-or-ids", "type" : "item()", "occurrence" : "*", "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> list of components or IDs</div>" } ], "returns" : { "type" : "integer*", "description" : "the said number of line items" }, "errors" : [  ] }, { "isDocumented" : true, "arity" : 1, "name" : "num-members", "qname" : "sec-networks:num-members", "signature" : "($networks-or-ids as item()*) as integer*", "description" : " Return the number of (distinct) SEC Members in each of the given components.\n", "summary" : "<p> Return the number of (distinct) SEC Members in each of the given components.</p>", "annotation_str" : "", "annotations" : [  ], "updating" : false, "parameters" : [ { "name" : "networks-or-ids", "type" : "item()", "occurrence" : "*", "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> list of components or IDs</div>" } ], "returns" : { "type" : "integer*", "description" : "the said number of members" }, "errors" : [  ] }, { "isDocumented" : true, "arity" : 1, "name" : "num-report-elements", "qname" : "sec-networks:num-report-elements", "signature" : "($networks-or-ids as item()*) as integer*", "description" : " Return the number of (distinct) SEC report elements in each of the given components.\n", "summary" : "<p> Return the number of (distinct) SEC report elements in each of the given components.</p>", "annotation_str" : "", "annotations" : [  ], "updating" : false, "parameters" : [ { "name" : "networks-or-ids", "type" : "item()", "occurrence" : "*", "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> list of components or IDs</div>" } ], "returns" : { "type" : "integer*", "description" : "the said number of report elements" }, "errors" : [  ] }, { "isDocumented" : true, "arity" : 1, "name" : "num-tables", "qname" : "sec-networks:num-tables", "signature" : "($networks-or-ids as item()*) as integer*", "description" : " Return the number of SEC Tables in each of the given components.\n", "summary" : "<p> Return the number of SEC Tables in each of the given components.</p>", "annotation_str" : "", "annotations" : [  ], "updating" : false, "parameters" : [ { "name" : "networks-or-ids", "type" : "item()", "occurrence" : "*", "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> list of components or IDs</div>" } ], "returns" : { "type" : "integer*", "description" : "the said number of tables" }, "errors" : [  ] }, { "isDocumented" : true, "arity" : 1, "name" : "populated-model-structures", "qname" : "sec-networks:populated-model-structures", "signature" : "($networks-or-ids as item()*) as object()*", "description" : " <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">Retrieves all facts belonging to the SEC Networks and populates the model structures.</p>\n", "summary" : "<p>  Retrieves all facts belonging to the SEC Networks and populates the model structures.</p>", "annotation_str" : "", "annotations" : [  ], "updating" : false, "parameters" : [ { "name" : "networks-or-ids", "type" : "item()", "occurrence" : "*", "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> a sequence of SEC Network objects, or their XBRL Component IDs.</div>" } ], "returns" : { "type" : "object()*", "description" : "the populated model structures (Facts array fields)." }, "errors" : [  ] }, { "isDocumented" : true, "arity" : 2, "name" : "populated-model-structures", "qname" : "sec-networks:populated-model-structures", "signature" : "($networks-or-ids as item()*, $options as object()?) as object()*", "description" : " <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">Retrieves all facts belonging to the SEC Networks and populates the model structures.</p>\n", "summary" : "<p>  Retrieves all facts belonging to the SEC Networks and populates the model structures.</p>", "annotation_str" : "", "annotations" : [  ], "updating" : false, "parameters" : [ { "name" : "networks-or-ids", "type" : "item()", "occurrence" : "*", "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> a sequence of SEC Network objects, or their XBRL Component IDs.</div>" }, { "name" : "options", "type" : "object()", "occurrence" : "?", "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> <a href=\"core#standard_options\">standard SEC BizQL options</a>.</div>" } ], "returns" : { "type" : "object()*", "description" : "the populated model structures (Facts array fields)." }, "errors" : [  ] }, { "isDocumented" : true, "arity" : 1, "name" : "sub-categories", "qname" : "sec-networks:sub-categories", "signature" : "($networks-or-ids) as string*", "description" : " <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">Return the sub-categories of the supplied SEC networks (Detail, TextBlockLevel4, TextBLockLevel1to3).</p>\n", "summary" : "<p>  Return the sub-categories of the supplied SEC networks (Detail, TextBlockLevel4, TextBLockLevel1to3).</p>", "annotation_str" : "", "annotations" : [  ], "updating" : false, "parameters" : [ { "name" : "networks-or-ids", "type" : null, "occurrence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> a sequence of SEC Network objects, or their XBRL Component IDs.</div>" } ], "returns" : { "type" : "string*", "description" : "the sub-category of each network." }, "errors" : [  ] }, { "isDocumented" : true, "arity" : 1, "name" : "summaries", "qname" : "sec-networks:summaries", "signature" : "($networks-or-ids) as object()*", "description" : " <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">Return summary information for the supplied SEC networks.</p>\n", "summary" : "<p>  Return summary information for the supplied SEC networks.</p>", "annotation_str" : "", "annotations" : [  ], "updating" : false, "parameters" : [ { "name" : "networks-or-ids", "type" : null, "occurrence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> a sequence of SEC Network objects, or their XBRL Component IDs.</div>" } ], "returns" : { "type" : "object()*", "description" : "one object per network, containing a summary." }, "errors" : [  ] }, { "isDocumented" : true, "arity" : 1, "name" : "tables", "qname" : "sec-networks:tables", "signature" : "($networks-or-ids as item()*) as object()*", "description" : " <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">Returns all SEC Tables contained in the supplied SEC Networks.</p>\n <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">SEC Tables are XBRL hypercubes.</p>\n", "summary" : "<p>  Returns all SEC Tables contained in the supplied SEC Networks.</p>", "annotation_str" : "", "annotations" : [  ], "updating" : false, "parameters" : [ { "name" : "networks-or-ids", "type" : "item()", "occurrence" : "*", "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> a sequence of SEC Network objects, or their XBRL Component IDs.</div>" } ], "returns" : { "type" : "object()*", "description" : "the SEC Tables." }, "errors" : [  ] }, { "isDocumented" : true, "arity" : 2, "name" : "tables", "qname" : "sec-networks:tables", "signature" : "($networks-or-ids as item()*, $options as object()?) as object()*", "description" : " <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">Returns all SEC Tables contained in the supplied SEC Networks.</p>\n <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">SEC Tables are XBRL hypercubes.</p>\n", "summary" : "<p>  Returns all SEC Tables contained in the supplied SEC Networks.</p>", "annotation_str" : "", "annotations" : [  ], "updating" : false, "parameters" : [ { "name" : "networks-or-ids", "type" : "item()", "occurrence" : "*", "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> a sequence of SEC Network objects, or their XBRL Component IDs.</div>" }, { "name" : "options", "type" : "object()", "occurrence" : "?", "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> <a href=\"core#standard_options\">standard SEC BizQL options</a>.</div>" } ], "returns" : { "type" : "object()*", "description" : "the SEC Tables." }, "errors" : [  ] } ], "variables" : [ { "name" : "sec-networks:BALANCE_SHEET", "type" : "xs:string", "description" : " Disclosure for the balance sheet.\n" }, { "name" : "sec-networks:BALANCE_SHEET_PARENTHETICAL", "type" : "xs:string", "description" : " Disclosure for the parenthetical balance sheet.\n" }, { "name" : "sec-networks:INCOME_STATEMENT", "type" : "xs:string", "description" : " Disclosure for the income statement.\n" }, { "name" : "sec-networks:INCOME_STATEMENT_PARENTHETICAL", "type" : "xs:string", "description" : " Disclosure for the parenthetical income statement.\n" }, { "name" : "sec-networks:STATEMENT_OF_COMPREHENSIVE_INCOME", "type" : "xs:string", "description" : " Disclosure for the statement of comprehensive income.\n" }, { "name" : "sec-networks:CASH_FLOW_STATEMENT", "type" : "xs:string", "description" : " Disclosure for the cash flow statement.\n" }, { "name" : "sec-networks:CASH_FLOW_STATEMENT_PARENTHETICAL", "type" : "xs:string", "description" : " Disclosure for the parenthetical cash flow statement.\n" }, { "name" : "sec-networks:DEFAULT_COMPONENT", "type" : "xs:string", "description" : " Disclosure for the default component.\n" }, { "name" : "sec-networks:DOCUMENT_AND_ENTITY_INFO", "type" : "xs:string", "description" : " Disclosure for the document and entity information\n" } ] }, "http://www.28msec.com/modules/http/request" : { "ns" : "http://www.28msec.com/modules/http/request", "description" : " The Sausalito request module provides functions for accessing\n information contained in the current HTTP request. For example,\n the <tt xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">parameter-names</tt> function can be used to retrieve all\n the names of the parameters contained in a request.\n", "sees" : [  ], "authors" : [ "<xqdoc:author xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">28msec</xqdoc:author>" ], "version" : null, "encoding" : "utf-8", "namespaces" : [ { "uri" : "http://www.28msec.com/modules/http/request", "prefix" : "request" }, { "uri" : "http://www.zorba-xquery.com/modules/cryptography/hmac", "prefix" : "sec" }, { "uri" : "http://zorba.io/options/versioning", "prefix" : "ver" } ], "functions" : [ { "isDocumented" : true, "arity" : 0, "name" : "binary-content", "qname" : "request:binary-content", "signature" : "() as xs:base64Binary external", "description" : " <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">Returns the content of the request as base64Binary.</p>\n", "summary" : "<p>  Returns the content of the request as base64Binary.</p>", "annotation_str" : "", "annotations" : [  ], "updating" : false, "parameters" : [  ], "returns" : { "type" : "xs:base64Binary", "description" : "The content of the request as base64Binary." }, "errors" : [ "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">request:no-binary-content if the content contained in the body of the request cannot be treated as binary because it is a request with multipart or url-encoded content.</xqdoc:error>" ] }, { "isDocumented" : true, "arity" : 1, "name" : "binary-part", "qname" : "request:binary-part", "signature" : "($ref as xs:string) as xs:base64Binary external", "description" : " <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">Returns the value of a part as base64Binary.</p>\n <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">A part is identified by a reference that is the value of a\n <tt>src</tt> attribute returned by the <tt>request:parts</tt> function.</p>\n", "summary" : "<p>  Returns the value of a part as base64Binary.</p>", "annotation_str" : "", "annotations" : [  ], "updating" : false, "parameters" : [ { "name" : "ref", "type" : "xs:string", "occurrence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> the name of the part</div>" } ], "returns" : { "type" : "xs:base64Binary", "description" : "the value of the part as base64Binary" }, "errors" : [ "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">request:invalid-part if the part with the given name ($ref) does not exist</xqdoc:error>", "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">request:non-multipart if the current request does not contain multipart content</xqdoc:error>", "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">request:invalid-multipart if the multipart content is invalid (e.g. the boundary is missing)</xqdoc:error>" ] }, { "isDocumented" : true, "arity" : 0, "name" : "content-length", "qname" : "request:content-length", "signature" : "() as xs:integer? external", "description" : " <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">Returns the length of the content in bytes.</p>\n <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">The value returned corresponds to the value of the HTTP\n content-length header. The function returns an empty sequence\n if this header does not exist in the request or its value\n could not be converted to item of type xs:integer</p>.\n", "summary" : "<p>  Returns the length of the content in bytes.</p>", "annotation_str" : "", "annotations" : [  ], "updating" : false, "parameters" : [  ], "returns" : { "type" : "xs:integer?", "description" : "The content-length in bytes of the content sent with this request or the empty sequence if the content-length header does not exist in the request." }, "errors" : [  ] }, { "isDocumented" : true, "arity" : 0, "name" : "content-type", "qname" : "request:content-type", "signature" : "() as xs:string? external", "description" : " <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">Returns the content-type of the data sent with this request.</p>\n <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">Note that the content-type is only set for PUT and POST requests.</p>\n", "summary" : "<p>  Returns the content-type of the data sent with this request.</p>", "annotation_str" : "", "annotations" : [  ], "updating" : false, "parameters" : [  ], "returns" : { "type" : "xs:string?", "description" : "The content-type of the request if it is a PUT or POST request. Otherwise, it returns the empty sequence." }, "errors" : [  ] }, { "isDocumented" : true, "arity" : 0, "name" : "header-accept", "qname" : "request:header-accept", "signature" : "() as element(request:accept)*", "description" : " <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">Returns the values of the HTTP ACCEPT header.</p>\n <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">The data is returned as a sequence of elements with name\n <tt>request:accept</tt> as shown in the following example.</p>\n <code xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">\n  &lt;request:accept xmlns:request=\"http://www.28msec.com/modules/http/request\"&gt;\n    &lt;request:type&gt;text&lt;/request:type&gt;\n    &lt;request:subtype&gt;html&lt;/request:subtype&gt;\n    &lt;request:quality&gt;1&lt;/request:quality&gt;\n  &lt;/request:accept&gt;\n  &lt;request:accept xmlns=\"http://www.28msec.com/modules/http/request\"&gt;\n    &lt;request:type&gt;application&lt;/request:type&gt;\n    &lt;request:quality&gt;0.9&lt;/request:quality&gt;\n  &lt;/request:accept&gt;\n </code>\n", "summary" : "<p>  Returns the values of the HTTP ACCEPT header.</p>", "annotation_str" : "", "annotations" : [  ], "updating" : false, "parameters" : [  ], "returns" : { "type" : "element(request:accept)*", "description" : "The header values of the header ACCEPT or the empty sequence if the header is not contained in the request. The order of the returned elements reflects the order of the components in the header." }, "errors" : [  ] }, { "isDocumented" : true, "arity" : 0, "name" : "header-names", "qname" : "request:header-names", "signature" : "() as xs:string* external", "description" : " <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">Returns the names of all the HTTP headers in this request.</p>\n <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">Header fields are colon-separated name-value pairs, terminated\n by a carriage return (CR) and line feed (LF) character sequence. The\n names and values of each header are allowed to consist of US-ASCII\n characters only.</p>\n <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">The names of the headers are returned using upper-case letters.\n If a header with the same name is contained multiple times in a request,\n its name is only returned once. The order of the names in the resulting\n sequence does not reflect the order of the headers in the request. If\n a header does not have a value, it is as if the header does not exist\n in the request.</p>\n <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">Note that the header names user-agent and content-type are not\n returned by this function. They are returned by the corresponding\n functions of this module module\n (e.g. <a href=\"#user-agent-0\">user-agent</a>).</p>\n", "summary" : "<p>  Returns the names of all the HTTP headers in this request.</p>", "annotation_str" : "", "annotations" : [  ], "updating" : false, "parameters" : [  ], "returns" : { "type" : "xs:string*", "description" : "The names of the headers of this request or the empty sequence if no headers are contained in the request." }, "errors" : [  ] }, { "isDocumented" : true, "arity" : 1, "name" : "header-value", "qname" : "request:header-value", "signature" : "($name as xs:string) as xs:string? external", "description" : " <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">Returns the value of the HTTP header with the given name.</p>\n <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">Header fields are colon-separated name-value pairs, terminated\n by a carriage return (CR) and line feed (LF) character sequence. The\n names and values of each header are allowed to consist of US-ASCII\n characters only.</p>\n <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">Please note that header names are considered case-insensitive.\n Also note, that only one value is returned if multiple headers with the\n same names exist in the request. This value is a comma-separated list\n of the values of the headers in the order in which the headers appeared\n in the request.</p>\n <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">All headers having a name that starts with SAUSALITO_ are reserved\n and will not be returned by this function.</p>\n", "summary" : "<p>  Returns the value of the HTTP header with the given name.</p>", "annotation_str" : "", "annotations" : [  ], "updating" : false, "parameters" : [ { "name" : "name", "type" : "xs:string", "occurrence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> The header name for which the value should be returned.</div>" } ], "returns" : { "type" : "xs:string?", "description" : "The header value of the header with the <tt xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">$name</tt> argument or the empty sequence if no header with that name is contained in the request." }, "errors" : [  ] }, { "isDocumented" : true, "arity" : 0, "name" : "method-delete", "qname" : "request:method-delete", "signature" : "() as xs:boolean external", "description" : " Returns true if the HTTP method of this request is DELETE.\n", "summary" : "<p> Returns true if the HTTP method of this request is DELETE.</p>", "annotation_str" : "", "annotations" : [  ], "updating" : false, "parameters" : [  ], "returns" : { "type" : "xs:boolean", "description" : "true if the HTTP method of this request is DELETE, false otherwise." }, "errors" : [  ] }, { "isDocumented" : true, "arity" : 0, "name" : "method-get", "qname" : "request:method-get", "signature" : "() as xs:boolean external", "description" : " Returns true if the HTTP method of this request is GET.\n", "summary" : "<p> Returns true if the HTTP method of this request is GET.</p>", "annotation_str" : "", "annotations" : [  ], "updating" : false, "parameters" : [  ], "returns" : { "type" : "xs:boolean", "description" : "true if the HTTP method of this request is GET, false otherwise." }, "errors" : [  ] }, { "isDocumented" : true, "arity" : 0, "name" : "method-head", "qname" : "request:method-head", "signature" : "() as xs:boolean external", "description" : " Returns true if the HTTP method of this request is HEAD.\n", "summary" : "<p> Returns true if the HTTP method of this request is HEAD.</p>", "annotation_str" : "", "annotations" : [  ], "updating" : false, "parameters" : [  ], "returns" : { "type" : "xs:boolean", "description" : "true if the HTTP method of this request is HEAD, false otherwise." }, "errors" : [  ] }, { "isDocumented" : true, "arity" : 0, "name" : "method-options", "qname" : "request:method-options", "signature" : "() as xs:boolean external", "description" : " Returns true if the HTTP method of this request is OPTION.\n", "summary" : "<p> Returns true if the HTTP method of this request is OPTION.</p>", "annotation_str" : "", "annotations" : [  ], "updating" : false, "parameters" : [  ], "returns" : { "type" : "xs:boolean", "description" : "true if the HTTP method of this request is OPTION, false otherwise." }, "errors" : [  ] }, { "isDocumented" : true, "arity" : 0, "name" : "method-patch", "qname" : "request:method-patch", "signature" : "() as xs:boolean external", "description" : " Returns true if the HTTP method of this request is PATCH.\n", "summary" : "<p> Returns true if the HTTP method of this request is PATCH.</p>", "annotation_str" : "", "annotations" : [  ], "updating" : false, "parameters" : [  ], "returns" : { "type" : "xs:boolean", "description" : "true if the HTTP method of this request is PATCH, false otherwise." }, "errors" : [  ] }, { "isDocumented" : true, "arity" : 0, "name" : "method-post", "qname" : "request:method-post", "signature" : "() as xs:boolean external", "description" : " Returns true if the HTTP method of this request is POST.\n", "summary" : "<p> Returns true if the HTTP method of this request is POST.</p>", "annotation_str" : "", "annotations" : [  ], "updating" : false, "parameters" : [  ], "returns" : { "type" : "xs:boolean", "description" : "true if the HTTP method of this request is POST, false otherwise." }, "errors" : [  ] }, { "isDocumented" : true, "arity" : 0, "name" : "method-put", "qname" : "request:method-put", "signature" : "() as xs:boolean external", "description" : " Returns true if the HTTP method of this request is PUT.\n", "summary" : "<p> Returns true if the HTTP method of this request is PUT.</p>", "annotation_str" : "", "annotations" : [  ], "updating" : false, "parameters" : [  ], "returns" : { "type" : "xs:boolean", "description" : "true if the HTTP method of this request is PUT, false otherwise." }, "errors" : [  ] }, { "isDocumented" : true, "arity" : 0, "name" : "method", "qname" : "request:method", "signature" : "() as xs:string external", "description" : " <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">Returns the name of the HTTP method used to make this request.</p>\n", "summary" : "<p>  Returns the name of the HTTP method used to make this request.</p>", "annotation_str" : "", "annotations" : [  ], "updating" : false, "parameters" : [  ], "returns" : { "type" : "xs:string", "description" : "The request method used to make this request (i.e. GET, POST, PUT, DELETE or HEAD)." }, "errors" : [  ] }, { "isDocumented" : true, "arity" : 0, "name" : "parameter-names", "qname" : "request:parameter-names", "signature" : "() as xs:string*", "description" : " <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">Returns the names of the parameters contained in the current request.</p>\n <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">Parameters are name-value pairs contained in the query string of the URL\n used to make this request. As defined in RFC 1738, the query string of a\n URL starts with a \"?\" character and ends with the character (if any).\n Additionally, such name-value pairs may be part of the request's body if\n it is a PUT or POST request and the content-type of the request is\n \"application/x-www-form-urlencoded\". Name-value pairs are separated\n using either the \"&amp;\" or the \";\" character.</p>\n <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">In general, the names and the values  are precent-encoded. This function\n does the decoding of the parameters, i.e. it returns the values being\n not percent-encoded.</p>\n <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">Also, the names of each parameter (after being precent-decoded) are\n treated as UTF-8. Please see the <tt>http:parameter-names#1</tt> function\n for retrieving parameter names submitted using a encoding other than UTF-8.\n </p>\n", "summary" : "<p>  Returns the names of the parameters contained in the current request.</p>", "annotation_str" : "", "annotations" : [  ], "updating" : false, "parameters" : [  ], "returns" : { "type" : "xs:string*", "description" : "The names of all parameters in this request. The empty sequence is returned if there are none." }, "errors" : [  ] }, { "isDocumented" : true, "arity" : 1, "name" : "parameter-names", "qname" : "request:parameter-names", "signature" : "($encoding as xs:string) as xs:string* external", "description" : " <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">Returns the names of the parameters contained in the current request.</p>\n <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">This function is similar to the <tt>request:parameter-names#0</tt> function.\n However, the names are treated (after precent-decoding) using the\n given encoding supplied as parameter. For example, parameters might\n be encoded using the ISO-8859-1 encoding.</p>\n", "summary" : "<p>  Returns the names of the parameters contained in the current request.</p>", "annotation_str" : "", "annotations" : [  ], "updating" : false, "parameters" : [ { "name" : "encoding", "type" : "xs:string", "occurrence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> The encoding of the parameters in the request (e.g. ISO-8859-1).</div>" } ], "returns" : { "type" : "xs:string*", "description" : "The names of all parameters in this request. The empty sequence is returned if there are none." }, "errors" : [ "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">request:invalid-encoding if the given encoding is invalid or not supported.</xqdoc:error>" ] }, { "isDocumented" : true, "arity" : 1, "name" : "parameter-values", "qname" : "request:parameter-values", "signature" : "($name as xs:string) as xs:string*", "description" : " <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">Returns a sequence of parameter values for the given parameter name\n which are contained in the URL's query string or the body of a POST or PUT\n request.</p>\n <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">Parameters are name-value pairs contained in the query string of the URL\n used to make this request. As defined in RFC 1738, the query string of a\n URL starts with a \"?\" character and ends with the character (if any).\n Additionally, such name-value pairs may be part of the request's body if\n it is a PUT or POST request and the content-type of the request is\n \"application/x-www-form-urlencoded\". Name-value pairs are separated\n using either the \"&amp;\" or the \";\" character.</p>\n <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">In general, the names and the values  are precent-encoded. This function\n does the decoding of the parameters, i.e. it returns the values being\n not percent-encoded.</p>\n <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">Also, the names and the values of each parameter (after being precent-decoded)\n are treated as UTF-8. Please see the <tt>http:parameter-values#3</tt> function\n for retrieving parameters submitted using a encoding other than UTF-8.</p>\n <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">This function returns the empty-sequence if no parameter with the\n given name exists in this request. If you want the function to return\n a default value other than the empty sequence, use the\n <tt>http:parameter-values#2</tt> function.</p>\n <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">A URL could contain the following query string:\n <tt>name1=value1&amp;name2=value2;name1=value3&amp;name3</tt>.\n <tt>name1=value1&amp;name2=value2&amp;name1=value3&amp;name3</tt>.\n The name value pairs in this query string are\n <ul>\n   <li> name: <tt>name1</tt>; values: <tt>value1</tt> and <tt>value3</tt></li>\n   <li> name: <tt>name2</tt>; value: <tt>value2</tt></li>\n   <li> name: <tt>name3</tt>; value: <tt/></li>\n </ul>\n </p>\n", "summary" : "<p>  Returns a sequence of parameter values for the given parameter name\n which are contained in the URL's query string or the body of a POST or PUT\n request.</p>", "annotation_str" : "", "annotations" : [  ], "updating" : false, "parameters" : [ { "name" : "name", "type" : "xs:string", "occurrence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> The name of the parameter whose value(s) should be returned.</div>" } ], "returns" : { "type" : "xs:string*", "description" : "A sequence of values for the parameter with the given name. The empty sequence is returned if no parameter exists with the given name." }, "errors" : [  ] }, { "isDocumented" : true, "arity" : 2, "name" : "parameter-values", "qname" : "request:parameter-values", "signature" : "($name as xs:string, $default-values as xs:string*) as xs:string*", "description" : " <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">Returns a sequence of parameter values for the given parameter name\n which are contained in the URL's query string or the body of a POST or PUT\n request.</p>\n <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">This function is similar to the <tt>request:parameter-values#1</tt> function.\n However, instead of returning the empty-sequence as a default value it returns\n the given default-values sequence if no parameter with the given name is found\n in this request.</p>\n", "summary" : "<p>  Returns a sequence of parameter values for the given parameter name\n which are contained in the URL's query string or the body of a POST or PUT\n request.</p>", "annotation_str" : "", "annotations" : [  ], "updating" : false, "parameters" : [ { "name" : "name", "type" : "xs:string", "occurrence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> The name of the parameter whose value(s) should be returned.</div>" }, { "name" : "default-values", "type" : "xs:string", "occurrence" : "*", "description" : "" } ], "returns" : { "type" : "xs:string*", "description" : "A sequence of values for the parameter with the given name. The sequence given as $default-values parameter is returned if no parameter exists with the given name." }, "errors" : [  ] }, { "isDocumented" : true, "arity" : 3, "name" : "parameter-values", "qname" : "request:parameter-values", "signature" : "($name as xs:string, $default-values as xs:string*, $encoding as xs:string) as xs:string* external", "description" : " <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">Returns a sequence of parameter values for the given parameter name\n which are contained in the URL's query string or the body of a POST or PUT\n request.</p>\n <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">This function is similar to the <tt>request:parameter-values#2</tt> function.\n However, the names and values are treated (after precent-decoding) using the\n given encoding supplied as third parameter. For example, parameters might\n be encoded using the ISO-8859-1 encoding.</p>\n", "summary" : "<p>  Returns a sequence of parameter values for the given parameter name\n which are contained in the URL's query string or the body of a POST or PUT\n request.</p>", "annotation_str" : "", "annotations" : [  ], "updating" : false, "parameters" : [ { "name" : "name", "type" : "xs:string", "occurrence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> The name of the parameter whose value(s) should be returned.</div>" }, { "name" : "default-values", "type" : "xs:string", "occurrence" : "*", "description" : "" }, { "name" : "encoding", "type" : "xs:string", "occurrence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> The encoding of the parameters in the request (e.g. ISO-8859-1)</div>" } ], "returns" : { "type" : "xs:string*", "description" : "A sequence of values for the parameter with the given name. The sequence given as $default-values parameter is returned if no parameter exists with the given name." }, "errors" : [ "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">request:invalid-encoding if the given encoding is invalid or not supported.</xqdoc:error>" ] }, { "isDocumented" : true, "arity" : 0, "name" : "parts", "qname" : "request:parts", "signature" : "() as element(request:multipart) external", "description" : " <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">Returns the metadata of all parts contained in a multipart request.</p>\n <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">The data is returned as an element with name <tt>request:mulitpart</tt>\n as shown in the following example.</p>\n <code xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">\n  &lt;multipart xmlns=\"http://www.28msec.com/modules/http/request\"\n    media-type=\"multipart/...; boundary=...\"&gt;\n    &lt;header name=\"Content-Disposition\" value='form-data; filename=\"...\"'/&gt;\n    &lt;header name=\"Content-Type\" value=\"application/octet-stream\"/&gt;\n    &lt;body filename=\"...\" src=\"...\"/&gt;\n    &lt;header name=\"Content-Disposition\" value='form-data; filename=\"...\"'/&gt;\n    &lt;header name=\"Content-Type\" value=\"application/octet-stream\"/&gt;\n    &lt;body filename=\"...\" src=\"...\"/&gt;\n  &lt;/multipart&gt;\n </code>\n <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">The <tt>media-type</tt> is the type of the content as given in the\n request (i.e. it's value is equal to the value returned by\n <tt>request:header-values(\"Content-Type\")</tt>).</p>\n <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">Within the <tt>multipart</tt> element is a sequence of\n (<tt>header</tt>*,<tt>body</tt>) elements. Each such group corresponds to\n one part. Every <tt>header</tt> belongs to a header for this part and the\n <tt>body</tt> refers to the value of a part. The actual value of a part\n can be retrieved by passing the value of the <tt>src</tt> attribute of\n the <tt>body</tt> to the <tt>request:text-part</tt> or\n <tt>request:binary-part</tt> functions. The other attributes of the\n <tt>body</tt> element represent a parameter of the Content-Disposition\n header as described in RFC 2183 (e.g. filename, name, creation-date).</p>\n <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">Please note that recursive multipart content is not supported.</p>\n", "summary" : "<p>  Returns the metadata of all parts contained in a multipart request.</p>", "annotation_str" : "", "annotations" : [  ], "updating" : false, "parameters" : [  ], "returns" : { "type" : "element(request:multipart)", "description" : "a multipart element representing the meta data of the multipart content" }, "errors" : [ "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">request:non-multipart if the current request does not contain multipart content</xqdoc:error>", "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">request:invalid-multipart if the multipart content is invalid (e.g. the boundary is missing)</xqdoc:error>" ] }, { "isDocumented" : true, "arity" : 0, "name" : "path", "qname" : "request:path", "signature" : "() as xs:string", "description" : " Return the path component of the request URI. The path starts after the\n host and ends before the query string starts.\n", "summary" : "<p> Return the path component of the request URI.</p>", "annotation_str" : "", "annotations" : [  ], "updating" : false, "parameters" : [  ], "returns" : { "type" : "xs:string", "description" : "The path component of the request URI" }, "errors" : [  ] }, { "isDocumented" : true, "arity" : 0, "name" : "query-string", "qname" : "request:query-string", "signature" : "() as xs:string external", "description" : " <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">Returns the query string that was used to make this request.</p>\n <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">The query string contains the part of the request URL that\n starts with the '?' character to the end or the starting of the\n fragment (i.e. the '#' character).</p>\n", "summary" : "<p>  Returns the query string that was used to make this request.</p>", "annotation_str" : "", "annotations" : [  ], "updating" : false, "parameters" : [  ], "returns" : { "type" : "xs:string", "description" : "The query string part of the request's URL" }, "errors" : [  ] }, { "isDocumented" : true, "arity" : 0, "name" : "remote-addr", "qname" : "request:remote-addr", "signature" : "() as xs:string external", "description" : " <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">Returns the IP address of the client to which this request\n is connected.</p>\n", "summary" : "<p>  Returns the IP address of the client to which this request\n is connected.</p>", "annotation_str" : "", "annotations" : [  ], "updating" : false, "parameters" : [  ], "returns" : { "type" : "xs:string", "description" : "The IP address on the client side to which this request is connected." }, "errors" : [  ] }, { "isDocumented" : true, "arity" : 0, "name" : "remote-port", "qname" : "request:remote-port", "signature" : "() as xs:int external", "description" : " <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">Returns the port of the client to which this request is connected.</p>\n", "summary" : "<p>  Returns the port of the client to which this request is connected.</p>", "annotation_str" : "", "annotations" : [  ], "updating" : false, "parameters" : [  ], "returns" : { "type" : "xs:int", "description" : "The port on the client side to which this request is connected." }, "errors" : [  ] }, { "isDocumented" : true, "arity" : 0, "name" : "server-name", "qname" : "request:server-name", "signature" : "() as xs:string external", "description" : " <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">Returns the server name of the server running the application.</p>\n <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">The web server's hostname or IP address.</p>\n", "summary" : "<p>  Returns the server name of the server running the application.</p>", "annotation_str" : "", "annotations" : [  ], "updating" : false, "parameters" : [  ], "returns" : { "type" : "xs:string", "description" : "The name of the server that runs the application accepting this request." }, "errors" : [  ] }, { "isDocumented" : true, "arity" : 0, "name" : "server-port", "qname" : "request:server-port", "signature" : "() as xs:int external", "description" : " <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">Returns the sever port to which the client making the current request\n is connected.</p>\n", "summary" : "<p>  Returns the sever port to which the client making the current request\n is connected.</p>", "annotation_str" : "", "annotations" : [  ], "updating" : false, "parameters" : [  ], "returns" : { "type" : "xs:int", "description" : "The server port to which the client is connected." }, "errors" : [  ] }, { "isDocumented" : true, "arity" : 0, "name" : "text-content", "qname" : "request:text-content", "signature" : "() as xs:string external", "description" : " <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">Returns the content of the request as string.</p>\n <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">The function returns the content of the request only\n if the content-type refers to a type that can be treated\n as text (e.g. text/* or application/xml). The function raises\n an error if the content cannot be treated as text.</p>\n <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">The text content is interpreted using the encoding/charset\n that is specified in the Content-Type header of the request. If\n no charset is specified, the default ISO-8859-1 is used. If a encoding\n other than the specified or default one should be used, the\n <tt>request:text-content#1</tt> function should be used.</p>\n", "summary" : "<p>  Returns the content of the request as string.</p>", "annotation_str" : "", "annotations" : [  ], "updating" : false, "parameters" : [  ], "returns" : { "type" : "xs:string", "description" : "The content of the request as a string." }, "errors" : [ "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">request:invalid-encoding if the encoding specified in the Content-Type header is invalid or not supported.</xqdoc:error>", "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">request:no-text-content if the content contained in the body of the request cannot be treated as text.</xqdoc:error>" ] }, { "isDocumented" : true, "arity" : 1, "name" : "text-content", "qname" : "request:text-content", "signature" : "($overwrite-encoding as xs:string) as xs:string external", "description" : " <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">Returns the content of the request as string interpreting\n it with the given encoding.</p>\n <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">The function returns the content of the request only\n if the content-type refers to a type that can be treated\n as text (e.g. text/* or application/xml). The function raises\n an error if the content cannot be treated as text.</p>\n <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">The text content is interpreted using the given encoding/charset.\n That is, the charset specified in the Content-Type header of the request\n is ignored. An error is raised if the given encoding is invalid\n or not supported.</p>\n", "summary" : "<p>  Returns the content of the request as string interpreting\n it with the given encoding.</p>", "annotation_str" : "", "annotations" : [  ], "updating" : false, "parameters" : [ { "name" : "overwrite-encoding", "type" : "xs:string", "occurrence" : null, "description" : "" } ], "returns" : { "type" : "xs:string", "description" : "The content of the request as a string." }, "errors" : [ "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">request:invalid-encoding if the encoding specified in the Content-Type header or the $overwrite-encoding parameter is invalid or not supported.</xqdoc:error>", "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">request:no-text-content if the content contained in the body of the request cannot be treated as text.</xqdoc:error>" ] }, { "isDocumented" : true, "arity" : 1, "name" : "text-part", "qname" : "request:text-part", "signature" : "($ref as xs:string) as xs:string external", "description" : " <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">Returns the value of a part as string</p>\n <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">A part is identified by a reference that is the value of a\n <tt>src</tt> attribute returned by the <tt>request:parts</tt> function.</p>\n <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">The value of the text part is interpreted using the encoding/charset\n given in the headers of the part. If no encoding is given, the default\n US-ASCII is assumed.</p>\n", "summary" : "<p>  Returns the value of a part as string \n  A part is identified by a reference that is the value of a\n  src  attribute returned by the  request:parts  function.</p>", "annotation_str" : "", "annotations" : [  ], "updating" : false, "parameters" : [ { "name" : "ref", "type" : "xs:string", "occurrence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> the name of the part</div>" } ], "returns" : { "type" : "xs:string", "description" : "the value of the part as string" }, "errors" : [ "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">request:invalid-encoding if the encoding given in the headers of the part is invalid or not supported.</xqdoc:error>", "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">request:no-text-content if the value of the part cannot be treated as text</xqdoc:error>", "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">request:invalid-part if the part with the given name ($ref) does not exist</xqdoc:error>", "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">request:non-multipart if the current request does not contain multipart content</xqdoc:error>", "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">request:invalid-multipart if the multipart content is invalid (e.g. the boundary is missing)</xqdoc:error>" ] }, { "isDocumented" : true, "arity" : 2, "name" : "text-part", "qname" : "request:text-part", "signature" : "($ref as xs:string, $overwrite-encoding as xs:string) as xs:string external", "description" : " <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">Returns the value of a part as string interpreting\n it with the given encoding.</p>\n <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">A part is identified by a reference that is the value of a\n <tt>src</tt> attribute returned by the <tt>request:parts</tt> function.</p>\n", "summary" : "<p>  Returns the value of a part as string interpreting\n it with the given encoding.</p>", "annotation_str" : "", "annotations" : [  ], "updating" : false, "parameters" : [ { "name" : "ref", "type" : "xs:string", "occurrence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> the name of the part</div>" }, { "name" : "overwrite-encoding", "type" : "xs:string", "occurrence" : null, "description" : "" } ], "returns" : { "type" : "xs:string", "description" : "the value of the part as string" }, "errors" : [ "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">request:invalid-encoding if the encoding given using the $overwrite-encoding parameter is invalid or not supported.</xqdoc:error>", "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">request:no-text-content if the value of the part cannot be treated as text</xqdoc:error>", "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">request:invalid-part if the part with the given name ($ref) does not exist</xqdoc:error>", "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">request:non-multipart if the current request does not contain multipart content</xqdoc:error>", "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">request:invalid-multipart if the multipart content is invalid (e.g. the boundary is missing)</xqdoc:error>" ] }, { "isDocumented" : true, "arity" : 0, "name" : "uri", "qname" : "request:uri", "signature" : "() as xs:string external", "description" : " <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">Returns the URI that was used to make this request.</p>\n <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">The value returned contains the part of the URL starting\n from the path to the end or the starting of the fragment (i.e.\n the '#' character).</p>\n", "summary" : "<p>  Returns the URI that was used to make this request.</p>", "annotation_str" : "", "annotations" : [  ], "updating" : false, "parameters" : [  ], "returns" : { "type" : "xs:string", "description" : "The path and query string part of the request's URL" }, "errors" : [  ] }, { "isDocumented" : true, "arity" : 0, "name" : "user-agent", "qname" : "request:user-agent", "signature" : "() as xs:string? external", "description" : " <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">Returns the user agent that made to perform the current request.</p>\n <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">This function returns the value of the User-Agent header\n contained in the current request.</p>\n", "summary" : "<p>  Returns the user agent that made to perform the current request.</p>", "annotation_str" : "", "annotations" : [  ], "updating" : false, "parameters" : [  ], "returns" : { "type" : "xs:string?", "description" : "The user agent used to perform this request of the empty sequence if there was no User-Agent header in the request." }, "errors" : [  ] } ], "variables" : [  ] }, "http://www.w3.org/2005/xpath-functions" : { "ns" : "http://www.w3.org/2005/xpath-functions", "description" : " This module contains all the functions specified in the\n W3C XPath and XQuery Functions and Operators 3.0.\n", "sees" : [ "<xqdoc:see xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">http://www.w3.org/TR/xpath-functions-30/</xqdoc:see>" ], "authors" : [ "<xqdoc:author xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">www.w3c.org</xqdoc:author>" ], "version" : null, "encoding" : "utf-8", "namespaces" : [  ], "functions" : [ { "isDocumented" : true, "arity" : 2, "name" : "QName", "qname" : "fn:QName", "signature" : "($paramURI as xs:string?, $paramQName as xs:string) as xs:QName external", "description" : " <div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"><p xmlns:e=\"http://www.w3.org/1999/XSL/Spec/ElementSyntax\">Constructs an <code>xs:QName</code> value given a namespace URI and a lexical\n             QName.</p><p xmlns:e=\"http://www.w3.org/1999/XSL/Spec/ElementSyntax\"><example role=\"signature\"><proto name=\"QName\" return-type=\"xs:QName\" isOp=\"no\" prefix=\"fn\" returnEmptyOk=\"no\" returnSeq=\"no\" returnVaries=\"no\" isSchema=\"no\" isDatatype=\"no\" isSpecial=\"no\"><arg name=\"paramURI\" type=\"xs:string?\"/><arg name=\"paramQName\" type=\"xs:string\"/></proto></example></p><p xmlns:e=\"http://www.w3.org/1999/XSL/Spec/ElementSyntax\">This function is <termref def=\"dt-deterministic\">deterministic</termref>, <termref def=\"dt-context-independent\">context-independent</termref>,  and <termref def=\"dt-focus-independent\">focus-independent</termref>. </p><p xmlns:e=\"http://www.w3.org/1999/XSL/Spec/ElementSyntax\">The namespace URI in the returned QName is taken from <code>$paramURI</code>. If\n                <code>$paramURI</code> is the zero-length string or the empty sequence, it represents\n             \"no namespace\".</p><p xmlns:e=\"http://www.w3.org/1999/XSL/Spec/ElementSyntax\">The prefix (or absence of a prefix) in <code>$paramQName</code> is retained in the\n             returned <code>xs:QName</code> value.</p><p xmlns:e=\"http://www.w3.org/1999/XSL/Spec/ElementSyntax\">The local name in the result is taken from the local part of\n             <code>$paramQName</code>.</p><p xmlns:e=\"http://www.w3.org/1999/XSL/Spec/ElementSyntax\">A <phrase diff=\"add\" at=\"L\">dynamic</phrase> error is raised <errorref class=\"CA\" code=\"0002\"/> if <code>$paramQName</code> does\n             not have the correct lexical form for an instance of <code>xs:QName</code>.</p><p xmlns:e=\"http://www.w3.org/1999/XSL/Spec/ElementSyntax\">A <phrase diff=\"add\" at=\"L\">dynamic</phrase> error is raised <errorref class=\"CA\" code=\"0002\"/> if <code>$paramURI</code> is the\n             zero-length string or the empty sequence, and the value of <code>$paramQName</code>\n             contains a colon (<code>:</code>).</p><p xmlns:e=\"http://www.w3.org/1999/XSL/Spec/ElementSyntax\" diff=\"add\" at=\"G\">A <phrase diff=\"add\" at=\"L\">dynamic</phrase> error <rfc2119>may</rfc2119> be raised <errorref class=\"CA\" code=\"0002\"/> if <code>$paramURI</code> is not a valid URI (XML Namespaces 1.0) or\n             IRI (XML Namespaces 1.1). </p></div>\n", "summary" : "<p>  Constructs an  xs:QName  value given a namespace URI and a lexical\n             QName.</p>", "annotation_str" : "", "annotations" : [  ], "updating" : false, "parameters" : [ { "name" : "paramURI", "type" : "xs:string", "occurrence" : "?", "description" : "" }, { "name" : "paramQName", "type" : "xs:string", "occurrence" : null, "description" : "" } ], "returns" : { "type" : "xs:QName", "description" : "" }, "errors" : [  ] }, { "isDocumented" : true, "arity" : 1, "name" : "abs", "qname" : "fn:abs", "signature" : "($arg as numeric?) as numeric? external", "description" : " <div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"><p xmlns:e=\"http://www.w3.org/1999/XSL/Spec/ElementSyntax\">Returns the absolute value of <code>$arg</code>.</p><p xmlns:e=\"http://www.w3.org/1999/XSL/Spec/ElementSyntax\"><example role=\"signature\"><proto name=\"abs\" return-type=\"numeric?\" isOp=\"no\" prefix=\"fn\" returnEmptyOk=\"no\" returnSeq=\"no\" returnVaries=\"no\" isSchema=\"no\" isDatatype=\"no\" isSpecial=\"no\"><arg name=\"arg\" type=\"numeric?\"/></proto></example></p><p xmlns:e=\"http://www.w3.org/1999/XSL/Spec/ElementSyntax\">This function is <termref def=\"dt-deterministic\">deterministic</termref>, <termref def=\"dt-context-independent\">context-independent</termref>,  and <termref def=\"dt-focus-independent\">focus-independent</termref>. </p><p xmlns:e=\"http://www.w3.org/1999/XSL/Spec/ElementSyntax\">General rules: see <specref ref=\"numeric-value-functions\"/>.</p><p xmlns:e=\"http://www.w3.org/1999/XSL/Spec/ElementSyntax\">If <code>$arg</code> is negative the function returns <code>-$arg</code>, otherwise it\n             returns <code>$arg</code>.</p><p xmlns:e=\"http://www.w3.org/1999/XSL/Spec/ElementSyntax\">If the type of <code>$arg</code> is one of the four numeric types <code>xs:float</code>,\n                <code>xs:double</code>, <code>xs:decimal</code> or <code>xs:integer</code> the type\n             of the result is the same as the type of <code>$arg</code>. If the type of\n                <code>$arg</code> is a type derived from one of the numeric types, the result is an\n             instance of the base numeric type.</p><p xmlns:e=\"http://www.w3.org/1999/XSL/Spec/ElementSyntax\">For <code>xs:float</code> and <code>xs:double</code> arguments, if the argument is\n             positive zero or negative zero, then positive zero is returned. If the argument is\n             positive or negative infinity, positive infinity is returned.</p><p xmlns:e=\"http://www.w3.org/1999/XSL/Spec/ElementSyntax\" diff=\"del\" at=\"F\">For detailed type semantics, see [Formal Semantics].</p><p xmlns:e=\"http://www.w3.org/1999/XSL/Spec/ElementSyntax\">The expression <code>fn:abs(10.5)</code> returns <code>10.5</code>.</p><p xmlns:e=\"http://www.w3.org/1999/XSL/Spec/ElementSyntax\">The expression <code>fn:abs(-10.5)</code> returns <code>10.5</code>.</p></div>\n", "summary" : "<p>  Returns the absolute value of  $arg .</p>", "annotation_str" : "", "annotations" : [  ], "updating" : false, "parameters" : [ { "name" : "arg", "type" : "numeric", "occurrence" : "?", "description" : "" } ], "returns" : { "type" : "numeric?", "description" : "" }, "errors" : [  ] }, { "isDocumented" : true, "arity" : 1, "name" : "adjust-date-to-timezone", "qname" : "fn:adjust-date-to-timezone", "signature" : "($arg as xs:date?) as xs:date? external", "description" : " <div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"><p xmlns:e=\"http://www.w3.org/1999/XSL/Spec/ElementSyntax\">Adjusts an <code>xs:date</code> value to a specific timezone, or to no timezone\n             at all; the result is the date in the target timezone that contains the starting instant\n             of the supplied date.</p><p xmlns:e=\"http://www.w3.org/1999/XSL/Spec/ElementSyntax\"><example role=\"signature\"><proto name=\"adjust-date-to-timezone\" return-type=\"xs:date?\" isOp=\"no\" prefix=\"fn\" returnEmptyOk=\"no\" returnSeq=\"no\" returnVaries=\"no\" isSchema=\"no\" isDatatype=\"no\" isSpecial=\"no\"><arg name=\"arg\" type=\"xs:date?\"/></proto></example><example role=\"signature\"><proto name=\"adjust-date-to-timezone\" return-type=\"xs:date?\" isOp=\"no\" prefix=\"fn\" returnEmptyOk=\"no\" returnSeq=\"no\" returnVaries=\"no\" isSchema=\"no\" isDatatype=\"no\" isSpecial=\"no\"><arg name=\"arg\" type=\"xs:date?\"/><arg name=\"timezone\" type=\"xs:dayTimeDuration?\"/></proto></example></p><p xmlns:e=\"http://www.w3.org/1999/XSL/Spec/ElementSyntax\">The one-argument form of this function is <termref def=\"dt-deterministic\">deterministic</termref>, <termref def=\"dt-context-dependent\">context-dependent</termref>,  and <termref def=\"dt-focus-independent\">focus-independent</termref>.  It depends on\n \t\timplicit timezone.\n \t</p><p xmlns:e=\"http://www.w3.org/1999/XSL/Spec/ElementSyntax\">The two-argument form of this function is <termref def=\"dt-deterministic\">deterministic</termref>, <termref def=\"dt-context-independent\">context-independent</termref>,  and <termref def=\"dt-focus-independent\">focus-independent</termref>. </p><p xmlns:e=\"http://www.w3.org/1999/XSL/Spec/ElementSyntax\"> If <code>$timezone</code> is not specified, then the effective value of\n                <code>$timezone</code> is the value of the implicit timezone in the dynamic\n             context.</p><p xmlns:e=\"http://www.w3.org/1999/XSL/Spec/ElementSyntax\"> If <code>$arg</code> is the empty sequence, then the function returns the empty\n             sequence.</p><p xmlns:e=\"http://www.w3.org/1999/XSL/Spec/ElementSyntax\"> If <code>$arg</code> does not have a timezone component and <code>$timezone</code> is\n             the empty sequence, then the result is the value of <code>$arg</code>.</p><p xmlns:e=\"http://www.w3.org/1999/XSL/Spec/ElementSyntax\"> If <code>$arg</code> does not have a timezone component and <code>$timezone</code> is\n             not the empty sequence, then the result is <code>$arg</code> with <code>$timezone</code>\n             as the timezone component.</p><p xmlns:e=\"http://www.w3.org/1999/XSL/Spec/ElementSyntax\"> If <code>$arg</code> has a timezone component and <code>$timezone</code> is the empty\n             sequence, then the result is the local value of <code>$arg</code> without its timezone\n             component.</p><p xmlns:e=\"http://www.w3.org/1999/XSL/Spec/ElementSyntax\"> If <code>$arg</code> has a timezone component and <code>$timezone</code> is not the\n             empty sequence, then the function returns the value of the expression:</p><ulist xmlns:e=\"http://www.w3.org/1999/XSL/Spec/ElementSyntax\"><item><p>Let <code>$dt</code> be the value of <code>fn:dateTime($arg,\n                      xs:time('00:00:00'))</code>.</p></item><item><p>Let <code>$adt</code> be the value of <code>fn:adjust-dateTime-to-timezone($dt,\n                      $timezone)</code></p></item><item><p>The function returns the value of <code>xs:date($adt)</code></p></item></ulist><p xmlns:e=\"http://www.w3.org/1999/XSL/Spec/ElementSyntax\">A <phrase diff=\"add\" at=\"L\">dynamic</phrase> error is raised <errorref class=\"DT\" code=\"0003\"/> if <code>$timezone</code> is less\n             than <code>-PT14H</code> or greater than <code>PT14H</code> or is not an integral number\n             of minutes.</p></div>\n", "summary" : "<p>  Adjusts an  xs:date  value to a specific timezone, or to no timezone\n             at all; the result is the date in the target timezone that contains the starting instant\n             of the supplied date.</p>", "annotation_str" : "", "annotations" : [  ], "updating" : false, "parameters" : [ { "name" : "arg", "type" : "xs:date", "occurrence" : "?", "description" : "" } ], "returns" : { "type" : "xs:date?", "description" : "" }, "errors" : [  ] }, { "isDocumented" : true, "arity" : 2, "name" : "adjust-date-to-timezone", "qname" : "fn:adjust-date-to-timezone", "signature" : "($arg as xs:date?, $timezone as xs:dayTimeDuration?) as xs:date? external", "description" : " <div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"><p xmlns:e=\"http://www.w3.org/1999/XSL/Spec/ElementSyntax\">Adjusts an <code>xs:date</code> value to a specific timezone, or to no timezone\n             at all; the result is the date in the target timezone that contains the starting instant\n             of the supplied date.</p><p xmlns:e=\"http://www.w3.org/1999/XSL/Spec/ElementSyntax\"><example role=\"signature\"><proto name=\"adjust-date-to-timezone\" return-type=\"xs:date?\" isOp=\"no\" prefix=\"fn\" returnEmptyOk=\"no\" returnSeq=\"no\" returnVaries=\"no\" isSchema=\"no\" isDatatype=\"no\" isSpecial=\"no\"><arg name=\"arg\" type=\"xs:date?\"/></proto></example><example role=\"signature\"><proto name=\"adjust-date-to-timezone\" return-type=\"xs:date?\" isOp=\"no\" prefix=\"fn\" returnEmptyOk=\"no\" returnSeq=\"no\" returnVaries=\"no\" isSchema=\"no\" isDatatype=\"no\" isSpecial=\"no\"><arg name=\"arg\" type=\"xs:date?\"/><arg name=\"timezone\" type=\"xs:dayTimeDuration?\"/></proto></example></p><p xmlns:e=\"http://www.w3.org/1999/XSL/Spec/ElementSyntax\">The one-argument form of this function is <termref def=\"dt-deterministic\">deterministic</termref>, <termref def=\"dt-context-dependent\">context-dependent</termref>,  and <termref def=\"dt-focus-independent\">focus-independent</termref>.  It depends on\n \t\timplicit timezone.\n \t</p><p xmlns:e=\"http://www.w3.org/1999/XSL/Spec/ElementSyntax\">The two-argument form of this function is <termref def=\"dt-deterministic\">deterministic</termref>, <termref def=\"dt-context-independent\">context-independent</termref>,  and <termref def=\"dt-focus-independent\">focus-independent</termref>. </p><p xmlns:e=\"http://www.w3.org/1999/XSL/Spec/ElementSyntax\"> If <code>$timezone</code> is not specified, then the effective value of\n                <code>$timezone</code> is the value of the implicit timezone in the dynamic\n             context.</p><p xmlns:e=\"http://www.w3.org/1999/XSL/Spec/ElementSyntax\"> If <code>$arg</code> is the empty sequence, then the function returns the empty\n             sequence.</p><p xmlns:e=\"http://www.w3.org/1999/XSL/Spec/ElementSyntax\"> If <code>$arg</code> does not have a timezone component and <code>$timezone</code> is\n             the empty sequence, then the result is the value of <code>$arg</code>.</p><p xmlns:e=\"http://www.w3.org/1999/XSL/Spec/ElementSyntax\"> If <code>$arg</code> does not have a timezone component and <code>$timezone</code> is\n             not the empty sequence, then the result is <code>$arg</code> with <code>$timezone</code>\n             as the timezone component.</p><p xmlns:e=\"http://www.w3.org/1999/XSL/Spec/ElementSyntax\"> If <code>$arg</code> has a timezone component and <code>$timezone</code> is the empty\n             sequence, then the result is the local value of <code>$arg</code> without its timezone\n             component.</p><p xmlns:e=\"http://www.w3.org/1999/XSL/Spec/ElementSyntax\"> If <code>$arg</code> has a timezone component and <code>$timezone</code> is not the\n             empty sequence, then the function returns the value of the expression:</p><ulist xmlns:e=\"http://www.w3.org/1999/XSL/Spec/ElementSyntax\"><item><p>Let <code>$dt</code> be the value of <code>fn:dateTime($arg,\n                      xs:time('00:00:00'))</code>.</p></item><item><p>Let <code>$adt</code> be the value of <code>fn:adjust-dateTime-to-timezone($dt,\n                      $timezone)</code></p></item><item><p>The function returns the value of <code>xs:date($adt)</code></p></item></ulist><p xmlns:e=\"http://www.w3.org/1999/XSL/Spec/ElementSyntax\">A <phrase diff=\"add\" at=\"L\">dynamic</phrase> error is raised <errorref class=\"DT\" code=\"0003\"/> if <code>$timezone</code> is less\n             than <code>-PT14H</code> or greater than <code>PT14H</code> or is not an integral number\n             of minutes.</p></div>\n", "summary" : "<p>  Adjusts an  xs:date  value to a specific timezone, or to no timezone\n             at all; the result is the date in the target timezone that contains the starting instant\n             of the supplied date.</p>", "annotation_str" : "", "annotations" : [  ], "updating" : false, "parameters" : [ { "name" : "arg", "type" : "xs:date", "occurrence" : "?", "description" : "" }, { "name" : "timezone", "type" : "xs:dayTimeDuration", "occurrence" : "?", "description" : "" } ], "returns" : { "type" : "xs:date?", "description" : "" }, "errors" : [  ] }, { "isDocumented" : true, "arity" : 1, "name" : "adjust-dateTime-to-timezone", "qname" : "fn:adjust-dateTime-to-timezone", "signature" : "($arg as xs:dateTime?) as xs:dateTime external", "description" : " <div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"><p xmlns:e=\"http://www.w3.org/1999/XSL/Spec/ElementSyntax\">Adjusts an <code>xs:dateTime</code> value to a specific timezone, or to no\n             timezone at all.</p><p xmlns:e=\"http://www.w3.org/1999/XSL/Spec/ElementSyntax\"><example role=\"signature\"><proto name=\"adjust-dateTime-to-timezone\" return-type=\"xs:dateTime?\" isOp=\"no\" prefix=\"fn\" returnEmptyOk=\"no\" returnSeq=\"no\" returnVaries=\"no\" isSchema=\"no\" isDatatype=\"no\" isSpecial=\"no\"><arg name=\"arg\" type=\"xs:dateTime?\"/></proto></example><example role=\"signature\"><proto name=\"adjust-dateTime-to-timezone\" return-type=\"xs:dateTime?\" isOp=\"no\" prefix=\"fn\" returnEmptyOk=\"no\" returnSeq=\"no\" returnVaries=\"no\" isSchema=\"no\" isDatatype=\"no\" isSpecial=\"no\"><arg name=\"arg\" type=\"xs:dateTime?\"/><arg name=\"timezone\" type=\"xs:dayTimeDuration?\"/></proto></example></p><p xmlns:e=\"http://www.w3.org/1999/XSL/Spec/ElementSyntax\">The one-argument form of this function is <termref def=\"dt-deterministic\">deterministic</termref>, <termref def=\"dt-context-dependent\">context-dependent</termref>,  and <termref def=\"dt-focus-independent\">focus-independent</termref>.  It depends on\n \t\timplicit timezone.\n \t</p><p xmlns:e=\"http://www.w3.org/1999/XSL/Spec/ElementSyntax\">The two-argument form of this function is <termref def=\"dt-deterministic\">deterministic</termref>, <termref def=\"dt-context-independent\">context-independent</termref>,  and <termref def=\"dt-focus-independent\">focus-independent</termref>. </p><p xmlns:e=\"http://www.w3.org/1999/XSL/Spec/ElementSyntax\"> If <code>$timezone</code> is not specified, then the effective value of\n                <code>$timezone</code> is the value of the implicit timezone in the dynamic\n             context.</p><p xmlns:e=\"http://www.w3.org/1999/XSL/Spec/ElementSyntax\"> If <code>$arg</code> is the empty sequence, then the function returns the empty\n             sequence.</p><p xmlns:e=\"http://www.w3.org/1999/XSL/Spec/ElementSyntax\"> If <code>$arg</code> does not have a timezone component and <code>$timezone</code> is\n             the empty sequence, then the result is <code>$arg</code>.</p><p xmlns:e=\"http://www.w3.org/1999/XSL/Spec/ElementSyntax\"> If <code>$arg</code> does not have a timezone component and <code>$timezone</code> is\n             not the empty sequence, then the result is <code>$arg</code> with <code>$timezone</code>\n             as the timezone component.</p><p xmlns:e=\"http://www.w3.org/1999/XSL/Spec/ElementSyntax\"> If <code>$arg</code> has a timezone component and <code>$timezone</code> is the empty\n             sequence, then the result is the local value of <code>$arg</code> without its timezone\n             component.</p><p xmlns:e=\"http://www.w3.org/1999/XSL/Spec/ElementSyntax\"> If <code>$arg</code> has a timezone component and <code>$timezone</code> is not the\n             empty sequence, then the result is the <code>xs:dateTime</code> value that is equal to\n                <code>$arg</code> and that has a timezone component equal to\n             <code>$timezone</code>.</p><p xmlns:e=\"http://www.w3.org/1999/XSL/Spec/ElementSyntax\"> A <phrase diff=\"add\" at=\"L\">dynamic</phrase> error is raised <errorref class=\"DT\" code=\"0003\"/> if <code>$timezone</code> is less\n             than <code>-PT14H</code> or greater than <code>PT14H</code> or is not an integral number\n             of minutes.</p></div>\n", "summary" : "<p>  Adjusts an  xs:dateTime  value to a specific timezone, or to no\n             timezone at all.</p>", "annotation_str" : "", "annotations" : [  ], "updating" : false, "parameters" : [ { "name" : "arg", "type" : "xs:dateTime", "occurrence" : "?", "description" : "" } ], "returns" : { "type" : "xs:dateTime", "description" : "" }, "errors" : [  ] }, { "isDocumented" : true, "arity" : 2, "name" : "adjust-dateTime-to-timezone", "qname" : "fn:adjust-dateTime-to-timezone", "signature" : "($arg as xs:dateTime?, $timezone as xs:dayTimeDuration?) as xs:dateTime external", "description" : " <div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"><p xmlns:e=\"http://www.w3.org/1999/XSL/Spec/ElementSyntax\">Adjusts an <code>xs:dateTime</code> value to a specific timezone, or to no\n             timezone at all.</p><p xmlns:e=\"http://www.w3.org/1999/XSL/Spec/ElementSyntax\"><example role=\"signature\"><proto name=\"adjust-dateTime-to-timezone\" return-type=\"xs:dateTime?\" isOp=\"no\" prefix=\"fn\" returnEmptyOk=\"no\" returnSeq=\"no\" returnVaries=\"no\" isSchema=\"no\" isDatatype=\"no\" isSpecial=\"no\"><arg name=\"arg\" type=\"xs:dateTime?\"/></proto></example><example role=\"signature\"><proto name=\"adjust-dateTime-to-timezone\" return-type=\"xs:dateTime?\" isOp=\"no\" prefix=\"fn\" returnEmptyOk=\"no\" returnSeq=\"no\" returnVaries=\"no\" isSchema=\"no\" isDatatype=\"no\" isSpecial=\"no\"><arg name=\"arg\" type=\"xs:dateTime?\"/><arg name=\"timezone\" type=\"xs:dayTimeDuration?\"/></proto></example></p><p xmlns:e=\"http://www.w3.org/1999/XSL/Spec/ElementSyntax\">The one-argument form of this function is <termref def=\"dt-deterministic\">deterministic</termref>, <termref def=\"dt-context-dependent\">context-dependent</termref>,  and <termref def=\"dt-focus-independent\">focus-independent</termref>.  It depends on\n \t\timplicit timezone.\n \t</p><p xmlns:e=\"http://www.w3.org/1999/XSL/Spec/ElementSyntax\">The two-argument form of this function is <termref def=\"dt-deterministic\">deterministic</termref>, <termref def=\"dt-context-independent\">context-independent</termref>,  and <termref def=\"dt-focus-independent\">focus-independent</termref>. </p><p xmlns:e=\"http://www.w3.org/1999/XSL/Spec/ElementSyntax\"> If <code>$timezone</code> is not specified, then the effective value of\n                <code>$timezone</code> is the value of the implicit timezone in the dynamic\n             context.</p><p xmlns:e=\"http://www.w3.org/1999/XSL/Spec/ElementSyntax\"> If <code>$arg</code> is the empty sequence, then the function returns the empty\n             sequence.</p><p xmlns:e=\"http://www.w3.org/1999/XSL/Spec/ElementSyntax\"> If <code>$arg</code> does not have a timezone component and <code>$timezone</code> is\n             the empty sequence, then the result is <code>$arg</code>.</p><p xmlns:e=\"http://www.w3.org/1999/XSL/Spec/ElementSyntax\"> If <code>$arg</code> does not have a timezone component and <code>$timezone</code> is\n             not the empty sequence, then the result is <code>$arg</code> with <code>$timezone</code>\n             as the timezone component.</p><p xmlns:e=\"http://www.w3.org/1999/XSL/Spec/ElementSyntax\"> If <code>$arg</code> has a timezone component and <code>$timezone</code> is the empty\n             sequence, then the result is the local value of <code>$arg</code> without its timezone\n             component.</p><p xmlns:e=\"http://www.w3.org/1999/XSL/Spec/ElementSyntax\"> If <code>$arg</code> has a timezone component and <code>$timezone</code> is not the\n             empty sequence, then the result is the <code>xs:dateTime</code> value that is equal to\n                <code>$arg</code> and that has a timezone component equal to\n             <code>$timezone</code>.</p><p xmlns:e=\"http://www.w3.org/1999/XSL/Spec/ElementSyntax\"> A <phrase diff=\"add\" at=\"L\">dynamic</phrase> error is raised <errorref class=\"DT\" code=\"0003\"/> if <code>$timezone</code> is less\n             than <code>-PT14H</code> or greater than <code>PT14H</code> or is not an integral number\n             of minutes.</p></div>\n", "summary" : "<p>  Adjusts an  xs:dateTime  value to a specific timezone, or to no\n             timezone at all.</p>", "annotation_str" : "", "annotations" : [  ], "updating" : false, "parameters" : [ { "name" : "arg", "type" : "xs:dateTime", "occurrence" : "?", "description" : "" }, { "name" : "timezone", "type" : "xs:dayTimeDuration", "occurrence" : "?", "description" : "" } ], "returns" : { "type" : "xs:dateTime", "description" : "" }, "errors" : [  ] }, { "isDocumented" : true, "arity" : 1, "name" : "adjust-time-to-timezone", "qname" : "fn:adjust-time-to-timezone", "signature" : "($arg as xs:time?) as xs:time? external", "description" : " <div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"><p xmlns:e=\"http://www.w3.org/1999/XSL/Spec/ElementSyntax\">Adjusts an <code>xs:time</code> value to a specific timezone, or to no timezone\n             at all.</p><p xmlns:e=\"http://www.w3.org/1999/XSL/Spec/ElementSyntax\"><example role=\"signature\"><proto name=\"adjust-time-to-timezone\" return-type=\"xs:time?\" isOp=\"no\" prefix=\"fn\" returnEmptyOk=\"no\" returnSeq=\"no\" returnVaries=\"no\" isSchema=\"no\" isDatatype=\"no\" isSpecial=\"no\"><arg name=\"arg\" type=\"xs:time?\"/></proto></example><example role=\"signature\"><proto name=\"adjust-time-to-timezone\" return-type=\"xs:time?\" isOp=\"no\" prefix=\"fn\" returnEmptyOk=\"no\" returnSeq=\"no\" returnVaries=\"no\" isSchema=\"no\" isDatatype=\"no\" isSpecial=\"no\"><arg name=\"arg\" type=\"xs:time?\"/><arg name=\"timezone\" type=\"xs:dayTimeDuration?\"/></proto></example></p><p xmlns:e=\"http://www.w3.org/1999/XSL/Spec/ElementSyntax\">The one-argument form of this function is <termref def=\"dt-deterministic\">deterministic</termref>, <termref def=\"dt-context-dependent\">context-dependent</termref>,  and <termref def=\"dt-focus-independent\">focus-independent</termref>.  It depends on\n \t\timplicit timezone.\n \t</p><p xmlns:e=\"http://www.w3.org/1999/XSL/Spec/ElementSyntax\">The two-argument form of this function is <termref def=\"dt-deterministic\">deterministic</termref>, <termref def=\"dt-context-independent\">context-independent</termref>,  and <termref def=\"dt-focus-independent\">focus-independent</termref>. </p><p xmlns:e=\"http://www.w3.org/1999/XSL/Spec/ElementSyntax\"> If <code>$timezone</code> is not specified, then the effective value of\n                <code>$timezone</code> is the value of the implicit timezone in the dynamic\n             context.</p><p xmlns:e=\"http://www.w3.org/1999/XSL/Spec/ElementSyntax\"> If <code>$arg</code> is the empty sequence, then the function returns the empty\n             sequence.</p><p xmlns:e=\"http://www.w3.org/1999/XSL/Spec/ElementSyntax\"> If <code>$arg</code> does not have a timezone component and <code>$timezone</code> is\n             the empty sequence, then the result is <code>$arg</code>.</p><p xmlns:e=\"http://www.w3.org/1999/XSL/Spec/ElementSyntax\"> If <code>$arg</code> does not have a timezone component and <code>$timezone</code> is\n             not the empty sequence, then the result is <code>$arg</code> with <code>$timezone</code>\n             as the timezone component.</p><p xmlns:e=\"http://www.w3.org/1999/XSL/Spec/ElementSyntax\"> If <code>$arg</code> has a timezone component and <code>$timezone</code> is the empty\n             sequence, then the result is the localized value of <code>$arg</code> without its\n             timezone component.</p><p xmlns:e=\"http://www.w3.org/1999/XSL/Spec/ElementSyntax\"> If <code>$arg</code> has a timezone component and <code>$timezone</code> is not the\n             empty sequence, then:</p><ulist xmlns:e=\"http://www.w3.org/1999/XSL/Spec/ElementSyntax\"><item><p>Let <code>$dt</code> be the <code>xs:dateTime</code> value\n                      <code>fn:dateTime(xs:date('1972-12-31'), $arg)</code>.</p></item><item><p>Let <code>$adt</code> be the value of <code>fn:adjust-dateTime-to-timezone($dt,\n                      $timezone)</code>\n                </p></item><item><p>The function returns the <code>xs:time</code> value\n                   <code>xs:time($adt)</code>.</p></item></ulist><p xmlns:e=\"http://www.w3.org/1999/XSL/Spec/ElementSyntax\">A <phrase diff=\"add\" at=\"L\">dynamic</phrase> error is raised <errorref class=\"DT\" code=\"0003\"/> if <code>$timezone</code> is less\n             than <code>-PT14H</code> or greater than <code>PT14H</code> or if does not contain an\n             integral number of minutes.</p></div>\n", "summary" : "<p>  Adjusts an  xs:time  value to a specific timezone, or to no timezone\n             at all.</p>", "annotation_str" : "", "annotations" : [  ], "updating" : false, "parameters" : [ { "name" : "arg", "type" : "xs:time", "occurrence" : "?", "description" : "" } ], "returns" : { "type" : "xs:time?", "description" : "" }, "errors" : [  ] }, { "isDocumented" : true, "arity" : 2, "name" : "adjust-time-to-timezone", "qname" : "fn:adjust-time-to-timezone", "signature" : "($arg as xs:time?, $timezone as xs:dayTimeDuration?) as xs:time? external", "description" : " <div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"><p xmlns:e=\"http://www.w3.org/1999/XSL/Spec/ElementSyntax\">Adjusts an <code>xs:time</code> value to a specific timezone, or to no timezone\n             at all.</p><p xmlns:e=\"http://www.w3.org/1999/XSL/Spec/ElementSyntax\"><example role=\"signature\"><proto name=\"adjust-time-to-timezone\" return-type=\"xs:time?\" isOp=\"no\" prefix=\"fn\" returnEmptyOk=\"no\" returnSeq=\"no\" returnVaries=\"no\" isSchema=\"no\" isDatatype=\"no\" isSpecial=\"no\"><arg name=\"arg\" type=\"xs:time?\"/></proto></example><example role=\"signature\"><proto name=\"adjust-time-to-timezone\" return-type=\"xs:time?\" isOp=\"no\" prefix=\"fn\" returnEmptyOk=\"no\" returnSeq=\"no\" returnVaries=\"no\" isSchema=\"no\" isDatatype=\"no\" isSpecial=\"no\"><arg name=\"arg\" type=\"xs:time?\"/><arg name=\"timezone\" type=\"xs:dayTimeDuration?\"/></proto></example></p><p xmlns:e=\"http://www.w3.org/1999/XSL/Spec/ElementSyntax\">The one-argument form of this function is <termref def=\"dt-deterministic\">deterministic</termref>, <termref def=\"dt-context-dependent\">context-dependent</termref>,  and <termref def=\"dt-focus-independent\">focus-independent</termref>.  It depends on\n \t\timplicit timezone.\n \t</p><p xmlns:e=\"http://www.w3.org/1999/XSL/Spec/ElementSyntax\">The two-argument form of this function is <termref def=\"dt-deterministic\">deterministic</termref>, <termref def=\"dt-context-independent\">context-independent</termref>,  and <termref def=\"dt-focus-independent\">focus-independent</termref>. </p><p xmlns:e=\"http://www.w3.org/1999/XSL/Spec/ElementSyntax\"> If <code>$timezone</code> is not specified, then the effective value of\n                <code>$timezone</code> is the value of the implicit timezone in the dynamic\n             context.</p><p xmlns:e=\"http://www.w3.org/1999/XSL/Spec/ElementSyntax\"> If <code>$arg</code> is the empty sequence, then the function returns the empty\n             sequence.</p><p xmlns:e=\"http://www.w3.org/1999/XSL/Spec/ElementSyntax\"> If <code>$arg</code> does not have a timezone component and <code>$timezone</code> is\n             the empty sequence, then the result is <code>$arg</code>.</p><p xmlns:e=\"http://www.w3.org/1999/XSL/Spec/ElementSyntax\"> If <code>$arg</code> does not have a timezone component and <code>$timezone</code> is\n             not the empty sequence, then the result is <code>$arg</code> with <code>$timezone</code>\n             as the timezone component.</p><p xmlns:e=\"http://www.w3.org/1999/XSL/Spec/ElementSyntax\"> If <code>$arg</code> has a timezone component and <code>$timezone</code> is the empty\n             sequence, then the result is the localized value of <code>$arg</code> without its\n             timezone component.</p><p xmlns:e=\"http://www.w3.org/1999/XSL/Spec/ElementSyntax\"> If <code>$arg</code> has a timezone component and <code>$timezone</code> is not the\n             empty sequence, then:</p><ulist xmlns:e=\"http://www.w3.org/1999/XSL/Spec/ElementSyntax\"><item><p>Let <code>$dt</code> be the <code>xs:dateTime</code> value\n                      <code>fn:dateTime(xs:date('1972-12-31'), $arg)</code>.</p></item><item><p>Let <code>$adt</code> be the value of <code>fn:adjust-dateTime-to-timezone($dt,\n                      $timezone)</code>\n                </p></item><item><p>The function returns the <code>xs:time</code> value\n                   <code>xs:time($adt)</code>.</p></item></ulist><p xmlns:e=\"http://www.w3.org/1999/XSL/Spec/ElementSyntax\">A <phrase diff=\"add\" at=\"L\">dynamic</phrase> error is raised <errorref class=\"DT\" code=\"0003\"/> if <code>$timezone</code> is less\n             than <code>-PT14H</code> or greater than <code>PT14H</code> or if does not contain an\n             integral number of minutes.</p></div>\n", "summary" : "<p>  Adjusts an  xs:time  value to a specific timezone, or to no timezone\n             at all.</p>", "annotation_str" : "", "annotations" : [  ], "updating" : false, "parameters" : [ { "name" : "arg", "type" : "xs:time", "occurrence" : "?", "description" : "" }, { "name" : "timezone", "type" : "xs:dayTimeDuration", "occurrence" : "?", "description" : "" } ], "returns" : { "type" : "xs:time?", "description" : "" }, "errors" : [  ] }, { "isDocumented" : true, "arity" : 2, "name" : "analyze-string", "qname" : "fn:analyze-string", "signature" : "($input as xs:string?, $pattern as xs:string) as element(fn:analyze-string-result) external", "description" : " <div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"><p xmlns:e=\"http://www.w3.org/1999/XSL/Spec/ElementSyntax\">Analyzes a string using a regular expression, returning an XML structure that\n             identifies which parts of the input string matched or failed to match the regular\n             expression, and in the case of matched substrings, which substrings matched each\n             capturing group in the regular expression.</p><p xmlns:e=\"http://www.w3.org/1999/XSL/Spec/ElementSyntax\"><example role=\"signature\"><proto name=\"analyze-string\" return-type=\"element(fn:analyze-string-result)\" isOp=\"no\" prefix=\"fn\" returnEmptyOk=\"no\" returnSeq=\"no\" returnVaries=\"no\" isSchema=\"no\" isDatatype=\"no\" isSpecial=\"no\"><arg name=\"input\" type=\"xs:string?\"/><arg name=\"pattern\" type=\"xs:string\"/></proto></example><example role=\"signature\"><proto name=\"analyze-string\" return-type=\"element(fn:analyze-string-result)\" isOp=\"no\" prefix=\"fn\" returnEmptyOk=\"no\" returnSeq=\"no\" returnVaries=\"no\" isSchema=\"no\" isDatatype=\"no\" isSpecial=\"no\"><arg name=\"input\" type=\"xs:string?\"/><arg name=\"pattern\" type=\"xs:string\"/><arg name=\"flags\" type=\"xs:string\"/></proto></example></p><p xmlns:e=\"http://www.w3.org/1999/XSL/Spec/ElementSyntax\">This function is <termref def=\"dt-nondeterministic\">nondeterministic</termref>, <termref def=\"dt-context-independent\">context-independent</termref>,  and <termref def=\"dt-focus-independent\">focus-independent</termref>. </p><p xmlns:e=\"http://www.w3.org/1999/XSL/Spec/ElementSyntax\">The effect of calling the first version of this function (omitting the argument\n                <code>$flags</code>) is the same as the effect of calling the second version with the\n                <code>$flags</code> argument set to a zero-length string. Flags are defined in\n                <specref ref=\"flags\"/>.</p><p xmlns:e=\"http://www.w3.org/1999/XSL/Spec/ElementSyntax\">The <code>$flags</code> argument is interpreted in the same way as for the\n                <code>fn:matches</code> function.</p><p xmlns:e=\"http://www.w3.org/1999/XSL/Spec/ElementSyntax\">If <code>$input</code> is the empty sequence the function behaves as if\n                <code>$input</code> were the zero-length string. In this situation the result will be\n             an element node with no children.</p><p xmlns:e=\"http://www.w3.org/1999/XSL/Spec/ElementSyntax\">The function returns an element node whose local name is\n                <code>analyze-string-result</code>. This element and all its descendant elements have\n             the namespace URI <code>http://www.w3.org/2005/xpath-functions</code>. The namespace\n             prefix is <termref def=\"implementation-dependent\"/>. The children of this element are a\n             sequence of <code>fn:match</code> and <code>fn:non-match</code> elements. This sequence\n             is formed by breaking the <code>$input</code> string into a sequence of strings,\n             returning any substring that matches <code>$pattern</code> as the content of a\n                <code>match</code> element, and any intervening substring as the content of a\n                <code>non-match</code> element.</p><p xmlns:e=\"http://www.w3.org/1999/XSL/Spec/ElementSyntax\">More specifically, the function starts at the beginning of the input string and attempts\n             to find the first substring that matches the regular expression. If there are several\n             matches, the first match is defined to be the one whose starting position comes first in\n             the string. If several alternatives within the regular expression both match at the same\n             position in the input string, then the match that is chosen is the first alternative\n             that matches. For example, if the input string is <code>The quick brown fox jumps</code>\n             and the regular expression is <code>jump|jumps</code>, then the match that is chosen is\n                <code>jump</code>.</p><p xmlns:e=\"http://www.w3.org/1999/XSL/Spec/ElementSyntax\">Having found the first match, the instruction proceeds to find the second and subsequent\n             matches by repeating the search, starting at the first <termref def=\"character\">character</termref> that was not included in the previous match.</p><p xmlns:e=\"http://www.w3.org/1999/XSL/Spec/ElementSyntax\">The input string is thus partitioned into a sequence of substrings, some of which match\n             the regular expression, others which do not match it. Each substring will contain at\n             least one character. This sequence is represented in the result by the sequence of\n                <code>fn:match</code> and <code>fn:non-match</code> children of the returned element\n             node; the string value of the <code>fn:match</code> or <code>fn:non-match</code> element\n             will be the corresponding substring of <code>$input</code>, and the string value of the\n             returned element node will therefore be the same as <code>$input</code>.</p><p xmlns:e=\"http://www.w3.org/1999/XSL/Spec/ElementSyntax\">The content of an <code>fn:non-match</code> element is always a single text node.</p><p xmlns:e=\"http://www.w3.org/1999/XSL/Spec/ElementSyntax\">The content of a <code>fn:match</code> element, however, is in general a sequence of\n             text nodes and <code>fn:group</code> element children. An <code>fn:group</code> element\n             with a <code>nr</code> attribute having the integer value <var>N</var> identifies the\n             substring captured by the <var>Nth</var> parenthesized sub-expression in the regular\n             expression. For each capturing subexpression there will be at most one corresponding\n                <code>fn:group</code> element in each <code>fn:match</code> element in the\n             result.</p><p xmlns:e=\"http://www.w3.org/1999/XSL/Spec/ElementSyntax\">If the function is called twice with the same arguments, it is <termref def=\"implementation-dependent\"/> whether the two calls return the same element node\n             or distinct (but deep equal) element nodes. In this respect it is\n             <termref def=\"nondeterministic\">nondeterministic</termref>.</p><p xmlns:e=\"http://www.w3.org/1999/XSL/Spec/ElementSyntax\" diff=\"add\" at=\"J\">The base URI of the element nodes in the result is\n          <termref def=\"implementation-dependent\"/></p><p xmlns:e=\"http://www.w3.org/1999/XSL/Spec/ElementSyntax\">A schema is defined for the structure of the returned element, containing the\n             definitions below. The returned element and its descendants will have type annotations\n             obtained by validating the returned element against this schema, unless the function is\n             used in an environment where type annotations are not supported (for example, a Basic\n             XSLT Processor), in which case the elements will all be annotated as\n                <code>xs:untyped</code> and the attributes as <code>xs:untypedAtomic</code>.</p><note xmlns:e=\"http://www.w3.org/1999/XSL/Spec/ElementSyntax\"><p diff=\"add\" at=\"M\">A free-standing copy of this schema can be found at <loc xmlns:xlink=\"http://www.w3.org/1999/xlink\" href=\"analyze-string.xsd\" xlink:type=\"simple\" xlink:show=\"replace\" xlink:actuate=\"onRequest\">analyze-string.xsd</loc></p></note><p xmlns:e=\"http://www.w3.org/1999/XSL/Spec/ElementSyntax\">\n             <eg xml:space=\"preserve\">&lt;?xml version=\"1.0\" encoding=\"UTF-8\"?&gt;\n &lt;xs:schema xmlns:xs=\"http://www.w3.org/2001/XMLSchema\"\n     targetNamespace=\"http://www.w3.org/2005/xpath-functions\"\n     xmlns:fn=\"http://www.w3.org/2005/xpath-functions\"\n     elementFormDefault=\"qualified\"&gt;\n     &lt;xs:element name=\"analyze-string-result\" type=\"fn:analyze-string-result-type\"/&gt;\n     &lt;xs:element name=\"match\" type=\"fn:match-type\"/&gt;\n     &lt;xs:element name=\"non-match\" type=\"xs:string\"/&gt;\n     &lt;xs:element name=\"group\" type=\"fn:group-type\"/&gt;\n     &lt;xs:complexType name=\"analyze-string-result-type\" mixed=\"true\"&gt;\n         &lt;xs:choice minOccurs=\"0\" maxOccurs=\"unbounded\"&gt;\n             &lt;xs:element ref=\"fn:match\"/&gt;\n             &lt;xs:element ref=\"fn:non-match\"/&gt;\n         &lt;/xs:choice&gt;\n     &lt;/xs:complexType&gt;\n     &lt;xs:complexType name=\"match-type\" mixed=\"true\"&gt;\n         &lt;xs:sequence&gt;\n             &lt;xs:element ref=\"fn:group\" minOccurs=\"0\" maxOccurs=\"unbounded\"/&gt;\n         &lt;/xs:sequence&gt;\n     &lt;/xs:complexType&gt;\n     &lt;xs:complexType name=\"group-type\" mixed=\"true\"&gt;\n         &lt;xs:sequence&gt;\n             &lt;xs:element ref=\"fn:group\" minOccurs=\"0\" maxOccurs=\"unbounded\"/&gt;\n         &lt;/xs:sequence&gt;\n         &lt;xs:attribute name=\"nr\" type=\"xs:positiveInteger\"/&gt;\n     &lt;/xs:complexType&gt;\n &lt;/xs:schema&gt;\n </eg>\n          </p><p xmlns:e=\"http://www.w3.org/1999/XSL/Spec/ElementSyntax\">A <phrase diff=\"add\" at=\"L\">dynamic</phrase> error is raised <errorref class=\"RX\" code=\"0002\"/> if the value of\n                <code>$pattern</code> is invalid according to the rules described in section <specref ref=\"regex-syntax\"/>.</p><p xmlns:e=\"http://www.w3.org/1999/XSL/Spec/ElementSyntax\">A <phrase diff=\"add\" at=\"L\">dynamic</phrase> error is raised <errorref class=\"RX\" code=\"0001\"/> if the value of\n                <code>$flags</code> is invalid according to the rules described in section <specref ref=\"regex-syntax\"/>.</p><p xmlns:e=\"http://www.w3.org/1999/XSL/Spec/ElementSyntax\">A <phrase diff=\"add\" at=\"L\">dynamic</phrase> error is raised <errorref class=\"RX\" code=\"0003\"/> if the supplied\n                <code>$pattern</code> matches a zero-length string, that is, if <code>fn:matches(\"\",\n                $pattern, $flags)</code> returns <code>true</code>.</p></div>\n", "summary" : "<p>  Analyzes a string using a regular expression, returning an XML structure that\n             identifies which parts of the input string matched or failed to match the regular\n             expression, and in the case of matched substrings, which substrings matched each\n             capturing group in the regular expression.</p>", "annotation_str" : "", "annotations" : [  ], "updating" : false, "parameters" : [ { "name" : "input", "type" : "xs:string", "occurrence" : "?", "description" : "" }, { "name" : "pattern", "type" : "xs:string", "occurrence" : null, "description" : "" } ], "returns" : { "type" : "element(fn:analyze-string-result)", "description" : "" }, "errors" : [  ] }, { "isDocumented" : true, "arity" : 3, "name" : "analyze-string", "qname" : "fn:analyze-string", "signature" : "($input as xs:string?, $pattern as xs:string, $flags as xs:string) as element(fn:analyze-string-result) external", "description" : " <div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"><p xmlns:e=\"http://www.w3.org/1999/XSL/Spec/ElementSyntax\">Analyzes a string using a regular expression, returning an XML structure that\n             identifies which parts of the input string matched or failed to match the regular\n             expression, and in the case of matched substrings, which substrings matched each\n             capturing group in the regular expression.</p><p xmlns:e=\"http://www.w3.org/1999/XSL/Spec/ElementSyntax\"><example role=\"signature\"><proto name=\"analyze-string\" return-type=\"element(fn:analyze-string-result)\" isOp=\"no\" prefix=\"fn\" returnEmptyOk=\"no\" returnSeq=\"no\" returnVaries=\"no\" isSchema=\"no\" isDatatype=\"no\" isSpecial=\"no\"><arg name=\"input\" type=\"xs:string?\"/><arg name=\"pattern\" type=\"xs:string\"/></proto></example><example role=\"signature\"><proto name=\"analyze-string\" return-type=\"element(fn:analyze-string-result)\" isOp=\"no\" prefix=\"fn\" returnEmptyOk=\"no\" returnSeq=\"no\" returnVaries=\"no\" isSchema=\"no\" isDatatype=\"no\" isSpecial=\"no\"><arg name=\"input\" type=\"xs:string?\"/><arg name=\"pattern\" type=\"xs:string\"/><arg name=\"flags\" type=\"xs:string\"/></proto></example></p><p xmlns:e=\"http://www.w3.org/1999/XSL/Spec/ElementSyntax\">This function is <termref def=\"dt-nondeterministic\">nondeterministic</termref>, <termref def=\"dt-context-independent\">context-independent</termref>,  and <termref def=\"dt-focus-independent\">focus-independent</termref>. </p><p xmlns:e=\"http://www.w3.org/1999/XSL/Spec/ElementSyntax\">The effect of calling the first version of this function (omitting the argument\n                <code>$flags</code>) is the same as the effect of calling the second version with the\n                <code>$flags</code> argument set to a zero-length string. Flags are defined in\n                <specref ref=\"flags\"/>.</p><p xmlns:e=\"http://www.w3.org/1999/XSL/Spec/ElementSyntax\">The <code>$flags</code> argument is interpreted in the same way as for the\n                <code>fn:matches</code> function.</p><p xmlns:e=\"http://www.w3.org/1999/XSL/Spec/ElementSyntax\">If <code>$input</code> is the empty sequence the function behaves as if\n                <code>$input</code> were the zero-length string. In this situation the result will be\n             an element node with no children.</p><p xmlns:e=\"http://www.w3.org/1999/XSL/Spec/ElementSyntax\">The function returns an element node whose local name is\n                <code>analyze-string-result</code>. This element and all its descendant elements have\n             the namespace URI <code>http://www.w3.org/2005/xpath-functions</code>. The namespace\n             prefix is <termref def=\"implementation-dependent\"/>. The children of this element are a\n             sequence of <code>fn:match</code> and <code>fn:non-match</code> elements. This sequence\n             is formed by breaking the <code>$input</code> string into a sequence of strings,\n             returning any substring that matches <code>$pattern</code> as the content of a\n                <code>match</code> element, and any intervening substring as the content of a\n                <code>non-match</code> element.</p><p xmlns:e=\"http://www.w3.org/1999/XSL/Spec/ElementSyntax\">More specifically, the function starts at the beginning of the input string and attempts\n             to find the first substring that matches the regular expression. If there are several\n             matches, the first match is defined to be the one whose starting position comes first in\n             the string. If several alternatives within the regular expression both match at the same\n             position in the input string, then the match that is chosen is the first alternative\n             that matches. For example, if the input string is <code>The quick brown fox jumps</code>\n             and the regular expression is <code>jump|jumps</code>, then the match that is chosen is\n                <code>jump</code>.</p><p xmlns:e=\"http://www.w3.org/1999/XSL/Spec/ElementSyntax\">Having found the first match, the instruction proceeds to find the second and subsequent\n             matches by repeating the search, starting at the first <termref def=\"character\">character</termref> that was not included in the previous match.</p><p xmlns:e=\"http://www.w3.org/1999/XSL/Spec/ElementSyntax\">The input string is thus partitioned into a sequence of substrings, some of which match\n             the regular expression, others which do not match it. Each substring will contain at\n             least one character. This sequence is represented in the result by the sequence of\n                <code>fn:match</code> and <code>fn:non-match</code> children of the returned element\n             node; the string value of the <code>fn:match</code> or <code>fn:non-match</code> element\n             will be the corresponding substring of <code>$input</code>, and the string value of the\n             returned element node will therefore be the same as <code>$input</code>.</p><p xmlns:e=\"http://www.w3.org/1999/XSL/Spec/ElementSyntax\">The content of an <code>fn:non-match</code> element is always a single text node.</p><p xmlns:e=\"http://www.w3.org/1999/XSL/Spec/ElementSyntax\">The content of a <code>fn:match</code> element, however, is in general a sequence of\n             text nodes and <code>fn:group</code> element children. An <code>fn:group</code> element\n             with a <code>nr</code> attribute having the integer value <var>N</var> identifies the\n             substring captured by the <var>Nth</var> parenthesized sub-expression in the regular\n             expression. For each capturing subexpression there will be at most one corresponding\n                <code>fn:group</code> element in each <code>fn:match</code> element in the\n             result.</p><p xmlns:e=\"http://www.w3.org/1999/XSL/Spec/ElementSyntax\">If the function is called twice with the same arguments, it is <termref def=\"implementation-dependent\"/> whether the two calls return the same element node\n             or distinct (but deep equal) element nodes. In this respect it is\n             <termref def=\"nondeterministic\">nondeterministic</termref>.</p><p xmlns:e=\"http://www.w3.org/1999/XSL/Spec/ElementSyntax\" diff=\"add\" at=\"J\">The base URI of the element nodes in the result is\n          <termref def=\"implementation-dependent\"/></p><p xmlns:e=\"http://www.w3.org/1999/XSL/Spec/ElementSyntax\">A schema is defined for the structure of the returned element, containing the\n             definitions below. The returned element and its descendants will have type annotations\n             obtained by validating the returned element against this schema, unless the function is\n             used in an environment where type annotations are not supported (for example, a Basic\n             XSLT Processor), in which case the elements will all be annotated as\n                <code>xs:untyped</code> and the attributes as <code>xs:untypedAtomic</code>.</p><note xmlns:e=\"http://www.w3.org/1999/XSL/Spec/ElementSyntax\"><p diff=\"add\" at=\"M\">A free-standing copy of this schema can be found at <loc xmlns:xlink=\"http://www.w3.org/1999/xlink\" href=\"analyze-string.xsd\" xlink:type=\"simple\" xlink:show=\"replace\" xlink:actuate=\"onRequest\">analyze-string.xsd</loc></p></note><p xmlns:e=\"http://www.w3.org/1999/XSL/Spec/ElementSyntax\">\n             <eg xml:space=\"preserve\">&lt;?xml version=\"1.0\" encoding=\"UTF-8\"?&gt;\n &lt;xs:schema xmlns:xs=\"http://www.w3.org/2001/XMLSchema\"\n     targetNamespace=\"http://www.w3.org/2005/xpath-functions\"\n     xmlns:fn=\"http://www.w3.org/2005/xpath-functions\"\n     elementFormDefault=\"qualified\"&gt;\n     &lt;xs:element name=\"analyze-string-result\" type=\"fn:analyze-string-result-type\"/&gt;\n     &lt;xs:element name=\"match\" type=\"fn:match-type\"/&gt;\n     &lt;xs:element name=\"non-match\" type=\"xs:string\"/&gt;\n     &lt;xs:element name=\"group\" type=\"fn:group-type\"/&gt;\n     &lt;xs:complexType name=\"analyze-string-result-type\" mixed=\"true\"&gt;\n         &lt;xs:choice minOccurs=\"0\" maxOccurs=\"unbounded\"&gt;\n             &lt;xs:element ref=\"fn:match\"/&gt;\n             &lt;xs:element ref=\"fn:non-match\"/&gt;\n         &lt;/xs:choice&gt;\n     &lt;/xs:complexType&gt;\n     &lt;xs:complexType name=\"match-type\" mixed=\"true\"&gt;\n         &lt;xs:sequence&gt;\n             &lt;xs:element ref=\"fn:group\" minOccurs=\"0\" maxOccurs=\"unbounded\"/&gt;\n         &lt;/xs:sequence&gt;\n     &lt;/xs:complexType&gt;\n     &lt;xs:complexType name=\"group-type\" mixed=\"true\"&gt;\n         &lt;xs:sequence&gt;\n             &lt;xs:element ref=\"fn:group\" minOccurs=\"0\" maxOccurs=\"unbounded\"/&gt;\n         &lt;/xs:sequence&gt;\n         &lt;xs:attribute name=\"nr\" type=\"xs:positiveInteger\"/&gt;\n     &lt;/xs:complexType&gt;\n &lt;/xs:schema&gt;\n </eg>\n          </p><p xmlns:e=\"http://www.w3.org/1999/XSL/Spec/ElementSyntax\">A <phrase diff=\"add\" at=\"L\">dynamic</phrase> error is raised <errorref class=\"RX\" code=\"0002\"/> if the value of\n                <code>$pattern</code> is invalid according to the rules described in section <specref ref=\"regex-syntax\"/>.</p><p xmlns:e=\"http://www.w3.org/1999/XSL/Spec/ElementSyntax\">A <phrase diff=\"add\" at=\"L\">dynamic</phrase> error is raised <errorref class=\"RX\" code=\"0001\"/> if the value of\n                <code>$flags</code> is invalid according to the rules described in section <specref ref=\"regex-syntax\"/>.</p><p xmlns:e=\"http://www.w3.org/1999/XSL/Spec/ElementSyntax\">A <phrase diff=\"add\" at=\"L\">dynamic</phrase> error is raised <errorref class=\"RX\" code=\"0003\"/> if the supplied\n                <code>$pattern</code> matches a zero-length string, that is, if <code>fn:matches(\"\",\n                $pattern, $flags)</code> returns <code>true</code>.</p></div>\n", "summary" : "<p>  Analyzes a string using a regular expression, returning an XML structure that\n             identifies which parts of the input string matched or failed to match the regular\n             expression, and in the case of matched substrings, which substrings matched each\n             capturing group in the regular expression.</p>", "annotation_str" : "", "annotations" : [  ], "updating" : false, "parameters" : [ { "name" : "input", "type" : "xs:string", "occurrence" : "?", "description" : "" }, { "name" : "pattern", "type" : "xs:string", "occurrence" : null, "description" : "" }, { "name" : "flags", "type" : "xs:string", "occurrence" : null, "description" : "" } ], "returns" : { "type" : "element(fn:analyze-string-result)", "description" : "" }, "errors" : [  ] }, { "isDocumented" : true, "arity" : 0, "name" : "available-environment-variables", "qname" : "fn:available-environment-variables", "signature" : "() as xs:string* external", "description" : " <div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"><p xmlns:e=\"http://www.w3.org/1999/XSL/Spec/ElementSyntax\">Returns a list of environment variable names that are suitable for passing to\n                <code>fn:environment-variable</code>, as a (possibly empty) sequence of strings.</p><p xmlns:e=\"http://www.w3.org/1999/XSL/Spec/ElementSyntax\"><example role=\"signature\"><proto name=\"available-environment-variables\" return-type=\"xs:string*\" isOp=\"no\" prefix=\"fn\" returnEmptyOk=\"no\" returnSeq=\"no\" returnVaries=\"no\" isSchema=\"no\" isDatatype=\"no\" isSpecial=\"no\"/></example></p><p xmlns:e=\"http://www.w3.org/1999/XSL/Spec/ElementSyntax\">This function is <termref def=\"dt-deterministic\">deterministic</termref>, <termref def=\"dt-context-dependent\">context-dependent</termref>,  and <termref def=\"dt-focus-independent\">focus-independent</termref>.  It depends on\n \t\tenvironment variables.\n \t</p><p xmlns:e=\"http://www.w3.org/1999/XSL/Spec/ElementSyntax\">The function returns a sequence of strings, being the names of the environment variables\n             in the dynamic context in some <termref def=\"implementation-dependent\">implementation-dependent</termref> order.</p><p xmlns:e=\"http://www.w3.org/1999/XSL/Spec/ElementSyntax\">The function is <termref def=\"dt-deterministic\">deterministic</termref>: that is, the\n             set of available environment variables does not vary during evaluation.</p><p xmlns:e=\"http://www.w3.org/1999/XSL/Spec/ElementSyntax\">The function returns a list of strings, containing no duplicates.</p><p xmlns:e=\"http://www.w3.org/1999/XSL/Spec/ElementSyntax\">It is intended that the strings in this list should be suitable for passing to\n                <code>fn:environment-variable</code>.</p><p xmlns:e=\"http://www.w3.org/1999/XSL/Spec/ElementSyntax\">See also the note on security under the definition of the\n                <code>fn:environment-variable</code> function. If access to environment variables has\n             been disabled, <code>fn:available-environment-variables</code> always returns the empty\n             sequence.</p></div>\n", "summary" : "<p>  Returns a list of environment variable names that are suitable for passing to\n                 fn:environment-variable , as a (possibly empty) sequence of strings.</p>", "annotation_str" : "", "annotations" : [  ], "updating" : false, "parameters" : [  ], "returns" : { "type" : "xs:string*", "description" : "" }, "errors" : [  ] }, { "isDocumented" : true, "arity" : 0, "name" : "available-environment-variables", "qname" : "fn:available-environment-variables", "signature" : "() as xs:string* external", "description" : " <div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"><p xmlns:e=\"http://www.w3.org/1999/XSL/Spec/ElementSyntax\">Returns a list of environment variable names that are suitable for passing to\n                <code>fn:environment-variable</code>, as a (possibly empty) sequence of strings.</p><p xmlns:e=\"http://www.w3.org/1999/XSL/Spec/ElementSyntax\"><example role=\"signature\"><proto name=\"available-environment-variables\" return-type=\"xs:string*\" isOp=\"no\" prefix=\"fn\" returnEmptyOk=\"no\" returnSeq=\"no\" returnVaries=\"no\" isSchema=\"no\" isDatatype=\"no\" isSpecial=\"no\"/></example></p><p xmlns:e=\"http://www.w3.org/1999/XSL/Spec/ElementSyntax\">This function is <termref def=\"dt-deterministic\">deterministic</termref>, <termref def=\"dt-context-dependent\">context-dependent</termref>,  and <termref def=\"dt-focus-independent\">focus-independent</termref>.  It depends on\n \t\tenvironment variables.\n \t</p><p xmlns:e=\"http://www.w3.org/1999/XSL/Spec/ElementSyntax\">The function returns a sequence of strings, being the names of the environment variables\n             in the dynamic context in some <termref def=\"implementation-dependent\">implementation-dependent</termref> order.</p><p xmlns:e=\"http://www.w3.org/1999/XSL/Spec/ElementSyntax\">The function is <termref def=\"dt-deterministic\">deterministic</termref>: that is, the\n             set of available environment variables does not vary during evaluation.</p><p xmlns:e=\"http://www.w3.org/1999/XSL/Spec/ElementSyntax\">The function returns a list of strings, containing no duplicates.</p><p xmlns:e=\"http://www.w3.org/1999/XSL/Spec/ElementSyntax\">It is intended that the strings in this list should be suitable for passing to\n                <code>fn:environment-variable</code>.</p><p xmlns:e=\"http://www.w3.org/1999/XSL/Spec/ElementSyntax\">See also the note on security under the definition of the\n                <code>fn:environment-variable</code> function. If access to environment variables has\n             been disabled, <code>fn:available-environment-variables</code> always returns the empty\n             sequence.</p></div>\n", "summary" : "<p>  Returns a list of environment variable names that are suitable for passing to\n                 fn:environment-variable , as a (possibly empty) sequence of strings.</p>", "annotation_str" : "", "annotations" : [  ], "updating" : false, "parameters" : [  ], "returns" : { "type" : "xs:string*", "description" : "" }, "errors" : [  ] }, { "isDocumented" : true, "arity" : 1, "name" : "avg", "qname" : "fn:avg", "signature" : "($arg as xs:anyAtomicType*) as xs:anyAtomicType? external", "description" : " <div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"><p xmlns:e=\"http://www.w3.org/1999/XSL/Spec/ElementSyntax\">Returns the average of the values in the input sequence <code>$arg</code>, that\n             is, the sum of the values divided by the number of values.</p><p xmlns:e=\"http://www.w3.org/1999/XSL/Spec/ElementSyntax\"><example role=\"signature\"><proto name=\"avg\" return-type=\"xs:anyAtomicType?\" isOp=\"no\" prefix=\"fn\" returnEmptyOk=\"no\" returnSeq=\"no\" returnVaries=\"no\" isSchema=\"no\" isDatatype=\"no\" isSpecial=\"no\"><arg name=\"arg\" type=\"xs:anyAtomicType*\"/></proto></example></p><p xmlns:e=\"http://www.w3.org/1999/XSL/Spec/ElementSyntax\">This function is <termref def=\"dt-deterministic\">deterministic</termref>, <termref def=\"dt-context-independent\">context-independent</termref>,  and <termref def=\"dt-focus-independent\">focus-independent</termref>. </p><p xmlns:e=\"http://www.w3.org/1999/XSL/Spec/ElementSyntax\">If <code>$arg</code> is the empty sequence, the empty sequence is returned.</p><p xmlns:e=\"http://www.w3.org/1999/XSL/Spec/ElementSyntax\">If <code>$arg</code> contains values of type <code>xs:untypedAtomic</code> they are cast\n             to <code>xs:double</code>. </p><p xmlns:e=\"http://www.w3.org/1999/XSL/Spec/ElementSyntax\">Duration values must either all be <code>xs:yearMonthDuration</code> values or must all\n             be <code>xs:dayTimeDuration</code> values. For numeric values, the numeric promotion\n             rules defined in <specref ref=\"op.numeric\"/> are used to promote all values to a single\n             common type. After these operations, <code>$arg</code> must contain items of a single\n             type, which must be one of the four numeric types, <code>xs:yearMonthDuration</code> or\n                <code>xs:dayTimeDuration</code> or one if its subtypes.</p><p xmlns:e=\"http://www.w3.org/1999/XSL/Spec/ElementSyntax\">The function returns the average of the values as <code>sum($arg) div\n             count($arg)</code>; but the implementation may use an otherwise equivalent algorithm\n             that avoids arithmetic overflow.</p><p xmlns:e=\"http://www.w3.org/1999/XSL/Spec/ElementSyntax\" diff=\"del\" at=\"F\">For detailed type semantics, see [Formal Semantics].</p><p xmlns:e=\"http://www.w3.org/1999/XSL/Spec/ElementSyntax\">A type error is raised <errorref class=\"RG\" code=\"0006\"/> if the input sequence contains\n             items of incompatible types, as described above.</p></div>\n", "summary" : "<p>  Returns the average of the values in the input sequence  $arg , that\n             is, the sum of the values divided by the number of values.</p>", "annotation_str" : "", "annotations" : [  ], "updating" : false, "parameters" : [ { "name" : "arg", "type" : "xs:anyAtomicType", "occurrence" : "*", "description" : "" } ], "returns" : { "type" : "xs:anyAtomicType?", "description" : "" }, "errors" : [  ] }, { "isDocumented" : true, "arity" : 0, "name" : "base-uri", "qname" : "fn:base-uri", "signature" : "() as xs:anyURI? external", "description" : " <div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"><p xmlns:e=\"http://www.w3.org/1999/XSL/Spec/ElementSyntax\">Returns the base URI of a node.</p><p xmlns:e=\"http://www.w3.org/1999/XSL/Spec/ElementSyntax\"><example role=\"signature\"><proto name=\"base-uri\" return-type=\"xs:anyURI?\" isOp=\"no\" prefix=\"fn\" returnEmptyOk=\"no\" returnSeq=\"no\" returnVaries=\"no\" isSchema=\"no\" isDatatype=\"no\" isSpecial=\"no\"/></example><example role=\"signature\"><proto name=\"base-uri\" return-type=\"xs:anyURI?\" isOp=\"no\" prefix=\"fn\" returnEmptyOk=\"no\" returnSeq=\"no\" returnVaries=\"no\" isSchema=\"no\" isDatatype=\"no\" isSpecial=\"no\"><arg name=\"arg\" type=\"node()?\"/></proto></example></p><p xmlns:e=\"http://www.w3.org/1999/XSL/Spec/ElementSyntax\">The zero-argument form of this function is <termref def=\"dt-deterministic\">deterministic</termref>, <termref def=\"dt-context-dependent\">context-dependent</termref>,  and <termref def=\"dt-focus-dependent\">focus-dependent</termref>. </p><p xmlns:e=\"http://www.w3.org/1999/XSL/Spec/ElementSyntax\">The one-argument form of this function is <termref def=\"dt-deterministic\">deterministic</termref>, <termref def=\"dt-context-independent\">context-independent</termref>,  and <termref def=\"dt-focus-independent\">focus-independent</termref>. </p><p xmlns:e=\"http://www.w3.org/1999/XSL/Spec/ElementSyntax\" diff=\"add\" at=\"B\">The zero-argument version of the function returns the base URI of the\n             context node: it is equivalent to calling <code>fn:base-uri(.)</code>.</p><p xmlns:e=\"http://www.w3.org/1999/XSL/Spec/ElementSyntax\" diff=\"add\" at=\"B\">The single-argument version of the function behaves as follows:</p><olist xmlns:e=\"http://www.w3.org/1999/XSL/Spec/ElementSyntax\"><item>If <code>$arg</code> is the empty sequence, the function returns the empty\n                sequence.</item><item>Otherwise, the function returns the value of the <code>dm:base-uri</code> accessor\n                applied to the node <code>$arg</code>. This accessor is defined, for each kind of\n                node, in the XDM specification (See <xspecref spec=\"DM30\" ref=\"dm-base-uri\"/>).</item></olist><note xmlns:e=\"http://www.w3.org/1999/XSL/Spec/ElementSyntax\">As explained in XDM, document, element and processing-instruction nodes have a\n             base-uri property which may be empty. The base-uri property for all other node kinds is\n             the empty sequence. The dm:base-uri accessor returns the base-uri property of a node if\n             it exists and is non-empty; otherwise it returns the result of applying the dm:base-uri\n             accessor to its parent, recursively. If the node does not have a parent, or if the\n             recursive ascent up the ancestor chain encounters a parentless node whose base-uri\n             property is empty, the empty sequence is returned. In the case of namespace nodes,\n             however, the result is always an empty sequence -- it does not depend on the base URI of\n             the parent element.</note><p xmlns:e=\"http://www.w3.org/1999/XSL/Spec/ElementSyntax\">See also <code>fn:static-base-uri</code>.</p><p xmlns:e=\"http://www.w3.org/1999/XSL/Spec/ElementSyntax\">The following errors may be raised when <code>$arg</code> is omitted:</p><ul xmlns:e=\"http://www.w3.org/1999/XSL/Spec/ElementSyntax\"><li><p>If the context\n                item is <xtermref ref=\"dt-absent\" spec=\"DM30\">absent</xtermref>, <phrase diff=\"add\" at=\"M\">dynamic error</phrase>\n                <xerrorref spec=\"XP\" class=\"DY\" code=\"0002\" type=\"dynamic\"/></p></li><li><p>If the context item is not a\n                node, <phrase diff=\"add\" at=\"M\">type error</phrase> <xerrorref spec=\"XP\" class=\"TY\" code=\"0004\" type=\"type\"/>.</p></li></ul></div>\n", "summary" : "<p>  Returns the base URI of a node.</p>", "annotation_str" : "", "annotations" : [  ], "updating" : false, "parameters" : [  ], "returns" : { "type" : "xs:anyURI?", "description" : "" }, "errors" : [  ] }, { "isDocumented" : true, "arity" : 1, "name" : "base-uri", "qname" : "fn:base-uri", "signature" : "($arg as node()?) as xs:anyURI? external", "description" : " <div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"><p xmlns:e=\"http://www.w3.org/1999/XSL/Spec/ElementSyntax\">Returns the base URI of a node.</p><p xmlns:e=\"http://www.w3.org/1999/XSL/Spec/ElementSyntax\"><example role=\"signature\"><proto name=\"base-uri\" return-type=\"xs:anyURI?\" isOp=\"no\" prefix=\"fn\" returnEmptyOk=\"no\" returnSeq=\"no\" returnVaries=\"no\" isSchema=\"no\" isDatatype=\"no\" isSpecial=\"no\"/></example><example role=\"signature\"><proto name=\"base-uri\" return-type=\"xs:anyURI?\" isOp=\"no\" prefix=\"fn\" returnEmptyOk=\"no\" returnSeq=\"no\" returnVaries=\"no\" isSchema=\"no\" isDatatype=\"no\" isSpecial=\"no\"><arg name=\"arg\" type=\"node()?\"/></proto></example></p><p xmlns:e=\"http://www.w3.org/1999/XSL/Spec/ElementSyntax\">The zero-argument form of this function is <termref def=\"dt-deterministic\">deterministic</termref>, <termref def=\"dt-context-dependent\">context-dependent</termref>,  and <termref def=\"dt-focus-dependent\">focus-dependent</termref>. </p><p xmlns:e=\"http://www.w3.org/1999/XSL/Spec/ElementSyntax\">The one-argument form of this function is <termref def=\"dt-deterministic\">deterministic</termref>, <termref def=\"dt-context-independent\">context-independent</termref>,  and <termref def=\"dt-focus-independent\">focus-independent</termref>. </p><p xmlns:e=\"http://www.w3.org/1999/XSL/Spec/ElementSyntax\" diff=\"add\" at=\"B\">The zero-argument version of the function returns the base URI of the\n             context node: it is equivalent to calling <code>fn:base-uri(.)</code>.</p><p xmlns:e=\"http://www.w3.org/1999/XSL/Spec/ElementSyntax\" diff=\"add\" at=\"B\">The single-argument version of the function behaves as follows:</p><olist xmlns:e=\"http://www.w3.org/1999/XSL/Spec/ElementSyntax\"><item>If <code>$arg</code> is the empty sequence, the function returns the empty\n                sequence.</item><item>Otherwise, the function returns the value of the <code>dm:base-uri</code> accessor\n                applied to the node <code>$arg</code>. This accessor is defined, for each kind of\n                node, in the XDM specification (See <xspecref spec=\"DM30\" ref=\"dm-base-uri\"/>).</item></olist><note xmlns:e=\"http://www.w3.org/1999/XSL/Spec/ElementSyntax\">As explained in XDM, document, element and processing-instruction nodes have a\n             base-uri property which may be empty. The base-uri property for all other node kinds is\n             the empty sequence. The dm:base-uri accessor returns the base-uri property of a node if\n             it exists and is non-empty; otherwise it returns the result of applying the dm:base-uri\n             accessor to its parent, recursively. If the node does not have a parent, or if the\n             recursive ascent up the ancestor chain encounters a parentless node whose base-uri\n             property is empty, the empty sequence is returned. In the case of namespace nodes,\n             however, the result is always an empty sequence -- it does not depend on the base URI of\n             the parent element.</note><p xmlns:e=\"http://www.w3.org/1999/XSL/Spec/ElementSyntax\">See also <code>fn:static-base-uri</code>.</p><p xmlns:e=\"http://www.w3.org/1999/XSL/Spec/ElementSyntax\">The following errors may be raised when <code>$arg</code> is omitted:</p><ul xmlns:e=\"http://www.w3.org/1999/XSL/Spec/ElementSyntax\"><li><p>If the context\n                item is <xtermref ref=\"dt-absent\" spec=\"DM30\">absent</xtermref>, <phrase diff=\"add\" at=\"M\">dynamic error</phrase>\n                <xerrorref spec=\"XP\" class=\"DY\" code=\"0002\" type=\"dynamic\"/></p></li><li><p>If the context item is not a\n                node, <phrase diff=\"add\" at=\"M\">type error</phrase> <xerrorref spec=\"XP\" class=\"TY\" code=\"0004\" type=\"type\"/>.</p></li></ul></div>\n", "summary" : "<p>  Returns the base URI of a node.</p>", "annotation_str" : "", "annotations" : [  ], "updating" : false, "parameters" : [ { "name" : "arg", "type" : "node()", "occurrence" : "?", "description" : "" } ], "returns" : { "type" : "xs:anyURI?", "description" : "" }, "errors" : [  ] }, { "isDocumented" : true, "arity" : 1, "name" : "boolean", "qname" : "fn:boolean", "signature" : "($arg as item()*) as xs:boolean external", "description" : " <div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"><p xmlns:e=\"http://www.w3.org/1999/XSL/Spec/ElementSyntax\">Computes the effective boolean value of the sequence <code>$arg</code>.</p><p xmlns:e=\"http://www.w3.org/1999/XSL/Spec/ElementSyntax\"><example role=\"signature\"><proto name=\"boolean\" return-type=\"xs:boolean\" isOp=\"no\" prefix=\"fn\" returnEmptyOk=\"no\" returnSeq=\"no\" returnVaries=\"no\" isSchema=\"no\" isDatatype=\"no\" isSpecial=\"no\"><arg name=\"arg\" type=\"item()*\"/></proto></example></p><p xmlns:e=\"http://www.w3.org/1999/XSL/Spec/ElementSyntax\">The function computes the effective boolean value of a sequence, defined according to\n             the following rules. See also <xspecref spec=\"XP30\" ref=\"id-ebv\"/>.</p><ulist xmlns:e=\"http://www.w3.org/1999/XSL/Spec/ElementSyntax\"><item><p>If <code>$arg</code> is the empty sequence, <code>fn:boolean</code> returns\n                      <code>false</code>.</p></item><item><p>If <code>$arg</code> is a sequence whose first item is a node,\n                      <code>fn:boolean</code> returns <code>true</code>.</p></item><item><p>If <code>$arg</code> is a singleton value of type <code>xs:boolean</code> or a\n                   derived from <code>xs:boolean</code>, <code>fn:boolean</code> returns\n                      <code>$arg</code>.</p></item><item><p>If <code>$arg</code> is a singleton value of type <code>xs:string</code> or a type\n                   derived from <code>xs:string</code>, <code>xs:anyURI</code> or a type derived from\n                      <code>xs:anyURI</code> or <code>xs:untypedAtomic</code>,\n                      <code>fn:boolean</code> returns <code>false</code> if the operand value has\n                   zero length; otherwise it returns <code>true</code>.</p></item><item><p>If <code>$arg</code> is a singleton value of any numeric type or a type derived\n                   from a numeric type, <code>fn:boolean</code> returns <code>false</code> if the\n                   operand value is <code>NaN</code> or is numerically equal to zero; otherwise it\n                   returns <code>true</code>.</p></item><item><p>In all other cases, <code>fn:boolean</code> raises a type error <errorref class=\"RG\" code=\"0006\"/>.</p></item></ulist><p xmlns:e=\"http://www.w3.org/1999/XSL/Spec/ElementSyntax\" diff=\"del\" at=\"F\">The static semantics of this function are described in [Formal\n             Semantics].</p><p xmlns:e=\"http://www.w3.org/1999/XSL/Spec/ElementSyntax\">The result of this function is not necessarily the same as <code>$arg cast as\n                xs:boolean</code>. For example, <code>fn:boolean(\"false\")</code> returns the value\n                <code>true</code> whereas <code>\"false\" cast as xs:boolean</code> (which can also be\n             written <code>xs:boolean(\"false\")</code>) returns <code>false</code>.</p><p xmlns:e=\"http://www.w3.org/1999/XSL/Spec/ElementSyntax\">let <code>$abc</code> := <code>(\"a\", \"b\", \"\")</code></p><p xmlns:e=\"http://www.w3.org/1999/XSL/Spec/ElementSyntax\"><code>fn:boolean($abc)</code> raises a type error <errorref class=\"RG\" code=\"0006\"/>.</p><p xmlns:e=\"http://www.w3.org/1999/XSL/Spec/ElementSyntax\">The expression <code>fn:boolean($abc[1])</code> returns <code>true()</code>.</p><p xmlns:e=\"http://www.w3.org/1999/XSL/Spec/ElementSyntax\">The expression <code>fn:boolean($abc[0])</code> returns <code>false()</code>.</p><p xmlns:e=\"http://www.w3.org/1999/XSL/Spec/ElementSyntax\">The expression <code>fn:boolean($abc[3])</code> returns <code>false()</code>.</p></div>\n", "summary" : "<p>  Computes the effective boolean value of the sequence  $arg .</p>", "annotation_str" : "", "annotations" : [  ], "updating" : false, "parameters" : [ { "name" : "arg", "type" : "item()", "occurrence" : "*", "description" : "" } ], "returns" : { "type" : "xs:boolean", "description" : "" }, "errors" : [  ] }, { "isDocumented" : true, "arity" : 1, "name" : "ceiling", "qname" : "fn:ceiling", "signature" : "($arg as numeric?) as numeric? external", "description" : " <div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"><p xmlns:e=\"http://www.w3.org/1999/XSL/Spec/ElementSyntax\">Rounds <code>$arg</code> upwards to a whole number.</p><p xmlns:e=\"http://www.w3.org/1999/XSL/Spec/ElementSyntax\"><example role=\"signature\"><proto name=\"ceiling\" return-type=\"numeric?\" isOp=\"no\" prefix=\"fn\" returnEmptyOk=\"no\" returnSeq=\"no\" returnVaries=\"no\" isSchema=\"no\" isDatatype=\"no\" isSpecial=\"no\"><arg name=\"arg\" type=\"numeric?\"/></proto></example></p><p xmlns:e=\"http://www.w3.org/1999/XSL/Spec/ElementSyntax\">This function is <termref def=\"dt-deterministic\">deterministic</termref>, <termref def=\"dt-context-independent\">context-independent</termref>,  and <termref def=\"dt-focus-independent\">focus-independent</termref>. </p><p xmlns:e=\"http://www.w3.org/1999/XSL/Spec/ElementSyntax\">General rules: see <specref ref=\"numeric-value-functions\"/>.</p><p xmlns:e=\"http://www.w3.org/1999/XSL/Spec/ElementSyntax\">The function returns the smallest (closest to negative infinity) number with no\n             fractional part that is not less than the value of <code>$arg</code>.</p><p xmlns:e=\"http://www.w3.org/1999/XSL/Spec/ElementSyntax\">If the type of <code>$arg</code> is one of the four numeric types <code>xs:float</code>,\n                <code>xs:double</code>, <code>xs:decimal</code> or <code>xs:integer</code> the type\n             of the result is the same as the type of <code>$arg</code>. If the type of\n                <code>$arg</code> is a type derived from one of the numeric types, the result is an\n             instance of the base numeric type.</p><p xmlns:e=\"http://www.w3.org/1999/XSL/Spec/ElementSyntax\">For <code>xs:float</code> and <code>xs:double</code> arguments, if the argument is\n             positive zero, then positive zero is returned. If the argument is negative zero, then\n             negative zero is returned. If the argument is less than zero and greater than -1,\n             negative zero is returned.</p><p xmlns:e=\"http://www.w3.org/1999/XSL/Spec/ElementSyntax\" diff=\"del\" at=\"F\">For detailed type semantics, see [Formal Semantics].</p><p xmlns:e=\"http://www.w3.org/1999/XSL/Spec/ElementSyntax\">The expression <code>fn:ceiling(10.5)</code> returns <code>11</code>.</p><p xmlns:e=\"http://www.w3.org/1999/XSL/Spec/ElementSyntax\">The expression <code>fn:ceiling(-10.5)</code> returns <code>-10</code>.</p></div>\n", "summary" : "<p>  Rounds  $arg  upwards to a whole number.</p>", "annotation_str" : "", "annotations" : [  ], "updating" : false, "parameters" : [ { "name" : "arg", "type" : "numeric", "occurrence" : "?", "description" : "" } ], "returns" : { "type" : "numeric?", "description" : "" }, "errors" : [  ] }, { "isDocumented" : true, "arity" : 2, "name" : "codepoint-equal", "qname" : "fn:codepoint-equal", "signature" : "($comparand1 as xs:string?, $comparand2 as xs:string?) as xs:boolean? external", "description" : " <div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"><p xmlns:e=\"http://www.w3.org/1999/XSL/Spec/ElementSyntax\">Returns true if two strings are equal, considered codepoint-by-codepoint.</p><p xmlns:e=\"http://www.w3.org/1999/XSL/Spec/ElementSyntax\"><example role=\"signature\"><proto name=\"codepoint-equal\" return-type=\"xs:boolean?\" isOp=\"no\" prefix=\"fn\" returnEmptyOk=\"no\" returnSeq=\"no\" returnVaries=\"no\" isSchema=\"no\" isDatatype=\"no\" isSpecial=\"no\"><arg name=\"comparand1\" type=\"xs:string?\"/><arg name=\"comparand2\" type=\"xs:string?\"/></proto></example></p><p xmlns:e=\"http://www.w3.org/1999/XSL/Spec/ElementSyntax\">This function is <termref def=\"dt-deterministic\">deterministic</termref>, <termref def=\"dt-context-independent\">context-independent</termref>,  and <termref def=\"dt-focus-independent\">focus-independent</termref>. </p><p xmlns:e=\"http://www.w3.org/1999/XSL/Spec/ElementSyntax\">If either argument is the empty sequence, the function returns the empty sequence. </p><p xmlns:e=\"http://www.w3.org/1999/XSL/Spec/ElementSyntax\">Otherwise, the function returns <code>true</code> or <code>false</code> depending on\n             whether the value of <code>$comparand1</code> is equal to the value of\n                <code>$comparand2</code>, according to the Unicode codepoint collation\n                (<code>http://www.w3.org/2005/xpath-functions/collation/codepoint</code>).</p><p xmlns:e=\"http://www.w3.org/1999/XSL/Spec/ElementSyntax\">This function allows <code>xs:anyURI</code> values to be compared without having to\n             specify the Unicode codepoint collation.</p></div>\n", "summary" : "<p>  Returns true if two strings are equal, considered codepoint-by-codepoint.</p>", "annotation_str" : "", "annotations" : [  ], "updating" : false, "parameters" : [ { "name" : "comparand1", "type" : "xs:string", "occurrence" : "?", "description" : "" }, { "name" : "comparand2", "type" : "xs:string", "occurrence" : "?", "description" : "" } ], "returns" : { "type" : "xs:boolean?", "description" : "" }, "errors" : [  ] }, { "isDocumented" : true, "arity" : 1, "name" : "codepoints-to-string", "qname" : "fn:codepoints-to-string", "signature" : "($arg as xs:integer*) as xs:string external", "description" : " <div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"><p xmlns:e=\"http://www.w3.org/1999/XSL/Spec/ElementSyntax\">Creates an <code>xs:string</code> from a sequence of <termref def=\"codepoint\">codepoints</termref>.</p><p xmlns:e=\"http://www.w3.org/1999/XSL/Spec/ElementSyntax\"><example role=\"signature\"><proto name=\"codepoints-to-string\" return-type=\"xs:string\" isOp=\"no\" prefix=\"fn\" returnEmptyOk=\"no\" returnSeq=\"no\" returnVaries=\"no\" isSchema=\"no\" isDatatype=\"no\" isSpecial=\"no\"><arg name=\"arg\" type=\"xs:integer*\"/></proto></example></p><p xmlns:e=\"http://www.w3.org/1999/XSL/Spec/ElementSyntax\">This function is <termref def=\"dt-deterministic\">deterministic</termref>, <termref def=\"dt-context-independent\">context-independent</termref>,  and <termref def=\"dt-focus-independent\">focus-independent</termref>. </p><p xmlns:e=\"http://www.w3.org/1999/XSL/Spec/ElementSyntax\">The function returns the string made up from the <termref def=\"character\">characters</termref> whose Unicode <termref def=\"codepoint\">codepoints</termref> are\n             supplied in <code>$arg</code>. This will be the zero-length string if <code>$arg</code>\n             is the empty sequence. </p><p xmlns:e=\"http://www.w3.org/1999/XSL/Spec/ElementSyntax\">A <phrase diff=\"add\" at=\"M\">dynamic</phrase> error is raised <errorref class=\"CH\" code=\"0001\"/> if any of the codepoints in\n                <code>$arg</code> is not a permitted XML character.</p></div>\n", "summary" : "<p>  Creates an  xs:string  from a sequence of  codepoints .</p>", "annotation_str" : "", "annotations" : [  ], "updating" : false, "parameters" : [ { "name" : "arg", "type" : "xs:integer", "occurrence" : "*", "description" : "" } ], "returns" : { "type" : "xs:string", "description" : "" }, "errors" : [  ] }, { "isDocumented" : true, "arity" : 1, "name" : "codepoints-to-string", "qname" : "fn:codepoints-to-string", "signature" : "($arg as xs:integer*) as xs:string external", "description" : " <div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"><p xmlns:e=\"http://www.w3.org/1999/XSL/Spec/ElementSyntax\">Creates an <code>xs:string</code> from a sequence of <termref def=\"codepoint\">codepoints</termref>.</p><p xmlns:e=\"http://www.w3.org/1999/XSL/Spec/ElementSyntax\"><example role=\"signature\"><proto name=\"codepoints-to-string\" return-type=\"xs:string\" isOp=\"no\" prefix=\"fn\" returnEmptyOk=\"no\" returnSeq=\"no\" returnVaries=\"no\" isSchema=\"no\" isDatatype=\"no\" isSpecial=\"no\"><arg name=\"arg\" type=\"xs:integer*\"/></proto></example></p><p xmlns:e=\"http://www.w3.org/1999/XSL/Spec/ElementSyntax\">This function is <termref def=\"dt-deterministic\">deterministic</termref>, <termref def=\"dt-context-independent\">context-independent</termref>,  and <termref def=\"dt-focus-independent\">focus-independent</termref>. </p><p xmlns:e=\"http://www.w3.org/1999/XSL/Spec/ElementSyntax\">The function returns the string made up from the <termref def=\"character\">characters</termref> whose Unicode <termref def=\"codepoint\">codepoints</termref> are\n             supplied in <code>$arg</code>. This will be the zero-length string if <code>$arg</code>\n             is the empty sequence. </p><p xmlns:e=\"http://www.w3.org/1999/XSL/Spec/ElementSyntax\">A <phrase diff=\"add\" at=\"M\">dynamic</phrase> error is raised <errorref class=\"CH\" code=\"0001\"/> if any of the codepoints in\n                <code>$arg</code> is not a permitted XML character.</p></div>\n", "summary" : "<p>  Creates an  xs:string  from a sequence of  codepoints .</p>", "annotation_str" : "", "annotations" : [  ], "updating" : false, "parameters" : [ { "name" : "arg", "type" : "xs:integer", "occurrence" : "*", "description" : "" } ], "returns" : { "type" : "xs:string", "description" : "" }, "errors" : [  ] }, { "isDocumented" : true, "arity" : 0, "name" : "collection", "qname" : "fn:collection", "signature" : "() as node()* external", "description" : " <div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"><p xmlns:e=\"http://www.w3.org/1999/XSL/Spec/ElementSyntax\">Returns a sequence of nodes representing a collection of documents indentified\n             by a collection URI; or a default collection if no URI is supplied.</p><p xmlns:e=\"http://www.w3.org/1999/XSL/Spec/ElementSyntax\"><example role=\"signature\"><proto name=\"collection\" return-type=\"node()*\" isOp=\"no\" prefix=\"fn\" returnEmptyOk=\"no\" returnSeq=\"no\" returnVaries=\"no\" isSchema=\"no\" isDatatype=\"no\" isSpecial=\"no\"/></example><example role=\"signature\"><proto name=\"collection\" return-type=\"node()*\" isOp=\"no\" prefix=\"fn\" returnEmptyOk=\"no\" returnSeq=\"no\" returnVaries=\"no\" isSchema=\"no\" isDatatype=\"no\" isSpecial=\"no\"><arg name=\"arg\" type=\"xs:string?\"/></proto></example></p><p xmlns:e=\"http://www.w3.org/1999/XSL/Spec/ElementSyntax\">This function is <termref def=\"dt-deterministic\">deterministic</termref>, <termref def=\"dt-context-dependent\">context-dependent</termref>,  and <termref def=\"dt-focus-independent\">focus-independent</termref>.  It depends on\n \t\tavailable node collections, and static base uri.\n \t</p><p xmlns:e=\"http://www.w3.org/1999/XSL/Spec/ElementSyntax\">This function takes an <code>xs:string</code> as argument and returns a sequence of\n             nodes obtained by interpreting <code>$arg</code> as an <code>xs:anyURI</code> and\n             resolving it according to the mapping specified in <term>Available node collections</term>\n             described in <xspecref spec=\"XP30\" ref=\"id-xp-evaluation-context-components\"/>.</p><p xmlns:e=\"http://www.w3.org/1999/XSL/Spec/ElementSyntax\">If <term>Available node collections</term> provides a mapping from this string to a sequence\n             of nodes, the function returns that sequence. If <term>Available node collections</term> maps\n             the string to an empty sequence, then the function returns an empty sequence.</p><p xmlns:e=\"http://www.w3.org/1999/XSL/Spec/ElementSyntax\">If <code>$arg</code> is not specified, the function returns the sequence of the nodes in\n             the default node collection in the dynamic context. See <xspecref spec=\"XP30\" ref=\"id-xp-evaluation-context-components\"/>. </p><p xmlns:e=\"http://www.w3.org/1999/XSL/Spec/ElementSyntax\">If the value of <code>$arg</code> is a relative <code>xs:anyURI</code>, it is resolved\n             against the value of the base-URI property from the static context. </p><p xmlns:e=\"http://www.w3.org/1999/XSL/Spec/ElementSyntax\">If <code>$arg</code> is the empty sequence, the function behaves as if it had been\n             called without an argument. See above.</p><p xmlns:e=\"http://www.w3.org/1999/XSL/Spec/ElementSyntax\">By default, this function is <termref def=\"deterministic\">deterministic</termref>.\n             This means that repeated\n             calls on the function with the same argument will return the same result. However, for\n             performance reasons, implementations may provide a user option to evaluate the function\n             without a guarantee of determinism. The manner in which any such option is provided is\n                <termref def=\"implementation-defined\"/>. If the user has not selected such an option,\n             a call to this function must either return a deterministic result or must raise a <phrase diff=\"add\" at=\"L\">dynamic</phrase> error\n                <errorref class=\"DC\" code=\"0003\"/>.</p><p xmlns:e=\"http://www.w3.org/1999/XSL/Spec/ElementSyntax\" diff=\"add\" at=\"G\">There is no requirement that the returned nodes should be in document\n             order, nor is there a requirement that the result should contain no duplicates.</p><p xmlns:e=\"http://www.w3.org/1999/XSL/Spec/ElementSyntax\" diff=\"del\" at=\"F\">For detailed type semantics, see [Formal Semantics].</p><p xmlns:e=\"http://www.w3.org/1999/XSL/Spec/ElementSyntax\">A <phrase diff=\"add\" at=\"L\">dynamic</phrase> error is raised <errorref class=\"DC\" code=\"0002\"/> if no URI is supplied and the\n             value of the default collection is <xtermref ref=\"dt-absent\" spec=\"DM30\">absent</xtermref>.</p><p xmlns:e=\"http://www.w3.org/1999/XSL/Spec/ElementSyntax\" diff=\"chg\" at=\"J\">A <phrase diff=\"add\" at=\"M\">dynamic</phrase> error is raised <errorref class=\"DC\" code=\"0002\"/> if <term>available\n                node collections</term> provides no mapping for the absolutized URI.</p><p xmlns:e=\"http://www.w3.org/1999/XSL/Spec/ElementSyntax\">A <phrase diff=\"add\" at=\"L\">dynamic</phrase> error is raised <errorref class=\"DC\" code=\"0004\"/> if <code>$arg</code> is not a\n             valid <code>xs:anyURI</code>.</p></div>\n", "summary" : "<p>  Returns a sequence of nodes representing a collection of documents indentified\n             by a collection URI; or a default collection if no URI is supplied.</p>", "annotation_str" : "", "annotations" : [  ], "updating" : false, "parameters" : [  ], "returns" : { "type" : "node()*", "description" : "" }, "errors" : [  ] }, { "isDocumented" : true, "arity" : 1, "name" : "collection", "qname" : "fn:collection", "signature" : "($arg as xs:string?) as node()* external", "description" : " <div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"><p xmlns:e=\"http://www.w3.org/1999/XSL/Spec/ElementSyntax\">Returns a sequence of nodes representing a collection of documents indentified\n             by a collection URI; or a default collection if no URI is supplied.</p><p xmlns:e=\"http://www.w3.org/1999/XSL/Spec/ElementSyntax\"><example role=\"signature\"><proto name=\"collection\" return-type=\"node()*\" isOp=\"no\" prefix=\"fn\" returnEmptyOk=\"no\" returnSeq=\"no\" returnVaries=\"no\" isSchema=\"no\" isDatatype=\"no\" isSpecial=\"no\"/></example><example role=\"signature\"><proto name=\"collection\" return-type=\"node()*\" isOp=\"no\" prefix=\"fn\" returnEmptyOk=\"no\" returnSeq=\"no\" returnVaries=\"no\" isSchema=\"no\" isDatatype=\"no\" isSpecial=\"no\"><arg name=\"arg\" type=\"xs:string?\"/></proto></example></p><p xmlns:e=\"http://www.w3.org/1999/XSL/Spec/ElementSyntax\">This function is <termref def=\"dt-deterministic\">deterministic</termref>, <termref def=\"dt-context-dependent\">context-dependent</termref>,  and <termref def=\"dt-focus-independent\">focus-independent</termref>.  It depends on\n \t\tavailable node collections, and static base uri.\n \t</p><p xmlns:e=\"http://www.w3.org/1999/XSL/Spec/ElementSyntax\">This function takes an <code>xs:string</code> as argument and returns a sequence of\n             nodes obtained by interpreting <code>$arg</code> as an <code>xs:anyURI</code> and\n             resolving it according to the mapping specified in <term>Available node collections</term>\n             described in <xspecref spec=\"XP30\" ref=\"id-xp-evaluation-context-components\"/>.</p><p xmlns:e=\"http://www.w3.org/1999/XSL/Spec/ElementSyntax\">If <term>Available node collections</term> provides a mapping from this string to a sequence\n             of nodes, the function returns that sequence. If <term>Available node collections</term> maps\n             the string to an empty sequence, then the function returns an empty sequence.</p><p xmlns:e=\"http://www.w3.org/1999/XSL/Spec/ElementSyntax\">If <code>$arg</code> is not specified, the function returns the sequence of the nodes in\n             the default node collection in the dynamic context. See <xspecref spec=\"XP30\" ref=\"id-xp-evaluation-context-components\"/>. </p><p xmlns:e=\"http://www.w3.org/1999/XSL/Spec/ElementSyntax\">If the value of <code>$arg</code> is a relative <code>xs:anyURI</code>, it is resolved\n             against the value of the base-URI property from the static context. </p><p xmlns:e=\"http://www.w3.org/1999/XSL/Spec/ElementSyntax\">If <code>$arg</code> is the empty sequence, the function behaves as if it had been\n             called without an argument. See above.</p><p xmlns:e=\"http://www.w3.org/1999/XSL/Spec/ElementSyntax\">By default, this function is <termref def=\"deterministic\">deterministic</termref>.\n             This means that repeated\n             calls on the function with the same argument will return the same result. However, for\n             performance reasons, implementations may provide a user option to evaluate the function\n             without a guarantee of determinism. The manner in which any such option is provided is\n                <termref def=\"implementation-defined\"/>. If the user has not selected such an option,\n             a call to this function must either return a deterministic result or must raise a <phrase diff=\"add\" at=\"L\">dynamic</phrase> error\n                <errorref class=\"DC\" code=\"0003\"/>.</p><p xmlns:e=\"http://www.w3.org/1999/XSL/Spec/ElementSyntax\" diff=\"add\" at=\"G\">There is no requirement that the returned nodes should be in document\n             order, nor is there a requirement that the result should contain no duplicates.</p><p xmlns:e=\"http://www.w3.org/1999/XSL/Spec/ElementSyntax\" diff=\"del\" at=\"F\">For detailed type semantics, see [Formal Semantics].</p><p xmlns:e=\"http://www.w3.org/1999/XSL/Spec/ElementSyntax\">A <phrase diff=\"add\" at=\"L\">dynamic</phrase> error is raised <errorref class=\"DC\" code=\"0002\"/> if no URI is supplied and the\n             value of the default collection is <xtermref ref=\"dt-absent\" spec=\"DM30\">absent</xtermref>.</p><p xmlns:e=\"http://www.w3.org/1999/XSL/Spec/ElementSyntax\" diff=\"chg\" at=\"J\">A <phrase diff=\"add\" at=\"M\">dynamic</phrase> error is raised <errorref class=\"DC\" code=\"0002\"/> if <term>available\n                node collections</term> provides no mapping for the absolutized URI.</p><p xmlns:e=\"http://www.w3.org/1999/XSL/Spec/ElementSyntax\">A <phrase diff=\"add\" at=\"L\">dynamic</phrase> error is raised <errorref class=\"DC\" code=\"0004\"/> if <code>$arg</code> is not a\n             valid <code>xs:anyURI</code>.</p></div>\n", "summary" : "<p>  Returns a sequence of nodes representing a collection of documents indentified\n             by a collection URI; or a default collection if no URI is supplied.</p>", "annotation_str" : "", "annotations" : [  ], "updating" : false, "parameters" : [ { "name" : "arg", "type" : "xs:string", "occurrence" : "?", "description" : "" } ], "returns" : { "type" : "node()*", "description" : "" }, "errors" : [  ] }, { "isDocumented" : true, "arity" : 2, "name" : "compare", "qname" : "fn:compare", "signature" : "($comparand1 as xs:string?, $comparand2 as xs:string?) as xs:integer? external", "description" : " <div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"><p xmlns:e=\"http://www.w3.org/1999/XSL/Spec/ElementSyntax\">Returns -1, 0, or 1, depending on whether <code>$comparand1</code> collates\n             before, equal to, or after <code>$comparand2</code> according to the rules of a selected\n             collation.</p><p xmlns:e=\"http://www.w3.org/1999/XSL/Spec/ElementSyntax\"><example role=\"signature\"><proto name=\"compare\" return-type=\"xs:integer?\" isOp=\"no\" prefix=\"fn\" returnEmptyOk=\"no\" returnSeq=\"no\" returnVaries=\"no\" isSchema=\"no\" isDatatype=\"no\" isSpecial=\"no\"><arg name=\"comparand1\" type=\"xs:string?\"/><arg name=\"comparand2\" type=\"xs:string?\"/></proto></example><example role=\"signature\"><proto name=\"compare\" return-type=\"xs:integer?\" isOp=\"no\" prefix=\"fn\" returnEmptyOk=\"no\" returnSeq=\"no\" returnVaries=\"no\" isSchema=\"no\" isDatatype=\"no\" isSpecial=\"no\"><arg name=\"comparand1\" type=\"xs:string?\"/><arg name=\"comparand2\" type=\"xs:string?\"/><arg name=\"collation\" type=\"xs:string\"/></proto></example></p><p xmlns:e=\"http://www.w3.org/1999/XSL/Spec/ElementSyntax\">The two-argument form of this function is <termref def=\"dt-deterministic\">deterministic</termref>, <termref def=\"dt-context-dependent\">context-dependent</termref>,  and <termref def=\"dt-focus-independent\">focus-independent</termref>.  It depends on\n \t\tcollations.\n \t</p><p xmlns:e=\"http://www.w3.org/1999/XSL/Spec/ElementSyntax\">The three-argument form of this function is <termref def=\"dt-deterministic\">deterministic</termref>, <termref def=\"dt-context-dependent\">context-dependent</termref>,  and <termref def=\"dt-focus-independent\">focus-independent</termref>.  It depends on\n \t\tcollations, and static base uri.\n \t</p><p xmlns:e=\"http://www.w3.org/1999/XSL/Spec/ElementSyntax\">Returns -1, 0, or 1, depending on whether the value of the <code>$comparand1</code> is\n             respectively less than, equal to, or greater than the value of <code>$comparand2</code>,\n             according to the rules of the collation that is used. </p><p xmlns:e=\"http://www.w3.org/1999/XSL/Spec/ElementSyntax\">The collation used by this function is determined according to the rules in <specref ref=\"choosing-a-collation\"/>. </p><p xmlns:e=\"http://www.w3.org/1999/XSL/Spec/ElementSyntax\">If either <code>$comparand1</code> or <code>$comparand2</code> is the empty sequence,\n             the function returns the empty sequence.</p><p xmlns:e=\"http://www.w3.org/1999/XSL/Spec/ElementSyntax\">This function, called with the first signature, defines the semantics of the \"eq\", \"ne\",\n             \"gt\", \"lt\", \"le\" and \"ge\" operators on <code>xs:string</code> values.</p><p xmlns:e=\"http://www.w3.org/1999/XSL/Spec/ElementSyntax\">The expression <code>fn:compare('abc', 'abc')</code> returns <code>0</code>.</p><p xmlns:e=\"http://www.w3.org/1999/XSL/Spec/ElementSyntax\">The expression <code>fn:compare('Strasse', 'Straße')</code> returns <code>0</code>. <emph>(Assuming the default collation includes provisions that equate\n                      <quote>ss</quote> and the (German) character <quote>ß</quote>\n                      (<quote>sharp-s</quote>). Otherwise, the returned value depends on the\n                   semantics of the default collation.).</emph></p><p xmlns:e=\"http://www.w3.org/1999/XSL/Spec/ElementSyntax\">The expression <code>fn:compare('Strasse', 'Straße',\n                   'http://example.com/deutsch')</code> returns <code>0</code>. <emph>(Assuming the collation identified by the URI\n                      <code>http://example.com/deutsch</code> includes provisions that equate\n                      <quote>ss</quote> and the (German) character <quote>ß</quote>\n                      (<quote>sharp-s</quote>). Otherwise, the returned value depends on the\n                   semantics of that collation.).</emph></p><p xmlns:e=\"http://www.w3.org/1999/XSL/Spec/ElementSyntax\">The expression <code>fn:compare('Strassen', 'Straße')</code> returns <code>1</code>. <emph>(Assuming the default collation includes provisions that treat\n                   differences between <quote>ss</quote> and the (German) character <quote>ß</quote>\n                      (<quote>sharp-s</quote>) with less strength than the differences between the\n                   base characters, such as the final <quote>n</quote>. ).</emph></p></div>\n", "summary" : "<p>  Returns -1, 0, or 1, depending on whether  $comparand1  collates\n             before, equal to, or after  $comparand2  according to the rules of a selected\n             collation.</p>", "annotation_str" : "", "annotations" : [  ], "updating" : false, "parameters" : [ { "name" : "comparand1", "type" : "xs:string", "occurrence" : "?", "description" : "" }, { "name" : "comparand2", "type" : "xs:string", "occurrence" : "?", "description" : "" } ], "returns" : { "type" : "xs:integer?", "description" : "" }, "errors" : [  ] }, { "isDocumented" : true, "arity" : 3, "name" : "compare", "qname" : "fn:compare", "signature" : "($comparand1 as xs:string?, $comparand2 as xs:string?, $collation as xs:string) as xs:integer? external", "description" : " <div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"><p xmlns:e=\"http://www.w3.org/1999/XSL/Spec/ElementSyntax\">Returns -1, 0, or 1, depending on whether <code>$comparand1</code> collates\n             before, equal to, or after <code>$comparand2</code> according to the rules of a selected\n             collation.</p><p xmlns:e=\"http://www.w3.org/1999/XSL/Spec/ElementSyntax\"><example role=\"signature\"><proto name=\"compare\" return-type=\"xs:integer?\" isOp=\"no\" prefix=\"fn\" returnEmptyOk=\"no\" returnSeq=\"no\" returnVaries=\"no\" isSchema=\"no\" isDatatype=\"no\" isSpecial=\"no\"><arg name=\"comparand1\" type=\"xs:string?\"/><arg name=\"comparand2\" type=\"xs:string?\"/></proto></example><example role=\"signature\"><proto name=\"compare\" return-type=\"xs:integer?\" isOp=\"no\" prefix=\"fn\" returnEmptyOk=\"no\" returnSeq=\"no\" returnVaries=\"no\" isSchema=\"no\" isDatatype=\"no\" isSpecial=\"no\"><arg name=\"comparand1\" type=\"xs:string?\"/><arg name=\"comparand2\" type=\"xs:string?\"/><arg name=\"collation\" type=\"xs:string\"/></proto></example></p><p xmlns:e=\"http://www.w3.org/1999/XSL/Spec/ElementSyntax\">The two-argument form of this function is <termref def=\"dt-deterministic\">deterministic</termref>, <termref def=\"dt-context-dependent\">context-dependent</termref>,  and <termref def=\"dt-focus-independent\">focus-independent</termref>.  It depends on\n \t\tcollations.\n \t</p><p xmlns:e=\"http://www.w3.org/1999/XSL/Spec/ElementSyntax\">The three-argument form of this function is <termref def=\"dt-deterministic\">deterministic</termref>, <termref def=\"dt-context-dependent\">context-dependent</termref>,  and <termref def=\"dt-focus-independent\">focus-independent</termref>.  It depends on\n \t\tcollations, and static base uri.\n \t</p><p xmlns:e=\"http://www.w3.org/1999/XSL/Spec/ElementSyntax\">Returns -1, 0, or 1, depending on whether the value of the <code>$comparand1</code> is\n             respectively less than, equal to, or greater than the value of <code>$comparand2</code>,\n             according to the rules of the collation that is used. </p><p xmlns:e=\"http://www.w3.org/1999/XSL/Spec/ElementSyntax\">The collation used by this function is determined according to the rules in <specref ref=\"choosing-a-collation\"/>. </p><p xmlns:e=\"http://www.w3.org/1999/XSL/Spec/ElementSyntax\">If either <code>$comparand1</code> or <code>$comparand2</code> is the empty sequence,\n             the function returns the empty sequence.</p><p xmlns:e=\"http://www.w3.org/1999/XSL/Spec/ElementSyntax\">This function, called with the first signature, defines the semantics of the \"eq\", \"ne\",\n             \"gt\", \"lt\", \"le\" and \"ge\" operators on <code>xs:string</code> values.</p><p xmlns:e=\"http://www.w3.org/1999/XSL/Spec/ElementSyntax\">The expression <code>fn:compare('abc', 'abc')</code> returns <code>0</code>.</p><p xmlns:e=\"http://www.w3.org/1999/XSL/Spec/ElementSyntax\">The expression <code>fn:compare('Strasse', 'Straße')</code> returns <code>0</code>. <emph>(Assuming the default collation includes provisions that equate\n                      <quote>ss</quote> and the (German) character <quote>ß</quote>\n                      (<quote>sharp-s</quote>). Otherwise, the returned value depends on the\n                   semantics of the default collation.).</emph></p><p xmlns:e=\"http://www.w3.org/1999/XSL/Spec/ElementSyntax\">The expression <code>fn:compare('Strasse', 'Straße',\n                   'http://example.com/deutsch')</code> returns <code>0</code>. <emph>(Assuming the collation identified by the URI\n                      <code>http://example.com/deutsch</code> includes provisions that equate\n                      <quote>ss</quote> and the (German) character <quote>ß</quote>\n                      (<quote>sharp-s</quote>). Otherwise, the returned value depends on the\n                   semantics of that collation.).</emph></p><p xmlns:e=\"http://www.w3.org/1999/XSL/Spec/ElementSyntax\">The expression <code>fn:compare('Strassen', 'Straße')</code> returns <code>1</code>. <emph>(Assuming the default collation includes provisions that treat\n                   differences between <quote>ss</quote> and the (German) character <quote>ß</quote>\n                      (<quote>sharp-s</quote>) with less strength than the differences between the\n                   base characters, such as the final <quote>n</quote>. ).</emph></p></div>\n", "summary" : "<p>  Returns -1, 0, or 1, depending on whether  $comparand1  collates\n             before, equal to, or after  $comparand2  according to the rules of a selected\n             collation.</p>", "annotation_str" : "", "annotations" : [  ], "updating" : false, "parameters" : [ { "name" : "comparand1", "type" : "xs:string", "occurrence" : "?", "description" : "" }, { "name" : "comparand2", "type" : "xs:string", "occurrence" : "?", "description" : "" }, { "name" : "collation", "type" : "xs:string", "occurrence" : null, "description" : "" } ], "returns" : { "type" : "xs:integer?", "description" : "" }, "errors" : [  ] }, { "isDocumented" : true, "arity" : 2, "name" : "concat", "qname" : "fn:concat", "signature" : "($arg1 as xs:anyAtomicType?, $arg2 as xs:anyAtomicType?) as xs:string external", "description" : " <div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"><p xmlns:e=\"http://www.w3.org/1999/XSL/Spec/ElementSyntax\">Returns the concatenation of the string values of the arguments.</p><p xmlns:e=\"http://www.w3.org/1999/XSL/Spec/ElementSyntax\">\n          The two-argument form of this function defines the semantics of the \"||\" operator.</p><p xmlns:e=\"http://www.w3.org/1999/XSL/Spec/ElementSyntax\"><example role=\"signature\"><proto name=\"concat\" return-type=\"xs:string\" isOp=\"yes\" prefix=\"fn\" returnEmptyOk=\"no\" returnSeq=\"no\" returnVaries=\"no\" isSchema=\"no\" isDatatype=\"no\" isSpecial=\"no\"><arg name=\"arg1\" type=\"xs:anyAtomicType?\"/><arg name=\"arg2\" type=\"xs:anyAtomicType?\"/><arg name=\"...\" type=\"xs:anyAtomicType?\"/></proto></example></p><p xmlns:e=\"http://www.w3.org/1999/XSL/Spec/ElementSyntax\">This function is <termref def=\"dt-deterministic\">deterministic</termref>, <termref def=\"dt-context-independent\">context-independent</termref>,  and <termref def=\"dt-focus-independent\">focus-independent</termref>. </p><p xmlns:e=\"http://www.w3.org/1999/XSL/Spec/ElementSyntax\">This function accepts two or more <code>xs:anyAtomicType</code> arguments and casts each\n             one to <code>xs:string</code>. The function returns the <code>xs:string</code> that is\n             the concatenation of the values of its arguments after conversion. If any argument is\n             the empty sequence, that argument is treated as the zero-length string.</p><p xmlns:e=\"http://www.w3.org/1999/XSL/Spec/ElementSyntax\" diff=\"chg\" at=\"A-E19\">The <code>fn:concat</code> function is specified to allow two or\n             more arguments, which are concatenated together. This is the only function specified in\n             this document that allows a variable number of arguments. This capability is retained\n             for compatibility with <bibref ref=\"xpath\"/>. </p></div>\n", "summary" : "<p>  Returns the concatenation of the string values of the arguments.</p>", "annotation_str" : "", "annotations" : [  ], "updating" : false, "parameters" : [ { "name" : "arg1", "type" : "xs:anyAtomicType", "occurrence" : "?", "description" : "" }, { "name" : "arg2", "type" : "xs:anyAtomicType", "occurrence" : "?", "description" : "" } ], "returns" : { "type" : "xs:string", "description" : "" }, "errors" : [  ] }, { "isDocumented" : true, "arity" : 2, "name" : "contains", "qname" : "fn:contains", "signature" : "($arg1 as xs:string?, $arg2 as xs:string?) as xs:boolean external", "description" : " <div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"><p xmlns:e=\"http://www.w3.org/1999/XSL/Spec/ElementSyntax\">Returns true if the string <code>$arg1</code> contains <code>$arg2</code> as a\n             substring, taking collations into account.</p><p xmlns:e=\"http://www.w3.org/1999/XSL/Spec/ElementSyntax\"><example role=\"signature\"><proto name=\"contains\" return-type=\"xs:boolean\" isOp=\"no\" prefix=\"fn\" returnEmptyOk=\"no\" returnSeq=\"no\" returnVaries=\"no\" isSchema=\"no\" isDatatype=\"no\" isSpecial=\"no\"><arg name=\"arg1\" type=\"xs:string?\"/><arg name=\"arg2\" type=\"xs:string?\"/></proto></example><example role=\"signature\"><proto name=\"contains\" return-type=\"xs:boolean\" isOp=\"no\" prefix=\"fn\" returnEmptyOk=\"no\" returnSeq=\"no\" returnVaries=\"no\" isSchema=\"no\" isDatatype=\"no\" isSpecial=\"no\"><arg name=\"arg1\" type=\"xs:string?\"/><arg name=\"arg2\" type=\"xs:string?\"/><arg name=\"collation\" type=\"xs:string\"/></proto></example></p><p xmlns:e=\"http://www.w3.org/1999/XSL/Spec/ElementSyntax\">The two-argument form of this function is <termref def=\"dt-deterministic\">deterministic</termref>, <termref def=\"dt-context-dependent\">context-dependent</termref>,  and <termref def=\"dt-focus-independent\">focus-independent</termref>.  It depends on\n \t\tcollations.\n \t</p><p xmlns:e=\"http://www.w3.org/1999/XSL/Spec/ElementSyntax\">The three-argument form of this function is <termref def=\"dt-deterministic\">deterministic</termref>, <termref def=\"dt-context-dependent\">context-dependent</termref>,  and <termref def=\"dt-focus-independent\">focus-independent</termref>.  It depends on\n \t\tcollations, and static base uri.\n \t</p><p xmlns:e=\"http://www.w3.org/1999/XSL/Spec/ElementSyntax\">If the value of <code>$arg1</code> or <code>$arg2</code> is the empty sequence, or\n             contains only ignorable collation units, it is interpreted as the zero-length\n             string.</p><p xmlns:e=\"http://www.w3.org/1999/XSL/Spec/ElementSyntax\">If the value of <code>$arg2</code> is the zero-length string, then the function returns\n                <code>true</code>.</p><p xmlns:e=\"http://www.w3.org/1999/XSL/Spec/ElementSyntax\">If the value of <code>$arg1</code> is the zero-length string, the function returns\n                <code>false</code>.</p><p xmlns:e=\"http://www.w3.org/1999/XSL/Spec/ElementSyntax\">The collation used by this function is determined according to the rules in <specref ref=\"choosing-a-collation\"/>.</p><p xmlns:e=\"http://www.w3.org/1999/XSL/Spec/ElementSyntax\">The function returns an <code>xs:boolean</code> indicating whether or not the value of\n                <code>$arg1</code> contains (at the beginning, at the end, or anywhere within) at\n             least one sequence of collation units that provides a <term>minimal match</term> to the\n             collation units in the value of <code>$arg2</code>, according to the collation that is\n             used.</p><note xmlns:e=\"http://www.w3.org/1999/XSL/Spec/ElementSyntax\"><p><term>Minimal match</term> is defined in <bibref ref=\"Unicode-Collations\"/>. </p></note><p xmlns:e=\"http://www.w3.org/1999/XSL/Spec/ElementSyntax\">A <phrase diff=\"add\" at=\"L\">dynamic</phrase> error <rfc2119>may</rfc2119> be raised <errorref class=\"CH\" code=\"0004\"/> if the\n             specified collation does not support collation units.</p></div>\n", "summary" : "<p>  Returns true if the string  $arg1  contains  $arg2  as a\n             substring, taking collations into account.</p>", "annotation_str" : "", "annotations" : [  ], "updating" : false, "parameters" : [ { "name" : "arg1", "type" : "xs:string", "occurrence" : "?", "description" : "" }, { "name" : "arg2", "type" : "xs:string", "occurrence" : "?", "description" : "" } ], "returns" : { "type" : "xs:boolean", "description" : "" }, "errors" : [  ] }, { "isDocumented" : true, "arity" : 3, "name" : "contains", "qname" : "fn:contains", "signature" : "($arg1 as xs:string?, $arg2 as xs:string?, $collation as xs:string) as xs:boolean external", "description" : " <div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"><p xmlns:e=\"http://www.w3.org/1999/XSL/Spec/ElementSyntax\">Returns true if the string <code>$arg1</code> contains <code>$arg2</code> as a\n             substring, taking collations into account.</p><p xmlns:e=\"http://www.w3.org/1999/XSL/Spec/ElementSyntax\"><example role=\"signature\"><proto name=\"contains\" return-type=\"xs:boolean\" isOp=\"no\" prefix=\"fn\" returnEmptyOk=\"no\" returnSeq=\"no\" returnVaries=\"no\" isSchema=\"no\" isDatatype=\"no\" isSpecial=\"no\"><arg name=\"arg1\" type=\"xs:string?\"/><arg name=\"arg2\" type=\"xs:string?\"/></proto></example><example role=\"signature\"><proto name=\"contains\" return-type=\"xs:boolean\" isOp=\"no\" prefix=\"fn\" returnEmptyOk=\"no\" returnSeq=\"no\" returnVaries=\"no\" isSchema=\"no\" isDatatype=\"no\" isSpecial=\"no\"><arg name=\"arg1\" type=\"xs:string?\"/><arg name=\"arg2\" type=\"xs:string?\"/><arg name=\"collation\" type=\"xs:string\"/></proto></example></p><p xmlns:e=\"http://www.w3.org/1999/XSL/Spec/ElementSyntax\">The two-argument form of this function is <termref def=\"dt-deterministic\">deterministic</termref>, <termref def=\"dt-context-dependent\">context-dependent</termref>,  and <termref def=\"dt-focus-independent\">focus-independent</termref>.  It depends on\n \t\tcollations.\n \t</p><p xmlns:e=\"http://www.w3.org/1999/XSL/Spec/ElementSyntax\">The three-argument form of this function is <termref def=\"dt-deterministic\">deterministic</termref>, <termref def=\"dt-context-dependent\">context-dependent</termref>,  and <termref def=\"dt-focus-independent\">focus-independent</termref>.  It depends on\n \t\tcollations, and static base uri.\n \t</p><p xmlns:e=\"http://www.w3.org/1999/XSL/Spec/ElementSyntax\">If the value of <code>$arg1</code> or <code>$arg2</code> is the empty sequence, or\n             contains only ignorable collation units, it is interpreted as the zero-length\n             string.</p><p xmlns:e=\"http://www.w3.org/1999/XSL/Spec/ElementSyntax\">If the value of <code>$arg2</code> is the zero-length string, then the function returns\n                <code>true</code>.</p><p xmlns:e=\"http://www.w3.org/1999/XSL/Spec/ElementSyntax\">If the value of <code>$arg1</code> is the zero-length string, the function returns\n                <code>false</code>.</p><p xmlns:e=\"http://www.w3.org/1999/XSL/Spec/ElementSyntax\">The collation used by this function is determined according to the rules in <specref ref=\"choosing-a-collation\"/>.</p><p xmlns:e=\"http://www.w3.org/1999/XSL/Spec/ElementSyntax\">The function returns an <code>xs:boolean</code> indicating whether or not the value of\n                <code>$arg1</code> contains (at the beginning, at the end, or anywhere within) at\n             least one sequence of collation units that provides a <term>minimal match</term> to the\n             collation units in the value of <code>$arg2</code>, according to the collation that is\n             used.</p><note xmlns:e=\"http://www.w3.org/1999/XSL/Spec/ElementSyntax\"><p><term>Minimal match</term> is defined in <bibref ref=\"Unicode-Collations\"/>. </p></note><p xmlns:e=\"http://www.w3.org/1999/XSL/Spec/ElementSyntax\">A <phrase diff=\"add\" at=\"L\">dynamic</phrase> error <rfc2119>may</rfc2119> be raised <errorref class=\"CH\" code=\"0004\"/> if the\n             specified collation does not support collation units.</p></div>\n", "summary" : "<p>  Returns true if the string  $arg1  contains  $arg2  as a\n             substring, taking collations into account.</p>", "annotation_str" : "", "annotations" : [  ], "updating" : false, "parameters" : [ { "name" : "arg1", "type" : "xs:string", "occurrence" : "?", "description" : "" }, { "name" : "arg2", "type" : "xs:string", "occurrence" : "?", "description" : "" }, { "name" : "collation", "type" : "xs:string", "occurrence" : null, "description" : "" } ], "returns" : { "type" : "xs:boolean", "description" : "" }, "errors" : [  ] }, { "isDocumented" : true, "arity" : 1, "name" : "count", "qname" : "fn:count", "signature" : "($arg as item()*) as xs:integer external", "description" : " <div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"><p xmlns:e=\"http://www.w3.org/1999/XSL/Spec/ElementSyntax\">Returns the number of items in a sequence.</p><p xmlns:e=\"http://www.w3.org/1999/XSL/Spec/ElementSyntax\"><example role=\"signature\"><proto name=\"count\" return-type=\"xs:integer\" isOp=\"no\" prefix=\"fn\" returnEmptyOk=\"no\" returnSeq=\"no\" returnVaries=\"no\" isSchema=\"no\" isDatatype=\"no\" isSpecial=\"no\"><arg name=\"arg\" type=\"item()*\"/></proto></example></p><p xmlns:e=\"http://www.w3.org/1999/XSL/Spec/ElementSyntax\">This function is <termref def=\"dt-deterministic\">deterministic</termref>, <termref def=\"dt-context-independent\">context-independent</termref>,  and <termref def=\"dt-focus-independent\">focus-independent</termref>. </p><p xmlns:e=\"http://www.w3.org/1999/XSL/Spec/ElementSyntax\">The function returns the number of items in the value of <code>$arg</code>.</p><p xmlns:e=\"http://www.w3.org/1999/XSL/Spec/ElementSyntax\">Returns 0 if <code>$arg</code> is the empty sequence.</p></div>\n", "summary" : "<p>  Returns the number of items in a sequence.</p>", "annotation_str" : "", "annotations" : [  ], "updating" : false, "parameters" : [ { "name" : "arg", "type" : "item()", "occurrence" : "*", "description" : "" } ], "returns" : { "type" : "xs:integer", "description" : "" }, "errors" : [  ] }, { "isDocumented" : true, "arity" : 0, "name" : "current-date", "qname" : "fn:current-date", "signature" : "() as xs:date external", "description" : " <div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"><p xmlns:e=\"http://www.w3.org/1999/XSL/Spec/ElementSyntax\">Returns the current date.</p><p xmlns:e=\"http://www.w3.org/1999/XSL/Spec/ElementSyntax\"><example role=\"signature\"><proto name=\"current-date\" return-type=\"xs:date\" isOp=\"no\" prefix=\"fn\" returnEmptyOk=\"no\" returnSeq=\"no\" returnVaries=\"no\" isSchema=\"no\" isDatatype=\"no\" isSpecial=\"no\"/></example></p><p xmlns:e=\"http://www.w3.org/1999/XSL/Spec/ElementSyntax\">This function is <termref def=\"dt-deterministic\">deterministic</termref>, <termref def=\"dt-context-dependent\">context-dependent</termref>,  and <termref def=\"dt-focus-independent\">focus-independent</termref>.  It depends on\n \t\timplicit timezone.\n \t</p><p xmlns:e=\"http://www.w3.org/1999/XSL/Spec/ElementSyntax\">Returns <code>xs:date(fn:current-dateTime())</code>. This is an <code>xs:date</code>\n             (with timezone) that is current at some time during the evaluation of a query or\n             transformation in which <code>fn:current-date</code> is executed.</p><p xmlns:e=\"http://www.w3.org/1999/XSL/Spec/ElementSyntax\">This function is <termref def=\"dt-deterministic\"/>. The precise instant during the query or\n             transformation represented by the value of <code>fn:current-date</code> is <termref def=\"implementation-dependent\"/>.</p><p xmlns:e=\"http://www.w3.org/1999/XSL/Spec/ElementSyntax\">The returned date will always have an associated timezone, which will always be the same\n             as the implicit timezone in the dynamic context</p></div>\n", "summary" : "<p>  Returns the current date.</p>", "annotation_str" : "", "annotations" : [  ], "updating" : false, "parameters" : [  ], "returns" : { "type" : "xs:date", "description" : "" }, "errors" : [  ] }, { "isDocumented" : true, "arity" : 0, "name" : "current-dateTime", "qname" : "fn:current-dateTime", "signature" : "() as xs:dateTimeStamp external", "description" : " <div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"><p xmlns:e=\"http://www.w3.org/1999/XSL/Spec/ElementSyntax\">Returns the current date and time (with timezone).</p><p xmlns:e=\"http://www.w3.org/1999/XSL/Spec/ElementSyntax\"><example role=\"signature\"><proto name=\"current-dateTime\" return-type=\"xs:dateTimeStamp\" isOp=\"no\" prefix=\"fn\" returnEmptyOk=\"no\" returnSeq=\"no\" returnVaries=\"no\" isSchema=\"no\" isDatatype=\"no\" isSpecial=\"no\"/></example></p><p xmlns:e=\"http://www.w3.org/1999/XSL/Spec/ElementSyntax\">This function is <termref def=\"dt-deterministic\">deterministic</termref>, <termref def=\"dt-context-dependent\">context-dependent</termref>,  and <termref def=\"dt-focus-independent\">focus-independent</termref>.  It depends on\n \t\timplicit timezone.\n \t</p><p xmlns:e=\"http://www.w3.org/1999/XSL/Spec/ElementSyntax\">Returns the current dateTime (with timezone) from the dynamic context. (See <xspecref spec=\"XP30\" ref=\"id-xp-evaluation-context-components\"/>.) This is an\n                <code>xs:dateTime</code> that is current at some time during the evaluation of a\n             query or transformation in which <code>fn:current-dateTime</code> is executed.</p><p xmlns:e=\"http://www.w3.org/1999/XSL/Spec/ElementSyntax\">This function is <termref def=\"dt-deterministic\"/>. The precise instant during the query or\n             transformation represented by the value of <code>fn:current-dateTime()</code> is\n                <termref def=\"implementation-dependent\"/>.</p><p xmlns:e=\"http://www.w3.org/1999/XSL/Spec/ElementSyntax\" diff=\"chg\" at=\"A\">If the implementation supports data types from XSD 1.1 then the\n             returned value will be an instance of <code>xs:dateTimeStamp</code>. Otherwise, the only\n             guarantees are that it will be an instance of <code>xs:dateTime</code> and will have a\n             timezone component.</p><p xmlns:e=\"http://www.w3.org/1999/XSL/Spec/ElementSyntax\">The returned <code>xs:dateTime</code> will always have an associated timezone, which\n             will always be the same as the implicit timezone in the dynamic context</p></div>\n", "summary" : "<p>  Returns the current date and time (with timezone).</p>", "annotation_str" : "", "annotations" : [  ], "updating" : false, "parameters" : [  ], "returns" : { "type" : "xs:dateTimeStamp", "description" : "" }, "errors" : [  ] }, { "isDocumented" : true, "arity" : 0, "name" : "current-time", "qname" : "fn:current-time", "signature" : "() as xs:time external", "description" : " <div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"><p xmlns:e=\"http://www.w3.org/1999/XSL/Spec/ElementSyntax\">Returns the current time.</p><p xmlns:e=\"http://www.w3.org/1999/XSL/Spec/ElementSyntax\"><example role=\"signature\"><proto name=\"current-time\" return-type=\"xs:time\" isOp=\"no\" prefix=\"fn\" returnEmptyOk=\"no\" returnSeq=\"no\" returnVaries=\"no\" isSchema=\"no\" isDatatype=\"no\" isSpecial=\"no\"/></example></p><p xmlns:e=\"http://www.w3.org/1999/XSL/Spec/ElementSyntax\">This function is <termref def=\"dt-deterministic\">deterministic</termref>, <termref def=\"dt-context-dependent\">context-dependent</termref>,  and <termref def=\"dt-focus-independent\">focus-independent</termref>.  It depends on\n \t\timplicit timezone.\n \t</p><p xmlns:e=\"http://www.w3.org/1999/XSL/Spec/ElementSyntax\">Returns <code>xs:time(fn:current-dateTime())</code>. This is an <code>xs:time</code>\n             (with timezone) that is current at some time during the evaluation of a query or\n             transformation in which <code>fn:current-time</code> is executed.</p><p xmlns:e=\"http://www.w3.org/1999/XSL/Spec/ElementSyntax\">This function is <termref def=\"dt-deterministic\"/>. The precise instant during the query or\n             transformation represented by the value of <code>fn:current-time()</code> is <termref def=\"implementation-dependent\"/>.</p><p xmlns:e=\"http://www.w3.org/1999/XSL/Spec/ElementSyntax\">The returned time will always have an associated timezone, which will always be the same\n             as the implicit timezone in the dynamic context</p></div>\n", "summary" : "<p>  Returns the current time.</p>", "annotation_str" : "", "annotations" : [  ], "updating" : false, "parameters" : [  ], "returns" : { "type" : "xs:time", "description" : "" }, "errors" : [  ] }, { "isDocumented" : true, "arity" : 0, "name" : "data", "qname" : "fn:data", "signature" : "() as xs:anyAtomicType* external", "description" : " <div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"><p xmlns:e=\"http://www.w3.org/1999/XSL/Spec/ElementSyntax\">Returns the result of atomizing a sequence, that is, replacing all nodes in the\n             sequence by their typed values.</p><p xmlns:e=\"http://www.w3.org/1999/XSL/Spec/ElementSyntax\"><example role=\"signature\"><proto name=\"data\" return-type=\"xs:anyAtomicType*\" isOp=\"no\" prefix=\"fn\" returnEmptyOk=\"no\" returnSeq=\"no\" returnVaries=\"no\" isSchema=\"no\" isDatatype=\"no\" isSpecial=\"no\"/></example><example role=\"signature\"><proto name=\"data\" return-type=\"xs:anyAtomicType*\" isOp=\"no\" prefix=\"fn\" returnEmptyOk=\"no\" returnSeq=\"no\" returnVaries=\"no\" isSchema=\"no\" isDatatype=\"no\" isSpecial=\"no\"><arg name=\"arg\" type=\"item()*\"/></proto></example></p><p xmlns:e=\"http://www.w3.org/1999/XSL/Spec/ElementSyntax\">The zero-argument form of this function is <termref def=\"dt-deterministic\">deterministic</termref>, <termref def=\"dt-context-dependent\">context-dependent</termref>,  and <termref def=\"dt-focus-dependent\">focus-dependent</termref>. </p><p xmlns:e=\"http://www.w3.org/1999/XSL/Spec/ElementSyntax\">The one-argument form of this function is <termref def=\"dt-deterministic\">deterministic</termref>, <termref def=\"dt-context-independent\">context-independent</termref>,  and <termref def=\"dt-focus-independent\">focus-independent</termref>. </p><p xmlns:e=\"http://www.w3.org/1999/XSL/Spec/ElementSyntax\" diff=\"add\" at=\"F\">If the argument is omitted, it defaults to the context item\n                (<code>.</code>). The behavior of the function if the argument is omitted is exactly\n             the same as if the context item had been passed as the argument.</p><p xmlns:e=\"http://www.w3.org/1999/XSL/Spec/ElementSyntax\"> The result of <code>fn:data</code> is the sequence of atomic values produced by\n             applying the following rules to each item in <code>$arg</code>:</p><ulist xmlns:e=\"http://www.w3.org/1999/XSL/Spec/ElementSyntax\"><item><p>If the item is an atomic value, it is appended to the result sequence.</p></item><item><p> If the item is a node, the typed value of the node is appended to the result\n                   sequence. The typed value is a sequence of zero or more atomic values:\n                   specifically, the result of the <code>dm:typed-value</code> accessor as defined in\n                      <bibref ref=\"xpath-datamodel-30\"/> (See <xspecref spec=\"DM30\" ref=\"dm-typed-value\"/>).</p></item></ulist><p xmlns:e=\"http://www.w3.org/1999/XSL/Spec/ElementSyntax\">A <phrase diff=\"add\" at=\"L\">type</phrase> error is raised <errorref class=\"TY\" code=\"0012\" type=\"type\"/> if an item in the\n             sequence <code>$arg</code> is a node that does not have a typed value. </p><p xmlns:e=\"http://www.w3.org/1999/XSL/Spec/ElementSyntax\" diff=\"add\" at=\"B\">A <phrase diff=\"add\" at=\"L\">type</phrase> error is raised <errorref class=\"TY\" code=\"0013\" type=\"dynamic\"/>\n             if an item in the sequence <code>$arg</code> is a function item. </p><p xmlns:e=\"http://www.w3.org/1999/XSL/Spec/ElementSyntax\" diff=\"add\" at=\"I\">A <phrase diff=\"add\" at=\"M\">dynamic</phrase> error is raised\n             if <code>$arg</code> is omitted\n             and the context item is <xtermref ref=\"dt-absent\" spec=\"DM30\">absent</xtermref>.</p></div>\n", "summary" : "<p>  Returns the result of atomizing a sequence, that is, replacing all nodes in the\n             sequence by their typed values.</p>", "annotation_str" : "", "annotations" : [  ], "updating" : false, "parameters" : [  ], "returns" : { "type" : "xs:anyAtomicType*", "description" : "" }, "errors" : [  ] }, { "isDocumented" : true, "arity" : 1, "name" : "data", "qname" : "fn:data", "signature" : "($arg as item()*) as xs:anyAtomicType* external", "description" : " <div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"><p xmlns:e=\"http://www.w3.org/1999/XSL/Spec/ElementSyntax\">Returns the result of atomizing a sequence, that is, replacing all nodes in the\n             sequence by their typed values.</p><p xmlns:e=\"http://www.w3.org/1999/XSL/Spec/ElementSyntax\"><example role=\"signature\"><proto name=\"data\" return-type=\"xs:anyAtomicType*\" isOp=\"no\" prefix=\"fn\" returnEmptyOk=\"no\" returnSeq=\"no\" returnVaries=\"no\" isSchema=\"no\" isDatatype=\"no\" isSpecial=\"no\"/></example><example role=\"signature\"><proto name=\"data\" return-type=\"xs:anyAtomicType*\" isOp=\"no\" prefix=\"fn\" returnEmptyOk=\"no\" returnSeq=\"no\" returnVaries=\"no\" isSchema=\"no\" isDatatype=\"no\" isSpecial=\"no\"><arg name=\"arg\" type=\"item()*\"/></proto></example></p><p xmlns:e=\"http://www.w3.org/1999/XSL/Spec/ElementSyntax\">The zero-argument form of this function is <termref def=\"dt-deterministic\">deterministic</termref>, <termref def=\"dt-context-dependent\">context-dependent</termref>,  and <termref def=\"dt-focus-dependent\">focus-dependent</termref>. </p><p xmlns:e=\"http://www.w3.org/1999/XSL/Spec/ElementSyntax\">The one-argument form of this function is <termref def=\"dt-deterministic\">deterministic</termref>, <termref def=\"dt-context-independent\">context-independent</termref>,  and <termref def=\"dt-focus-independent\">focus-independent</termref>. </p><p xmlns:e=\"http://www.w3.org/1999/XSL/Spec/ElementSyntax\" diff=\"add\" at=\"F\">If the argument is omitted, it defaults to the context item\n                (<code>.</code>). The behavior of the function if the argument is omitted is exactly\n             the same as if the context item had been passed as the argument.</p><p xmlns:e=\"http://www.w3.org/1999/XSL/Spec/ElementSyntax\"> The result of <code>fn:data</code> is the sequence of atomic values produced by\n             applying the following rules to each item in <code>$arg</code>:</p><ulist xmlns:e=\"http://www.w3.org/1999/XSL/Spec/ElementSyntax\"><item><p>If the item is an atomic value, it is appended to the result sequence.</p></item><item><p> If the item is a node, the typed value of the node is appended to the result\n                   sequence. The typed value is a sequence of zero or more atomic values:\n                   specifically, the result of the <code>dm:typed-value</code> accessor as defined in\n                      <bibref ref=\"xpath-datamodel-30\"/> (See <xspecref spec=\"DM30\" ref=\"dm-typed-value\"/>).</p></item></ulist><p xmlns:e=\"http://www.w3.org/1999/XSL/Spec/ElementSyntax\">A <phrase diff=\"add\" at=\"L\">type</phrase> error is raised <errorref class=\"TY\" code=\"0012\" type=\"type\"/> if an item in the\n             sequence <code>$arg</code> is a node that does not have a typed value. </p><p xmlns:e=\"http://www.w3.org/1999/XSL/Spec/ElementSyntax\" diff=\"add\" at=\"B\">A <phrase diff=\"add\" at=\"L\">type</phrase> error is raised <errorref class=\"TY\" code=\"0013\" type=\"dynamic\"/>\n             if an item in the sequence <code>$arg</code> is a function item. </p><p xmlns:e=\"http://www.w3.org/1999/XSL/Spec/ElementSyntax\" diff=\"add\" at=\"I\">A <phrase diff=\"add\" at=\"M\">dynamic</phrase> error is raised\n             if <code>$arg</code> is omitted\n             and the context item is <xtermref ref=\"dt-absent\" spec=\"DM30\">absent</xtermref>.</p></div>\n", "summary" : "<p>  Returns the result of atomizing a sequence, that is, replacing all nodes in the\n             sequence by their typed values.</p>", "annotation_str" : "", "annotations" : [  ], "updating" : false, "parameters" : [ { "name" : "arg", "type" : "item()", "occurrence" : "*", "description" : "" } ], "returns" : { "type" : "xs:anyAtomicType*", "description" : "" }, "errors" : [  ] }, { "isDocumented" : true, "arity" : 2, "name" : "dateTime", "qname" : "fn:dateTime", "signature" : "($arg1 as xs:date?, $arg2 as xs:time?) as xs:dateTime? external", "description" : " <div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"><p xmlns:e=\"http://www.w3.org/1999/XSL/Spec/ElementSyntax\">Returns an <code>xs:dateTime</code> value created by combining an\n                <code>xs:date</code> and an <code>xs:time</code>.</p><p xmlns:e=\"http://www.w3.org/1999/XSL/Spec/ElementSyntax\"><example role=\"signature\"><proto name=\"dateTime\" return-type=\"xs:dateTime?\" isOp=\"no\" prefix=\"fn\" returnEmptyOk=\"no\" returnSeq=\"no\" returnVaries=\"no\" isSchema=\"no\" isDatatype=\"no\" isSpecial=\"no\"><arg name=\"arg1\" type=\"xs:date?\"/><arg name=\"arg2\" type=\"xs:time?\"/></proto></example></p><p xmlns:e=\"http://www.w3.org/1999/XSL/Spec/ElementSyntax\">This function is <termref def=\"dt-deterministic\">deterministic</termref>, <termref def=\"dt-context-independent\">context-independent</termref>,  and <termref def=\"dt-focus-independent\">focus-independent</termref>. </p><p xmlns:e=\"http://www.w3.org/1999/XSL/Spec/ElementSyntax\">If either <code>$arg1</code> or <code>$arg2</code> is the empty sequence the function\n             returns the empty sequence.</p><p xmlns:e=\"http://www.w3.org/1999/XSL/Spec/ElementSyntax\">Otherwise, the function returns an <code>xs:dateTime</code> whose date component is\n             equal to <code>$arg1</code> and whose time component is equal to <code>$arg2</code>.</p><p xmlns:e=\"http://www.w3.org/1999/XSL/Spec/ElementSyntax\">The timezone of the result is computed as follows:</p><ulist xmlns:e=\"http://www.w3.org/1999/XSL/Spec/ElementSyntax\"><item><p>If neither argument has a timezone, the result has no timezone.</p></item><item><p>If exactly one of the arguments has a timezone, or if both arguments have the same\n                   timezone, the result has this timezone.</p></item></ulist><p xmlns:e=\"http://www.w3.org/1999/XSL/Spec/ElementSyntax\">A <phrase diff=\"add\" at=\"L\">dynamic</phrase> error is raised <errorref class=\"RG\" code=\"0008\"/> if the two arguments both have\n             timezones and the timezones are different. </p></div>\n", "summary" : "<p>  Returns an  xs:dateTime  value created by combining an\n                 xs:date  and an  xs:time .</p>", "annotation_str" : "", "annotations" : [  ], "updating" : false, "parameters" : [ { "name" : "arg1", "type" : "xs:date", "occurrence" : "?", "description" : "" }, { "name" : "arg2", "type" : "xs:time", "occurrence" : "?", "description" : "" } ], "returns" : { "type" : "xs:dateTime?", "description" : "" }, "errors" : [  ] }, { "isDocumented" : true, "arity" : 1, "name" : "day-from-date", "qname" : "fn:day-from-date", "signature" : "($arg as xs:date?) as xs:integer? external", "description" : " <div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"><p xmlns:e=\"http://www.w3.org/1999/XSL/Spec/ElementSyntax\">Returns the day component of an <code>xs:date</code>.</p><p xmlns:e=\"http://www.w3.org/1999/XSL/Spec/ElementSyntax\"><example role=\"signature\"><proto name=\"day-from-date\" return-type=\"xs:integer?\" isOp=\"no\" prefix=\"fn\" returnEmptyOk=\"no\" returnSeq=\"no\" returnVaries=\"no\" isSchema=\"no\" isDatatype=\"no\" isSpecial=\"no\"><arg name=\"arg\" type=\"xs:date?\"/></proto></example></p><p xmlns:e=\"http://www.w3.org/1999/XSL/Spec/ElementSyntax\">This function is <termref def=\"dt-deterministic\">deterministic</termref>, <termref def=\"dt-context-independent\">context-independent</termref>,  and <termref def=\"dt-focus-independent\">focus-independent</termref>. </p><p xmlns:e=\"http://www.w3.org/1999/XSL/Spec/ElementSyntax\">If <code>$arg</code> is the empty sequence, the function returns the empty sequence.</p><p xmlns:e=\"http://www.w3.org/1999/XSL/Spec/ElementSyntax\">Otherwise, the function returns an <code>xs:integer</code> between 1 and 31, both\n             inclusive, representing the day component in the localized value of\n             <code>$arg</code>.</p><p xmlns:e=\"http://www.w3.org/1999/XSL/Spec/ElementSyntax\">The expression <code>fn:day-from-date(xs:date(\"1999-05-31-05:00\"))</code> returns <code>31</code>.</p><p xmlns:e=\"http://www.w3.org/1999/XSL/Spec/ElementSyntax\">The expression <code>fn:day-from-date(xs:date(\"2000-01-01+05:00\"))</code> returns <code>1</code>.</p></div>\n", "summary" : "<p>  Returns the day component of an  xs:date .</p>", "annotation_str" : "", "annotations" : [  ], "updating" : false, "parameters" : [ { "name" : "arg", "type" : "xs:date", "occurrence" : "?", "description" : "" } ], "returns" : { "type" : "xs:integer?", "description" : "" }, "errors" : [  ] }, { "isDocumented" : true, "arity" : 1, "name" : "days-from-duration", "qname" : "fn:days-from-duration", "signature" : "($arg as xs:duration?) as xs:integer? external", "description" : " <div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"><p xmlns:e=\"http://www.w3.org/1999/XSL/Spec/ElementSyntax\">Returns the number of days in a duration.</p><p xmlns:e=\"http://www.w3.org/1999/XSL/Spec/ElementSyntax\"><example role=\"signature\"><proto name=\"days-from-duration\" return-type=\"xs:integer?\" isOp=\"no\" prefix=\"fn\" returnEmptyOk=\"no\" returnSeq=\"no\" returnVaries=\"no\" isSchema=\"no\" isDatatype=\"no\" isSpecial=\"no\"><arg name=\"arg\" type=\"xs:duration?\"/></proto></example></p><p xmlns:e=\"http://www.w3.org/1999/XSL/Spec/ElementSyntax\">This function is <termref def=\"dt-deterministic\">deterministic</termref>, <termref def=\"dt-context-independent\">context-independent</termref>,  and <termref def=\"dt-focus-independent\">focus-independent</termref>. </p><p xmlns:e=\"http://www.w3.org/1999/XSL/Spec/ElementSyntax\">If <code>$arg</code> is the empty sequence, the function returns the empty sequence.</p><p xmlns:e=\"http://www.w3.org/1999/XSL/Spec/ElementSyntax\">Otherwise, the function returns an <code>xs:integer</code> representing the days\n             component in the value of <code>$arg</code>. The result is obtained by casting\n                <code>$arg</code> to an <code>xs:dayTimeDuration</code> (see <specref ref=\"casting-to-durations\"/>) and then computing the days component as described in\n                <specref ref=\"canonical-dayTimeDuration\"/>.</p><p xmlns:e=\"http://www.w3.org/1999/XSL/Spec/ElementSyntax\">If <code>$arg</code> is a negative duration then the result will be negative..</p><p xmlns:e=\"http://www.w3.org/1999/XSL/Spec/ElementSyntax\">If <code>$arg</code> is an <code>xs:yearMonthDuration</code> the function returns 0.</p><p xmlns:e=\"http://www.w3.org/1999/XSL/Spec/ElementSyntax\">The expression <code>fn:days-from-duration(xs:dayTimeDuration(\"P3DT10H\"))</code> returns <code>3</code>.</p><p xmlns:e=\"http://www.w3.org/1999/XSL/Spec/ElementSyntax\">The expression <code>fn:days-from-duration(xs:dayTimeDuration(\"P3DT55H\"))</code> returns <code>5</code>.</p><p xmlns:e=\"http://www.w3.org/1999/XSL/Spec/ElementSyntax\">The expression <code>fn:days-from-duration(xs:yearMonthDuration(\"P3Y5M\"))</code> returns <code>0</code>.</p></div>\n", "summary" : "<p>  Returns the number of days in a duration.</p>", "annotation_str" : "", "annotations" : [  ], "updating" : false, "parameters" : [ { "name" : "arg", "type" : "xs:duration", "occurrence" : "?", "description" : "" } ], "returns" : { "type" : "xs:integer?", "description" : "" }, "errors" : [  ] }, { "isDocumented" : true, "arity" : 2, "name" : "deep-equal", "qname" : "fn:deep-equal", "signature" : "($parameter1 as item()*, $parameter2 as item()*) as xs:boolean external", "description" : " <div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"><p xmlns:e=\"http://www.w3.org/1999/XSL/Spec/ElementSyntax\"> This function assesses whether two sequences are deep-equal to each other. To\n             be deep-equal, they must contain items that are pairwise deep-equal; and for two items\n             to be deep-equal, they must either be atomic values that compare equal, or nodes of the\n             same kind, with the same name, whose children are deep-equal.</p><p xmlns:e=\"http://www.w3.org/1999/XSL/Spec/ElementSyntax\"><example role=\"signature\"><proto name=\"deep-equal\" return-type=\"xs:boolean\" isOp=\"no\" prefix=\"fn\" returnEmptyOk=\"no\" returnSeq=\"no\" returnVaries=\"no\" isSchema=\"no\" isDatatype=\"no\" isSpecial=\"no\"><arg name=\"parameter1\" type=\"item()*\"/><arg name=\"parameter2\" type=\"item()*\"/></proto></example><example role=\"signature\"><proto name=\"deep-equal\" return-type=\"xs:boolean\" isOp=\"no\" prefix=\"fn\" returnEmptyOk=\"no\" returnSeq=\"no\" returnVaries=\"no\" isSchema=\"no\" isDatatype=\"no\" isSpecial=\"no\"><arg name=\"parameter1\" type=\"item()*\"/><arg name=\"parameter2\" type=\"item()*\"/><arg name=\"collation\" type=\"xs:string\"/></proto></example></p><p xmlns:e=\"http://www.w3.org/1999/XSL/Spec/ElementSyntax\">The two-argument form of this function is <termref def=\"dt-deterministic\">deterministic</termref>, <termref def=\"dt-context-dependent\">context-dependent</termref>,  and <termref def=\"dt-focus-independent\">focus-independent</termref>.  It depends on\n \t\tcollations, and implicit timezone.\n \t</p><p xmlns:e=\"http://www.w3.org/1999/XSL/Spec/ElementSyntax\">The three-argument form of this function is <termref def=\"dt-deterministic\">deterministic</termref>, <termref def=\"dt-context-dependent\">context-dependent</termref>,  and <termref def=\"dt-focus-independent\">focus-independent</termref>.  It depends on\n \t\tcollations, and static base uri, and implicit timezone.\n \t</p><p xmlns:e=\"http://www.w3.org/1999/XSL/Spec/ElementSyntax\">The <code>$collation</code> argument identifies a collation which is used at all levels\n             of recursion when strings are compared (but not when names are compared), according to\n             the rules in <specref ref=\"choosing-a-collation\"/>.</p><p xmlns:e=\"http://www.w3.org/1999/XSL/Spec/ElementSyntax\">If the two sequences are both empty, the function returns <code>true</code>.</p><p xmlns:e=\"http://www.w3.org/1999/XSL/Spec/ElementSyntax\">If the two sequences are of different lengths, the function returns\n             <code>false</code>.</p><p xmlns:e=\"http://www.w3.org/1999/XSL/Spec/ElementSyntax\">If the two sequences are of the same length, the function returns <code>true</code> if\n             and only if every item in the sequence <code>$parameter1</code> is deep-equal to the\n             item at the same position in the sequence <code>$parameter2</code>. The rules for\n             deciding whether two items are deep-equal follow.</p><p xmlns:e=\"http://www.w3.org/1999/XSL/Spec/ElementSyntax\">Call the two items <code>$i1</code> and <code>$i2</code> respectively.</p><p xmlns:e=\"http://www.w3.org/1999/XSL/Spec/ElementSyntax\">If <code>$i1</code> and <code>$i2</code> are both atomic values, they are deep-equal if\n             and only if <code>($i1 eq $i2)</code> is <code>true</code>, or if both values are\n                <code>NaN</code>. If the <code>eq</code> operator is not defined for <code>$i1</code>\n             and <code>$i2</code>, the function returns <code>false</code>.</p><p xmlns:e=\"http://www.w3.org/1999/XSL/Spec/ElementSyntax\"> If one of the pair <code>$i1</code> or <code>$i2</code> is an atomic value and the\n             other is not,\n             <!--<phrase diff=\"add\" at=\"MAP\">or if one is a node and the other is not, </phrase>-->\n             the function returns <code>false</code>.</p><p xmlns:e=\"http://www.w3.org/1999/XSL/Spec/ElementSyntax\">If <code>$i1</code> and <code>$i2</code> are both nodes, they are compared as described\n             below:</p><olist xmlns:e=\"http://www.w3.org/1999/XSL/Spec/ElementSyntax\"><item><p>If the two nodes are of different kinds, the result is <code>false</code>.</p></item><item><p>If the two nodes are both document nodes then they are deep-equal if and only if\n                   the sequence <code>$i1/(*|text())</code> is deep-equal to the sequence\n                      <code>$i2/(*|text())</code>.</p></item><item><p> If the two nodes are both element nodes then they are deep-equal if and only if\n                   all of the following conditions are satisfied:</p><olist><item><p>The two nodes have the same name, that is <code>(node-name($i1) eq\n                            node-name($i2))</code>.</p></item><item><!-- bug 17252 --><p diff=\"chg\" at=\"L\">Either both nodes are both annotated as having simple content or both nodes are\n                         annotated as having complex content. For this purpose \"simple content\" means either a simple\n                      type or a complex type with simple content; \"complex content\" means a complex type whose variety\n                      is mixed, element-only, or empty.</p><note diff=\"add\" at=\"L\"><p>It is a consequence of this rule that validating a document\n                      <var>D</var> against a schema will usually (but not necessarily) result in a document that is not deep-equal\n                         to <var>D</var>. The exception is when the schema allows all elements to have mixed content.</p></note></item><item><p>The two nodes have the same number of attributes, and for every attribute\n                            <code>$a1</code> in <code>$i1/@*</code> there exists an attribute\n                            <code>$a2</code> in <code>$i2/@*</code> such that <code>$a1</code> and\n                            <code>$a2</code> are deep-equal.</p></item><item><p> One of the following conditions holds:</p><ulist><item><p>Both element nodes are annotated as having simple content\n                               <phrase diff=\"add\" at=\"L\">(as defined in 3(b) above)</phrase>, and\n                               the typed value of <code>$i1</code> is deep-equal to the typed value\n                               of <code>$i2</code>.</p></item><item><p>Both element nodes have a type annotation that is <phrase diff=\"chg\" at=\"L\">a complex type with\n                               variety element-only, and the sequence <code>$i1/*</code> is\n                               deep-equal to the sequence <code>$i2/*</code>.</phrase></p></item><item><p>Both element nodes have a type annotation that is <phrase diff=\"chg\" at=\"L\">a complex type with\n                               variety mixed</phrase>, and the sequence <code>$i1/(*|text())</code> is\n                               deep-equal to the sequence <code>$i2/(*|text())</code>.</p></item><item><p>Both element nodes have a type annotation that is <phrase diff=\"chg\" at=\"L\">a complex type with\n                               variety empty</phrase>.</p></item></ulist></item></olist></item><item><p>If the two nodes are both attribute nodes then they are deep-equal if and only if\n                   both the following conditions are satisfied:</p><olist><item><p>The two nodes have the same name, that is <code>(node-name($i1) eq\n                            node-name($i2))</code>.</p></item><item><p>The typed value of <code>$i1</code> is deep-equal to the typed value of\n                            <code>$i2</code>.</p></item></olist></item><item><p> If the two nodes are both processing instruction nodes<phrase diff=\"del\" at=\"A-E42\"> or namespace bindings</phrase>, then they are deep-equal if and\n                   only if both the following conditions are satisfied:</p><olist><item><p>The two nodes have the same name, that is <code>(node-name($i1) eq\n                            node-name($i2))</code>.</p></item><item><p>The string value of <code>$i1</code> is equal to the string value of\n                            <code>$i2</code>.</p></item></olist></item><item><p diff=\"add\" at=\"A-E42\"> If the two nodes are both namespace nodes, then they are deep-equal if and only\n                   if both the following conditions are satisfied:</p><olist><item><p diff=\"add\" at=\"A-E42\">The two nodes either have the same name or are both nameless, that is\n                            <code>fn:deep-equal(node-name($i1), node-name($i2))</code>.</p></item><item><p diff=\"add\" at=\"A-E42\">The string value of <code>$i1</code> is equal to the string value of\n                            <code>$i2</code> when compared using the Unicode codepoint collation.</p></item></olist></item><item><p>If the two nodes are both text nodes or comment nodes, then they are deep-equal if\n                   and only if their string-values are equal.</p></item></olist><p xmlns:e=\"http://www.w3.org/1999/XSL/Spec/ElementSyntax\" diff=\"add\" at=\"B\">A <phrase diff=\"add\" at=\"L\">type</phrase> error is raised <errorref class=\"TY\" code=\"0015\" type=\"type\"/>\n             if either input sequence contains a function item.\n             <!--<phrase diff=\"add\" at=\"MAP\">that is not a map</phrase>,-->\n          </p></div>\n", "summary" : "<p>   This function assesses whether two sequences are deep-equal to each other.</p>", "annotation_str" : "", "annotations" : [  ], "updating" : false, "parameters" : [ { "name" : "parameter1", "type" : "item()", "occurrence" : "*", "description" : "" }, { "name" : "parameter2", "type" : "item()", "occurrence" : "*", "description" : "" } ], "returns" : { "type" : "xs:boolean", "description" : "" }, "errors" : [  ] }, { "isDocumented" : true, "arity" : 3, "name" : "deep-equal", "qname" : "fn:deep-equal", "signature" : "($parameter1 as item()*, $parameter2 as item()*, $collation as xs:string) as xs:boolean external", "description" : " <div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"><p xmlns:e=\"http://www.w3.org/1999/XSL/Spec/ElementSyntax\"> This function assesses whether two sequences are deep-equal to each other. To\n             be deep-equal, they must contain items that are pairwise deep-equal; and for two items\n             to be deep-equal, they must either be atomic values that compare equal, or nodes of the\n             same kind, with the same name, whose children are deep-equal.</p><p xmlns:e=\"http://www.w3.org/1999/XSL/Spec/ElementSyntax\"><example role=\"signature\"><proto name=\"deep-equal\" return-type=\"xs:boolean\" isOp=\"no\" prefix=\"fn\" returnEmptyOk=\"no\" returnSeq=\"no\" returnVaries=\"no\" isSchema=\"no\" isDatatype=\"no\" isSpecial=\"no\"><arg name=\"parameter1\" type=\"item()*\"/><arg name=\"parameter2\" type=\"item()*\"/></proto></example><example role=\"signature\"><proto name=\"deep-equal\" return-type=\"xs:boolean\" isOp=\"no\" prefix=\"fn\" returnEmptyOk=\"no\" returnSeq=\"no\" returnVaries=\"no\" isSchema=\"no\" isDatatype=\"no\" isSpecial=\"no\"><arg name=\"parameter1\" type=\"item()*\"/><arg name=\"parameter2\" type=\"item()*\"/><arg name=\"collation\" type=\"xs:string\"/></proto></example></p><p xmlns:e=\"http://www.w3.org/1999/XSL/Spec/ElementSyntax\">The two-argument form of this function is <termref def=\"dt-deterministic\">deterministic</termref>, <termref def=\"dt-context-dependent\">context-dependent</termref>,  and <termref def=\"dt-focus-independent\">focus-independent</termref>.  It depends on\n \t\tcollations, and implicit timezone.\n \t</p><p xmlns:e=\"http://www.w3.org/1999/XSL/Spec/ElementSyntax\">The three-argument form of this function is <termref def=\"dt-deterministic\">deterministic</termref>, <termref def=\"dt-context-dependent\">context-dependent</termref>,  and <termref def=\"dt-focus-independent\">focus-independent</termref>.  It depends on\n \t\tcollations, and static base uri, and implicit timezone.\n \t</p><p xmlns:e=\"http://www.w3.org/1999/XSL/Spec/ElementSyntax\">The <code>$collation</code> argument identifies a collation which is used at all levels\n             of recursion when strings are compared (but not when names are compared), according to\n             the rules in <specref ref=\"choosing-a-collation\"/>.</p><p xmlns:e=\"http://www.w3.org/1999/XSL/Spec/ElementSyntax\">If the two sequences are both empty, the function returns <code>true</code>.</p><p xmlns:e=\"http://www.w3.org/1999/XSL/Spec/ElementSyntax\">If the two sequences are of different lengths, the function returns\n             <code>false</code>.</p><p xmlns:e=\"http://www.w3.org/1999/XSL/Spec/ElementSyntax\">If the two sequences are of the same length, the function returns <code>true</code> if\n             and only if every item in the sequence <code>$parameter1</code> is deep-equal to the\n             item at the same position in the sequence <code>$parameter2</code>. The rules for\n             deciding whether two items are deep-equal follow.</p><p xmlns:e=\"http://www.w3.org/1999/XSL/Spec/ElementSyntax\">Call the two items <code>$i1</code> and <code>$i2</code> respectively.</p><p xmlns:e=\"http://www.w3.org/1999/XSL/Spec/ElementSyntax\">If <code>$i1</code> and <code>$i2</code> are both atomic values, they are deep-equal if\n             and only if <code>($i1 eq $i2)</code> is <code>true</code>, or if both values are\n                <code>NaN</code>. If the <code>eq</code> operator is not defined for <code>$i1</code>\n             and <code>$i2</code>, the function returns <code>false</code>.</p><p xmlns:e=\"http://www.w3.org/1999/XSL/Spec/ElementSyntax\"> If one of the pair <code>$i1</code> or <code>$i2</code> is an atomic value and the\n             other is not,\n             <!--<phrase diff=\"add\" at=\"MAP\">or if one is a node and the other is not, </phrase>-->\n             the function returns <code>false</code>.</p><p xmlns:e=\"http://www.w3.org/1999/XSL/Spec/ElementSyntax\">If <code>$i1</code> and <code>$i2</code> are both nodes, they are compared as described\n             below:</p><olist xmlns:e=\"http://www.w3.org/1999/XSL/Spec/ElementSyntax\"><item><p>If the two nodes are of different kinds, the result is <code>false</code>.</p></item><item><p>If the two nodes are both document nodes then they are deep-equal if and only if\n                   the sequence <code>$i1/(*|text())</code> is deep-equal to the sequence\n                      <code>$i2/(*|text())</code>.</p></item><item><p> If the two nodes are both element nodes then they are deep-equal if and only if\n                   all of the following conditions are satisfied:</p><olist><item><p>The two nodes have the same name, that is <code>(node-name($i1) eq\n                            node-name($i2))</code>.</p></item><item><!-- bug 17252 --><p diff=\"chg\" at=\"L\">Either both nodes are both annotated as having simple content or both nodes are\n                         annotated as having complex content. For this purpose \"simple content\" means either a simple\n                      type or a complex type with simple content; \"complex content\" means a complex type whose variety\n                      is mixed, element-only, or empty.</p><note diff=\"add\" at=\"L\"><p>It is a consequence of this rule that validating a document\n                      <var>D</var> against a schema will usually (but not necessarily) result in a document that is not deep-equal\n                         to <var>D</var>. The exception is when the schema allows all elements to have mixed content.</p></note></item><item><p>The two nodes have the same number of attributes, and for every attribute\n                            <code>$a1</code> in <code>$i1/@*</code> there exists an attribute\n                            <code>$a2</code> in <code>$i2/@*</code> such that <code>$a1</code> and\n                            <code>$a2</code> are deep-equal.</p></item><item><p> One of the following conditions holds:</p><ulist><item><p>Both element nodes are annotated as having simple content\n                               <phrase diff=\"add\" at=\"L\">(as defined in 3(b) above)</phrase>, and\n                               the typed value of <code>$i1</code> is deep-equal to the typed value\n                               of <code>$i2</code>.</p></item><item><p>Both element nodes have a type annotation that is <phrase diff=\"chg\" at=\"L\">a complex type with\n                               variety element-only, and the sequence <code>$i1/*</code> is\n                               deep-equal to the sequence <code>$i2/*</code>.</phrase></p></item><item><p>Both element nodes have a type annotation that is <phrase diff=\"chg\" at=\"L\">a complex type with\n                               variety mixed</phrase>, and the sequence <code>$i1/(*|text())</code> is\n                               deep-equal to the sequence <code>$i2/(*|text())</code>.</p></item><item><p>Both element nodes have a type annotation that is <phrase diff=\"chg\" at=\"L\">a complex type with\n                               variety empty</phrase>.</p></item></ulist></item></olist></item><item><p>If the two nodes are both attribute nodes then they are deep-equal if and only if\n                   both the following conditions are satisfied:</p><olist><item><p>The two nodes have the same name, that is <code>(node-name($i1) eq\n                            node-name($i2))</code>.</p></item><item><p>The typed value of <code>$i1</code> is deep-equal to the typed value of\n                            <code>$i2</code>.</p></item></olist></item><item><p> If the two nodes are both processing instruction nodes<phrase diff=\"del\" at=\"A-E42\"> or namespace bindings</phrase>, then they are deep-equal if and\n                   only if both the following conditions are satisfied:</p><olist><item><p>The two nodes have the same name, that is <code>(node-name($i1) eq\n                            node-name($i2))</code>.</p></item><item><p>The string value of <code>$i1</code> is equal to the string value of\n                            <code>$i2</code>.</p></item></olist></item><item><p diff=\"add\" at=\"A-E42\"> If the two nodes are both namespace nodes, then they are deep-equal if and only\n                   if both the following conditions are satisfied:</p><olist><item><p diff=\"add\" at=\"A-E42\">The two nodes either have the same name or are both nameless, that is\n                            <code>fn:deep-equal(node-name($i1), node-name($i2))</code>.</p></item><item><p diff=\"add\" at=\"A-E42\">The string value of <code>$i1</code> is equal to the string value of\n                            <code>$i2</code> when compared using the Unicode codepoint collation.</p></item></olist></item><item><p>If the two nodes are both text nodes or comment nodes, then they are deep-equal if\n                   and only if their string-values are equal.</p></item></olist><p xmlns:e=\"http://www.w3.org/1999/XSL/Spec/ElementSyntax\" diff=\"add\" at=\"B\">A <phrase diff=\"add\" at=\"L\">type</phrase> error is raised <errorref class=\"TY\" code=\"0015\" type=\"type\"/>\n             if either input sequence contains a function item.\n             <!--<phrase diff=\"add\" at=\"MAP\">that is not a map</phrase>,-->\n          </p></div>\n", "summary" : "<p>   This function assesses whether two sequences are deep-equal to each other.</p>", "annotation_str" : "", "annotations" : [  ], "updating" : false, "parameters" : [ { "name" : "parameter1", "type" : "item()", "occurrence" : "*", "description" : "" }, { "name" : "parameter2", "type" : "item()", "occurrence" : "*", "description" : "" }, { "name" : "collation", "type" : "xs:string", "occurrence" : null, "description" : "" } ], "returns" : { "type" : "xs:boolean", "description" : "" }, "errors" : [  ] }, { "isDocumented" : true, "arity" : 0, "name" : "default-collation", "qname" : "fn:default-collation", "signature" : "() as xs:string external", "description" : " <div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"><p xmlns:e=\"http://www.w3.org/1999/XSL/Spec/ElementSyntax\">Returns the value of the default collation property from the static context.\n          </p><p xmlns:e=\"http://www.w3.org/1999/XSL/Spec/ElementSyntax\"><example role=\"signature\"><proto name=\"default-collation\" return-type=\"xs:string\" isOp=\"no\" prefix=\"fn\" returnEmptyOk=\"no\" returnSeq=\"no\" returnVaries=\"no\" isSchema=\"no\" isDatatype=\"no\" isSpecial=\"no\"/></example></p><p xmlns:e=\"http://www.w3.org/1999/XSL/Spec/ElementSyntax\">This function is <termref def=\"dt-deterministic\">deterministic</termref>, <termref def=\"dt-context-dependent\">context-dependent</termref>,  and <termref def=\"dt-focus-independent\">focus-independent</termref>.  It depends on\n \t\tcollations.\n \t</p><p xmlns:e=\"http://www.w3.org/1999/XSL/Spec/ElementSyntax\">Returns the value of the default collation property from the static context. Components\n             of the static context are discussed in <xspecref spec=\"XP30\" ref=\"id-xp-static-context-components\"/>.</p><p xmlns:e=\"http://www.w3.org/1999/XSL/Spec/ElementSyntax\">The default collation property can never be absent. If it is not explicitly defined, a\n             system defined default can be invoked. If this is not provided, the Unicode codepoint\n             collation (<code>http://www.w3.org/2005/xpath-functions/collation/codepoint</code>) is\n             used. </p></div>\n", "summary" : "<p>  Returns the value of the default collation property from the static context.</p>", "annotation_str" : "", "annotations" : [  ], "updating" : false, "parameters" : [  ], "returns" : { "type" : "xs:string", "description" : "" }, "errors" : [  ] }, { "isDocumented" : true, "arity" : 1, "name" : "distinct-values", "qname" : "fn:distinct-values", "signature" : "($arg as xs:anyAtomicType*) as xs:anyAtomicType* external", "description" : " <div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"><p xmlns:e=\"http://www.w3.org/1999/XSL/Spec/ElementSyntax\">Returns the values that appear in a sequence, with duplicates eliminated.</p><p xmlns:e=\"http://www.w3.org/1999/XSL/Spec/ElementSyntax\"><example role=\"signature\"><proto name=\"distinct-values\" return-type=\"xs:anyAtomicType*\" isOp=\"no\" prefix=\"fn\" returnEmptyOk=\"no\" returnSeq=\"no\" returnVaries=\"no\" isSchema=\"no\" isDatatype=\"no\" isSpecial=\"no\"><arg name=\"arg\" type=\"xs:anyAtomicType*\"/></proto></example><example role=\"signature\"><proto name=\"distinct-values\" return-type=\"xs:anyAtomicType*\" isOp=\"no\" prefix=\"fn\" returnEmptyOk=\"no\" returnSeq=\"no\" returnVaries=\"no\" isSchema=\"no\" isDatatype=\"no\" isSpecial=\"no\"><arg name=\"arg\" type=\"xs:anyAtomicType*\"/><arg name=\"collation\" type=\"xs:string\"/></proto></example></p><p xmlns:e=\"http://www.w3.org/1999/XSL/Spec/ElementSyntax\">The one-argument form of this function is <termref def=\"dt-deterministic\">deterministic</termref>, <termref def=\"dt-context-dependent\">context-dependent</termref>,  and <termref def=\"dt-focus-independent\">focus-independent</termref>.  It depends on\n \t\tcollations, and implicit timezone.\n \t</p><p xmlns:e=\"http://www.w3.org/1999/XSL/Spec/ElementSyntax\">The two-argument form of this function is <termref def=\"dt-deterministic\">deterministic</termref>, <termref def=\"dt-context-dependent\">context-dependent</termref>,  and <termref def=\"dt-focus-independent\">focus-independent</termref>.  It depends on\n \t\tcollations, and static base uri, and implicit timezone.\n \t</p><p xmlns:e=\"http://www.w3.org/1999/XSL/Spec/ElementSyntax\">The function returns the sequence that results from removing from <code>$arg</code> all\n             but one of a set of values that are equal to one another. Values are compared using the\n                <code>eq</code> operator, subject to the caveats defined below.</p><p xmlns:e=\"http://www.w3.org/1999/XSL/Spec/ElementSyntax\">Values of type <code>xs:untypedAtomic</code> are compared as if they were of type\n                <code>xs:string</code>.</p><p xmlns:e=\"http://www.w3.org/1999/XSL/Spec/ElementSyntax\">Values that cannot be compared, because the <code>eq</code> operator is not defined for\n             their types, are considered to be distinct.</p><p xmlns:e=\"http://www.w3.org/1999/XSL/Spec/ElementSyntax\">The collation used by this function is determined according to the rules in <specref ref=\"choosing-a-collation\"/>. This collation is used when string comparison is\n             required.</p><p xmlns:e=\"http://www.w3.org/1999/XSL/Spec/ElementSyntax\">For <code>xs:float</code> and <code>xs:double</code> values, positive zero is equal to\n             negative zero and, although <code>NaN</code> does not equal itself, if <code>$arg</code>\n             contains multiple <code>NaN</code> values a single <code>NaN</code> is returned.</p><p xmlns:e=\"http://www.w3.org/1999/XSL/Spec/ElementSyntax\"> If <code>xs:dateTime</code>, <code>xs:date</code> or <code>xs:time</code> values do not\n             have a timezone, they are considered to have the implicit timezone provided by the\n             dynamic context for the purpose of comparison. Note that <code>xs:dateTime</code>,\n                <code>xs:date</code> or <code>xs:time</code> values can compare equal even if their\n             timezones are different.</p><p xmlns:e=\"http://www.w3.org/1999/XSL/Spec/ElementSyntax\">The order in which the sequence of values is returned is <termref def=\"implementation-dependent\"/>.</p><p xmlns:e=\"http://www.w3.org/1999/XSL/Spec/ElementSyntax\">Which value of a set of values that compare equal is returned is <termref def=\"implementation-dependent\"/>. </p><p xmlns:e=\"http://www.w3.org/1999/XSL/Spec/ElementSyntax\" diff=\"del\" at=\"F\">The static type of the result is a sequence of prime types as defined\n             in [Formal Semantics].</p><change xmlns:e=\"http://www.w3.org/1999/XSL/Spec/ElementSyntax\" diff=\"add\" at=\"A-E44\">\n             <p>If the input sequence contains values of different numeric types that differ from\n                each other by small amounts, then the eq operator is not transitive, because of\n                rounding effects occurring during type promotion. In the situation where the input\n                contains three values <code>A</code>, <code>B</code>, and <code>C</code> such that\n                   <code>A eq B</code>, <code>B eq C</code>, but <code>A ne C</code>, then the number\n                of items in the result of the function (as well as the choice of which items are\n                returned) is <termref def=\"implementation-dependent\"/>, subject only to the\n                constraints that (a) no two items in the result sequence compare equal to each other,\n                and (b) every input item that does not appear in the result sequence compares equal\n                to some item that does appear in the result sequence.</p>\n             <p>For example, this arises when computing:</p>\n             <eg xml:space=\"preserve\">    distinct-values(\n             (xs:float('1.0'),\n             xs:decimal('1.0000000000100000000001',\n             xs:double( '1.00000000001'))</eg>\n             <p>because the values of type <code>xs:float</code> and <code>xs:double</code> both\n                compare equal to the value of type <code>xs:decimal</code> but not equal to each\n                other. </p>\n          </change><p xmlns:e=\"http://www.w3.org/1999/XSL/Spec/ElementSyntax\">If <code>$arg</code> is the empty sequence, the function returns the empty sequence.</p></div>\n", "summary" : "<p>  Returns the values that appear in a sequence, with duplicates eliminated.</p>", "annotation_str" : "", "annotations" : [  ], "updating" : false, "parameters" : [ { "name" : "arg", "type" : "xs:anyAtomicType", "occurrence" : "*", "description" : "" } ], "returns" : { "type" : "xs:anyAtomicType*", "description" : "" }, "errors" : [  ] }, { "isDocumented" : true, "arity" : 2, "name" : "distinct-values", "qname" : "fn:distinct-values", "signature" : "($arg as xs:anyAtomicType*, $collation as xs:string) as xs:anyAtomicType* external", "description" : " <div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"><p xmlns:e=\"http://www.w3.org/1999/XSL/Spec/ElementSyntax\">Returns the values that appear in a sequence, with duplicates eliminated.</p><p xmlns:e=\"http://www.w3.org/1999/XSL/Spec/ElementSyntax\"><example role=\"signature\"><proto name=\"distinct-values\" return-type=\"xs:anyAtomicType*\" isOp=\"no\" prefix=\"fn\" returnEmptyOk=\"no\" returnSeq=\"no\" returnVaries=\"no\" isSchema=\"no\" isDatatype=\"no\" isSpecial=\"no\"><arg name=\"arg\" type=\"xs:anyAtomicType*\"/></proto></example><example role=\"signature\"><proto name=\"distinct-values\" return-type=\"xs:anyAtomicType*\" isOp=\"no\" prefix=\"fn\" returnEmptyOk=\"no\" returnSeq=\"no\" returnVaries=\"no\" isSchema=\"no\" isDatatype=\"no\" isSpecial=\"no\"><arg name=\"arg\" type=\"xs:anyAtomicType*\"/><arg name=\"collation\" type=\"xs:string\"/></proto></example></p><p xmlns:e=\"http://www.w3.org/1999/XSL/Spec/ElementSyntax\">The one-argument form of this function is <termref def=\"dt-deterministic\">deterministic</termref>, <termref def=\"dt-context-dependent\">context-dependent</termref>,  and <termref def=\"dt-focus-independent\">focus-independent</termref>.  It depends on\n \t\tcollations, and implicit timezone.\n \t</p><p xmlns:e=\"http://www.w3.org/1999/XSL/Spec/ElementSyntax\">The two-argument form of this function is <termref def=\"dt-deterministic\">deterministic</termref>, <termref def=\"dt-context-dependent\">context-dependent</termref>,  and <termref def=\"dt-focus-independent\">focus-independent</termref>.  It depends on\n \t\tcollations, and static base uri, and implicit timezone.\n \t</p><p xmlns:e=\"http://www.w3.org/1999/XSL/Spec/ElementSyntax\">The function returns the sequence that results from removing from <code>$arg</code> all\n             but one of a set of values that are equal to one another. Values are compared using the\n                <code>eq</code> operator, subject to the caveats defined below.</p><p xmlns:e=\"http://www.w3.org/1999/XSL/Spec/ElementSyntax\">Values of type <code>xs:untypedAtomic</code> are compared as if they were of type\n                <code>xs:string</code>.</p><p xmlns:e=\"http://www.w3.org/1999/XSL/Spec/ElementSyntax\">Values that cannot be compared, because the <code>eq</code> operator is not defined for\n             their types, are considered to be distinct.</p><p xmlns:e=\"http://www.w3.org/1999/XSL/Spec/ElementSyntax\">The collation used by this function is determined according to the rules in <specref ref=\"choosing-a-collation\"/>. This collation is used when string comparison is\n             required.</p><p xmlns:e=\"http://www.w3.org/1999/XSL/Spec/ElementSyntax\">For <code>xs:float</code> and <code>xs:double</code> values, positive zero is equal to\n             negative zero and, although <code>NaN</code> does not equal itself, if <code>$arg</code>\n             contains multiple <code>NaN</code> values a single <code>NaN</code> is returned.</p><p xmlns:e=\"http://www.w3.org/1999/XSL/Spec/ElementSyntax\"> If <code>xs:dateTime</code>, <code>xs:date</code> or <code>xs:time</code> values do not\n             have a timezone, they are considered to have the implicit timezone provided by the\n             dynamic context for the purpose of comparison. Note that <code>xs:dateTime</code>,\n                <code>xs:date</code> or <code>xs:time</code> values can compare equal even if their\n             timezones are different.</p><p xmlns:e=\"http://www.w3.org/1999/XSL/Spec/ElementSyntax\">The order in which the sequence of values is returned is <termref def=\"implementation-dependent\"/>.</p><p xmlns:e=\"http://www.w3.org/1999/XSL/Spec/ElementSyntax\">Which value of a set of values that compare equal is returned is <termref def=\"implementation-dependent\"/>. </p><p xmlns:e=\"http://www.w3.org/1999/XSL/Spec/ElementSyntax\" diff=\"del\" at=\"F\">The static type of the result is a sequence of prime types as defined\n             in [Formal Semantics].</p><change xmlns:e=\"http://www.w3.org/1999/XSL/Spec/ElementSyntax\" diff=\"add\" at=\"A-E44\">\n             <p>If the input sequence contains values of different numeric types that differ from\n                each other by small amounts, then the eq operator is not transitive, because of\n                rounding effects occurring during type promotion. In the situation where the input\n                contains three values <code>A</code>, <code>B</code>, and <code>C</code> such that\n                   <code>A eq B</code>, <code>B eq C</code>, but <code>A ne C</code>, then the number\n                of items in the result of the function (as well as the choice of which items are\n                returned) is <termref def=\"implementation-dependent\"/>, subject only to the\n                constraints that (a) no two items in the result sequence compare equal to each other,\n                and (b) every input item that does not appear in the result sequence compares equal\n                to some item that does appear in the result sequence.</p>\n             <p>For example, this arises when computing:</p>\n             <eg xml:space=\"preserve\">    distinct-values(\n             (xs:float('1.0'),\n             xs:decimal('1.0000000000100000000001',\n             xs:double( '1.00000000001'))</eg>\n             <p>because the values of type <code>xs:float</code> and <code>xs:double</code> both\n                compare equal to the value of type <code>xs:decimal</code> but not equal to each\n                other. </p>\n          </change><p xmlns:e=\"http://www.w3.org/1999/XSL/Spec/ElementSyntax\">If <code>$arg</code> is the empty sequence, the function returns the empty sequence.</p></div>\n", "summary" : "<p>  Returns the values that appear in a sequence, with duplicates eliminated.</p>", "annotation_str" : "", "annotations" : [  ], "updating" : false, "parameters" : [ { "name" : "arg", "type" : "xs:anyAtomicType", "occurrence" : "*", "description" : "" }, { "name" : "collation", "type" : "xs:string", "occurrence" : null, "description" : "" } ], "returns" : { "type" : "xs:anyAtomicType*", "description" : "" }, "errors" : [  ] }, { "isDocumented" : true, "arity" : 1, "name" : "doc-available", "qname" : "fn:doc-available", "signature" : "($uri as xs:string?) as xs:boolean external", "description" : " <div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"><p xmlns:e=\"http://www.w3.org/1999/XSL/Spec/ElementSyntax\" diff=\"chg\" at=\"A-E26\">The function returns true if and only if the function\n             call <code>fn:doc($uri)</code> would return a document node.</p><p xmlns:e=\"http://www.w3.org/1999/XSL/Spec/ElementSyntax\"><example role=\"signature\"><proto name=\"doc-available\" return-type=\"xs:boolean\" isOp=\"no\" prefix=\"fn\" returnEmptyOk=\"no\" returnSeq=\"no\" returnVaries=\"no\" isSchema=\"no\" isDatatype=\"no\" isSpecial=\"no\"><arg name=\"uri\" type=\"xs:string?\"/></proto></example></p><p xmlns:e=\"http://www.w3.org/1999/XSL/Spec/ElementSyntax\">This function is <termref def=\"dt-deterministic\">deterministic</termref>, <termref def=\"dt-context-dependent\">context-dependent</termref>,  and <termref def=\"dt-focus-independent\">focus-independent</termref>.  It depends on\n \t\tavailable documents, and static base uri.\n \t</p><p xmlns:e=\"http://www.w3.org/1999/XSL/Spec/ElementSyntax\" diff=\"chg\" at=\"A-E26\">If <code>$uri</code> is an empty sequence, this function returns\n                <code>false</code>.</p><p xmlns:e=\"http://www.w3.org/1999/XSL/Spec/ElementSyntax\" diff=\"chg\" at=\"A-E26\">If a call on <code>fn:doc($uri)</code> would return a document\n             node, this function returns <code>true</code>.</p><p xmlns:e=\"http://www.w3.org/1999/XSL/Spec/ElementSyntax\" diff=\"chg\" at=\"A-E26\">A <phrase diff=\"add\" at=\"L\">dynamic</phrase> error is raised <errorref class=\"DC\" code=\"0005\"/> if\n                <code>$uri</code> is not a valid URI according to the rules applied by the\n             implementation of <code>fn:doc</code>.</p><p xmlns:e=\"http://www.w3.org/1999/XSL/Spec/ElementSyntax\" diff=\"chg\" at=\"A-E26\">Otherwise, this function returns <code>false</code>.</p><p xmlns:e=\"http://www.w3.org/1999/XSL/Spec/ElementSyntax\">If this function returns <code>true</code>, then calling <code>fn:doc($uri)</code>\n             within the same <termref def=\"execution-scope\"/> must return a document node. However,\n             if nondeterministic processing has been selected for the <code>fn:doc</code> function,\n             this guarantee is lost.</p></div>\n", "summary" : "<p>  The function returns true if and only if the function\n             call  fn:doc($uri)  would return a document node.</p>", "annotation_str" : "", "annotations" : [  ], "updating" : false, "parameters" : [ { "name" : "uri", "type" : "xs:string", "occurrence" : "?", "description" : "" } ], "returns" : { "type" : "xs:boolean", "description" : "" }, "errors" : [  ] }, { "isDocumented" : true, "arity" : 1, "name" : "doc", "qname" : "fn:doc", "signature" : "($uri as xs:string?) as document()? external", "description" : " <div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"><p xmlns:e=\"http://www.w3.org/1999/XSL/Spec/ElementSyntax\" diff=\"chg\" at=\"A-E26\">Retrieves a document using a URI supplied as an\n                <code>xs:string</code>, and returns the corresponding document node.</p><p xmlns:e=\"http://www.w3.org/1999/XSL/Spec/ElementSyntax\"><example role=\"signature\"><proto name=\"doc\" return-type=\"document-node()?\" isOp=\"no\" prefix=\"fn\" returnEmptyOk=\"no\" returnSeq=\"no\" returnVaries=\"no\" isSchema=\"no\" isDatatype=\"no\" isSpecial=\"no\"><arg name=\"uri\" type=\"xs:string?\"/></proto></example></p><p xmlns:e=\"http://www.w3.org/1999/XSL/Spec/ElementSyntax\">This function is <termref def=\"dt-deterministic\">deterministic</termref>, <termref def=\"dt-context-dependent\">context-dependent</termref>,  and <termref def=\"dt-focus-independent\">focus-independent</termref>.  It depends on\n \t\tavailable documents, and static base uri.\n \t</p><p xmlns:e=\"http://www.w3.org/1999/XSL/Spec/ElementSyntax\">If <code>$uri</code> is the empty sequence, the result is an empty sequence.</p><p xmlns:e=\"http://www.w3.org/1999/XSL/Spec/ElementSyntax\" diff=\"add\" at=\"A-E26\">If <code>$uri</code> is a relative URI reference, it is resolved\n             relative to the value of the <phrase diff=\"chg\" at=\"L\">Static Base URI property from the static context</phrase>. The resulting\n             absolute URI is promoted to an <code>xs:string</code>.</p><p xmlns:e=\"http://www.w3.org/1999/XSL/Spec/ElementSyntax\" diff=\"add\" at=\"A-E26\">If the <term>Available documents</term> described in <xspecref spec=\"XP30\" ref=\"eval_context\"/> provides a mapping from this string to a document\n             node, the function returns that document node.</p><p xmlns:e=\"http://www.w3.org/1999/XSL/Spec/ElementSyntax\" diff=\"add\" at=\"A-E26\">The URI may include a fragment identifier.</p><p xmlns:e=\"http://www.w3.org/1999/XSL/Spec/ElementSyntax\">By default, this function is <termref def=\"deterministic\">deterministic</termref>. Two calls on this function\n             return the same document node if the same URI Reference (after resolution to an absolute\n             URI Reference) is supplied to both calls. Thus, the following expression (if it does not\n             raise an error) will always be true:</p><eg xmlns:e=\"http://www.w3.org/1999/XSL/Spec/ElementSyntax\" xml:space=\"preserve\">doc(\"foo.xml\") is doc(\"foo.xml\")</eg><p xmlns:e=\"http://www.w3.org/1999/XSL/Spec/ElementSyntax\">However, for performance reasons, implementations may provide a user option to evaluate\n             the function without a guarantee of determinism. The manner in which any such option is\n             provided is implementation-defined. If the user has not selected such an option, a call\n             of the function must either return a deterministic result or must raise a <phrase diff=\"add\" at=\"L\">dynamic</phrase> error\n                <errorref class=\"DC\" code=\"0003\"/>.</p><p xmlns:e=\"http://www.w3.org/1999/XSL/Spec/ElementSyntax\" diff=\"del\" at=\"F\">For detailed type semantics, see [Formal Semantics].</p><note xmlns:e=\"http://www.w3.org/1999/XSL/Spec/ElementSyntax\"><p>If <code>$uri</code> is read from a source document, it is generally appropriate to\n                resolve it relative to the base URI property of the relevant node in the source\n                document. This can be achieved by calling the <code>fn:resolve-uri</code> function,\n                and passing the resulting absolute URI as an argument to the <code>fn:doc</code>\n                function.</p></note><p xmlns:e=\"http://www.w3.org/1999/XSL/Spec/ElementSyntax\">If two calls to this function supply different absolute URI References as arguments, the\n             same document node may be returned if the implementation can determine that the two\n             arguments refer to the same resource.</p><p xmlns:e=\"http://www.w3.org/1999/XSL/Spec/ElementSyntax\"> By defining the semantics of this function in terms of a string-to-document-node\n             mapping in the dynamic context, the specification is acknowledging that the results of\n             this function are outside the purview of the language specification itself, and depend\n             entirely on the run-time environment in which the expression is evaluated. This run-time\n             environment includes not only an unpredictable collection of resources (\"the web\"), but\n             configurable machinery for locating resources and turning their contents into document\n             nodes within the XPath data model. Both the set of resources that are reachable, and the\n             mechanisms by which those resources are parsed and validated, are <termref def=\"implementation-dependent\"/>.</p><p xmlns:e=\"http://www.w3.org/1999/XSL/Spec/ElementSyntax\"> One possible processing model for this function is as follows. The resource identified\n             by the URI Reference is retrieved. If the resource cannot be retrieved, a <phrase diff=\"add\" at=\"L\">dynamic</phrase> error is\n             raised <errorref class=\"DC\" code=\"0002\"/>. The data resulting from the retrieval action\n             is then parsed as an XML document and a tree is constructed in accordance with the\n                <bibref ref=\"xpath-datamodel-30\"/>. If the top-level media type is known and is\n             \"text\", the content is parsed in the same way as if the media type were text/xml;\n             otherwise, it is parsed in the same way as if the media type were application/xml. If\n             the contents cannot be parsed successfully, a <phrase diff=\"add\" at=\"L\">dynamic</phrase> error is raised <errorref class=\"DC\" code=\"0002\"/>. Otherwise, the result of the function is the document node at the root\n             of the resulting tree. This tree is then optionally validated against a schema.</p><p xmlns:e=\"http://www.w3.org/1999/XSL/Spec/ElementSyntax\">Various aspects of this processing are <termref def=\"implementation-defined\"/>.\n             Implementations may provide external configuration options that allow any aspect of the\n             processing to be controlled by the user. In particular:</p><ulist xmlns:e=\"http://www.w3.org/1999/XSL/Spec/ElementSyntax\"><item><p>The set of URI schemes that the implementation recognizes is\n                   implementation-defined. Implementations may allow the mapping of URIs to resources\n                   to be configured by the user, using mechanisms such as catalogs or user-written\n                   URI handlers.</p></item><item><p>The handling of non-XML media types is implementation-defined. Implementations may\n                   allow instances of the data model to be constructed from non-XML resources, under\n                   user control.</p></item><item><p>It is <termref def=\"implementation-defined\"/> whether DTD validation and/or schema\n                   validation is applied to the source document.</p></item><item><p>Implementations may provide user-defined error handling options that allow\n                   processing to continue following an error in retrieving a resource, or in parsing\n                   and validating its content. When errors have been handled in this way, the\n                   function may return either an empty sequence, or a fallback document provided by\n                   the error handler.</p></item><item><p>Implementations may provide user options that relax the requirement for the\n                   function to return deterministic results.</p></item></ulist><p xmlns:e=\"http://www.w3.org/1999/XSL/Spec/ElementSyntax\" diff=\"add\" at=\"A-E26\">A <phrase diff=\"add\" at=\"L\">dynamic</phrase> error <rfc2119>may</rfc2119> be raised <errorref class=\"DC\" code=\"0005\"/> if <code>$uri</code> is not a valid URI.</p><p xmlns:e=\"http://www.w3.org/1999/XSL/Spec/ElementSyntax\" diff=\"chg\" at=\"G\">A <phrase diff=\"add\" at=\"L\">dynamic</phrase> error is raised <errorref class=\"DC\" code=\"0002\"/> if the\n                <term>available documents</term> provides no mapping for the absolutized URI.</p><p xmlns:e=\"http://www.w3.org/1999/XSL/Spec/ElementSyntax\">A <phrase diff=\"add\" at=\"L\">dynamic</phrase> error is raised <errorref class=\"DC\" code=\"0002\"/> if the resource cannot be\n             retrieved or cannot be parsed successfully as XML.</p><p xmlns:e=\"http://www.w3.org/1999/XSL/Spec/ElementSyntax\">A <phrase diff=\"add\" at=\"L\">dynamic</phrase> error is raised <errorref class=\"DC\" code=\"0003\"/> if the implementation is not able\n             to guarantee that the result of the function will be deterministic, and the user has not\n             indicated that an unstable result is acceptable.</p></div>\n", "summary" : "<p>  Retrieves a document using a URI supplied as an\n                 xs:string , and returns the corresponding document node.</p>", "annotation_str" : "", "annotations" : [  ], "updating" : false, "parameters" : [ { "name" : "uri", "type" : "xs:string", "occurrence" : "?", "description" : "" } ], "returns" : { "type" : "document()?", "description" : "" }, "errors" : [  ] }, { "isDocumented" : true, "arity" : 0, "name" : "document-uri", "qname" : "fn:document-uri", "signature" : "() as xs:anyURI? external", "description" : " <div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"><p xmlns:e=\"http://www.w3.org/1999/XSL/Spec/ElementSyntax\">Returns the URI of a resource where a document can be found, if available.</p><p xmlns:e=\"http://www.w3.org/1999/XSL/Spec/ElementSyntax\"><example role=\"signature\"><proto name=\"document-uri\" return-type=\"xs:anyURI?\" isOp=\"no\" prefix=\"fn\" returnEmptyOk=\"no\" returnSeq=\"no\" returnVaries=\"no\" isSchema=\"no\" isDatatype=\"no\" isSpecial=\"no\"/></example><example role=\"signature\"><proto name=\"document-uri\" return-type=\"xs:anyURI?\" isOp=\"no\" prefix=\"fn\" returnEmptyOk=\"no\" returnSeq=\"no\" returnVaries=\"no\" isSchema=\"no\" isDatatype=\"no\" isSpecial=\"no\"><arg name=\"arg\" type=\"node()?\"/></proto></example></p><p xmlns:e=\"http://www.w3.org/1999/XSL/Spec/ElementSyntax\">The zero-argument form of this function is <termref def=\"dt-deterministic\">deterministic</termref>, <termref def=\"dt-context-dependent\">context-dependent</termref>,  and <termref def=\"dt-focus-dependent\">focus-dependent</termref>. </p><p xmlns:e=\"http://www.w3.org/1999/XSL/Spec/ElementSyntax\">The one-argument form of this function is <termref def=\"dt-deterministic\">deterministic</termref>, <termref def=\"dt-context-independent\">context-independent</termref>,  and <termref def=\"dt-focus-independent\">focus-independent</termref>. </p><p xmlns:e=\"http://www.w3.org/1999/XSL/Spec/ElementSyntax\" diff=\"add\" at=\"F\">If the argument is omitted, it defaults to the context item\n                (<code>.</code>). The behavior of the function if the argument is omitted is exactly\n             the same as if the context item had been passed as the argument.</p><p xmlns:e=\"http://www.w3.org/1999/XSL/Spec/ElementSyntax\">If <code>$arg</code> is the empty sequence, the function returns the empty sequence.</p><p xmlns:e=\"http://www.w3.org/1999/XSL/Spec/ElementSyntax\">If <code>$arg</code> is not a document node, the function returns the empty\n             sequence.</p><p xmlns:e=\"http://www.w3.org/1999/XSL/Spec/ElementSyntax\">Otherwise, the function returns the value of the <code>document-uri</code> accessor\n             applied to <code>$arg</code>, as defined in <bibref ref=\"xpath-datamodel-30\"/> (See\n                <xspecref spec=\"DM30\" ref=\"DocumentNodeAccessors\"/>).</p><p xmlns:e=\"http://www.w3.org/1999/XSL/Spec/ElementSyntax\">The following errors may be raised when <code>$arg</code> is omitted:</p><ul xmlns:e=\"http://www.w3.org/1999/XSL/Spec/ElementSyntax\"><li><p>If the context\n                item is <xtermref ref=\"dt-absent\" spec=\"DM30\">absent</xtermref>, <phrase diff=\"add\" at=\"M\">dynamic error</phrase>\n                <xerrorref spec=\"XP\" class=\"DY\" code=\"0002\" type=\"dynamic\"/></p></li><li><p>If the context item is not a\n                node, <phrase diff=\"add\" at=\"M\">type error</phrase> <xerrorref spec=\"XP\" class=\"TY\" code=\"0004\" type=\"type\"/>.</p></li></ul></div>\n", "summary" : "<p>  Returns the URI of a resource where a document can be found, if available.</p>", "annotation_str" : "", "annotations" : [  ], "updating" : false, "parameters" : [  ], "returns" : { "type" : "xs:anyURI?", "description" : "" }, "errors" : [  ] }, { "isDocumented" : true, "arity" : 1, "name" : "document-uri", "qname" : "fn:document-uri", "signature" : "($arg as node()?) as xs:anyURI? external", "description" : " <div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"><p xmlns:e=\"http://www.w3.org/1999/XSL/Spec/ElementSyntax\">Returns the URI of a resource where a document can be found, if available.</p><p xmlns:e=\"http://www.w3.org/1999/XSL/Spec/ElementSyntax\"><example role=\"signature\"><proto name=\"document-uri\" return-type=\"xs:anyURI?\" isOp=\"no\" prefix=\"fn\" returnEmptyOk=\"no\" returnSeq=\"no\" returnVaries=\"no\" isSchema=\"no\" isDatatype=\"no\" isSpecial=\"no\"/></example><example role=\"signature\"><proto name=\"document-uri\" return-type=\"xs:anyURI?\" isOp=\"no\" prefix=\"fn\" returnEmptyOk=\"no\" returnSeq=\"no\" returnVaries=\"no\" isSchema=\"no\" isDatatype=\"no\" isSpecial=\"no\"><arg name=\"arg\" type=\"node()?\"/></proto></example></p><p xmlns:e=\"http://www.w3.org/1999/XSL/Spec/ElementSyntax\">The zero-argument form of this function is <termref def=\"dt-deterministic\">deterministic</termref>, <termref def=\"dt-context-dependent\">context-dependent</termref>,  and <termref def=\"dt-focus-dependent\">focus-dependent</termref>. </p><p xmlns:e=\"http://www.w3.org/1999/XSL/Spec/ElementSyntax\">The one-argument form of this function is <termref def=\"dt-deterministic\">deterministic</termref>, <termref def=\"dt-context-independent\">context-independent</termref>,  and <termref def=\"dt-focus-independent\">focus-independent</termref>. </p><p xmlns:e=\"http://www.w3.org/1999/XSL/Spec/ElementSyntax\" diff=\"add\" at=\"F\">If the argument is omitted, it defaults to the context item\n                (<code>.</code>). The behavior of the function if the argument is omitted is exactly\n             the same as if the context item had been passed as the argument.</p><p xmlns:e=\"http://www.w3.org/1999/XSL/Spec/ElementSyntax\">If <code>$arg</code> is the empty sequence, the function returns the empty sequence.</p><p xmlns:e=\"http://www.w3.org/1999/XSL/Spec/ElementSyntax\">If <code>$arg</code> is not a document node, the function returns the empty\n             sequence.</p><p xmlns:e=\"http://www.w3.org/1999/XSL/Spec/ElementSyntax\">Otherwise, the function returns the value of the <code>document-uri</code> accessor\n             applied to <code>$arg</code>, as defined in <bibref ref=\"xpath-datamodel-30\"/> (See\n                <xspecref spec=\"DM30\" ref=\"DocumentNodeAccessors\"/>).</p><p xmlns:e=\"http://www.w3.org/1999/XSL/Spec/ElementSyntax\">The following errors may be raised when <code>$arg</code> is omitted:</p><ul xmlns:e=\"http://www.w3.org/1999/XSL/Spec/ElementSyntax\"><li><p>If the context\n                item is <xtermref ref=\"dt-absent\" spec=\"DM30\">absent</xtermref>, <phrase diff=\"add\" at=\"M\">dynamic error</phrase>\n                <xerrorref spec=\"XP\" class=\"DY\" code=\"0002\" type=\"dynamic\"/></p></li><li><p>If the context item is not a\n                node, <phrase diff=\"add\" at=\"M\">type error</phrase> <xerrorref spec=\"XP\" class=\"TY\" code=\"0004\" type=\"type\"/>.</p></li></ul></div>\n", "summary" : "<p>  Returns the URI of a resource where a document can be found, if available.</p>", "annotation_str" : "", "annotations" : [  ], "updating" : false, "parameters" : [ { "name" : "arg", "type" : "node()", "occurrence" : "?", "description" : "" } ], "returns" : { "type" : "xs:anyURI?", "description" : "" }, "errors" : [  ] }, { "isDocumented" : true, "arity" : 1, "name" : "element-with-id", "qname" : "fn:element-with-id", "signature" : "($arg as xs:string*) as element(*)* external", "description" : " <div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"><p xmlns:e=\"http://www.w3.org/1999/XSL/Spec/ElementSyntax\" diff=\"add\" at=\"A-E31\"> Returns the sequence of element nodes that have an\n                <code>ID</code> value matching the value of one or more of the <code>IDREF</code>\n             values supplied in <code>$arg</code>.</p><p xmlns:e=\"http://www.w3.org/1999/XSL/Spec/ElementSyntax\"><example role=\"signature\"><proto name=\"element-with-id\" return-type=\"element()*\" isOp=\"no\" prefix=\"fn\" returnEmptyOk=\"no\" returnSeq=\"no\" returnVaries=\"no\" isSchema=\"no\" isDatatype=\"no\" isSpecial=\"no\"><arg name=\"arg\" type=\"xs:string*\"/></proto></example><example role=\"signature\"><proto name=\"element-with-id\" return-type=\"element()*\" isOp=\"no\" prefix=\"fn\" returnEmptyOk=\"no\" returnSeq=\"no\" returnVaries=\"no\" isSchema=\"no\" isDatatype=\"no\" isSpecial=\"no\"><arg name=\"arg\" type=\"xs:string*\"/><arg name=\"node\" type=\"node()\"/></proto></example></p><p xmlns:e=\"http://www.w3.org/1999/XSL/Spec/ElementSyntax\">The one-argument form of this function is <termref def=\"dt-deterministic\">deterministic</termref>, <termref def=\"dt-context-dependent\">context-dependent</termref>,  and <termref def=\"dt-focus-dependent\">focus-dependent</termref>. </p><p xmlns:e=\"http://www.w3.org/1999/XSL/Spec/ElementSyntax\">The two-argument form of this function is <termref def=\"dt-deterministic\">deterministic</termref>, <termref def=\"dt-context-independent\">context-independent</termref>,  and <termref def=\"dt-focus-independent\">focus-independent</termref>. </p><change xmlns:e=\"http://www.w3.org/1999/XSL/Spec/ElementSyntax\" diff=\"add\" at=\"A-E31\">\n             <note><p>The effect of this function is identical to <function>fn:id</function> in respect\n                   of elements that have an attribute with the <code>is-id</code> property. However,\n                   it behaves differently in respect of element nodes with the <code>is-id</code>\n                   property. Whereas the <code>fn:id</code>, for legacy reasons, returns the element\n                   that has the <code>is-id</code> property, this parent returns the element\n                   identified by the ID, which is the parent of the element having the\n                      <code>is-id</code> property.</p></note>\n             <p>The function returns a sequence, in document order with duplicates eliminated,\n                containing every element node <code>E</code> that satisfies all the following\n                conditions:</p>\n             <olist><item><p>\n                      <code>E</code> is in the target document. The target document is the document\n                      containing <code>$node</code>, or the document containing the context item\n                         (<code>.</code>) if the second argument is omitted. The behavior of the\n                      function if <code>$node</code> is omitted is exactly the same as if the context\n                      item had been passed as <code>$node</code>.</p></item><item><p><code>E</code> has an <code>ID</code> value equal to one of the candidate\n                         <code>IDREF</code> values, where:</p><ulist><item><p> An element has an <code>ID</code> value equal to <code>V</code> if\n                            either or both of the following conditions are true:</p><ulist><item><p>The element has an child element node whose <code>is-id</code>\n                                  property (See <xspecref spec=\"DM30\" ref=\"dm-is-id\"/>.) is true and\n                                  whose typed value is equal to <code>V</code> under the rules of the\n                                     <code>eq</code> operator using the Unicode code point collation\n                                     (<code>http://www.w3.org/2005/xpath-functions/collation/codepoint</code>).</p></item><item><p>The element has an attribute node whose <code>is-id</code> property\n                                  (See <xspecref spec=\"DM30\" ref=\"dm-is-id\"/>.) is true and whose\n                                  typed value is equal to <code>V</code> under the rules of the\n                                     <code>eq</code> operator using the Unicode code point collation\n                                     (<code>http://www.w3.org/2005/xpath-functions/collation/codepoint</code>).</p></item></ulist></item><item><p>Each <code>xs:string</code> in <code>$arg</code> is parsed as if it were\n                            of type <code>IDREFS</code>, that is, each <code>xs:string</code> in\n                               <code>$arg</code> is treated as a whitespace-separated sequence of\n                            tokens, each acting as an <code>IDREF</code>. These tokens are then\n                            included in the list of candidate <code>IDREF</code>s. If any of the\n                            tokens is not a lexically valid <code>IDREF</code> (that is, if it is not\n                            lexically an <code>xs:NCName</code>), it is ignored. Formally, the\n                            candidate <code>IDREF</code> values are the strings in the sequence given\n                            by the expression:</p><eg xml:space=\"preserve\">for $s in $arg return\n    fn:tokenize(fn:normalize-space($s), ' ')[. castable as xs:IDREF]</eg></item></ulist></item><item><p> If several elements have the same <code>ID</code> value, then <code>E</code>\n                      is the one that is first in document order.</p></item></olist>\n          </change><change xmlns:e=\"http://www.w3.org/1999/XSL/Spec/ElementSyntax\" diff=\"add\" at=\"A-E31\">\n             <p>A <phrase diff=\"add\" at=\"L\">dynamic</phrase> error is raised <errorref class=\"DC\" code=\"0001\" type=\"dynamic\"/> if\n                   <code>$node</code>, or the context item if the second argument is omitted, is a\n                   node in a tree whose root is not a document node.</p>\n             <p>The following errors may be raised when <code>$node</code> is omitted:</p>\n             <ul><li><p>If the context\n                   item is <xtermref ref=\"dt-absent\" spec=\"DM30\">absent</xtermref>, <phrase diff=\"add\" at=\"M\">dynamic error</phrase>\n                   <xerrorref spec=\"XP\" class=\"DY\" code=\"0002\" type=\"dynamic\"/></p></li><li><p>If the context item is not a\n                   node, <phrase diff=\"add\" at=\"M\">type error</phrase> <xerrorref spec=\"XP\" class=\"TY\" code=\"0004\" type=\"type\"/>.</p></li></ul>\n          </change></div>\n", "summary" : "<p>   Returns the sequence of element nodes that have an\n                 ID  value matching the value of one or more of the  IDREF \n             values supplied in  $arg .</p>", "annotation_str" : "", "annotations" : [  ], "updating" : false, "parameters" : [ { "name" : "arg", "type" : "xs:string", "occurrence" : "*", "description" : "" } ], "returns" : { "type" : "element(*)*", "description" : "" }, "errors" : [  ] }, { "isDocumented" : true, "arity" : 2, "name" : "element-with-id", "qname" : "fn:element-with-id", "signature" : "($arg as xs:string*, $node as node()) as element(*)* external", "description" : " <div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"><p xmlns:e=\"http://www.w3.org/1999/XSL/Spec/ElementSyntax\" diff=\"add\" at=\"A-E31\"> Returns the sequence of element nodes that have an\n                <code>ID</code> value matching the value of one or more of the <code>IDREF</code>\n             values supplied in <code>$arg</code>.</p><p xmlns:e=\"http://www.w3.org/1999/XSL/Spec/ElementSyntax\"><example role=\"signature\"><proto name=\"element-with-id\" return-type=\"element()*\" isOp=\"no\" prefix=\"fn\" returnEmptyOk=\"no\" returnSeq=\"no\" returnVaries=\"no\" isSchema=\"no\" isDatatype=\"no\" isSpecial=\"no\"><arg name=\"arg\" type=\"xs:string*\"/></proto></example><example role=\"signature\"><proto name=\"element-with-id\" return-type=\"element()*\" isOp=\"no\" prefix=\"fn\" returnEmptyOk=\"no\" returnSeq=\"no\" returnVaries=\"no\" isSchema=\"no\" isDatatype=\"no\" isSpecial=\"no\"><arg name=\"arg\" type=\"xs:string*\"/><arg name=\"node\" type=\"node()\"/></proto></example></p><p xmlns:e=\"http://www.w3.org/1999/XSL/Spec/ElementSyntax\">The one-argument form of this function is <termref def=\"dt-deterministic\">deterministic</termref>, <termref def=\"dt-context-dependent\">context-dependent</termref>,  and <termref def=\"dt-focus-dependent\">focus-dependent</termref>. </p><p xmlns:e=\"http://www.w3.org/1999/XSL/Spec/ElementSyntax\">The two-argument form of this function is <termref def=\"dt-deterministic\">deterministic</termref>, <termref def=\"dt-context-independent\">context-independent</termref>,  and <termref def=\"dt-focus-independent\">focus-independent</termref>. </p><change xmlns:e=\"http://www.w3.org/1999/XSL/Spec/ElementSyntax\" diff=\"add\" at=\"A-E31\">\n             <note><p>The effect of this function is identical to <function>fn:id</function> in respect\n                   of elements that have an attribute with the <code>is-id</code> property. However,\n                   it behaves differently in respect of element nodes with the <code>is-id</code>\n                   property. Whereas the <code>fn:id</code>, for legacy reasons, returns the element\n                   that has the <code>is-id</code> property, this parent returns the element\n                   identified by the ID, which is the parent of the element having the\n                      <code>is-id</code> property.</p></note>\n             <p>The function returns a sequence, in document order with duplicates eliminated,\n                containing every element node <code>E</code> that satisfies all the following\n                conditions:</p>\n             <olist><item><p>\n                      <code>E</code> is in the target document. The target document is the document\n                      containing <code>$node</code>, or the document containing the context item\n                         (<code>.</code>) if the second argument is omitted. The behavior of the\n                      function if <code>$node</code> is omitted is exactly the same as if the context\n                      item had been passed as <code>$node</code>.</p></item><item><p><code>E</code> has an <code>ID</code> value equal to one of the candidate\n                         <code>IDREF</code> values, where:</p><ulist><item><p> An element has an <code>ID</code> value equal to <code>V</code> if\n                            either or both of the following conditions are true:</p><ulist><item><p>The element has an child element node whose <code>is-id</code>\n                                  property (See <xspecref spec=\"DM30\" ref=\"dm-is-id\"/>.) is true and\n                                  whose typed value is equal to <code>V</code> under the rules of the\n                                     <code>eq</code> operator using the Unicode code point collation\n                                     (<code>http://www.w3.org/2005/xpath-functions/collation/codepoint</code>).</p></item><item><p>The element has an attribute node whose <code>is-id</code> property\n                                  (See <xspecref spec=\"DM30\" ref=\"dm-is-id\"/>.) is true and whose\n                                  typed value is equal to <code>V</code> under the rules of the\n                                     <code>eq</code> operator using the Unicode code point collation\n                                     (<code>http://www.w3.org/2005/xpath-functions/collation/codepoint</code>).</p></item></ulist></item><item><p>Each <code>xs:string</code> in <code>$arg</code> is parsed as if it were\n                            of type <code>IDREFS</code>, that is, each <code>xs:string</code> in\n                               <code>$arg</code> is treated as a whitespace-separated sequence of\n                            tokens, each acting as an <code>IDREF</code>. These tokens are then\n                            included in the list of candidate <code>IDREF</code>s. If any of the\n                            tokens is not a lexically valid <code>IDREF</code> (that is, if it is not\n                            lexically an <code>xs:NCName</code>), it is ignored. Formally, the\n                            candidate <code>IDREF</code> values are the strings in the sequence given\n                            by the expression:</p><eg xml:space=\"preserve\">for $s in $arg return\n    fn:tokenize(fn:normalize-space($s), ' ')[. castable as xs:IDREF]</eg></item></ulist></item><item><p> If several elements have the same <code>ID</code> value, then <code>E</code>\n                      is the one that is first in document order.</p></item></olist>\n          </change><change xmlns:e=\"http://www.w3.org/1999/XSL/Spec/ElementSyntax\" diff=\"add\" at=\"A-E31\">\n             <p>A <phrase diff=\"add\" at=\"L\">dynamic</phrase> error is raised <errorref class=\"DC\" code=\"0001\" type=\"dynamic\"/> if\n                   <code>$node</code>, or the context item if the second argument is omitted, is a\n                   node in a tree whose root is not a document node.</p>\n             <p>The following errors may be raised when <code>$node</code> is omitted:</p>\n             <ul><li><p>If the context\n                   item is <xtermref ref=\"dt-absent\" spec=\"DM30\">absent</xtermref>, <phrase diff=\"add\" at=\"M\">dynamic error</phrase>\n                   <xerrorref spec=\"XP\" class=\"DY\" code=\"0002\" type=\"dynamic\"/></p></li><li><p>If the context item is not a\n                   node, <phrase diff=\"add\" at=\"M\">type error</phrase> <xerrorref spec=\"XP\" class=\"TY\" code=\"0004\" type=\"type\"/>.</p></li></ul>\n          </change></div>\n", "summary" : "<p>   Returns the sequence of element nodes that have an\n                 ID  value matching the value of one or more of the  IDREF \n             values supplied in  $arg .</p>", "annotation_str" : "", "annotations" : [  ], "updating" : false, "parameters" : [ { "name" : "arg", "type" : "xs:string", "occurrence" : "*", "description" : "" }, { "name" : "node", "type" : "node()", "occurrence" : null, "description" : "" } ], "returns" : { "type" : "element(*)*", "description" : "" }, "errors" : [  ] }, { "isDocumented" : true, "arity" : 1, "name" : "empty", "qname" : "fn:empty", "signature" : "($arg as item()*) as xs:boolean external", "description" : " <div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"><p xmlns:e=\"http://www.w3.org/1999/XSL/Spec/ElementSyntax\">Returns true if the argument is the empty sequence.</p><p xmlns:e=\"http://www.w3.org/1999/XSL/Spec/ElementSyntax\"><example role=\"signature\"><proto name=\"empty\" return-type=\"xs:boolean\" isOp=\"no\" prefix=\"fn\" returnEmptyOk=\"no\" returnSeq=\"no\" returnVaries=\"no\" isSchema=\"no\" isDatatype=\"no\" isSpecial=\"no\"><arg name=\"arg\" type=\"item()*\"/></proto></example></p><p xmlns:e=\"http://www.w3.org/1999/XSL/Spec/ElementSyntax\">This function is <termref def=\"dt-deterministic\">deterministic</termref>, <termref def=\"dt-context-independent\">context-independent</termref>,  and <termref def=\"dt-focus-independent\">focus-independent</termref>. </p><p xmlns:e=\"http://www.w3.org/1999/XSL/Spec/ElementSyntax\">If the value of <code>$arg</code> is the empty sequence, the function returns\n                <code>true</code>; otherwise, the function returns <code>false</code>. </p><p xmlns:e=\"http://www.w3.org/1999/XSL/Spec/ElementSyntax\">The expression <code>fn:empty((1,2,3)[10])</code> returns <code>true()</code>.</p><p xmlns:e=\"http://www.w3.org/1999/XSL/Spec/ElementSyntax\">The expression <code>fn:empty(fn:remove((\"hello\", \"world\"), 1))</code> returns <code>false()</code>.</p></div>\n", "summary" : "<p>  Returns true if the argument is the empty sequence.</p>", "annotation_str" : "", "annotations" : [  ], "updating" : false, "parameters" : [ { "name" : "arg", "type" : "item()", "occurrence" : "*", "description" : "" } ], "returns" : { "type" : "xs:boolean", "description" : "" }, "errors" : [  ] }, { "isDocumented" : true, "arity" : 1, "name" : "encode-for-uri", "qname" : "fn:encode-for-uri", "signature" : "($uri-part as xs:string?) as xs:string external", "description" : " <div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"><p xmlns:e=\"http://www.w3.org/1999/XSL/Spec/ElementSyntax\">Encodes reserved characters in a string that is intended to be used in the path\n             segment of a URI.</p><p xmlns:e=\"http://www.w3.org/1999/XSL/Spec/ElementSyntax\"><example role=\"signature\"><proto name=\"encode-for-uri\" return-type=\"xs:string\" isOp=\"no\" prefix=\"fn\" returnEmptyOk=\"no\" returnSeq=\"no\" returnVaries=\"no\" isSchema=\"no\" isDatatype=\"no\" isSpecial=\"no\"><arg name=\"uri-part\" type=\"xs:string?\"/></proto></example></p><p xmlns:e=\"http://www.w3.org/1999/XSL/Spec/ElementSyntax\">This function is <termref def=\"dt-deterministic\">deterministic</termref>, <termref def=\"dt-context-independent\">context-independent</termref>,  and <termref def=\"dt-focus-independent\">focus-independent</termref>. </p><p xmlns:e=\"http://www.w3.org/1999/XSL/Spec/ElementSyntax\">If <code>$uri-part</code> is the empty sequence, the function returns the zero-length\n             string.</p><p xmlns:e=\"http://www.w3.org/1999/XSL/Spec/ElementSyntax\">This function applies the URI escaping rules defined in section 2 of <bibref ref=\"rfc3986\"/> to the <code>xs:string</code> supplied as <code>$uri-part</code>. The\n             effect of the function is to escape reserved characters. Each such character in the\n             string is replaced with its percent-encoded form as described in <bibref ref=\"rfc3986\"/>.</p><p xmlns:e=\"http://www.w3.org/1999/XSL/Spec/ElementSyntax\">Since <bibref ref=\"rfc3986\"/> recommends that, for consistency, URI producers and\n             normalizers should use uppercase hexadecimal digits for all percent-encodings, this\n             function must always generate hexadecimal values using the upper-case letters A-F.</p><p xmlns:e=\"http://www.w3.org/1999/XSL/Spec/ElementSyntax\">All characters are escaped except those identified as \"unreserved\" by <bibref ref=\"rfc3986\"/>, that is the upper- and lower-case letters A-Z, the digits 0-9,\n             HYPHEN-MINUS (\"-\"), LOW LINE (\"_\"), FULL STOP \".\", and TILDE \"~\".</p><p xmlns:e=\"http://www.w3.org/1999/XSL/Spec/ElementSyntax\">This function escapes URI delimiters and therefore cannot be used indiscriminately to\n             encode \"invalid\" characters in a path segment.</p><p xmlns:e=\"http://www.w3.org/1999/XSL/Spec/ElementSyntax\">This function is invertible but not idempotent. This is because a string containing a\n             percent character will be modified by applying the function: for example\n                <code>100%</code> becomes <code>100%25</code>, while <code>100%25</code> becomes\n                <code>100%2525</code>.</p></div>\n", "summary" : "<p>  Encodes reserved characters in a string that is intended to be used in the path\n             segment of a URI.</p>", "annotation_str" : "", "annotations" : [  ], "updating" : false, "parameters" : [ { "name" : "uri-part", "type" : "xs:string", "occurrence" : "?", "description" : "" } ], "returns" : { "type" : "xs:string", "description" : "" }, "errors" : [  ] }, { "isDocumented" : true, "arity" : 2, "name" : "ends-with", "qname" : "fn:ends-with", "signature" : "($arg1 as xs:string?, $arg2 as xs:string?) as xs:boolean external", "description" : " <div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"><p xmlns:e=\"http://www.w3.org/1999/XSL/Spec/ElementSyntax\">Returns true if the string <code>$arg1</code> contains <code>$arg2</code> as a\n             trailing substring, taking collations into account.</p><p xmlns:e=\"http://www.w3.org/1999/XSL/Spec/ElementSyntax\"><example role=\"signature\"><proto name=\"ends-with\" return-type=\"xs:boolean\" isOp=\"no\" prefix=\"fn\" returnEmptyOk=\"no\" returnSeq=\"no\" returnVaries=\"no\" isSchema=\"no\" isDatatype=\"no\" isSpecial=\"no\"><arg name=\"arg1\" type=\"xs:string?\"/><arg name=\"arg2\" type=\"xs:string?\"/></proto></example><example role=\"signature\"><proto name=\"ends-with\" return-type=\"xs:boolean\" isOp=\"no\" prefix=\"fn\" returnEmptyOk=\"no\" returnSeq=\"no\" returnVaries=\"no\" isSchema=\"no\" isDatatype=\"no\" isSpecial=\"no\"><arg name=\"arg1\" type=\"xs:string?\"/><arg name=\"arg2\" type=\"xs:string?\"/><arg name=\"collation\" type=\"xs:string\"/></proto></example></p><p xmlns:e=\"http://www.w3.org/1999/XSL/Spec/ElementSyntax\">The two-argument form of this function is <termref def=\"dt-deterministic\">deterministic</termref>, <termref def=\"dt-context-dependent\">context-dependent</termref>,  and <termref def=\"dt-focus-independent\">focus-independent</termref>.  It depends on\n \t\tcollations.\n \t</p><p xmlns:e=\"http://www.w3.org/1999/XSL/Spec/ElementSyntax\">The three-argument form of this function is <termref def=\"dt-deterministic\">deterministic</termref>, <termref def=\"dt-context-dependent\">context-dependent</termref>,  and <termref def=\"dt-focus-independent\">focus-independent</termref>.  It depends on\n \t\tcollations, and static base uri.\n \t</p><p xmlns:e=\"http://www.w3.org/1999/XSL/Spec/ElementSyntax\">If the value of <code>$arg1</code> or <code>$arg2</code> is the empty sequence, or\n             contains only ignorable collation units, it is interpreted as the zero-length\n             string.</p><p xmlns:e=\"http://www.w3.org/1999/XSL/Spec/ElementSyntax\">If the value of <code>$arg2</code> is the zero-length string, then the function returns\n                <code>true</code>. If the value of <code>$arg1</code> is the zero-length string and\n             the value of <code>$arg2</code> is not the zero-length string, then the function returns\n                <code>false</code>.</p><p xmlns:e=\"http://www.w3.org/1999/XSL/Spec/ElementSyntax\">The collation used by this function is determined according to the rules in <specref ref=\"choosing-a-collation\"/>.</p><p xmlns:e=\"http://www.w3.org/1999/XSL/Spec/ElementSyntax\">The function returns an <code>xs:boolean</code> indicating whether or not the value of\n                <code>$arg1</code> starts with a sequence of collation units that provides a\n                <term>match</term> to the collation units of <code>$arg2</code> according to the\n             collation that is used.</p><note xmlns:e=\"http://www.w3.org/1999/XSL/Spec/ElementSyntax\"><p>\n                <term>Match</term> is defined in <bibref ref=\"Unicode-Collations\"/>. </p></note><p xmlns:e=\"http://www.w3.org/1999/XSL/Spec/ElementSyntax\">A <phrase diff=\"add\" at=\"L\">dynamic</phrase> error <rfc2119>may</rfc2119> be raised <errorref class=\"CH\" code=\"0004\"/> if the\n             specified collation does not support collation units.</p></div>\n", "summary" : "<p>  Returns true if the string  $arg1  contains  $arg2  as a\n             trailing substring, taking collations into account.</p>", "annotation_str" : "", "annotations" : [  ], "updating" : false, "parameters" : [ { "name" : "arg1", "type" : "xs:string", "occurrence" : "?", "description" : "" }, { "name" : "arg2", "type" : "xs:string", "occurrence" : "?", "description" : "" } ], "returns" : { "type" : "xs:boolean", "description" : "" }, "errors" : [  ] }, { "isDocumented" : true, "arity" : 3, "name" : "ends-with", "qname" : "fn:ends-with", "signature" : "($arg1 as xs:string?, $arg2 as xs:string?, $collation as xs:string) as xs:boolean external", "description" : " <div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"><p xmlns:e=\"http://www.w3.org/1999/XSL/Spec/ElementSyntax\">Returns true if the string <code>$arg1</code> contains <code>$arg2</code> as a\n             trailing substring, taking collations into account.</p><p xmlns:e=\"http://www.w3.org/1999/XSL/Spec/ElementSyntax\"><example role=\"signature\"><proto name=\"ends-with\" return-type=\"xs:boolean\" isOp=\"no\" prefix=\"fn\" returnEmptyOk=\"no\" returnSeq=\"no\" returnVaries=\"no\" isSchema=\"no\" isDatatype=\"no\" isSpecial=\"no\"><arg name=\"arg1\" type=\"xs:string?\"/><arg name=\"arg2\" type=\"xs:string?\"/></proto></example><example role=\"signature\"><proto name=\"ends-with\" return-type=\"xs:boolean\" isOp=\"no\" prefix=\"fn\" returnEmptyOk=\"no\" returnSeq=\"no\" returnVaries=\"no\" isSchema=\"no\" isDatatype=\"no\" isSpecial=\"no\"><arg name=\"arg1\" type=\"xs:string?\"/><arg name=\"arg2\" type=\"xs:string?\"/><arg name=\"collation\" type=\"xs:string\"/></proto></example></p><p xmlns:e=\"http://www.w3.org/1999/XSL/Spec/ElementSyntax\">The two-argument form of this function is <termref def=\"dt-deterministic\">deterministic</termref>, <termref def=\"dt-context-dependent\">context-dependent</termref>,  and <termref def=\"dt-focus-independent\">focus-independent</termref>.  It depends on\n \t\tcollations.\n \t</p><p xmlns:e=\"http://www.w3.org/1999/XSL/Spec/ElementSyntax\">The three-argument form of this function is <termref def=\"dt-deterministic\">deterministic</termref>, <termref def=\"dt-context-dependent\">context-dependent</termref>,  and <termref def=\"dt-focus-independent\">focus-independent</termref>.  It depends on\n \t\tcollations, and static base uri.\n \t</p><p xmlns:e=\"http://www.w3.org/1999/XSL/Spec/ElementSyntax\">If the value of <code>$arg1</code> or <code>$arg2</code> is the empty sequence, or\n             contains only ignorable collation units, it is interpreted as the zero-length\n             string.</p><p xmlns:e=\"http://www.w3.org/1999/XSL/Spec/ElementSyntax\">If the value of <code>$arg2</code> is the zero-length string, then the function returns\n                <code>true</code>. If the value of <code>$arg1</code> is the zero-length string and\n             the value of <code>$arg2</code> is not the zero-length string, then the function returns\n                <code>false</code>.</p><p xmlns:e=\"http://www.w3.org/1999/XSL/Spec/ElementSyntax\">The collation used by this function is determined according to the rules in <specref ref=\"choosing-a-collation\"/>.</p><p xmlns:e=\"http://www.w3.org/1999/XSL/Spec/ElementSyntax\">The function returns an <code>xs:boolean</code> indicating whether or not the value of\n                <code>$arg1</code> starts with a sequence of collation units that provides a\n                <term>match</term> to the collation units of <code>$arg2</code> according to the\n             collation that is used.</p><note xmlns:e=\"http://www.w3.org/1999/XSL/Spec/ElementSyntax\"><p>\n                <term>Match</term> is defined in <bibref ref=\"Unicode-Collations\"/>. </p></note><p xmlns:e=\"http://www.w3.org/1999/XSL/Spec/ElementSyntax\">A <phrase diff=\"add\" at=\"L\">dynamic</phrase> error <rfc2119>may</rfc2119> be raised <errorref class=\"CH\" code=\"0004\"/> if the\n             specified collation does not support collation units.</p></div>\n", "summary" : "<p>  Returns true if the string  $arg1  contains  $arg2  as a\n             trailing substring, taking collations into account.</p>", "annotation_str" : "", "annotations" : [  ], "updating" : false, "parameters" : [ { "name" : "arg1", "type" : "xs:string", "occurrence" : "?", "description" : "" }, { "name" : "arg2", "type" : "xs:string", "occurrence" : "?", "description" : "" }, { "name" : "collation", "type" : "xs:string", "occurrence" : null, "description" : "" } ], "returns" : { "type" : "xs:boolean", "description" : "" }, "errors" : [  ] }, { "isDocumented" : true, "arity" : 1, "name" : "environment-variable", "qname" : "fn:environment-variable", "signature" : "($arg as xs:string) as xs:string? external", "description" : " <div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"><p xmlns:e=\"http://www.w3.org/1999/XSL/Spec/ElementSyntax\">Returns the value of a system environment variable, if it exists.</p><p xmlns:e=\"http://www.w3.org/1999/XSL/Spec/ElementSyntax\"><example role=\"signature\"><proto name=\"environment-variable\" return-type=\"xs:string?\" isOp=\"no\" prefix=\"fn\" returnEmptyOk=\"no\" returnSeq=\"no\" returnVaries=\"no\" isSchema=\"no\" isDatatype=\"no\" isSpecial=\"no\"><arg name=\"name\" type=\"xs:string\"/></proto></example></p><p xmlns:e=\"http://www.w3.org/1999/XSL/Spec/ElementSyntax\">This function is <termref def=\"dt-deterministic\">deterministic</termref>, <termref def=\"dt-context-dependent\">context-dependent</termref>,  and <termref def=\"dt-focus-independent\">focus-independent</termref>.  It depends on\n \t\tenvironment variables.\n \t</p><p xmlns:e=\"http://www.w3.org/1999/XSL/Spec/ElementSyntax\">The set of available <xtermref spec=\"XP30\" ref=\"dt-environment-variables\">environment variables</xtermref>\n             is a set of (name, value) pairs forming part\n             of the dynamic context, in which the name is unique within the set of pairs. The name\n             and value are arbitrary strings.</p><p xmlns:e=\"http://www.w3.org/1999/XSL/Spec/ElementSyntax\">If the <code>$name</code> argument matches the name of one of these pairs, the function\n             returns the corresponding value.</p><p xmlns:e=\"http://www.w3.org/1999/XSL/Spec/ElementSyntax\">If there is no environment variable with a matching name, the function returns the empty\n             sequence.</p><p xmlns:e=\"http://www.w3.org/1999/XSL/Spec/ElementSyntax\">The collation used for matching names is <termref def=\"implementation-defined\"/>, but\n             must be the same as the collation used to ensure that the names of all environment\n             variables are unique.</p><p xmlns:e=\"http://www.w3.org/1999/XSL/Spec/ElementSyntax\" diff=\"add\" at=\"I\">The function is <termref def=\"dt-deterministic\">deterministic</termref>,\n             which means that if it is called several times\n          within the same <termref def=\"dt-execution-scope\">execution scope</termref>, with the same arguments,\n             it must return the same result.</p><p xmlns:e=\"http://www.w3.org/1999/XSL/Spec/ElementSyntax\">On many platforms, the term \"environment variable\" has a natural meaning in terms of\n             facilities provided by the operating system. This interpretation of the concept does not\n             exclude other interpretations, such as a mapping to a set of configuration parameters in\n             a database system.</p><p xmlns:e=\"http://www.w3.org/1999/XSL/Spec/ElementSyntax\">Environment variable names are usually case sensitive. Names are usually of the form\n                <code>(letter|_) (letter|_|digit)*</code>, but this varies by platform.</p><p xmlns:e=\"http://www.w3.org/1999/XSL/Spec/ElementSyntax\">On some platforms, there may sometimes be multiple environment variables with the same name;\n             in this case, it is implementation-dependent as to which is returned; see for example\n                <bibref ref=\"POSIX.1-2008\"/> (Chapter 8, Environment Variables).\n             Implementations <rfc2119>may</rfc2119> use prefixes or other naming conventions\n             to disambiguate the names.</p><p xmlns:e=\"http://www.w3.org/1999/XSL/Spec/ElementSyntax\">The requirement to ensure that the function is deterministic means in practice that\n          the implementation must make a snapshot of the environment variables at some time\n          during execution, and return values obtained from this snapshot, rather than using\n          live values that are subject to change at any time.</p><p xmlns:e=\"http://www.w3.org/1999/XSL/Spec/ElementSyntax\">Operating system environment variables may be associated with a particular process,\n          while queries and stylesheets may execute across multiple processes (or multiple machines).\n          In such circumstances implementations <rfc2119>may</rfc2119> choose to provide access\n          to the environment variables associated with the process in which the query or stylesheet\n          processing was initiated.</p><p xmlns:e=\"http://www.w3.org/1999/XSL/Spec/ElementSyntax\">Security advice: Queries from untrusted sources should not be permitted unrestricted\n             access to environment variables. For example, the name of the account under which the\n             query is running may be useful information to a would-be intruder. An implementation may\n             therefore choose to restrict access to the environment, or may provide a facility to\n             make <code>fn:environment-variable</code> always return the empty sequence.</p></div>\n", "summary" : "<p>  Returns the value of a system environment variable, if it exists.</p>", "annotation_str" : "", "annotations" : [  ], "updating" : false, "parameters" : [ { "name" : "arg", "type" : "xs:string", "occurrence" : null, "description" : "" } ], "returns" : { "type" : "xs:string?", "description" : "" }, "errors" : [  ] }, { "isDocumented" : true, "arity" : 1, "name" : "environment-variable", "qname" : "fn:environment-variable", "signature" : "($name as xs:string) as xs:string? external", "description" : " <div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"><p xmlns:e=\"http://www.w3.org/1999/XSL/Spec/ElementSyntax\">Returns the value of a system environment variable, if it exists.</p><p xmlns:e=\"http://www.w3.org/1999/XSL/Spec/ElementSyntax\"><example role=\"signature\"><proto name=\"environment-variable\" return-type=\"xs:string?\" isOp=\"no\" prefix=\"fn\" returnEmptyOk=\"no\" returnSeq=\"no\" returnVaries=\"no\" isSchema=\"no\" isDatatype=\"no\" isSpecial=\"no\"><arg name=\"name\" type=\"xs:string\"/></proto></example></p><p xmlns:e=\"http://www.w3.org/1999/XSL/Spec/ElementSyntax\">This function is <termref def=\"dt-deterministic\">deterministic</termref>, <termref def=\"dt-context-dependent\">context-dependent</termref>,  and <termref def=\"dt-focus-independent\">focus-independent</termref>.  It depends on\n \t\tenvironment variables.\n \t</p><p xmlns:e=\"http://www.w3.org/1999/XSL/Spec/ElementSyntax\">The set of available <xtermref spec=\"XP30\" ref=\"dt-environment-variables\">environment variables</xtermref>\n             is a set of (name, value) pairs forming part\n             of the dynamic context, in which the name is unique within the set of pairs. The name\n             and value are arbitrary strings.</p><p xmlns:e=\"http://www.w3.org/1999/XSL/Spec/ElementSyntax\">If the <code>$name</code> argument matches the name of one of these pairs, the function\n             returns the corresponding value.</p><p xmlns:e=\"http://www.w3.org/1999/XSL/Spec/ElementSyntax\">If there is no environment variable with a matching name, the function returns the empty\n             sequence.</p><p xmlns:e=\"http://www.w3.org/1999/XSL/Spec/ElementSyntax\">The collation used for matching names is <termref def=\"implementation-defined\"/>, but\n             must be the same as the collation used to ensure that the names of all environment\n             variables are unique.</p><p xmlns:e=\"http://www.w3.org/1999/XSL/Spec/ElementSyntax\" diff=\"add\" at=\"I\">The function is <termref def=\"dt-deterministic\">deterministic</termref>,\n             which means that if it is called several times\n          within the same <termref def=\"dt-execution-scope\">execution scope</termref>, with the same arguments,\n             it must return the same result.</p><p xmlns:e=\"http://www.w3.org/1999/XSL/Spec/ElementSyntax\">On many platforms, the term \"environment variable\" has a natural meaning in terms of\n             facilities provided by the operating system. This interpretation of the concept does not\n             exclude other interpretations, such as a mapping to a set of configuration parameters in\n             a database system.</p><p xmlns:e=\"http://www.w3.org/1999/XSL/Spec/ElementSyntax\">Environment variable names are usually case sensitive. Names are usually of the form\n                <code>(letter|_) (letter|_|digit)*</code>, but this varies by platform.</p><p xmlns:e=\"http://www.w3.org/1999/XSL/Spec/ElementSyntax\">On some platforms, there may sometimes be multiple environment variables with the same name;\n             in this case, it is implementation-dependent as to which is returned; see for example\n                <bibref ref=\"POSIX.1-2008\"/> (Chapter 8, Environment Variables).\n             Implementations <rfc2119>may</rfc2119> use prefixes or other naming conventions\n             to disambiguate the names.</p><p xmlns:e=\"http://www.w3.org/1999/XSL/Spec/ElementSyntax\">The requirement to ensure that the function is deterministic means in practice that\n          the implementation must make a snapshot of the environment variables at some time\n          during execution, and return values obtained from this snapshot, rather than using\n          live values that are subject to change at any time.</p><p xmlns:e=\"http://www.w3.org/1999/XSL/Spec/ElementSyntax\">Operating system environment variables may be associated with a particular process,\n          while queries and stylesheets may execute across multiple processes (or multiple machines).\n          In such circumstances implementations <rfc2119>may</rfc2119> choose to provide access\n          to the environment variables associated with the process in which the query or stylesheet\n          processing was initiated.</p><p xmlns:e=\"http://www.w3.org/1999/XSL/Spec/ElementSyntax\">Security advice: Queries from untrusted sources should not be permitted unrestricted\n             access to environment variables. For example, the name of the account under which the\n             query is running may be useful information to a would-be intruder. An implementation may\n             therefore choose to restrict access to the environment, or may provide a facility to\n             make <code>fn:environment-variable</code> always return the empty sequence.</p></div>\n", "summary" : "<p>  Returns the value of a system environment variable, if it exists.</p>", "annotation_str" : "", "annotations" : [  ], "updating" : false, "parameters" : [ { "name" : "name", "type" : "xs:string", "occurrence" : null, "description" : "" } ], "returns" : { "type" : "xs:string?", "description" : "" }, "errors" : [  ] }, { "isDocumented" : true, "arity" : 0, "name" : "error", "qname" : "fn:error", "signature" : "() as none external", "description" : " <div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"><p xmlns:e=\"http://www.w3.org/1999/XSL/Spec/ElementSyntax\">Calling the <code>fn:error</code> function raises an application-defined\n             error.</p><p xmlns:e=\"http://www.w3.org/1999/XSL/Spec/ElementSyntax\"><example role=\"signature\"><proto name=\"error\" return-type=\"none\" isOp=\"no\" prefix=\"fn\" returnEmptyOk=\"no\" returnSeq=\"no\" returnVaries=\"no\" isSchema=\"no\" isDatatype=\"no\" isSpecial=\"no\"/></example><example role=\"signature\"><proto name=\"error\" return-type=\"none\" isOp=\"no\" prefix=\"fn\" returnEmptyOk=\"no\" returnSeq=\"no\" returnVaries=\"no\" isSchema=\"no\" isDatatype=\"no\" isSpecial=\"no\"><arg name=\"code\" type=\"xs:QName\"/></proto></example><example role=\"signature\"><proto name=\"error\" return-type=\"none\" isOp=\"no\" prefix=\"fn\" returnEmptyOk=\"no\" returnSeq=\"no\" returnVaries=\"no\" isSchema=\"no\" isDatatype=\"no\" isSpecial=\"no\"><arg name=\"code\" type=\"xs:QName?\"/><arg name=\"description\" type=\"xs:string\"/></proto></example><example role=\"signature\"><proto name=\"error\" return-type=\"none\" isOp=\"no\" prefix=\"fn\" returnEmptyOk=\"no\" returnSeq=\"no\" returnVaries=\"no\" isSchema=\"no\" isDatatype=\"no\" isSpecial=\"no\"><arg name=\"code\" type=\"xs:QName?\"/><arg name=\"description\" type=\"xs:string\"/><arg name=\"error-object\" type=\"item()*\"/></proto></example></p><p xmlns:e=\"http://www.w3.org/1999/XSL/Spec/ElementSyntax\">This function is <termref def=\"dt-nondeterministic\">nondeterministic</termref>, <termref def=\"dt-context-independent\">context-independent</termref>,  and <termref def=\"dt-focus-independent\">focus-independent</termref>. </p><p xmlns:e=\"http://www.w3.org/1999/XSL/Spec/ElementSyntax\">This function never returns a value. Instead it always raises an error. The effect of\n             the error is identical to the effect of dynamic errors raised implicitly, for example\n             when an incorrect argument is supplied to a function.</p><p xmlns:e=\"http://www.w3.org/1999/XSL/Spec/ElementSyntax\">The parameters to the <code>fn:error</code> function supply information that is\n             associated with the error condition and that is made available to a caller that asks for\n             information about the error. The error may be caught either by the host language (using\n             a try/catch construct in XSLT or XQuery, for example), or by the calling application or\n             external processing environment. The way in which error information is returned to the\n             external processing environment is <termref def=\"implementation-dependent\"/></p><p xmlns:e=\"http://www.w3.org/1999/XSL/Spec/ElementSyntax\">If <code>fn:error</code> is called with no arguments, then its behavior is the same as\n             the function call: </p><eg xmlns:e=\"http://www.w3.org/1999/XSL/Spec/ElementSyntax\" xml:space=\"preserve\"> fn:error(fn:QName('http://www.w3.org/2005/xqt-errors', 'err:FOER0000')) </eg><p xmlns:e=\"http://www.w3.org/1999/XSL/Spec/ElementSyntax\">If <code>$code</code> is the empty sequence then the effective value is the\n                <code>xs:QName</code> constructed by:</p><eg xmlns:e=\"http://www.w3.org/1999/XSL/Spec/ElementSyntax\" xml:space=\"preserve\"> fn:QName('http://www.w3.org/2005/xqt-errors', 'err:FOER0000')</eg><p xmlns:e=\"http://www.w3.org/1999/XSL/Spec/ElementSyntax\">There are three pieces of information that may be associated with an error:</p><ulist xmlns:e=\"http://www.w3.org/1999/XSL/Spec/ElementSyntax\"><item><p>The <code>$code</code> is an error code that distinguishes this error from others.\n                   It is an <code>xs:QName</code>; the namespace URI conventionally identifies the\n                   component, subsystem, or authority responsible for defining the meaning of the\n                   error code, while the local part identifies the specific error condition. The\n                   namespace URI <code>http://www.w3.org/2005/xqt-errors</code> is used for errors\n                   defined in this specification; other namespace URIs may be used for errors defined\n                   by the application.</p><p>If the external processing environment expects the error code to be returned as a\n                   URI or a string rather than as an <code>xs:QName</code>, then an error code with\n                   namespace URI <code>NS</code> and local part <code>LP</code> will be returned in\n                   the form <code>NS#LP</code>. The namespace URI part of the error code should\n                   therefore not include a fragment identifier.</p></item><item><p>The <code>$description</code> is a natural-language description of the error\n                   condition.</p></item><item><p>The <code>$error-object</code> is an arbitrary value used to convey additional\n                   information about the error, and may be used in any way the application\n                   chooses.</p></item></ulist><p xmlns:e=\"http://www.w3.org/1999/XSL/Spec/ElementSyntax\">This function always raises a <phrase diff=\"add\" at=\"L\">dynamic</phrase> error. By default, it raises <errorref class=\"ER\" code=\"0000\"/></p></div>\n", "summary" : "<p>  Calling the  fn:error  function raises an application-defined\n             error.</p>", "annotation_str" : "", "annotations" : [  ], "updating" : false, "parameters" : [  ], "returns" : { "type" : "none", "description" : "" }, "errors" : [  ] }, { "isDocumented" : true, "arity" : 1, "name" : "error", "qname" : "fn:error", "signature" : "($code as xs:QName) as none external", "description" : " <div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"><p xmlns:e=\"http://www.w3.org/1999/XSL/Spec/ElementSyntax\">Calling the <code>fn:error</code> function raises an application-defined\n             error.</p><p xmlns:e=\"http://www.w3.org/1999/XSL/Spec/ElementSyntax\"><example role=\"signature\"><proto name=\"error\" return-type=\"none\" isOp=\"no\" prefix=\"fn\" returnEmptyOk=\"no\" returnSeq=\"no\" returnVaries=\"no\" isSchema=\"no\" isDatatype=\"no\" isSpecial=\"no\"/></example><example role=\"signature\"><proto name=\"error\" return-type=\"none\" isOp=\"no\" prefix=\"fn\" returnEmptyOk=\"no\" returnSeq=\"no\" returnVaries=\"no\" isSchema=\"no\" isDatatype=\"no\" isSpecial=\"no\"><arg name=\"code\" type=\"xs:QName\"/></proto></example><example role=\"signature\"><proto name=\"error\" return-type=\"none\" isOp=\"no\" prefix=\"fn\" returnEmptyOk=\"no\" returnSeq=\"no\" returnVaries=\"no\" isSchema=\"no\" isDatatype=\"no\" isSpecial=\"no\"><arg name=\"code\" type=\"xs:QName?\"/><arg name=\"description\" type=\"xs:string\"/></proto></example><example role=\"signature\"><proto name=\"error\" return-type=\"none\" isOp=\"no\" prefix=\"fn\" returnEmptyOk=\"no\" returnSeq=\"no\" returnVaries=\"no\" isSchema=\"no\" isDatatype=\"no\" isSpecial=\"no\"><arg name=\"code\" type=\"xs:QName?\"/><arg name=\"description\" type=\"xs:string\"/><arg name=\"error-object\" type=\"item()*\"/></proto></example></p><p xmlns:e=\"http://www.w3.org/1999/XSL/Spec/ElementSyntax\">This function is <termref def=\"dt-nondeterministic\">nondeterministic</termref>, <termref def=\"dt-context-independent\">context-independent</termref>,  and <termref def=\"dt-focus-independent\">focus-independent</termref>. </p><p xmlns:e=\"http://www.w3.org/1999/XSL/Spec/ElementSyntax\">This function never returns a value. Instead it always raises an error. The effect of\n             the error is identical to the effect of dynamic errors raised implicitly, for example\n             when an incorrect argument is supplied to a function.</p><p xmlns:e=\"http://www.w3.org/1999/XSL/Spec/ElementSyntax\">The parameters to the <code>fn:error</code> function supply information that is\n             associated with the error condition and that is made available to a caller that asks for\n             information about the error. The error may be caught either by the host language (using\n             a try/catch construct in XSLT or XQuery, for example), or by the calling application or\n             external processing environment. The way in which error information is returned to the\n             external processing environment is <termref def=\"implementation-dependent\"/></p><p xmlns:e=\"http://www.w3.org/1999/XSL/Spec/ElementSyntax\">If <code>fn:error</code> is called with no arguments, then its behavior is the same as\n             the function call: </p><eg xmlns:e=\"http://www.w3.org/1999/XSL/Spec/ElementSyntax\" xml:space=\"preserve\"> fn:error(fn:QName('http://www.w3.org/2005/xqt-errors', 'err:FOER0000')) </eg><p xmlns:e=\"http://www.w3.org/1999/XSL/Spec/ElementSyntax\">If <code>$code</code> is the empty sequence then the effective value is the\n                <code>xs:QName</code> constructed by:</p><eg xmlns:e=\"http://www.w3.org/1999/XSL/Spec/ElementSyntax\" xml:space=\"preserve\"> fn:QName('http://www.w3.org/2005/xqt-errors', 'err:FOER0000')</eg><p xmlns:e=\"http://www.w3.org/1999/XSL/Spec/ElementSyntax\">There are three pieces of information that may be associated with an error:</p><ulist xmlns:e=\"http://www.w3.org/1999/XSL/Spec/ElementSyntax\"><item><p>The <code>$code</code> is an error code that distinguishes this error from others.\n                   It is an <code>xs:QName</code>; the namespace URI conventionally identifies the\n                   component, subsystem, or authority responsible for defining the meaning of the\n                   error code, while the local part identifies the specific error condition. The\n                   namespace URI <code>http://www.w3.org/2005/xqt-errors</code> is used for errors\n                   defined in this specification; other namespace URIs may be used for errors defined\n                   by the application.</p><p>If the external processing environment expects the error code to be returned as a\n                   URI or a string rather than as an <code>xs:QName</code>, then an error code with\n                   namespace URI <code>NS</code> and local part <code>LP</code> will be returned in\n                   the form <code>NS#LP</code>. The namespace URI part of the error code should\n                   therefore not include a fragment identifier.</p></item><item><p>The <code>$description</code> is a natural-language description of the error\n                   condition.</p></item><item><p>The <code>$error-object</code> is an arbitrary value used to convey additional\n                   information about the error, and may be used in any way the application\n                   chooses.</p></item></ulist><p xmlns:e=\"http://www.w3.org/1999/XSL/Spec/ElementSyntax\">This function always raises a <phrase diff=\"add\" at=\"L\">dynamic</phrase> error. By default, it raises <errorref class=\"ER\" code=\"0000\"/></p></div>\n", "summary" : "<p>  Calling the  fn:error  function raises an application-defined\n             error.</p>", "annotation_str" : "", "annotations" : [  ], "updating" : false, "parameters" : [ { "name" : "code", "type" : "xs:QName", "occurrence" : null, "description" : "" } ], "returns" : { "type" : "none", "description" : "" }, "errors" : [  ] }, { "isDocumented" : true, "arity" : 2, "name" : "error", "qname" : "fn:error", "signature" : "($code as xs:QName?, $description as xs:string) as none external", "description" : " <div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"><p xmlns:e=\"http://www.w3.org/1999/XSL/Spec/ElementSyntax\">Calling the <code>fn:error</code> function raises an application-defined\n             error.</p><p xmlns:e=\"http://www.w3.org/1999/XSL/Spec/ElementSyntax\"><example role=\"signature\"><proto name=\"error\" return-type=\"none\" isOp=\"no\" prefix=\"fn\" returnEmptyOk=\"no\" returnSeq=\"no\" returnVaries=\"no\" isSchema=\"no\" isDatatype=\"no\" isSpecial=\"no\"/></example><example role=\"signature\"><proto name=\"error\" return-type=\"none\" isOp=\"no\" prefix=\"fn\" returnEmptyOk=\"no\" returnSeq=\"no\" returnVaries=\"no\" isSchema=\"no\" isDatatype=\"no\" isSpecial=\"no\"><arg name=\"code\" type=\"xs:QName\"/></proto></example><example role=\"signature\"><proto name=\"error\" return-type=\"none\" isOp=\"no\" prefix=\"fn\" returnEmptyOk=\"no\" returnSeq=\"no\" returnVaries=\"no\" isSchema=\"no\" isDatatype=\"no\" isSpecial=\"no\"><arg name=\"code\" type=\"xs:QName?\"/><arg name=\"description\" type=\"xs:string\"/></proto></example><example role=\"signature\"><proto name=\"error\" return-type=\"none\" isOp=\"no\" prefix=\"fn\" returnEmptyOk=\"no\" returnSeq=\"no\" returnVaries=\"no\" isSchema=\"no\" isDatatype=\"no\" isSpecial=\"no\"><arg name=\"code\" type=\"xs:QName?\"/><arg name=\"description\" type=\"xs:string\"/><arg name=\"error-object\" type=\"item()*\"/></proto></example></p><p xmlns:e=\"http://www.w3.org/1999/XSL/Spec/ElementSyntax\">This function is <termref def=\"dt-nondeterministic\">nondeterministic</termref>, <termref def=\"dt-context-independent\">context-independent</termref>,  and <termref def=\"dt-focus-independent\">focus-independent</termref>. </p><p xmlns:e=\"http://www.w3.org/1999/XSL/Spec/ElementSyntax\">This function never returns a value. Instead it always raises an error. The effect of\n             the error is identical to the effect of dynamic errors raised implicitly, for example\n             when an incorrect argument is supplied to a function.</p><p xmlns:e=\"http://www.w3.org/1999/XSL/Spec/ElementSyntax\">The parameters to the <code>fn:error</code> function supply information that is\n             associated with the error condition and that is made available to a caller that asks for\n             information about the error. The error may be caught either by the host language (using\n             a try/catch construct in XSLT or XQuery, for example), or by the calling application or\n             external processing environment. The way in which error information is returned to the\n             external processing environment is <termref def=\"implementation-dependent\"/></p><p xmlns:e=\"http://www.w3.org/1999/XSL/Spec/ElementSyntax\">If <code>fn:error</code> is called with no arguments, then its behavior is the same as\n             the function call: </p><eg xmlns:e=\"http://www.w3.org/1999/XSL/Spec/ElementSyntax\" xml:space=\"preserve\"> fn:error(fn:QName('http://www.w3.org/2005/xqt-errors', 'err:FOER0000')) </eg><p xmlns:e=\"http://www.w3.org/1999/XSL/Spec/ElementSyntax\">If <code>$code</code> is the empty sequence then the effective value is the\n                <code>xs:QName</code> constructed by:</p><eg xmlns:e=\"http://www.w3.org/1999/XSL/Spec/ElementSyntax\" xml:space=\"preserve\"> fn:QName('http://www.w3.org/2005/xqt-errors', 'err:FOER0000')</eg><p xmlns:e=\"http://www.w3.org/1999/XSL/Spec/ElementSyntax\">There are three pieces of information that may be associated with an error:</p><ulist xmlns:e=\"http://www.w3.org/1999/XSL/Spec/ElementSyntax\"><item><p>The <code>$code</code> is an error code that distinguishes this error from others.\n                   It is an <code>xs:QName</code>; the namespace URI conventionally identifies the\n                   component, subsystem, or authority responsible for defining the meaning of the\n                   error code, while the local part identifies the specific error condition. The\n                   namespace URI <code>http://www.w3.org/2005/xqt-errors</code> is used for errors\n                   defined in this specification; other namespace URIs may be used for errors defined\n                   by the application.</p><p>If the external processing environment expects the error code to be returned as a\n                   URI or a string rather than as an <code>xs:QName</code>, then an error code with\n                   namespace URI <code>NS</code> and local part <code>LP</code> will be returned in\n                   the form <code>NS#LP</code>. The namespace URI part of the error code should\n                   therefore not include a fragment identifier.</p></item><item><p>The <code>$description</code> is a natural-language description of the error\n                   condition.</p></item><item><p>The <code>$error-object</code> is an arbitrary value used to convey additional\n                   information about the error, and may be used in any way the application\n                   chooses.</p></item></ulist><p xmlns:e=\"http://www.w3.org/1999/XSL/Spec/ElementSyntax\">This function always raises a <phrase diff=\"add\" at=\"L\">dynamic</phrase> error. By default, it raises <errorref class=\"ER\" code=\"0000\"/></p></div>\n", "summary" : "<p>  Calling the  fn:error  function raises an application-defined\n             error.</p>", "annotation_str" : "", "annotations" : [  ], "updating" : false, "parameters" : [ { "name" : "code", "type" : "xs:QName", "occurrence" : "?", "description" : "" }, { "name" : "description", "type" : "xs:string", "occurrence" : null, "description" : "" } ], "returns" : { "type" : "none", "description" : "" }, "errors" : [  ] }, { "isDocumented" : true, "arity" : 3, "name" : "error", "qname" : "fn:error", "signature" : "($code as xs:QName?, $description as xs:string, $error-object as item()*) as none external", "description" : " <div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"><p xmlns:e=\"http://www.w3.org/1999/XSL/Spec/ElementSyntax\">Calling the <code>fn:error</code> function raises an application-defined\n             error.</p><p xmlns:e=\"http://www.w3.org/1999/XSL/Spec/ElementSyntax\"><example role=\"signature\"><proto name=\"error\" return-type=\"none\" isOp=\"no\" prefix=\"fn\" returnEmptyOk=\"no\" returnSeq=\"no\" returnVaries=\"no\" isSchema=\"no\" isDatatype=\"no\" isSpecial=\"no\"/></example><example role=\"signature\"><proto name=\"error\" return-type=\"none\" isOp=\"no\" prefix=\"fn\" returnEmptyOk=\"no\" returnSeq=\"no\" returnVaries=\"no\" isSchema=\"no\" isDatatype=\"no\" isSpecial=\"no\"><arg name=\"code\" type=\"xs:QName\"/></proto></example><example role=\"signature\"><proto name=\"error\" return-type=\"none\" isOp=\"no\" prefix=\"fn\" returnEmptyOk=\"no\" returnSeq=\"no\" returnVaries=\"no\" isSchema=\"no\" isDatatype=\"no\" isSpecial=\"no\"><arg name=\"code\" type=\"xs:QName?\"/><arg name=\"description\" type=\"xs:string\"/></proto></example><example role=\"signature\"><proto name=\"error\" return-type=\"none\" isOp=\"no\" prefix=\"fn\" returnEmptyOk=\"no\" returnSeq=\"no\" returnVaries=\"no\" isSchema=\"no\" isDatatype=\"no\" isSpecial=\"no\"><arg name=\"code\" type=\"xs:QName?\"/><arg name=\"description\" type=\"xs:string\"/><arg name=\"error-object\" type=\"item()*\"/></proto></example></p><p xmlns:e=\"http://www.w3.org/1999/XSL/Spec/ElementSyntax\">This function is <termref def=\"dt-nondeterministic\">nondeterministic</termref>, <termref def=\"dt-context-independent\">context-independent</termref>,  and <termref def=\"dt-focus-independent\">focus-independent</termref>. </p><p xmlns:e=\"http://www.w3.org/1999/XSL/Spec/ElementSyntax\">This function never returns a value. Instead it always raises an error. The effect of\n             the error is identical to the effect of dynamic errors raised implicitly, for example\n             when an incorrect argument is supplied to a function.</p><p xmlns:e=\"http://www.w3.org/1999/XSL/Spec/ElementSyntax\">The parameters to the <code>fn:error</code> function supply information that is\n             associated with the error condition and that is made available to a caller that asks for\n             information about the error. The error may be caught either by the host language (using\n             a try/catch construct in XSLT or XQuery, for example), or by the calling application or\n             external processing environment. The way in which error information is returned to the\n             external processing environment is <termref def=\"implementation-dependent\"/></p><p xmlns:e=\"http://www.w3.org/1999/XSL/Spec/ElementSyntax\">If <code>fn:error</code> is called with no arguments, then its behavior is the same as\n             the function call: </p><eg xmlns:e=\"http://www.w3.org/1999/XSL/Spec/ElementSyntax\" xml:space=\"preserve\"> fn:error(fn:QName('http://www.w3.org/2005/xqt-errors', 'err:FOER0000')) </eg><p xmlns:e=\"http://www.w3.org/1999/XSL/Spec/ElementSyntax\">If <code>$code</code> is the empty sequence then the effective value is the\n                <code>xs:QName</code> constructed by:</p><eg xmlns:e=\"http://www.w3.org/1999/XSL/Spec/ElementSyntax\" xml:space=\"preserve\"> fn:QName('http://www.w3.org/2005/xqt-errors', 'err:FOER0000')</eg><p xmlns:e=\"http://www.w3.org/1999/XSL/Spec/ElementSyntax\">There are three pieces of information that may be associated with an error:</p><ulist xmlns:e=\"http://www.w3.org/1999/XSL/Spec/ElementSyntax\"><item><p>The <code>$code</code> is an error code that distinguishes this error from others.\n                   It is an <code>xs:QName</code>; the namespace URI conventionally identifies the\n                   component, subsystem, or authority responsible for defining the meaning of the\n                   error code, while the local part identifies the specific error condition. The\n                   namespace URI <code>http://www.w3.org/2005/xqt-errors</code> is used for errors\n                   defined in this specification; other namespace URIs may be used for errors defined\n                   by the application.</p><p>If the external processing environment expects the error code to be returned as a\n                   URI or a string rather than as an <code>xs:QName</code>, then an error code with\n                   namespace URI <code>NS</code> and local part <code>LP</code> will be returned in\n                   the form <code>NS#LP</code>. The namespace URI part of the error code should\n                   therefore not include a fragment identifier.</p></item><item><p>The <code>$description</code> is a natural-language description of the error\n                   condition.</p></item><item><p>The <code>$error-object</code> is an arbitrary value used to convey additional\n                   information about the error, and may be used in any way the application\n                   chooses.</p></item></ulist><p xmlns:e=\"http://www.w3.org/1999/XSL/Spec/ElementSyntax\">This function always raises a <phrase diff=\"add\" at=\"L\">dynamic</phrase> error. By default, it raises <errorref class=\"ER\" code=\"0000\"/></p></div>\n", "summary" : "<p>  Calling the  fn:error  function raises an application-defined\n             error.</p>", "annotation_str" : "", "annotations" : [  ], "updating" : false, "parameters" : [ { "name" : "code", "type" : "xs:QName", "occurrence" : "?", "description" : "" }, { "name" : "description", "type" : "xs:string", "occurrence" : null, "description" : "" }, { "name" : "error-object", "type" : "item()", "occurrence" : "*", "description" : "" } ], "returns" : { "type" : "none", "description" : "" }, "errors" : [  ] }, { "isDocumented" : true, "arity" : 1, "name" : "escape-html-uri", "qname" : "fn:escape-html-uri", "signature" : "($uri as xs:string?) as xs:string external", "description" : " <div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"><p xmlns:e=\"http://www.w3.org/1999/XSL/Spec/ElementSyntax\">Escapes a URI in the same way that HTML user agents handle attribute values\n             expected to contain URIs.</p><p xmlns:e=\"http://www.w3.org/1999/XSL/Spec/ElementSyntax\"><example role=\"signature\"><proto name=\"escape-html-uri\" return-type=\"xs:string\" isOp=\"no\" prefix=\"fn\" returnEmptyOk=\"no\" returnSeq=\"no\" returnVaries=\"no\" isSchema=\"no\" isDatatype=\"no\" isSpecial=\"no\"><arg name=\"uri\" type=\"xs:string?\"/></proto></example></p><p xmlns:e=\"http://www.w3.org/1999/XSL/Spec/ElementSyntax\">This function is <termref def=\"dt-deterministic\">deterministic</termref>, <termref def=\"dt-context-independent\">context-independent</termref>,  and <termref def=\"dt-focus-independent\">focus-independent</termref>. </p><p xmlns:e=\"http://www.w3.org/1999/XSL/Spec/ElementSyntax\">If <code>$uri</code> is the empty sequence, the function returns the zero-length\n             string.</p><p xmlns:e=\"http://www.w3.org/1999/XSL/Spec/ElementSyntax\">Otherwise, the function escapes all <termref def=\"character\">characters</termref> except\n             printable characters of the US-ASCII coded character set, specifically the <termref def=\"codepoint\">codepoints</termref> between 32 and 126 (decimal) inclusive. Each\n             character in <code>$uri</code> to be escaped is replaced by an escape sequence, which is\n             formed by encoding the character as a sequence of octets in UTF-8, and then representing\n             each of these octets in the form %HH, where HH is the hexadecimal representation of the\n             octet. This function must always generate hexadecimal values using the upper-case\n             letters A-F.</p><p xmlns:e=\"http://www.w3.org/1999/XSL/Spec/ElementSyntax\">The behavior of this function corresponds to the recommended handling of non-ASCII\n             characters in URI attribute values as described in <bibref ref=\"HTML40\"/> Appendix\n             B.2.1.</p></div>\n", "summary" : "<p>  Escapes a URI in the same way that HTML user agents handle attribute values\n             expected to contain URIs.</p>", "annotation_str" : "", "annotations" : [  ], "updating" : false, "parameters" : [ { "name" : "uri", "type" : "xs:string", "occurrence" : "?", "description" : "" } ], "returns" : { "type" : "xs:string", "description" : "" }, "errors" : [  ] }, { "isDocumented" : true, "arity" : 1, "name" : "exactly-one", "qname" : "fn:exactly-one", "signature" : "($arg as item()*) as item() external", "description" : " <div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"><p xmlns:e=\"http://www.w3.org/1999/XSL/Spec/ElementSyntax\">Returns <code>$arg</code> if it contains exactly one item. Otherwise, raises an\n             error. </p><p xmlns:e=\"http://www.w3.org/1999/XSL/Spec/ElementSyntax\"><example role=\"signature\"><proto name=\"exactly-one\" return-type=\"item()\" isOp=\"no\" prefix=\"fn\" returnEmptyOk=\"no\" returnSeq=\"no\" returnVaries=\"no\" isSchema=\"no\" isDatatype=\"no\" isSpecial=\"no\"><arg name=\"arg\" type=\"item()*\"/></proto></example></p><p xmlns:e=\"http://www.w3.org/1999/XSL/Spec/ElementSyntax\">This function is <termref def=\"dt-deterministic\">deterministic</termref>, <termref def=\"dt-context-independent\">context-independent</termref>,  and <termref def=\"dt-focus-independent\">focus-independent</termref>. </p><p xmlns:e=\"http://www.w3.org/1999/XSL/Spec/ElementSyntax\">Except in error cases, the function returns <code>$arg</code> unchanged.</p><p xmlns:e=\"http://www.w3.org/1999/XSL/Spec/ElementSyntax\" diff=\"del\" at=\"F\">For detailed type semantics, see [Formal Semantics].</p><p xmlns:e=\"http://www.w3.org/1999/XSL/Spec/ElementSyntax\">A <phrase diff=\"add\" at=\"L\">dynamic</phrase> error is raised <errorref class=\"RG\" code=\"0005\"/> if <code>$arg</code> is an empty\n             sequence or a sequence containing more than one item.</p></div>\n", "summary" : "<p>  Returns  $arg  if it contains exactly one item.</p>", "annotation_str" : "", "annotations" : [  ], "updating" : false, "parameters" : [ { "name" : "arg", "type" : "item()", "occurrence" : "*", "description" : "" } ], "returns" : { "type" : "item()", "description" : "" }, "errors" : [  ] }, { "isDocumented" : true, "arity" : 1, "name" : "exists", "qname" : "fn:exists", "signature" : "($arg as item()*) as xs:boolean external", "description" : " <div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"><p xmlns:e=\"http://www.w3.org/1999/XSL/Spec/ElementSyntax\">Returns true if the argument is a non-empty sequence.</p><p xmlns:e=\"http://www.w3.org/1999/XSL/Spec/ElementSyntax\"><example role=\"signature\"><proto name=\"exists\" return-type=\"xs:boolean\" isOp=\"no\" prefix=\"fn\" returnEmptyOk=\"no\" returnSeq=\"no\" returnVaries=\"no\" isSchema=\"no\" isDatatype=\"no\" isSpecial=\"no\"><arg name=\"arg\" type=\"item()*\"/></proto></example></p><p xmlns:e=\"http://www.w3.org/1999/XSL/Spec/ElementSyntax\">This function is <termref def=\"dt-deterministic\">deterministic</termref>, <termref def=\"dt-context-independent\">context-independent</termref>,  and <termref def=\"dt-focus-independent\">focus-independent</termref>. </p><p xmlns:e=\"http://www.w3.org/1999/XSL/Spec/ElementSyntax\">If the value of <code>$arg</code> is a non-empty sequence, the function returns\n                <code>true</code>; otherwise, the function returns <code>false</code>. </p><p xmlns:e=\"http://www.w3.org/1999/XSL/Spec/ElementSyntax\">The expression <code>fn:exists(fn:remove((\"hello\"), 1))</code> returns <code>false()</code>.</p><p xmlns:e=\"http://www.w3.org/1999/XSL/Spec/ElementSyntax\">The expression <code>fn:exists(fn:remove((\"hello\", \"world\"), 1))</code> returns <code>true()</code>.</p></div>\n", "summary" : "<p>  Returns true if the argument is a non-empty sequence.</p>", "annotation_str" : "", "annotations" : [  ], "updating" : false, "parameters" : [ { "name" : "arg", "type" : "item()", "occurrence" : "*", "description" : "" } ], "returns" : { "type" : "xs:boolean", "description" : "" }, "errors" : [  ] }, { "isDocumented" : true, "arity" : 0, "name" : "false", "qname" : "fn:false", "signature" : "() as xs:boolean external", "description" : " <div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"><p xmlns:e=\"http://www.w3.org/1999/XSL/Spec/ElementSyntax\">Returns the <code>xs:boolean</code> value <code>false</code>.</p><p xmlns:e=\"http://www.w3.org/1999/XSL/Spec/ElementSyntax\"><example role=\"signature\"><proto name=\"false\" return-type=\"xs:boolean\" isOp=\"no\" prefix=\"fn\" returnEmptyOk=\"no\" returnSeq=\"no\" returnVaries=\"no\" isSchema=\"no\" isDatatype=\"no\" isSpecial=\"no\"/></example></p><p xmlns:e=\"http://www.w3.org/1999/XSL/Spec/ElementSyntax\">This function is <termref def=\"dt-deterministic\">deterministic</termref>, <termref def=\"dt-context-independent\">context-independent</termref>,  and <termref def=\"dt-focus-independent\">focus-independent</termref>. </p><p xmlns:e=\"http://www.w3.org/1999/XSL/Spec/ElementSyntax\">The result is equivalent to <code>xs:boolean(\"0\")</code>.</p><p xmlns:e=\"http://www.w3.org/1999/XSL/Spec/ElementSyntax\">The expression <code>fn:false()</code> returns <code>xs:boolean(0)</code>.</p></div>\n", "summary" : "<p>  Returns the  xs:boolean  value  false .</p>", "annotation_str" : "", "annotations" : [  ], "updating" : false, "parameters" : [  ], "returns" : { "type" : "xs:boolean", "description" : "" }, "errors" : [  ] }, { "isDocumented" : true, "arity" : 2, "name" : "filter", "qname" : "fn:filter", "signature" : "($seq as item()*, $f as function (item()) as xs:boolean) as item()* external", "description" : " <div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"><p xmlns:e=\"http://www.w3.org/1999/XSL/Spec/ElementSyntax\">Returns those items from the sequence <var>$seq</var> for which the supplied\n             function <var>$f</var> returns true.</p><p xmlns:e=\"http://www.w3.org/1999/XSL/Spec/ElementSyntax\"><example role=\"signature\"><proto name=\"filter\" return-type=\"item()*\" isOp=\"no\" prefix=\"fn\" returnEmptyOk=\"no\" returnSeq=\"no\" returnVaries=\"no\" isSchema=\"no\" isDatatype=\"no\" isSpecial=\"no\"><arg name=\"seq\" type=\"item()*\"/><arg name=\"f\" type=\"function(item()) as xs:boolean\"/></proto></example></p><p xmlns:e=\"http://www.w3.org/1999/XSL/Spec/ElementSyntax\">This function is <termref def=\"dt-deterministic\">deterministic</termref>, <termref def=\"dt-context-independent\">context-independent</termref>,  and <termref def=\"dt-focus-independent\">focus-independent</termref>. </p><p xmlns:e=\"http://www.w3.org/1999/XSL/Spec/ElementSyntax\">The effect of the function is equivalent to the following implementation in XQuery:</p><eg xmlns:e=\"http://www.w3.org/1999/XSL/Spec/ElementSyntax\" xml:space=\"preserve\">\n declare function fn:filter(\n         $seq as item()*,\n         $f as function(item()) as xs:boolean)\n         as item()* {\n   if (fn:empty($seq))\n   then ()\n   else ( fn:head($seq)[$f(.) eq fn:true()],\n          fn:filter(fn:tail($seq), $f)\n        )\n };</eg><p xmlns:e=\"http://www.w3.org/1999/XSL/Spec/ElementSyntax\">or its equivalent in XSLT:</p><eg xmlns:e=\"http://www.w3.org/1999/XSL/Spec/ElementSyntax\" xml:space=\"preserve\">\n &lt;xsl:function name=\"fn:filter\" as=\"item()*\"&gt;\n   &lt;xsl:param name=\"seq\" as=\"item()*\"/&gt;\n   &lt;xsl:param name=\"f\" as=\"function(item()) as xs:boolean\"/&gt;\n   &lt;xsl:if test=\"fn:exists($seq)\"&gt;\n     &lt;xsl:sequence select=\"fn:head($seq)[$f(.) eq fn:true()], fn:filter(fn:tail($seq), $f)\"/&gt;\n   &lt;/xsl:if&gt;\n &lt;/xsl:function&gt;\n          </eg><p xmlns:e=\"http://www.w3.org/1999/XSL/Spec/ElementSyntax\" diff=\"chg\" at=\"G\">As a consequence of the function signature and the function calling\n             rules, a type error occurs if the supplied function <var>$f</var> returns anything other\n             than a single <code>xs:boolean</code> item; there is no conversion to an effective\n             boolean value.</p></div>\n", "summary" : "<p>  Returns those items from the sequence  $seq  for which the supplied\n             function  $f  returns true.</p>", "annotation_str" : "", "annotations" : [  ], "updating" : false, "parameters" : [ { "name" : "seq", "type" : "item()", "occurrence" : "*", "description" : "" }, { "name" : "f", "type" : "function (item()) as xs:boolean", "occurrence" : null, "description" : "" } ], "returns" : { "type" : "item()*", "description" : "" }, "errors" : [  ] }, { "isDocumented" : true, "arity" : 1, "name" : "floor", "qname" : "fn:floor", "signature" : "($arg as numeric?) as numeric? external", "description" : " <div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"><p xmlns:e=\"http://www.w3.org/1999/XSL/Spec/ElementSyntax\">Rounds <code>$arg</code> downwards to a whole number.</p><p xmlns:e=\"http://www.w3.org/1999/XSL/Spec/ElementSyntax\"><example role=\"signature\"><proto name=\"floor\" return-type=\"numeric?\" isOp=\"no\" prefix=\"fn\" returnEmptyOk=\"no\" returnSeq=\"no\" returnVaries=\"no\" isSchema=\"no\" isDatatype=\"no\" isSpecial=\"no\"><arg name=\"arg\" type=\"numeric?\"/></proto></example></p><p xmlns:e=\"http://www.w3.org/1999/XSL/Spec/ElementSyntax\">This function is <termref def=\"dt-deterministic\">deterministic</termref>, <termref def=\"dt-context-independent\">context-independent</termref>,  and <termref def=\"dt-focus-independent\">focus-independent</termref>. </p><p xmlns:e=\"http://www.w3.org/1999/XSL/Spec/ElementSyntax\">General rules: see <specref ref=\"numeric-value-functions\"/>.</p><p xmlns:e=\"http://www.w3.org/1999/XSL/Spec/ElementSyntax\">The function returns the largest (closest to positive infinity) number with no\n             fractional part that is not greater than the value of <code>$arg</code>.</p><p xmlns:e=\"http://www.w3.org/1999/XSL/Spec/ElementSyntax\">If the type of <code>$arg</code> is one of the four numeric types <code>xs:float</code>,\n                <code>xs:double</code>, <code>xs:decimal</code> or <code>xs:integer</code> the type\n             of the result is the same as the type of <code>$arg</code>. If the type of\n                <code>$arg</code> is a type derived from one of the numeric types, the result is an\n             instance of the base numeric type.</p><p xmlns:e=\"http://www.w3.org/1999/XSL/Spec/ElementSyntax\">For <code>xs:float</code> and <code>xs:double</code> arguments, if the argument is\n             positive zero, then positive zero is returned. If the argument is negative zero, then\n             negative zero is returned.</p><p xmlns:e=\"http://www.w3.org/1999/XSL/Spec/ElementSyntax\" diff=\"del\" at=\"F\">For detailed type semantics, see [Formal Semantics].</p><p xmlns:e=\"http://www.w3.org/1999/XSL/Spec/ElementSyntax\">The expression <code>fn:floor(10.5)</code> returns <code>10</code>.</p><p xmlns:e=\"http://www.w3.org/1999/XSL/Spec/ElementSyntax\">The expression <code>fn:floor(-10.5)</code> returns <code>-11</code>.</p></div>\n", "summary" : "<p>  Rounds  $arg  downwards to a whole number.</p>", "annotation_str" : "", "annotations" : [  ], "updating" : false, "parameters" : [ { "name" : "arg", "type" : "numeric", "occurrence" : "?", "description" : "" } ], "returns" : { "type" : "numeric?", "description" : "" }, "errors" : [  ] }, { "isDocumented" : true, "arity" : 3, "name" : "fold-left", "qname" : "fn:fold-left", "signature" : "($seq as item()*, $zero as item()*, $f as function (item()*, item()) as item()*) as item()* external", "description" : " <div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"><p xmlns:e=\"http://www.w3.org/1999/XSL/Spec/ElementSyntax\">Processes the supplied sequence from left to right, applying the supplied\n             function repeatedly to each item in turn, together with an accumulated result value.</p><p xmlns:e=\"http://www.w3.org/1999/XSL/Spec/ElementSyntax\"><example role=\"signature\"><proto name=\"fold-left\" return-type=\"item()*\" isOp=\"no\" prefix=\"fn\" returnEmptyOk=\"no\" returnSeq=\"no\" returnVaries=\"no\" isSchema=\"no\" isDatatype=\"no\" isSpecial=\"no\"><arg name=\"seq\" type=\"item()*\"/><arg name=\"zero\" type=\"item()*\"/><arg name=\"f\" type=\"function(item()*, item()) as item()*\"/></proto></example></p><p xmlns:e=\"http://www.w3.org/1999/XSL/Spec/ElementSyntax\">This function is <termref def=\"dt-deterministic\">deterministic</termref>, <termref def=\"dt-context-independent\">context-independent</termref>,  and <termref def=\"dt-focus-independent\">focus-independent</termref>. </p><p xmlns:e=\"http://www.w3.org/1999/XSL/Spec/ElementSyntax\">The effect of the function is equivalent to the following implementation in XQuery:</p><eg xmlns:e=\"http://www.w3.org/1999/XSL/Spec/ElementSyntax\" xml:space=\"preserve\">\n declare function fn:fold-left(\n         $seq as item()*\n         $zero as item()*,\n         $f as function(item()*, item()) as item()*)\n         as item()* {\n   if (fn:empty($seq))\n   then $zero\n   else fn:fold-left(fn:tail($seq), $f($zero, fn:head($seq)), $f)\n };</eg><p xmlns:e=\"http://www.w3.org/1999/XSL/Spec/ElementSyntax\">or its equivalent in XSLT:</p><eg xmlns:e=\"http://www.w3.org/1999/XSL/Spec/ElementSyntax\" xml:space=\"preserve\">\n &lt;xsl:function name=\"fn:fold-left\" as=\"item()*\"&gt;\n   &lt;xsl:param name=\"seq\" as=\"item()*\"/&gt;\n   &lt;xsl:param name=\"zero\" as=\"item()*\"/&gt;\n   &lt;xsl:param name=\"f\" as=\"function(item()*, item()) as item()*\"/&gt;\n   &lt;xsl:choose&gt;\n     &lt;xsl:when test=\"fn:empty($seq)\"&gt;\n       &lt;xsl:sequence select=\"$zero\"/&gt;\n     &lt;/xsl:when&gt;\n     &lt;xsl:otherwise&gt;\n       &lt;xsl:sequence select=\"fn:fold-left(fn:tail($seq), $f($zero, fn:head($seq)), $f)\"/&gt;\n     &lt;/xsl:otherwise&gt;\n   &lt;/xsl:choose&gt;\n &lt;/xsl:function&gt;\n          </eg><p xmlns:e=\"http://www.w3.org/1999/XSL/Spec/ElementSyntax\" diff=\"chg\" at=\"G\">As a consequence of the function signature and the function calling\n             rules, a type error occurs if the supplied function <var>$f</var> cannot be applied to\n             two arguments, where the first argument is either the value of <var>$zero</var> or the\n             result of a previous application of <var>$f</var>, and the second is <var>$seq</var> or\n             any trailing subsequence of <var>$seq</var>.</p></div>\n", "summary" : "<p>  Processes the supplied sequence from left to right, applying the supplied\n             function repeatedly to each item in turn, together with an accumulated result value.</p>", "annotation_str" : "", "annotations" : [  ], "updating" : false, "parameters" : [ { "name" : "seq", "type" : "item()", "occurrence" : "*", "description" : "" }, { "name" : "zero", "type" : "item()", "occurrence" : "*", "description" : "" }, { "name" : "f", "type" : "function (item()*, item()) as item()*", "occurrence" : null, "description" : "" } ], "returns" : { "type" : "item()*", "description" : "" }, "errors" : [  ] }, { "isDocumented" : true, "arity" : 3, "name" : "fold-right", "qname" : "fn:fold-right", "signature" : "($seq as item()*, $zero as item()*, $f as function (item()*, item()) as item()*) as item()* external", "description" : " <div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"><p xmlns:e=\"http://www.w3.org/1999/XSL/Spec/ElementSyntax\">Processes the supplied sequence from right to left, applying the supplied\n             function repeatedly to each item in turn, together with an accumulated result value.</p><p xmlns:e=\"http://www.w3.org/1999/XSL/Spec/ElementSyntax\"><example role=\"signature\"><proto name=\"fold-right\" return-type=\"item()*\" isOp=\"no\" prefix=\"fn\" returnEmptyOk=\"no\" returnSeq=\"no\" returnVaries=\"no\" isSchema=\"no\" isDatatype=\"no\" isSpecial=\"no\"><arg name=\"seq\" type=\"item()*\"/><arg name=\"zero\" type=\"item()*\"/><arg name=\"f\" type=\"function(item()*, item()) as item()*\"/></proto></example></p><p xmlns:e=\"http://www.w3.org/1999/XSL/Spec/ElementSyntax\">This function is <termref def=\"dt-deterministic\">deterministic</termref>, <termref def=\"dt-context-independent\">context-independent</termref>,  and <termref def=\"dt-focus-independent\">focus-independent</termref>. </p><p xmlns:e=\"http://www.w3.org/1999/XSL/Spec/ElementSyntax\">The effect of the function is equivalent to the following implementation in XQuery:</p><eg xmlns:e=\"http://www.w3.org/1999/XSL/Spec/ElementSyntax\" xml:space=\"preserve\">\n declare function fn:fold-right(\n         $seq as item()*,\n         $zero as item()*,\n         $f as function(item(), item()*) as item()*)\n         as item()* {\n   if (fn:empty($seq))\n   then $zero\n   else $f(fn:head($seq), fn:fold-right(fn:tail($seq), $zero, $f))\n };</eg><p xmlns:e=\"http://www.w3.org/1999/XSL/Spec/ElementSyntax\">or its equivalent in XSLT:</p><eg xmlns:e=\"http://www.w3.org/1999/XSL/Spec/ElementSyntax\" xml:space=\"preserve\">\n &lt;xsl:function name=\"fn:fold-right\" as=\"item()*\"&gt;\n   &lt;xsl:param name=\"seq\" as=\"item()*\"/&gt;\n   &lt;xsl:param name=\"zero\" as=\"item()*\"/&gt;\n   &lt;xsl:param name=\"f\" as=\"function(item(), item()*) as item()*\"/&gt;\n   &lt;xsl:choose&gt;\n     &lt;xsl:when test=\"fn:empty($seq)\"&gt;\n       &lt;xsl:sequence select=\"$zero\"/&gt;\n     &lt;/xsl:when&gt;\n     &lt;xsl:otherwise&gt;\n       &lt;xsl:sequence select=\"$f(fn:head($seq), fn:fold-right(fn:tail($seq), $zero, $f))\"/&gt;\n     &lt;/xsl:otherwise&gt;\n   &lt;/xsl:choose&gt;\n &lt;/xsl:function&gt;\n          </eg><p xmlns:e=\"http://www.w3.org/1999/XSL/Spec/ElementSyntax\" diff=\"chg\" at=\"G\">As a consequence of the function signature and the function calling\n             rules, a type error occurs if the supplied function <var>$f</var> cannot be applied to\n             two arguments, where the first argument is any item in the sequence <var>$seq</var>, and\n             the second is either the value of <var>$zero</var> or the result of a previous\n             application of <var>$f</var>.</p></div>\n", "summary" : "<p>  Processes the supplied sequence from right to left, applying the supplied\n             function repeatedly to each item in turn, together with an accumulated result value.</p>", "annotation_str" : "", "annotations" : [  ], "updating" : false, "parameters" : [ { "name" : "seq", "type" : "item()", "occurrence" : "*", "description" : "" }, { "name" : "zero", "type" : "item()", "occurrence" : "*", "description" : "" }, { "name" : "f", "type" : "function (item()*, item()) as item()*", "occurrence" : null, "description" : "" } ], "returns" : { "type" : "item()*", "description" : "" }, "errors" : [  ] }, { "isDocumented" : true, "arity" : 3, "name" : "for-each-pair", "qname" : "fn:for-each-pair", "signature" : "($seq1 as item()*, $seq2 as item()*, $f as function (item(), item()) as item()*) as item()* external", "description" : " <div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"><p xmlns:e=\"http://www.w3.org/1999/XSL/Spec/ElementSyntax\">Applies the function item <var>$f</var> to successive pairs of items taken one\n             from <var>$seq1</var> and one from <var>$seq2</var>, returning the concatenation of the\n             resulting sequences in order.</p><p xmlns:e=\"http://www.w3.org/1999/XSL/Spec/ElementSyntax\"><example role=\"signature\"><proto name=\"for-each-pair\" return-type=\"item()*\" isOp=\"no\" prefix=\"fn\" returnEmptyOk=\"no\" returnSeq=\"no\" returnVaries=\"no\" isSchema=\"no\" isDatatype=\"no\" isSpecial=\"no\"><arg name=\"seq1\" type=\"item()*\"/><arg name=\"seq2\" type=\"item()*\"/><arg name=\"f\" type=\"function(item(), item()) as item()*\"/></proto></example></p><p xmlns:e=\"http://www.w3.org/1999/XSL/Spec/ElementSyntax\">This function is <termref def=\"dt-deterministic\">deterministic</termref>, <termref def=\"dt-context-independent\">context-independent</termref>,  and <termref def=\"dt-focus-independent\">focus-independent</termref>. </p><p xmlns:e=\"http://www.w3.org/1999/XSL/Spec/ElementSyntax\">The effect of the function is equivalent to the following implementation in XQuery:</p><eg xmlns:e=\"http://www.w3.org/1999/XSL/Spec/ElementSyntax\" xml:space=\"preserve\">\n declare function fn:for-each-pair($seq1, $seq2, $f)\n {\n    if(fn:exists($seq1) and fn:exists($seq2))\n    then (\n      $f(fn:head($seq1), fn:head($seq2)),\n      fn:for-each-pair(fn:tail($seq1), fn:tail($seq2), $f)\n    )\n    else ()\n };</eg><p xmlns:e=\"http://www.w3.org/1999/XSL/Spec/ElementSyntax\">or its equivalent in XSLT:</p><eg xmlns:e=\"http://www.w3.org/1999/XSL/Spec/ElementSyntax\" xml:space=\"preserve\">\n &lt;xsl:function name=\"fn:for-each-pair\"&gt;\n   &lt;xsl:param name=\"seq1/&gt;\n   &lt;xsl:param name=\"seq2/&gt;\n   &lt;xsl:param name=\"f\"/&gt;\n   &lt;xsl:if test=\"fn:exists($seq1) and fn:exists($seq2)\"&gt;\n     &lt;xsl:sequence select=\"$f(fn:head($seq1), fn:head($seq2))\"/&gt;\n     &lt;xsl:sequence select=\"fn:for-each-pair(fn:tail($seq1), fn:tail($seq2), $f)\"/&gt;\n   &lt;/xsl:if&gt;\n &lt;/xsl:function&gt;\n          </eg><p xmlns:e=\"http://www.w3.org/1999/XSL/Spec/ElementSyntax\">The expression <code>fn:for-each-pair((\"a\", \"b\", \"c\"), (\"x\", \"y\", \"z\"), concat#2)</code> returns <code>(\"ax\", \"by\", \"cz\")</code>.</p><p xmlns:e=\"http://www.w3.org/1999/XSL/Spec/ElementSyntax\">The expression <code>fn:for-each-pair(1 to 5, 1 to 5, function($a, $b){10*$a + $b}</code> returns <code>(11, 22, 33, 44, 55)</code>.</p></div>\n", "summary" : "<p>  Applies the function item  $f  to successive pairs of items taken one\n             from  $seq1  and one from  $seq2 , returning the concatenation of the\n             resulting sequences in order.</p>", "annotation_str" : "", "annotations" : [  ], "updating" : false, "parameters" : [ { "name" : "seq1", "type" : "item()", "occurrence" : "*", "description" : "" }, { "name" : "seq2", "type" : "item()", "occurrence" : "*", "description" : "" }, { "name" : "f", "type" : "function (item(), item()) as item()*", "occurrence" : null, "description" : "" } ], "returns" : { "type" : "item()*", "description" : "" }, "errors" : [  ] }, { "isDocumented" : true, "arity" : 2, "name" : "for-each", "qname" : "fn:for-each", "signature" : "($seq as item()*, $f as function (item()) as item()*) as item()* external", "description" : " <div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"><p xmlns:e=\"http://www.w3.org/1999/XSL/Spec/ElementSyntax\">Applies the function item <var>$f</var> to every item from the sequence\n                <var>$seq</var> in turn, returning the concatenation of the resulting sequences in\n             order.</p><p xmlns:e=\"http://www.w3.org/1999/XSL/Spec/ElementSyntax\"><example role=\"signature\"><proto name=\"for-each\" return-type=\"item()*\" isOp=\"no\" prefix=\"fn\" returnEmptyOk=\"no\" returnSeq=\"no\" returnVaries=\"no\" isSchema=\"no\" isDatatype=\"no\" isSpecial=\"no\"><arg name=\"seq\" type=\"item()*\"/><arg name=\"f\" type=\"function(item()) as item()*\"/></proto></example></p><p xmlns:e=\"http://www.w3.org/1999/XSL/Spec/ElementSyntax\">This function is <termref def=\"dt-deterministic\">deterministic</termref>, <termref def=\"dt-context-independent\">context-independent</termref>,  and <termref def=\"dt-focus-independent\">focus-independent</termref>. </p><p xmlns:e=\"http://www.w3.org/1999/XSL/Spec/ElementSyntax\">The effect of the function is equivalent to the following implementation in XQuery:</p><eg xmlns:e=\"http://www.w3.org/1999/XSL/Spec/ElementSyntax\" xml:space=\"preserve\">\n declare function fn:for-each($seq, $f) {\n   if (fn:empty($seq))\n   then ()\n   else ($f(fn:head($seq)), fn:for-each(fn:tail($seq), $f))\n };</eg><p xmlns:e=\"http://www.w3.org/1999/XSL/Spec/ElementSyntax\">or its equivalent in XSLT:</p><eg xmlns:e=\"http://www.w3.org/1999/XSL/Spec/ElementSyntax\" xml:space=\"preserve\">\n &lt;xsl:function name=\"fn:for-each\"&gt;\n   &lt;xsl:param name=\"seq\"/&gt;\n   &lt;xsl:param name=\"f\"/&gt;\n   &lt;xsl:if test=\"fn:exists($seq)\"&gt;\n     &lt;xsl:sequence select=\"$f(fn:head($seq)), fn:for-each(fn:tail($seq), $f)\"/&gt;\n   &lt;/xsl:if&gt;\n &lt;/xsl:function&gt;\n          </eg><p xmlns:e=\"http://www.w3.org/1999/XSL/Spec/ElementSyntax\">The function call <code>fn:for-each($SEQ, $F)</code> is equivalent to the expression\n                <code>for $i in $SEQ return $F($i)</code><phrase diff=\"add\" at=\"G\">, assuming that\n                ordering mode is <code>ordered</code>.</phrase></p></div>\n", "summary" : "<p>  Applies the function item  $f  to every item from the sequence\n                 $seq  in turn, returning the concatenation of the resulting sequences in\n             order.</p>", "annotation_str" : "", "annotations" : [  ], "updating" : false, "parameters" : [ { "name" : "seq", "type" : "item()", "occurrence" : "*", "description" : "" }, { "name" : "f", "type" : "function (item()) as item()*", "occurrence" : null, "description" : "" } ], "returns" : { "type" : "item()*", "description" : "" }, "errors" : [  ] }, { "isDocumented" : true, "arity" : 2, "name" : "format-date", "qname" : "fn:format-date", "signature" : "($value as xs:date?, $picture as xs:string) as xs:string? external", "description" : " <div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"><p xmlns:e=\"http://www.w3.org/1999/XSL/Spec/ElementSyntax\">Returns a string containing an <code>xs:date</code> value formatted for display.</p><p xmlns:e=\"http://www.w3.org/1999/XSL/Spec/ElementSyntax\"><example role=\"signature\"><proto name=\"format-date\" return-type=\"xs:string?\" isOp=\"no\" prefix=\"fn\" returnEmptyOk=\"no\" returnSeq=\"no\" returnVaries=\"no\" isSchema=\"no\" isDatatype=\"no\" isSpecial=\"no\"><arg name=\"value\" type=\"xs:date?\"/><arg name=\"picture\" type=\"xs:string\"/></proto></example><example role=\"signature\"><proto name=\"format-date\" return-type=\"xs:string?\" isOp=\"no\" prefix=\"fn\" returnEmptyOk=\"no\" returnSeq=\"no\" returnVaries=\"no\" isSchema=\"no\" isDatatype=\"no\" isSpecial=\"no\"><arg name=\"value\" type=\"xs:date?\"/><arg name=\"picture\" type=\"xs:string\"/><arg name=\"language\" type=\"xs:string?\"/><arg name=\"calendar\" type=\"xs:string?\"/><arg name=\"place\" type=\"xs:string?\"/></proto></example></p><p xmlns:e=\"http://www.w3.org/1999/XSL/Spec/ElementSyntax\">The two-argument form of this function is <termref def=\"dt-deterministic\">deterministic</termref>, <termref def=\"dt-context-dependent\">context-dependent</termref>,  and <termref def=\"dt-focus-independent\">focus-independent</termref>.  It depends on\n \t\tdefault calendar, and default language, and default place, and implicit timezone.\n \t</p><p xmlns:e=\"http://www.w3.org/1999/XSL/Spec/ElementSyntax\">The five-argument form of this function is <termref def=\"dt-deterministic\">deterministic</termref>, <termref def=\"dt-context-dependent\">context-dependent</termref>,  and <termref def=\"dt-focus-independent\">focus-independent</termref>.  It depends on\n \t\timplicit timezone, and namespaces.\n \t</p><p xmlns:e=\"http://www.w3.org/1999/XSL/Spec/ElementSyntax\">See <specref ref=\"rules-for-datetime-formatting\"/>.</p></div>\n", "summary" : "<p>  Returns a string containing an  xs:date  value formatted for display.</p>", "annotation_str" : "", "annotations" : [  ], "updating" : false, "parameters" : [ { "name" : "value", "type" : "xs:date", "occurrence" : "?", "description" : "" }, { "name" : "picture", "type" : "xs:string", "occurrence" : null, "description" : "" } ], "returns" : { "type" : "xs:string?", "description" : "" }, "errors" : [  ] }, { "isDocumented" : true, "arity" : 5, "name" : "format-date", "qname" : "fn:format-date", "signature" : "($value as xs:date?, $picture as xs:string, $language as xs:string?, $calendar as xs:string?, $place as xs:string?) as xs:string? external", "description" : " <div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"><p xmlns:e=\"http://www.w3.org/1999/XSL/Spec/ElementSyntax\">Returns a string containing an <code>xs:date</code> value formatted for display.</p><p xmlns:e=\"http://www.w3.org/1999/XSL/Spec/ElementSyntax\"><example role=\"signature\"><proto name=\"format-date\" return-type=\"xs:string?\" isOp=\"no\" prefix=\"fn\" returnEmptyOk=\"no\" returnSeq=\"no\" returnVaries=\"no\" isSchema=\"no\" isDatatype=\"no\" isSpecial=\"no\"><arg name=\"value\" type=\"xs:date?\"/><arg name=\"picture\" type=\"xs:string\"/></proto></example><example role=\"signature\"><proto name=\"format-date\" return-type=\"xs:string?\" isOp=\"no\" prefix=\"fn\" returnEmptyOk=\"no\" returnSeq=\"no\" returnVaries=\"no\" isSchema=\"no\" isDatatype=\"no\" isSpecial=\"no\"><arg name=\"value\" type=\"xs:date?\"/><arg name=\"picture\" type=\"xs:string\"/><arg name=\"language\" type=\"xs:string?\"/><arg name=\"calendar\" type=\"xs:string?\"/><arg name=\"place\" type=\"xs:string?\"/></proto></example></p><p xmlns:e=\"http://www.w3.org/1999/XSL/Spec/ElementSyntax\">The two-argument form of this function is <termref def=\"dt-deterministic\">deterministic</termref>, <termref def=\"dt-context-dependent\">context-dependent</termref>,  and <termref def=\"dt-focus-independent\">focus-independent</termref>.  It depends on\n \t\tdefault calendar, and default language, and default place, and implicit timezone.\n \t</p><p xmlns:e=\"http://www.w3.org/1999/XSL/Spec/ElementSyntax\">The five-argument form of this function is <termref def=\"dt-deterministic\">deterministic</termref>, <termref def=\"dt-context-dependent\">context-dependent</termref>,  and <termref def=\"dt-focus-independent\">focus-independent</termref>.  It depends on\n \t\timplicit timezone, and namespaces.\n \t</p><p xmlns:e=\"http://www.w3.org/1999/XSL/Spec/ElementSyntax\">See <specref ref=\"rules-for-datetime-formatting\"/>.</p></div>\n", "summary" : "<p>  Returns a string containing an  xs:date  value formatted for display.</p>", "annotation_str" : "", "annotations" : [  ], "updating" : false, "parameters" : [ { "name" : "value", "type" : "xs:date", "occurrence" : "?", "description" : "" }, { "name" : "picture", "type" : "xs:string", "occurrence" : null, "description" : "" }, { "name" : "language", "type" : "xs:string", "occurrence" : "?", "description" : "" }, { "name" : "calendar", "type" : "xs:string", "occurrence" : "?", "description" : "" }, { "name" : "place", "type" : "xs:string", "occurrence" : "?", "description" : "" } ], "returns" : { "type" : "xs:string?", "description" : "" }, "errors" : [  ] }, { "isDocumented" : true, "arity" : 2, "name" : "format-dateTime", "qname" : "fn:format-dateTime", "signature" : "($value as xs:dateTime?, $picture as xs:string) as xs:string? external", "description" : " <div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"><p xmlns:e=\"http://www.w3.org/1999/XSL/Spec/ElementSyntax\">Returns a string containing an <code>xs:dateTime</code> value formatted for display.</p><p xmlns:e=\"http://www.w3.org/1999/XSL/Spec/ElementSyntax\"><example role=\"signature\"><proto name=\"format-dateTime\" return-type=\"xs:string?\" isOp=\"no\" prefix=\"fn\" returnEmptyOk=\"no\" returnSeq=\"no\" returnVaries=\"no\" isSchema=\"no\" isDatatype=\"no\" isSpecial=\"no\"><arg name=\"value\" type=\"xs:dateTime?\"/><arg name=\"picture\" type=\"xs:string\"/></proto></example><example role=\"signature\"><proto name=\"format-dateTime\" return-type=\"xs:string?\" isOp=\"no\" prefix=\"fn\" returnEmptyOk=\"no\" returnSeq=\"no\" returnVaries=\"no\" isSchema=\"no\" isDatatype=\"no\" isSpecial=\"no\"><arg name=\"value\" type=\"xs:dateTime?\"/><arg name=\"picture\" type=\"xs:string\"/><arg name=\"language\" type=\"xs:string?\"/><arg name=\"calendar\" type=\"xs:string?\"/><arg name=\"place\" type=\"xs:string?\"/></proto></example></p><p xmlns:e=\"http://www.w3.org/1999/XSL/Spec/ElementSyntax\">The two-argument form of this function is <termref def=\"dt-deterministic\">deterministic</termref>, <termref def=\"dt-context-dependent\">context-dependent</termref>,  and <termref def=\"dt-focus-independent\">focus-independent</termref>.  It depends on\n \t\tdefault calendar, and default language, and default place, and implicit timezone.\n \t</p><p xmlns:e=\"http://www.w3.org/1999/XSL/Spec/ElementSyntax\">The five-argument form of this function is <termref def=\"dt-deterministic\">deterministic</termref>, <termref def=\"dt-context-dependent\">context-dependent</termref>,  and <termref def=\"dt-focus-independent\">focus-independent</termref>.  It depends on\n \t\timplicit timezone, and namespaces.\n \t</p><p xmlns:e=\"http://www.w3.org/1999/XSL/Spec/ElementSyntax\">See <specref ref=\"rules-for-datetime-formatting\"/>.</p></div>\n", "summary" : "<p>  Returns a string containing an  xs:dateTime  value formatted for display.</p>", "annotation_str" : "", "annotations" : [  ], "updating" : false, "parameters" : [ { "name" : "value", "type" : "xs:dateTime", "occurrence" : "?", "description" : "" }, { "name" : "picture", "type" : "xs:string", "occurrence" : null, "description" : "" } ], "returns" : { "type" : "xs:string?", "description" : "" }, "errors" : [  ] }, { "isDocumented" : true, "arity" : 5, "name" : "format-dateTime", "qname" : "fn:format-dateTime", "signature" : "($value as xs:dateTime?, $picture as xs:string, $language as xs:string?, $calendar as xs:string?, $place as xs:string?) as xs:string? external", "description" : " <div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"><p xmlns:e=\"http://www.w3.org/1999/XSL/Spec/ElementSyntax\">Returns a string containing an <code>xs:dateTime</code> value formatted for display.</p><p xmlns:e=\"http://www.w3.org/1999/XSL/Spec/ElementSyntax\"><example role=\"signature\"><proto name=\"format-dateTime\" return-type=\"xs:string?\" isOp=\"no\" prefix=\"fn\" returnEmptyOk=\"no\" returnSeq=\"no\" returnVaries=\"no\" isSchema=\"no\" isDatatype=\"no\" isSpecial=\"no\"><arg name=\"value\" type=\"xs:dateTime?\"/><arg name=\"picture\" type=\"xs:string\"/></proto></example><example role=\"signature\"><proto name=\"format-dateTime\" return-type=\"xs:string?\" isOp=\"no\" prefix=\"fn\" returnEmptyOk=\"no\" returnSeq=\"no\" returnVaries=\"no\" isSchema=\"no\" isDatatype=\"no\" isSpecial=\"no\"><arg name=\"value\" type=\"xs:dateTime?\"/><arg name=\"picture\" type=\"xs:string\"/><arg name=\"language\" type=\"xs:string?\"/><arg name=\"calendar\" type=\"xs:string?\"/><arg name=\"place\" type=\"xs:string?\"/></proto></example></p><p xmlns:e=\"http://www.w3.org/1999/XSL/Spec/ElementSyntax\">The two-argument form of this function is <termref def=\"dt-deterministic\">deterministic</termref>, <termref def=\"dt-context-dependent\">context-dependent</termref>,  and <termref def=\"dt-focus-independent\">focus-independent</termref>.  It depends on\n \t\tdefault calendar, and default language, and default place, and implicit timezone.\n \t</p><p xmlns:e=\"http://www.w3.org/1999/XSL/Spec/ElementSyntax\">The five-argument form of this function is <termref def=\"dt-deterministic\">deterministic</termref>, <termref def=\"dt-context-dependent\">context-dependent</termref>,  and <termref def=\"dt-focus-independent\">focus-independent</termref>.  It depends on\n \t\timplicit timezone, and namespaces.\n \t</p><p xmlns:e=\"http://www.w3.org/1999/XSL/Spec/ElementSyntax\">See <specref ref=\"rules-for-datetime-formatting\"/>.</p></div>\n", "summary" : "<p>  Returns a string containing an  xs:dateTime  value formatted for display.</p>", "annotation_str" : "", "annotations" : [  ], "updating" : false, "parameters" : [ { "name" : "value", "type" : "xs:dateTime", "occurrence" : "?", "description" : "" }, { "name" : "picture", "type" : "xs:string", "occurrence" : null, "description" : "" }, { "name" : "language", "type" : "xs:string", "occurrence" : "?", "description" : "" }, { "name" : "calendar", "type" : "xs:string", "occurrence" : "?", "description" : "" }, { "name" : "place", "type" : "xs:string", "occurrence" : "?", "description" : "" } ], "returns" : { "type" : "xs:string?", "description" : "" }, "errors" : [  ] }, { "isDocumented" : true, "arity" : 2, "name" : "format-integer", "qname" : "fn:format-integer", "signature" : "($value as xs:integer?, $picture as xs:string) as xs:string external", "description" : " <div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"><p xmlns:e=\"http://www.w3.org/1999/XSL/Spec/ElementSyntax\">Formats an integer according to a given picture string, using the conventions\n             of a given natural language if specified.</p><p xmlns:e=\"http://www.w3.org/1999/XSL/Spec/ElementSyntax\"><example role=\"signature\"><proto name=\"format-integer\" return-type=\"xs:string\" isOp=\"no\" prefix=\"fn\" returnEmptyOk=\"no\" returnSeq=\"no\" returnVaries=\"no\" isSchema=\"no\" isDatatype=\"no\" isSpecial=\"no\"><arg name=\"value\" type=\"xs:integer?\"/><arg name=\"picture\" type=\"xs:string\"/></proto></example><example role=\"signature\"><proto name=\"format-integer\" return-type=\"xs:string\" isOp=\"no\" prefix=\"fn\" returnEmptyOk=\"no\" returnSeq=\"no\" returnVaries=\"no\" isSchema=\"no\" isDatatype=\"no\" isSpecial=\"no\"><arg name=\"value\" type=\"xs:integer?\"/><arg name=\"picture\" type=\"xs:string\"/><arg name=\"lang\" type=\"xs:string?\"/></proto></example></p><p xmlns:e=\"http://www.w3.org/1999/XSL/Spec/ElementSyntax\">The two-argument form of this function is <termref def=\"dt-deterministic\">deterministic</termref>, <termref def=\"dt-context-dependent\">context-dependent</termref>,  and <termref def=\"dt-focus-independent\">focus-independent</termref>.  It depends on\n \t\tdefault language.\n \t</p><p xmlns:e=\"http://www.w3.org/1999/XSL/Spec/ElementSyntax\">The three-argument form of this function is <termref def=\"dt-deterministic\">deterministic</termref>, <termref def=\"dt-context-independent\">context-independent</termref>,  and <termref def=\"dt-focus-independent\">focus-independent</termref>. </p><p xmlns:e=\"http://www.w3.org/1999/XSL/Spec/ElementSyntax\">If <code>$value</code> is an empty sequence, the function returns a zero-length\n             string.</p><p xmlns:e=\"http://www.w3.org/1999/XSL/Spec/ElementSyntax\">In all other cases, the <code>$picture</code> argument describes the format in which\n                <code>$value</code> is output.</p><p xmlns:e=\"http://www.w3.org/1999/XSL/Spec/ElementSyntax\">The rules that follow describe how non-negative numbers are output. If the value of\n                <code>$value</code> is negative, the rules below are applied to the absolute value of\n                <code>$value</code>, and a minus sign is prepended to the result.</p><p xmlns:e=\"http://www.w3.org/1999/XSL/Spec/ElementSyntax\" diff=\"chg\" at=\"L\">The value of <code>$picture</code> consists of a primary format token,\n             optionally followed\n             by a format modifier. The primary format token is always present and <rfc2119>must not</rfc2119>\n             be zero-length. If the string contains one or more semicolons then everything that\n             precedes the last semicolon is taken as the primary format token and everything\n             that follows is taken as the format modifier; if the string contains no\n             semicolon then the entire picture is taken as the primary format token, and the\n             format modifier is taken to be absent (which is equivalent to supplying a\n             zero-length string).</p><p xmlns:e=\"http://www.w3.org/1999/XSL/Spec/ElementSyntax\">The primary format token is classified as one of the following:</p><ulist xmlns:e=\"http://www.w3.org/1999/XSL/Spec/ElementSyntax\"><item><p>A <var>decimal-digit-pattern</var> made up of <var>optional-digit-signs</var>,\n                      <var>mandatory-digit-signs</var>, and <var>grouping-separator-signs</var>.</p><ulist><item><p>The <var>optional-digit-sign</var> is the character \"#\".</p></item><item><p>A <var>mandatory-digit-sign</var> is a <termref def=\"character\">character</termref> in Unicode category Nd. All\n                            <var>mandatory-digit-signs</var> within the format token <rfc2119>must</rfc2119> be from the\n                         same digit family, where a digit family is a sequence of ten consecutive\n                         characters in Unicode category Nd, having digit values 0 through 9. Within\n                         the format token, these digits are interchangeable: a three-digit number may\n                         thus be indicated equivalently by <code>000</code>, <code>001</code>, or\n                            <code>999</code>.</p></item><item><p>a <var>grouping-separator-sign</var> is a non-alphanumeric character, that\n                         is a <termref def=\"character\">character</termref> whose Unicode category is\n                         other than Nd, Nl, No, Lu, Ll, Lt, Lm or Lo.</p></item></ulist><p diff=\"chg\" at=\"L\">If the primary format token contains at least one Unicode digit\n                   then it is taken as a decimal digit pattern, and in this case it <rfc2119>must</rfc2119>\n                   match the regular expression <code>^((\\p{Nd}|#|[^\\p{N}\\p{L}])+?)$</code>. If it contains\n                   a digit but does not match this pattern, a <phrase diff=\"add\" at=\"L\">dynamic</phrase> error\n                   is raised <errorref class=\"DF\" code=\"1310\"/>.</p><note><p diff=\"add\" at=\"L\">If a semicolon is to be used as a grouping separator, then the primary\n                format token as a whole must be followed by another semicolon, to ensure that\n                the grouping separator is not mistaken as a separator between the primary format\n                token and the format modifier.</p></note><p>There <rfc2119>must</rfc2119> be at least one <var>mandatory-digit-sign</var>. There may be zero or\n                   more <var>optional-digit-signs</var>, and (if present) these <rfc2119>must</rfc2119> precede all\n                      <var>mandatory-digit-signs</var>. There may be zero or more\n                      <var>grouping-separator-signs</var>. A <var>grouping-separator-sign</var> <rfc2119>must\n                   not</rfc2119> appear at the start or end of the <var>decimal-digit-pattern</var>, nor\n                   adjacent to another <var>grouping-separator-sign</var>.</p><p>The corresponding output format is a decimal number, using this digit family, with\n                   at least as many digits as there are <var>mandatory-digit-signs</var> in the\n                   format token. Thus, a format token <code>1</code> generates the sequence <code>0 1\n                      2 ... 10 11 12 ...</code>, and a format token <code>01</code> (or equivalently,\n                      <code>00</code> or <code>99</code>) generates the sequence <code>00 01 02 ...\n                      09 10 11 12 ... 99 100 101</code>. A format token of <code>&amp;#x661;</code>\n                   (Arabic-Indic digit one) generates the sequence <code>١</code> then <code>٢</code>\n                   then <code>٣</code> ...</p><p>The <var>grouping-separator-signs</var> are handled as follows. The position of\n                   grouping separators within the format token, counting backwards from the last\n                   digit, indicates the position of grouping separators to appear within the\n                   formatted number, and the character used as the <var>grouping-separator-sign</var>\n                   within the format token indicates the character to be used as the corresponding\n                   grouping separator in the formatted number. If <var>grouping-separator-signs</var>\n                   appear at regular intervals within the format token, that is if the same grouping\n                   separator appears at positions forming a sequence <var>N</var>, 2<var>N</var>,\n                      3<var>N</var>, ... for some integer value <var>N</var> (including the case\n                   where there is only one number in the list), then the sequence is extrapolated to\n                   the left, so grouping separators will be used in the formatted number at every\n                   multiple of <var>N</var>. For example, if the format token is <code>0'000</code>\n                   then the number one million will be formatted as <code>1'000'000</code>, while the\n                   number fifteen will be formatted as <code>0'015</code>.</p><p>The only purpose of <var>optional-digit-signs</var> is to mark the position of\n                      <var>grouping-separator-signs</var>. For example, if the format token is\n                      <code>#'##0</code> then the number one million will be formatted as\n                      <code>1'000'000</code>, while the number fifteen will be formatted as\n                      <code>15</code>. A grouping separator is included in the formatted number only\n                   if there is a digit to its left, which will only be the case if either (a) the\n                   number is large enough to require that digit, or (b) the number of\n                      <var>mandatory-digit-signs</var> in the format token requires insignificant\n                   leading zeros to be present.</p><note><p>Numbers will never be truncated. Given the <var>decimal-digit-pattern</var>\n                      <code>01</code>, the number three hundred will be output as <code>300</code>,\n                      despite the absence of any <var>optional-digit-sign</var>.</p></note></item><item><p>The format token <code>A</code>, which generates the sequence <code>A B C ... Z AA AB\n                      AC...</code>.</p></item><item><p>The format token <code>a</code>, which generates the sequence <code>a b c ... z aa ab\n                      ac...</code>.</p></item><item><p>The format token <code>i</code>, which generates the sequence <code>i ii iii iv v vi vii\n                      viii ix x ...</code>.</p></item><item><p>The format token <code>I</code>, which generates the sequence <code>I II III IV V VI VII\n                      VIII IX X ...</code>.</p></item><item><p>The format token <code>w</code>, which generates numbers written as lower-case words, for\n                   example in English, <code>one two three four ...</code>\n                </p></item><item><p>The format token <code>W</code>, which generates numbers written as upper-case words, for\n                   example in English, <code>ONE TWO THREE FOUR ...</code>\n                </p></item><item><p>The format token <code>Ww</code>, which generates numbers written as title-case words, for\n                   example in English, <code>One Two Three Four ...</code>\n                </p></item><item><p>Any other format token, which indicates a numbering sequence in which that token\n                   represents the number 1 (one) (but see the note below).\n                   <!-- Where possible (given the constraint that format tokens\n \t\t\t\t\t\tmust be alphanumeric, and that they must be distinct) the format token\n \t\t\t\t\t\tused to represent a numbering sequence should be the same as the representation\n \t\t\t\t\t\tof the number 1 (one) in that sequence.-->\n                   It is <termref def=\"implementation-defined\">implementation-defined</termref> which\n                   numbering sequences, additional to those listed above, are supported. If an\n                   implementation does not support a numbering sequence represented by the given\n                   token, it <rfc2119>must</rfc2119> use a format token of <code>1</code>.</p><note><p>In some traditional numbering sequences additional signs are added to denote\n                      that the letters should be interpreted as numbers; these are not included in\n                      the format token. An example (see also the example below) is classical Greek\n                      where a <emph>dexia keraia</emph> (x0374, ʹ) and sometimes an <emph>aristeri keraia</emph>\n                      (x0375, ͵) is added.</p></note></item></ulist><p xmlns:e=\"http://www.w3.org/1999/XSL/Spec/ElementSyntax\">For all format tokens other than the first kind above (one that consists of decimal\n             digits), there <rfc2119>may</rfc2119> be <termref def=\"implementation-defined\">implementation-defined</termref> lower and upper bounds on the range of numbers that\n             can be formatted using this format token; indeed, for some numbering sequences there may\n             be intrinsic limits. For example, the format token <code>&amp;#x2460;</code> (circled\n             digit one, ①) has a range <phrase diff=\"chg\" at=\"M\">imposed by the Unicode character repertoire — 1 to 20 in\n             Unicode versions prior to 4.0, increased in subsequent versions</phrase>. For\n             the numbering sequences described above any upper bound imposed by the implementation\n                <rfc2119>must not</rfc2119> be less than 1000 (one thousand) and any lower bound must\n             not be greater than 1. Numbers that fall outside this range <rfc2119>must</rfc2119> be\n             formatted using the format token <code>1</code>.</p><p xmlns:e=\"http://www.w3.org/1999/XSL/Spec/ElementSyntax\">The above expansions of numbering sequences for format tokens such as <code>a</code> and\n                <code>i</code> are indicative but not prescriptive. There are various conventions in\n             use for how alphabetic sequences continue when the alphabet is exhausted, and differing\n             conventions for how roman numerals are written (for example, <code>IV</code> versus\n                <code>IIII</code> as the representation of the number 4). Sometimes alphabetic\n             sequences are used that omit letters such as <code>i</code> and <code>o</code>. This\n             specification does not prescribe the detail of any sequence other than those sequences\n             consisting entirely of decimal digits.</p><p xmlns:e=\"http://www.w3.org/1999/XSL/Spec/ElementSyntax\">Many numbering sequences are language-sensitive. This applies especially to the sequence\n             selected by the tokens <code>w</code>, <code>W</code> and <code>Ww</code>. It also\n             applies to other sequences, for example different languages using the Cyrillic alphabet\n             use different sequences of characters, each starting with the letter #x410 (Cyrillic\n             capital letter A). In such cases, the <code>$lang</code> argument specifies which\n             language's conventions are to be used. <phrase diff=\"chg\" at=\"L\">If the argument\n             is specified, the value <rfc2119>should</rfc2119> be either an empty sequence\n             or a value that would be valid for the <code>xml:lang</code> attribute (see <bibref ref=\"REC-xml\"/>).\n             Note that this permits the identification of sublanguages based on country codes (from ISO 3166-1)\n             as well as identification of dialects and regions within a country.</phrase>.</p><p xmlns:e=\"http://www.w3.org/1999/XSL/Spec/ElementSyntax\">The set of languages\n             for which numbering is supported is <termref def=\"implementation-defined\"/>.\n             If the <code>$lang</code> argument is absent,\n             or is set to an empty sequence, or is invalid, or is not a language supported by the\n             implementation, then the number is formatted using <phrase diff=\"chg\" at=\"K\">the\n             default language from the dynamic context</phrase>.\n             </p><p xmlns:e=\"http://www.w3.org/1999/XSL/Spec/ElementSyntax\">The format modifier <phrase diff=\"chg\" at=\"L\"><rfc2119>must</rfc2119>\n             be a string that matches the regular expression <code diff=\"chg\" at=\"M\">^([co](\\(.+\\))?)?[at]?$</code>. </phrase>\n             That is, if it is present it must consist of one <phrase diff=\"add\" at=\"G\">or more</phrase> of\n             the following, in <phrase diff=\"del\" at=\"K\">any</phrase> order:</p><ulist xmlns:e=\"http://www.w3.org/1999/XSL/Spec/ElementSyntax\"><item><p diff=\"chg\" at=\"G\">either <code>c</code> or <code>o</code>, optionally followed by\n                   a sequence of characters enclosed between parentheses, to indicate cardinal or\n                   ordinal numbering respectively, the default being cardinal numbering</p></item><item><p diff=\"chg\" at=\"G\">either <code>a</code> or <code>t</code>, to indicate alphabetic\n                   or traditional numbering respectively, the default being <termref def=\"implementation-defined\">implementation-defined</termref>.</p></item></ulist><p xmlns:e=\"http://www.w3.org/1999/XSL/Spec/ElementSyntax\">If the <code>o</code> modifier is present, this indicates a request to output ordinal\n             numbers rather than cardinal numbers. For example, in English, when used with the format\n             token <code>1</code>, this outputs the sequence <code>1st 2nd 3rd 4th ...</code>, and\n             when used with the format token <code>w</code> outputs the sequence <code>first second\n             third fourth ...</code>.</p><p xmlns:e=\"http://www.w3.org/1999/XSL/Spec/ElementSyntax\" diff=\"add\" at=\"L\">The string of characters between the parentheses, if present, is used to\n          select between other possible variations of cardinal or ordinal numbering sequences.\n          The interpretation of this string is <termref def=\"implemementation-defined\">implementation-defined</termref>. No error occurs\n          if the implementation does not define any interpretation for the defined string.</p><p xmlns:e=\"http://www.w3.org/1999/XSL/Spec/ElementSyntax\">For example, in some languages, ordinal numbers vary depending on the grammatical context:\n             they may have different genders and may decline with the noun that they qualify.\n             In such cases the string appearing in parentheses after the letter <code>o</code> may be\n             used to indicate the variation of the ordinal number required. The way in which the\n             variation is indicated will depend on the conventions of the language. For inflected\n             languages that vary the ending of the word, the <rfc2119>recommended</rfc2119> approach is to indicate the\n             required ending, preceded by a hyphen: for example in German, appropriate values are\n                <code>o(-e)</code>, <code>o(-er)</code>, <code>o(-es)</code>, <code>o(-en)</code>. </p><p xmlns:e=\"http://www.w3.org/1999/XSL/Spec/ElementSyntax\">It is <termref def=\"implementation-defined\">implementation-defined</termref> what\n             combinations of values of the format token, the language, and the cardinal/ordinal\n             modifier are supported. If ordinal numbering is not supported for the combination of the\n             format token, the language, and the string appearing in parentheses, the request is\n             ignored and cardinal numbers are generated instead.</p><example xmlns:e=\"http://www.w3.org/1999/XSL/Spec/ElementSyntax\"><head>Ordinal Numbering in Italian</head><p>The specification <code>\"1;o(-º)\"</code> with <code>$lang</code> equal to\n                   <code>it</code>, if supported, should produce the sequence:</p><eg xml:space=\"preserve\">1º 2º 3º 4º ...</eg><p>The specification <code>\"Ww;o\"</code> with <code>$lang</code> equal to\n                   <code>it</code>, if supported, should produce the sequence:</p><eg xml:space=\"preserve\">Primo Secondo Terzo Quarto Quinto ...</eg></example><p xmlns:e=\"http://www.w3.org/1999/XSL/Spec/ElementSyntax\">The <phrase diff=\"chg\" at=\"G\">use of the <code>a</code> or <code>t</code>\n                modifier</phrase> disambiguates between numbering sequences that use letters. In many\n             languages there are two commonly used numbering sequences that use letters. One\n             numbering sequence assigns numeric values to letters in alphabetic sequence, and the\n             other assigns numeric values to each letter in some other manner traditional in that\n             language. In English, these would correspond to the numbering sequences specified by the\n             format tokens <code>a</code> and <code>i</code>. In some languages, the first member of\n             each sequence is the same, and so the format token alone would be ambiguous. <phrase diff=\"chg\" at=\"G\">In the absence of the <code>a</code> or <code>t</code> modifier,\n                the default is <termref def=\"implementation-defined\">implementation-defined</termref></phrase>.</p><p xmlns:e=\"http://www.w3.org/1999/XSL/Spec/ElementSyntax\" diff=\"add\" at=\"L\">A <phrase diff=\"add\" at=\"L\">dynamic</phrase> error is raised <errorref class=\"DF\" code=\"1310\"/> if the format token is invalid,\n             that is, if it violates any mandatory rules (indicated by an emphasized <rfc2119>must</rfc2119>\n             or <rfc2119>required</rfc2119> keyword in the above rules). For example, the error is raised if\n             the primary format token contains a digit but does not match the required regular expression.</p></div>\n", "summary" : "<p>  Formats an integer according to a given picture string, using the conventions\n             of a given natural language if specified.</p>", "annotation_str" : "", "annotations" : [  ], "updating" : false, "parameters" : [ { "name" : "value", "type" : "xs:integer", "occurrence" : "?", "description" : "" }, { "name" : "picture", "type" : "xs:string", "occurrence" : null, "description" : "" } ], "returns" : { "type" : "xs:string", "description" : "" }, "errors" : [  ] }, { "isDocumented" : true, "arity" : 3, "name" : "format-integer", "qname" : "fn:format-integer", "signature" : "($value as xs:integer?, $picture as xs:string, $language as xs:string) as xs:string external", "description" : " <div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"><p xmlns:e=\"http://www.w3.org/1999/XSL/Spec/ElementSyntax\">Formats an integer according to a given picture string, using the conventions\n             of a given natural language if specified.</p><p xmlns:e=\"http://www.w3.org/1999/XSL/Spec/ElementSyntax\"><example role=\"signature\"><proto name=\"format-integer\" return-type=\"xs:string\" isOp=\"no\" prefix=\"fn\" returnEmptyOk=\"no\" returnSeq=\"no\" returnVaries=\"no\" isSchema=\"no\" isDatatype=\"no\" isSpecial=\"no\"><arg name=\"value\" type=\"xs:integer?\"/><arg name=\"picture\" type=\"xs:string\"/></proto></example><example role=\"signature\"><proto name=\"format-integer\" return-type=\"xs:string\" isOp=\"no\" prefix=\"fn\" returnEmptyOk=\"no\" returnSeq=\"no\" returnVaries=\"no\" isSchema=\"no\" isDatatype=\"no\" isSpecial=\"no\"><arg name=\"value\" type=\"xs:integer?\"/><arg name=\"picture\" type=\"xs:string\"/><arg name=\"lang\" type=\"xs:string?\"/></proto></example></p><p xmlns:e=\"http://www.w3.org/1999/XSL/Spec/ElementSyntax\">The two-argument form of this function is <termref def=\"dt-deterministic\">deterministic</termref>, <termref def=\"dt-context-dependent\">context-dependent</termref>,  and <termref def=\"dt-focus-independent\">focus-independent</termref>.  It depends on\n \t\tdefault language.\n \t</p><p xmlns:e=\"http://www.w3.org/1999/XSL/Spec/ElementSyntax\">The three-argument form of this function is <termref def=\"dt-deterministic\">deterministic</termref>, <termref def=\"dt-context-independent\">context-independent</termref>,  and <termref def=\"dt-focus-independent\">focus-independent</termref>. </p><p xmlns:e=\"http://www.w3.org/1999/XSL/Spec/ElementSyntax\">If <code>$value</code> is an empty sequence, the function returns a zero-length\n             string.</p><p xmlns:e=\"http://www.w3.org/1999/XSL/Spec/ElementSyntax\">In all other cases, the <code>$picture</code> argument describes the format in which\n                <code>$value</code> is output.</p><p xmlns:e=\"http://www.w3.org/1999/XSL/Spec/ElementSyntax\">The rules that follow describe how non-negative numbers are output. If the value of\n                <code>$value</code> is negative, the rules below are applied to the absolute value of\n                <code>$value</code>, and a minus sign is prepended to the result.</p><p xmlns:e=\"http://www.w3.org/1999/XSL/Spec/ElementSyntax\" diff=\"chg\" at=\"L\">The value of <code>$picture</code> consists of a primary format token,\n             optionally followed\n             by a format modifier. The primary format token is always present and <rfc2119>must not</rfc2119>\n             be zero-length. If the string contains one or more semicolons then everything that\n             precedes the last semicolon is taken as the primary format token and everything\n             that follows is taken as the format modifier; if the string contains no\n             semicolon then the entire picture is taken as the primary format token, and the\n             format modifier is taken to be absent (which is equivalent to supplying a\n             zero-length string).</p><p xmlns:e=\"http://www.w3.org/1999/XSL/Spec/ElementSyntax\">The primary format token is classified as one of the following:</p><ulist xmlns:e=\"http://www.w3.org/1999/XSL/Spec/ElementSyntax\"><item><p>A <var>decimal-digit-pattern</var> made up of <var>optional-digit-signs</var>,\n                      <var>mandatory-digit-signs</var>, and <var>grouping-separator-signs</var>.</p><ulist><item><p>The <var>optional-digit-sign</var> is the character \"#\".</p></item><item><p>A <var>mandatory-digit-sign</var> is a <termref def=\"character\">character</termref> in Unicode category Nd. All\n                            <var>mandatory-digit-signs</var> within the format token <rfc2119>must</rfc2119> be from the\n                         same digit family, where a digit family is a sequence of ten consecutive\n                         characters in Unicode category Nd, having digit values 0 through 9. Within\n                         the format token, these digits are interchangeable: a three-digit number may\n                         thus be indicated equivalently by <code>000</code>, <code>001</code>, or\n                            <code>999</code>.</p></item><item><p>a <var>grouping-separator-sign</var> is a non-alphanumeric character, that\n                         is a <termref def=\"character\">character</termref> whose Unicode category is\n                         other than Nd, Nl, No, Lu, Ll, Lt, Lm or Lo.</p></item></ulist><p diff=\"chg\" at=\"L\">If the primary format token contains at least one Unicode digit\n                   then it is taken as a decimal digit pattern, and in this case it <rfc2119>must</rfc2119>\n                   match the regular expression <code>^((\\p{Nd}|#|[^\\p{N}\\p{L}])+?)$</code>. If it contains\n                   a digit but does not match this pattern, a <phrase diff=\"add\" at=\"L\">dynamic</phrase> error\n                   is raised <errorref class=\"DF\" code=\"1310\"/>.</p><note><p diff=\"add\" at=\"L\">If a semicolon is to be used as a grouping separator, then the primary\n                format token as a whole must be followed by another semicolon, to ensure that\n                the grouping separator is not mistaken as a separator between the primary format\n                token and the format modifier.</p></note><p>There <rfc2119>must</rfc2119> be at least one <var>mandatory-digit-sign</var>. There may be zero or\n                   more <var>optional-digit-signs</var>, and (if present) these <rfc2119>must</rfc2119> precede all\n                      <var>mandatory-digit-signs</var>. There may be zero or more\n                      <var>grouping-separator-signs</var>. A <var>grouping-separator-sign</var> <rfc2119>must\n                   not</rfc2119> appear at the start or end of the <var>decimal-digit-pattern</var>, nor\n                   adjacent to another <var>grouping-separator-sign</var>.</p><p>The corresponding output format is a decimal number, using this digit family, with\n                   at least as many digits as there are <var>mandatory-digit-signs</var> in the\n                   format token. Thus, a format token <code>1</code> generates the sequence <code>0 1\n                      2 ... 10 11 12 ...</code>, and a format token <code>01</code> (or equivalently,\n                      <code>00</code> or <code>99</code>) generates the sequence <code>00 01 02 ...\n                      09 10 11 12 ... 99 100 101</code>. A format token of <code>&amp;#x661;</code>\n                   (Arabic-Indic digit one) generates the sequence <code>١</code> then <code>٢</code>\n                   then <code>٣</code> ...</p><p>The <var>grouping-separator-signs</var> are handled as follows. The position of\n                   grouping separators within the format token, counting backwards from the last\n                   digit, indicates the position of grouping separators to appear within the\n                   formatted number, and the character used as the <var>grouping-separator-sign</var>\n                   within the format token indicates the character to be used as the corresponding\n                   grouping separator in the formatted number. If <var>grouping-separator-signs</var>\n                   appear at regular intervals within the format token, that is if the same grouping\n                   separator appears at positions forming a sequence <var>N</var>, 2<var>N</var>,\n                      3<var>N</var>, ... for some integer value <var>N</var> (including the case\n                   where there is only one number in the list), then the sequence is extrapolated to\n                   the left, so grouping separators will be used in the formatted number at every\n                   multiple of <var>N</var>. For example, if the format token is <code>0'000</code>\n                   then the number one million will be formatted as <code>1'000'000</code>, while the\n                   number fifteen will be formatted as <code>0'015</code>.</p><p>The only purpose of <var>optional-digit-signs</var> is to mark the position of\n                      <var>grouping-separator-signs</var>. For example, if the format token is\n                      <code>#'##0</code> then the number one million will be formatted as\n                      <code>1'000'000</code>, while the number fifteen will be formatted as\n                      <code>15</code>. A grouping separator is included in the formatted number only\n                   if there is a digit to its left, which will only be the case if either (a) the\n                   number is large enough to require that digit, or (b) the number of\n                      <var>mandatory-digit-signs</var> in the format token requires insignificant\n                   leading zeros to be present.</p><note><p>Numbers will never be truncated. Given the <var>decimal-digit-pattern</var>\n                      <code>01</code>, the number three hundred will be output as <code>300</code>,\n                      despite the absence of any <var>optional-digit-sign</var>.</p></note></item><item><p>The format token <code>A</code>, which generates the sequence <code>A B C ... Z AA AB\n                      AC...</code>.</p></item><item><p>The format token <code>a</code>, which generates the sequence <code>a b c ... z aa ab\n                      ac...</code>.</p></item><item><p>The format token <code>i</code>, which generates the sequence <code>i ii iii iv v vi vii\n                      viii ix x ...</code>.</p></item><item><p>The format token <code>I</code>, which generates the sequence <code>I II III IV V VI VII\n                      VIII IX X ...</code>.</p></item><item><p>The format token <code>w</code>, which generates numbers written as lower-case words, for\n                   example in English, <code>one two three four ...</code>\n                </p></item><item><p>The format token <code>W</code>, which generates numbers written as upper-case words, for\n                   example in English, <code>ONE TWO THREE FOUR ...</code>\n                </p></item><item><p>The format token <code>Ww</code>, which generates numbers written as title-case words, for\n                   example in English, <code>One Two Three Four ...</code>\n                </p></item><item><p>Any other format token, which indicates a numbering sequence in which that token\n                   represents the number 1 (one) (but see the note below).\n                   <!-- Where possible (given the constraint that format tokens\n \t\t\t\t\t\tmust be alphanumeric, and that they must be distinct) the format token\n \t\t\t\t\t\tused to represent a numbering sequence should be the same as the representation\n \t\t\t\t\t\tof the number 1 (one) in that sequence.-->\n                   It is <termref def=\"implementation-defined\">implementation-defined</termref> which\n                   numbering sequences, additional to those listed above, are supported. If an\n                   implementation does not support a numbering sequence represented by the given\n                   token, it <rfc2119>must</rfc2119> use a format token of <code>1</code>.</p><note><p>In some traditional numbering sequences additional signs are added to denote\n                      that the letters should be interpreted as numbers; these are not included in\n                      the format token. An example (see also the example below) is classical Greek\n                      where a <emph>dexia keraia</emph> (x0374, ʹ) and sometimes an <emph>aristeri keraia</emph>\n                      (x0375, ͵) is added.</p></note></item></ulist><p xmlns:e=\"http://www.w3.org/1999/XSL/Spec/ElementSyntax\">For all format tokens other than the first kind above (one that consists of decimal\n             digits), there <rfc2119>may</rfc2119> be <termref def=\"implementation-defined\">implementation-defined</termref> lower and upper bounds on the range of numbers that\n             can be formatted using this format token; indeed, for some numbering sequences there may\n             be intrinsic limits. For example, the format token <code>&amp;#x2460;</code> (circled\n             digit one, ①) has a range <phrase diff=\"chg\" at=\"M\">imposed by the Unicode character repertoire — 1 to 20 in\n             Unicode versions prior to 4.0, increased in subsequent versions</phrase>. For\n             the numbering sequences described above any upper bound imposed by the implementation\n                <rfc2119>must not</rfc2119> be less than 1000 (one thousand) and any lower bound must\n             not be greater than 1. Numbers that fall outside this range <rfc2119>must</rfc2119> be\n             formatted using the format token <code>1</code>.</p><p xmlns:e=\"http://www.w3.org/1999/XSL/Spec/ElementSyntax\">The above expansions of numbering sequences for format tokens such as <code>a</code> and\n                <code>i</code> are indicative but not prescriptive. There are various conventions in\n             use for how alphabetic sequences continue when the alphabet is exhausted, and differing\n             conventions for how roman numerals are written (for example, <code>IV</code> versus\n                <code>IIII</code> as the representation of the number 4). Sometimes alphabetic\n             sequences are used that omit letters such as <code>i</code> and <code>o</code>. This\n             specification does not prescribe the detail of any sequence other than those sequences\n             consisting entirely of decimal digits.</p><p xmlns:e=\"http://www.w3.org/1999/XSL/Spec/ElementSyntax\">Many numbering sequences are language-sensitive. This applies especially to the sequence\n             selected by the tokens <code>w</code>, <code>W</code> and <code>Ww</code>. It also\n             applies to other sequences, for example different languages using the Cyrillic alphabet\n             use different sequences of characters, each starting with the letter #x410 (Cyrillic\n             capital letter A). In such cases, the <code>$lang</code> argument specifies which\n             language's conventions are to be used. <phrase diff=\"chg\" at=\"L\">If the argument\n             is specified, the value <rfc2119>should</rfc2119> be either an empty sequence\n             or a value that would be valid for the <code>xml:lang</code> attribute (see <bibref ref=\"REC-xml\"/>).\n             Note that this permits the identification of sublanguages based on country codes (from ISO 3166-1)\n             as well as identification of dialects and regions within a country.</phrase>.</p><p xmlns:e=\"http://www.w3.org/1999/XSL/Spec/ElementSyntax\">The set of languages\n             for which numbering is supported is <termref def=\"implementation-defined\"/>.\n             If the <code>$lang</code> argument is absent,\n             or is set to an empty sequence, or is invalid, or is not a language supported by the\n             implementation, then the number is formatted using <phrase diff=\"chg\" at=\"K\">the\n             default language from the dynamic context</phrase>.\n             </p><p xmlns:e=\"http://www.w3.org/1999/XSL/Spec/ElementSyntax\">The format modifier <phrase diff=\"chg\" at=\"L\"><rfc2119>must</rfc2119>\n             be a string that matches the regular expression <code diff=\"chg\" at=\"M\">^([co](\\(.+\\))?)?[at]?$</code>. </phrase>\n             That is, if it is present it must consist of one <phrase diff=\"add\" at=\"G\">or more</phrase> of\n             the following, in <phrase diff=\"del\" at=\"K\">any</phrase> order:</p><ulist xmlns:e=\"http://www.w3.org/1999/XSL/Spec/ElementSyntax\"><item><p diff=\"chg\" at=\"G\">either <code>c</code> or <code>o</code>, optionally followed by\n                   a sequence of characters enclosed between parentheses, to indicate cardinal or\n                   ordinal numbering respectively, the default being cardinal numbering</p></item><item><p diff=\"chg\" at=\"G\">either <code>a</code> or <code>t</code>, to indicate alphabetic\n                   or traditional numbering respectively, the default being <termref def=\"implementation-defined\">implementation-defined</termref>.</p></item></ulist><p xmlns:e=\"http://www.w3.org/1999/XSL/Spec/ElementSyntax\">If the <code>o</code> modifier is present, this indicates a request to output ordinal\n             numbers rather than cardinal numbers. For example, in English, when used with the format\n             token <code>1</code>, this outputs the sequence <code>1st 2nd 3rd 4th ...</code>, and\n             when used with the format token <code>w</code> outputs the sequence <code>first second\n             third fourth ...</code>.</p><p xmlns:e=\"http://www.w3.org/1999/XSL/Spec/ElementSyntax\" diff=\"add\" at=\"L\">The string of characters between the parentheses, if present, is used to\n          select between other possible variations of cardinal or ordinal numbering sequences.\n          The interpretation of this string is <termref def=\"implemementation-defined\">implementation-defined</termref>. No error occurs\n          if the implementation does not define any interpretation for the defined string.</p><p xmlns:e=\"http://www.w3.org/1999/XSL/Spec/ElementSyntax\">For example, in some languages, ordinal numbers vary depending on the grammatical context:\n             they may have different genders and may decline with the noun that they qualify.\n             In such cases the string appearing in parentheses after the letter <code>o</code> may be\n             used to indicate the variation of the ordinal number required. The way in which the\n             variation is indicated will depend on the conventions of the language. For inflected\n             languages that vary the ending of the word, the <rfc2119>recommended</rfc2119> approach is to indicate the\n             required ending, preceded by a hyphen: for example in German, appropriate values are\n                <code>o(-e)</code>, <code>o(-er)</code>, <code>o(-es)</code>, <code>o(-en)</code>. </p><p xmlns:e=\"http://www.w3.org/1999/XSL/Spec/ElementSyntax\">It is <termref def=\"implementation-defined\">implementation-defined</termref> what\n             combinations of values of the format token, the language, and the cardinal/ordinal\n             modifier are supported. If ordinal numbering is not supported for the combination of the\n             format token, the language, and the string appearing in parentheses, the request is\n             ignored and cardinal numbers are generated instead.</p><example xmlns:e=\"http://www.w3.org/1999/XSL/Spec/ElementSyntax\"><head>Ordinal Numbering in Italian</head><p>The specification <code>\"1;o(-º)\"</code> with <code>$lang</code> equal to\n                   <code>it</code>, if supported, should produce the sequence:</p><eg xml:space=\"preserve\">1º 2º 3º 4º ...</eg><p>The specification <code>\"Ww;o\"</code> with <code>$lang</code> equal to\n                   <code>it</code>, if supported, should produce the sequence:</p><eg xml:space=\"preserve\">Primo Secondo Terzo Quarto Quinto ...</eg></example><p xmlns:e=\"http://www.w3.org/1999/XSL/Spec/ElementSyntax\">The <phrase diff=\"chg\" at=\"G\">use of the <code>a</code> or <code>t</code>\n                modifier</phrase> disambiguates between numbering sequences that use letters. In many\n             languages there are two commonly used numbering sequences that use letters. One\n             numbering sequence assigns numeric values to letters in alphabetic sequence, and the\n             other assigns numeric values to each letter in some other manner traditional in that\n             language. In English, these would correspond to the numbering sequences specified by the\n             format tokens <code>a</code> and <code>i</code>. In some languages, the first member of\n             each sequence is the same, and so the format token alone would be ambiguous. <phrase diff=\"chg\" at=\"G\">In the absence of the <code>a</code> or <code>t</code> modifier,\n                the default is <termref def=\"implementation-defined\">implementation-defined</termref></phrase>.</p><p xmlns:e=\"http://www.w3.org/1999/XSL/Spec/ElementSyntax\" diff=\"add\" at=\"L\">A <phrase diff=\"add\" at=\"L\">dynamic</phrase> error is raised <errorref class=\"DF\" code=\"1310\"/> if the format token is invalid,\n             that is, if it violates any mandatory rules (indicated by an emphasized <rfc2119>must</rfc2119>\n             or <rfc2119>required</rfc2119> keyword in the above rules). For example, the error is raised if\n             the primary format token contains a digit but does not match the required regular expression.</p></div>\n", "summary" : "<p>  Formats an integer according to a given picture string, using the conventions\n             of a given natural language if specified.</p>", "annotation_str" : "", "annotations" : [  ], "updating" : false, "parameters" : [ { "name" : "value", "type" : "xs:integer", "occurrence" : "?", "description" : "" }, { "name" : "picture", "type" : "xs:string", "occurrence" : null, "description" : "" }, { "name" : "language", "type" : "xs:string", "occurrence" : null, "description" : "" } ], "returns" : { "type" : "xs:string", "description" : "" }, "errors" : [  ] }, { "isDocumented" : true, "arity" : 2, "name" : "format-number", "qname" : "fn:format-number", "signature" : "($value as numeric?, $picture as xs:string) as xs:string external", "description" : " <div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"><p xmlns:e=\"http://www.w3.org/1999/XSL/Spec/ElementSyntax\">Returns a string containing a number formatted according to a given picture\n             string, taking account of decimal formats specified in the static context.</p><p xmlns:e=\"http://www.w3.org/1999/XSL/Spec/ElementSyntax\"><example role=\"signature\"><proto name=\"format-number\" return-type=\"xs:string\" isOp=\"no\" prefix=\"fn\" returnEmptyOk=\"no\" returnSeq=\"no\" returnVaries=\"no\" isSchema=\"no\" isDatatype=\"no\" isSpecial=\"no\"><arg name=\"value\" type=\"numeric?\"/><arg name=\"picture\" type=\"xs:string\"/></proto></example><example role=\"signature\"><proto name=\"format-number\" return-type=\"xs:string\" isOp=\"no\" prefix=\"fn\" returnEmptyOk=\"no\" returnSeq=\"no\" returnVaries=\"no\" isSchema=\"no\" isDatatype=\"no\" isSpecial=\"no\"><arg name=\"value\" type=\"numeric?\"/><arg name=\"picture\" type=\"xs:string\"/><arg name=\"decimal-format-name\" type=\"xs:string?\"/></proto></example></p><p xmlns:e=\"http://www.w3.org/1999/XSL/Spec/ElementSyntax\">The two-argument form of this function is <termref def=\"dt-deterministic\">deterministic</termref>, <termref def=\"dt-context-independent\">context-independent</termref>,  and <termref def=\"dt-focus-independent\">focus-independent</termref>. </p><p xmlns:e=\"http://www.w3.org/1999/XSL/Spec/ElementSyntax\">The three-argument form of this function is <termref def=\"dt-deterministic\">deterministic</termref>, <termref def=\"dt-context-dependent\">context-dependent</termref>,  and <termref def=\"dt-focus-independent\">focus-independent</termref>.  It depends on\n \t\tdecimal formats, and namespaces.\n \t</p><p xmlns:e=\"http://www.w3.org/1999/XSL/Spec/ElementSyntax\" diff=\"add\" at=\"K\">The effect of the two-argument form of the function is equivalent to calling\n          the three-argument form with an empty sequence as the value of the third argument.</p><p xmlns:e=\"http://www.w3.org/1999/XSL/Spec/ElementSyntax\">The function formats <code>$value</code> as a string using the <termref def=\"dt-picture-string\">picture string</termref> specified by the\n                <code>$picture</code> argument and the decimal-format named by the\n                <code>$decimal-format-name</code> argument, or the default decimal-format, if there\n             is no <code>$decimal-format-name</code> argument. The syntax of the picture string is\n             described in <specref ref=\"syntax-of-picture-string\"/>.</p><p xmlns:e=\"http://www.w3.org/1999/XSL/Spec/ElementSyntax\">The <code>$value</code> argument may be of any numeric data type\n             (<code>xs:double</code>, <code>xs:float</code>, <code>xs:decimal</code>, or their\n             subtypes including <code>xs:integer</code>). Note that if an <code>xs:decimal</code> is\n             supplied, it is not automatically promoted to an <code>xs:double</code>, as such\n             promotion can involve a loss of precision.</p><p xmlns:e=\"http://www.w3.org/1999/XSL/Spec/ElementSyntax\">If the supplied value of the <code>$value</code> argument is an empty sequence, the\n             function behaves as if the supplied value were the <code>xs:double</code> value\n                <code>NaN</code>.</p><p xmlns:e=\"http://www.w3.org/1999/XSL/Spec/ElementSyntax\">The value of <code>$decimal-format-name</code>,\n             <phrase diff=\"add\" at=\"K\">if present and non-empty, </phrase>\n             <rfc2119>must</rfc2119> <phrase diff=\"chg\" at=\"L\">be a string which after removal of leading and trailing whitespace is in the form of an\n             an <code>EQName</code> as defined in the XPath 3.0 grammar, that is one of the following</phrase>:</p><ulist xmlns:e=\"http://www.w3.org/1999/XSL/Spec/ElementSyntax\"><item><p>A lexical QName, which is expanded using the\n                <phrase diff=\"chg\" at=\"J\">statically known namespaces</phrase>.\n                The default namespace is not used (no prefix means no namespace).</p></item><item><p diff=\"add\" at=\"L\">A <code>URIQualifiedName</code> using the syntax <code>Q{uri}local</code>,\n             where the URI can be zero-length to indicate a name in no namespace.</p></item></ulist><p xmlns:e=\"http://www.w3.org/1999/XSL/Spec/ElementSyntax\" diff=\"add\" at=\"K\">The decimal format that is used is the decimal format\n          in the static context whose name matches <code>$decimal-format-name</code> if supplied,\n          or the default decimal format in the static context otherwise.</p><p xmlns:e=\"http://www.w3.org/1999/XSL/Spec/ElementSyntax\">The evaluation of the <function>format-number</function> function takes place in two\n             phases, an analysis phase described in <specref ref=\"analysing-picture-string\"/> and a\n             formatting phase described in <specref ref=\"formatting-the-number\"/>.</p><p xmlns:e=\"http://www.w3.org/1999/XSL/Spec/ElementSyntax\">The analysis phase takes as its inputs the <termref def=\"dt-picture-string\">picture\n                string</termref> and the variables derived from the relevant decimal format in the\n             static context, and produces as its output a number of variables with defined values.\n             The formatting phase takes as its inputs the number to be formatted and the variables\n             produced by the analysis phase, and produces as its output a string containing a\n             formatted representation of the number.</p><p xmlns:e=\"http://www.w3.org/1999/XSL/Spec/ElementSyntax\">The result of the function is the formatted string representation of the supplied\n             number.</p><p xmlns:e=\"http://www.w3.org/1999/XSL/Spec/ElementSyntax\">A <phrase diff=\"add\" at=\"L\">dynamic</phrase> error is raised <errorref class=\"DF\" code=\"1280\"/> if the name specified as the\n                <code>$decimal-format-name</code> argument is\n             <phrase diff=\"chg\" at=\"L\">neither a valid lexical QName nor a valid <code>URIQualifiedName</code></phrase>, or if it\n             uses a prefix <phrase diff=\"add\" at=\"J\">that is not found in the statically known namespaces</phrase>, or if the static\n             context does not contain a declaration of a decimal-format with a matching expanded\n             QName. If the processor is able to detect the error statically (for example, when the\n             argument is supplied as a string literal), then the processor <rfc2119>may</rfc2119>\n             optionally signal this as a static error.</p></div>\n", "summary" : "<p>  Returns a string containing a number formatted according to a given picture\n             string, taking account of decimal formats specified in the static context.</p>", "annotation_str" : "", "annotations" : [  ], "updating" : false, "parameters" : [ { "name" : "value", "type" : "numeric", "occurrence" : "?", "description" : "" }, { "name" : "picture", "type" : "xs:string", "occurrence" : null, "description" : "" } ], "returns" : { "type" : "xs:string", "description" : "" }, "errors" : [  ] }, { "isDocumented" : true, "arity" : 3, "name" : "format-number", "qname" : "fn:format-number", "signature" : "($value as numeric?, $picture as xs:string, $decimal-format-name as xs:string) as xs:string external", "description" : " <div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"><p xmlns:e=\"http://www.w3.org/1999/XSL/Spec/ElementSyntax\">Returns a string containing a number formatted according to a given picture\n             string, taking account of decimal formats specified in the static context.</p><p xmlns:e=\"http://www.w3.org/1999/XSL/Spec/ElementSyntax\"><example role=\"signature\"><proto name=\"format-number\" return-type=\"xs:string\" isOp=\"no\" prefix=\"fn\" returnEmptyOk=\"no\" returnSeq=\"no\" returnVaries=\"no\" isSchema=\"no\" isDatatype=\"no\" isSpecial=\"no\"><arg name=\"value\" type=\"numeric?\"/><arg name=\"picture\" type=\"xs:string\"/></proto></example><example role=\"signature\"><proto name=\"format-number\" return-type=\"xs:string\" isOp=\"no\" prefix=\"fn\" returnEmptyOk=\"no\" returnSeq=\"no\" returnVaries=\"no\" isSchema=\"no\" isDatatype=\"no\" isSpecial=\"no\"><arg name=\"value\" type=\"numeric?\"/><arg name=\"picture\" type=\"xs:string\"/><arg name=\"decimal-format-name\" type=\"xs:string?\"/></proto></example></p><p xmlns:e=\"http://www.w3.org/1999/XSL/Spec/ElementSyntax\">The two-argument form of this function is <termref def=\"dt-deterministic\">deterministic</termref>, <termref def=\"dt-context-independent\">context-independent</termref>,  and <termref def=\"dt-focus-independent\">focus-independent</termref>. </p><p xmlns:e=\"http://www.w3.org/1999/XSL/Spec/ElementSyntax\">The three-argument form of this function is <termref def=\"dt-deterministic\">deterministic</termref>, <termref def=\"dt-context-dependent\">context-dependent</termref>,  and <termref def=\"dt-focus-independent\">focus-independent</termref>.  It depends on\n \t\tdecimal formats, and namespaces.\n \t</p><p xmlns:e=\"http://www.w3.org/1999/XSL/Spec/ElementSyntax\" diff=\"add\" at=\"K\">The effect of the two-argument form of the function is equivalent to calling\n          the three-argument form with an empty sequence as the value of the third argument.</p><p xmlns:e=\"http://www.w3.org/1999/XSL/Spec/ElementSyntax\">The function formats <code>$value</code> as a string using the <termref def=\"dt-picture-string\">picture string</termref> specified by the\n                <code>$picture</code> argument and the decimal-format named by the\n                <code>$decimal-format-name</code> argument, or the default decimal-format, if there\n             is no <code>$decimal-format-name</code> argument. The syntax of the picture string is\n             described in <specref ref=\"syntax-of-picture-string\"/>.</p><p xmlns:e=\"http://www.w3.org/1999/XSL/Spec/ElementSyntax\">The <code>$value</code> argument may be of any numeric data type\n             (<code>xs:double</code>, <code>xs:float</code>, <code>xs:decimal</code>, or their\n             subtypes including <code>xs:integer</code>). Note that if an <code>xs:decimal</code> is\n             supplied, it is not automatically promoted to an <code>xs:double</code>, as such\n             promotion can involve a loss of precision.</p><p xmlns:e=\"http://www.w3.org/1999/XSL/Spec/ElementSyntax\">If the supplied value of the <code>$value</code> argument is an empty sequence, the\n             function behaves as if the supplied value were the <code>xs:double</code> value\n                <code>NaN</code>.</p><p xmlns:e=\"http://www.w3.org/1999/XSL/Spec/ElementSyntax\">The value of <code>$decimal-format-name</code>,\n             <phrase diff=\"add\" at=\"K\">if present and non-empty, </phrase>\n             <rfc2119>must</rfc2119> <phrase diff=\"chg\" at=\"L\">be a string which after removal of leading and trailing whitespace is in the form of an\n             an <code>EQName</code> as defined in the XPath 3.0 grammar, that is one of the following</phrase>:</p><ulist xmlns:e=\"http://www.w3.org/1999/XSL/Spec/ElementSyntax\"><item><p>A lexical QName, which is expanded using the\n                <phrase diff=\"chg\" at=\"J\">statically known namespaces</phrase>.\n                The default namespace is not used (no prefix means no namespace).</p></item><item><p diff=\"add\" at=\"L\">A <code>URIQualifiedName</code> using the syntax <code>Q{uri}local</code>,\n             where the URI can be zero-length to indicate a name in no namespace.</p></item></ulist><p xmlns:e=\"http://www.w3.org/1999/XSL/Spec/ElementSyntax\" diff=\"add\" at=\"K\">The decimal format that is used is the decimal format\n          in the static context whose name matches <code>$decimal-format-name</code> if supplied,\n          or the default decimal format in the static context otherwise.</p><p xmlns:e=\"http://www.w3.org/1999/XSL/Spec/ElementSyntax\">The evaluation of the <function>format-number</function> function takes place in two\n             phases, an analysis phase described in <specref ref=\"analysing-picture-string\"/> and a\n             formatting phase described in <specref ref=\"formatting-the-number\"/>.</p><p xmlns:e=\"http://www.w3.org/1999/XSL/Spec/ElementSyntax\">The analysis phase takes as its inputs the <termref def=\"dt-picture-string\">picture\n                string</termref> and the variables derived from the relevant decimal format in the\n             static context, and produces as its output a number of variables with defined values.\n             The formatting phase takes as its inputs the number to be formatted and the variables\n             produced by the analysis phase, and produces as its output a string containing a\n             formatted representation of the number.</p><p xmlns:e=\"http://www.w3.org/1999/XSL/Spec/ElementSyntax\">The result of the function is the formatted string representation of the supplied\n             number.</p><p xmlns:e=\"http://www.w3.org/1999/XSL/Spec/ElementSyntax\">A <phrase diff=\"add\" at=\"L\">dynamic</phrase> error is raised <errorref class=\"DF\" code=\"1280\"/> if the name specified as the\n                <code>$decimal-format-name</code> argument is\n             <phrase diff=\"chg\" at=\"L\">neither a valid lexical QName nor a valid <code>URIQualifiedName</code></phrase>, or if it\n             uses a prefix <phrase diff=\"add\" at=\"J\">that is not found in the statically known namespaces</phrase>, or if the static\n             context does not contain a declaration of a decimal-format with a matching expanded\n             QName. If the processor is able to detect the error statically (for example, when the\n             argument is supplied as a string literal), then the processor <rfc2119>may</rfc2119>\n             optionally signal this as a static error.</p></div>\n", "summary" : "<p>  Returns a string containing a number formatted according to a given picture\n             string, taking account of decimal formats specified in the static context.</p>", "annotation_str" : "", "annotations" : [  ], "updating" : false, "parameters" : [ { "name" : "value", "type" : "numeric", "occurrence" : "?", "description" : "" }, { "name" : "picture", "type" : "xs:string", "occurrence" : null, "description" : "" }, { "name" : "decimal-format-name", "type" : "xs:string", "occurrence" : null, "description" : "" } ], "returns" : { "type" : "xs:string", "description" : "" }, "errors" : [  ] }, { "isDocumented" : true, "arity" : 2, "name" : "format-time", "qname" : "fn:format-time", "signature" : "($value as xs:time?, $picture as xs:string) as xs:string? external", "description" : " <div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"><p xmlns:e=\"http://www.w3.org/1999/XSL/Spec/ElementSyntax\">Returns a string containing an <code>xs:time</code> value formatted for display.</p><p xmlns:e=\"http://www.w3.org/1999/XSL/Spec/ElementSyntax\"><example role=\"signature\"><proto name=\"format-time\" return-type=\"xs:string?\" isOp=\"no\" prefix=\"fn\" returnEmptyOk=\"no\" returnSeq=\"no\" returnVaries=\"no\" isSchema=\"no\" isDatatype=\"no\" isSpecial=\"no\"><arg name=\"value\" type=\"xs:time?\"/><arg name=\"picture\" type=\"xs:string\"/></proto></example><example role=\"signature\"><proto name=\"format-time\" return-type=\"xs:string?\" isOp=\"no\" prefix=\"fn\" returnEmptyOk=\"no\" returnSeq=\"no\" returnVaries=\"no\" isSchema=\"no\" isDatatype=\"no\" isSpecial=\"no\"><arg name=\"value\" type=\"xs:time?\"/><arg name=\"picture\" type=\"xs:string\"/><arg name=\"language\" type=\"xs:string?\"/><arg name=\"calendar\" type=\"xs:string?\"/><arg name=\"place\" type=\"xs:string?\"/></proto></example></p><p xmlns:e=\"http://www.w3.org/1999/XSL/Spec/ElementSyntax\">The two-argument form of this function is <termref def=\"dt-deterministic\">deterministic</termref>, <termref def=\"dt-context-dependent\">context-dependent</termref>,  and <termref def=\"dt-focus-independent\">focus-independent</termref>.  It depends on\n \t\tdefault calendar, and default language, and default place, and implicit timezone.\n \t</p><p xmlns:e=\"http://www.w3.org/1999/XSL/Spec/ElementSyntax\">The five-argument form of this function is <termref def=\"dt-deterministic\">deterministic</termref>, <termref def=\"dt-context-dependent\">context-dependent</termref>,  and <termref def=\"dt-focus-independent\">focus-independent</termref>.  It depends on\n \t\timplicit timezone, and namespaces.\n \t</p><p xmlns:e=\"http://www.w3.org/1999/XSL/Spec/ElementSyntax\">See <specref ref=\"rules-for-datetime-formatting\"/>.</p></div>\n", "summary" : "<p>  Returns a string containing an  xs:time  value formatted for display.</p>", "annotation_str" : "", "annotations" : [  ], "updating" : false, "parameters" : [ { "name" : "value", "type" : "xs:time", "occurrence" : "?", "description" : "" }, { "name" : "picture", "type" : "xs:string", "occurrence" : null, "description" : "" } ], "returns" : { "type" : "xs:string?", "description" : "" }, "errors" : [  ] }, { "isDocumented" : true, "arity" : 5, "name" : "format-time", "qname" : "fn:format-time", "signature" : "($value as xs:time?, $picture as xs:string, $language as xs:string?, $calendar as xs:string?, $place as xs:string?) as xs:string? external", "description" : " <div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"><p xmlns:e=\"http://www.w3.org/1999/XSL/Spec/ElementSyntax\">Returns a string containing an <code>xs:time</code> value formatted for display.</p><p xmlns:e=\"http://www.w3.org/1999/XSL/Spec/ElementSyntax\"><example role=\"signature\"><proto name=\"format-time\" return-type=\"xs:string?\" isOp=\"no\" prefix=\"fn\" returnEmptyOk=\"no\" returnSeq=\"no\" returnVaries=\"no\" isSchema=\"no\" isDatatype=\"no\" isSpecial=\"no\"><arg name=\"value\" type=\"xs:time?\"/><arg name=\"picture\" type=\"xs:string\"/></proto></example><example role=\"signature\"><proto name=\"format-time\" return-type=\"xs:string?\" isOp=\"no\" prefix=\"fn\" returnEmptyOk=\"no\" returnSeq=\"no\" returnVaries=\"no\" isSchema=\"no\" isDatatype=\"no\" isSpecial=\"no\"><arg name=\"value\" type=\"xs:time?\"/><arg name=\"picture\" type=\"xs:string\"/><arg name=\"language\" type=\"xs:string?\"/><arg name=\"calendar\" type=\"xs:string?\"/><arg name=\"place\" type=\"xs:string?\"/></proto></example></p><p xmlns:e=\"http://www.w3.org/1999/XSL/Spec/ElementSyntax\">The two-argument form of this function is <termref def=\"dt-deterministic\">deterministic</termref>, <termref def=\"dt-context-dependent\">context-dependent</termref>,  and <termref def=\"dt-focus-independent\">focus-independent</termref>.  It depends on\n \t\tdefault calendar, and default language, and default place, and implicit timezone.\n \t</p><p xmlns:e=\"http://www.w3.org/1999/XSL/Spec/ElementSyntax\">The five-argument form of this function is <termref def=\"dt-deterministic\">deterministic</termref>, <termref def=\"dt-context-dependent\">context-dependent</termref>,  and <termref def=\"dt-focus-independent\">focus-independent</termref>.  It depends on\n \t\timplicit timezone, and namespaces.\n \t</p><p xmlns:e=\"http://www.w3.org/1999/XSL/Spec/ElementSyntax\">See <specref ref=\"rules-for-datetime-formatting\"/>.</p></div>\n", "summary" : "<p>  Returns a string containing an  xs:time  value formatted for display.</p>", "annotation_str" : "", "annotations" : [  ], "updating" : false, "parameters" : [ { "name" : "value", "type" : "xs:time", "occurrence" : "?", "description" : "" }, { "name" : "picture", "type" : "xs:string", "occurrence" : null, "description" : "" }, { "name" : "language", "type" : "xs:string", "occurrence" : "?", "description" : "" }, { "name" : "calendar", "type" : "xs:string", "occurrence" : "?", "description" : "" }, { "name" : "place", "type" : "xs:string", "occurrence" : "?", "description" : "" } ], "returns" : { "type" : "xs:string?", "description" : "" }, "errors" : [  ] }, { "isDocumented" : true, "arity" : 1, "name" : "function-arity", "qname" : "fn:function-arity", "signature" : "($func as function (*)) as xs:integer external", "description" : " <div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"><p xmlns:e=\"http://www.w3.org/1999/XSL/Spec/ElementSyntax\">Returns the arity of the function identified by a function item.</p><p xmlns:e=\"http://www.w3.org/1999/XSL/Spec/ElementSyntax\"><example role=\"signature\"><proto name=\"function-arity\" return-type=\"xs:integer\" isOp=\"no\" prefix=\"fn\" returnEmptyOk=\"no\" returnSeq=\"no\" returnVaries=\"no\" isSchema=\"no\" isDatatype=\"no\" isSpecial=\"no\"><arg name=\"func\" type=\"function(*)\"/></proto></example></p><p xmlns:e=\"http://www.w3.org/1999/XSL/Spec/ElementSyntax\">This function is <termref def=\"dt-deterministic\">deterministic</termref>, <termref def=\"dt-context-independent\">context-independent</termref>,  and <termref def=\"dt-focus-independent\">focus-independent</termref>. </p><p xmlns:e=\"http://www.w3.org/1999/XSL/Spec/ElementSyntax\">The <code>fn:function-arity</code> function returns the arity (number of arguments) of\n             the function identified by <code>$func</code>.</p><p xmlns:e=\"http://www.w3.org/1999/XSL/Spec/ElementSyntax\">The expression <code>fn:function-arity(fn:substring#2)</code> returns <code>2</code>.</p><p xmlns:e=\"http://www.w3.org/1999/XSL/Spec/ElementSyntax\">The expression <code>fn:function-arity(function($node){name($node)})</code> returns <code>1</code>.</p><p xmlns:e=\"http://www.w3.org/1999/XSL/Spec/ElementSyntax\">The expression <code>let $initial := fn:substring(?, 1, 1) return fn:function-arity($initial)</code> returns <code>1</code>.</p></div>\n", "summary" : "<p>  Returns the arity of the function identified by a function item.</p>", "annotation_str" : "", "annotations" : [  ], "updating" : false, "parameters" : [ { "name" : "func", "type" : "function (*)", "occurrence" : null, "description" : "" } ], "returns" : { "type" : "xs:integer", "description" : "" }, "errors" : [  ] }, { "isDocumented" : true, "arity" : 0, "name" : "generate-id", "qname" : "fn:generate-id", "signature" : "() as xs:string external", "description" : " <div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"><p xmlns:e=\"http://www.w3.org/1999/XSL/Spec/ElementSyntax\">This function returns a string that uniquely identifies a given node. </p><p xmlns:e=\"http://www.w3.org/1999/XSL/Spec/ElementSyntax\"><example role=\"signature\"><proto name=\"generate-id\" return-type=\"xs:string\" isOp=\"no\" prefix=\"fn\" returnEmptyOk=\"no\" returnSeq=\"no\" returnVaries=\"no\" isSchema=\"no\" isDatatype=\"no\" isSpecial=\"no\"/></example><example role=\"signature\"><proto name=\"generate-id\" return-type=\"xs:string\" isOp=\"no\" prefix=\"fn\" returnEmptyOk=\"no\" returnSeq=\"no\" returnVaries=\"no\" isSchema=\"no\" isDatatype=\"no\" isSpecial=\"no\"><arg name=\"arg\" type=\"node()?\"/></proto></example></p><p xmlns:e=\"http://www.w3.org/1999/XSL/Spec/ElementSyntax\">The zero-argument form of this function is <termref def=\"dt-deterministic\">deterministic</termref>, <termref def=\"dt-context-dependent\">context-dependent</termref>,  and <termref def=\"dt-focus-dependent\">focus-dependent</termref>. </p><p xmlns:e=\"http://www.w3.org/1999/XSL/Spec/ElementSyntax\">The one-argument form of this function is <termref def=\"dt-deterministic\">deterministic</termref>, <termref def=\"dt-context-independent\">context-independent</termref>,  and <termref def=\"dt-focus-independent\">focus-independent</termref>. </p><p xmlns:e=\"http://www.w3.org/1999/XSL/Spec/ElementSyntax\">If the argument is omitted, it defaults to the context item (<code>.</code>). The\n             behavior of the function if the argument is omitted is exactly the same as if the\n             context item had been passed as the argument.</p><p xmlns:e=\"http://www.w3.org/1999/XSL/Spec/ElementSyntax\">If the argument is the empty sequence, the result is the zero-length string.</p><p xmlns:e=\"http://www.w3.org/1999/XSL/Spec/ElementSyntax\">In other cases, the function returns a string that uniquely identifies a given node.</p><p xmlns:e=\"http://www.w3.org/1999/XSL/Spec/ElementSyntax\">The returned identifier <rfc2119>must</rfc2119> consist of ASCII alphanumeric characters\n             and <rfc2119>must</rfc2119> start with an alphabetic character. Thus, the string is\n             syntactically an XML name.</p><p xmlns:e=\"http://www.w3.org/1999/XSL/Spec/ElementSyntax\">An implementation is free to generate an identifier in any convenient way provided that\n             it always generates the same identifier for the same node and that different identifiers\n             are always generated from different nodes. An implementation is under no obligation to\n             generate the same identifiers each time a document is transformed or queried.</p><p xmlns:e=\"http://www.w3.org/1999/XSL/Spec/ElementSyntax\">The following errors may be raised when <code>$arg</code> is omitted:</p><ul xmlns:e=\"http://www.w3.org/1999/XSL/Spec/ElementSyntax\"><li><p>If the context\n                item is <xtermref ref=\"dt-absent\" spec=\"DM30\">absent</xtermref>, <phrase diff=\"add\" at=\"M\">dynamic error</phrase>\n                <xerrorref spec=\"XP\" class=\"DY\" code=\"0002\" type=\"dynamic\"/></p></li><li><p>If the context item is not a\n                node, <phrase diff=\"add\" at=\"M\">type error</phrase> <xerrorref spec=\"XP\" class=\"TY\" code=\"0004\" type=\"type\"/>.</p></li></ul></div>\n", "summary" : "<p>  This function returns a string that uniquely identifies a given node.</p>", "annotation_str" : "", "annotations" : [  ], "updating" : false, "parameters" : [  ], "returns" : { "type" : "xs:string", "description" : "" }, "errors" : [  ] }, { "isDocumented" : true, "arity" : 1, "name" : "generate-id", "qname" : "fn:generate-id", "signature" : "($arg as node()?) as xs:string external", "description" : " <div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"><p xmlns:e=\"http://www.w3.org/1999/XSL/Spec/ElementSyntax\">This function returns a string that uniquely identifies a given node. </p><p xmlns:e=\"http://www.w3.org/1999/XSL/Spec/ElementSyntax\"><example role=\"signature\"><proto name=\"generate-id\" return-type=\"xs:string\" isOp=\"no\" prefix=\"fn\" returnEmptyOk=\"no\" returnSeq=\"no\" returnVaries=\"no\" isSchema=\"no\" isDatatype=\"no\" isSpecial=\"no\"/></example><example role=\"signature\"><proto name=\"generate-id\" return-type=\"xs:string\" isOp=\"no\" prefix=\"fn\" returnEmptyOk=\"no\" returnSeq=\"no\" returnVaries=\"no\" isSchema=\"no\" isDatatype=\"no\" isSpecial=\"no\"><arg name=\"arg\" type=\"node()?\"/></proto></example></p><p xmlns:e=\"http://www.w3.org/1999/XSL/Spec/ElementSyntax\">The zero-argument form of this function is <termref def=\"dt-deterministic\">deterministic</termref>, <termref def=\"dt-context-dependent\">context-dependent</termref>,  and <termref def=\"dt-focus-dependent\">focus-dependent</termref>. </p><p xmlns:e=\"http://www.w3.org/1999/XSL/Spec/ElementSyntax\">The one-argument form of this function is <termref def=\"dt-deterministic\">deterministic</termref>, <termref def=\"dt-context-independent\">context-independent</termref>,  and <termref def=\"dt-focus-independent\">focus-independent</termref>. </p><p xmlns:e=\"http://www.w3.org/1999/XSL/Spec/ElementSyntax\">If the argument is omitted, it defaults to the context item (<code>.</code>). The\n             behavior of the function if the argument is omitted is exactly the same as if the\n             context item had been passed as the argument.</p><p xmlns:e=\"http://www.w3.org/1999/XSL/Spec/ElementSyntax\">If the argument is the empty sequence, the result is the zero-length string.</p><p xmlns:e=\"http://www.w3.org/1999/XSL/Spec/ElementSyntax\">In other cases, the function returns a string that uniquely identifies a given node.</p><p xmlns:e=\"http://www.w3.org/1999/XSL/Spec/ElementSyntax\">The returned identifier <rfc2119>must</rfc2119> consist of ASCII alphanumeric characters\n             and <rfc2119>must</rfc2119> start with an alphabetic character. Thus, the string is\n             syntactically an XML name.</p><p xmlns:e=\"http://www.w3.org/1999/XSL/Spec/ElementSyntax\">An implementation is free to generate an identifier in any convenient way provided that\n             it always generates the same identifier for the same node and that different identifiers\n             are always generated from different nodes. An implementation is under no obligation to\n             generate the same identifiers each time a document is transformed or queried.</p><p xmlns:e=\"http://www.w3.org/1999/XSL/Spec/ElementSyntax\">The following errors may be raised when <code>$arg</code> is omitted:</p><ul xmlns:e=\"http://www.w3.org/1999/XSL/Spec/ElementSyntax\"><li><p>If the context\n                item is <xtermref ref=\"dt-absent\" spec=\"DM30\">absent</xtermref>, <phrase diff=\"add\" at=\"M\">dynamic error</phrase>\n                <xerrorref spec=\"XP\" class=\"DY\" code=\"0002\" type=\"dynamic\"/></p></li><li><p>If the context item is not a\n                node, <phrase diff=\"add\" at=\"M\">type error</phrase> <xerrorref spec=\"XP\" class=\"TY\" code=\"0004\" type=\"type\"/>.</p></li></ul></div>\n", "summary" : "<p>  This function returns a string that uniquely identifies a given node.</p>", "annotation_str" : "", "annotations" : [  ], "updating" : false, "parameters" : [ { "name" : "arg", "type" : "node()", "occurrence" : "?", "description" : "" } ], "returns" : { "type" : "xs:string", "description" : "" }, "errors" : [  ] }, { "isDocumented" : true, "arity" : 0, "name" : "has-children", "qname" : "fn:has-children", "signature" : "() as xs:boolean external", "description" : " <div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"><p xmlns:e=\"http://www.w3.org/1999/XSL/Spec/ElementSyntax\">Returns true if the supplied node has one or more child nodes (of any kind).</p><p xmlns:e=\"http://www.w3.org/1999/XSL/Spec/ElementSyntax\"><example role=\"signature\"><proto name=\"has-children\" return-type=\"xs:boolean\" isOp=\"no\" prefix=\"fn\" returnEmptyOk=\"no\" returnSeq=\"no\" returnVaries=\"no\" isSchema=\"no\" isDatatype=\"no\" isSpecial=\"no\"/></example><example role=\"signature\"><proto name=\"has-children\" return-type=\"xs:boolean\" isOp=\"no\" prefix=\"fn\" returnEmptyOk=\"no\" returnSeq=\"no\" returnVaries=\"no\" isSchema=\"no\" isDatatype=\"no\" isSpecial=\"no\"><arg name=\"node\" type=\"node()?\"/></proto></example></p><p xmlns:e=\"http://www.w3.org/1999/XSL/Spec/ElementSyntax\">The zero-argument form of this function is <termref def=\"dt-deterministic\">deterministic</termref>, <termref def=\"dt-context-dependent\">context-dependent</termref>,  and <termref def=\"dt-focus-dependent\">focus-dependent</termref>. </p><p xmlns:e=\"http://www.w3.org/1999/XSL/Spec/ElementSyntax\">The one-argument form of this function is <termref def=\"dt-deterministic\">deterministic</termref>, <termref def=\"dt-context-independent\">context-independent</termref>,  and <termref def=\"dt-focus-independent\">focus-independent</termref>. </p><p xmlns:e=\"http://www.w3.org/1999/XSL/Spec/ElementSyntax\">If the argument is omitted, it defaults to the context item (<code>.</code>). The\n             behavior of the function if the argument is omitted is exactly the same as if the\n             context item had been passed as the argument.</p><p xmlns:e=\"http://www.w3.org/1999/XSL/Spec/ElementSyntax\"><phrase diff=\"add\" at=\"L\">Provided that the supplied argument <code>$node</code> matches the expected\n          type <code>node()?</code>, </phrase>the result of the function call <code>fn:has-children($node)</code> is defined to be\n             the same as the result of the expression\n             <code>fn:exists($node/child::node())</code>.</p><p xmlns:e=\"http://www.w3.org/1999/XSL/Spec/ElementSyntax\">The following errors may be raised when <code>$node</code> is omitted:</p><ul xmlns:e=\"http://www.w3.org/1999/XSL/Spec/ElementSyntax\"><li><p>If the context\n                item is <xtermref ref=\"dt-absent\" spec=\"DM30\">absent</xtermref>, <phrase diff=\"add\" at=\"M\">dynamic error</phrase>\n                <xerrorref spec=\"XP\" class=\"DY\" code=\"0002\" type=\"dynamic\"/></p></li><li><p>If the context item is not a\n                node, <phrase diff=\"add\" at=\"M\">type error</phrase> <xerrorref spec=\"XP\" class=\"TY\" code=\"0004\" type=\"type\"/>.</p></li></ul></div>\n", "summary" : "<p>  Returns true if the supplied node has one or more child nodes (of any kind).</p>", "annotation_str" : "", "annotations" : [  ], "updating" : false, "parameters" : [  ], "returns" : { "type" : "xs:boolean", "description" : "" }, "errors" : [  ] }, { "isDocumented" : true, "arity" : 1, "name" : "has-children", "qname" : "fn:has-children", "signature" : "($node as node()?) as xs:boolean external", "description" : " <div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"><p xmlns:e=\"http://www.w3.org/1999/XSL/Spec/ElementSyntax\">Returns true if the supplied node has one or more child nodes (of any kind).</p><p xmlns:e=\"http://www.w3.org/1999/XSL/Spec/ElementSyntax\"><example role=\"signature\"><proto name=\"has-children\" return-type=\"xs:boolean\" isOp=\"no\" prefix=\"fn\" returnEmptyOk=\"no\" returnSeq=\"no\" returnVaries=\"no\" isSchema=\"no\" isDatatype=\"no\" isSpecial=\"no\"/></example><example role=\"signature\"><proto name=\"has-children\" return-type=\"xs:boolean\" isOp=\"no\" prefix=\"fn\" returnEmptyOk=\"no\" returnSeq=\"no\" returnVaries=\"no\" isSchema=\"no\" isDatatype=\"no\" isSpecial=\"no\"><arg name=\"node\" type=\"node()?\"/></proto></example></p><p xmlns:e=\"http://www.w3.org/1999/XSL/Spec/ElementSyntax\">The zero-argument form of this function is <termref def=\"dt-deterministic\">deterministic</termref>, <termref def=\"dt-context-dependent\">context-dependent</termref>,  and <termref def=\"dt-focus-dependent\">focus-dependent</termref>. </p><p xmlns:e=\"http://www.w3.org/1999/XSL/Spec/ElementSyntax\">The one-argument form of this function is <termref def=\"dt-deterministic\">deterministic</termref>, <termref def=\"dt-context-independent\">context-independent</termref>,  and <termref def=\"dt-focus-independent\">focus-independent</termref>. </p><p xmlns:e=\"http://www.w3.org/1999/XSL/Spec/ElementSyntax\">If the argument is omitted, it defaults to the context item (<code>.</code>). The\n             behavior of the function if the argument is omitted is exactly the same as if the\n             context item had been passed as the argument.</p><p xmlns:e=\"http://www.w3.org/1999/XSL/Spec/ElementSyntax\"><phrase diff=\"add\" at=\"L\">Provided that the supplied argument <code>$node</code> matches the expected\n          type <code>node()?</code>, </phrase>the result of the function call <code>fn:has-children($node)</code> is defined to be\n             the same as the result of the expression\n             <code>fn:exists($node/child::node())</code>.</p><p xmlns:e=\"http://www.w3.org/1999/XSL/Spec/ElementSyntax\">The following errors may be raised when <code>$node</code> is omitted:</p><ul xmlns:e=\"http://www.w3.org/1999/XSL/Spec/ElementSyntax\"><li><p>If the context\n                item is <xtermref ref=\"dt-absent\" spec=\"DM30\">absent</xtermref>, <phrase diff=\"add\" at=\"M\">dynamic error</phrase>\n                <xerrorref spec=\"XP\" class=\"DY\" code=\"0002\" type=\"dynamic\"/></p></li><li><p>If the context item is not a\n                node, <phrase diff=\"add\" at=\"M\">type error</phrase> <xerrorref spec=\"XP\" class=\"TY\" code=\"0004\" type=\"type\"/>.</p></li></ul></div>\n", "summary" : "<p>  Returns true if the supplied node has one or more child nodes (of any kind).</p>", "annotation_str" : "", "annotations" : [  ], "updating" : false, "parameters" : [ { "name" : "node", "type" : "node()", "occurrence" : "?", "description" : "" } ], "returns" : { "type" : "xs:boolean", "description" : "" }, "errors" : [  ] }, { "isDocumented" : true, "arity" : 1, "name" : "head", "qname" : "fn:head", "signature" : "($arg as item()*) as item()? external", "description" : " <div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"><p xmlns:e=\"http://www.w3.org/1999/XSL/Spec/ElementSyntax\">Returns the first item in a sequence. </p><p xmlns:e=\"http://www.w3.org/1999/XSL/Spec/ElementSyntax\"><example role=\"signature\"><proto name=\"head\" return-type=\"item()?\" isOp=\"no\" prefix=\"fn\" returnEmptyOk=\"no\" returnSeq=\"no\" returnVaries=\"no\" isSchema=\"no\" isDatatype=\"no\" isSpecial=\"no\"><arg name=\"arg\" type=\"item()*\"/></proto></example></p><p xmlns:e=\"http://www.w3.org/1999/XSL/Spec/ElementSyntax\">This function is <termref def=\"dt-deterministic\">deterministic</termref>, <termref def=\"dt-context-independent\">context-independent</termref>,  and <termref def=\"dt-focus-independent\">focus-independent</termref>. </p><p xmlns:e=\"http://www.w3.org/1999/XSL/Spec/ElementSyntax\">The function returns the value of the expression <code>$arg[1]</code></p><p xmlns:e=\"http://www.w3.org/1999/XSL/Spec/ElementSyntax\">If <code>$arg</code> is the empty sequence, the empty sequence is returned. Otherwise\n             the first item in the sequence is returned.</p></div>\n", "summary" : "<p>  Returns the first item in a sequence.</p>", "annotation_str" : "", "annotations" : [  ], "updating" : false, "parameters" : [ { "name" : "arg", "type" : "item()", "occurrence" : "*", "description" : "" } ], "returns" : { "type" : "item()?", "description" : "" }, "errors" : [  ] }, { "isDocumented" : true, "arity" : 1, "name" : "hours-from-duration", "qname" : "fn:hours-from-duration", "signature" : "($arg as xs:duration?) as xs:integer? external", "description" : " <div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"><p xmlns:e=\"http://www.w3.org/1999/XSL/Spec/ElementSyntax\">Returns the number of hours in a duration.</p><p xmlns:e=\"http://www.w3.org/1999/XSL/Spec/ElementSyntax\"><example role=\"signature\"><proto name=\"hours-from-duration\" return-type=\"xs:integer?\" isOp=\"no\" prefix=\"fn\" returnEmptyOk=\"no\" returnSeq=\"no\" returnVaries=\"no\" isSchema=\"no\" isDatatype=\"no\" isSpecial=\"no\"><arg name=\"arg\" type=\"xs:duration?\"/></proto></example></p><p xmlns:e=\"http://www.w3.org/1999/XSL/Spec/ElementSyntax\">This function is <termref def=\"dt-deterministic\">deterministic</termref>, <termref def=\"dt-context-independent\">context-independent</termref>,  and <termref def=\"dt-focus-independent\">focus-independent</termref>. </p><p xmlns:e=\"http://www.w3.org/1999/XSL/Spec/ElementSyntax\">If <code>$arg</code> is the empty sequence, the function returns the empty sequence.</p><p xmlns:e=\"http://www.w3.org/1999/XSL/Spec/ElementSyntax\">Otherwise, the function returns an <code>xs:integer</code> representing the hours\n             component in the value of <code>$arg</code>. The result is obtained by casting\n                <code>$arg</code> to an <code>xs:dayTimeDuration</code> (see <specref ref=\"casting-to-durations\"/>) and then computing the hours component as described in\n                <specref ref=\"canonical-dayTimeDuration\"/>.</p><p xmlns:e=\"http://www.w3.org/1999/XSL/Spec/ElementSyntax\">If <code>$arg</code> is a negative duration then the result will be negative..</p><p xmlns:e=\"http://www.w3.org/1999/XSL/Spec/ElementSyntax\">If <code>$arg</code> is an <code>xs:yearMonthDuration</code> the function returns 0.</p><p xmlns:e=\"http://www.w3.org/1999/XSL/Spec/ElementSyntax\">The expression <code>fn:hours-from-duration(xs:dayTimeDuration(\"P3DT10H\"))</code> returns <code>10</code>.</p><p xmlns:e=\"http://www.w3.org/1999/XSL/Spec/ElementSyntax\">The expression <code>fn:hours-from-duration(xs:dayTimeDuration(\"P3DT12H32M12S\"))</code> returns <code>12</code>.</p><p xmlns:e=\"http://www.w3.org/1999/XSL/Spec/ElementSyntax\">The expression <code>fn:hours-from-duration(xs:dayTimeDuration(\"PT123H\"))</code> returns <code>3</code>.</p><p xmlns:e=\"http://www.w3.org/1999/XSL/Spec/ElementSyntax\">The expression <code>fn:hours-from-duration(xs:dayTimeDuration(\"-P3DT10H\"))</code> returns <code>-10</code>.</p></div>\n", "summary" : "<p>  Returns the number of hours in a duration.</p>", "annotation_str" : "", "annotations" : [  ], "updating" : false, "parameters" : [ { "name" : "arg", "type" : "xs:duration", "occurrence" : "?", "description" : "" } ], "returns" : { "type" : "xs:integer?", "description" : "" }, "errors" : [  ] }, { "isDocumented" : true, "arity" : 1, "name" : "hours-from-time", "qname" : "fn:hours-from-time", "signature" : "($arg as xs:time?) as xs:integer? external", "description" : " <div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"><p xmlns:e=\"http://www.w3.org/1999/XSL/Spec/ElementSyntax\">Returns the hours component of an <code>xs:time</code>.</p><p xmlns:e=\"http://www.w3.org/1999/XSL/Spec/ElementSyntax\"><example role=\"signature\"><proto name=\"hours-from-time\" return-type=\"xs:integer?\" isOp=\"no\" prefix=\"fn\" returnEmptyOk=\"no\" returnSeq=\"no\" returnVaries=\"no\" isSchema=\"no\" isDatatype=\"no\" isSpecial=\"no\"><arg name=\"arg\" type=\"xs:time?\"/></proto></example></p><p xmlns:e=\"http://www.w3.org/1999/XSL/Spec/ElementSyntax\">This function is <termref def=\"dt-deterministic\">deterministic</termref>, <termref def=\"dt-context-independent\">context-independent</termref>,  and <termref def=\"dt-focus-independent\">focus-independent</termref>. </p><p xmlns:e=\"http://www.w3.org/1999/XSL/Spec/ElementSyntax\">If <code>$arg</code> is the empty sequence, the function returns the empty sequence.</p><p xmlns:e=\"http://www.w3.org/1999/XSL/Spec/ElementSyntax\">Otherwise, the function returns an <code>xs:integer</code> between 0 and 23, both\n             inclusive, representing the value of the hours component in the local value of\n                <code>$arg</code>.</p><p xmlns:e=\"http://www.w3.org/1999/XSL/Spec/ElementSyntax\">Assume that the dynamic context provides an implicit timezone value of\n                   <code>-05:00</code>. </p><p xmlns:e=\"http://www.w3.org/1999/XSL/Spec/ElementSyntax\">The expression <code>fn:hours-from-time(xs:time(\"11:23:00\"))</code> returns <code>11</code>.</p><p xmlns:e=\"http://www.w3.org/1999/XSL/Spec/ElementSyntax\">The expression <code>fn:hours-from-time(xs:time(\"21:23:00\"))</code> returns <code>21</code>.</p><p xmlns:e=\"http://www.w3.org/1999/XSL/Spec/ElementSyntax\">The expression <code>fn:hours-from-time(xs:time(\"01:23:00+05:00\"))</code> returns <code>1</code>.</p><p xmlns:e=\"http://www.w3.org/1999/XSL/Spec/ElementSyntax\">The expression <code>fn:hours-from-time(fn:adjust-time-to-timezone(xs:time(\"01:23:00+05:00\"),\n                   xs:dayTimeDuration(\"PT0S\")))</code> returns <code>20</code>.</p><p xmlns:e=\"http://www.w3.org/1999/XSL/Spec/ElementSyntax\">The expression <code>fn:hours-from-time(xs:time(\"24:00:00\"))</code> returns <code>0</code>.</p></div>\n", "summary" : "<p>  Returns the hours component of an  xs:time .</p>", "annotation_str" : "", "annotations" : [  ], "updating" : false, "parameters" : [ { "name" : "arg", "type" : "xs:time", "occurrence" : "?", "description" : "" } ], "returns" : { "type" : "xs:integer?", "description" : "" }, "errors" : [  ] }, { "isDocumented" : true, "arity" : 1, "name" : "id", "qname" : "fn:id", "signature" : "($arg as xs:string*) as element(*)* external", "description" : " <div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"><p xmlns:e=\"http://www.w3.org/1999/XSL/Spec/ElementSyntax\">Returns the sequence of element nodes that have an <code>ID</code> value\n             matching the value of one or more of the <code>IDREF</code> values supplied in\n                <code>$arg</code>.</p><p xmlns:e=\"http://www.w3.org/1999/XSL/Spec/ElementSyntax\"><example role=\"signature\"><proto name=\"id\" return-type=\"element()*\" isOp=\"no\" prefix=\"fn\" returnEmptyOk=\"no\" returnSeq=\"no\" returnVaries=\"no\" isSchema=\"no\" isDatatype=\"no\" isSpecial=\"no\"><arg name=\"arg\" type=\"xs:string*\"/></proto></example><example role=\"signature\"><proto name=\"id\" return-type=\"element()*\" isOp=\"no\" prefix=\"fn\" returnEmptyOk=\"no\" returnSeq=\"no\" returnVaries=\"no\" isSchema=\"no\" isDatatype=\"no\" isSpecial=\"no\"><arg name=\"arg\" type=\"xs:string*\"/><arg name=\"node\" type=\"node()\"/></proto></example></p><p xmlns:e=\"http://www.w3.org/1999/XSL/Spec/ElementSyntax\">The one-argument form of this function is <termref def=\"dt-deterministic\">deterministic</termref>, <termref def=\"dt-context-dependent\">context-dependent</termref>,  and <termref def=\"dt-focus-dependent\">focus-dependent</termref>. </p><p xmlns:e=\"http://www.w3.org/1999/XSL/Spec/ElementSyntax\">The two-argument form of this function is <termref def=\"dt-deterministic\">deterministic</termref>, <termref def=\"dt-context-independent\">context-independent</termref>,  and <termref def=\"dt-focus-independent\">focus-independent</termref>. </p><p xmlns:e=\"http://www.w3.org/1999/XSL/Spec/ElementSyntax\">The function returns a sequence, in document order with duplicates eliminated,\n             containing every element node <code>E</code> that satisfies all the following\n             conditions:</p><olist xmlns:e=\"http://www.w3.org/1999/XSL/Spec/ElementSyntax\"><item><p>\n                   <code>E</code> is in the target document. The target document is the document\n                   containing <code>$node</code>, or the document containing the context item\n                      (<code>.</code>) if the second argument is omitted. The behavior of the\n                   function if <code>$node</code> is omitted is exactly the same as if the context\n                   item had been passed as <code>$node</code>.</p></item><item><p><code>E</code> has an <code>ID</code> value equal to one of the candidate\n                      <code>IDREF</code> values, where:</p><ulist><item><p> An element has an <code>ID</code> value equal to <code>V</code> if either\n                         or both of the following conditions are true:</p><ulist><item><p>The <code>is-id</code> property (See <xspecref spec=\"DM30\" ref=\"dm-is-id\"/>.) of the element node is true, and the typed value\n                               of the element node is equal to <code>V</code> under the rules of the\n                                  <code>eq</code> operator using the Unicode codepoint collation\n                                  (<code>http://www.w3.org/2005/xpath-functions/collation/codepoint</code>).</p></item><item><p>The element has an attribute node whose <code>is-id</code> property\n                               (See <xspecref spec=\"DM30\" ref=\"dm-is-id\"/>.) is true and whose typed\n                               value is equal to <code>V</code> under the rules of the\n                                  <code>eq</code> operator using the Unicode code point collation\n                                  (<code>http://www.w3.org/2005/xpath-functions/collation/codepoint</code>).</p></item></ulist></item><item><p> Each <code>xs:string</code> in <code>$arg</code> is parsed as if it were of\n                         type <code>IDREFS</code>, that is, each <code>xs:string</code> in\n                            <code>$arg</code> is treated as a whitespace-separated sequence of\n                         tokens, each acting as an <code>IDREF</code>. These tokens are then included\n                         in the list of candidate <code>IDREF</code>s. If any of the tokens is not a\n                         lexically valid <code>IDREF</code> (that is, if it is not lexically an\n                            <code>xs:NCName</code>), it is ignored. Formally, the candidate\n                            <code>IDREF</code> values are the strings in the sequence given by the\n                         expression:</p><eg xml:space=\"preserve\">for $s in $arg return\n     fn:tokenize(fn:normalize-space($s), ' ')[. castable as xs:IDREF]</eg></item></ulist></item><item><p>If several elements have the same <code>ID</code> value, then <code>E</code> is\n                   the one that is first in document order.</p></item></olist><p xmlns:e=\"http://www.w3.org/1999/XSL/Spec/ElementSyntax\">A <phrase diff=\"add\" at=\"L\">dynamic</phrase> error is raised <errorref class=\"DC\" code=\"0001\" type=\"dynamic\"/> if\n                <code>$node</code>, or the context item if the second argument is absent, is a node\n                in a tree whose root is not a document node.</p><p xmlns:e=\"http://www.w3.org/1999/XSL/Spec/ElementSyntax\">The following errors may be raised when <code>$node</code> is omitted:</p><ul xmlns:e=\"http://www.w3.org/1999/XSL/Spec/ElementSyntax\"><li><p>If the context\n                item is <xtermref ref=\"dt-absent\" spec=\"DM30\">absent</xtermref>, <phrase diff=\"add\" at=\"M\">dynamic error</phrase>\n                <xerrorref spec=\"XP\" class=\"DY\" code=\"0002\" type=\"dynamic\"/></p></li><li><p>If the context item is not a\n                node, <phrase diff=\"add\" at=\"M\">type error</phrase> <xerrorref spec=\"XP\" class=\"TY\" code=\"0004\" type=\"type\"/>.</p></li></ul></div>\n", "summary" : "<p>  Returns the sequence of element nodes that have an  ID  value\n             matching the value of one or more of the  IDREF  values supplied in\n                 $arg .</p>", "annotation_str" : "", "annotations" : [  ], "updating" : false, "parameters" : [ { "name" : "arg", "type" : "xs:string", "occurrence" : "*", "description" : "" } ], "returns" : { "type" : "element(*)*", "description" : "" }, "errors" : [  ] }, { "isDocumented" : true, "arity" : 2, "name" : "id", "qname" : "fn:id", "signature" : "($arg as xs:string*, $node as node()) as element(*)* external", "description" : " <div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"><p xmlns:e=\"http://www.w3.org/1999/XSL/Spec/ElementSyntax\">Returns the sequence of element nodes that have an <code>ID</code> value\n             matching the value of one or more of the <code>IDREF</code> values supplied in\n                <code>$arg</code>.</p><p xmlns:e=\"http://www.w3.org/1999/XSL/Spec/ElementSyntax\"><example role=\"signature\"><proto name=\"id\" return-type=\"element()*\" isOp=\"no\" prefix=\"fn\" returnEmptyOk=\"no\" returnSeq=\"no\" returnVaries=\"no\" isSchema=\"no\" isDatatype=\"no\" isSpecial=\"no\"><arg name=\"arg\" type=\"xs:string*\"/></proto></example><example role=\"signature\"><proto name=\"id\" return-type=\"element()*\" isOp=\"no\" prefix=\"fn\" returnEmptyOk=\"no\" returnSeq=\"no\" returnVaries=\"no\" isSchema=\"no\" isDatatype=\"no\" isSpecial=\"no\"><arg name=\"arg\" type=\"xs:string*\"/><arg name=\"node\" type=\"node()\"/></proto></example></p><p xmlns:e=\"http://www.w3.org/1999/XSL/Spec/ElementSyntax\">The one-argument form of this function is <termref def=\"dt-deterministic\">deterministic</termref>, <termref def=\"dt-context-dependent\">context-dependent</termref>,  and <termref def=\"dt-focus-dependent\">focus-dependent</termref>. </p><p xmlns:e=\"http://www.w3.org/1999/XSL/Spec/ElementSyntax\">The two-argument form of this function is <termref def=\"dt-deterministic\">deterministic</termref>, <termref def=\"dt-context-independent\">context-independent</termref>,  and <termref def=\"dt-focus-independent\">focus-independent</termref>. </p><p xmlns:e=\"http://www.w3.org/1999/XSL/Spec/ElementSyntax\">The function returns a sequence, in document order with duplicates eliminated,\n             containing every element node <code>E</code> that satisfies all the following\n             conditions:</p><olist xmlns:e=\"http://www.w3.org/1999/XSL/Spec/ElementSyntax\"><item><p>\n                   <code>E</code> is in the target document. The target document is the document\n                   containing <code>$node</code>, or the document containing the context item\n                      (<code>.</code>) if the second argument is omitted. The behavior of the\n                   function if <code>$node</code> is omitted is exactly the same as if the context\n                   item had been passed as <code>$node</code>.</p></item><item><p><code>E</code> has an <code>ID</code> value equal to one of the candidate\n                      <code>IDREF</code> values, where:</p><ulist><item><p> An element has an <code>ID</code> value equal to <code>V</code> if either\n                         or both of the following conditions are true:</p><ulist><item><p>The <code>is-id</code> property (See <xspecref spec=\"DM30\" ref=\"dm-is-id\"/>.) of the element node is true, and the typed value\n                               of the element node is equal to <code>V</code> under the rules of the\n                                  <code>eq</code> operator using the Unicode codepoint collation\n                                  (<code>http://www.w3.org/2005/xpath-functions/collation/codepoint</code>).</p></item><item><p>The element has an attribute node whose <code>is-id</code> property\n                               (See <xspecref spec=\"DM30\" ref=\"dm-is-id\"/>.) is true and whose typed\n                               value is equal to <code>V</code> under the rules of the\n                                  <code>eq</code> operator using the Unicode code point collation\n                                  (<code>http://www.w3.org/2005/xpath-functions/collation/codepoint</code>).</p></item></ulist></item><item><p> Each <code>xs:string</code> in <code>$arg</code> is parsed as if it were of\n                         type <code>IDREFS</code>, that is, each <code>xs:string</code> in\n                            <code>$arg</code> is treated as a whitespace-separated sequence of\n                         tokens, each acting as an <code>IDREF</code>. These tokens are then included\n                         in the list of candidate <code>IDREF</code>s. If any of the tokens is not a\n                         lexically valid <code>IDREF</code> (that is, if it is not lexically an\n                            <code>xs:NCName</code>), it is ignored. Formally, the candidate\n                            <code>IDREF</code> values are the strings in the sequence given by the\n                         expression:</p><eg xml:space=\"preserve\">for $s in $arg return\n     fn:tokenize(fn:normalize-space($s), ' ')[. castable as xs:IDREF]</eg></item></ulist></item><item><p>If several elements have the same <code>ID</code> value, then <code>E</code> is\n                   the one that is first in document order.</p></item></olist><p xmlns:e=\"http://www.w3.org/1999/XSL/Spec/ElementSyntax\">A <phrase diff=\"add\" at=\"L\">dynamic</phrase> error is raised <errorref class=\"DC\" code=\"0001\" type=\"dynamic\"/> if\n                <code>$node</code>, or the context item if the second argument is absent, is a node\n                in a tree whose root is not a document node.</p><p xmlns:e=\"http://www.w3.org/1999/XSL/Spec/ElementSyntax\">The following errors may be raised when <code>$node</code> is omitted:</p><ul xmlns:e=\"http://www.w3.org/1999/XSL/Spec/ElementSyntax\"><li><p>If the context\n                item is <xtermref ref=\"dt-absent\" spec=\"DM30\">absent</xtermref>, <phrase diff=\"add\" at=\"M\">dynamic error</phrase>\n                <xerrorref spec=\"XP\" class=\"DY\" code=\"0002\" type=\"dynamic\"/></p></li><li><p>If the context item is not a\n                node, <phrase diff=\"add\" at=\"M\">type error</phrase> <xerrorref spec=\"XP\" class=\"TY\" code=\"0004\" type=\"type\"/>.</p></li></ul></div>\n", "summary" : "<p>  Returns the sequence of element nodes that have an  ID  value\n             matching the value of one or more of the  IDREF  values supplied in\n                 $arg .</p>", "annotation_str" : "", "annotations" : [  ], "updating" : false, "parameters" : [ { "name" : "arg", "type" : "xs:string", "occurrence" : "*", "description" : "" }, { "name" : "node", "type" : "node()", "occurrence" : null, "description" : "" } ], "returns" : { "type" : "element(*)*", "description" : "" }, "errors" : [  ] }, { "isDocumented" : true, "arity" : 1, "name" : "idref", "qname" : "fn:idref", "signature" : "($arg as xs:string*) as node()* external", "description" : " <div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"><p xmlns:e=\"http://www.w3.org/1999/XSL/Spec/ElementSyntax\">Returns the sequence of element or attribute nodes with an <code>IDREF</code>\n             value matching the value of one or more of the <code>ID</code> values supplied in\n                <code>$arg</code>.</p><p xmlns:e=\"http://www.w3.org/1999/XSL/Spec/ElementSyntax\"><example role=\"signature\"><proto name=\"idref\" return-type=\"node()*\" isOp=\"no\" prefix=\"fn\" returnEmptyOk=\"no\" returnSeq=\"no\" returnVaries=\"no\" isSchema=\"no\" isDatatype=\"no\" isSpecial=\"no\"><arg name=\"arg\" type=\"xs:string*\"/></proto></example><example role=\"signature\"><proto name=\"idref\" return-type=\"node()*\" isOp=\"no\" prefix=\"fn\" returnEmptyOk=\"no\" returnSeq=\"no\" returnVaries=\"no\" isSchema=\"no\" isDatatype=\"no\" isSpecial=\"no\"><arg name=\"arg\" type=\"xs:string*\"/><arg name=\"node\" type=\"node()\"/></proto></example></p><p xmlns:e=\"http://www.w3.org/1999/XSL/Spec/ElementSyntax\">The one-argument form of this function is <termref def=\"dt-deterministic\">deterministic</termref>, <termref def=\"dt-context-dependent\">context-dependent</termref>,  and <termref def=\"dt-focus-dependent\">focus-dependent</termref>. </p><p xmlns:e=\"http://www.w3.org/1999/XSL/Spec/ElementSyntax\">The two-argument form of this function is <termref def=\"dt-deterministic\">deterministic</termref>, <termref def=\"dt-context-independent\">context-independent</termref>,  and <termref def=\"dt-focus-independent\">focus-independent</termref>. </p><p xmlns:e=\"http://www.w3.org/1999/XSL/Spec/ElementSyntax\"> The function returns a sequence, in document order with duplicates eliminated,\n             containing every element or attribute node <code>$N</code> that satisfies all the\n             following conditions:</p><olist xmlns:e=\"http://www.w3.org/1999/XSL/Spec/ElementSyntax\"><item><p><code>$N</code> is in the target document. The target document is the document\n                   containing <code>$node</code> or the document containing the context item\n                      (<code>.</code>) if the second argument is omitted. The behavior of the\n                   function if <code>$node</code> is omitted is exactly the same as if the context\n                   item had been passed as <code>$node</code>.</p></item><item><p><code>$N</code> has an <code>IDREF</code> value equal to one of the candidate\n                      <code>ID</code> values, where:</p><ulist><item><p>A node <code>$N</code> has an <code>IDREF</code> value equal to\n                            <code>V</code> if both of the following conditions are true:</p><ulist><item><p>The <code>is-idrefs</code> property (see <xspecref spec=\"DM30\" ref=\"dm-is-idrefs\"/>) of <code>$N</code> is <code>true</code>.</p></item><item><p>The sequence <!--Text replaced by erratum E29 change 1\"--><eg diff=\"chg\" at=\"A-E29\" xml:space=\"preserve\">fn:tokenize(fn:normalize-space(fn:string($N)), ' ')</eg>\n                               <!--End of text replaced by erratum E29--> contains a string that is\n                               equal to <code>V</code> under the rules of the <code>eq</code>\n                               operator using the Unicode code point collation\n                                  (<code>http://www.w3.org/2005/xpath-functions/collation/codepoint</code>).</p></item></ulist></item><item><p>Each <code>xs:string</code> in <code>$arg</code> is parsed as if it were of\n                         lexically of type <code>xs:ID</code>. These <code>xs:string</code>s are then\n                         included in the list of candidate <code>xs:ID</code>s. If any of the strings\n                         in <code>$arg</code> is not a lexically valid <code>xs:ID</code> (that is,\n                         if it is not lexically an <code>xs:NCName</code>), it is ignored. More\n                         formally, the candidate <code>ID</code> values are the strings in the\n                         sequence:</p><eg xml:space=\"preserve\">$arg[. castable as xs:NCName]</eg></item></ulist></item></olist><p xmlns:e=\"http://www.w3.org/1999/XSL/Spec/ElementSyntax\">A <phrase diff=\"add\" at=\"L\">dynamic</phrase> error is raised <errorref class=\"DC\" code=\"0001\" type=\"dynamic\"/> if\n                <code>$node</code>, or the context item if the second argument is omitted, is a node\n                in a tree whose root is not a document node. </p><p xmlns:e=\"http://www.w3.org/1999/XSL/Spec/ElementSyntax\">The following errors may be raised when <code>$node</code> is omitted:</p><ul xmlns:e=\"http://www.w3.org/1999/XSL/Spec/ElementSyntax\"><li><p>If the context\n                item is <xtermref ref=\"dt-absent\" spec=\"DM30\">absent</xtermref>, <phrase diff=\"add\" at=\"M\">dynamic error</phrase>\n                <xerrorref spec=\"XP\" class=\"DY\" code=\"0002\" type=\"dynamic\"/></p></li><li><p>If the context item is not a\n                node, <phrase diff=\"add\" at=\"M\">type error</phrase> <xerrorref spec=\"XP\" class=\"TY\" code=\"0004\" type=\"type\"/>.</p></li></ul></div>\n", "summary" : "<p>  Returns the sequence of element or attribute nodes with an  IDREF \n             value matching the value of one or more of the  ID  values supplied in\n                 $arg .</p>", "annotation_str" : "", "annotations" : [  ], "updating" : false, "parameters" : [ { "name" : "arg", "type" : "xs:string", "occurrence" : "*", "description" : "" } ], "returns" : { "type" : "node()*", "description" : "" }, "errors" : [  ] }, { "isDocumented" : true, "arity" : 2, "name" : "idref", "qname" : "fn:idref", "signature" : "($arg as xs:string*, $node as node()) as node()* external", "description" : " <div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"><p xmlns:e=\"http://www.w3.org/1999/XSL/Spec/ElementSyntax\">Returns the sequence of element or attribute nodes with an <code>IDREF</code>\n             value matching the value of one or more of the <code>ID</code> values supplied in\n                <code>$arg</code>.</p><p xmlns:e=\"http://www.w3.org/1999/XSL/Spec/ElementSyntax\"><example role=\"signature\"><proto name=\"idref\" return-type=\"node()*\" isOp=\"no\" prefix=\"fn\" returnEmptyOk=\"no\" returnSeq=\"no\" returnVaries=\"no\" isSchema=\"no\" isDatatype=\"no\" isSpecial=\"no\"><arg name=\"arg\" type=\"xs:string*\"/></proto></example><example role=\"signature\"><proto name=\"idref\" return-type=\"node()*\" isOp=\"no\" prefix=\"fn\" returnEmptyOk=\"no\" returnSeq=\"no\" returnVaries=\"no\" isSchema=\"no\" isDatatype=\"no\" isSpecial=\"no\"><arg name=\"arg\" type=\"xs:string*\"/><arg name=\"node\" type=\"node()\"/></proto></example></p><p xmlns:e=\"http://www.w3.org/1999/XSL/Spec/ElementSyntax\">The one-argument form of this function is <termref def=\"dt-deterministic\">deterministic</termref>, <termref def=\"dt-context-dependent\">context-dependent</termref>,  and <termref def=\"dt-focus-dependent\">focus-dependent</termref>. </p><p xmlns:e=\"http://www.w3.org/1999/XSL/Spec/ElementSyntax\">The two-argument form of this function is <termref def=\"dt-deterministic\">deterministic</termref>, <termref def=\"dt-context-independent\">context-independent</termref>,  and <termref def=\"dt-focus-independent\">focus-independent</termref>. </p><p xmlns:e=\"http://www.w3.org/1999/XSL/Spec/ElementSyntax\"> The function returns a sequence, in document order with duplicates eliminated,\n             containing every element or attribute node <code>$N</code> that satisfies all the\n             following conditions:</p><olist xmlns:e=\"http://www.w3.org/1999/XSL/Spec/ElementSyntax\"><item><p><code>$N</code> is in the target document. The target document is the document\n                   containing <code>$node</code> or the document containing the context item\n                      (<code>.</code>) if the second argument is omitted. The behavior of the\n                   function if <code>$node</code> is omitted is exactly the same as if the context\n                   item had been passed as <code>$node</code>.</p></item><item><p><code>$N</code> has an <code>IDREF</code> value equal to one of the candidate\n                      <code>ID</code> values, where:</p><ulist><item><p>A node <code>$N</code> has an <code>IDREF</code> value equal to\n                            <code>V</code> if both of the following conditions are true:</p><ulist><item><p>The <code>is-idrefs</code> property (see <xspecref spec=\"DM30\" ref=\"dm-is-idrefs\"/>) of <code>$N</code> is <code>true</code>.</p></item><item><p>The sequence <!--Text replaced by erratum E29 change 1\"--><eg diff=\"chg\" at=\"A-E29\" xml:space=\"preserve\">fn:tokenize(fn:normalize-space(fn:string($N)), ' ')</eg>\n                               <!--End of text replaced by erratum E29--> contains a string that is\n                               equal to <code>V</code> under the rules of the <code>eq</code>\n                               operator using the Unicode code point collation\n                                  (<code>http://www.w3.org/2005/xpath-functions/collation/codepoint</code>).</p></item></ulist></item><item><p>Each <code>xs:string</code> in <code>$arg</code> is parsed as if it were of\n                         lexically of type <code>xs:ID</code>. These <code>xs:string</code>s are then\n                         included in the list of candidate <code>xs:ID</code>s. If any of the strings\n                         in <code>$arg</code> is not a lexically valid <code>xs:ID</code> (that is,\n                         if it is not lexically an <code>xs:NCName</code>), it is ignored. More\n                         formally, the candidate <code>ID</code> values are the strings in the\n                         sequence:</p><eg xml:space=\"preserve\">$arg[. castable as xs:NCName]</eg></item></ulist></item></olist><p xmlns:e=\"http://www.w3.org/1999/XSL/Spec/ElementSyntax\">A <phrase diff=\"add\" at=\"L\">dynamic</phrase> error is raised <errorref class=\"DC\" code=\"0001\" type=\"dynamic\"/> if\n                <code>$node</code>, or the context item if the second argument is omitted, is a node\n                in a tree whose root is not a document node. </p><p xmlns:e=\"http://www.w3.org/1999/XSL/Spec/ElementSyntax\">The following errors may be raised when <code>$node</code> is omitted:</p><ul xmlns:e=\"http://www.w3.org/1999/XSL/Spec/ElementSyntax\"><li><p>If the context\n                item is <xtermref ref=\"dt-absent\" spec=\"DM30\">absent</xtermref>, <phrase diff=\"add\" at=\"M\">dynamic error</phrase>\n                <xerrorref spec=\"XP\" class=\"DY\" code=\"0002\" type=\"dynamic\"/></p></li><li><p>If the context item is not a\n                node, <phrase diff=\"add\" at=\"M\">type error</phrase> <xerrorref spec=\"XP\" class=\"TY\" code=\"0004\" type=\"type\"/>.</p></li></ul></div>\n", "summary" : "<p>  Returns the sequence of element or attribute nodes with an  IDREF \n             value matching the value of one or more of the  ID  values supplied in\n                 $arg .</p>", "annotation_str" : "", "annotations" : [  ], "updating" : false, "parameters" : [ { "name" : "arg", "type" : "xs:string", "occurrence" : "*", "description" : "" }, { "name" : "node", "type" : "node()", "occurrence" : null, "description" : "" } ], "returns" : { "type" : "node()*", "description" : "" }, "errors" : [  ] }, { "isDocumented" : true, "arity" : 0, "name" : "implicit-timezone", "qname" : "fn:implicit-timezone", "signature" : "() as xs:dayTimeDuration external", "description" : " <div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"><p xmlns:e=\"http://www.w3.org/1999/XSL/Spec/ElementSyntax\">Returns the value of the implicit timezone property from the dynamic context.\n          </p><p xmlns:e=\"http://www.w3.org/1999/XSL/Spec/ElementSyntax\"><example role=\"signature\"><proto name=\"implicit-timezone\" return-type=\"xs:dayTimeDuration\" isOp=\"no\" prefix=\"fn\" returnEmptyOk=\"no\" returnSeq=\"no\" returnVaries=\"no\" isSchema=\"no\" isDatatype=\"no\" isSpecial=\"no\"/></example></p><p xmlns:e=\"http://www.w3.org/1999/XSL/Spec/ElementSyntax\">This function is <termref def=\"dt-deterministic\">deterministic</termref>, <termref def=\"dt-context-dependent\">context-dependent</termref>,  and <termref def=\"dt-focus-independent\">focus-independent</termref>.  It depends on\n \t\timplicit timezone.\n \t</p><p xmlns:e=\"http://www.w3.org/1999/XSL/Spec/ElementSyntax\">Returns the value of the implicit timezone property from the dynamic context. Components\n             of the dynamic context are discussed in <xspecref spec=\"XP30\" ref=\"id-xp-evaluation-context-components\"/>.</p></div>\n", "summary" : "<p>  Returns the value of the implicit timezone property from the dynamic context.</p>", "annotation_str" : "", "annotations" : [  ], "updating" : false, "parameters" : [  ], "returns" : { "type" : "xs:dayTimeDuration", "description" : "" }, "errors" : [  ] }, { "isDocumented" : true, "arity" : 1, "name" : "in-scope-prefixes", "qname" : "fn:in-scope-prefixes", "signature" : "($element as element(*)) as xs:string* external", "description" : " <div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"><p xmlns:e=\"http://www.w3.org/1999/XSL/Spec/ElementSyntax\">Returns the prefixes of the in-scope namespaces for an element node.</p><p xmlns:e=\"http://www.w3.org/1999/XSL/Spec/ElementSyntax\"><example role=\"signature\"><proto name=\"in-scope-prefixes\" return-type=\"xs:string*\" isOp=\"no\" prefix=\"fn\" returnEmptyOk=\"no\" returnSeq=\"no\" returnVaries=\"no\" isSchema=\"no\" isDatatype=\"no\" isSpecial=\"no\"><arg name=\"element\" type=\"element()\"/></proto></example></p><p xmlns:e=\"http://www.w3.org/1999/XSL/Spec/ElementSyntax\">This function is <termref def=\"dt-deterministic\">deterministic</termref>, <termref def=\"dt-context-independent\">context-independent</termref>,  and <termref def=\"dt-focus-independent\">focus-independent</termref>. </p><p xmlns:e=\"http://www.w3.org/1999/XSL/Spec/ElementSyntax\">The function returns a sequence of strings representing the prefixes of the in-scope\n             namespaces for <code>$element</code>.</p><p xmlns:e=\"http://www.w3.org/1999/XSL/Spec/ElementSyntax\">For namespace bindings that have a prefix, the function returns the prefix as an\n                <code>xs:NCName</code>. For the default namespace, which has no prefix, it returns\n             the zero-length string. </p><p xmlns:e=\"http://www.w3.org/1999/XSL/Spec/ElementSyntax\">The result sequence contains no duplicates.</p><p xmlns:e=\"http://www.w3.org/1999/XSL/Spec/ElementSyntax\">The ordering of the result sequence is <termref def=\"implementation-dependent\">implementation-dependent</termref>.</p></div>\n", "summary" : "<p>  Returns the prefixes of the in-scope namespaces for an element node.</p>", "annotation_str" : "", "annotations" : [  ], "updating" : false, "parameters" : [ { "name" : "element", "type" : "element(*)", "occurrence" : null, "description" : "" } ], "returns" : { "type" : "xs:string*", "description" : "" }, "errors" : [  ] }, { "isDocumented" : true, "arity" : 2, "name" : "index-of", "qname" : "fn:index-of", "signature" : "($seq as xs:anyAtomicType*, $search as xs:anyAtomicType) as xs:integer* external", "description" : " <div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"><p xmlns:e=\"http://www.w3.org/1999/XSL/Spec/ElementSyntax\">Returns a sequence of positive integers giving the positions within the\n             sequence <code>$seq</code> of items that are equal to <code>$search</code>.</p><p xmlns:e=\"http://www.w3.org/1999/XSL/Spec/ElementSyntax\"><example role=\"signature\"><proto name=\"index-of\" return-type=\"xs:integer*\" isOp=\"no\" prefix=\"fn\" returnEmptyOk=\"no\" returnSeq=\"no\" returnVaries=\"no\" isSchema=\"no\" isDatatype=\"no\" isSpecial=\"no\"><arg name=\"seq\" type=\"xs:anyAtomicType*\"/><arg name=\"search\" type=\"xs:anyAtomicType\"/></proto></example><example role=\"signature\"><proto name=\"index-of\" return-type=\"xs:integer*\" isOp=\"no\" prefix=\"fn\" returnEmptyOk=\"no\" returnSeq=\"no\" returnVaries=\"no\" isSchema=\"no\" isDatatype=\"no\" isSpecial=\"no\"><arg name=\"seq\" type=\"xs:anyAtomicType*\"/><arg name=\"search\" type=\"xs:anyAtomicType\"/><arg name=\"collation\" type=\"xs:string\"/></proto></example></p><p xmlns:e=\"http://www.w3.org/1999/XSL/Spec/ElementSyntax\">The two-argument form of this function is <termref def=\"dt-deterministic\">deterministic</termref>, <termref def=\"dt-context-dependent\">context-dependent</termref>,  and <termref def=\"dt-focus-independent\">focus-independent</termref>.  It depends on\n \t\tcollations, and implicit timezone.\n \t</p><p xmlns:e=\"http://www.w3.org/1999/XSL/Spec/ElementSyntax\">The three-argument form of this function is <termref def=\"dt-deterministic\">deterministic</termref>, <termref def=\"dt-context-dependent\">context-dependent</termref>,  and <termref def=\"dt-focus-independent\">focus-independent</termref>.  It depends on\n \t\tcollations, and static base uri, and implicit timezone.\n \t</p><p xmlns:e=\"http://www.w3.org/1999/XSL/Spec/ElementSyntax\">The function returns a sequence of positive integers giving the positions within the\n             sequence <code>$seq</code> of items that are equal to <code>$search</code>.</p><p xmlns:e=\"http://www.w3.org/1999/XSL/Spec/ElementSyntax\">The collation used by this function is determined according to the rules in <specref ref=\"choosing-a-collation\"/>. This collation is used when string comparison is\n             required.</p><p xmlns:e=\"http://www.w3.org/1999/XSL/Spec/ElementSyntax\">The items in the sequence <code>$seq</code> are compared with <code>$search</code> under\n             the rules for the <code>eq</code> operator. Values of type <code>xs:untypedAtomic</code>\n             are compared as if they were of type <code>xs:string</code>. Values that cannot be\n             compared, because the <code>eq</code> operator is not defined for their types, are\n             considered to be distinct. If an item compares equal, then the position of that item in\n             the sequence <code>$seq</code> is included in the result.</p><p xmlns:e=\"http://www.w3.org/1999/XSL/Spec/ElementSyntax\">The first item in a sequence is at position 1, not position 0.</p><p xmlns:e=\"http://www.w3.org/1999/XSL/Spec/ElementSyntax\">The result sequence is in ascending numeric order.</p><p xmlns:e=\"http://www.w3.org/1999/XSL/Spec/ElementSyntax\">If the value of <code>$seq</code> is the empty sequence, or if no item in\n                <code>$seq</code> matches <code>$search</code>, then the function returns the empty\n             sequence.</p><p xmlns:e=\"http://www.w3.org/1999/XSL/Spec/ElementSyntax\" diff=\"add\" at=\"D\">No error occurs if non-comparable values are encountered. So when\n             comparing two atomic values, the effective boolean value of <code>fn:index-of($a,\n                $b)</code> is true if <code>$a</code> and <code>$b</code> are equal, false if they\n             are not equal or not comparable.</p></div>\n", "summary" : "<p>  Returns a sequence of positive integers giving the positions within the\n             sequence  $seq  of items that are equal to  $search .</p>", "annotation_str" : "", "annotations" : [  ], "updating" : false, "parameters" : [ { "name" : "seq", "type" : "xs:anyAtomicType", "occurrence" : "*", "description" : "" }, { "name" : "search", "type" : "xs:anyAtomicType", "occurrence" : null, "description" : "" } ], "returns" : { "type" : "xs:integer*", "description" : "" }, "errors" : [  ] }, { "isDocumented" : true, "arity" : 3, "name" : "index-of", "qname" : "fn:index-of", "signature" : "($seq as xs:anyAtomicType*, $search as xs:anyAtomicType, $collation as xs:string) as xs:integer* external", "description" : " <div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"><p xmlns:e=\"http://www.w3.org/1999/XSL/Spec/ElementSyntax\">Returns a sequence of positive integers giving the positions within the\n             sequence <code>$seq</code> of items that are equal to <code>$search</code>.</p><p xmlns:e=\"http://www.w3.org/1999/XSL/Spec/ElementSyntax\"><example role=\"signature\"><proto name=\"index-of\" return-type=\"xs:integer*\" isOp=\"no\" prefix=\"fn\" returnEmptyOk=\"no\" returnSeq=\"no\" returnVaries=\"no\" isSchema=\"no\" isDatatype=\"no\" isSpecial=\"no\"><arg name=\"seq\" type=\"xs:anyAtomicType*\"/><arg name=\"search\" type=\"xs:anyAtomicType\"/></proto></example><example role=\"signature\"><proto name=\"index-of\" return-type=\"xs:integer*\" isOp=\"no\" prefix=\"fn\" returnEmptyOk=\"no\" returnSeq=\"no\" returnVaries=\"no\" isSchema=\"no\" isDatatype=\"no\" isSpecial=\"no\"><arg name=\"seq\" type=\"xs:anyAtomicType*\"/><arg name=\"search\" type=\"xs:anyAtomicType\"/><arg name=\"collation\" type=\"xs:string\"/></proto></example></p><p xmlns:e=\"http://www.w3.org/1999/XSL/Spec/ElementSyntax\">The two-argument form of this function is <termref def=\"dt-deterministic\">deterministic</termref>, <termref def=\"dt-context-dependent\">context-dependent</termref>,  and <termref def=\"dt-focus-independent\">focus-independent</termref>.  It depends on\n \t\tcollations, and implicit timezone.\n \t</p><p xmlns:e=\"http://www.w3.org/1999/XSL/Spec/ElementSyntax\">The three-argument form of this function is <termref def=\"dt-deterministic\">deterministic</termref>, <termref def=\"dt-context-dependent\">context-dependent</termref>,  and <termref def=\"dt-focus-independent\">focus-independent</termref>.  It depends on\n \t\tcollations, and static base uri, and implicit timezone.\n \t</p><p xmlns:e=\"http://www.w3.org/1999/XSL/Spec/ElementSyntax\">The function returns a sequence of positive integers giving the positions within the\n             sequence <code>$seq</code> of items that are equal to <code>$search</code>.</p><p xmlns:e=\"http://www.w3.org/1999/XSL/Spec/ElementSyntax\">The collation used by this function is determined according to the rules in <specref ref=\"choosing-a-collation\"/>. This collation is used when string comparison is\n             required.</p><p xmlns:e=\"http://www.w3.org/1999/XSL/Spec/ElementSyntax\">The items in the sequence <code>$seq</code> are compared with <code>$search</code> under\n             the rules for the <code>eq</code> operator. Values of type <code>xs:untypedAtomic</code>\n             are compared as if they were of type <code>xs:string</code>. Values that cannot be\n             compared, because the <code>eq</code> operator is not defined for their types, are\n             considered to be distinct. If an item compares equal, then the position of that item in\n             the sequence <code>$seq</code> is included in the result.</p><p xmlns:e=\"http://www.w3.org/1999/XSL/Spec/ElementSyntax\">The first item in a sequence is at position 1, not position 0.</p><p xmlns:e=\"http://www.w3.org/1999/XSL/Spec/ElementSyntax\">The result sequence is in ascending numeric order.</p><p xmlns:e=\"http://www.w3.org/1999/XSL/Spec/ElementSyntax\">If the value of <code>$seq</code> is the empty sequence, or if no item in\n                <code>$seq</code> matches <code>$search</code>, then the function returns the empty\n             sequence.</p><p xmlns:e=\"http://www.w3.org/1999/XSL/Spec/ElementSyntax\" diff=\"add\" at=\"D\">No error occurs if non-comparable values are encountered. So when\n             comparing two atomic values, the effective boolean value of <code>fn:index-of($a,\n                $b)</code> is true if <code>$a</code> and <code>$b</code> are equal, false if they\n             are not equal or not comparable.</p></div>\n", "summary" : "<p>  Returns a sequence of positive integers giving the positions within the\n             sequence  $seq  of items that are equal to  $search .</p>", "annotation_str" : "", "annotations" : [  ], "updating" : false, "parameters" : [ { "name" : "seq", "type" : "xs:anyAtomicType", "occurrence" : "*", "description" : "" }, { "name" : "search", "type" : "xs:anyAtomicType", "occurrence" : null, "description" : "" }, { "name" : "collation", "type" : "xs:string", "occurrence" : null, "description" : "" } ], "returns" : { "type" : "xs:integer*", "description" : "" }, "errors" : [  ] }, { "isDocumented" : true, "arity" : 1, "name" : "innermost", "qname" : "fn:innermost", "signature" : "($nodes as node()*) as node()* external", "description" : " <div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"><p xmlns:e=\"http://www.w3.org/1999/XSL/Spec/ElementSyntax\">Returns every node within the input sequence that is not an ancestor of another member\n             of the input sequence; the nodes are returned in document order with duplicates\n             eliminated.</p><p xmlns:e=\"http://www.w3.org/1999/XSL/Spec/ElementSyntax\"><example role=\"signature\"><proto name=\"innermost\" return-type=\"node()*\" isOp=\"no\" prefix=\"fn\" returnEmptyOk=\"no\" returnSeq=\"no\" returnVaries=\"no\" isSchema=\"no\" isDatatype=\"no\" isSpecial=\"no\"><arg name=\"nodes\" type=\"node()*\"/></proto></example></p><p xmlns:e=\"http://www.w3.org/1999/XSL/Spec/ElementSyntax\">This function is <termref def=\"dt-deterministic\">deterministic</termref>, <termref def=\"dt-context-independent\">context-independent</termref>,  and <termref def=\"dt-focus-independent\">focus-independent</termref>. </p><p xmlns:e=\"http://www.w3.org/1999/XSL/Spec/ElementSyntax\">The effect of the function call <code>fn:innermost($nodes)</code> is defined to be\n             equivalent to the result of the expression <code>$nodes except\n                $nodes/ancestor::node()</code>.</p><p xmlns:e=\"http://www.w3.org/1999/XSL/Spec/ElementSyntax\">That is, the function takes as input a sequence of nodes, and returns every node within\n             the sequence that is not an ancestor of another node within the sequence; the nodes are\n             returned in document order with duplicates eliminated.</p><p xmlns:e=\"http://www.w3.org/1999/XSL/Spec/ElementSyntax\">If the source document contains nested sections represented by <code>div</code>\n                elements, the expression <code>innermost(//div)</code> returns those <code>div</code>\n                elements that do not contain further <code>div</code> elements.</p></div>\n", "summary" : "<p>  Returns every node within the input sequence that is not an ancestor of another member\n             of the input sequence; the nodes are returned in document order with duplicates\n             eliminated.</p>", "annotation_str" : "", "annotations" : [  ], "updating" : false, "parameters" : [ { "name" : "nodes", "type" : "node()", "occurrence" : "*", "description" : "" } ], "returns" : { "type" : "node()*", "description" : "" }, "errors" : [  ] }, { "isDocumented" : true, "arity" : 3, "name" : "insert-before", "qname" : "fn:insert-before", "signature" : "($target as item()*, $position as xs:integer, $inserts as item()*) as item()* external", "description" : " <div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"><p xmlns:e=\"http://www.w3.org/1999/XSL/Spec/ElementSyntax\">Returns a sequence constructed by inserting an item or a sequence of items at a\n             given position within an existing sequence.</p><p xmlns:e=\"http://www.w3.org/1999/XSL/Spec/ElementSyntax\"><example role=\"signature\"><proto name=\"insert-before\" return-type=\"item()*\" isOp=\"no\" prefix=\"fn\" returnEmptyOk=\"no\" returnSeq=\"no\" returnVaries=\"no\" isSchema=\"no\" isDatatype=\"no\" isSpecial=\"no\"><arg name=\"target\" type=\"item()*\"/><arg name=\"position\" type=\"xs:integer\"/><arg name=\"inserts\" type=\"item()*\"/></proto></example></p><p xmlns:e=\"http://www.w3.org/1999/XSL/Spec/ElementSyntax\">This function is <termref def=\"dt-deterministic\">deterministic</termref>, <termref def=\"dt-context-independent\">context-independent</termref>,  and <termref def=\"dt-focus-independent\">focus-independent</termref>. </p><p xmlns:e=\"http://www.w3.org/1999/XSL/Spec/ElementSyntax\">The value returned by the function consists of all items of <code>$target</code> whose\n             index is less than <code>$position</code>, followed by all items of\n                <code>$inserts</code>, followed by the remaining elements of <code>$target</code>, in\n             that order. </p><p xmlns:e=\"http://www.w3.org/1999/XSL/Spec/ElementSyntax\" diff=\"del\" at=\"F\">For detailed type semantics, see [Formal Semantics].</p><p xmlns:e=\"http://www.w3.org/1999/XSL/Spec/ElementSyntax\">If <code>$target</code> is the empty sequence, <code>$inserts</code> is returned. If\n                <code>$inserts</code> is the empty sequence, <code>$target</code> is returned.</p><p xmlns:e=\"http://www.w3.org/1999/XSL/Spec/ElementSyntax\">If <code>$position</code> is less than one (1), the first position, the effective value\n             of <code>$position</code> is one (1). If <code>$position</code> is greater than the\n             number of items in <code>$target</code>, then the effective value of\n                <code>$position</code> is equal to the number of items in <code>$target</code> plus\n             1. </p><p xmlns:e=\"http://www.w3.org/1999/XSL/Spec/ElementSyntax\">The value of <code>$target</code> is not affected by the sequence construction.</p></div>\n", "summary" : "<p>  Returns a sequence constructed by inserting an item or a sequence of items at a\n             given position within an existing sequence.</p>", "annotation_str" : "", "annotations" : [  ], "updating" : false, "parameters" : [ { "name" : "target", "type" : "item()", "occurrence" : "*", "description" : "" }, { "name" : "position", "type" : "xs:integer", "occurrence" : null, "description" : "" }, { "name" : "inserts", "type" : "item()", "occurrence" : "*", "description" : "" } ], "returns" : { "type" : "item()*", "description" : "" }, "errors" : [  ] }, { "isDocumented" : true, "arity" : 1, "name" : "iri-to-uri", "qname" : "fn:iri-to-uri", "signature" : "($iri as xs:string?) as xs:string external", "description" : " <div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"><p xmlns:e=\"http://www.w3.org/1999/XSL/Spec/ElementSyntax\">Converts a string containing an IRI into a URI according to the rules of\n                <bibref ref=\"rfc3987\"/>.</p><p xmlns:e=\"http://www.w3.org/1999/XSL/Spec/ElementSyntax\"><example role=\"signature\"><proto name=\"iri-to-uri\" return-type=\"xs:string\" isOp=\"no\" prefix=\"fn\" returnEmptyOk=\"no\" returnSeq=\"no\" returnVaries=\"no\" isSchema=\"no\" isDatatype=\"no\" isSpecial=\"no\"><arg name=\"iri\" type=\"xs:string?\"/></proto></example></p><p xmlns:e=\"http://www.w3.org/1999/XSL/Spec/ElementSyntax\">This function is <termref def=\"dt-deterministic\">deterministic</termref>, <termref def=\"dt-context-independent\">context-independent</termref>,  and <termref def=\"dt-focus-independent\">focus-independent</termref>. </p><p xmlns:e=\"http://www.w3.org/1999/XSL/Spec/ElementSyntax\">If <code>$iri</code> is the empty sequence, the function returns the zero-length\n             string.</p><p xmlns:e=\"http://www.w3.org/1999/XSL/Spec/ElementSyntax\">Otherwise, the function converts the value of <code>$iri</code> into a URI according to\n             the rules given in Section 3.1 of <bibref ref=\"rfc3987\"/> by percent-encoding characters\n             that are allowed in an IRI but not in a URI. If <code>$iri</code> contains a character\n             that is invalid in an IRI, such as the space character (see note below), the invalid\n             character is replaced by its percent-encoded form as described in <bibref ref=\"rfc3986\"/> before the conversion is performed.</p><p xmlns:e=\"http://www.w3.org/1999/XSL/Spec/ElementSyntax\">Since <bibref ref=\"rfc3986\"/> recommends that, for consistency, URI producers and\n             normalizers should use uppercase hexadecimal digits for all percent-encodings, this\n             function must always generate hexadecimal values using the upper-case letters A-F.</p><p xmlns:e=\"http://www.w3.org/1999/XSL/Spec/ElementSyntax\">The function is idempotent but not invertible. Both the inputs <code>My Documents</code>\n             and <code>My%20Documents</code> will be converted to the output\n                <code>My%20Documents</code>.</p><p xmlns:e=\"http://www.w3.org/1999/XSL/Spec/ElementSyntax\">This function does not check whether <code>$iri</code> is a valid IRI. It treats it as\n             an <termref def=\"string\">string</termref> and operates on the <termref def=\"character\">characters</termref> in the string.</p><p xmlns:e=\"http://www.w3.org/1999/XSL/Spec/ElementSyntax\"> The following printable ASCII characters are invalid in an IRI: \"&lt;\", \"&gt;\", <quote>\n                \" </quote> (double quote), space, \"{\", \"}\", \"|\", \"\\\", \"^\", and \"`\". Since these\n             characters should not appear in an IRI, if they do appear in <code>$iri</code> they will\n             be percent-encoded. In addition, characters outside the range x20-<phrase diff=\"chg\" at=\"A-E8\">x7E</phrase> will be percent-encoded because they are invalid in a URI. </p><p xmlns:e=\"http://www.w3.org/1999/XSL/Spec/ElementSyntax\"> Since this function does not escape the PERCENT SIGN \"%\" and this character is not\n             allowed in data within a URI, users wishing to convert character strings (such as file\n             names) that include \"%\" to a URI should manually escape \"%\" by replacing it with \"%25\".\n          </p></div>\n", "summary" : "<p>  Converts a string containing an IRI into a URI according to the rules of\n                  .</p>", "annotation_str" : "", "annotations" : [  ], "updating" : false, "parameters" : [ { "name" : "iri", "type" : "xs:string", "occurrence" : "?", "description" : "" } ], "returns" : { "type" : "xs:string", "description" : "" }, "errors" : [  ] }, { "isDocumented" : true, "arity" : 1, "name" : "lang", "qname" : "fn:lang", "signature" : "($testlang as xs:string?) as xs:boolean external", "description" : " <div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"><p xmlns:e=\"http://www.w3.org/1999/XSL/Spec/ElementSyntax\">This function tests whether the language of <code>$node</code>, or the context\n             item if the second argument is omitted, as specified by <code>xml:lang</code> attributes\n             is the same as, or is a sublanguage of, the language specified by\n             <code>$testlang</code>.</p><p xmlns:e=\"http://www.w3.org/1999/XSL/Spec/ElementSyntax\"><example role=\"signature\"><proto name=\"lang\" return-type=\"xs:boolean\" isOp=\"no\" prefix=\"fn\" returnEmptyOk=\"no\" returnSeq=\"no\" returnVaries=\"no\" isSchema=\"no\" isDatatype=\"no\" isSpecial=\"no\"><arg name=\"testlang\" type=\"xs:string?\"/></proto></example><example role=\"signature\"><proto name=\"lang\" return-type=\"xs:boolean\" isOp=\"no\" prefix=\"fn\" returnEmptyOk=\"no\" returnSeq=\"no\" returnVaries=\"no\" isSchema=\"no\" isDatatype=\"no\" isSpecial=\"no\"><arg name=\"testlang\" type=\"xs:string?\"/><arg name=\"node\" type=\"node()\"/></proto></example></p><p xmlns:e=\"http://www.w3.org/1999/XSL/Spec/ElementSyntax\">The one-argument form of this function is <termref def=\"dt-deterministic\">deterministic</termref>, <termref def=\"dt-context-dependent\">context-dependent</termref>,  and <termref def=\"dt-focus-dependent\">focus-dependent</termref>. </p><p xmlns:e=\"http://www.w3.org/1999/XSL/Spec/ElementSyntax\">The two-argument form of this function is <termref def=\"dt-deterministic\">deterministic</termref>, <termref def=\"dt-context-independent\">context-independent</termref>,  and <termref def=\"dt-focus-independent\">focus-independent</termref>. </p><p xmlns:e=\"http://www.w3.org/1999/XSL/Spec/ElementSyntax\">The behavior of the function if the second argument is omitted is exactly the same as if\n             the context item (<code>.</code>) had been passed as the second argument.</p><p xmlns:e=\"http://www.w3.org/1999/XSL/Spec/ElementSyntax\">The language of the argument <code>$node</code>, or the context item if the second\n             argument is omitted, is determined by the value of the <code>xml:lang</code> attribute\n             on the node, or, if the node has no such attribute, by the value of the\n                <code>xml:lang</code> attribute on the nearest ancestor of the node that has an\n                <code>xml:lang</code> attribute. If there is no such ancestor, then the function\n             returns <code>false</code>. </p><p xmlns:e=\"http://www.w3.org/1999/XSL/Spec/ElementSyntax\">If <code>$testlang</code> is the empty sequence it is interpreted as the zero-length\n             string.</p><p xmlns:e=\"http://www.w3.org/1999/XSL/Spec/ElementSyntax\">The relevant <code>xml:lang</code> attribute is determined by the value of the XPath\n             expression:</p><eg xmlns:e=\"http://www.w3.org/1999/XSL/Spec/ElementSyntax\" xml:space=\"preserve\">(ancestor-or-self::*/@xml:lang)[last()]</eg><p xmlns:e=\"http://www.w3.org/1999/XSL/Spec/ElementSyntax\">If this expression returns an empty sequence, the function returns <code>false</code>. </p><p xmlns:e=\"http://www.w3.org/1999/XSL/Spec/ElementSyntax\">Otherwise, the function returns <code>true</code> if and only if, based on a caseless\n             default match as specified in section 3.13 of <bibref ref=\"Unicode\"/>, either:</p><olist xmlns:e=\"http://www.w3.org/1999/XSL/Spec/ElementSyntax\"><item><p diff=\"chg\" at=\"A-E16\">\n                   <code>$testlang</code> is equal to the string-value of the relevant\n                      <code>xml:lang</code> attribute, or</p></item><item><p diff=\"chg\" at=\"A-E16\">\n                   <code>$testlang</code> is equal to some substring of the string-value of the\n                   relevant <code>xml:lang</code> attribute that starts at the start of the\n                   string-value and ends immediately before a hyphen, \"-\" (the character \"-\" is\n                   HYPHEN-MINUS, #x002D).</p></item></olist><p xmlns:e=\"http://www.w3.org/1999/XSL/Spec/ElementSyntax\">The following errors may be raised when <code>$arg</code> is omitted:</p><ul xmlns:e=\"http://www.w3.org/1999/XSL/Spec/ElementSyntax\"><li><p>If the context\n                item is <xtermref ref=\"dt-absent\" spec=\"DM30\">absent</xtermref>, <phrase diff=\"add\" at=\"M\">dynamic error</phrase>\n                <xerrorref spec=\"XP\" class=\"DY\" code=\"0002\" type=\"dynamic\"/></p></li><li><p>If the context item is not a\n                node, <phrase diff=\"add\" at=\"M\">type error</phrase> <xerrorref spec=\"XP\" class=\"TY\" code=\"0004\" type=\"type\"/>.</p></li></ul></div>\n", "summary" : "<p>  This function tests whether the language of  $node , or the context\n             item if the second argument is omitted, as specified by  xml:lang  attributes\n             is the same as, or is a sublanguage of, the language specified by\n              $testlang .</p>", "annotation_str" : "", "annotations" : [  ], "updating" : false, "parameters" : [ { "name" : "testlang", "type" : "xs:string", "occurrence" : "?", "description" : "" } ], "returns" : { "type" : "xs:boolean", "description" : "" }, "errors" : [  ] }, { "isDocumented" : true, "arity" : 2, "name" : "lang", "qname" : "fn:lang", "signature" : "($testlang as xs:string?, $node as node()) as xs:boolean external", "description" : " <div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"><p xmlns:e=\"http://www.w3.org/1999/XSL/Spec/ElementSyntax\">This function tests whether the language of <code>$node</code>, or the context\n             item if the second argument is omitted, as specified by <code>xml:lang</code> attributes\n             is the same as, or is a sublanguage of, the language specified by\n             <code>$testlang</code>.</p><p xmlns:e=\"http://www.w3.org/1999/XSL/Spec/ElementSyntax\"><example role=\"signature\"><proto name=\"lang\" return-type=\"xs:boolean\" isOp=\"no\" prefix=\"fn\" returnEmptyOk=\"no\" returnSeq=\"no\" returnVaries=\"no\" isSchema=\"no\" isDatatype=\"no\" isSpecial=\"no\"><arg name=\"testlang\" type=\"xs:string?\"/></proto></example><example role=\"signature\"><proto name=\"lang\" return-type=\"xs:boolean\" isOp=\"no\" prefix=\"fn\" returnEmptyOk=\"no\" returnSeq=\"no\" returnVaries=\"no\" isSchema=\"no\" isDatatype=\"no\" isSpecial=\"no\"><arg name=\"testlang\" type=\"xs:string?\"/><arg name=\"node\" type=\"node()\"/></proto></example></p><p xmlns:e=\"http://www.w3.org/1999/XSL/Spec/ElementSyntax\">The one-argument form of this function is <termref def=\"dt-deterministic\">deterministic</termref>, <termref def=\"dt-context-dependent\">context-dependent</termref>,  and <termref def=\"dt-focus-dependent\">focus-dependent</termref>. </p><p xmlns:e=\"http://www.w3.org/1999/XSL/Spec/ElementSyntax\">The two-argument form of this function is <termref def=\"dt-deterministic\">deterministic</termref>, <termref def=\"dt-context-independent\">context-independent</termref>,  and <termref def=\"dt-focus-independent\">focus-independent</termref>. </p><p xmlns:e=\"http://www.w3.org/1999/XSL/Spec/ElementSyntax\">The behavior of the function if the second argument is omitted is exactly the same as if\n             the context item (<code>.</code>) had been passed as the second argument.</p><p xmlns:e=\"http://www.w3.org/1999/XSL/Spec/ElementSyntax\">The language of the argument <code>$node</code>, or the context item if the second\n             argument is omitted, is determined by the value of the <code>xml:lang</code> attribute\n             on the node, or, if the node has no such attribute, by the value of the\n                <code>xml:lang</code> attribute on the nearest ancestor of the node that has an\n                <code>xml:lang</code> attribute. If there is no such ancestor, then the function\n             returns <code>false</code>. </p><p xmlns:e=\"http://www.w3.org/1999/XSL/Spec/ElementSyntax\">If <code>$testlang</code> is the empty sequence it is interpreted as the zero-length\n             string.</p><p xmlns:e=\"http://www.w3.org/1999/XSL/Spec/ElementSyntax\">The relevant <code>xml:lang</code> attribute is determined by the value of the XPath\n             expression:</p><eg xmlns:e=\"http://www.w3.org/1999/XSL/Spec/ElementSyntax\" xml:space=\"preserve\">(ancestor-or-self::*/@xml:lang)[last()]</eg><p xmlns:e=\"http://www.w3.org/1999/XSL/Spec/ElementSyntax\">If this expression returns an empty sequence, the function returns <code>false</code>. </p><p xmlns:e=\"http://www.w3.org/1999/XSL/Spec/ElementSyntax\">Otherwise, the function returns <code>true</code> if and only if, based on a caseless\n             default match as specified in section 3.13 of <bibref ref=\"Unicode\"/>, either:</p><olist xmlns:e=\"http://www.w3.org/1999/XSL/Spec/ElementSyntax\"><item><p diff=\"chg\" at=\"A-E16\">\n                   <code>$testlang</code> is equal to the string-value of the relevant\n                      <code>xml:lang</code> attribute, or</p></item><item><p diff=\"chg\" at=\"A-E16\">\n                   <code>$testlang</code> is equal to some substring of the string-value of the\n                   relevant <code>xml:lang</code> attribute that starts at the start of the\n                   string-value and ends immediately before a hyphen, \"-\" (the character \"-\" is\n                   HYPHEN-MINUS, #x002D).</p></item></olist><p xmlns:e=\"http://www.w3.org/1999/XSL/Spec/ElementSyntax\">The following errors may be raised when <code>$arg</code> is omitted:</p><ul xmlns:e=\"http://www.w3.org/1999/XSL/Spec/ElementSyntax\"><li><p>If the context\n                item is <xtermref ref=\"dt-absent\" spec=\"DM30\">absent</xtermref>, <phrase diff=\"add\" at=\"M\">dynamic error</phrase>\n                <xerrorref spec=\"XP\" class=\"DY\" code=\"0002\" type=\"dynamic\"/></p></li><li><p>If the context item is not a\n                node, <phrase diff=\"add\" at=\"M\">type error</phrase> <xerrorref spec=\"XP\" class=\"TY\" code=\"0004\" type=\"type\"/>.</p></li></ul></div>\n", "summary" : "<p>  This function tests whether the language of  $node , or the context\n             item if the second argument is omitted, as specified by  xml:lang  attributes\n             is the same as, or is a sublanguage of, the language specified by\n              $testlang .</p>", "annotation_str" : "", "annotations" : [  ], "updating" : false, "parameters" : [ { "name" : "testlang", "type" : "xs:string", "occurrence" : "?", "description" : "" }, { "name" : "node", "type" : "node()", "occurrence" : null, "description" : "" } ], "returns" : { "type" : "xs:boolean", "description" : "" }, "errors" : [  ] }, { "isDocumented" : true, "arity" : 0, "name" : "last", "qname" : "fn:last", "signature" : "() as xs:integer external", "description" : " <div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"><p xmlns:e=\"http://www.w3.org/1999/XSL/Spec/ElementSyntax\">Returns the context size from the dynamic context.</p><p xmlns:e=\"http://www.w3.org/1999/XSL/Spec/ElementSyntax\"><example role=\"signature\"><proto name=\"last\" return-type=\"xs:integer\" isOp=\"no\" prefix=\"fn\" returnEmptyOk=\"no\" returnSeq=\"no\" returnVaries=\"no\" isSchema=\"no\" isDatatype=\"no\" isSpecial=\"no\"/></example></p><p xmlns:e=\"http://www.w3.org/1999/XSL/Spec/ElementSyntax\">This function is <termref def=\"dt-deterministic\">deterministic</termref>, <termref def=\"dt-context-dependent\">context-dependent</termref>,  and <termref def=\"dt-focus-dependent\">focus-dependent</termref>. </p><p xmlns:e=\"http://www.w3.org/1999/XSL/Spec/ElementSyntax\">Returns the context size from the dynamic context. (See <xspecref spec=\"XP30\" ref=\"id-xp-evaluation-context-components\"/>.)</p><p xmlns:e=\"http://www.w3.org/1999/XSL/Spec/ElementSyntax\">A <phrase diff=\"add\" at=\"M\">dynamic</phrase> error is raised <xerrorref spec=\"XP\" class=\"DY\" code=\"0002\" type=\"type\"/> if the\n             context item is <xtermref ref=\"dt-absent\" spec=\"DM30\">absent</xtermref>.</p></div>\n", "summary" : "<p>  Returns the context size from the dynamic context.</p>", "annotation_str" : "", "annotations" : [  ], "updating" : false, "parameters" : [  ], "returns" : { "type" : "xs:integer", "description" : "" }, "errors" : [  ] }, { "isDocumented" : true, "arity" : 1, "name" : "local-name-from-QName", "qname" : "fn:local-name-from-QName", "signature" : "($arg as xs:QName?) as xs:NCName? external", "description" : " <div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"><p xmlns:e=\"http://www.w3.org/1999/XSL/Spec/ElementSyntax\">Returns the local part of the supplied QName.</p><p xmlns:e=\"http://www.w3.org/1999/XSL/Spec/ElementSyntax\"><example role=\"signature\"><proto name=\"local-name-from-QName\" return-type=\"xs:NCName?\" isOp=\"no\" prefix=\"fn\" returnEmptyOk=\"no\" returnSeq=\"no\" returnVaries=\"no\" isSchema=\"no\" isDatatype=\"no\" isSpecial=\"no\"><arg name=\"arg\" type=\"xs:QName?\"/></proto></example></p><p xmlns:e=\"http://www.w3.org/1999/XSL/Spec/ElementSyntax\">This function is <termref def=\"dt-deterministic\">deterministic</termref>, <termref def=\"dt-context-independent\">context-independent</termref>,  and <termref def=\"dt-focus-independent\">focus-independent</termref>. </p><p xmlns:e=\"http://www.w3.org/1999/XSL/Spec/ElementSyntax\">If <code>$arg</code> is the empty sequence the function returns the empty sequence.</p><p xmlns:e=\"http://www.w3.org/1999/XSL/Spec/ElementSyntax\">Otherwise, the function returns an <code>xs:NCName</code> representing the local part of\n                <code>$arg</code>.</p><p xmlns:e=\"http://www.w3.org/1999/XSL/Spec/ElementSyntax\">The expression <code>fn:local-name-from-QName(fn:QName(\"http://www.example.com/example\",\n                   \"person\"))</code> returns <code>\"person\"</code>.</p></div>\n", "summary" : "<p>  Returns the local part of the supplied QName.</p>", "annotation_str" : "", "annotations" : [  ], "updating" : false, "parameters" : [ { "name" : "arg", "type" : "xs:QName", "occurrence" : "?", "description" : "" } ], "returns" : { "type" : "xs:NCName?", "description" : "" }, "errors" : [  ] }, { "isDocumented" : true, "arity" : 0, "name" : "local-name", "qname" : "fn:local-name", "signature" : "() as xs:string external", "description" : " <div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"><p xmlns:e=\"http://www.w3.org/1999/XSL/Spec/ElementSyntax\">Returns the local part of the name of <code>$arg</code> as an\n                <code>xs:string</code> that is either the zero-length string, or has the lexical form\n             of an <code>xs:NCName</code>.</p><p xmlns:e=\"http://www.w3.org/1999/XSL/Spec/ElementSyntax\"><example role=\"signature\"><proto name=\"local-name\" return-type=\"xs:string\" isOp=\"no\" prefix=\"fn\" returnEmptyOk=\"no\" returnSeq=\"no\" returnVaries=\"no\" isSchema=\"no\" isDatatype=\"no\" isSpecial=\"no\"/></example><example role=\"signature\"><proto name=\"local-name\" return-type=\"xs:string\" isOp=\"no\" prefix=\"fn\" returnEmptyOk=\"no\" returnSeq=\"no\" returnVaries=\"no\" isSchema=\"no\" isDatatype=\"no\" isSpecial=\"no\"><arg name=\"arg\" type=\"node()?\"/></proto></example></p><p xmlns:e=\"http://www.w3.org/1999/XSL/Spec/ElementSyntax\">The zero-argument form of this function is <termref def=\"dt-deterministic\">deterministic</termref>, <termref def=\"dt-context-dependent\">context-dependent</termref>,  and <termref def=\"dt-focus-dependent\">focus-dependent</termref>. </p><p xmlns:e=\"http://www.w3.org/1999/XSL/Spec/ElementSyntax\">The one-argument form of this function is <termref def=\"dt-deterministic\">deterministic</termref>, <termref def=\"dt-context-independent\">context-independent</termref>,  and <termref def=\"dt-focus-independent\">focus-independent</termref>. </p><p xmlns:e=\"http://www.w3.org/1999/XSL/Spec/ElementSyntax\">If the argument is omitted, it defaults to the context item (<code>.</code>). The\n             behavior of the function if the argument is omitted is exactly the same as if the\n             context item had been passed as the argument.</p><p xmlns:e=\"http://www.w3.org/1999/XSL/Spec/ElementSyntax\">If the argument is supplied and is the empty sequence, the function returns the\n             zero-length string.</p><p xmlns:e=\"http://www.w3.org/1999/XSL/Spec/ElementSyntax\">If the node identified by <code>$arg</code> has no name (that is, if it is a document\n             node, a comment, a text node, or a namespace node having no name), the function returns\n             the zero-length string.</p><p xmlns:e=\"http://www.w3.org/1999/XSL/Spec/ElementSyntax\">Otherwise, the function returns the local part of the expanded-QName of the node\n             identified by <code>$arg</code>, as determined by the <code>dm:node-name</code> accessor\n             defined in <xspecref spec=\"DM30\" ref=\"dm-node-name\"/>). This will be an\n                <code>xs:string</code> whose lexical form is an <code>xs:NCName</code>.</p><p xmlns:e=\"http://www.w3.org/1999/XSL/Spec/ElementSyntax\">The following errors may be raised when <code>$arg</code> is omitted:</p><ul xmlns:e=\"http://www.w3.org/1999/XSL/Spec/ElementSyntax\"><li><p>If the context\n                item is <xtermref ref=\"dt-absent\" spec=\"DM30\">absent</xtermref>, <phrase diff=\"add\" at=\"M\">dynamic error</phrase>\n                <xerrorref spec=\"XP\" class=\"DY\" code=\"0002\" type=\"dynamic\"/></p></li><li><p>If the context item is not a\n                node, <phrase diff=\"add\" at=\"M\">type error</phrase> <xerrorref spec=\"XP\" class=\"TY\" code=\"0004\" type=\"type\"/>.</p></li></ul></div>\n", "summary" : "<p>  Returns the local part of the name of  $arg  as an\n                 xs:string  that is either the zero-length string, or has the lexical form\n             of an  xs:NCName .</p>", "annotation_str" : "", "annotations" : [  ], "updating" : false, "parameters" : [  ], "returns" : { "type" : "xs:string", "description" : "" }, "errors" : [  ] }, { "isDocumented" : true, "arity" : 1, "name" : "local-name", "qname" : "fn:local-name", "signature" : "($arg as node()?) as xs:string external", "description" : " <div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"><p xmlns:e=\"http://www.w3.org/1999/XSL/Spec/ElementSyntax\">Returns the local part of the name of <code>$arg</code> as an\n                <code>xs:string</code> that is either the zero-length string, or has the lexical form\n             of an <code>xs:NCName</code>.</p><p xmlns:e=\"http://www.w3.org/1999/XSL/Spec/ElementSyntax\"><example role=\"signature\"><proto name=\"local-name\" return-type=\"xs:string\" isOp=\"no\" prefix=\"fn\" returnEmptyOk=\"no\" returnSeq=\"no\" returnVaries=\"no\" isSchema=\"no\" isDatatype=\"no\" isSpecial=\"no\"/></example><example role=\"signature\"><proto name=\"local-name\" return-type=\"xs:string\" isOp=\"no\" prefix=\"fn\" returnEmptyOk=\"no\" returnSeq=\"no\" returnVaries=\"no\" isSchema=\"no\" isDatatype=\"no\" isSpecial=\"no\"><arg name=\"arg\" type=\"node()?\"/></proto></example></p><p xmlns:e=\"http://www.w3.org/1999/XSL/Spec/ElementSyntax\">The zero-argument form of this function is <termref def=\"dt-deterministic\">deterministic</termref>, <termref def=\"dt-context-dependent\">context-dependent</termref>,  and <termref def=\"dt-focus-dependent\">focus-dependent</termref>. </p><p xmlns:e=\"http://www.w3.org/1999/XSL/Spec/ElementSyntax\">The one-argument form of this function is <termref def=\"dt-deterministic\">deterministic</termref>, <termref def=\"dt-context-independent\">context-independent</termref>,  and <termref def=\"dt-focus-independent\">focus-independent</termref>. </p><p xmlns:e=\"http://www.w3.org/1999/XSL/Spec/ElementSyntax\">If the argument is omitted, it defaults to the context item (<code>.</code>). The\n             behavior of the function if the argument is omitted is exactly the same as if the\n             context item had been passed as the argument.</p><p xmlns:e=\"http://www.w3.org/1999/XSL/Spec/ElementSyntax\">If the argument is supplied and is the empty sequence, the function returns the\n             zero-length string.</p><p xmlns:e=\"http://www.w3.org/1999/XSL/Spec/ElementSyntax\">If the node identified by <code>$arg</code> has no name (that is, if it is a document\n             node, a comment, a text node, or a namespace node having no name), the function returns\n             the zero-length string.</p><p xmlns:e=\"http://www.w3.org/1999/XSL/Spec/ElementSyntax\">Otherwise, the function returns the local part of the expanded-QName of the node\n             identified by <code>$arg</code>, as determined by the <code>dm:node-name</code> accessor\n             defined in <xspecref spec=\"DM30\" ref=\"dm-node-name\"/>). This will be an\n                <code>xs:string</code> whose lexical form is an <code>xs:NCName</code>.</p><p xmlns:e=\"http://www.w3.org/1999/XSL/Spec/ElementSyntax\">The following errors may be raised when <code>$arg</code> is omitted:</p><ul xmlns:e=\"http://www.w3.org/1999/XSL/Spec/ElementSyntax\"><li><p>If the context\n                item is <xtermref ref=\"dt-absent\" spec=\"DM30\">absent</xtermref>, <phrase diff=\"add\" at=\"M\">dynamic error</phrase>\n                <xerrorref spec=\"XP\" class=\"DY\" code=\"0002\" type=\"dynamic\"/></p></li><li><p>If the context item is not a\n                node, <phrase diff=\"add\" at=\"M\">type error</phrase> <xerrorref spec=\"XP\" class=\"TY\" code=\"0004\" type=\"type\"/>.</p></li></ul></div>\n", "summary" : "<p>  Returns the local part of the name of  $arg  as an\n                 xs:string  that is either the zero-length string, or has the lexical form\n             of an  xs:NCName .</p>", "annotation_str" : "", "annotations" : [  ], "updating" : false, "parameters" : [ { "name" : "arg", "type" : "node()", "occurrence" : "?", "description" : "" } ], "returns" : { "type" : "xs:string", "description" : "" }, "errors" : [  ] }, { "isDocumented" : true, "arity" : 1, "name" : "lower-case", "qname" : "fn:lower-case", "signature" : "($arg as xs:string?) as xs:string external", "description" : " <div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"><p xmlns:e=\"http://www.w3.org/1999/XSL/Spec/ElementSyntax\">Converts a string to lower case.</p><p xmlns:e=\"http://www.w3.org/1999/XSL/Spec/ElementSyntax\"><example role=\"signature\"><proto name=\"lower-case\" return-type=\"xs:string\" isOp=\"no\" prefix=\"fn\" returnEmptyOk=\"no\" returnSeq=\"no\" returnVaries=\"no\" isSchema=\"no\" isDatatype=\"no\" isSpecial=\"no\"><arg name=\"arg\" type=\"xs:string?\"/></proto></example></p><p xmlns:e=\"http://www.w3.org/1999/XSL/Spec/ElementSyntax\">This function is <termref def=\"dt-deterministic\">deterministic</termref>, <termref def=\"dt-context-independent\">context-independent</termref>,  and <termref def=\"dt-focus-independent\">focus-independent</termref>. </p><p xmlns:e=\"http://www.w3.org/1999/XSL/Spec/ElementSyntax\">If the value of <code>$arg</code> is the empty sequence, the zero-length string is\n             returned.</p><p xmlns:e=\"http://www.w3.org/1999/XSL/Spec/ElementSyntax\">Otherwise, the function returns the value of <code>$arg</code> after translating every\n                <termref def=\"character\">character</termref> to its lower-case correspondent as\n             defined in the appropriate case mappings section in the Unicode standard <bibref ref=\"Unicode\"/>. For versions of Unicode beginning with the 2.1.8 update, only\n             locale-insensitive case mappings should be applied. Beginning with version 3.2.0 (and\n             likely future versions) of Unicode, precise mappings are described in default case\n             operations, which are full case mappings in the absence of tailoring for particular\n             languages and environments. Every upper-case character that does not have a lower-case\n             correspondent, as well as every lower-case character, is included in the returned value\n             in its original form. </p><p xmlns:e=\"http://www.w3.org/1999/XSL/Spec/ElementSyntax\">Case mappings may change the length of a string. In general, the\n                <code>fn:upper-case</code> and <code>fn:lower-case</code> functions are not inverses\n             of each other: <code>fn:lower-case(fn:upper-case($arg))</code> is not guaranteed to\n             return <code>$arg</code>, nor is <code>fn:upper-case(fn:lower-case($arg))</code>. The\n             Latin small letter dotless i (as used in Turkish) is perhaps the most prominent\n             lower-case letter which will not round-trip. The Latin capital letter i with dot above\n             is the most prominent upper-case letter which will not round trip; there are others,\n             such as Latin capital letter Sharp S (#1E9E) which is introduced in Unicode 5.1.</p><p xmlns:e=\"http://www.w3.org/1999/XSL/Spec/ElementSyntax\"> These functions may not always be linguistically appropriate (e.g. Turkish i without\n             dot) or appropriate for the application (e.g. titlecase). In cases such as Turkish, a\n             simple translation should be used first.</p><p xmlns:e=\"http://www.w3.org/1999/XSL/Spec/ElementSyntax\"> Because the function is not sensitive to locale, results will not always match user\n             expectations. In Quebec, for example, the standard uppercase equivalent of \"è\" is \"È\",\n             while in metropolitan France it is more commonly \"E\"; only one of these is supported by\n             the functions as defined.</p><p xmlns:e=\"http://www.w3.org/1999/XSL/Spec/ElementSyntax\"> Many characters of class Ll lack uppercase equivalents in the Unicode case mapping\n             tables; many characters of class Lu lack lowercase equivalents.</p></div>\n", "summary" : "<p>  Converts a string to lower case.</p>", "annotation_str" : "", "annotations" : [  ], "updating" : false, "parameters" : [ { "name" : "arg", "type" : "xs:string", "occurrence" : "?", "description" : "" } ], "returns" : { "type" : "xs:string", "description" : "" }, "errors" : [  ] }, { "isDocumented" : true, "arity" : 2, "name" : "matches", "qname" : "fn:matches", "signature" : "($input as xs:string?, $pattern as xs:string) as xs:boolean external", "description" : " <div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"><p xmlns:e=\"http://www.w3.org/1999/XSL/Spec/ElementSyntax\">Returns true if the supplied string matches a given regular expression.</p><p xmlns:e=\"http://www.w3.org/1999/XSL/Spec/ElementSyntax\"><example role=\"signature\"><proto name=\"matches\" return-type=\"xs:boolean\" isOp=\"no\" prefix=\"fn\" returnEmptyOk=\"no\" returnSeq=\"no\" returnVaries=\"no\" isSchema=\"no\" isDatatype=\"no\" isSpecial=\"no\"><arg name=\"input\" type=\"xs:string?\"/><arg name=\"pattern\" type=\"xs:string\"/></proto></example><example role=\"signature\"><proto name=\"matches\" return-type=\"xs:boolean\" isOp=\"no\" prefix=\"fn\" returnEmptyOk=\"no\" returnSeq=\"no\" returnVaries=\"no\" isSchema=\"no\" isDatatype=\"no\" isSpecial=\"no\"><arg name=\"input\" type=\"xs:string?\"/><arg name=\"pattern\" type=\"xs:string\"/><arg name=\"flags\" type=\"xs:string\"/></proto></example></p><p xmlns:e=\"http://www.w3.org/1999/XSL/Spec/ElementSyntax\">This function is <termref def=\"dt-deterministic\">deterministic</termref>, <termref def=\"dt-context-independent\">context-independent</termref>,  and <termref def=\"dt-focus-independent\">focus-independent</termref>. </p><p xmlns:e=\"http://www.w3.org/1999/XSL/Spec/ElementSyntax\">The effect of calling the first version of this function (omitting the argument\n                <code>$flags</code>) is the same as the effect of calling the second version with the\n                <code>$flags</code> argument set to a zero-length string. Flags are defined in\n                <specref ref=\"flags\"/>.</p><p xmlns:e=\"http://www.w3.org/1999/XSL/Spec/ElementSyntax\">If <code>$input</code> is the empty sequence, it is interpreted as the zero-length\n             string.</p><p xmlns:e=\"http://www.w3.org/1999/XSL/Spec/ElementSyntax\">The function returns <code>true</code> if <code>$input</code> or some substring of\n                <code>$input</code> matches the regular expression supplied as <code>$pattern</code>.\n             Otherwise, the function returns <code>false</code>. The matching rules are influenced by\n             the value of <code>$flags</code> if present. </p><p xmlns:e=\"http://www.w3.org/1999/XSL/Spec/ElementSyntax\">A <phrase diff=\"add\" at=\"L\">dynamic</phrase> error is raised <errorref class=\"RX\" code=\"0002\"/> if the value of\n                <code>$pattern</code> is invalid according to the rules described in <specref ref=\"regex-syntax\"/>. </p><p xmlns:e=\"http://www.w3.org/1999/XSL/Spec/ElementSyntax\">A <phrase diff=\"add\" at=\"L\">dynamic</phrase> error is raised <errorref class=\"RX\" code=\"0001\"/> if the value of\n                <code>$flags</code> is invalid according to the rules described in <specref ref=\"flags\"/>. </p></div>\n", "summary" : "<p>  Returns true if the supplied string matches a given regular expression.</p>", "annotation_str" : "", "annotations" : [  ], "updating" : false, "parameters" : [ { "name" : "input", "type" : "xs:string", "occurrence" : "?", "description" : "" }, { "name" : "pattern", "type" : "xs:string", "occurrence" : null, "description" : "" } ], "returns" : { "type" : "xs:boolean", "description" : "" }, "errors" : [  ] }, { "isDocumented" : true, "arity" : 3, "name" : "matches", "qname" : "fn:matches", "signature" : "($input as xs:string?, $pattern as xs:string, $flags as xs:string) as xs:boolean external", "description" : " <div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"><p xmlns:e=\"http://www.w3.org/1999/XSL/Spec/ElementSyntax\">Returns true if the supplied string matches a given regular expression.</p><p xmlns:e=\"http://www.w3.org/1999/XSL/Spec/ElementSyntax\"><example role=\"signature\"><proto name=\"matches\" return-type=\"xs:boolean\" isOp=\"no\" prefix=\"fn\" returnEmptyOk=\"no\" returnSeq=\"no\" returnVaries=\"no\" isSchema=\"no\" isDatatype=\"no\" isSpecial=\"no\"><arg name=\"input\" type=\"xs:string?\"/><arg name=\"pattern\" type=\"xs:string\"/></proto></example><example role=\"signature\"><proto name=\"matches\" return-type=\"xs:boolean\" isOp=\"no\" prefix=\"fn\" returnEmptyOk=\"no\" returnSeq=\"no\" returnVaries=\"no\" isSchema=\"no\" isDatatype=\"no\" isSpecial=\"no\"><arg name=\"input\" type=\"xs:string?\"/><arg name=\"pattern\" type=\"xs:string\"/><arg name=\"flags\" type=\"xs:string\"/></proto></example></p><p xmlns:e=\"http://www.w3.org/1999/XSL/Spec/ElementSyntax\">This function is <termref def=\"dt-deterministic\">deterministic</termref>, <termref def=\"dt-context-independent\">context-independent</termref>,  and <termref def=\"dt-focus-independent\">focus-independent</termref>. </p><p xmlns:e=\"http://www.w3.org/1999/XSL/Spec/ElementSyntax\">The effect of calling the first version of this function (omitting the argument\n                <code>$flags</code>) is the same as the effect of calling the second version with the\n                <code>$flags</code> argument set to a zero-length string. Flags are defined in\n                <specref ref=\"flags\"/>.</p><p xmlns:e=\"http://www.w3.org/1999/XSL/Spec/ElementSyntax\">If <code>$input</code> is the empty sequence, it is interpreted as the zero-length\n             string.</p><p xmlns:e=\"http://www.w3.org/1999/XSL/Spec/ElementSyntax\">The function returns <code>true</code> if <code>$input</code> or some substring of\n                <code>$input</code> matches the regular expression supplied as <code>$pattern</code>.\n             Otherwise, the function returns <code>false</code>. The matching rules are influenced by\n             the value of <code>$flags</code> if present. </p><p xmlns:e=\"http://www.w3.org/1999/XSL/Spec/ElementSyntax\">A <phrase diff=\"add\" at=\"L\">dynamic</phrase> error is raised <errorref class=\"RX\" code=\"0002\"/> if the value of\n                <code>$pattern</code> is invalid according to the rules described in <specref ref=\"regex-syntax\"/>. </p><p xmlns:e=\"http://www.w3.org/1999/XSL/Spec/ElementSyntax\">A <phrase diff=\"add\" at=\"L\">dynamic</phrase> error is raised <errorref class=\"RX\" code=\"0001\"/> if the value of\n                <code>$flags</code> is invalid according to the rules described in <specref ref=\"flags\"/>. </p></div>\n", "summary" : "<p>  Returns true if the supplied string matches a given regular expression.</p>", "annotation_str" : "", "annotations" : [  ], "updating" : false, "parameters" : [ { "name" : "input", "type" : "xs:string", "occurrence" : "?", "description" : "" }, { "name" : "pattern", "type" : "xs:string", "occurrence" : null, "description" : "" }, { "name" : "flags", "type" : "xs:string", "occurrence" : null, "description" : "" } ], "returns" : { "type" : "xs:boolean", "description" : "" }, "errors" : [  ] }, { "isDocumented" : true, "arity" : 1, "name" : "max", "qname" : "fn:max", "signature" : "($arg as xs:anyAtomicType*) as xs:anyAtomicType? external", "description" : " <div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"><p xmlns:e=\"http://www.w3.org/1999/XSL/Spec/ElementSyntax\">Returns a value that is equal to the highest value appearing in the input\n             sequence.</p><p xmlns:e=\"http://www.w3.org/1999/XSL/Spec/ElementSyntax\"><example role=\"signature\"><proto name=\"max\" return-type=\"xs:anyAtomicType?\" isOp=\"no\" prefix=\"fn\" returnEmptyOk=\"no\" returnSeq=\"no\" returnVaries=\"no\" isSchema=\"no\" isDatatype=\"no\" isSpecial=\"no\"><arg name=\"arg\" type=\"xs:anyAtomicType*\"/></proto></example><example role=\"signature\"><proto name=\"max\" return-type=\"xs:anyAtomicType?\" isOp=\"no\" prefix=\"fn\" returnEmptyOk=\"no\" returnSeq=\"no\" returnVaries=\"no\" isSchema=\"no\" isDatatype=\"no\" isSpecial=\"no\"><arg name=\"arg\" type=\"xs:anyAtomicType*\"/><arg name=\"collation\" type=\"xs:string\"/></proto></example></p><p xmlns:e=\"http://www.w3.org/1999/XSL/Spec/ElementSyntax\">The zero-argument form of this function is <termref def=\"dt-deterministic\">deterministic</termref>, <termref def=\"dt-context-dependent\">context-dependent</termref>,  and <termref def=\"dt-focus-independent\">focus-independent</termref>.  It depends on\n \t\tcollations, and implicit timezone.\n \t</p><p xmlns:e=\"http://www.w3.org/1999/XSL/Spec/ElementSyntax\">The one-argument form of this function is <termref def=\"dt-deterministic\">deterministic</termref>, <termref def=\"dt-context-dependent\">context-dependent</termref>,  and <termref def=\"dt-focus-independent\">focus-independent</termref>.  It depends on\n \t\tcollations, and static base uri, and implicit timezone.\n \t</p><p xmlns:e=\"http://www.w3.org/1999/XSL/Spec/ElementSyntax\">The following rules are applied to the input sequence <code>$arg</code>:</p><ulist xmlns:e=\"http://www.w3.org/1999/XSL/Spec/ElementSyntax\"><item><p>Values of type <code>xs:untypedAtomic</code> in <code>$arg</code> are cast to\n                      <code>xs:double</code>.</p></item><item><!--Text replaced by erratum E27 change 1\"--><p diff=\"chg\" at=\"A-E27\">Numeric and <code>xs:anyURI</code> values are converted to\n                   the least common type reachable by a combination of type promotion and subtype\n                   substitution. See <xspecref spec=\"XP30\" ref=\"promotion\"/> and <xspecref spec=\"XP30\" ref=\"mapping\"/>.</p><!--End of text replaced by erratum E27--></item></ulist><p xmlns:e=\"http://www.w3.org/1999/XSL/Spec/ElementSyntax\">The items in the resulting sequence may be reordered in an arbitrary order. The\n             resulting sequence is referred to below as the converted sequence. The function returns\n             an item from the converted sequence rather than the input sequence. </p><p xmlns:e=\"http://www.w3.org/1999/XSL/Spec/ElementSyntax\">If the converted sequence is empty, the function returns the empty sequence.</p><p xmlns:e=\"http://www.w3.org/1999/XSL/Spec/ElementSyntax\">All items in the <phrase diff=\"chg\" at=\"A-E47\">converted sequence must be\n                derived</phrase> from a single base type for which the <code>le</code> operator is\n             defined. In addition, the values in the sequence must have a total order. If date/time\n             values do not have a timezone, they are considered to have the implicit timezone\n             provided by the dynamic context for the purpose of comparison. Duration values must\n             either all be <code>xs:yearMonthDuration</code> values or must all be\n                <code>xs:dayTimeDuration</code> values.</p><p xmlns:e=\"http://www.w3.org/1999/XSL/Spec/ElementSyntax\">If the converted sequence contains the value <code>NaN</code>, the value\n                <code>NaN</code> is returned.</p><p xmlns:e=\"http://www.w3.org/1999/XSL/Spec/ElementSyntax\">If the items in the <phrase diff=\"chg\" at=\"A-E47\">converted sequence</phrase> are of\n             type <code>xs:string</code> or types derived by restriction from <code>xs:string</code>,\n             then the determination of the item with the smallest value is made according to the\n             collation that is used. If the type of the items in the <phrase diff=\"chg\" at=\"A-E47\">converted sequence</phrase> is not <code>xs:string</code> and\n                <code>$collation</code> is specified, the collation is ignored.</p><p xmlns:e=\"http://www.w3.org/1999/XSL/Spec/ElementSyntax\">The collation used by this function is determined according to the rules in <specref ref=\"choosing-a-collation\"/>.</p><p xmlns:e=\"http://www.w3.org/1999/XSL/Spec/ElementSyntax\">The function returns the result of the expression:</p><eg xmlns:e=\"http://www.w3.org/1999/XSL/Spec/ElementSyntax\" xml:space=\"preserve\">\n    if (every $v in $c satisfies $c[1] ge $v)\n    then $c[1]\n    else fn:max(fn:subsequence($c, 2))</eg><p xmlns:e=\"http://www.w3.org/1999/XSL/Spec/ElementSyntax\">evaluated with <code>$collation</code> as the default collation if specified, and with\n                <code>$c</code> as the converted sequence.</p><p xmlns:e=\"http://www.w3.org/1999/XSL/Spec/ElementSyntax\" diff=\"del\" at=\"F\">For detailed type semantics, see [Formal Semantics].</p><p xmlns:e=\"http://www.w3.org/1999/XSL/Spec/ElementSyntax\">A type error is raised <errorref class=\"RG\" code=\"0006\"/> if the input sequence contains\n             items of incompatible types, as described above.</p></div>\n", "summary" : "<p>  Returns a value that is equal to the highest value appearing in the input\n             sequence.</p>", "annotation_str" : "", "annotations" : [  ], "updating" : false, "parameters" : [ { "name" : "arg", "type" : "xs:anyAtomicType", "occurrence" : "*", "description" : "" } ], "returns" : { "type" : "xs:anyAtomicType?", "description" : "" }, "errors" : [  ] }, { "isDocumented" : true, "arity" : 2, "name" : "max", "qname" : "fn:max", "signature" : "($arg as xs:anyAtomicType*, $collation as xs:string) as xs:anyAtomicType? external", "description" : " <div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"><p xmlns:e=\"http://www.w3.org/1999/XSL/Spec/ElementSyntax\">Returns a value that is equal to the highest value appearing in the input\n             sequence.</p><p xmlns:e=\"http://www.w3.org/1999/XSL/Spec/ElementSyntax\"><example role=\"signature\"><proto name=\"max\" return-type=\"xs:anyAtomicType?\" isOp=\"no\" prefix=\"fn\" returnEmptyOk=\"no\" returnSeq=\"no\" returnVaries=\"no\" isSchema=\"no\" isDatatype=\"no\" isSpecial=\"no\"><arg name=\"arg\" type=\"xs:anyAtomicType*\"/></proto></example><example role=\"signature\"><proto name=\"max\" return-type=\"xs:anyAtomicType?\" isOp=\"no\" prefix=\"fn\" returnEmptyOk=\"no\" returnSeq=\"no\" returnVaries=\"no\" isSchema=\"no\" isDatatype=\"no\" isSpecial=\"no\"><arg name=\"arg\" type=\"xs:anyAtomicType*\"/><arg name=\"collation\" type=\"xs:string\"/></proto></example></p><p xmlns:e=\"http://www.w3.org/1999/XSL/Spec/ElementSyntax\">The zero-argument form of this function is <termref def=\"dt-deterministic\">deterministic</termref>, <termref def=\"dt-context-dependent\">context-dependent</termref>,  and <termref def=\"dt-focus-independent\">focus-independent</termref>.  It depends on\n \t\tcollations, and implicit timezone.\n \t</p><p xmlns:e=\"http://www.w3.org/1999/XSL/Spec/ElementSyntax\">The one-argument form of this function is <termref def=\"dt-deterministic\">deterministic</termref>, <termref def=\"dt-context-dependent\">context-dependent</termref>,  and <termref def=\"dt-focus-independent\">focus-independent</termref>.  It depends on\n \t\tcollations, and static base uri, and implicit timezone.\n \t</p><p xmlns:e=\"http://www.w3.org/1999/XSL/Spec/ElementSyntax\">The following rules are applied to the input sequence <code>$arg</code>:</p><ulist xmlns:e=\"http://www.w3.org/1999/XSL/Spec/ElementSyntax\"><item><p>Values of type <code>xs:untypedAtomic</code> in <code>$arg</code> are cast to\n                      <code>xs:double</code>.</p></item><item><!--Text replaced by erratum E27 change 1\"--><p diff=\"chg\" at=\"A-E27\">Numeric and <code>xs:anyURI</code> values are converted to\n                   the least common type reachable by a combination of type promotion and subtype\n                   substitution. See <xspecref spec=\"XP30\" ref=\"promotion\"/> and <xspecref spec=\"XP30\" ref=\"mapping\"/>.</p><!--End of text replaced by erratum E27--></item></ulist><p xmlns:e=\"http://www.w3.org/1999/XSL/Spec/ElementSyntax\">The items in the resulting sequence may be reordered in an arbitrary order. The\n             resulting sequence is referred to below as the converted sequence. The function returns\n             an item from the converted sequence rather than the input sequence. </p><p xmlns:e=\"http://www.w3.org/1999/XSL/Spec/ElementSyntax\">If the converted sequence is empty, the function returns the empty sequence.</p><p xmlns:e=\"http://www.w3.org/1999/XSL/Spec/ElementSyntax\">All items in the <phrase diff=\"chg\" at=\"A-E47\">converted sequence must be\n                derived</phrase> from a single base type for which the <code>le</code> operator is\n             defined. In addition, the values in the sequence must have a total order. If date/time\n             values do not have a timezone, they are considered to have the implicit timezone\n             provided by the dynamic context for the purpose of comparison. Duration values must\n             either all be <code>xs:yearMonthDuration</code> values or must all be\n                <code>xs:dayTimeDuration</code> values.</p><p xmlns:e=\"http://www.w3.org/1999/XSL/Spec/ElementSyntax\">If the converted sequence contains the value <code>NaN</code>, the value\n                <code>NaN</code> is returned.</p><p xmlns:e=\"http://www.w3.org/1999/XSL/Spec/ElementSyntax\">If the items in the <phrase diff=\"chg\" at=\"A-E47\">converted sequence</phrase> are of\n             type <code>xs:string</code> or types derived by restriction from <code>xs:string</code>,\n             then the determination of the item with the smallest value is made according to the\n             collation that is used. If the type of the items in the <phrase diff=\"chg\" at=\"A-E47\">converted sequence</phrase> is not <code>xs:string</code> and\n                <code>$collation</code> is specified, the collation is ignored.</p><p xmlns:e=\"http://www.w3.org/1999/XSL/Spec/ElementSyntax\">The collation used by this function is determined according to the rules in <specref ref=\"choosing-a-collation\"/>.</p><p xmlns:e=\"http://www.w3.org/1999/XSL/Spec/ElementSyntax\">The function returns the result of the expression:</p><eg xmlns:e=\"http://www.w3.org/1999/XSL/Spec/ElementSyntax\" xml:space=\"preserve\">\n    if (every $v in $c satisfies $c[1] ge $v)\n    then $c[1]\n    else fn:max(fn:subsequence($c, 2))</eg><p xmlns:e=\"http://www.w3.org/1999/XSL/Spec/ElementSyntax\">evaluated with <code>$collation</code> as the default collation if specified, and with\n                <code>$c</code> as the converted sequence.</p><p xmlns:e=\"http://www.w3.org/1999/XSL/Spec/ElementSyntax\" diff=\"del\" at=\"F\">For detailed type semantics, see [Formal Semantics].</p><p xmlns:e=\"http://www.w3.org/1999/XSL/Spec/ElementSyntax\">A type error is raised <errorref class=\"RG\" code=\"0006\"/> if the input sequence contains\n             items of incompatible types, as described above.</p></div>\n", "summary" : "<p>  Returns a value that is equal to the highest value appearing in the input\n             sequence.</p>", "annotation_str" : "", "annotations" : [  ], "updating" : false, "parameters" : [ { "name" : "arg", "type" : "xs:anyAtomicType", "occurrence" : "*", "description" : "" }, { "name" : "collation", "type" : "xs:string", "occurrence" : null, "description" : "" } ], "returns" : { "type" : "xs:anyAtomicType?", "description" : "" }, "errors" : [  ] }, { "isDocumented" : true, "arity" : 1, "name" : "min", "qname" : "fn:min", "signature" : "($arg as xs:anyAtomicType*) as xs:anyAtomicType? external", "description" : " <div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"><p xmlns:e=\"http://www.w3.org/1999/XSL/Spec/ElementSyntax\">Returns a value that is equal to the lowest value appearing in the input\n             sequence.</p><p xmlns:e=\"http://www.w3.org/1999/XSL/Spec/ElementSyntax\"><example role=\"signature\"><proto name=\"min\" return-type=\"xs:anyAtomicType?\" isOp=\"no\" prefix=\"fn\" returnEmptyOk=\"no\" returnSeq=\"no\" returnVaries=\"no\" isSchema=\"no\" isDatatype=\"no\" isSpecial=\"no\"><arg name=\"arg\" type=\"xs:anyAtomicType*\"/></proto></example><example role=\"signature\"><proto name=\"min\" return-type=\"xs:anyAtomicType?\" isOp=\"no\" prefix=\"fn\" returnEmptyOk=\"no\" returnSeq=\"no\" returnVaries=\"no\" isSchema=\"no\" isDatatype=\"no\" isSpecial=\"no\"><arg name=\"arg\" type=\"xs:anyAtomicType*\"/><arg name=\"collation\" type=\"xs:string\"/></proto></example></p><p xmlns:e=\"http://www.w3.org/1999/XSL/Spec/ElementSyntax\">The zero-argument form of this function is <termref def=\"dt-deterministic\">deterministic</termref>, <termref def=\"dt-context-dependent\">context-dependent</termref>,  and <termref def=\"dt-focus-independent\">focus-independent</termref>.  It depends on\n \t\tcollations, and implicit timezone.\n \t</p><p xmlns:e=\"http://www.w3.org/1999/XSL/Spec/ElementSyntax\">The one-argument form of this function is <termref def=\"dt-deterministic\">deterministic</termref>, <termref def=\"dt-context-dependent\">context-dependent</termref>,  and <termref def=\"dt-focus-independent\">focus-independent</termref>.  It depends on\n \t\tcollations, and static base uri, and implicit timezone.\n \t</p><p xmlns:e=\"http://www.w3.org/1999/XSL/Spec/ElementSyntax\">The following rules are applied to the input sequence:</p><ulist xmlns:e=\"http://www.w3.org/1999/XSL/Spec/ElementSyntax\"><item><p>Values of type <code>xs:untypedAtomic</code> in <code>$arg</code> are cast to\n                      <code>xs:double</code>.</p></item><item><!--Text replaced by erratum E27 change 2\"--><p diff=\"chg\" at=\"A-E27\">Numeric and <code>xs:anyURI</code> values are converted to\n                   the least common type reachable by a combination of type promotion and subtype\n                   substitution. See <xspecref spec=\"XP30\" ref=\"promotion\"/> and <xspecref spec=\"XP30\" ref=\"mapping\"/>.</p><!--End of text replaced by erratum E27--></item></ulist><p xmlns:e=\"http://www.w3.org/1999/XSL/Spec/ElementSyntax\">The items in the resulting sequence may be reordered in an arbitrary order. The\n             resulting sequence is referred to below as the converted sequence. The function returns\n             an item from the converted sequence rather than the input sequence. </p><p xmlns:e=\"http://www.w3.org/1999/XSL/Spec/ElementSyntax\">If the converted sequence is empty, the empty sequence is returned.</p><p xmlns:e=\"http://www.w3.org/1999/XSL/Spec/ElementSyntax\">All items in the <phrase diff=\"chg\" at=\"A-E47\">converted sequence must be\n                derived</phrase> from a single base type for which the <code>le</code> operator is\n             defined. In addition, the values in the sequence must have a total order. If date/time\n             values do not have a timezone, they are considered to have the implicit timezone\n             provided by the dynamic context for the purpose of comparison. Duration values must\n             either all be <code>xs:yearMonthDuration</code> values or must all be\n                <code>xs:dayTimeDuration</code> values.</p><p xmlns:e=\"http://www.w3.org/1999/XSL/Spec/ElementSyntax\">If the converted sequence contains the value <code>NaN</code>, the value\n                <code>NaN</code> is returned.</p><p xmlns:e=\"http://www.w3.org/1999/XSL/Spec/ElementSyntax\">If the items in the <phrase diff=\"chg\" at=\"A-E47\">converted sequence</phrase> are of\n             type <code>xs:string</code> or types derived by restriction from <code>xs:string</code>,\n             then the determination of the item with the smallest value is made according to the\n             collation that is used. If the type of the items in the <phrase diff=\"chg\" at=\"A-E47\">converted sequence</phrase> is not <code>xs:string</code> and\n                <code>$collation</code> is specified, the collation is ignored.</p><p xmlns:e=\"http://www.w3.org/1999/XSL/Spec/ElementSyntax\">The collation used by this function is determined according to the rules in <specref ref=\"choosing-a-collation\"/>.</p><p xmlns:e=\"http://www.w3.org/1999/XSL/Spec/ElementSyntax\">The function returns the result of the expression:</p><eg xmlns:e=\"http://www.w3.org/1999/XSL/Spec/ElementSyntax\" xml:space=\"preserve\">\n    if (every $v in $c satisfies $c[1] le $v)\n    then $c[1]\n    else fn:min(fn:subsequence($c, 2))</eg><p xmlns:e=\"http://www.w3.org/1999/XSL/Spec/ElementSyntax\">evaluated with <code>$collation</code> as the default collation if specified, and with\n                <code>$c</code> as the converted sequence.</p><p xmlns:e=\"http://www.w3.org/1999/XSL/Spec/ElementSyntax\" diff=\"del\" at=\"F\">For detailed type semantics, see [Formal Semantics].</p><p xmlns:e=\"http://www.w3.org/1999/XSL/Spec/ElementSyntax\">A type error is raised <errorref class=\"RG\" code=\"0006\"/> if the input sequence contains\n             items of incompatible types, as described above.</p></div>\n", "summary" : "<p>  Returns a value that is equal to the lowest value appearing in the input\n             sequence.</p>", "annotation_str" : "", "annotations" : [  ], "updating" : false, "parameters" : [ { "name" : "arg", "type" : "xs:anyAtomicType", "occurrence" : "*", "description" : "" } ], "returns" : { "type" : "xs:anyAtomicType?", "description" : "" }, "errors" : [  ] }, { "isDocumented" : true, "arity" : 2, "name" : "min", "qname" : "fn:min", "signature" : "($arg as xs:anyAtomicType*, $collation as xs:string) as xs:anyAtomicType? external", "description" : " <div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"><p xmlns:e=\"http://www.w3.org/1999/XSL/Spec/ElementSyntax\">Returns a value that is equal to the lowest value appearing in the input\n             sequence.</p><p xmlns:e=\"http://www.w3.org/1999/XSL/Spec/ElementSyntax\"><example role=\"signature\"><proto name=\"min\" return-type=\"xs:anyAtomicType?\" isOp=\"no\" prefix=\"fn\" returnEmptyOk=\"no\" returnSeq=\"no\" returnVaries=\"no\" isSchema=\"no\" isDatatype=\"no\" isSpecial=\"no\"><arg name=\"arg\" type=\"xs:anyAtomicType*\"/></proto></example><example role=\"signature\"><proto name=\"min\" return-type=\"xs:anyAtomicType?\" isOp=\"no\" prefix=\"fn\" returnEmptyOk=\"no\" returnSeq=\"no\" returnVaries=\"no\" isSchema=\"no\" isDatatype=\"no\" isSpecial=\"no\"><arg name=\"arg\" type=\"xs:anyAtomicType*\"/><arg name=\"collation\" type=\"xs:string\"/></proto></example></p><p xmlns:e=\"http://www.w3.org/1999/XSL/Spec/ElementSyntax\">The zero-argument form of this function is <termref def=\"dt-deterministic\">deterministic</termref>, <termref def=\"dt-context-dependent\">context-dependent</termref>,  and <termref def=\"dt-focus-independent\">focus-independent</termref>.  It depends on\n \t\tcollations, and implicit timezone.\n \t</p><p xmlns:e=\"http://www.w3.org/1999/XSL/Spec/ElementSyntax\">The one-argument form of this function is <termref def=\"dt-deterministic\">deterministic</termref>, <termref def=\"dt-context-dependent\">context-dependent</termref>,  and <termref def=\"dt-focus-independent\">focus-independent</termref>.  It depends on\n \t\tcollations, and static base uri, and implicit timezone.\n \t</p><p xmlns:e=\"http://www.w3.org/1999/XSL/Spec/ElementSyntax\">The following rules are applied to the input sequence:</p><ulist xmlns:e=\"http://www.w3.org/1999/XSL/Spec/ElementSyntax\"><item><p>Values of type <code>xs:untypedAtomic</code> in <code>$arg</code> are cast to\n                      <code>xs:double</code>.</p></item><item><!--Text replaced by erratum E27 change 2\"--><p diff=\"chg\" at=\"A-E27\">Numeric and <code>xs:anyURI</code> values are converted to\n                   the least common type reachable by a combination of type promotion and subtype\n                   substitution. See <xspecref spec=\"XP30\" ref=\"promotion\"/> and <xspecref spec=\"XP30\" ref=\"mapping\"/>.</p><!--End of text replaced by erratum E27--></item></ulist><p xmlns:e=\"http://www.w3.org/1999/XSL/Spec/ElementSyntax\">The items in the resulting sequence may be reordered in an arbitrary order. The\n             resulting sequence is referred to below as the converted sequence. The function returns\n             an item from the converted sequence rather than the input sequence. </p><p xmlns:e=\"http://www.w3.org/1999/XSL/Spec/ElementSyntax\">If the converted sequence is empty, the empty sequence is returned.</p><p xmlns:e=\"http://www.w3.org/1999/XSL/Spec/ElementSyntax\">All items in the <phrase diff=\"chg\" at=\"A-E47\">converted sequence must be\n                derived</phrase> from a single base type for which the <code>le</code> operator is\n             defined. In addition, the values in the sequence must have a total order. If date/time\n             values do not have a timezone, they are considered to have the implicit timezone\n             provided by the dynamic context for the purpose of comparison. Duration values must\n             either all be <code>xs:yearMonthDuration</code> values or must all be\n                <code>xs:dayTimeDuration</code> values.</p><p xmlns:e=\"http://www.w3.org/1999/XSL/Spec/ElementSyntax\">If the converted sequence contains the value <code>NaN</code>, the value\n                <code>NaN</code> is returned.</p><p xmlns:e=\"http://www.w3.org/1999/XSL/Spec/ElementSyntax\">If the items in the <phrase diff=\"chg\" at=\"A-E47\">converted sequence</phrase> are of\n             type <code>xs:string</code> or types derived by restriction from <code>xs:string</code>,\n             then the determination of the item with the smallest value is made according to the\n             collation that is used. If the type of the items in the <phrase diff=\"chg\" at=\"A-E47\">converted sequence</phrase> is not <code>xs:string</code> and\n                <code>$collation</code> is specified, the collation is ignored.</p><p xmlns:e=\"http://www.w3.org/1999/XSL/Spec/ElementSyntax\">The collation used by this function is determined according to the rules in <specref ref=\"choosing-a-collation\"/>.</p><p xmlns:e=\"http://www.w3.org/1999/XSL/Spec/ElementSyntax\">The function returns the result of the expression:</p><eg xmlns:e=\"http://www.w3.org/1999/XSL/Spec/ElementSyntax\" xml:space=\"preserve\">\n    if (every $v in $c satisfies $c[1] le $v)\n    then $c[1]\n    else fn:min(fn:subsequence($c, 2))</eg><p xmlns:e=\"http://www.w3.org/1999/XSL/Spec/ElementSyntax\">evaluated with <code>$collation</code> as the default collation if specified, and with\n                <code>$c</code> as the converted sequence.</p><p xmlns:e=\"http://www.w3.org/1999/XSL/Spec/ElementSyntax\" diff=\"del\" at=\"F\">For detailed type semantics, see [Formal Semantics].</p><p xmlns:e=\"http://www.w3.org/1999/XSL/Spec/ElementSyntax\">A type error is raised <errorref class=\"RG\" code=\"0006\"/> if the input sequence contains\n             items of incompatible types, as described above.</p></div>\n", "summary" : "<p>  Returns a value that is equal to the lowest value appearing in the input\n             sequence.</p>", "annotation_str" : "", "annotations" : [  ], "updating" : false, "parameters" : [ { "name" : "arg", "type" : "xs:anyAtomicType", "occurrence" : "*", "description" : "" }, { "name" : "collation", "type" : "xs:string", "occurrence" : null, "description" : "" } ], "returns" : { "type" : "xs:anyAtomicType?", "description" : "" }, "errors" : [  ] }, { "isDocumented" : true, "arity" : 1, "name" : "minutes-from-dateTime", "qname" : "fn:minutes-from-dateTime", "signature" : "($arg as xs:dateTime?) as xs:integer? external", "description" : " <div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"><p xmlns:e=\"http://www.w3.org/1999/XSL/Spec/ElementSyntax\">Returns the minute component of an <code>xs:dateTime</code>.</p><p xmlns:e=\"http://www.w3.org/1999/XSL/Spec/ElementSyntax\"><example role=\"signature\"><proto name=\"minutes-from-dateTime\" return-type=\"xs:integer?\" isOp=\"no\" prefix=\"fn\" returnEmptyOk=\"no\" returnSeq=\"no\" returnVaries=\"no\" isSchema=\"no\" isDatatype=\"no\" isSpecial=\"no\"><arg name=\"arg\" type=\"xs:dateTime?\"/></proto></example></p><p xmlns:e=\"http://www.w3.org/1999/XSL/Spec/ElementSyntax\">This function is <termref def=\"dt-deterministic\">deterministic</termref>, <termref def=\"dt-context-independent\">context-independent</termref>,  and <termref def=\"dt-focus-independent\">focus-independent</termref>. </p><p xmlns:e=\"http://www.w3.org/1999/XSL/Spec/ElementSyntax\">If <code>$arg</code> is the empty sequence, the function returns the empty sequence.</p><p xmlns:e=\"http://www.w3.org/1999/XSL/Spec/ElementSyntax\">Otherwise, the function returns an <code>xs:integer</code> value between 0 and 59, both\n             inclusive, representing the minute component in the local value of\n             <code>$arg</code>.</p><p xmlns:e=\"http://www.w3.org/1999/XSL/Spec/ElementSyntax\">The expression <code>fn:minutes-from-dateTime(xs:dateTime(\"1999-05-31T13:20:00-05:00\"))</code> returns <code>20</code>.</p><p xmlns:e=\"http://www.w3.org/1999/XSL/Spec/ElementSyntax\">The expression <code>fn:minutes-from-dateTime(xs:dateTime(\"1999-05-31T13:30:00+05:30\"))</code> returns <code>30</code>.</p></div>\n", "summary" : "<p>  Returns the minute component of an  xs:dateTime .</p>", "annotation_str" : "", "annotations" : [  ], "updating" : false, "parameters" : [ { "name" : "arg", "type" : "xs:dateTime", "occurrence" : "?", "description" : "" } ], "returns" : { "type" : "xs:integer?", "description" : "" }, "errors" : [  ] }, { "isDocumented" : true, "arity" : 1, "name" : "minutes-from-duration", "qname" : "fn:minutes-from-duration", "signature" : "($arg as xs:duration?) as xs:integer? external", "description" : " <div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"><p xmlns:e=\"http://www.w3.org/1999/XSL/Spec/ElementSyntax\">Returns the number of minutes in a duration.</p><p xmlns:e=\"http://www.w3.org/1999/XSL/Spec/ElementSyntax\"><example role=\"signature\"><proto name=\"minutes-from-duration\" return-type=\"xs:integer?\" isOp=\"no\" prefix=\"fn\" returnEmptyOk=\"no\" returnSeq=\"no\" returnVaries=\"no\" isSchema=\"no\" isDatatype=\"no\" isSpecial=\"no\"><arg name=\"arg\" type=\"xs:duration?\"/></proto></example></p><p xmlns:e=\"http://www.w3.org/1999/XSL/Spec/ElementSyntax\">This function is <termref def=\"dt-deterministic\">deterministic</termref>, <termref def=\"dt-context-independent\">context-independent</termref>,  and <termref def=\"dt-focus-independent\">focus-independent</termref>. </p><p xmlns:e=\"http://www.w3.org/1999/XSL/Spec/ElementSyntax\">If <code>$arg</code> is the empty sequence, the function returns the empty sequence.</p><p xmlns:e=\"http://www.w3.org/1999/XSL/Spec/ElementSyntax\">Otherwise, the function returns an <code>xs:integer</code> representing the minutes\n             component in the value of <code>$arg</code>. The result is obtained by casting\n                <code>$arg</code> to an <code>xs:dayTimeDuration</code> (see <specref ref=\"casting-to-durations\"/>) and then computing the minutes component as described\n             in <specref ref=\"canonical-dayTimeDuration\"/>.</p><p xmlns:e=\"http://www.w3.org/1999/XSL/Spec/ElementSyntax\">If <code>$arg</code> is a negative duration then the result will be negative..</p><p xmlns:e=\"http://www.w3.org/1999/XSL/Spec/ElementSyntax\">If <code>$arg</code> is an <code>xs:yearMonthDuration</code> the function returns 0.</p><p xmlns:e=\"http://www.w3.org/1999/XSL/Spec/ElementSyntax\">The expression <code>fn:minutes-from-duration(xs:dayTimeDuration(\"P3DT10H\"))</code> returns <code>0</code>.</p><p xmlns:e=\"http://www.w3.org/1999/XSL/Spec/ElementSyntax\">The expression <code>fn:minutes-from-duration(xs:dayTimeDuration(\"-P5DT12H30M\"))</code> returns <code>-30</code>.</p></div>\n", "summary" : "<p>  Returns the number of minutes in a duration.</p>", "annotation_str" : "", "annotations" : [  ], "updating" : false, "parameters" : [ { "name" : "arg", "type" : "xs:duration", "occurrence" : "?", "description" : "" } ], "returns" : { "type" : "xs:integer?", "description" : "" }, "errors" : [  ] }, { "isDocumented" : true, "arity" : 1, "name" : "minutes-from-time", "qname" : "fn:minutes-from-time", "signature" : "($arg as xs:time?) as xs:integer? external", "description" : " <div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"><p xmlns:e=\"http://www.w3.org/1999/XSL/Spec/ElementSyntax\">Returns the minutes component of an <code>xs:time</code>.</p><p xmlns:e=\"http://www.w3.org/1999/XSL/Spec/ElementSyntax\"><example role=\"signature\"><proto name=\"minutes-from-time\" return-type=\"xs:integer?\" isOp=\"no\" prefix=\"fn\" returnEmptyOk=\"no\" returnSeq=\"no\" returnVaries=\"no\" isSchema=\"no\" isDatatype=\"no\" isSpecial=\"no\"><arg name=\"arg\" type=\"xs:time?\"/></proto></example></p><p xmlns:e=\"http://www.w3.org/1999/XSL/Spec/ElementSyntax\">This function is <termref def=\"dt-deterministic\">deterministic</termref>, <termref def=\"dt-context-independent\">context-independent</termref>,  and <termref def=\"dt-focus-independent\">focus-independent</termref>. </p><p xmlns:e=\"http://www.w3.org/1999/XSL/Spec/ElementSyntax\">If <code>$arg</code> is the empty sequence, the function returns the empty sequence.</p><p xmlns:e=\"http://www.w3.org/1999/XSL/Spec/ElementSyntax\">Otherwise, the function returns an <code>xs:integer</code> value between 0 and 59, both\n             inclusive, representing the value of the minutes component in the local value of\n                <code>$arg</code>.</p><p xmlns:e=\"http://www.w3.org/1999/XSL/Spec/ElementSyntax\">The expression <code>fn:minutes-from-time(xs:time(\"13:00:00Z\"))</code> returns <code>0</code>.</p></div>\n", "summary" : "<p>  Returns the minutes component of an  xs:time .</p>", "annotation_str" : "", "annotations" : [  ], "updating" : false, "parameters" : [ { "name" : "arg", "type" : "xs:time", "occurrence" : "?", "description" : "" } ], "returns" : { "type" : "xs:integer?", "description" : "" }, "errors" : [  ] }, { "isDocumented" : true, "arity" : 1, "name" : "month-from-date", "qname" : "fn:month-from-date", "signature" : "($arg as xs:date?) as xs:integer? external", "description" : " <div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"><p xmlns:e=\"http://www.w3.org/1999/XSL/Spec/ElementSyntax\">Returns the month component of an <code>xs:date</code>.</p><p xmlns:e=\"http://www.w3.org/1999/XSL/Spec/ElementSyntax\"><example role=\"signature\"><proto name=\"month-from-date\" return-type=\"xs:integer?\" isOp=\"no\" prefix=\"fn\" returnEmptyOk=\"no\" returnSeq=\"no\" returnVaries=\"no\" isSchema=\"no\" isDatatype=\"no\" isSpecial=\"no\"><arg name=\"arg\" type=\"xs:date?\"/></proto></example></p><p xmlns:e=\"http://www.w3.org/1999/XSL/Spec/ElementSyntax\">This function is <termref def=\"dt-deterministic\">deterministic</termref>, <termref def=\"dt-context-independent\">context-independent</termref>,  and <termref def=\"dt-focus-independent\">focus-independent</termref>. </p><p xmlns:e=\"http://www.w3.org/1999/XSL/Spec/ElementSyntax\">If <code>$arg</code> is the empty sequence, the function returns the empty sequence.</p><p xmlns:e=\"http://www.w3.org/1999/XSL/Spec/ElementSyntax\">Otherwise, the function returns an <code>xs:integer</code> between 1 and 12, both\n             inclusive, representing the month component in the local value of <code>$arg</code>.\n          </p><p xmlns:e=\"http://www.w3.org/1999/XSL/Spec/ElementSyntax\">The expression <code>fn:month-from-date(xs:date(\"1999-05-31-05:00\"))</code> returns <code>5</code>.</p><p xmlns:e=\"http://www.w3.org/1999/XSL/Spec/ElementSyntax\">The expression <code>fn:month-from-date(xs:date(\"2000-01-01+05:00\"))</code> returns <code>1</code>.</p></div>\n", "summary" : "<p>  Returns the month component of an  xs:date .</p>", "annotation_str" : "", "annotations" : [  ], "updating" : false, "parameters" : [ { "name" : "arg", "type" : "xs:date", "occurrence" : "?", "description" : "" } ], "returns" : { "type" : "xs:integer?", "description" : "" }, "errors" : [  ] }, { "isDocumented" : true, "arity" : 1, "name" : "months-from-duration", "qname" : "fn:months-from-duration", "signature" : "($arg as xs:duration?) as xs:integer? external", "description" : " <div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"><p xmlns:e=\"http://www.w3.org/1999/XSL/Spec/ElementSyntax\">Returns the number of months in a duration.</p><p xmlns:e=\"http://www.w3.org/1999/XSL/Spec/ElementSyntax\"><example role=\"signature\"><proto name=\"months-from-duration\" return-type=\"xs:integer?\" isOp=\"no\" prefix=\"fn\" returnEmptyOk=\"no\" returnSeq=\"no\" returnVaries=\"no\" isSchema=\"no\" isDatatype=\"no\" isSpecial=\"no\"><arg name=\"arg\" type=\"xs:duration?\"/></proto></example></p><p xmlns:e=\"http://www.w3.org/1999/XSL/Spec/ElementSyntax\">This function is <termref def=\"dt-deterministic\">deterministic</termref>, <termref def=\"dt-context-independent\">context-independent</termref>,  and <termref def=\"dt-focus-independent\">focus-independent</termref>. </p><p xmlns:e=\"http://www.w3.org/1999/XSL/Spec/ElementSyntax\">If <code>$arg</code> is the empty sequence, the function returns the empty sequence.</p><p xmlns:e=\"http://www.w3.org/1999/XSL/Spec/ElementSyntax\">Otherwise, the function returns an <code>xs:integer</code> representing the months\n             component in the value of <code>$arg</code>. The result is obtained by casting\n                <code>$arg</code> to an <code>xs:yearMonthDuration</code> (see <specref ref=\"casting-to-durations\"/>) and then computing the months component as described in\n                <specref ref=\"canonical-yearMonthDuration\"/>.</p><p xmlns:e=\"http://www.w3.org/1999/XSL/Spec/ElementSyntax\">If <code>$arg</code> is a negative duration then the result will be negative..</p><p xmlns:e=\"http://www.w3.org/1999/XSL/Spec/ElementSyntax\">If <code>$arg</code> is an <code>xs:dayTimeDuration</code> the function returns 0.</p><p xmlns:e=\"http://www.w3.org/1999/XSL/Spec/ElementSyntax\">The expression <code>fn:months-from-duration(xs:yearMonthDuration(\"P20Y15M\"))</code> returns <code>3</code>.</p><p xmlns:e=\"http://www.w3.org/1999/XSL/Spec/ElementSyntax\">The expression <code>fn:months-from-duration(xs:yearMonthDuration(\"-P20Y18M\"))</code> returns <code>-6</code>.</p><p xmlns:e=\"http://www.w3.org/1999/XSL/Spec/ElementSyntax\">The expression <code>fn:months-from-duration(xs:dayTimeDuration(\"-P2DT15H0M0S\"))</code> returns <code>0</code>.</p></div>\n", "summary" : "<p>  Returns the number of months in a duration.</p>", "annotation_str" : "", "annotations" : [  ], "updating" : false, "parameters" : [ { "name" : "arg", "type" : "xs:duration", "occurrence" : "?", "description" : "" } ], "returns" : { "type" : "xs:integer?", "description" : "" }, "errors" : [  ] }, { "isDocumented" : true, "arity" : 0, "name" : "name", "qname" : "fn:name", "signature" : "() as xs:string external", "description" : " <div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"><p xmlns:e=\"http://www.w3.org/1999/XSL/Spec/ElementSyntax\">Returns the name of a node, as an <code>xs:string</code> that is either the\n             zero-length string, or has the lexical form of an <code>xs:QName</code>. </p><p xmlns:e=\"http://www.w3.org/1999/XSL/Spec/ElementSyntax\"><example role=\"signature\"><proto name=\"name\" return-type=\"xs:string\" isOp=\"no\" prefix=\"fn\" returnEmptyOk=\"no\" returnSeq=\"no\" returnVaries=\"no\" isSchema=\"no\" isDatatype=\"no\" isSpecial=\"no\"/></example><example role=\"signature\"><proto name=\"name\" return-type=\"xs:string\" isOp=\"no\" prefix=\"fn\" returnEmptyOk=\"no\" returnSeq=\"no\" returnVaries=\"no\" isSchema=\"no\" isDatatype=\"no\" isSpecial=\"no\"><arg name=\"arg\" type=\"node()?\"/></proto></example></p><p xmlns:e=\"http://www.w3.org/1999/XSL/Spec/ElementSyntax\">The zero-argument form of this function is <termref def=\"dt-deterministic\">deterministic</termref>, <termref def=\"dt-context-dependent\">context-dependent</termref>,  and <termref def=\"dt-focus-dependent\">focus-dependent</termref>. </p><p xmlns:e=\"http://www.w3.org/1999/XSL/Spec/ElementSyntax\">The one-argument form of this function is <termref def=\"dt-deterministic\">deterministic</termref>, <termref def=\"dt-context-independent\">context-independent</termref>,  and <termref def=\"dt-focus-independent\">focus-independent</termref>. </p><p xmlns:e=\"http://www.w3.org/1999/XSL/Spec/ElementSyntax\">If the argument is omitted, it defaults to the context item (<code>.</code>). The\n             behavior of the function if the argument is omitted is exactly the same as if the\n             context item had been passed as the argument.</p><p xmlns:e=\"http://www.w3.org/1999/XSL/Spec/ElementSyntax\">If the argument is supplied and is the empty sequence, the function returns the\n             zero-length string.</p><p xmlns:e=\"http://www.w3.org/1999/XSL/Spec/ElementSyntax\">If the node identified by <code>$arg</code> has no name (that is, if it is a document\n             node, a comment, a text node, or a namespace node having no name), the function returns\n             the zero-length string.</p><p xmlns:e=\"http://www.w3.org/1999/XSL/Spec/ElementSyntax\">Otherwise, the function returns the value of the expression\n                <code>fn:string(fn:node-name($arg))</code>.</p><p xmlns:e=\"http://www.w3.org/1999/XSL/Spec/ElementSyntax\">The following errors may be raised when <code>$arg</code> is omitted:</p><ul xmlns:e=\"http://www.w3.org/1999/XSL/Spec/ElementSyntax\"><li><p>If the context\n                item is <xtermref ref=\"dt-absent\" spec=\"DM30\">absent</xtermref>, <phrase diff=\"add\" at=\"M\">dynamic error</phrase>\n                <xerrorref spec=\"XP\" class=\"DY\" code=\"0002\" type=\"dynamic\"/></p></li><li><p>If the context item is not a\n                node, <phrase diff=\"add\" at=\"M\">type error</phrase> <xerrorref spec=\"XP\" class=\"TY\" code=\"0004\" type=\"type\"/>.</p></li></ul></div>\n", "summary" : "<p>  Returns the name of a node, as an  xs:string  that is either the\n             zero-length string, or has the lexical form of an  xs:QName .</p>", "annotation_str" : "", "annotations" : [  ], "updating" : false, "parameters" : [  ], "returns" : { "type" : "xs:string", "description" : "" }, "errors" : [  ] }, { "isDocumented" : true, "arity" : 1, "name" : "name", "qname" : "fn:name", "signature" : "($arg as node()?) as xs:string external", "description" : " <div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"><p xmlns:e=\"http://www.w3.org/1999/XSL/Spec/ElementSyntax\">Returns the name of a node, as an <code>xs:string</code> that is either the\n             zero-length string, or has the lexical form of an <code>xs:QName</code>. </p><p xmlns:e=\"http://www.w3.org/1999/XSL/Spec/ElementSyntax\"><example role=\"signature\"><proto name=\"name\" return-type=\"xs:string\" isOp=\"no\" prefix=\"fn\" returnEmptyOk=\"no\" returnSeq=\"no\" returnVaries=\"no\" isSchema=\"no\" isDatatype=\"no\" isSpecial=\"no\"/></example><example role=\"signature\"><proto name=\"name\" return-type=\"xs:string\" isOp=\"no\" prefix=\"fn\" returnEmptyOk=\"no\" returnSeq=\"no\" returnVaries=\"no\" isSchema=\"no\" isDatatype=\"no\" isSpecial=\"no\"><arg name=\"arg\" type=\"node()?\"/></proto></example></p><p xmlns:e=\"http://www.w3.org/1999/XSL/Spec/ElementSyntax\">The zero-argument form of this function is <termref def=\"dt-deterministic\">deterministic</termref>, <termref def=\"dt-context-dependent\">context-dependent</termref>,  and <termref def=\"dt-focus-dependent\">focus-dependent</termref>. </p><p xmlns:e=\"http://www.w3.org/1999/XSL/Spec/ElementSyntax\">The one-argument form of this function is <termref def=\"dt-deterministic\">deterministic</termref>, <termref def=\"dt-context-independent\">context-independent</termref>,  and <termref def=\"dt-focus-independent\">focus-independent</termref>. </p><p xmlns:e=\"http://www.w3.org/1999/XSL/Spec/ElementSyntax\">If the argument is omitted, it defaults to the context item (<code>.</code>). The\n             behavior of the function if the argument is omitted is exactly the same as if the\n             context item had been passed as the argument.</p><p xmlns:e=\"http://www.w3.org/1999/XSL/Spec/ElementSyntax\">If the argument is supplied and is the empty sequence, the function returns the\n             zero-length string.</p><p xmlns:e=\"http://www.w3.org/1999/XSL/Spec/ElementSyntax\">If the node identified by <code>$arg</code> has no name (that is, if it is a document\n             node, a comment, a text node, or a namespace node having no name), the function returns\n             the zero-length string.</p><p xmlns:e=\"http://www.w3.org/1999/XSL/Spec/ElementSyntax\">Otherwise, the function returns the value of the expression\n                <code>fn:string(fn:node-name($arg))</code>.</p><p xmlns:e=\"http://www.w3.org/1999/XSL/Spec/ElementSyntax\">The following errors may be raised when <code>$arg</code> is omitted:</p><ul xmlns:e=\"http://www.w3.org/1999/XSL/Spec/ElementSyntax\"><li><p>If the context\n                item is <xtermref ref=\"dt-absent\" spec=\"DM30\">absent</xtermref>, <phrase diff=\"add\" at=\"M\">dynamic error</phrase>\n                <xerrorref spec=\"XP\" class=\"DY\" code=\"0002\" type=\"dynamic\"/></p></li><li><p>If the context item is not a\n                node, <phrase diff=\"add\" at=\"M\">type error</phrase> <xerrorref spec=\"XP\" class=\"TY\" code=\"0004\" type=\"type\"/>.</p></li></ul></div>\n", "summary" : "<p>  Returns the name of a node, as an  xs:string  that is either the\n             zero-length string, or has the lexical form of an  xs:QName .</p>", "annotation_str" : "", "annotations" : [  ], "updating" : false, "parameters" : [ { "name" : "arg", "type" : "node()", "occurrence" : "?", "description" : "" } ], "returns" : { "type" : "xs:string", "description" : "" }, "errors" : [  ] }, { "isDocumented" : true, "arity" : 2, "name" : "namespace-uri-for-prefix", "qname" : "fn:namespace-uri-for-prefix", "signature" : "($prefix as xs:string?, $element as element(*)) as xs:anyURI? external", "description" : " <div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"><p xmlns:e=\"http://www.w3.org/1999/XSL/Spec/ElementSyntax\">Returns the namespace URI of one of the in-scope namespaces for\n                <code>$element</code>, identified by its namespace prefix.</p><p xmlns:e=\"http://www.w3.org/1999/XSL/Spec/ElementSyntax\"><example role=\"signature\"><proto name=\"namespace-uri-for-prefix\" return-type=\"xs:anyURI?\" isOp=\"no\" prefix=\"fn\" returnEmptyOk=\"no\" returnSeq=\"no\" returnVaries=\"no\" isSchema=\"no\" isDatatype=\"no\" isSpecial=\"no\"><arg name=\"prefix\" type=\"xs:string?\"/><arg name=\"element\" type=\"element()\"/></proto></example></p><p xmlns:e=\"http://www.w3.org/1999/XSL/Spec/ElementSyntax\">This function is <termref def=\"dt-deterministic\">deterministic</termref>, <termref def=\"dt-context-independent\">context-independent</termref>,  and <termref def=\"dt-focus-independent\">focus-independent</termref>. </p><p xmlns:e=\"http://www.w3.org/1999/XSL/Spec/ElementSyntax\">If <code>$element</code> has an in-scope namespace whose namespace prefix is equal to\n                <code>$prefix</code>, the function returns the namespace URI of that namespace.</p><p xmlns:e=\"http://www.w3.org/1999/XSL/Spec/ElementSyntax\">If <code>$element</code> has no in-scope namespace whose namespace prefix is equal to\n             <code>$prefix</code>, the function returns the empty sequence.</p><p xmlns:e=\"http://www.w3.org/1999/XSL/Spec/ElementSyntax\" diff=\"chg\" at=\"I\">If <code>$prefix</code> is the zero-length string or the empty\n             sequence, then if <code>$element</code> has a default namespace (that is, a namespace\n             node with no name), the function returns the namespace URI of the default namespace. If\n                <code>$element</code> has no default namespace, the function returns the empty\n             sequence.</p><p xmlns:e=\"http://www.w3.org/1999/XSL/Spec/ElementSyntax\">Prefixes are equal only if their Unicode codepoints match exactly.</p><p xmlns:e=\"http://www.w3.org/1999/XSL/Spec/ElementSyntax\">let <code>$e</code> := <eg xml:space=\"preserve\">\n &lt;z:a xmlns=\"http://example.org/one\" xmlns:z=\"http://example.org/two\"&gt;\n   &lt;b xmlns=\"\"/&gt;\n &lt;/z:a&gt;</eg></p><p xmlns:e=\"http://www.w3.org/1999/XSL/Spec/ElementSyntax\">The expression <code>fn:namespace-uri-for-prefix(\"z\", $e)</code> returns <code>\"http://example.org/two\"</code>.</p><p xmlns:e=\"http://www.w3.org/1999/XSL/Spec/ElementSyntax\">The expression <code>fn:namespace-uri-for-prefix(\"\", $e)</code> returns <code>\"http://example.org/one\"</code>.</p><p xmlns:e=\"http://www.w3.org/1999/XSL/Spec/ElementSyntax\">The expression <code>fn:namespace-uri-for-prefix((), $e)</code> returns <code>\"http://example.org/one\"</code>.</p><p xmlns:e=\"http://www.w3.org/1999/XSL/Spec/ElementSyntax\">The expression <code>fn:namespace-uri-for-prefix(\"xml\", $e)</code> returns <code>\"http://www.w3.org/XML/1998/namespace\"</code>.</p><p xmlns:e=\"http://www.w3.org/1999/XSL/Spec/ElementSyntax\">The expression <code>fn:namespace-uri-for-prefix(\"xml\", $e)</code> returns <code>\"http://www.w3.org/XML/1998/namespace\"</code>.</p></div>\n", "summary" : "<p>  Returns the namespace URI of one of the in-scope namespaces for\n                 $element , identified by its namespace prefix.</p>", "annotation_str" : "", "annotations" : [  ], "updating" : false, "parameters" : [ { "name" : "prefix", "type" : "xs:string", "occurrence" : "?", "description" : "" }, { "name" : "element", "type" : "element(*)", "occurrence" : null, "description" : "" } ], "returns" : { "type" : "xs:anyURI?", "description" : "" }, "errors" : [  ] }, { "isDocumented" : true, "arity" : 1, "name" : "namespace-uri-from-QName", "qname" : "fn:namespace-uri-from-QName", "signature" : "($arg as xs:QName?) as xs:anyURI? external", "description" : " <div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"><p xmlns:e=\"http://www.w3.org/1999/XSL/Spec/ElementSyntax\">Returns the namespace URI part of the supplied QName.</p><p xmlns:e=\"http://www.w3.org/1999/XSL/Spec/ElementSyntax\"><example role=\"signature\"><proto name=\"namespace-uri-from-QName\" return-type=\"xs:anyURI?\" isOp=\"no\" prefix=\"fn\" returnEmptyOk=\"no\" returnSeq=\"no\" returnVaries=\"no\" isSchema=\"no\" isDatatype=\"no\" isSpecial=\"no\"><arg name=\"arg\" type=\"xs:QName?\"/></proto></example></p><p xmlns:e=\"http://www.w3.org/1999/XSL/Spec/ElementSyntax\">This function is <termref def=\"dt-deterministic\">deterministic</termref>, <termref def=\"dt-context-independent\">context-independent</termref>,  and <termref def=\"dt-focus-independent\">focus-independent</termref>. </p><p xmlns:e=\"http://www.w3.org/1999/XSL/Spec/ElementSyntax\">If <code>$arg</code> is the empty sequence the function returns the empty sequence.</p><p xmlns:e=\"http://www.w3.org/1999/XSL/Spec/ElementSyntax\">Otherwise, the function returns an <code>xs:anyURI</code> representing the namespace URI\n             part of <code>$arg</code>.</p><p xmlns:e=\"http://www.w3.org/1999/XSL/Spec/ElementSyntax\">If <code>$arg</code> is in no namespace, the function returns the zero-length\n                <code>xs:anyURI</code>.</p><p xmlns:e=\"http://www.w3.org/1999/XSL/Spec/ElementSyntax\">The expression <code>fn:namespace-uri-from-QName(fn:QName(\"http://www.example.com/example\",\n                   \"person\"))</code> returns <code>xs:anyURI(\"http://www.example.com/example\")</code>.</p></div>\n", "summary" : "<p>  Returns the namespace URI part of the supplied QName.</p>", "annotation_str" : "", "annotations" : [  ], "updating" : false, "parameters" : [ { "name" : "arg", "type" : "xs:QName", "occurrence" : "?", "description" : "" } ], "returns" : { "type" : "xs:anyURI?", "description" : "" }, "errors" : [  ] }, { "isDocumented" : true, "arity" : 0, "name" : "namespace-uri", "qname" : "fn:namespace-uri", "signature" : "() as xs:anyURI external", "description" : " <div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"><p xmlns:e=\"http://www.w3.org/1999/XSL/Spec/ElementSyntax\" diff=\"chg\" at=\"A-E15\">Returns the namespace URI part of the name of\n                <code>$arg</code>, as an <code>xs:anyURI</code> value.</p><p xmlns:e=\"http://www.w3.org/1999/XSL/Spec/ElementSyntax\"><example role=\"signature\"><proto name=\"namespace-uri\" return-type=\"xs:anyURI\" isOp=\"no\" prefix=\"fn\" returnEmptyOk=\"no\" returnSeq=\"no\" returnVaries=\"no\" isSchema=\"no\" isDatatype=\"no\" isSpecial=\"no\"/></example><example role=\"signature\"><proto name=\"namespace-uri\" return-type=\"xs:anyURI\" isOp=\"no\" prefix=\"fn\" returnEmptyOk=\"no\" returnSeq=\"no\" returnVaries=\"no\" isSchema=\"no\" isDatatype=\"no\" isSpecial=\"no\"><arg name=\"arg\" type=\"node()?\"/></proto></example></p><p xmlns:e=\"http://www.w3.org/1999/XSL/Spec/ElementSyntax\">The zero-argument form of this function is <termref def=\"dt-deterministic\">deterministic</termref>, <termref def=\"dt-context-dependent\">context-dependent</termref>,  and <termref def=\"dt-focus-dependent\">focus-dependent</termref>. </p><p xmlns:e=\"http://www.w3.org/1999/XSL/Spec/ElementSyntax\">The one-argument form of this function is <termref def=\"dt-deterministic\">deterministic</termref>, <termref def=\"dt-context-independent\">context-independent</termref>,  and <termref def=\"dt-focus-independent\">focus-independent</termref>. </p><p xmlns:e=\"http://www.w3.org/1999/XSL/Spec/ElementSyntax\">If the argument is omitted, it defaults to the context node (<code>.</code>). The\n             behavior of the function if the argument is omitted is exactly the same as if the\n             context item had been passed as the argument.</p><p xmlns:e=\"http://www.w3.org/1999/XSL/Spec/ElementSyntax\">If the node identified by <code>$arg</code> is neither an element nor an attribute node,\n             or if it is an element or attribute node whose expanded-QName (as determined by the\n                <code>dm:node-name</code> accessor in the <xspecref spec=\"DM30\" ref=\"dm-node-name\"/>)\n             is in no namespace, then the function returns the zero-length <code>xs:anyURI</code>\n             value.</p><p xmlns:e=\"http://www.w3.org/1999/XSL/Spec/ElementSyntax\">Otherwise, the result will be the namespace URI part of the expanded-QName of the node\n             identified by <code>$arg</code>, as determined by the <code>dm:node-name</code> accessor\n             defined in <xspecref spec=\"DM30\" ref=\"dm-node-name\"/>), returned as an\n                <code>xs:anyURI</code> value.</p><p xmlns:e=\"http://www.w3.org/1999/XSL/Spec/ElementSyntax\">The following errors may be raised when <code>$arg</code> is omitted:</p><ul xmlns:e=\"http://www.w3.org/1999/XSL/Spec/ElementSyntax\"><li><p>If the context\n                item is <xtermref ref=\"dt-absent\" spec=\"DM30\">absent</xtermref>, <phrase diff=\"add\" at=\"M\">dynamic error</phrase>\n                <xerrorref spec=\"XP\" class=\"DY\" code=\"0002\" type=\"dynamic\"/></p></li><li><p>If the context item is not a\n                node, <phrase diff=\"add\" at=\"M\">type error</phrase> <xerrorref spec=\"XP\" class=\"TY\" code=\"0004\" type=\"type\"/>.</p></li></ul></div>\n", "summary" : "<p>  Returns the namespace URI part of the name of\n                 $arg , as an  xs:anyURI  value.</p>", "annotation_str" : "", "annotations" : [  ], "updating" : false, "parameters" : [  ], "returns" : { "type" : "xs:anyURI", "description" : "" }, "errors" : [  ] }, { "isDocumented" : true, "arity" : 1, "name" : "namespace-uri", "qname" : "fn:namespace-uri", "signature" : "($arg as node()?) as xs:anyURI external", "description" : " <div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"><p xmlns:e=\"http://www.w3.org/1999/XSL/Spec/ElementSyntax\" diff=\"chg\" at=\"A-E15\">Returns the namespace URI part of the name of\n                <code>$arg</code>, as an <code>xs:anyURI</code> value.</p><p xmlns:e=\"http://www.w3.org/1999/XSL/Spec/ElementSyntax\"><example role=\"signature\"><proto name=\"namespace-uri\" return-type=\"xs:anyURI\" isOp=\"no\" prefix=\"fn\" returnEmptyOk=\"no\" returnSeq=\"no\" returnVaries=\"no\" isSchema=\"no\" isDatatype=\"no\" isSpecial=\"no\"/></example><example role=\"signature\"><proto name=\"namespace-uri\" return-type=\"xs:anyURI\" isOp=\"no\" prefix=\"fn\" returnEmptyOk=\"no\" returnSeq=\"no\" returnVaries=\"no\" isSchema=\"no\" isDatatype=\"no\" isSpecial=\"no\"><arg name=\"arg\" type=\"node()?\"/></proto></example></p><p xmlns:e=\"http://www.w3.org/1999/XSL/Spec/ElementSyntax\">The zero-argument form of this function is <termref def=\"dt-deterministic\">deterministic</termref>, <termref def=\"dt-context-dependent\">context-dependent</termref>,  and <termref def=\"dt-focus-dependent\">focus-dependent</termref>. </p><p xmlns:e=\"http://www.w3.org/1999/XSL/Spec/ElementSyntax\">The one-argument form of this function is <termref def=\"dt-deterministic\">deterministic</termref>, <termref def=\"dt-context-independent\">context-independent</termref>,  and <termref def=\"dt-focus-independent\">focus-independent</termref>. </p><p xmlns:e=\"http://www.w3.org/1999/XSL/Spec/ElementSyntax\">If the argument is omitted, it defaults to the context node (<code>.</code>). The\n             behavior of the function if the argument is omitted is exactly the same as if the\n             context item had been passed as the argument.</p><p xmlns:e=\"http://www.w3.org/1999/XSL/Spec/ElementSyntax\">If the node identified by <code>$arg</code> is neither an element nor an attribute node,\n             or if it is an element or attribute node whose expanded-QName (as determined by the\n                <code>dm:node-name</code> accessor in the <xspecref spec=\"DM30\" ref=\"dm-node-name\"/>)\n             is in no namespace, then the function returns the zero-length <code>xs:anyURI</code>\n             value.</p><p xmlns:e=\"http://www.w3.org/1999/XSL/Spec/ElementSyntax\">Otherwise, the result will be the namespace URI part of the expanded-QName of the node\n             identified by <code>$arg</code>, as determined by the <code>dm:node-name</code> accessor\n             defined in <xspecref spec=\"DM30\" ref=\"dm-node-name\"/>), returned as an\n                <code>xs:anyURI</code> value.</p><p xmlns:e=\"http://www.w3.org/1999/XSL/Spec/ElementSyntax\">The following errors may be raised when <code>$arg</code> is omitted:</p><ul xmlns:e=\"http://www.w3.org/1999/XSL/Spec/ElementSyntax\"><li><p>If the context\n                item is <xtermref ref=\"dt-absent\" spec=\"DM30\">absent</xtermref>, <phrase diff=\"add\" at=\"M\">dynamic error</phrase>\n                <xerrorref spec=\"XP\" class=\"DY\" code=\"0002\" type=\"dynamic\"/></p></li><li><p>If the context item is not a\n                node, <phrase diff=\"add\" at=\"M\">type error</phrase> <xerrorref spec=\"XP\" class=\"TY\" code=\"0004\" type=\"type\"/>.</p></li></ul></div>\n", "summary" : "<p>  Returns the namespace URI part of the name of\n                 $arg , as an  xs:anyURI  value.</p>", "annotation_str" : "", "annotations" : [  ], "updating" : false, "parameters" : [ { "name" : "arg", "type" : "node()", "occurrence" : "?", "description" : "" } ], "returns" : { "type" : "xs:anyURI", "description" : "" }, "errors" : [  ] }, { "isDocumented" : true, "arity" : 0, "name" : "nilled", "qname" : "fn:nilled", "signature" : "() as xs:boolean external", "description" : " <div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"><p xmlns:e=\"http://www.w3.org/1999/XSL/Spec/ElementSyntax\">Returns true for an element that is <term>nilled</term>.</p><p xmlns:e=\"http://www.w3.org/1999/XSL/Spec/ElementSyntax\"><example role=\"signature\"><proto name=\"nilled\" return-type=\"xs:boolean\" isOp=\"no\" prefix=\"fn\" returnEmptyOk=\"no\" returnSeq=\"no\" returnVaries=\"no\" isSchema=\"no\" isDatatype=\"no\" isSpecial=\"no\"/></example><example role=\"signature\"><proto name=\"nilled\" return-type=\"xs:boolean?\" isOp=\"no\" prefix=\"fn\" returnEmptyOk=\"no\" returnSeq=\"no\" returnVaries=\"no\" isSchema=\"no\" isDatatype=\"no\" isSpecial=\"no\"><arg name=\"arg\" type=\"node()?\"/></proto></example></p><p xmlns:e=\"http://www.w3.org/1999/XSL/Spec/ElementSyntax\">The zero-argument form of this function is <termref def=\"dt-deterministic\">deterministic</termref>, <termref def=\"dt-context-dependent\">context-dependent</termref>,  and <termref def=\"dt-focus-dependent\">focus-dependent</termref>. </p><p xmlns:e=\"http://www.w3.org/1999/XSL/Spec/ElementSyntax\">The one-argument form of this function is <termref def=\"dt-deterministic\">deterministic</termref>, <termref def=\"dt-context-independent\">context-independent</termref>,  and <termref def=\"dt-focus-independent\">focus-independent</termref>. </p><p xmlns:e=\"http://www.w3.org/1999/XSL/Spec/ElementSyntax\">If the argument is omitted, it defaults to the context item (<code>.</code>). The\n             behavior of the function if the argument is omitted is exactly the same as if the\n             context item had been passed as the argument.</p><p xmlns:e=\"http://www.w3.org/1999/XSL/Spec/ElementSyntax\">If <code>$arg</code> is the empty sequence, the function returns the empty sequence.</p><p xmlns:e=\"http://www.w3.org/1999/XSL/Spec/ElementSyntax\">Otherwise the function returns the result of the <code>dm:nilled</code> accessor as\n             defined in <bibref ref=\"xpath-datamodel-30\"/> (see <xspecref spec=\"DM30\" ref=\"dm-nilled\"/>).</p><p xmlns:e=\"http://www.w3.org/1999/XSL/Spec/ElementSyntax\" diff=\"add\" at=\"I\">The following errors may be raised when <code>$arg</code> is omitted:</p><ul xmlns:e=\"http://www.w3.org/1999/XSL/Spec/ElementSyntax\"><li><p>If the context\n                item is <xtermref ref=\"dt-absent\" spec=\"DM30\">absent</xtermref>, <phrase diff=\"add\" at=\"M\">dynamic error</phrase>\n                <xerrorref spec=\"XP\" class=\"DY\" code=\"0002\" type=\"dynamic\"/></p></li><li><p>If the context item is not a\n                node, <phrase diff=\"add\" at=\"M\">type error</phrase> <xerrorref spec=\"XP\" class=\"TY\" code=\"0004\" type=\"type\"/>.</p></li></ul></div>\n", "summary" : "<p>  Returns true for an element that is  nilled .</p>", "annotation_str" : "", "annotations" : [  ], "updating" : false, "parameters" : [  ], "returns" : { "type" : "xs:boolean", "description" : "" }, "errors" : [  ] }, { "isDocumented" : true, "arity" : 1, "name" : "nilled", "qname" : "fn:nilled", "signature" : "($arg as node()?) as xs:boolean? external", "description" : " <div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"><p xmlns:e=\"http://www.w3.org/1999/XSL/Spec/ElementSyntax\">Returns true for an element that is <term>nilled</term>.</p><p xmlns:e=\"http://www.w3.org/1999/XSL/Spec/ElementSyntax\"><example role=\"signature\"><proto name=\"nilled\" return-type=\"xs:boolean\" isOp=\"no\" prefix=\"fn\" returnEmptyOk=\"no\" returnSeq=\"no\" returnVaries=\"no\" isSchema=\"no\" isDatatype=\"no\" isSpecial=\"no\"/></example><example role=\"signature\"><proto name=\"nilled\" return-type=\"xs:boolean?\" isOp=\"no\" prefix=\"fn\" returnEmptyOk=\"no\" returnSeq=\"no\" returnVaries=\"no\" isSchema=\"no\" isDatatype=\"no\" isSpecial=\"no\"><arg name=\"arg\" type=\"node()?\"/></proto></example></p><p xmlns:e=\"http://www.w3.org/1999/XSL/Spec/ElementSyntax\">The zero-argument form of this function is <termref def=\"dt-deterministic\">deterministic</termref>, <termref def=\"dt-context-dependent\">context-dependent</termref>,  and <termref def=\"dt-focus-dependent\">focus-dependent</termref>. </p><p xmlns:e=\"http://www.w3.org/1999/XSL/Spec/ElementSyntax\">The one-argument form of this function is <termref def=\"dt-deterministic\">deterministic</termref>, <termref def=\"dt-context-independent\">context-independent</termref>,  and <termref def=\"dt-focus-independent\">focus-independent</termref>. </p><p xmlns:e=\"http://www.w3.org/1999/XSL/Spec/ElementSyntax\">If the argument is omitted, it defaults to the context item (<code>.</code>). The\n             behavior of the function if the argument is omitted is exactly the same as if the\n             context item had been passed as the argument.</p><p xmlns:e=\"http://www.w3.org/1999/XSL/Spec/ElementSyntax\">If <code>$arg</code> is the empty sequence, the function returns the empty sequence.</p><p xmlns:e=\"http://www.w3.org/1999/XSL/Spec/ElementSyntax\">Otherwise the function returns the result of the <code>dm:nilled</code> accessor as\n             defined in <bibref ref=\"xpath-datamodel-30\"/> (see <xspecref spec=\"DM30\" ref=\"dm-nilled\"/>).</p><p xmlns:e=\"http://www.w3.org/1999/XSL/Spec/ElementSyntax\" diff=\"add\" at=\"I\">The following errors may be raised when <code>$arg</code> is omitted:</p><ul xmlns:e=\"http://www.w3.org/1999/XSL/Spec/ElementSyntax\"><li><p>If the context\n                item is <xtermref ref=\"dt-absent\" spec=\"DM30\">absent</xtermref>, <phrase diff=\"add\" at=\"M\">dynamic error</phrase>\n                <xerrorref spec=\"XP\" class=\"DY\" code=\"0002\" type=\"dynamic\"/></p></li><li><p>If the context item is not a\n                node, <phrase diff=\"add\" at=\"M\">type error</phrase> <xerrorref spec=\"XP\" class=\"TY\" code=\"0004\" type=\"type\"/>.</p></li></ul></div>\n", "summary" : "<p>  Returns true for an element that is  nilled .</p>", "annotation_str" : "", "annotations" : [  ], "updating" : false, "parameters" : [ { "name" : "arg", "type" : "node()", "occurrence" : "?", "description" : "" } ], "returns" : { "type" : "xs:boolean?", "description" : "" }, "errors" : [  ] }, { "isDocumented" : true, "arity" : 0, "name" : "node-name", "qname" : "fn:node-name", "signature" : "() as xs:QName? external", "description" : " <div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"><p xmlns:e=\"http://www.w3.org/1999/XSL/Spec/ElementSyntax\">Returns the name of a node, as an <code>xs:QName</code>.</p><p xmlns:e=\"http://www.w3.org/1999/XSL/Spec/ElementSyntax\"><example role=\"signature\"><proto name=\"node-name\" return-type=\"xs:QName?\" isOp=\"no\" prefix=\"fn\" returnEmptyOk=\"no\" returnSeq=\"no\" returnVaries=\"no\" isSchema=\"no\" isDatatype=\"no\" isSpecial=\"no\"/></example><example role=\"signature\"><proto name=\"node-name\" return-type=\"xs:QName?\" isOp=\"no\" prefix=\"fn\" returnEmptyOk=\"no\" returnSeq=\"no\" returnVaries=\"no\" isSchema=\"no\" isDatatype=\"no\" isSpecial=\"no\"><arg name=\"arg\" type=\"node()?\"/></proto></example></p><p xmlns:e=\"http://www.w3.org/1999/XSL/Spec/ElementSyntax\">The zero-argument form of this function is <termref def=\"dt-deterministic\">deterministic</termref>, <termref def=\"dt-context-dependent\">context-dependent</termref>,  and <termref def=\"dt-focus-dependent\">focus-dependent</termref>. </p><p xmlns:e=\"http://www.w3.org/1999/XSL/Spec/ElementSyntax\">The one-argument form of this function is <termref def=\"dt-deterministic\">deterministic</termref>, <termref def=\"dt-context-independent\">context-independent</termref>,  and <termref def=\"dt-focus-independent\">focus-independent</termref>. </p><p xmlns:e=\"http://www.w3.org/1999/XSL/Spec/ElementSyntax\" diff=\"add\" at=\"F\">If the argument is omitted, it defaults to the context item\n                (<code>.</code>). The behavior of the function if the argument is omitted is exactly\n             the same as if the context item had been passed as the argument.</p><p xmlns:e=\"http://www.w3.org/1999/XSL/Spec/ElementSyntax\">If <code>$arg</code> is the empty sequence, the empty sequence is returned.</p><p xmlns:e=\"http://www.w3.org/1999/XSL/Spec/ElementSyntax\">Otherwise, the function returns the result of the <code>dm:node-name</code> accessor as\n             defined in <bibref ref=\"xpath-datamodel-30\"/> (see <xspecref spec=\"DM30\" ref=\"dm-node-name\"/>).</p><p xmlns:e=\"http://www.w3.org/1999/XSL/Spec/ElementSyntax\" diff=\"add\" at=\"I\">The following errors may be raised when <code>$arg</code> is omitted:</p><ul xmlns:e=\"http://www.w3.org/1999/XSL/Spec/ElementSyntax\"><li><p>If the context\n                item is <xtermref ref=\"dt-absent\" spec=\"DM30\">absent</xtermref>, <phrase diff=\"add\" at=\"M\">dynamic error</phrase>\n                <xerrorref spec=\"XP\" class=\"DY\" code=\"0002\" type=\"dynamic\"/></p></li><li><p>If the context item is not a\n                node, <phrase diff=\"add\" at=\"M\">type error</phrase> <xerrorref spec=\"XP\" class=\"TY\" code=\"0004\" type=\"type\"/>.</p></li></ul></div>\n", "summary" : "<p>  Returns the name of a node, as an  xs:QName .</p>", "annotation_str" : "", "annotations" : [  ], "updating" : false, "parameters" : [  ], "returns" : { "type" : "xs:QName?", "description" : "" }, "errors" : [  ] }, { "isDocumented" : true, "arity" : 1, "name" : "node-name", "qname" : "fn:node-name", "signature" : "($arg as node()?) as xs:QName? external", "description" : " <div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"><p xmlns:e=\"http://www.w3.org/1999/XSL/Spec/ElementSyntax\">Returns the name of a node, as an <code>xs:QName</code>.</p><p xmlns:e=\"http://www.w3.org/1999/XSL/Spec/ElementSyntax\"><example role=\"signature\"><proto name=\"node-name\" return-type=\"xs:QName?\" isOp=\"no\" prefix=\"fn\" returnEmptyOk=\"no\" returnSeq=\"no\" returnVaries=\"no\" isSchema=\"no\" isDatatype=\"no\" isSpecial=\"no\"/></example><example role=\"signature\"><proto name=\"node-name\" return-type=\"xs:QName?\" isOp=\"no\" prefix=\"fn\" returnEmptyOk=\"no\" returnSeq=\"no\" returnVaries=\"no\" isSchema=\"no\" isDatatype=\"no\" isSpecial=\"no\"><arg name=\"arg\" type=\"node()?\"/></proto></example></p><p xmlns:e=\"http://www.w3.org/1999/XSL/Spec/ElementSyntax\">The zero-argument form of this function is <termref def=\"dt-deterministic\">deterministic</termref>, <termref def=\"dt-context-dependent\">context-dependent</termref>,  and <termref def=\"dt-focus-dependent\">focus-dependent</termref>. </p><p xmlns:e=\"http://www.w3.org/1999/XSL/Spec/ElementSyntax\">The one-argument form of this function is <termref def=\"dt-deterministic\">deterministic</termref>, <termref def=\"dt-context-independent\">context-independent</termref>,  and <termref def=\"dt-focus-independent\">focus-independent</termref>. </p><p xmlns:e=\"http://www.w3.org/1999/XSL/Spec/ElementSyntax\" diff=\"add\" at=\"F\">If the argument is omitted, it defaults to the context item\n                (<code>.</code>). The behavior of the function if the argument is omitted is exactly\n             the same as if the context item had been passed as the argument.</p><p xmlns:e=\"http://www.w3.org/1999/XSL/Spec/ElementSyntax\">If <code>$arg</code> is the empty sequence, the empty sequence is returned.</p><p xmlns:e=\"http://www.w3.org/1999/XSL/Spec/ElementSyntax\">Otherwise, the function returns the result of the <code>dm:node-name</code> accessor as\n             defined in <bibref ref=\"xpath-datamodel-30\"/> (see <xspecref spec=\"DM30\" ref=\"dm-node-name\"/>).</p><p xmlns:e=\"http://www.w3.org/1999/XSL/Spec/ElementSyntax\" diff=\"add\" at=\"I\">The following errors may be raised when <code>$arg</code> is omitted:</p><ul xmlns:e=\"http://www.w3.org/1999/XSL/Spec/ElementSyntax\"><li><p>If the context\n                item is <xtermref ref=\"dt-absent\" spec=\"DM30\">absent</xtermref>, <phrase diff=\"add\" at=\"M\">dynamic error</phrase>\n                <xerrorref spec=\"XP\" class=\"DY\" code=\"0002\" type=\"dynamic\"/></p></li><li><p>If the context item is not a\n                node, <phrase diff=\"add\" at=\"M\">type error</phrase> <xerrorref spec=\"XP\" class=\"TY\" code=\"0004\" type=\"type\"/>.</p></li></ul></div>\n", "summary" : "<p>  Returns the name of a node, as an  xs:QName .</p>", "annotation_str" : "", "annotations" : [  ], "updating" : false, "parameters" : [ { "name" : "arg", "type" : "node()", "occurrence" : "?", "description" : "" } ], "returns" : { "type" : "xs:QName?", "description" : "" }, "errors" : [  ] }, { "isDocumented" : true, "arity" : 0, "name" : "normalize-space", "qname" : "fn:normalize-space", "signature" : "() as xs:string external", "description" : " <div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"><p xmlns:e=\"http://www.w3.org/1999/XSL/Spec/ElementSyntax\">Returns the value of <code>$arg</code> with leading and trailing whitespace\n             removed, and sequences of internal whitespace reduced to a single space character.</p><p xmlns:e=\"http://www.w3.org/1999/XSL/Spec/ElementSyntax\"><example role=\"signature\"><proto name=\"normalize-space\" return-type=\"xs:string\" isOp=\"no\" prefix=\"fn\" returnEmptyOk=\"no\" returnSeq=\"no\" returnVaries=\"no\" isSchema=\"no\" isDatatype=\"no\" isSpecial=\"no\"/></example><example role=\"signature\"><proto name=\"normalize-space\" return-type=\"xs:string\" isOp=\"no\" prefix=\"fn\" returnEmptyOk=\"no\" returnSeq=\"no\" returnVaries=\"no\" isSchema=\"no\" isDatatype=\"no\" isSpecial=\"no\"><arg name=\"arg\" type=\"xs:string?\"/></proto></example></p><p xmlns:e=\"http://www.w3.org/1999/XSL/Spec/ElementSyntax\">The zero-argument form of this function is <termref def=\"dt-deterministic\">deterministic</termref>, <termref def=\"dt-context-dependent\">context-dependent</termref>,  and <termref def=\"dt-focus-dependent\">focus-dependent</termref>. </p><p xmlns:e=\"http://www.w3.org/1999/XSL/Spec/ElementSyntax\">The one-argument form of this function is <termref def=\"dt-deterministic\">deterministic</termref>, <termref def=\"dt-context-independent\">context-independent</termref>,  and <termref def=\"dt-focus-independent\">focus-independent</termref>. </p><p xmlns:e=\"http://www.w3.org/1999/XSL/Spec/ElementSyntax\">If the value of <code>$arg</code> is the empty sequence, the function returns the\n             zero-length string.</p><p xmlns:e=\"http://www.w3.org/1999/XSL/Spec/ElementSyntax\">The function returns a string constructed by stripping leading and trailing whitespace\n             from the value of <code>$arg</code>, and replacing sequences of one or more adjacent\n             whitespace characters with a single space, <code>#x20</code>.</p><p xmlns:e=\"http://www.w3.org/1999/XSL/Spec/ElementSyntax\">The whitespace characters are defined in the metasymbol S (Production 3) of <bibref ref=\"REC-xml\"/>.</p><p xmlns:e=\"http://www.w3.org/1999/XSL/Spec/ElementSyntax\" diff=\"chg\" at=\"A-E14\">If no argument is supplied, then <code>$arg</code> defaults to the\n             string value (calculated using <code>fn:string</code>) of the context item\n                (<code>.</code>). </p><p xmlns:e=\"http://www.w3.org/1999/XSL/Spec/ElementSyntax\">If no argument is supplied and the context item is <xtermref ref=\"dt-absent\" spec=\"DM30\">absent</xtermref> then a <phrase diff=\"add\" at=\"dynamic\">dynamic</phrase> error is raised: <xerrorref spec=\"XP\" class=\"DY\" code=\"0002\" type=\"dynamic\"/>.</p></div>\n", "summary" : "<p>  Returns the value of  $arg  with leading and trailing whitespace\n             removed, and sequences of internal whitespace reduced to a single space character.</p>", "annotation_str" : "", "annotations" : [  ], "updating" : false, "parameters" : [  ], "returns" : { "type" : "xs:string", "description" : "" }, "errors" : [  ] }, { "isDocumented" : true, "arity" : 1, "name" : "normalize-space", "qname" : "fn:normalize-space", "signature" : "($arg as xs:string?) as xs:string external", "description" : " <div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"><p xmlns:e=\"http://www.w3.org/1999/XSL/Spec/ElementSyntax\">Returns the value of <code>$arg</code> with leading and trailing whitespace\n             removed, and sequences of internal whitespace reduced to a single space character.</p><p xmlns:e=\"http://www.w3.org/1999/XSL/Spec/ElementSyntax\"><example role=\"signature\"><proto name=\"normalize-space\" return-type=\"xs:string\" isOp=\"no\" prefix=\"fn\" returnEmptyOk=\"no\" returnSeq=\"no\" returnVaries=\"no\" isSchema=\"no\" isDatatype=\"no\" isSpecial=\"no\"/></example><example role=\"signature\"><proto name=\"normalize-space\" return-type=\"xs:string\" isOp=\"no\" prefix=\"fn\" returnEmptyOk=\"no\" returnSeq=\"no\" returnVaries=\"no\" isSchema=\"no\" isDatatype=\"no\" isSpecial=\"no\"><arg name=\"arg\" type=\"xs:string?\"/></proto></example></p><p xmlns:e=\"http://www.w3.org/1999/XSL/Spec/ElementSyntax\">The zero-argument form of this function is <termref def=\"dt-deterministic\">deterministic</termref>, <termref def=\"dt-context-dependent\">context-dependent</termref>,  and <termref def=\"dt-focus-dependent\">focus-dependent</termref>. </p><p xmlns:e=\"http://www.w3.org/1999/XSL/Spec/ElementSyntax\">The one-argument form of this function is <termref def=\"dt-deterministic\">deterministic</termref>, <termref def=\"dt-context-independent\">context-independent</termref>,  and <termref def=\"dt-focus-independent\">focus-independent</termref>. </p><p xmlns:e=\"http://www.w3.org/1999/XSL/Spec/ElementSyntax\">If the value of <code>$arg</code> is the empty sequence, the function returns the\n             zero-length string.</p><p xmlns:e=\"http://www.w3.org/1999/XSL/Spec/ElementSyntax\">The function returns a string constructed by stripping leading and trailing whitespace\n             from the value of <code>$arg</code>, and replacing sequences of one or more adjacent\n             whitespace characters with a single space, <code>#x20</code>.</p><p xmlns:e=\"http://www.w3.org/1999/XSL/Spec/ElementSyntax\">The whitespace characters are defined in the metasymbol S (Production 3) of <bibref ref=\"REC-xml\"/>.</p><p xmlns:e=\"http://www.w3.org/1999/XSL/Spec/ElementSyntax\" diff=\"chg\" at=\"A-E14\">If no argument is supplied, then <code>$arg</code> defaults to the\n             string value (calculated using <code>fn:string</code>) of the context item\n                (<code>.</code>). </p><p xmlns:e=\"http://www.w3.org/1999/XSL/Spec/ElementSyntax\">If no argument is supplied and the context item is <xtermref ref=\"dt-absent\" spec=\"DM30\">absent</xtermref> then a <phrase diff=\"add\" at=\"dynamic\">dynamic</phrase> error is raised: <xerrorref spec=\"XP\" class=\"DY\" code=\"0002\" type=\"dynamic\"/>.</p></div>\n", "summary" : "<p>  Returns the value of  $arg  with leading and trailing whitespace\n             removed, and sequences of internal whitespace reduced to a single space character.</p>", "annotation_str" : "", "annotations" : [  ], "updating" : false, "parameters" : [ { "name" : "arg", "type" : "xs:string", "occurrence" : "?", "description" : "" } ], "returns" : { "type" : "xs:string", "description" : "" }, "errors" : [  ] }, { "isDocumented" : true, "arity" : 1, "name" : "normalize-unicode", "qname" : "fn:normalize-unicode", "signature" : "($arg as xs:string?) as xs:string external", "description" : " <div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"><p xmlns:e=\"http://www.w3.org/1999/XSL/Spec/ElementSyntax\">Returns the value of <code>$arg</code> after applying Unicode\n             normalization.</p><p xmlns:e=\"http://www.w3.org/1999/XSL/Spec/ElementSyntax\"><example role=\"signature\"><proto name=\"normalize-unicode\" return-type=\"xs:string\" isOp=\"no\" prefix=\"fn\" returnEmptyOk=\"no\" returnSeq=\"no\" returnVaries=\"no\" isSchema=\"no\" isDatatype=\"no\" isSpecial=\"no\"><arg name=\"arg\" type=\"xs:string?\"/></proto></example><example role=\"signature\"><proto name=\"normalize-unicode\" return-type=\"xs:string\" isOp=\"no\" prefix=\"fn\" returnEmptyOk=\"no\" returnSeq=\"no\" returnVaries=\"no\" isSchema=\"no\" isDatatype=\"no\" isSpecial=\"no\"><arg name=\"arg\" type=\"xs:string?\"/><arg name=\"normalizationForm\" type=\"xs:string\"/></proto></example></p><p xmlns:e=\"http://www.w3.org/1999/XSL/Spec/ElementSyntax\">This function is <termref def=\"dt-deterministic\">deterministic</termref>, <termref def=\"dt-context-independent\">context-independent</termref>,  and <termref def=\"dt-focus-independent\">focus-independent</termref>. </p><p xmlns:e=\"http://www.w3.org/1999/XSL/Spec/ElementSyntax\">If the value of <code>$arg</code> is the empty sequence, the function returns the\n             zero-length string.</p><p xmlns:e=\"http://www.w3.org/1999/XSL/Spec/ElementSyntax\">If the single-argument version of the function is used, the result is the same as\n             calling the two-argument version with <code>$normalizationForm</code> set to the string\n             \"NFC\".</p><p xmlns:e=\"http://www.w3.org/1999/XSL/Spec/ElementSyntax\">Otherwise, the function returns the value of <code>$arg</code> normalized according to\n             the rules of the normalization form identified by the value of\n                <code>$normalizationForm</code>.</p><p xmlns:e=\"http://www.w3.org/1999/XSL/Spec/ElementSyntax\">The effective value of <code>$normalizationForm</code> is the value of the expression\n                <code>fn:upper-case(fn:normalize-space($normalizationForm))</code>.</p><p xmlns:e=\"http://www.w3.org/1999/XSL/Spec/ElementSyntax\" diff=\"del\" at=\"D\">See <bibref ref=\"charmod-normalization\"/> for a description of the\n             normalization forms.</p><ulist xmlns:e=\"http://www.w3.org/1999/XSL/Spec/ElementSyntax\"><item><p>If the effective value of <code>$normalizationForm</code> is <quote>NFC</quote>,\n                   then the function returns the value of <code>$arg</code> converted to Unicode\n                   Normalization Form C (NFC).</p></item><item><p>If the effective value of <code>$normalizationForm</code> is <quote>NFD</quote>,\n                   then the function returns the value of <code>$arg</code> converted to Unicode\n                   Normalization Form D (NFD).</p></item><item><p>If the effective value of <code>$normalizationForm</code> is <quote>NFKC</quote>,\n                   then the function returns the value of <code>$arg</code> in Unicode Normalization\n                   Form KC (NFKC).</p></item><item><p>If the effective value of <code>$normalizationForm</code> is <quote>NFKD</quote>,\n                   then the function returns the value of <code>$arg</code> converted to Unicode\n                   Normalization Form KD (NFKD).</p></item><item><p>If the effective value of <code>$normalizationForm</code> is\n                      <quote>FULLY-NORMALIZED</quote>, then the function returns the value of\n                      <code>$arg</code> converted to fully normalized form. </p></item><item><p>If the effective value of <code>$normalizationForm</code> is the zero-length\n                   string, no normalization is performed and <code>$arg</code> is returned.</p></item></ulist><p xmlns:e=\"http://www.w3.org/1999/XSL/Spec/ElementSyntax\" diff=\"add\" at=\"D\">Normalization forms NFC, NFD, NFKC, and NFKD, and the algorithms to be\n             used for converting a string to each of these forms, are defined in <bibref ref=\"Unicode-Normalization\"/>.</p><p xmlns:e=\"http://www.w3.org/1999/XSL/Spec/ElementSyntax\" diff=\"add\" at=\"D\">The motivation for normalization form FULLY-NORMALIZED is explained in\n                <bibref ref=\"charmod-normalization\"/>. However, as that specification did not\n             progress beyond working draft status, the normative specification is as follows:</p><ulist xmlns:e=\"http://www.w3.org/1999/XSL/Spec/ElementSyntax\" diff=\"add\" at=\"D\"><item><p>A string is <term>fully-normalized</term> if (a) it is in normalization form NFC\n                   as defined in <bibref ref=\"Unicode-Normalization\"/>, and (b) it does not start\n                   with a composing character.</p></item><item><p>A composing character is a character that is one or both of the following:</p><ulist><item><p>the second character in the canonical decomposition mapping of some\n                         character that is not listed in the Composition Exclusion Table defined in\n                            <bibref ref=\"Unicode-Normalization\"/>;</p></item><item><p>of non-zero canonical combining class (as defined in <bibref ref=\"Unicode\"/>).</p></item></ulist></item><item><p>A string is converted to FULLY-NORMALIZED form as follows:</p><ulist><item><p>if the first character in the string is a composing character, prepend a\n                         single space (x20);</p></item><item><p>convert the resulting string to normalization form NFC.</p></item></ulist></item></ulist><p xmlns:e=\"http://www.w3.org/1999/XSL/Spec/ElementSyntax\" diff=\"add\" At=\"L\">Conforming implementations <rfc2119>must</rfc2119> support normalization form \"NFC\" and\n                <rfc2119>may</rfc2119> support normalization forms \"NFD\", \"NFKC\", \"NFKD\", and\n             \"FULLY-NORMALIZED\". They <rfc2119>may</rfc2119> also support other normalization forms\n             with <termref def=\"implementation-defined\">implementation-defined</termref> semantics. </p><p xmlns:e=\"http://www.w3.org/1999/XSL/Spec/ElementSyntax\" diff=\"add\" at=\"L\">It is <termref def=\"dt-implementation-defined\">implementation-defined</termref> which version of\n             Unicode (and therefore, of the normalization algorithms and their underlying\n             data) is supported by the implementation. See <bibref ref=\"Unicode-Normalization\"/> for details of the\n             stability policy regarding changes to the normalization rules in future\n             versions of Unicode. If the input string contains codepoints that are\n             unassigned in the relevant version of Unicode, or for which no normalization\n             rules are defined, the <code>fn:normalize-unicode</code> function leaves such codepoints\n             unchanged. If the implementation supports the requested normalization form then\n             it <rfc2119>must</rfc2119> be able to handle every input string without raising an error.</p><p xmlns:e=\"http://www.w3.org/1999/XSL/Spec/ElementSyntax\">A <phrase diff=\"add\" at=\"L\">dynamic</phrase> error is raised <errorref class=\"CH\" code=\"0003\"/> if the effective value of the\n                <code>$normalizationForm</code> argument is not one of the values supported by the\n             implementation.</p></div>\n", "summary" : "<p>  Returns the value of  $arg  after applying Unicode\n             normalization.</p>", "annotation_str" : "", "annotations" : [  ], "updating" : false, "parameters" : [ { "name" : "arg", "type" : "xs:string", "occurrence" : "?", "description" : "" } ], "returns" : { "type" : "xs:string", "description" : "" }, "errors" : [  ] }, { "isDocumented" : true, "arity" : 2, "name" : "normalize-unicode", "qname" : "fn:normalize-unicode", "signature" : "($arg as xs:string?, $normalizationForm as xs:string) as xs:string external", "description" : " <div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"><p xmlns:e=\"http://www.w3.org/1999/XSL/Spec/ElementSyntax\">Returns the value of <code>$arg</code> after applying Unicode\n             normalization.</p><p xmlns:e=\"http://www.w3.org/1999/XSL/Spec/ElementSyntax\"><example role=\"signature\"><proto name=\"normalize-unicode\" return-type=\"xs:string\" isOp=\"no\" prefix=\"fn\" returnEmptyOk=\"no\" returnSeq=\"no\" returnVaries=\"no\" isSchema=\"no\" isDatatype=\"no\" isSpecial=\"no\"><arg name=\"arg\" type=\"xs:string?\"/></proto></example><example role=\"signature\"><proto name=\"normalize-unicode\" return-type=\"xs:string\" isOp=\"no\" prefix=\"fn\" returnEmptyOk=\"no\" returnSeq=\"no\" returnVaries=\"no\" isSchema=\"no\" isDatatype=\"no\" isSpecial=\"no\"><arg name=\"arg\" type=\"xs:string?\"/><arg name=\"normalizationForm\" type=\"xs:string\"/></proto></example></p><p xmlns:e=\"http://www.w3.org/1999/XSL/Spec/ElementSyntax\">This function is <termref def=\"dt-deterministic\">deterministic</termref>, <termref def=\"dt-context-independent\">context-independent</termref>,  and <termref def=\"dt-focus-independent\">focus-independent</termref>. </p><p xmlns:e=\"http://www.w3.org/1999/XSL/Spec/ElementSyntax\">If the value of <code>$arg</code> is the empty sequence, the function returns the\n             zero-length string.</p><p xmlns:e=\"http://www.w3.org/1999/XSL/Spec/ElementSyntax\">If the single-argument version of the function is used, the result is the same as\n             calling the two-argument version with <code>$normalizationForm</code> set to the string\n             \"NFC\".</p><p xmlns:e=\"http://www.w3.org/1999/XSL/Spec/ElementSyntax\">Otherwise, the function returns the value of <code>$arg</code> normalized according to\n             the rules of the normalization form identified by the value of\n                <code>$normalizationForm</code>.</p><p xmlns:e=\"http://www.w3.org/1999/XSL/Spec/ElementSyntax\">The effective value of <code>$normalizationForm</code> is the value of the expression\n                <code>fn:upper-case(fn:normalize-space($normalizationForm))</code>.</p><p xmlns:e=\"http://www.w3.org/1999/XSL/Spec/ElementSyntax\" diff=\"del\" at=\"D\">See <bibref ref=\"charmod-normalization\"/> for a description of the\n             normalization forms.</p><ulist xmlns:e=\"http://www.w3.org/1999/XSL/Spec/ElementSyntax\"><item><p>If the effective value of <code>$normalizationForm</code> is <quote>NFC</quote>,\n                   then the function returns the value of <code>$arg</code> converted to Unicode\n                   Normalization Form C (NFC).</p></item><item><p>If the effective value of <code>$normalizationForm</code> is <quote>NFD</quote>,\n                   then the function returns the value of <code>$arg</code> converted to Unicode\n                   Normalization Form D (NFD).</p></item><item><p>If the effective value of <code>$normalizationForm</code> is <quote>NFKC</quote>,\n                   then the function returns the value of <code>$arg</code> in Unicode Normalization\n                   Form KC (NFKC).</p></item><item><p>If the effective value of <code>$normalizationForm</code> is <quote>NFKD</quote>,\n                   then the function returns the value of <code>$arg</code> converted to Unicode\n                   Normalization Form KD (NFKD).</p></item><item><p>If the effective value of <code>$normalizationForm</code> is\n                      <quote>FULLY-NORMALIZED</quote>, then the function returns the value of\n                      <code>$arg</code> converted to fully normalized form. </p></item><item><p>If the effective value of <code>$normalizationForm</code> is the zero-length\n                   string, no normalization is performed and <code>$arg</code> is returned.</p></item></ulist><p xmlns:e=\"http://www.w3.org/1999/XSL/Spec/ElementSyntax\" diff=\"add\" at=\"D\">Normalization forms NFC, NFD, NFKC, and NFKD, and the algorithms to be\n             used for converting a string to each of these forms, are defined in <bibref ref=\"Unicode-Normalization\"/>.</p><p xmlns:e=\"http://www.w3.org/1999/XSL/Spec/ElementSyntax\" diff=\"add\" at=\"D\">The motivation for normalization form FULLY-NORMALIZED is explained in\n                <bibref ref=\"charmod-normalization\"/>. However, as that specification did not\n             progress beyond working draft status, the normative specification is as follows:</p><ulist xmlns:e=\"http://www.w3.org/1999/XSL/Spec/ElementSyntax\" diff=\"add\" at=\"D\"><item><p>A string is <term>fully-normalized</term> if (a) it is in normalization form NFC\n                   as defined in <bibref ref=\"Unicode-Normalization\"/>, and (b) it does not start\n                   with a composing character.</p></item><item><p>A composing character is a character that is one or both of the following:</p><ulist><item><p>the second character in the canonical decomposition mapping of some\n                         character that is not listed in the Composition Exclusion Table defined in\n                            <bibref ref=\"Unicode-Normalization\"/>;</p></item><item><p>of non-zero canonical combining class (as defined in <bibref ref=\"Unicode\"/>).</p></item></ulist></item><item><p>A string is converted to FULLY-NORMALIZED form as follows:</p><ulist><item><p>if the first character in the string is a composing character, prepend a\n                         single space (x20);</p></item><item><p>convert the resulting string to normalization form NFC.</p></item></ulist></item></ulist><p xmlns:e=\"http://www.w3.org/1999/XSL/Spec/ElementSyntax\" diff=\"add\" At=\"L\">Conforming implementations <rfc2119>must</rfc2119> support normalization form \"NFC\" and\n                <rfc2119>may</rfc2119> support normalization forms \"NFD\", \"NFKC\", \"NFKD\", and\n             \"FULLY-NORMALIZED\". They <rfc2119>may</rfc2119> also support other normalization forms\n             with <termref def=\"implementation-defined\">implementation-defined</termref> semantics. </p><p xmlns:e=\"http://www.w3.org/1999/XSL/Spec/ElementSyntax\" diff=\"add\" at=\"L\">It is <termref def=\"dt-implementation-defined\">implementation-defined</termref> which version of\n             Unicode (and therefore, of the normalization algorithms and their underlying\n             data) is supported by the implementation. See <bibref ref=\"Unicode-Normalization\"/> for details of the\n             stability policy regarding changes to the normalization rules in future\n             versions of Unicode. If the input string contains codepoints that are\n             unassigned in the relevant version of Unicode, or for which no normalization\n             rules are defined, the <code>fn:normalize-unicode</code> function leaves such codepoints\n             unchanged. If the implementation supports the requested normalization form then\n             it <rfc2119>must</rfc2119> be able to handle every input string without raising an error.</p><p xmlns:e=\"http://www.w3.org/1999/XSL/Spec/ElementSyntax\">A <phrase diff=\"add\" at=\"L\">dynamic</phrase> error is raised <errorref class=\"CH\" code=\"0003\"/> if the effective value of the\n                <code>$normalizationForm</code> argument is not one of the values supported by the\n             implementation.</p></div>\n", "summary" : "<p>  Returns the value of  $arg  after applying Unicode\n             normalization.</p>", "annotation_str" : "", "annotations" : [  ], "updating" : false, "parameters" : [ { "name" : "arg", "type" : "xs:string", "occurrence" : "?", "description" : "" }, { "name" : "normalizationForm", "type" : "xs:string", "occurrence" : null, "description" : "" } ], "returns" : { "type" : "xs:string", "description" : "" }, "errors" : [  ] }, { "isDocumented" : true, "arity" : 1, "name" : "not", "qname" : "fn:not", "signature" : "($arg as item()*) as xs:boolean external", "description" : " <div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"><p xmlns:e=\"http://www.w3.org/1999/XSL/Spec/ElementSyntax\">Returns <code>true</code> if the effective boolean value of <code>$arg</code>\n             is <code>false</code>, or <code>false</code> if it is <code>true</code>.</p><p xmlns:e=\"http://www.w3.org/1999/XSL/Spec/ElementSyntax\"><example role=\"signature\"><proto name=\"not\" return-type=\"xs:boolean\" isOp=\"no\" prefix=\"fn\" returnEmptyOk=\"no\" returnSeq=\"no\" returnVaries=\"no\" isSchema=\"no\" isDatatype=\"no\" isSpecial=\"no\"><arg name=\"arg\" type=\"item()*\"/></proto></example></p><p xmlns:e=\"http://www.w3.org/1999/XSL/Spec/ElementSyntax\">This function is <termref def=\"dt-deterministic\">deterministic</termref>, <termref def=\"dt-context-independent\">context-independent</termref>,  and <termref def=\"dt-focus-independent\">focus-independent</termref>. </p><p xmlns:e=\"http://www.w3.org/1999/XSL/Spec/ElementSyntax\">The value of <code>$arg</code> is first reduced to an effective boolean value by\n             applying the <code>fn:boolean()</code> function. The function returns <code>true</code>\n             if the effective boolean value is <code>false</code>, or <code>false</code> if the\n             effective boolean value is <code>true</code>. </p><p xmlns:e=\"http://www.w3.org/1999/XSL/Spec/ElementSyntax\">The expression <code>fn:not(fn:true())</code> returns <code>false()</code>.</p><p xmlns:e=\"http://www.w3.org/1999/XSL/Spec/ElementSyntax\">The expression <code>fn:not(\"false\")</code> returns <code>false()</code>.</p></div>\n", "summary" : "<p>  Returns  true  if the effective boolean value of  $arg \n             is  false , or  false  if it is  true .</p>", "annotation_str" : "", "annotations" : [  ], "updating" : false, "parameters" : [ { "name" : "arg", "type" : "item()", "occurrence" : "*", "description" : "" } ], "returns" : { "type" : "xs:boolean", "description" : "" }, "errors" : [  ] }, { "isDocumented" : true, "arity" : 0, "name" : "number", "qname" : "fn:number", "signature" : "() as xs:double external", "description" : " <div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"><p xmlns:e=\"http://www.w3.org/1999/XSL/Spec/ElementSyntax\">Returns the value indicated by <code>$arg</code> or, if <code>$arg</code> is\n             not specified, the context item after atomization, converted to an\n                <code>xs:double</code>. </p><p xmlns:e=\"http://www.w3.org/1999/XSL/Spec/ElementSyntax\"><example role=\"signature\"><proto name=\"number\" return-type=\"xs:double\" isOp=\"no\" prefix=\"fn\" returnEmptyOk=\"no\" returnSeq=\"no\" returnVaries=\"no\" isSchema=\"no\" isDatatype=\"no\" isSpecial=\"no\"/></example><example role=\"signature\"><proto name=\"number\" return-type=\"xs:double\" isOp=\"no\" prefix=\"fn\" returnEmptyOk=\"no\" returnSeq=\"no\" returnVaries=\"no\" isSchema=\"no\" isDatatype=\"no\" isSpecial=\"no\"><arg name=\"arg\" type=\"xs:anyAtomicType?\"/></proto></example></p><p xmlns:e=\"http://www.w3.org/1999/XSL/Spec/ElementSyntax\">The zero-argument form of this function is <termref def=\"dt-deterministic\">deterministic</termref>, <termref def=\"dt-context-dependent\">context-dependent</termref>,  and <termref def=\"dt-focus-dependent\">focus-dependent</termref>. </p><p xmlns:e=\"http://www.w3.org/1999/XSL/Spec/ElementSyntax\">The one-argument form of this function is <termref def=\"dt-deterministic\">deterministic</termref>, <termref def=\"dt-context-independent\">context-independent</termref>,  and <termref def=\"dt-focus-independent\">focus-independent</termref>. </p><p xmlns:e=\"http://www.w3.org/1999/XSL/Spec/ElementSyntax\">Calling the zero-argument version of the function is defined to give the same result as\n             calling the single-argument version with the context item (<code>.</code>). That is,\n                <code>fn:number()</code> is equivalent to <code>fn:number(.)</code>, as\n          defined by the rules that follow.</p><p xmlns:e=\"http://www.w3.org/1999/XSL/Spec/ElementSyntax\">If <code>$arg</code> is the empty sequence or if <code>$arg</code> <phrase diff=\"del\" at=\"L\">or the context item</phrase>\n             cannot be converted to an <code>xs:double</code>, the <code>xs:double</code> value\n                <code>NaN</code> is returned. </p><p xmlns:e=\"http://www.w3.org/1999/XSL/Spec/ElementSyntax\">Otherwise, <code>$arg</code> <phrase diff=\"del\" at=\"L\">, or the context item after atomization,</phrase> is converted to an\n                <code>xs:double</code> following the rules of <specref ref=\"casting-to-double\"/>. If\n             the conversion to <code>xs:double</code> fails, the <code>xs:double</code> value\n                <code>NaN</code> is returned.</p><p xmlns:e=\"http://www.w3.org/1999/XSL/Spec/ElementSyntax\">A <phrase diff=\"add\" at=\"M\">dynamic</phrase> error is raised <xerrorref spec=\"XP\" class=\"DY\" code=\"0002\" type=\"dynamic\"/> if\n                <code>$arg</code> is omitted and the context item is <xtermref ref=\"dt-absent\" spec=\"DM30\">absent</xtermref>.</p><p xmlns:e=\"http://www.w3.org/1999/XSL/Spec/ElementSyntax\" diff=\"add\" at=\"L\">As a consequence of the rules given above, a type error occurs if the context\n          item cannot be atomized, or if the result of atomizing the context item is a sequence containing\n          more than one atomic value.</p></div>\n", "summary" : "<p>  Returns the value indicated by  $arg  or, if  $arg  is\n             not specified, the context item after atomization, converted to an\n                 xs:double .</p>", "annotation_str" : "", "annotations" : [  ], "updating" : false, "parameters" : [  ], "returns" : { "type" : "xs:double", "description" : "" }, "errors" : [  ] }, { "isDocumented" : true, "arity" : 1, "name" : "number", "qname" : "fn:number", "signature" : "($arg as xs:anyAtomicType?) as xs:double external", "description" : " <div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"><p xmlns:e=\"http://www.w3.org/1999/XSL/Spec/ElementSyntax\">Returns the value indicated by <code>$arg</code> or, if <code>$arg</code> is\n             not specified, the context item after atomization, converted to an\n                <code>xs:double</code>. </p><p xmlns:e=\"http://www.w3.org/1999/XSL/Spec/ElementSyntax\"><example role=\"signature\"><proto name=\"number\" return-type=\"xs:double\" isOp=\"no\" prefix=\"fn\" returnEmptyOk=\"no\" returnSeq=\"no\" returnVaries=\"no\" isSchema=\"no\" isDatatype=\"no\" isSpecial=\"no\"/></example><example role=\"signature\"><proto name=\"number\" return-type=\"xs:double\" isOp=\"no\" prefix=\"fn\" returnEmptyOk=\"no\" returnSeq=\"no\" returnVaries=\"no\" isSchema=\"no\" isDatatype=\"no\" isSpecial=\"no\"><arg name=\"arg\" type=\"xs:anyAtomicType?\"/></proto></example></p><p xmlns:e=\"http://www.w3.org/1999/XSL/Spec/ElementSyntax\">The zero-argument form of this function is <termref def=\"dt-deterministic\">deterministic</termref>, <termref def=\"dt-context-dependent\">context-dependent</termref>,  and <termref def=\"dt-focus-dependent\">focus-dependent</termref>. </p><p xmlns:e=\"http://www.w3.org/1999/XSL/Spec/ElementSyntax\">The one-argument form of this function is <termref def=\"dt-deterministic\">deterministic</termref>, <termref def=\"dt-context-independent\">context-independent</termref>,  and <termref def=\"dt-focus-independent\">focus-independent</termref>. </p><p xmlns:e=\"http://www.w3.org/1999/XSL/Spec/ElementSyntax\">Calling the zero-argument version of the function is defined to give the same result as\n             calling the single-argument version with the context item (<code>.</code>). That is,\n                <code>fn:number()</code> is equivalent to <code>fn:number(.)</code>, as\n          defined by the rules that follow.</p><p xmlns:e=\"http://www.w3.org/1999/XSL/Spec/ElementSyntax\">If <code>$arg</code> is the empty sequence or if <code>$arg</code> <phrase diff=\"del\" at=\"L\">or the context item</phrase>\n             cannot be converted to an <code>xs:double</code>, the <code>xs:double</code> value\n                <code>NaN</code> is returned. </p><p xmlns:e=\"http://www.w3.org/1999/XSL/Spec/ElementSyntax\">Otherwise, <code>$arg</code> <phrase diff=\"del\" at=\"L\">, or the context item after atomization,</phrase> is converted to an\n                <code>xs:double</code> following the rules of <specref ref=\"casting-to-double\"/>. If\n             the conversion to <code>xs:double</code> fails, the <code>xs:double</code> value\n                <code>NaN</code> is returned.</p><p xmlns:e=\"http://www.w3.org/1999/XSL/Spec/ElementSyntax\">A <phrase diff=\"add\" at=\"M\">dynamic</phrase> error is raised <xerrorref spec=\"XP\" class=\"DY\" code=\"0002\" type=\"dynamic\"/> if\n                <code>$arg</code> is omitted and the context item is <xtermref ref=\"dt-absent\" spec=\"DM30\">absent</xtermref>.</p><p xmlns:e=\"http://www.w3.org/1999/XSL/Spec/ElementSyntax\" diff=\"add\" at=\"L\">As a consequence of the rules given above, a type error occurs if the context\n          item cannot be atomized, or if the result of atomizing the context item is a sequence containing\n          more than one atomic value.</p></div>\n", "summary" : "<p>  Returns the value indicated by  $arg  or, if  $arg  is\n             not specified, the context item after atomization, converted to an\n                 xs:double .</p>", "annotation_str" : "", "annotations" : [  ], "updating" : false, "parameters" : [ { "name" : "arg", "type" : "xs:anyAtomicType", "occurrence" : "?", "description" : "" } ], "returns" : { "type" : "xs:double", "description" : "" }, "errors" : [  ] }, { "isDocumented" : true, "arity" : 1, "name" : "one-or-more", "qname" : "fn:one-or-more", "signature" : "($arg as item()*) as item()+ external", "description" : " <div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"><p xmlns:e=\"http://www.w3.org/1999/XSL/Spec/ElementSyntax\">Returns <code>$arg</code> if it contains one or more items. Otherwise, raises\n             an error. </p><p xmlns:e=\"http://www.w3.org/1999/XSL/Spec/ElementSyntax\"><example role=\"signature\"><proto name=\"one-or-more\" return-type=\"item()+\" isOp=\"no\" prefix=\"fn\" returnEmptyOk=\"no\" returnSeq=\"no\" returnVaries=\"no\" isSchema=\"no\" isDatatype=\"no\" isSpecial=\"no\"><arg name=\"arg\" type=\"item()*\"/></proto></example></p><p xmlns:e=\"http://www.w3.org/1999/XSL/Spec/ElementSyntax\">This function is <termref def=\"dt-deterministic\">deterministic</termref>, <termref def=\"dt-context-independent\">context-independent</termref>,  and <termref def=\"dt-focus-independent\">focus-independent</termref>. </p><p xmlns:e=\"http://www.w3.org/1999/XSL/Spec/ElementSyntax\">Except in error cases, the function returns <code>$arg</code> unchanged.</p><p xmlns:e=\"http://www.w3.org/1999/XSL/Spec/ElementSyntax\" diff=\"del\" at=\"F\">For detailed type semantics, see [Formal Semantics].</p><p xmlns:e=\"http://www.w3.org/1999/XSL/Spec/ElementSyntax\">A <phrase diff=\"add\" at=\"L\">dynamic</phrase> error is raised <errorref class=\"RG\" code=\"0004\"/> if <code>$arg</code> is an empty\n             sequence.</p></div>\n", "summary" : "<p>  Returns  $arg  if it contains one or more items.</p>", "annotation_str" : "", "annotations" : [  ], "updating" : false, "parameters" : [ { "name" : "arg", "type" : "item()", "occurrence" : "*", "description" : "" } ], "returns" : { "type" : "item()+", "description" : "" }, "errors" : [  ] }, { "isDocumented" : true, "arity" : 1, "name" : "outermost", "qname" : "fn:outermost", "signature" : "($nodes as node()*) as node()* external", "description" : " <div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"><p xmlns:e=\"http://www.w3.org/1999/XSL/Spec/ElementSyntax\">Returns every node within the input sequence that has no ancestor that is itself a\n             member of the input sequence; the nodes are returned in document order with duplicates\n             eliminated.</p><p xmlns:e=\"http://www.w3.org/1999/XSL/Spec/ElementSyntax\"><example role=\"signature\"><proto name=\"outermost\" return-type=\"node()*\" isOp=\"no\" prefix=\"fn\" returnEmptyOk=\"no\" returnSeq=\"no\" returnVaries=\"no\" isSchema=\"no\" isDatatype=\"no\" isSpecial=\"no\"><arg name=\"nodes\" type=\"node()*\"/></proto></example></p><p xmlns:e=\"http://www.w3.org/1999/XSL/Spec/ElementSyntax\">This function is <termref def=\"dt-deterministic\">deterministic</termref>, <termref def=\"dt-context-independent\">context-independent</termref>,  and <termref def=\"dt-focus-independent\">focus-independent</termref>. </p><p xmlns:e=\"http://www.w3.org/1999/XSL/Spec/ElementSyntax\">The effect of the function call <code>fn:outermost($nodes)</code> is defined to be\n             equivalent to the result of the expression <code diff=\"chg\" at=\"L\">$nodes[not(ancestor::node() intersect\n                $nodes)]/.</code>.</p><p xmlns:e=\"http://www.w3.org/1999/XSL/Spec/ElementSyntax\">That is, the function takes as input a sequence of nodes, and returns every node within\n             the sequence that <phrase diff=\"chg\" at=\"J\">does not have another node within the sequence as an ancestor</phrase>; the nodes are\n             returned in document order with duplicates eliminated.</p><p xmlns:e=\"http://www.w3.org/1999/XSL/Spec/ElementSyntax\">The formulation <code>$nodes except $nodes/descendant::node()</code> might appear to be\n             simpler, but does not correctly account for attribute nodes, as these are not\n             descendants of their parent element.</p><p xmlns:e=\"http://www.w3.org/1999/XSL/Spec/ElementSyntax\">The motivation for the function was based on XSLT streaming use cases. There are cases\n             where the <bibref ref=\"xslt-30\"/> streaming rules allow the construct\n                <code>outermost(//section)</code> but do not allow <code>//section</code>; the\n             function can therefore be useful in cases where it is known that sections will not be\n             nested, as well as cases where the application actually wishes to process all sections\n             except those that are nested within another.</p></div>\n", "summary" : "<p>  Returns every node within the input sequence that has no ancestor that is itself a\n             member of the input sequence; the nodes are returned in document order with duplicates\n             eliminated.</p>", "annotation_str" : "", "annotations" : [  ], "updating" : false, "parameters" : [ { "name" : "nodes", "type" : "node()", "occurrence" : "*", "description" : "" } ], "returns" : { "type" : "node()*", "description" : "" }, "errors" : [  ] }, { "isDocumented" : true, "arity" : 1, "name" : "parse-xml-fragment", "qname" : "fn:parse-xml-fragment", "signature" : "($arg as xs:string?) as document(element(*,xs:untyped)) external", "description" : " <div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"><p xmlns:e=\"http://www.w3.org/1999/XSL/Spec/ElementSyntax\">This function takes as input an XML external entity represented as a string,\n             and returns the document node at the root of an XDM tree representing the parsed\n             document fragment.</p><p xmlns:e=\"http://www.w3.org/1999/XSL/Spec/ElementSyntax\"><example role=\"signature\"><proto name=\"parse-xml-fragment\" return-type=\"document-node()?\" isOp=\"no\" prefix=\"fn\" returnEmptyOk=\"no\" returnSeq=\"no\" returnVaries=\"no\" isSchema=\"no\" isDatatype=\"no\" isSpecial=\"no\"><arg name=\"arg\" type=\"xs:string?\"/></proto></example></p><p xmlns:e=\"http://www.w3.org/1999/XSL/Spec/ElementSyntax\">This function is <termref def=\"dt-nondeterministic\">nondeterministic</termref>, <termref def=\"dt-context-dependent\">context-dependent</termref>,  and <termref def=\"dt-focus-independent\">focus-independent</termref>.  It depends on\n \t\tstatic base uri.\n \t</p><p xmlns:e=\"http://www.w3.org/1999/XSL/Spec/ElementSyntax\">If <code>$arg</code> is the empty sequence, the function returns the empty sequence.</p><p xmlns:e=\"http://www.w3.org/1999/XSL/Spec/ElementSyntax\">The input must be a namespace-well-formed external general parsed entity. More specifically,\n             it must be a string conforming to the production rule <xnt xmlns:xlink=\"http://www.w3.org/1999/xlink\" spec=\"xml\" ref=\"NT-extParsedEnt\" xlink:type=\"simple\">extParsedEnt</xnt> in <bibref ref=\"REC-xml\"/>, it must contain no entity references other\n             than references to predefined entities,\n             and it must satisfy all the rules\n             of <bibref ref=\"REC-xml-names\"/> for namespace-well-formed documents with the exception\n             that the rule requiring it to be a well-formed document is replaced by the rule requiring\n             it to be a well-formed external general parsed entity.</p><p xmlns:e=\"http://www.w3.org/1999/XSL/Spec/ElementSyntax\">The string is parsed to form a sequence of nodes which\n             become children of the new document node, in the same way as the content of any element\n             is converted into a sequence of children for the resulting element node.</p><p xmlns:e=\"http://www.w3.org/1999/XSL/Spec/ElementSyntax\">Schema validation is <emph>not</emph> invoked, which means that the nodes in the\n             returned document will all be untyped.</p><p xmlns:e=\"http://www.w3.org/1999/XSL/Spec/ElementSyntax\">The precise process used to construct the XDM instance is <termref def=\"implementation-defined\"/>. In\n             particular, it is implementation-defined whether an XML 1.0 or XML 1.1 parser is\n             used.</p><p xmlns:e=\"http://www.w3.org/1999/XSL/Spec/ElementSyntax\" diff=\"chg\" at=\"L\">The Static Base URI from the static context of the <code>fn:parse-xml-fragment</code> function call\n             is used as the base URI of the document node\n             that is returned.</p><p xmlns:e=\"http://www.w3.org/1999/XSL/Spec/ElementSyntax\">The document URI of the returned node is <termref def=\"absent\">absent</termref>.</p><p xmlns:e=\"http://www.w3.org/1999/XSL/Spec/ElementSyntax\">The function is <emph>not</emph>\n             <termref def=\"deterministic\">deterministic</termref>: that is, if the function is called\n             twice with the same arguments, it is <termref def=\"implementation-dependent\">implementation-dependent</termref> whether the same node is returned on both\n                occasions.</p><p xmlns:e=\"http://www.w3.org/1999/XSL/Spec/ElementSyntax\">A <phrase diff=\"add\" at=\"L\">dynamic</phrase> error is raised <errorref class=\"DC\" code=\"0006\"/> if the content of\n                <code>$arg</code> is not a well-formed external general parsed entity,\n             if it contains entity references other than references to predefined entities, or if a document that\n             incorporates this well-formed parsed entity would not be namespace-well-formed.</p></div>\n", "summary" : "<p>  This function takes as input an XML external entity represented as a string,\n             and returns the document node at the root of an XDM tree representing the parsed\n             document fragment.</p>", "annotation_str" : "", "annotations" : [  ], "updating" : false, "parameters" : [ { "name" : "arg", "type" : "xs:string", "occurrence" : "?", "description" : "" } ], "returns" : { "type" : "document(element(*,xs:untyped))", "description" : "" }, "errors" : [  ] }, { "isDocumented" : true, "arity" : 1, "name" : "parse-xml", "qname" : "fn:parse-xml", "signature" : "($arg as xs:string?) as document(element(*,xs:untyped)) external", "description" : " <div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"><p xmlns:e=\"http://www.w3.org/1999/XSL/Spec/ElementSyntax\">This function takes as input an XML document represented as a string, and\n             returns the document node at the root of an XDM tree representing the parsed\n             document.</p><p xmlns:e=\"http://www.w3.org/1999/XSL/Spec/ElementSyntax\"><example role=\"signature\"><proto name=\"parse-xml\" return-type=\"document-node(element(*))?\" isOp=\"no\" prefix=\"fn\" returnEmptyOk=\"no\" returnSeq=\"no\" returnVaries=\"no\" isSchema=\"no\" isDatatype=\"no\" isSpecial=\"no\"><arg name=\"arg\" type=\"xs:string?\"/></proto></example></p><p xmlns:e=\"http://www.w3.org/1999/XSL/Spec/ElementSyntax\">This function is <termref def=\"dt-nondeterministic\">nondeterministic</termref>, <termref def=\"dt-context-dependent\">context-dependent</termref>,  and <termref def=\"dt-focus-independent\">focus-independent</termref>.  It depends on\n \t\tstatic base uri.\n \t</p><p xmlns:e=\"http://www.w3.org/1999/XSL/Spec/ElementSyntax\" diff=\"add\" at=\"G\">If <code>$arg</code> is the empty sequence, the function returns the\n             empty sequence.</p><p xmlns:e=\"http://www.w3.org/1999/XSL/Spec/ElementSyntax\">The precise process used to construct the XDM instance is <termref def=\"implementation-defined\"/>. In\n             particular, it is implementation-defined whether DTD and/or schema validation is invoked, and it is\n             implementation-defined whether an XML 1.0 or XML 1.1 parser is used.</p><p xmlns:e=\"http://www.w3.org/1999/XSL/Spec/ElementSyntax\">The Static Base URI property from the static context of the\n             <code>fn:parse-xml</code> function call is used both as the base URI used by the XML parser to resolve\n             relative entity references within the document, and as the base URI of the document node\n             that is returned.</p><p xmlns:e=\"http://www.w3.org/1999/XSL/Spec/ElementSyntax\">The document URI of the returned node is <termref def=\"absent\">absent</termref>.</p><p xmlns:e=\"http://www.w3.org/1999/XSL/Spec/ElementSyntax\">The function is <emph>not</emph>\n             <termref def=\"deterministic\">deterministic</termref>: that is, if the function is called\n             twice with the same arguments, it is <termref def=\"implementation-dependent\">implementation-dependent</termref> whether the same node is returned on both\n             occasions.</p><p xmlns:e=\"http://www.w3.org/1999/XSL/Spec/ElementSyntax\">A <phrase diff=\"add\" at=\"L\">dynamic</phrase> error is raised <errorref class=\"DC\" code=\"0006\"/> if the content of\n                <code>$arg</code> is not a well-formed and namespace-well-formed XML document.</p><p xmlns:e=\"http://www.w3.org/1999/XSL/Spec/ElementSyntax\" diff=\"add\" at=\"G\">A <phrase diff=\"add\" at=\"L\">dynamic</phrase> error is raised <errorref class=\"DC\" code=\"0006\"/> if DTD-based\n             validation is carried out and the content of <code>$arg</code> is not valid against its\n             DTD.</p></div>\n", "summary" : "<p>  This function takes as input an XML document represented as a string, and\n             returns the document node at the root of an XDM tree representing the parsed\n             document.</p>", "annotation_str" : "", "annotations" : [  ], "updating" : false, "parameters" : [ { "name" : "arg", "type" : "xs:string", "occurrence" : "?", "description" : "" } ], "returns" : { "type" : "document(element(*,xs:untyped))", "description" : "" }, "errors" : [  ] }, { "isDocumented" : true, "arity" : 2, "name" : "parse-xml", "qname" : "fn:parse-xml", "signature" : "($arg as xs:string?, $baseURI as xs:string) as document(element(*,xs:untyped)) external", "description" : " <div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"><p xmlns:e=\"http://www.w3.org/1999/XSL/Spec/ElementSyntax\">This function takes as input an XML document represented as a string, and\n             returns the document node at the root of an XDM tree representing the parsed\n             document.</p><p xmlns:e=\"http://www.w3.org/1999/XSL/Spec/ElementSyntax\"><example role=\"signature\"><proto name=\"parse-xml\" return-type=\"document-node(element(*))?\" isOp=\"no\" prefix=\"fn\" returnEmptyOk=\"no\" returnSeq=\"no\" returnVaries=\"no\" isSchema=\"no\" isDatatype=\"no\" isSpecial=\"no\"><arg name=\"arg\" type=\"xs:string?\"/></proto></example></p><p xmlns:e=\"http://www.w3.org/1999/XSL/Spec/ElementSyntax\">This function is <termref def=\"dt-nondeterministic\">nondeterministic</termref>, <termref def=\"dt-context-dependent\">context-dependent</termref>,  and <termref def=\"dt-focus-independent\">focus-independent</termref>.  It depends on\n \t\tstatic base uri.\n \t</p><p xmlns:e=\"http://www.w3.org/1999/XSL/Spec/ElementSyntax\" diff=\"add\" at=\"G\">If <code>$arg</code> is the empty sequence, the function returns the\n             empty sequence.</p><p xmlns:e=\"http://www.w3.org/1999/XSL/Spec/ElementSyntax\">The precise process used to construct the XDM instance is <termref def=\"implementation-defined\"/>. In\n             particular, it is implementation-defined whether DTD and/or schema validation is invoked, and it is\n             implementation-defined whether an XML 1.0 or XML 1.1 parser is used.</p><p xmlns:e=\"http://www.w3.org/1999/XSL/Spec/ElementSyntax\">The Static Base URI property from the static context of the\n             <code>fn:parse-xml</code> function call is used both as the base URI used by the XML parser to resolve\n             relative entity references within the document, and as the base URI of the document node\n             that is returned.</p><p xmlns:e=\"http://www.w3.org/1999/XSL/Spec/ElementSyntax\">The document URI of the returned node is <termref def=\"absent\">absent</termref>.</p><p xmlns:e=\"http://www.w3.org/1999/XSL/Spec/ElementSyntax\">The function is <emph>not</emph>\n             <termref def=\"deterministic\">deterministic</termref>: that is, if the function is called\n             twice with the same arguments, it is <termref def=\"implementation-dependent\">implementation-dependent</termref> whether the same node is returned on both\n             occasions.</p><p xmlns:e=\"http://www.w3.org/1999/XSL/Spec/ElementSyntax\">A <phrase diff=\"add\" at=\"L\">dynamic</phrase> error is raised <errorref class=\"DC\" code=\"0006\"/> if the content of\n                <code>$arg</code> is not a well-formed and namespace-well-formed XML document.</p><p xmlns:e=\"http://www.w3.org/1999/XSL/Spec/ElementSyntax\" diff=\"add\" at=\"G\">A <phrase diff=\"add\" at=\"L\">dynamic</phrase> error is raised <errorref class=\"DC\" code=\"0006\"/> if DTD-based\n             validation is carried out and the content of <code>$arg</code> is not valid against its\n             DTD.</p></div>\n", "summary" : "<p>  This function takes as input an XML document represented as a string, and\n             returns the document node at the root of an XDM tree representing the parsed\n             document.</p>", "annotation_str" : "", "annotations" : [  ], "updating" : false, "parameters" : [ { "name" : "arg", "type" : "xs:string", "occurrence" : "?", "description" : "" }, { "name" : "baseURI", "type" : "xs:string", "occurrence" : null, "description" : "" } ], "returns" : { "type" : "document(element(*,xs:untyped))", "description" : "" }, "errors" : [  ] }, { "isDocumented" : true, "arity" : 0, "name" : "position", "qname" : "fn:position", "signature" : "() as xs:integer external", "description" : " <div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"><p xmlns:e=\"http://www.w3.org/1999/XSL/Spec/ElementSyntax\">Returns the context position from the dynamic context.</p><p xmlns:e=\"http://www.w3.org/1999/XSL/Spec/ElementSyntax\"><example role=\"signature\"><proto name=\"position\" return-type=\"xs:integer\" isOp=\"no\" prefix=\"fn\" returnEmptyOk=\"no\" returnSeq=\"no\" returnVaries=\"no\" isSchema=\"no\" isDatatype=\"no\" isSpecial=\"no\"/></example></p><p xmlns:e=\"http://www.w3.org/1999/XSL/Spec/ElementSyntax\">This function is <termref def=\"dt-deterministic\">deterministic</termref>, <termref def=\"dt-context-dependent\">context-dependent</termref>,  and <termref def=\"dt-focus-dependent\">focus-dependent</termref>. </p><p xmlns:e=\"http://www.w3.org/1999/XSL/Spec/ElementSyntax\">Returns the context position from the dynamic context. (See <xspecref spec=\"XP30\" ref=\"id-xp-evaluation-context-components\"/>.)</p><p xmlns:e=\"http://www.w3.org/1999/XSL/Spec/ElementSyntax\">A <phrase diff=\"add\" at=\"M\">dynamic</phrase> error is raised <xerrorref spec=\"XP\" class=\"DY\" code=\"0002\" type=\"type\"/> if the\n             context item is <xtermref ref=\"dt-absent\" spec=\"DM30\">absent</xtermref>.</p></div>\n", "summary" : "<p>  Returns the context position from the dynamic context.</p>", "annotation_str" : "", "annotations" : [  ], "updating" : false, "parameters" : [  ], "returns" : { "type" : "xs:integer", "description" : "" }, "errors" : [  ] }, { "isDocumented" : true, "arity" : 1, "name" : "prefix-from-QName", "qname" : "fn:prefix-from-QName", "signature" : "($arg as xs:QName?) as xs:NCName? external", "description" : " <div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"><p xmlns:e=\"http://www.w3.org/1999/XSL/Spec/ElementSyntax\">Returns the prefix component of the supplied QName.</p><p xmlns:e=\"http://www.w3.org/1999/XSL/Spec/ElementSyntax\"><example role=\"signature\"><proto name=\"prefix-from-QName\" return-type=\"xs:NCName?\" isOp=\"no\" prefix=\"fn\" returnEmptyOk=\"no\" returnSeq=\"no\" returnVaries=\"no\" isSchema=\"no\" isDatatype=\"no\" isSpecial=\"no\"><arg name=\"arg\" type=\"xs:QName?\"/></proto></example></p><p xmlns:e=\"http://www.w3.org/1999/XSL/Spec/ElementSyntax\">This function is <termref def=\"dt-deterministic\">deterministic</termref>, <termref def=\"dt-context-independent\">context-independent</termref>,  and <termref def=\"dt-focus-independent\">focus-independent</termref>. </p><p xmlns:e=\"http://www.w3.org/1999/XSL/Spec/ElementSyntax\">If <code>$arg</code> is the empty sequence the function returns the empty sequence.</p><p xmlns:e=\"http://www.w3.org/1999/XSL/Spec/ElementSyntax\">If <code>$arg</code> has no prefix component the function returns the empty\n             sequence.</p><p xmlns:e=\"http://www.w3.org/1999/XSL/Spec/ElementSyntax\">Otherwise, the function returns an <code>xs:NCName</code> representing the prefix\n             component of <code>$arg</code>.</p></div>\n", "summary" : "<p>  Returns the prefix component of the supplied QName.</p>", "annotation_str" : "", "annotations" : [  ], "updating" : false, "parameters" : [ { "name" : "arg", "type" : "xs:QName", "occurrence" : "?", "description" : "" } ], "returns" : { "type" : "xs:NCName?", "description" : "" }, "errors" : [  ] }, { "isDocumented" : true, "arity" : 2, "name" : "remove", "qname" : "fn:remove", "signature" : "($target as item()*, $position as xs:integer) as item()* external", "description" : " <div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"><p xmlns:e=\"http://www.w3.org/1999/XSL/Spec/ElementSyntax\">Returns a new sequence containing all the items of <code>$target</code> except\n             the item at position <code>$position</code>.</p><p xmlns:e=\"http://www.w3.org/1999/XSL/Spec/ElementSyntax\"><example role=\"signature\"><proto name=\"remove\" return-type=\"item()*\" isOp=\"no\" prefix=\"fn\" returnEmptyOk=\"no\" returnSeq=\"no\" returnVaries=\"no\" isSchema=\"no\" isDatatype=\"no\" isSpecial=\"no\"><arg name=\"target\" type=\"item()*\"/><arg name=\"position\" type=\"xs:integer\"/></proto></example></p><p xmlns:e=\"http://www.w3.org/1999/XSL/Spec/ElementSyntax\">This function is <termref def=\"dt-deterministic\">deterministic</termref>, <termref def=\"dt-context-independent\">context-independent</termref>,  and <termref def=\"dt-focus-independent\">focus-independent</termref>. </p><p xmlns:e=\"http://www.w3.org/1999/XSL/Spec/ElementSyntax\">The function returns a sequence consisting of all items of <code>$target</code> whose\n             index is less than <code>$position</code>, followed by all items of <code>$target</code>\n             whose index is greater than <code>$position</code>. </p><p xmlns:e=\"http://www.w3.org/1999/XSL/Spec/ElementSyntax\" diff=\"del\" at=\"F\">For detailed type semantics, see [Formal Semantics].</p><p xmlns:e=\"http://www.w3.org/1999/XSL/Spec/ElementSyntax\">If <code>$position</code> is less than 1 or greater than the number of items in\n                <code>$target</code>, <code>$target</code> is returned.</p><p xmlns:e=\"http://www.w3.org/1999/XSL/Spec/ElementSyntax\">If <code>$target</code> is the empty sequence, the empty sequence is returned.</p></div>\n", "summary" : "<p>  Returns a new sequence containing all the items of  $target  except\n             the item at position  $position .</p>", "annotation_str" : "", "annotations" : [  ], "updating" : false, "parameters" : [ { "name" : "target", "type" : "item()", "occurrence" : "*", "description" : "" }, { "name" : "position", "type" : "xs:integer", "occurrence" : null, "description" : "" } ], "returns" : { "type" : "item()*", "description" : "" }, "errors" : [  ] }, { "isDocumented" : true, "arity" : 3, "name" : "replace", "qname" : "fn:replace", "signature" : "($input as xs:string?, $pattern as xs:string, $replacement as xs:string) as xs:string external", "description" : " <div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"><p xmlns:e=\"http://www.w3.org/1999/XSL/Spec/ElementSyntax\">Returns a string produced from the input string by replacing any substrings\n             that match a given regular expression with a supplied replacement string.</p><p xmlns:e=\"http://www.w3.org/1999/XSL/Spec/ElementSyntax\"><example role=\"signature\"><proto name=\"replace\" return-type=\"xs:string\" isOp=\"no\" prefix=\"fn\" returnEmptyOk=\"no\" returnSeq=\"no\" returnVaries=\"no\" isSchema=\"no\" isDatatype=\"no\" isSpecial=\"no\"><arg name=\"input\" type=\"xs:string?\"/><arg name=\"pattern\" type=\"xs:string\"/><arg name=\"replacement\" type=\"xs:string\"/></proto></example><example role=\"signature\"><proto name=\"replace\" return-type=\"xs:string\" isOp=\"no\" prefix=\"fn\" returnEmptyOk=\"no\" returnSeq=\"no\" returnVaries=\"no\" isSchema=\"no\" isDatatype=\"no\" isSpecial=\"no\"><arg name=\"input\" type=\"xs:string?\"/><arg name=\"pattern\" type=\"xs:string\"/><arg name=\"replacement\" type=\"xs:string\"/><arg name=\"flags\" type=\"xs:string\"/></proto></example></p><p xmlns:e=\"http://www.w3.org/1999/XSL/Spec/ElementSyntax\">This function is <termref def=\"dt-deterministic\">deterministic</termref>, <termref def=\"dt-context-independent\">context-independent</termref>,  and <termref def=\"dt-focus-independent\">focus-independent</termref>. </p><p xmlns:e=\"http://www.w3.org/1999/XSL/Spec/ElementSyntax\">The effect of calling the first version of this function (omitting the argument\n                <code>$flags</code>) is the same as the effect of calling the second version with the\n                <code>$flags</code> argument set to a zero-length string. Flags are defined in\n                <specref ref=\"flags\"/>.</p><p xmlns:e=\"http://www.w3.org/1999/XSL/Spec/ElementSyntax\">The <code>$flags</code> argument is interpreted in the same manner as for the\n                <code>fn:matches</code> function. </p><p xmlns:e=\"http://www.w3.org/1999/XSL/Spec/ElementSyntax\">If <code>$input</code> is the empty sequence, it is interpreted as the zero-length\n             string.</p><p xmlns:e=\"http://www.w3.org/1999/XSL/Spec/ElementSyntax\">The function returns the <code>xs:string</code> that is obtained by replacing each\n             non-overlapping substring of <code>$input</code> that matches the given\n                <code>$pattern</code> with an occurrence of the <code>$replacement</code> string.</p><p xmlns:e=\"http://www.w3.org/1999/XSL/Spec/ElementSyntax\">If two overlapping substrings of <code>$input</code> both match the\n                <code>$pattern</code>, then only the first one (that is, the one whose first <termref def=\"character\">character</termref> comes first in the <code>$input</code> string) is\n             replaced.</p><p xmlns:e=\"http://www.w3.org/1999/XSL/Spec/ElementSyntax\" diff=\"add\" at=\"B\">If the <code>q</code> flag is present, the replacement string is used\n                <emph>as is</emph>.</p><p xmlns:e=\"http://www.w3.org/1999/XSL/Spec/ElementSyntax\"><phrase diff=\"add\" at=\"B\">Otherwise,</phrase> within the <code>$replacement</code>\n             string, a variable <code>$N</code> may be used to refer to the substring captured by the\n             Nth parenthesized sub-expression in the regular expression. For each match of the\n             pattern, these variables are assigned the value of the content matched by the relevant\n             sub-expression, and the modified replacement string is then substituted for the <termref def=\"character\">characters</termref> in <code>$input</code> that matched the pattern.\n                <code>$0</code> refers to the substring captured by the regular expression as a\n             whole.</p><p xmlns:e=\"http://www.w3.org/1999/XSL/Spec/ElementSyntax\">More specifically, the rules are as follows, where <code>S</code> is the number of\n             parenthesized sub-expressions in the regular expression, and <code>N</code> is the\n             decimal number formed by taking all the digits that consecutively follow the\n                <code>$</code> character:</p><olist xmlns:e=\"http://www.w3.org/1999/XSL/Spec/ElementSyntax\"><item><p>If <code>N</code>=<code>0</code>, then the variable is replaced by the substring\n                   matched by the regular expression as a whole.</p></item><item><p>If <code>1</code>&lt;=<code>N</code>&lt;=<code>S</code>, then the variable is\n                   replaced by the substring captured by the Nth parenthesized sub-expression. If the\n                      <code>Nth</code> parenthesized sub-expression was not matched, then the\n                   variable is replaced by the zero-length string.</p></item><item><p>If <code>S</code>&lt;<code>N</code>&lt;=<code>9</code>, then the variable is\n                   replaced by the zero-length string.</p></item><item><p>Otherwise (if <code>N</code>&gt;<code>S</code> and\n                      <code>N</code>&gt;<code>9</code>), the last digit of <code>N</code> is taken to\n                   be a literal character to be included \"as is\" in the replacement string, and the\n                   rules are reapplied using the number <code>N</code> formed by stripping off this\n                   last digit.</p></item></olist><p xmlns:e=\"http://www.w3.org/1999/XSL/Spec/ElementSyntax\">For example, if the replacement string is <quote>\n                <code>$23</code>\n             </quote> and there are 5 substrings, the result contains the value of the substring that\n             matches the second sub-expression, followed by the digit <quote>\n                <code>3</code>\n             </quote>.</p><p xmlns:e=\"http://www.w3.org/1999/XSL/Spec/ElementSyntax\" diff=\"chg\" at=\"B\">Unless the <code>q</code> flag is used, a literal <code>$</code>\n             character within the replacement string must be written as <code>\\$</code>, and a\n             literal <code>\\</code> character must be written as <code>\\\\</code>.</p><p xmlns:e=\"http://www.w3.org/1999/XSL/Spec/ElementSyntax\"> If two alternatives within the pattern both match at the same position in the\n                <code>$input</code>, then the match that is chosen is the one matched by the first\n             alternative. For example:</p><eg xmlns:e=\"http://www.w3.org/1999/XSL/Spec/ElementSyntax\" xml:space=\"preserve\"> fn:replace(\"abcd\", \"(ab)|(a)\", \"[1=$1][2=$2]\") returns \"[1=ab][2=]cd\"</eg><p xmlns:e=\"http://www.w3.org/1999/XSL/Spec/ElementSyntax\">A <phrase diff=\"add\" at=\"L\">dynamic</phrase> error is raised <errorref class=\"RX\" code=\"0002\"/> if the value of\n                <code>$pattern</code> is invalid according to the rules described in section <specref ref=\"regex-syntax\"/>. </p><p xmlns:e=\"http://www.w3.org/1999/XSL/Spec/ElementSyntax\">A <phrase diff=\"add\" at=\"L\">dynamic</phrase> error is raised <errorref class=\"RX\" code=\"0001\"/> if the value of\n                <code>$flags</code> is invalid according to the rules described in section <specref ref=\"regex-syntax\"/>. </p><p xmlns:e=\"http://www.w3.org/1999/XSL/Spec/ElementSyntax\">A <phrase diff=\"add\" at=\"L\">dynamic</phrase> error is raised <errorref class=\"RX\" code=\"0003\"/> if the pattern matches a\n             zero-length string, that is, if the expression <code>fn:matches(\"\", $pattern,\n                $flags)</code> returns <code>true</code>. It is not an error, however, if a captured\n             substring is zero-length.</p><p xmlns:e=\"http://www.w3.org/1999/XSL/Spec/ElementSyntax\">A <phrase diff=\"add\" at=\"L\">dynamic</phrase> error is raised <errorref class=\"RX\" code=\"0004\"/> if the value of\n                <code>$replacement</code> contains a \"<code>$</code>\" character that is not\n             immediately followed by a digit <code>0-9</code> and not immediately preceded by a\n             \"\\\".</p><p xmlns:e=\"http://www.w3.org/1999/XSL/Spec/ElementSyntax\">A <phrase diff=\"add\" at=\"L\">dynamic</phrase> error is raised <errorref class=\"RX\" code=\"0004\"/> if the value of\n                <code>$replacement</code> contains a \"<code>\\</code>\" character that is not part of a\n                \"<code>\\\\</code>\" pair, unless it is immediately followed by a \"<code>$</code>\"\n             character.</p></div>\n", "summary" : "<p>  Returns a string produced from the input string by replacing any substrings\n             that match a given regular expression with a supplied replacement string.</p>", "annotation_str" : "", "annotations" : [  ], "updating" : false, "parameters" : [ { "name" : "input", "type" : "xs:string", "occurrence" : "?", "description" : "" }, { "name" : "pattern", "type" : "xs:string", "occurrence" : null, "description" : "" }, { "name" : "replacement", "type" : "xs:string", "occurrence" : null, "description" : "" } ], "returns" : { "type" : "xs:string", "description" : "" }, "errors" : [  ] }, { "isDocumented" : true, "arity" : 4, "name" : "replace", "qname" : "fn:replace", "signature" : "($input as xs:string?, $pattern as xs:string, $replacement as xs:string, $flags as xs:string) as xs:string external", "description" : " <div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"><p xmlns:e=\"http://www.w3.org/1999/XSL/Spec/ElementSyntax\">Returns a string produced from the input string by replacing any substrings\n             that match a given regular expression with a supplied replacement string.</p><p xmlns:e=\"http://www.w3.org/1999/XSL/Spec/ElementSyntax\"><example role=\"signature\"><proto name=\"replace\" return-type=\"xs:string\" isOp=\"no\" prefix=\"fn\" returnEmptyOk=\"no\" returnSeq=\"no\" returnVaries=\"no\" isSchema=\"no\" isDatatype=\"no\" isSpecial=\"no\"><arg name=\"input\" type=\"xs:string?\"/><arg name=\"pattern\" type=\"xs:string\"/><arg name=\"replacement\" type=\"xs:string\"/></proto></example><example role=\"signature\"><proto name=\"replace\" return-type=\"xs:string\" isOp=\"no\" prefix=\"fn\" returnEmptyOk=\"no\" returnSeq=\"no\" returnVaries=\"no\" isSchema=\"no\" isDatatype=\"no\" isSpecial=\"no\"><arg name=\"input\" type=\"xs:string?\"/><arg name=\"pattern\" type=\"xs:string\"/><arg name=\"replacement\" type=\"xs:string\"/><arg name=\"flags\" type=\"xs:string\"/></proto></example></p><p xmlns:e=\"http://www.w3.org/1999/XSL/Spec/ElementSyntax\">This function is <termref def=\"dt-deterministic\">deterministic</termref>, <termref def=\"dt-context-independent\">context-independent</termref>,  and <termref def=\"dt-focus-independent\">focus-independent</termref>. </p><p xmlns:e=\"http://www.w3.org/1999/XSL/Spec/ElementSyntax\">The effect of calling the first version of this function (omitting the argument\n                <code>$flags</code>) is the same as the effect of calling the second version with the\n                <code>$flags</code> argument set to a zero-length string. Flags are defined in\n                <specref ref=\"flags\"/>.</p><p xmlns:e=\"http://www.w3.org/1999/XSL/Spec/ElementSyntax\">The <code>$flags</code> argument is interpreted in the same manner as for the\n                <code>fn:matches</code> function. </p><p xmlns:e=\"http://www.w3.org/1999/XSL/Spec/ElementSyntax\">If <code>$input</code> is the empty sequence, it is interpreted as the zero-length\n             string.</p><p xmlns:e=\"http://www.w3.org/1999/XSL/Spec/ElementSyntax\">The function returns the <code>xs:string</code> that is obtained by replacing each\n             non-overlapping substring of <code>$input</code> that matches the given\n                <code>$pattern</code> with an occurrence of the <code>$replacement</code> string.</p><p xmlns:e=\"http://www.w3.org/1999/XSL/Spec/ElementSyntax\">If two overlapping substrings of <code>$input</code> both match the\n                <code>$pattern</code>, then only the first one (that is, the one whose first <termref def=\"character\">character</termref> comes first in the <code>$input</code> string) is\n             replaced.</p><p xmlns:e=\"http://www.w3.org/1999/XSL/Spec/ElementSyntax\" diff=\"add\" at=\"B\">If the <code>q</code> flag is present, the replacement string is used\n                <emph>as is</emph>.</p><p xmlns:e=\"http://www.w3.org/1999/XSL/Spec/ElementSyntax\"><phrase diff=\"add\" at=\"B\">Otherwise,</phrase> within the <code>$replacement</code>\n             string, a variable <code>$N</code> may be used to refer to the substring captured by the\n             Nth parenthesized sub-expression in the regular expression. For each match of the\n             pattern, these variables are assigned the value of the content matched by the relevant\n             sub-expression, and the modified replacement string is then substituted for the <termref def=\"character\">characters</termref> in <code>$input</code> that matched the pattern.\n                <code>$0</code> refers to the substring captured by the regular expression as a\n             whole.</p><p xmlns:e=\"http://www.w3.org/1999/XSL/Spec/ElementSyntax\">More specifically, the rules are as follows, where <code>S</code> is the number of\n             parenthesized sub-expressions in the regular expression, and <code>N</code> is the\n             decimal number formed by taking all the digits that consecutively follow the\n                <code>$</code> character:</p><olist xmlns:e=\"http://www.w3.org/1999/XSL/Spec/ElementSyntax\"><item><p>If <code>N</code>=<code>0</code>, then the variable is replaced by the substring\n                   matched by the regular expression as a whole.</p></item><item><p>If <code>1</code>&lt;=<code>N</code>&lt;=<code>S</code>, then the variable is\n                   replaced by the substring captured by the Nth parenthesized sub-expression. If the\n                      <code>Nth</code> parenthesized sub-expression was not matched, then the\n                   variable is replaced by the zero-length string.</p></item><item><p>If <code>S</code>&lt;<code>N</code>&lt;=<code>9</code>, then the variable is\n                   replaced by the zero-length string.</p></item><item><p>Otherwise (if <code>N</code>&gt;<code>S</code> and\n                      <code>N</code>&gt;<code>9</code>), the last digit of <code>N</code> is taken to\n                   be a literal character to be included \"as is\" in the replacement string, and the\n                   rules are reapplied using the number <code>N</code> formed by stripping off this\n                   last digit.</p></item></olist><p xmlns:e=\"http://www.w3.org/1999/XSL/Spec/ElementSyntax\">For example, if the replacement string is <quote>\n                <code>$23</code>\n             </quote> and there are 5 substrings, the result contains the value of the substring that\n             matches the second sub-expression, followed by the digit <quote>\n                <code>3</code>\n             </quote>.</p><p xmlns:e=\"http://www.w3.org/1999/XSL/Spec/ElementSyntax\" diff=\"chg\" at=\"B\">Unless the <code>q</code> flag is used, a literal <code>$</code>\n             character within the replacement string must be written as <code>\\$</code>, and a\n             literal <code>\\</code> character must be written as <code>\\\\</code>.</p><p xmlns:e=\"http://www.w3.org/1999/XSL/Spec/ElementSyntax\"> If two alternatives within the pattern both match at the same position in the\n                <code>$input</code>, then the match that is chosen is the one matched by the first\n             alternative. For example:</p><eg xmlns:e=\"http://www.w3.org/1999/XSL/Spec/ElementSyntax\" xml:space=\"preserve\"> fn:replace(\"abcd\", \"(ab)|(a)\", \"[1=$1][2=$2]\") returns \"[1=ab][2=]cd\"</eg><p xmlns:e=\"http://www.w3.org/1999/XSL/Spec/ElementSyntax\">A <phrase diff=\"add\" at=\"L\">dynamic</phrase> error is raised <errorref class=\"RX\" code=\"0002\"/> if the value of\n                <code>$pattern</code> is invalid according to the rules described in section <specref ref=\"regex-syntax\"/>. </p><p xmlns:e=\"http://www.w3.org/1999/XSL/Spec/ElementSyntax\">A <phrase diff=\"add\" at=\"L\">dynamic</phrase> error is raised <errorref class=\"RX\" code=\"0001\"/> if the value of\n                <code>$flags</code> is invalid according to the rules described in section <specref ref=\"regex-syntax\"/>. </p><p xmlns:e=\"http://www.w3.org/1999/XSL/Spec/ElementSyntax\">A <phrase diff=\"add\" at=\"L\">dynamic</phrase> error is raised <errorref class=\"RX\" code=\"0003\"/> if the pattern matches a\n             zero-length string, that is, if the expression <code>fn:matches(\"\", $pattern,\n                $flags)</code> returns <code>true</code>. It is not an error, however, if a captured\n             substring is zero-length.</p><p xmlns:e=\"http://www.w3.org/1999/XSL/Spec/ElementSyntax\">A <phrase diff=\"add\" at=\"L\">dynamic</phrase> error is raised <errorref class=\"RX\" code=\"0004\"/> if the value of\n                <code>$replacement</code> contains a \"<code>$</code>\" character that is not\n             immediately followed by a digit <code>0-9</code> and not immediately preceded by a\n             \"\\\".</p><p xmlns:e=\"http://www.w3.org/1999/XSL/Spec/ElementSyntax\">A <phrase diff=\"add\" at=\"L\">dynamic</phrase> error is raised <errorref class=\"RX\" code=\"0004\"/> if the value of\n                <code>$replacement</code> contains a \"<code>\\</code>\" character that is not part of a\n                \"<code>\\\\</code>\" pair, unless it is immediately followed by a \"<code>$</code>\"\n             character.</p></div>\n", "summary" : "<p>  Returns a string produced from the input string by replacing any substrings\n             that match a given regular expression with a supplied replacement string.</p>", "annotation_str" : "", "annotations" : [  ], "updating" : false, "parameters" : [ { "name" : "input", "type" : "xs:string", "occurrence" : "?", "description" : "" }, { "name" : "pattern", "type" : "xs:string", "occurrence" : null, "description" : "" }, { "name" : "replacement", "type" : "xs:string", "occurrence" : null, "description" : "" }, { "name" : "flags", "type" : "xs:string", "occurrence" : null, "description" : "" } ], "returns" : { "type" : "xs:string", "description" : "" }, "errors" : [  ] }, { "isDocumented" : true, "arity" : 2, "name" : "resolve-QName", "qname" : "fn:resolve-QName", "signature" : "($qname as xs:string?, $element as element(*)) as xs:QName? external", "description" : " <div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"><p xmlns:e=\"http://www.w3.org/1999/XSL/Spec/ElementSyntax\">Returns an <code>xs:QName</code> value (that is, an expanded-QName) by taking\n             an <code>xs:string</code> that has the lexical form of an <code>xs:QName</code> (a\n             string in the form \"prefix:local-name\" or \"local-name\") and resolving it using the\n             in-scope namespaces for a given element.</p><p xmlns:e=\"http://www.w3.org/1999/XSL/Spec/ElementSyntax\"><example role=\"signature\"><proto name=\"resolve-QName\" return-type=\"xs:QName?\" isOp=\"no\" prefix=\"fn\" returnEmptyOk=\"no\" returnSeq=\"no\" returnVaries=\"no\" isSchema=\"no\" isDatatype=\"no\" isSpecial=\"no\"><arg name=\"qname\" type=\"xs:string?\"/><arg name=\"element\" type=\"element()\"/></proto></example></p><p xmlns:e=\"http://www.w3.org/1999/XSL/Spec/ElementSyntax\">This function is <termref def=\"dt-deterministic\">deterministic</termref>, <termref def=\"dt-context-independent\">context-independent</termref>,  and <termref def=\"dt-focus-independent\">focus-independent</termref>. </p><p xmlns:e=\"http://www.w3.org/1999/XSL/Spec/ElementSyntax\">If <code>$qname</code> is the empty sequence, returns the empty sequence.</p><p xmlns:e=\"http://www.w3.org/1999/XSL/Spec/ElementSyntax\">More specifically, the function searches the namespace bindings of <code>$element</code>\n             for a binding whose name matches the prefix of <code>$qname</code>, or the zero-length\n             string if it has no prefix, and constructs an expanded-QName whose local name is taken\n             from the supplied <code>$qname</code>, and whose namespace URI is taken from the string\n             value of the namespace binding.</p><p xmlns:e=\"http://www.w3.org/1999/XSL/Spec/ElementSyntax\">If the <code>$qname</code> has no prefix, and there is no namespace binding for\n                <code>$element</code> corresponding to the default (unnamed) namespace, then the\n             resulting expanded-QName has no namespace part.</p><p xmlns:e=\"http://www.w3.org/1999/XSL/Spec/ElementSyntax\">The prefix (or absence of a prefix) in the supplied <code>$qname</code> argument is\n             retained in the returned expanded-QName, as discussed in <xspecref spec=\"DM30\" ref=\"terminology\"/>.</p><p xmlns:e=\"http://www.w3.org/1999/XSL/Spec/ElementSyntax\">A <phrase diff=\"add\" at=\"L\">dynamic</phrase> error is raised <errorref class=\"CA\" code=\"0002\"/> if <code>$qname</code> does not\n             have the correct lexical form for an instance of <code>xs:QName</code>.</p><p xmlns:e=\"http://www.w3.org/1999/XSL/Spec/ElementSyntax\">A <phrase diff=\"add\" at=\"L\">dynamic</phrase> error is raised <errorref class=\"NS\" code=\"0004\"/> if <code>$qname</code> has a\n             prefix and there is no namespace binding for <code>$element</code> that matches this\n             prefix.</p></div>\n", "summary" : "<p>  Returns an  xs:QName  value (that is, an expanded-QName) by taking\n             an  xs:string  that has the lexical form of an  xs:QName  (a\n             string in the form \"prefix:local-name\" or \"local-name\") and resolving it using the\n             in-scope namespaces for a given element.</p>", "annotation_str" : "", "annotations" : [  ], "updating" : false, "parameters" : [ { "name" : "qname", "type" : "xs:string", "occurrence" : "?", "description" : "" }, { "name" : "element", "type" : "element(*)", "occurrence" : null, "description" : "" } ], "returns" : { "type" : "xs:QName?", "description" : "" }, "errors" : [  ] }, { "isDocumented" : true, "arity" : 1, "name" : "resolve-uri", "qname" : "fn:resolve-uri", "signature" : "($relative as xs:string?) as xs:anyURI? external", "description" : " <div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"><p xmlns:e=\"http://www.w3.org/1999/XSL/Spec/ElementSyntax\">Resolves a relative IRI reference against an absolute IRI.</p><p xmlns:e=\"http://www.w3.org/1999/XSL/Spec/ElementSyntax\"><example role=\"signature\"><proto name=\"resolve-uri\" return-type=\"xs:anyURI?\" isOp=\"no\" prefix=\"fn\" returnEmptyOk=\"no\" returnSeq=\"no\" returnVaries=\"no\" isSchema=\"no\" isDatatype=\"no\" isSpecial=\"no\"><arg name=\"relative\" type=\"xs:string?\"/></proto></example><example role=\"signature\"><proto name=\"resolve-uri\" return-type=\"xs:anyURI?\" isOp=\"no\" prefix=\"fn\" returnEmptyOk=\"no\" returnSeq=\"no\" returnVaries=\"no\" isSchema=\"no\" isDatatype=\"no\" isSpecial=\"no\"><arg name=\"relative\" type=\"xs:string?\"/><arg name=\"base\" type=\"xs:string\"/></proto></example></p><p xmlns:e=\"http://www.w3.org/1999/XSL/Spec/ElementSyntax\">The one-argument form of this function is <termref def=\"dt-deterministic\">deterministic</termref>, <termref def=\"dt-context-dependent\">context-dependent</termref>,  and <termref def=\"dt-focus-independent\">focus-independent</termref>.  It depends on\n \t\tstatic base uri.\n \t</p><p xmlns:e=\"http://www.w3.org/1999/XSL/Spec/ElementSyntax\">The two-argument form of this function is <termref def=\"dt-deterministic\">deterministic</termref>, <termref def=\"dt-context-independent\">context-independent</termref>,  and <termref def=\"dt-focus-independent\">focus-independent</termref>. </p><p xmlns:e=\"http://www.w3.org/1999/XSL/Spec/ElementSyntax\">If the second argument is absent, the effect is the same as calling the two-argument\n             function with the value of <code>fn:static-base-uri()</code> as the second argument.</p><p xmlns:e=\"http://www.w3.org/1999/XSL/Spec/ElementSyntax\">The function is defined to operate on IRI references as defined in <bibref ref=\"rfc3987\"/>, and the implementation <rfc2119>must</rfc2119> permit all arguments that are valid\n             according to that specification. In addition, the implementation <rfc2119>may</rfc2119>\n             accept some or all strings that conform to the rules for (absolute or relative) Legacy\n             Extended IRI references as defined in <bibref ref=\"LEIRI\"/>. For the purposes of this\n             section, the terms IRI and IRI reference include these extensions, insofar as the\n             implementation chooses to support them.</p><p xmlns:e=\"http://www.w3.org/1999/XSL/Spec/ElementSyntax\">If <code>$relative</code> is the empty sequence, the function returns the empty\n             sequence.</p><p xmlns:e=\"http://www.w3.org/1999/XSL/Spec/ElementSyntax\">If <code>$relative</code> is an absolute IRI (as defined above), then it is returned\n             unchanged.</p><p xmlns:e=\"http://www.w3.org/1999/XSL/Spec/ElementSyntax\">Otherwise, the function resolves the relative IRI reference <code>$relative</code>\n             against the base IRI <code>$base</code> using the algorithm defined in <bibref ref=\"rfc3986\"/>, adapted by treating any <termref def=\"character\">character</termref>\n             that would not be valid in an RFC3986 URI or relative reference in the same way that\n             RFC3986 treats unreserved characters. No percent-encoding takes place.</p><p xmlns:e=\"http://www.w3.org/1999/XSL/Spec/ElementSyntax\">The first form of this function resolves <code>$relative</code> against the value of the\n             base-uri property from the static context. A <phrase diff=\"add\" at=\"L\">dynamic</phrase> error is raised <errorref class=\"NS\" code=\"0005\"/> if the base-uri property is not initialized in the static context. </p><p xmlns:e=\"http://www.w3.org/1999/XSL/Spec/ElementSyntax\">A <phrase diff=\"add\" at=\"L\">dynamic</phrase> error is raised <errorref class=\"RG\" code=\"0002\"/> if <code>$relative</code> is not a\n             valid IRI according to the rules of RFC3987, extended with an implementation-defined\n             subset of the extensions permitted in LEIRI, or if it is not a suitable relative\n             reference to use as input to the RFC3986 resolution algorithm extended to handle\n             additional unreserved characters. </p><p xmlns:e=\"http://www.w3.org/1999/XSL/Spec/ElementSyntax\">A <phrase diff=\"add\" at=\"L\">dynamic</phrase> error is raised <errorref class=\"RG\" code=\"0002\"/> if <code>$base</code> is not a\n             valid IRI according to the rules of RFC3987, extended with an implementation-defined\n             subset of the extensions permitted in LEIRI, or if it is not a suitable IRI to use as\n             input to the chosen resolution algorithm (for example, if it is a relative IRI\n             reference, if it is a non-hierarchic URI, or if it contains a fragment identifier). </p><p xmlns:e=\"http://www.w3.org/1999/XSL/Spec/ElementSyntax\">A <phrase diff=\"add\" at=\"L\">dynamic</phrase> error is raised <errorref class=\"RG\" code=\"0009\"/> if the chosen resolution algorithm\n             fails for any other reason. </p></div>\n", "summary" : "<p>  Resolves a relative IRI reference against an absolute IRI.</p>", "annotation_str" : "", "annotations" : [  ], "updating" : false, "parameters" : [ { "name" : "relative", "type" : "xs:string", "occurrence" : "?", "description" : "" } ], "returns" : { "type" : "xs:anyURI?", "description" : "" }, "errors" : [  ] }, { "isDocumented" : true, "arity" : 2, "name" : "resolve-uri", "qname" : "fn:resolve-uri", "signature" : "($relative as xs:string?, $base as xs:string) as xs:anyURI? external", "description" : " <div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"><p xmlns:e=\"http://www.w3.org/1999/XSL/Spec/ElementSyntax\">Resolves a relative IRI reference against an absolute IRI.</p><p xmlns:e=\"http://www.w3.org/1999/XSL/Spec/ElementSyntax\"><example role=\"signature\"><proto name=\"resolve-uri\" return-type=\"xs:anyURI?\" isOp=\"no\" prefix=\"fn\" returnEmptyOk=\"no\" returnSeq=\"no\" returnVaries=\"no\" isSchema=\"no\" isDatatype=\"no\" isSpecial=\"no\"><arg name=\"relative\" type=\"xs:string?\"/></proto></example><example role=\"signature\"><proto name=\"resolve-uri\" return-type=\"xs:anyURI?\" isOp=\"no\" prefix=\"fn\" returnEmptyOk=\"no\" returnSeq=\"no\" returnVaries=\"no\" isSchema=\"no\" isDatatype=\"no\" isSpecial=\"no\"><arg name=\"relative\" type=\"xs:string?\"/><arg name=\"base\" type=\"xs:string\"/></proto></example></p><p xmlns:e=\"http://www.w3.org/1999/XSL/Spec/ElementSyntax\">The one-argument form of this function is <termref def=\"dt-deterministic\">deterministic</termref>, <termref def=\"dt-context-dependent\">context-dependent</termref>,  and <termref def=\"dt-focus-independent\">focus-independent</termref>.  It depends on\n \t\tstatic base uri.\n \t</p><p xmlns:e=\"http://www.w3.org/1999/XSL/Spec/ElementSyntax\">The two-argument form of this function is <termref def=\"dt-deterministic\">deterministic</termref>, <termref def=\"dt-context-independent\">context-independent</termref>,  and <termref def=\"dt-focus-independent\">focus-independent</termref>. </p><p xmlns:e=\"http://www.w3.org/1999/XSL/Spec/ElementSyntax\">If the second argument is absent, the effect is the same as calling the two-argument\n             function with the value of <code>fn:static-base-uri()</code> as the second argument.</p><p xmlns:e=\"http://www.w3.org/1999/XSL/Spec/ElementSyntax\">The function is defined to operate on IRI references as defined in <bibref ref=\"rfc3987\"/>, and the implementation <rfc2119>must</rfc2119> permit all arguments that are valid\n             according to that specification. In addition, the implementation <rfc2119>may</rfc2119>\n             accept some or all strings that conform to the rules for (absolute or relative) Legacy\n             Extended IRI references as defined in <bibref ref=\"LEIRI\"/>. For the purposes of this\n             section, the terms IRI and IRI reference include these extensions, insofar as the\n             implementation chooses to support them.</p><p xmlns:e=\"http://www.w3.org/1999/XSL/Spec/ElementSyntax\">If <code>$relative</code> is the empty sequence, the function returns the empty\n             sequence.</p><p xmlns:e=\"http://www.w3.org/1999/XSL/Spec/ElementSyntax\">If <code>$relative</code> is an absolute IRI (as defined above), then it is returned\n             unchanged.</p><p xmlns:e=\"http://www.w3.org/1999/XSL/Spec/ElementSyntax\">Otherwise, the function resolves the relative IRI reference <code>$relative</code>\n             against the base IRI <code>$base</code> using the algorithm defined in <bibref ref=\"rfc3986\"/>, adapted by treating any <termref def=\"character\">character</termref>\n             that would not be valid in an RFC3986 URI or relative reference in the same way that\n             RFC3986 treats unreserved characters. No percent-encoding takes place.</p><p xmlns:e=\"http://www.w3.org/1999/XSL/Spec/ElementSyntax\">The first form of this function resolves <code>$relative</code> against the value of the\n             base-uri property from the static context. A <phrase diff=\"add\" at=\"L\">dynamic</phrase> error is raised <errorref class=\"NS\" code=\"0005\"/> if the base-uri property is not initialized in the static context. </p><p xmlns:e=\"http://www.w3.org/1999/XSL/Spec/ElementSyntax\">A <phrase diff=\"add\" at=\"L\">dynamic</phrase> error is raised <errorref class=\"RG\" code=\"0002\"/> if <code>$relative</code> is not a\n             valid IRI according to the rules of RFC3987, extended with an implementation-defined\n             subset of the extensions permitted in LEIRI, or if it is not a suitable relative\n             reference to use as input to the RFC3986 resolution algorithm extended to handle\n             additional unreserved characters. </p><p xmlns:e=\"http://www.w3.org/1999/XSL/Spec/ElementSyntax\">A <phrase diff=\"add\" at=\"L\">dynamic</phrase> error is raised <errorref class=\"RG\" code=\"0002\"/> if <code>$base</code> is not a\n             valid IRI according to the rules of RFC3987, extended with an implementation-defined\n             subset of the extensions permitted in LEIRI, or if it is not a suitable IRI to use as\n             input to the chosen resolution algorithm (for example, if it is a relative IRI\n             reference, if it is a non-hierarchic URI, or if it contains a fragment identifier). </p><p xmlns:e=\"http://www.w3.org/1999/XSL/Spec/ElementSyntax\">A <phrase diff=\"add\" at=\"L\">dynamic</phrase> error is raised <errorref class=\"RG\" code=\"0009\"/> if the chosen resolution algorithm\n             fails for any other reason. </p></div>\n", "summary" : "<p>  Resolves a relative IRI reference against an absolute IRI.</p>", "annotation_str" : "", "annotations" : [  ], "updating" : false, "parameters" : [ { "name" : "relative", "type" : "xs:string", "occurrence" : "?", "description" : "" }, { "name" : "base", "type" : "xs:string", "occurrence" : null, "description" : "" } ], "returns" : { "type" : "xs:anyURI?", "description" : "" }, "errors" : [  ] }, { "isDocumented" : true, "arity" : 1, "name" : "reverse", "qname" : "fn:reverse", "signature" : "($arg as item()*) as item()* external", "description" : " <div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"><p xmlns:e=\"http://www.w3.org/1999/XSL/Spec/ElementSyntax\">Reverses the order of items in a sequence. </p><p xmlns:e=\"http://www.w3.org/1999/XSL/Spec/ElementSyntax\"><example role=\"signature\"><proto name=\"reverse\" return-type=\"item()*\" isOp=\"no\" prefix=\"fn\" returnEmptyOk=\"no\" returnSeq=\"no\" returnVaries=\"no\" isSchema=\"no\" isDatatype=\"no\" isSpecial=\"no\"><arg name=\"arg\" type=\"item()*\"/></proto></example></p><p xmlns:e=\"http://www.w3.org/1999/XSL/Spec/ElementSyntax\">This function is <termref def=\"dt-deterministic\">deterministic</termref>, <termref def=\"dt-context-independent\">context-independent</termref>,  and <termref def=\"dt-focus-independent\">focus-independent</termref>. </p><p xmlns:e=\"http://www.w3.org/1999/XSL/Spec/ElementSyntax\">The function returns a sequence containing the items in <code>$arg</code> in reverse\n             order.</p><p xmlns:e=\"http://www.w3.org/1999/XSL/Spec/ElementSyntax\" diff=\"del\" at=\"F\">For detailed type semantics, see [Formal Semantics].</p><p xmlns:e=\"http://www.w3.org/1999/XSL/Spec/ElementSyntax\">If <code>$arg</code> is the empty sequence, the empty sequence is returned. </p></div>\n", "summary" : "<p>  Reverses the order of items in a sequence.</p>", "annotation_str" : "", "annotations" : [  ], "updating" : false, "parameters" : [ { "name" : "arg", "type" : "item()", "occurrence" : "*", "description" : "" } ], "returns" : { "type" : "item()*", "description" : "" }, "errors" : [  ] }, { "isDocumented" : true, "arity" : 0, "name" : "root", "qname" : "fn:root", "signature" : "() as node() external", "description" : " <div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"><p xmlns:e=\"http://www.w3.org/1999/XSL/Spec/ElementSyntax\">Returns the root of the tree to which <code>$arg</code> belongs. This will\n             usually, but not necessarily, be a document node.</p><p xmlns:e=\"http://www.w3.org/1999/XSL/Spec/ElementSyntax\"><example role=\"signature\"><proto name=\"root\" return-type=\"node()\" isOp=\"no\" prefix=\"fn\" returnEmptyOk=\"no\" returnSeq=\"no\" returnVaries=\"no\" isSchema=\"no\" isDatatype=\"no\" isSpecial=\"no\"/></example><example role=\"signature\"><proto name=\"root\" return-type=\"node()?\" isOp=\"no\" prefix=\"fn\" returnEmptyOk=\"no\" returnSeq=\"no\" returnVaries=\"no\" isSchema=\"no\" isDatatype=\"no\" isSpecial=\"no\"><arg name=\"arg\" type=\"node()?\"/></proto></example></p><p xmlns:e=\"http://www.w3.org/1999/XSL/Spec/ElementSyntax\">The zero-argument form of this function is <termref def=\"dt-deterministic\">deterministic</termref>, <termref def=\"dt-context-dependent\">context-dependent</termref>,  and <termref def=\"dt-focus-dependent\">focus-dependent</termref>. </p><p xmlns:e=\"http://www.w3.org/1999/XSL/Spec/ElementSyntax\">The one-argument form of this function is <termref def=\"dt-deterministic\">deterministic</termref>, <termref def=\"dt-context-independent\">context-independent</termref>,  and <termref def=\"dt-focus-independent\">focus-independent</termref>. </p><p xmlns:e=\"http://www.w3.org/1999/XSL/Spec/ElementSyntax\">If the function is called without an argument, the context item (<code>.</code>) is used\n             as the default argument. The behavior of the function if the argument is omitted is\n             exactly the same as if the context item had been passed as the argument.</p><p xmlns:e=\"http://www.w3.org/1999/XSL/Spec/ElementSyntax\">The function returns the value of the expression\n                <code>($arg/ancestor-or-self::node())[1]</code>.</p><p xmlns:e=\"http://www.w3.org/1999/XSL/Spec/ElementSyntax\">The following errors may be raised when <code>$arg</code> is omitted:</p><ul xmlns:e=\"http://www.w3.org/1999/XSL/Spec/ElementSyntax\"><li><p>If the context\n                item is <xtermref ref=\"dt-absent\" spec=\"DM30\">absent</xtermref>, <phrase diff=\"add\" at=\"M\">dynamic error</phrase>\n                <xerrorref spec=\"XP\" class=\"DY\" code=\"0002\" type=\"dynamic\"/></p></li><li><p>If the context item is not a\n                node, <phrase diff=\"add\" at=\"M\">type error</phrase> <xerrorref spec=\"XP\" class=\"TY\" code=\"0004\" type=\"type\"/>.</p></li></ul></div>\n", "summary" : "<p>  Returns the root of the tree to which  $arg  belongs.</p>", "annotation_str" : "", "annotations" : [  ], "updating" : false, "parameters" : [  ], "returns" : { "type" : "node()", "description" : "" }, "errors" : [  ] }, { "isDocumented" : true, "arity" : 1, "name" : "root", "qname" : "fn:root", "signature" : "($arg as node()?) as node()? external", "description" : " <div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"><p xmlns:e=\"http://www.w3.org/1999/XSL/Spec/ElementSyntax\">Returns the root of the tree to which <code>$arg</code> belongs. This will\n             usually, but not necessarily, be a document node.</p><p xmlns:e=\"http://www.w3.org/1999/XSL/Spec/ElementSyntax\"><example role=\"signature\"><proto name=\"root\" return-type=\"node()\" isOp=\"no\" prefix=\"fn\" returnEmptyOk=\"no\" returnSeq=\"no\" returnVaries=\"no\" isSchema=\"no\" isDatatype=\"no\" isSpecial=\"no\"/></example><example role=\"signature\"><proto name=\"root\" return-type=\"node()?\" isOp=\"no\" prefix=\"fn\" returnEmptyOk=\"no\" returnSeq=\"no\" returnVaries=\"no\" isSchema=\"no\" isDatatype=\"no\" isSpecial=\"no\"><arg name=\"arg\" type=\"node()?\"/></proto></example></p><p xmlns:e=\"http://www.w3.org/1999/XSL/Spec/ElementSyntax\">The zero-argument form of this function is <termref def=\"dt-deterministic\">deterministic</termref>, <termref def=\"dt-context-dependent\">context-dependent</termref>,  and <termref def=\"dt-focus-dependent\">focus-dependent</termref>. </p><p xmlns:e=\"http://www.w3.org/1999/XSL/Spec/ElementSyntax\">The one-argument form of this function is <termref def=\"dt-deterministic\">deterministic</termref>, <termref def=\"dt-context-independent\">context-independent</termref>,  and <termref def=\"dt-focus-independent\">focus-independent</termref>. </p><p xmlns:e=\"http://www.w3.org/1999/XSL/Spec/ElementSyntax\">If the function is called without an argument, the context item (<code>.</code>) is used\n             as the default argument. The behavior of the function if the argument is omitted is\n             exactly the same as if the context item had been passed as the argument.</p><p xmlns:e=\"http://www.w3.org/1999/XSL/Spec/ElementSyntax\">The function returns the value of the expression\n                <code>($arg/ancestor-or-self::node())[1]</code>.</p><p xmlns:e=\"http://www.w3.org/1999/XSL/Spec/ElementSyntax\">The following errors may be raised when <code>$arg</code> is omitted:</p><ul xmlns:e=\"http://www.w3.org/1999/XSL/Spec/ElementSyntax\"><li><p>If the context\n                item is <xtermref ref=\"dt-absent\" spec=\"DM30\">absent</xtermref>, <phrase diff=\"add\" at=\"M\">dynamic error</phrase>\n                <xerrorref spec=\"XP\" class=\"DY\" code=\"0002\" type=\"dynamic\"/></p></li><li><p>If the context item is not a\n                node, <phrase diff=\"add\" at=\"M\">type error</phrase> <xerrorref spec=\"XP\" class=\"TY\" code=\"0004\" type=\"type\"/>.</p></li></ul></div>\n", "summary" : "<p>  Returns the root of the tree to which  $arg  belongs.</p>", "annotation_str" : "", "annotations" : [  ], "updating" : false, "parameters" : [ { "name" : "arg", "type" : "node()", "occurrence" : "?", "description" : "" } ], "returns" : { "type" : "node()?", "description" : "" }, "errors" : [  ] }, { "isDocumented" : true, "arity" : 1, "name" : "round-half-to-even", "qname" : "fn:round-half-to-even", "signature" : "($arg as numeric?) as numeric? external", "description" : " <div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"><p xmlns:e=\"http://www.w3.org/1999/XSL/Spec/ElementSyntax\">Rounds a value to a specified number of decimal places, rounding to make the\n             last digit even if two such values are equally near.</p><p xmlns:e=\"http://www.w3.org/1999/XSL/Spec/ElementSyntax\"><example role=\"signature\"><proto name=\"round-half-to-even\" return-type=\"numeric?\" isOp=\"no\" prefix=\"fn\" returnEmptyOk=\"no\" returnSeq=\"no\" returnVaries=\"no\" isSchema=\"no\" isDatatype=\"no\" isSpecial=\"no\"><arg name=\"arg\" type=\"numeric?\"/></proto></example><example role=\"signature\"><proto name=\"round-half-to-even\" return-type=\"numeric?\" isOp=\"no\" prefix=\"fn\" returnEmptyOk=\"no\" returnSeq=\"no\" returnVaries=\"no\" isSchema=\"no\" isDatatype=\"no\" isSpecial=\"no\"><arg name=\"arg\" type=\"numeric?\"/><arg name=\"precision\" type=\"xs:integer\"/></proto></example></p><p xmlns:e=\"http://www.w3.org/1999/XSL/Spec/ElementSyntax\">This function is <termref def=\"dt-deterministic\">deterministic</termref>, <termref def=\"dt-context-independent\">context-independent</termref>,  and <termref def=\"dt-focus-independent\">focus-independent</termref>. </p><p xmlns:e=\"http://www.w3.org/1999/XSL/Spec/ElementSyntax\">General rules: see <specref ref=\"numeric-value-functions\"/>.</p><p xmlns:e=\"http://www.w3.org/1999/XSL/Spec/ElementSyntax\">The function returns the nearest (that is, numerically closest) value to\n                <code>$arg</code> that is a multiple of ten to the power of minus\n                <code>$precision</code>. If two such values are equally near (e.g. if the fractional\n             part in <code>$arg</code> is exactly .500...), the function returns the one whose least\n             significant digit is even.</p><p xmlns:e=\"http://www.w3.org/1999/XSL/Spec/ElementSyntax\">If the type of <code>$arg</code> is one of the four numeric types <code>xs:float</code>,\n                <code>xs:double</code>, <code>xs:decimal</code> or <code>xs:integer</code> the type\n             of the result is the same as the type of <code>$arg</code>. If the type of\n                <code>$arg</code> is a type derived from one of the numeric types, the result is an\n             instance of the base numeric type.</p><p xmlns:e=\"http://www.w3.org/1999/XSL/Spec/ElementSyntax\"> The first signature of this function produces the same result as the second signature\n             with <code>$precision=0</code>.</p><p xmlns:e=\"http://www.w3.org/1999/XSL/Spec/ElementSyntax\">For arguments of type <code>xs:float</code> and <code>xs:double</code>:</p><olist xmlns:e=\"http://www.w3.org/1999/XSL/Spec/ElementSyntax\"><item><p>If the argument is <code>NaN</code>, positive or negative zero, or positive or\n                   negative infinity, then the result is the same as the argument.</p></item><item><p>In all other cases, the argument is cast to <code>xs:decimal</code>\n                   <phrase diff=\"add\" at=\"A\">using an implementation of xs:decimal that imposes no\n                      limits on the number of digits that can be represented.</phrase> The function\n                   is applied to this <code>xs:decimal</code> value, and the resulting\n                      <code>xs:decimal</code> is cast back to <code>xs:float</code> or\n                      <code>xs:double</code> as appropriate to form the function result. If the\n                   resulting <code>xs:decimal</code> value is zero, then positive or negative zero is\n                   returned according to the sign of the original argument.</p></item></olist><p xmlns:e=\"http://www.w3.org/1999/XSL/Spec/ElementSyntax\" diff=\"del\" at=\"F\">For detailed type semantics, see [Formal Semantics].</p><p xmlns:e=\"http://www.w3.org/1999/XSL/Spec/ElementSyntax\" diff=\"chg\" at=\"A\">This function is typically used in financial applications where the\n             argument is of type <code>xs:decimal</code>. For arguments of type <code>xs:float</code>\n             and <code>xs:double</code> the results may be counter-intuitive. For example, consider\n                <code>round-half-to-even(xs:float(150.015), 2)</code>. The result is not 150.02 as\n             might be expected, but 150.01. This is because the conversion of the\n                <code>xs:float</code> value represented by the literal 150.015 to an\n                <code>xs:decimal</code> produces the <code>xs:decimal</code> value 150.014999389...,\n             which is closer to 150.01 than to 150.02.</p></div>\n", "summary" : "<p>  Rounds a value to a specified number of decimal places, rounding to make the\n             last digit even if two such values are equally near.</p>", "annotation_str" : "", "annotations" : [  ], "updating" : false, "parameters" : [ { "name" : "arg", "type" : "numeric", "occurrence" : "?", "description" : "" } ], "returns" : { "type" : "numeric?", "description" : "" }, "errors" : [  ] }, { "isDocumented" : true, "arity" : 2, "name" : "round-half-to-even", "qname" : "fn:round-half-to-even", "signature" : "($arg as numeric?, $precision as xs:integer) as numeric? external", "description" : " <div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"><p xmlns:e=\"http://www.w3.org/1999/XSL/Spec/ElementSyntax\">Rounds a value to a specified number of decimal places, rounding to make the\n             last digit even if two such values are equally near.</p><p xmlns:e=\"http://www.w3.org/1999/XSL/Spec/ElementSyntax\"><example role=\"signature\"><proto name=\"round-half-to-even\" return-type=\"numeric?\" isOp=\"no\" prefix=\"fn\" returnEmptyOk=\"no\" returnSeq=\"no\" returnVaries=\"no\" isSchema=\"no\" isDatatype=\"no\" isSpecial=\"no\"><arg name=\"arg\" type=\"numeric?\"/></proto></example><example role=\"signature\"><proto name=\"round-half-to-even\" return-type=\"numeric?\" isOp=\"no\" prefix=\"fn\" returnEmptyOk=\"no\" returnSeq=\"no\" returnVaries=\"no\" isSchema=\"no\" isDatatype=\"no\" isSpecial=\"no\"><arg name=\"arg\" type=\"numeric?\"/><arg name=\"precision\" type=\"xs:integer\"/></proto></example></p><p xmlns:e=\"http://www.w3.org/1999/XSL/Spec/ElementSyntax\">This function is <termref def=\"dt-deterministic\">deterministic</termref>, <termref def=\"dt-context-independent\">context-independent</termref>,  and <termref def=\"dt-focus-independent\">focus-independent</termref>. </p><p xmlns:e=\"http://www.w3.org/1999/XSL/Spec/ElementSyntax\">General rules: see <specref ref=\"numeric-value-functions\"/>.</p><p xmlns:e=\"http://www.w3.org/1999/XSL/Spec/ElementSyntax\">The function returns the nearest (that is, numerically closest) value to\n                <code>$arg</code> that is a multiple of ten to the power of minus\n                <code>$precision</code>. If two such values are equally near (e.g. if the fractional\n             part in <code>$arg</code> is exactly .500...), the function returns the one whose least\n             significant digit is even.</p><p xmlns:e=\"http://www.w3.org/1999/XSL/Spec/ElementSyntax\">If the type of <code>$arg</code> is one of the four numeric types <code>xs:float</code>,\n                <code>xs:double</code>, <code>xs:decimal</code> or <code>xs:integer</code> the type\n             of the result is the same as the type of <code>$arg</code>. If the type of\n                <code>$arg</code> is a type derived from one of the numeric types, the result is an\n             instance of the base numeric type.</p><p xmlns:e=\"http://www.w3.org/1999/XSL/Spec/ElementSyntax\"> The first signature of this function produces the same result as the second signature\n             with <code>$precision=0</code>.</p><p xmlns:e=\"http://www.w3.org/1999/XSL/Spec/ElementSyntax\">For arguments of type <code>xs:float</code> and <code>xs:double</code>:</p><olist xmlns:e=\"http://www.w3.org/1999/XSL/Spec/ElementSyntax\"><item><p>If the argument is <code>NaN</code>, positive or negative zero, or positive or\n                   negative infinity, then the result is the same as the argument.</p></item><item><p>In all other cases, the argument is cast to <code>xs:decimal</code>\n                   <phrase diff=\"add\" at=\"A\">using an implementation of xs:decimal that imposes no\n                      limits on the number of digits that can be represented.</phrase> The function\n                   is applied to this <code>xs:decimal</code> value, and the resulting\n                      <code>xs:decimal</code> is cast back to <code>xs:float</code> or\n                      <code>xs:double</code> as appropriate to form the function result. If the\n                   resulting <code>xs:decimal</code> value is zero, then positive or negative zero is\n                   returned according to the sign of the original argument.</p></item></olist><p xmlns:e=\"http://www.w3.org/1999/XSL/Spec/ElementSyntax\" diff=\"del\" at=\"F\">For detailed type semantics, see [Formal Semantics].</p><p xmlns:e=\"http://www.w3.org/1999/XSL/Spec/ElementSyntax\" diff=\"chg\" at=\"A\">This function is typically used in financial applications where the\n             argument is of type <code>xs:decimal</code>. For arguments of type <code>xs:float</code>\n             and <code>xs:double</code> the results may be counter-intuitive. For example, consider\n                <code>round-half-to-even(xs:float(150.015), 2)</code>. The result is not 150.02 as\n             might be expected, but 150.01. This is because the conversion of the\n                <code>xs:float</code> value represented by the literal 150.015 to an\n                <code>xs:decimal</code> produces the <code>xs:decimal</code> value 150.014999389...,\n             which is closer to 150.01 than to 150.02.</p></div>\n", "summary" : "<p>  Rounds a value to a specified number of decimal places, rounding to make the\n             last digit even if two such values are equally near.</p>", "annotation_str" : "", "annotations" : [  ], "updating" : false, "parameters" : [ { "name" : "arg", "type" : "numeric", "occurrence" : "?", "description" : "" }, { "name" : "precision", "type" : "xs:integer", "occurrence" : null, "description" : "" } ], "returns" : { "type" : "numeric?", "description" : "" }, "errors" : [  ] }, { "isDocumented" : true, "arity" : 1, "name" : "round", "qname" : "fn:round", "signature" : "($arg as numeric?) as numeric? external", "description" : " <div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"><p xmlns:e=\"http://www.w3.org/1999/XSL/Spec/ElementSyntax\">Rounds a value to a specified number of decimal places, rounding upwards if two\n             such values are equally near.</p><p xmlns:e=\"http://www.w3.org/1999/XSL/Spec/ElementSyntax\"><example role=\"signature\"><proto name=\"round\" return-type=\"numeric?\" isOp=\"no\" prefix=\"fn\" returnEmptyOk=\"no\" returnSeq=\"no\" returnVaries=\"no\" isSchema=\"no\" isDatatype=\"no\" isSpecial=\"no\"><arg name=\"arg\" type=\"numeric?\"/></proto></example><example role=\"signature\"><proto name=\"round\" return-type=\"numeric?\" isOp=\"no\" prefix=\"fn\" returnEmptyOk=\"no\" returnSeq=\"no\" returnVaries=\"no\" isSchema=\"no\" isDatatype=\"no\" isSpecial=\"no\"><arg name=\"arg\" type=\"numeric?\"/><arg name=\"precision\" type=\"xs:integer\"/></proto></example></p><p xmlns:e=\"http://www.w3.org/1999/XSL/Spec/ElementSyntax\">This function is <termref def=\"dt-deterministic\">deterministic</termref>, <termref def=\"dt-context-independent\">context-independent</termref>,  and <termref def=\"dt-focus-independent\">focus-independent</termref>. </p><p xmlns:e=\"http://www.w3.org/1999/XSL/Spec/ElementSyntax\">General rules: see <specref ref=\"numeric-value-functions\"/>.</p><p xmlns:e=\"http://www.w3.org/1999/XSL/Spec/ElementSyntax\">The function returns the nearest (that is, numerically closest) value to\n                <code>$arg</code> that is a multiple of ten to the power of minus\n                <code>$precision</code>. If two such values are equally near (for example, if the\n             fractional part in <code>$arg</code> is exactly .5), the function returns the one that\n             is closest to positive infinity.</p><p xmlns:e=\"http://www.w3.org/1999/XSL/Spec/ElementSyntax\">If the type of <code>$arg</code> is one of the four numeric types <code>xs:float</code>,\n                <code>xs:double</code>, <code>xs:decimal</code> or <code>xs:integer</code> the type\n             of the result is the same as the type of <code>$arg</code>. If the type of\n                <code>$arg</code> is a type derived from one of the numeric types, the result is an\n             instance of the base numeric type.</p><p xmlns:e=\"http://www.w3.org/1999/XSL/Spec/ElementSyntax\">The single-argument version of this function produces the same result as the\n             two-argument version with <code>$precision=0</code> (that is, it rounds to a whole\n             number).</p><p xmlns:e=\"http://www.w3.org/1999/XSL/Spec/ElementSyntax\">When <code>$arg</code> is of type <code>xs:float</code> and <code>xs:double</code>:</p><olist xmlns:e=\"http://www.w3.org/1999/XSL/Spec/ElementSyntax\"><item><p>If <code>$arg</code> is NaN, positive or negative zero, or positive or negative\n                   infinity, then the result is the same as the argument.</p></item><item><p>For other values, the argument is cast to <code>xs:decimal</code> using an\n                   implementation of <code>xs:decimal</code> that imposes no limits on the number of\n                   digits that can be represented. The function is applied to this\n                      <code>xs:decimal</code> value, and the resulting <code>xs:decimal</code> is\n                   cast back to <code>xs:float</code> or <code>xs:double</code> as appropriate to\n                   form the function result. If the resulting <code>xs:decimal</code> value is zero,\n                   then positive or negative zero is returned according to the sign of\n                      <code>$arg</code>.</p></item></olist><p xmlns:e=\"http://www.w3.org/1999/XSL/Spec/ElementSyntax\" diff=\"del\" at=\"F\">For detailed type semantics, see [Formal Semantics].</p><p xmlns:e=\"http://www.w3.org/1999/XSL/Spec/ElementSyntax\">This function is typically used with a non-zero <code>$precision</code> in financial\n             applications where the argument is of type <code>xs:decimal</code>. For arguments of\n             type <code>xs:float</code> and <code>xs:double</code> the results may be\n             counter-intuitive. For example, consider <code>round(35.425e0, 2)</code>. The result is\n             not 35.43, as might be expected, but 35.42. This is because the <code>xs:double</code> written as 35.425e0\n             has an exact value equal to 35.42499999999..., which is closer\n             to 35.42 than to 35.43.</p></div>\n", "summary" : "<p>  Rounds a value to a specified number of decimal places, rounding upwards if two\n             such values are equally near.</p>", "annotation_str" : "", "annotations" : [  ], "updating" : false, "parameters" : [ { "name" : "arg", "type" : "numeric", "occurrence" : "?", "description" : "" } ], "returns" : { "type" : "numeric?", "description" : "" }, "errors" : [  ] }, { "isDocumented" : true, "arity" : 2, "name" : "round", "qname" : "fn:round", "signature" : "($arg as numeric?, $precision as xs:integer) as numeric? external", "description" : " <div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"><p xmlns:e=\"http://www.w3.org/1999/XSL/Spec/ElementSyntax\">Rounds a value to a specified number of decimal places, rounding upwards if two\n             such values are equally near.</p><p xmlns:e=\"http://www.w3.org/1999/XSL/Spec/ElementSyntax\"><example role=\"signature\"><proto name=\"round\" return-type=\"numeric?\" isOp=\"no\" prefix=\"fn\" returnEmptyOk=\"no\" returnSeq=\"no\" returnVaries=\"no\" isSchema=\"no\" isDatatype=\"no\" isSpecial=\"no\"><arg name=\"arg\" type=\"numeric?\"/></proto></example><example role=\"signature\"><proto name=\"round\" return-type=\"numeric?\" isOp=\"no\" prefix=\"fn\" returnEmptyOk=\"no\" returnSeq=\"no\" returnVaries=\"no\" isSchema=\"no\" isDatatype=\"no\" isSpecial=\"no\"><arg name=\"arg\" type=\"numeric?\"/><arg name=\"precision\" type=\"xs:integer\"/></proto></example></p><p xmlns:e=\"http://www.w3.org/1999/XSL/Spec/ElementSyntax\">This function is <termref def=\"dt-deterministic\">deterministic</termref>, <termref def=\"dt-context-independent\">context-independent</termref>,  and <termref def=\"dt-focus-independent\">focus-independent</termref>. </p><p xmlns:e=\"http://www.w3.org/1999/XSL/Spec/ElementSyntax\">General rules: see <specref ref=\"numeric-value-functions\"/>.</p><p xmlns:e=\"http://www.w3.org/1999/XSL/Spec/ElementSyntax\">The function returns the nearest (that is, numerically closest) value to\n                <code>$arg</code> that is a multiple of ten to the power of minus\n                <code>$precision</code>. If two such values are equally near (for example, if the\n             fractional part in <code>$arg</code> is exactly .5), the function returns the one that\n             is closest to positive infinity.</p><p xmlns:e=\"http://www.w3.org/1999/XSL/Spec/ElementSyntax\">If the type of <code>$arg</code> is one of the four numeric types <code>xs:float</code>,\n                <code>xs:double</code>, <code>xs:decimal</code> or <code>xs:integer</code> the type\n             of the result is the same as the type of <code>$arg</code>. If the type of\n                <code>$arg</code> is a type derived from one of the numeric types, the result is an\n             instance of the base numeric type.</p><p xmlns:e=\"http://www.w3.org/1999/XSL/Spec/ElementSyntax\">The single-argument version of this function produces the same result as the\n             two-argument version with <code>$precision=0</code> (that is, it rounds to a whole\n             number).</p><p xmlns:e=\"http://www.w3.org/1999/XSL/Spec/ElementSyntax\">When <code>$arg</code> is of type <code>xs:float</code> and <code>xs:double</code>:</p><olist xmlns:e=\"http://www.w3.org/1999/XSL/Spec/ElementSyntax\"><item><p>If <code>$arg</code> is NaN, positive or negative zero, or positive or negative\n                   infinity, then the result is the same as the argument.</p></item><item><p>For other values, the argument is cast to <code>xs:decimal</code> using an\n                   implementation of <code>xs:decimal</code> that imposes no limits on the number of\n                   digits that can be represented. The function is applied to this\n                      <code>xs:decimal</code> value, and the resulting <code>xs:decimal</code> is\n                   cast back to <code>xs:float</code> or <code>xs:double</code> as appropriate to\n                   form the function result. If the resulting <code>xs:decimal</code> value is zero,\n                   then positive or negative zero is returned according to the sign of\n                      <code>$arg</code>.</p></item></olist><p xmlns:e=\"http://www.w3.org/1999/XSL/Spec/ElementSyntax\" diff=\"del\" at=\"F\">For detailed type semantics, see [Formal Semantics].</p><p xmlns:e=\"http://www.w3.org/1999/XSL/Spec/ElementSyntax\">This function is typically used with a non-zero <code>$precision</code> in financial\n             applications where the argument is of type <code>xs:decimal</code>. For arguments of\n             type <code>xs:float</code> and <code>xs:double</code> the results may be\n             counter-intuitive. For example, consider <code>round(35.425e0, 2)</code>. The result is\n             not 35.43, as might be expected, but 35.42. This is because the <code>xs:double</code> written as 35.425e0\n             has an exact value equal to 35.42499999999..., which is closer\n             to 35.42 than to 35.43.</p></div>\n", "summary" : "<p>  Rounds a value to a specified number of decimal places, rounding upwards if two\n             such values are equally near.</p>", "annotation_str" : "", "annotations" : [  ], "updating" : false, "parameters" : [ { "name" : "arg", "type" : "numeric", "occurrence" : "?", "description" : "" }, { "name" : "precision", "type" : "xs:integer", "occurrence" : null, "description" : "" } ], "returns" : { "type" : "numeric?", "description" : "" }, "errors" : [  ] }, { "isDocumented" : true, "arity" : 1, "name" : "seconds-from-dateTime", "qname" : "fn:seconds-from-dateTime", "signature" : "($arg as xs:dateTime?) as xs:decimal? external", "description" : " <div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"><p xmlns:e=\"http://www.w3.org/1999/XSL/Spec/ElementSyntax\">Returns the seconds component of an <code>xs:dateTime</code>.</p><p xmlns:e=\"http://www.w3.org/1999/XSL/Spec/ElementSyntax\"><example role=\"signature\"><proto name=\"seconds-from-dateTime\" return-type=\"xs:decimal?\" isOp=\"no\" prefix=\"fn\" returnEmptyOk=\"no\" returnSeq=\"no\" returnVaries=\"no\" isSchema=\"no\" isDatatype=\"no\" isSpecial=\"no\"><arg name=\"arg\" type=\"xs:dateTime?\"/></proto></example></p><p xmlns:e=\"http://www.w3.org/1999/XSL/Spec/ElementSyntax\">This function is <termref def=\"dt-deterministic\">deterministic</termref>, <termref def=\"dt-context-independent\">context-independent</termref>,  and <termref def=\"dt-focus-independent\">focus-independent</termref>. </p><p xmlns:e=\"http://www.w3.org/1999/XSL/Spec/ElementSyntax\">If <code>$arg</code> is the empty sequence, the function returns the empty sequence.</p><p xmlns:e=\"http://www.w3.org/1999/XSL/Spec/ElementSyntax\">Otherwise, the function returns an <code>xs:decimal</code> value greater than or equal\n             to zero and less than 60, representing the seconds and fractional seconds in the local\n             value of <code>$arg</code>.</p><p xmlns:e=\"http://www.w3.org/1999/XSL/Spec/ElementSyntax\">The expression <code>fn:seconds-from-dateTime(xs:dateTime(\"1999-05-31T13:20:00-05:00\"))</code> returns <code>0</code>.</p></div>\n", "summary" : "<p>  Returns the seconds component of an  xs:dateTime .</p>", "annotation_str" : "", "annotations" : [  ], "updating" : false, "parameters" : [ { "name" : "arg", "type" : "xs:dateTime", "occurrence" : "?", "description" : "" } ], "returns" : { "type" : "xs:decimal?", "description" : "" }, "errors" : [  ] }, { "isDocumented" : true, "arity" : 1, "name" : "seconds-from-duration", "qname" : "fn:seconds-from-duration", "signature" : "($arg as xs:duration?) as xs:decimal? external", "description" : " <div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"><p xmlns:e=\"http://www.w3.org/1999/XSL/Spec/ElementSyntax\">Returns the number of seconds in a duration.</p><p xmlns:e=\"http://www.w3.org/1999/XSL/Spec/ElementSyntax\"><example role=\"signature\"><proto name=\"seconds-from-duration\" return-type=\"xs:decimal?\" isOp=\"no\" prefix=\"fn\" returnEmptyOk=\"no\" returnSeq=\"no\" returnVaries=\"no\" isSchema=\"no\" isDatatype=\"no\" isSpecial=\"no\"><arg name=\"arg\" type=\"xs:duration?\"/></proto></example></p><p xmlns:e=\"http://www.w3.org/1999/XSL/Spec/ElementSyntax\">This function is <termref def=\"dt-deterministic\">deterministic</termref>, <termref def=\"dt-context-independent\">context-independent</termref>,  and <termref def=\"dt-focus-independent\">focus-independent</termref>. </p><p xmlns:e=\"http://www.w3.org/1999/XSL/Spec/ElementSyntax\">If <code>$arg</code> is the empty sequence, the function returns the empty sequence.</p><p xmlns:e=\"http://www.w3.org/1999/XSL/Spec/ElementSyntax\">Otherwise, the function returns an <code>xs:decimal</code> representing the seconds\n             component in the value of <code>$arg</code>. The result is obtained by casting\n                <code>$arg</code> to an <code>xs:dayTimeDuration</code> (see <specref ref=\"casting-to-durations\"/>) and then computing the seconds component as described\n             in <specref ref=\"canonical-dayTimeDuration\"/>.</p><p xmlns:e=\"http://www.w3.org/1999/XSL/Spec/ElementSyntax\">If <code>$arg</code> is a negative duration then the result will be negative..</p><p xmlns:e=\"http://www.w3.org/1999/XSL/Spec/ElementSyntax\">If <code>$arg</code> is an <code>xs:yearMonthDuration</code> the function returns 0.</p><p xmlns:e=\"http://www.w3.org/1999/XSL/Spec/ElementSyntax\">The expression <code>fn:seconds-from-duration(xs:dayTimeDuration(\"P3DT10H12.5S\"))</code> returns <code>12.5</code>.</p><p xmlns:e=\"http://www.w3.org/1999/XSL/Spec/ElementSyntax\">The expression <code>fn:seconds-from-duration(xs:dayTimeDuration(\"-PT256S\"))</code> returns <code>-16.0</code>.</p></div>\n", "summary" : "<p>  Returns the number of seconds in a duration.</p>", "annotation_str" : "", "annotations" : [  ], "updating" : false, "parameters" : [ { "name" : "arg", "type" : "xs:duration", "occurrence" : "?", "description" : "" } ], "returns" : { "type" : "xs:decimal?", "description" : "" }, "errors" : [  ] }, { "isDocumented" : true, "arity" : 1, "name" : "seconds-from-time", "qname" : "fn:seconds-from-time", "signature" : "($arg as xs:time?) as xs:decimal? external", "description" : " <div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"><p xmlns:e=\"http://www.w3.org/1999/XSL/Spec/ElementSyntax\">Returns the seconds component of an <code>xs:time</code>.</p><p xmlns:e=\"http://www.w3.org/1999/XSL/Spec/ElementSyntax\"><example role=\"signature\"><proto name=\"seconds-from-time\" return-type=\"xs:decimal?\" isOp=\"no\" prefix=\"fn\" returnEmptyOk=\"no\" returnSeq=\"no\" returnVaries=\"no\" isSchema=\"no\" isDatatype=\"no\" isSpecial=\"no\"><arg name=\"arg\" type=\"xs:time?\"/></proto></example></p><p xmlns:e=\"http://www.w3.org/1999/XSL/Spec/ElementSyntax\">This function is <termref def=\"dt-deterministic\">deterministic</termref>, <termref def=\"dt-context-independent\">context-independent</termref>,  and <termref def=\"dt-focus-independent\">focus-independent</termref>. </p><p xmlns:e=\"http://www.w3.org/1999/XSL/Spec/ElementSyntax\">If <code>$arg</code> is the empty sequence, the function returns the empty sequence.</p><p xmlns:e=\"http://www.w3.org/1999/XSL/Spec/ElementSyntax\">Otherwise, the function returns an <code>xs:decimal</code> value greater than or equal\n             to zero and less than 60, representing the seconds and fractional seconds in the local\n             value of <code>$arg</code>.</p><p xmlns:e=\"http://www.w3.org/1999/XSL/Spec/ElementSyntax\">The expression <code>fn:seconds-from-time(xs:time(\"13:20:10.5\"))</code> returns <code>10.5</code>.</p></div>\n", "summary" : "<p>  Returns the seconds component of an  xs:time .</p>", "annotation_str" : "", "annotations" : [  ], "updating" : false, "parameters" : [ { "name" : "arg", "type" : "xs:time", "occurrence" : "?", "description" : "" } ], "returns" : { "type" : "xs:decimal?", "description" : "" }, "errors" : [  ] }, { "isDocumented" : true, "arity" : 1, "name" : "serialize", "qname" : "fn:serialize", "signature" : "($arg as item()*) as xs:string external", "description" : " <div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"><p xmlns:e=\"http://www.w3.org/1999/XSL/Spec/ElementSyntax\">This function serializes the supplied <phrase diff=\"chg\" at=\"G\">input\n                sequence</phrase>\n             <code>$arg</code> as described in <bibref ref=\"xslt-xquery-serialization-30\"/>,\n             returning the serialized <phrase diff=\"chg\" at=\"G\">representation of the\n                sequence</phrase> as a string.</p><p xmlns:e=\"http://www.w3.org/1999/XSL/Spec/ElementSyntax\"><example role=\"signature\"><proto name=\"serialize\" return-type=\"xs:string\" isOp=\"no\" prefix=\"fn\" returnEmptyOk=\"no\" returnSeq=\"no\" returnVaries=\"no\" isSchema=\"no\" isDatatype=\"no\" isSpecial=\"no\"><arg name=\"arg\" type=\"item()*\"/></proto></example><example role=\"signature\"><proto name=\"serialize\" return-type=\"xs:string\" isOp=\"no\" prefix=\"fn\" returnEmptyOk=\"no\" returnSeq=\"no\" returnVaries=\"no\" isSchema=\"no\" isDatatype=\"no\" isSpecial=\"no\"><arg name=\"arg\" type=\"item()*\"/><arg name=\"params\" type=\"element(output:serialization-parameters)?\"/></proto></example></p><p xmlns:e=\"http://www.w3.org/1999/XSL/Spec/ElementSyntax\">This function is <termref def=\"dt-deterministic\">deterministic</termref>, <termref def=\"dt-context-independent\">context-independent</termref>,  and <termref def=\"dt-focus-independent\">focus-independent</termref>. </p><p xmlns:e=\"http://www.w3.org/1999/XSL/Spec/ElementSyntax\">The value of <code>$arg</code> acts as the input sequence to the serialization process,\n             which starts with sequence normalization.</p><p xmlns:e=\"http://www.w3.org/1999/XSL/Spec/ElementSyntax\" diff=\"chg\" at=\"G\">The single-argument version of this function has the same effect as\n             the two-argument version called with <code>$params</code> set to an empty sequence. This\n             in turn is the same as the effect of passing an\n                <code>output:serialization-parameters</code> element with no child elements.</p><p xmlns:e=\"http://www.w3.org/1999/XSL/Spec/ElementSyntax\" diff=\"chg\" at=\"G\">The <code>$params</code> argument is used to identify a set of\n             serialization parameters. These are supplied in the form of an\n                <code>output:serialization-parameters</code> element, having the format described in\n                <xspecref spec=\"SER30\" ref=\"serparams-in-xdm-instance\"/>.</p><p xmlns:e=\"http://www.w3.org/1999/XSL/Spec/ElementSyntax\">The final stage of serialization, that is, encoding, is skipped. If the serializer does\n             not allow this phase to be skipped, then the sequence of octets returned by the\n             serializer is decoded into a string by reversing the character encoding performed in the\n             final stage.</p><p xmlns:e=\"http://www.w3.org/1999/XSL/Spec/ElementSyntax\" diff=\"add\" at=\"L\">If the host language makes serialization an optional feature and\n          the implementation does not support serialization, then a dynamic error\n             <errorref class=\"DC\" code=\"0010\"/> is raised.</p><p xmlns:e=\"http://www.w3.org/1999/XSL/Spec/ElementSyntax\">The serialization process will raise an error if <code>$arg</code> is an attribute or\n             namespace node.</p><p xmlns:e=\"http://www.w3.org/1999/XSL/Spec/ElementSyntax\">If any serialization error occurs, including the detection of an invalid value for a\n             serialization parameter, this results in the <code>fn:serialize</code> call failing with\n             a dynamic error.</p></div>\n", "summary" : "<p>  This function serializes the supplied  input\n                sequence \n              $arg  as described in   ,\n             returning the serialized  representation of the\n                sequence  as a string.</p>", "annotation_str" : "", "annotations" : [  ], "updating" : false, "parameters" : [ { "name" : "arg", "type" : "item()", "occurrence" : "*", "description" : "" } ], "returns" : { "type" : "xs:string", "description" : "" }, "errors" : [  ] }, { "isDocumented" : true, "arity" : 2, "name" : "serialize", "qname" : "fn:serialize", "signature" : "($arg as item()*, $params as element(output:serialization-parameters)?) as xs:string external", "description" : " <div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"><p xmlns:e=\"http://www.w3.org/1999/XSL/Spec/ElementSyntax\">This function serializes the supplied <phrase diff=\"chg\" at=\"G\">input\n                sequence</phrase>\n             <code>$arg</code> as described in <bibref ref=\"xslt-xquery-serialization-30\"/>,\n             returning the serialized <phrase diff=\"chg\" at=\"G\">representation of the\n                sequence</phrase> as a string.</p><p xmlns:e=\"http://www.w3.org/1999/XSL/Spec/ElementSyntax\"><example role=\"signature\"><proto name=\"serialize\" return-type=\"xs:string\" isOp=\"no\" prefix=\"fn\" returnEmptyOk=\"no\" returnSeq=\"no\" returnVaries=\"no\" isSchema=\"no\" isDatatype=\"no\" isSpecial=\"no\"><arg name=\"arg\" type=\"item()*\"/></proto></example><example role=\"signature\"><proto name=\"serialize\" return-type=\"xs:string\" isOp=\"no\" prefix=\"fn\" returnEmptyOk=\"no\" returnSeq=\"no\" returnVaries=\"no\" isSchema=\"no\" isDatatype=\"no\" isSpecial=\"no\"><arg name=\"arg\" type=\"item()*\"/><arg name=\"params\" type=\"element(output:serialization-parameters)?\"/></proto></example></p><p xmlns:e=\"http://www.w3.org/1999/XSL/Spec/ElementSyntax\">This function is <termref def=\"dt-deterministic\">deterministic</termref>, <termref def=\"dt-context-independent\">context-independent</termref>,  and <termref def=\"dt-focus-independent\">focus-independent</termref>. </p><p xmlns:e=\"http://www.w3.org/1999/XSL/Spec/ElementSyntax\">The value of <code>$arg</code> acts as the input sequence to the serialization process,\n             which starts with sequence normalization.</p><p xmlns:e=\"http://www.w3.org/1999/XSL/Spec/ElementSyntax\" diff=\"chg\" at=\"G\">The single-argument version of this function has the same effect as\n             the two-argument version called with <code>$params</code> set to an empty sequence. This\n             in turn is the same as the effect of passing an\n                <code>output:serialization-parameters</code> element with no child elements.</p><p xmlns:e=\"http://www.w3.org/1999/XSL/Spec/ElementSyntax\" diff=\"chg\" at=\"G\">The <code>$params</code> argument is used to identify a set of\n             serialization parameters. These are supplied in the form of an\n                <code>output:serialization-parameters</code> element, having the format described in\n                <xspecref spec=\"SER30\" ref=\"serparams-in-xdm-instance\"/>.</p><p xmlns:e=\"http://www.w3.org/1999/XSL/Spec/ElementSyntax\">The final stage of serialization, that is, encoding, is skipped. If the serializer does\n             not allow this phase to be skipped, then the sequence of octets returned by the\n             serializer is decoded into a string by reversing the character encoding performed in the\n             final stage.</p><p xmlns:e=\"http://www.w3.org/1999/XSL/Spec/ElementSyntax\" diff=\"add\" at=\"L\">If the host language makes serialization an optional feature and\n          the implementation does not support serialization, then a dynamic error\n             <errorref class=\"DC\" code=\"0010\"/> is raised.</p><p xmlns:e=\"http://www.w3.org/1999/XSL/Spec/ElementSyntax\">The serialization process will raise an error if <code>$arg</code> is an attribute or\n             namespace node.</p><p xmlns:e=\"http://www.w3.org/1999/XSL/Spec/ElementSyntax\">If any serialization error occurs, including the detection of an invalid value for a\n             serialization parameter, this results in the <code>fn:serialize</code> call failing with\n             a dynamic error.</p></div>\n", "summary" : "<p>  This function serializes the supplied  input\n                sequence \n              $arg  as described in   ,\n             returning the serialized  representation of the\n                sequence  as a string.</p>", "annotation_str" : "", "annotations" : [  ], "updating" : false, "parameters" : [ { "name" : "arg", "type" : "item()", "occurrence" : "*", "description" : "" }, { "name" : "params", "type" : "element(output:serialization-parameters)", "occurrence" : "?", "description" : "" } ], "returns" : { "type" : "xs:string", "description" : "" }, "errors" : [  ] }, { "isDocumented" : true, "arity" : 2, "name" : "starts-with", "qname" : "fn:starts-with", "signature" : "($arg1 as xs:string?, $arg2 as xs:string?) as xs:boolean external", "description" : " <div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"><p xmlns:e=\"http://www.w3.org/1999/XSL/Spec/ElementSyntax\">Returns true if the string <code>$arg1</code> contains <code>$arg2</code> as a\n             leading substring, taking collations into account.</p><p xmlns:e=\"http://www.w3.org/1999/XSL/Spec/ElementSyntax\"><example role=\"signature\"><proto name=\"starts-with\" return-type=\"xs:boolean\" isOp=\"no\" prefix=\"fn\" returnEmptyOk=\"no\" returnSeq=\"no\" returnVaries=\"no\" isSchema=\"no\" isDatatype=\"no\" isSpecial=\"no\"><arg name=\"arg1\" type=\"xs:string?\"/><arg name=\"arg2\" type=\"xs:string?\"/></proto></example><example role=\"signature\"><proto name=\"starts-with\" return-type=\"xs:boolean\" isOp=\"no\" prefix=\"fn\" returnEmptyOk=\"no\" returnSeq=\"no\" returnVaries=\"no\" isSchema=\"no\" isDatatype=\"no\" isSpecial=\"no\"><arg name=\"arg1\" type=\"xs:string?\"/><arg name=\"arg2\" type=\"xs:string?\"/><arg name=\"collation\" type=\"xs:string\"/></proto></example></p><p xmlns:e=\"http://www.w3.org/1999/XSL/Spec/ElementSyntax\">The two-argument form of this function is <termref def=\"dt-deterministic\">deterministic</termref>, <termref def=\"dt-context-dependent\">context-dependent</termref>,  and <termref def=\"dt-focus-independent\">focus-independent</termref>.  It depends on\n \t\tcollations.\n \t</p><p xmlns:e=\"http://www.w3.org/1999/XSL/Spec/ElementSyntax\">The three-argument form of this function is <termref def=\"dt-deterministic\">deterministic</termref>, <termref def=\"dt-context-dependent\">context-dependent</termref>,  and <termref def=\"dt-focus-independent\">focus-independent</termref>.  It depends on\n \t\tcollations, and static base uri.\n \t</p><p xmlns:e=\"http://www.w3.org/1999/XSL/Spec/ElementSyntax\">If the value of <code>$arg1</code> or <code>$arg2</code> is the empty sequence, or\n             contains only ignorable collation units, it is interpreted as the zero-length\n             string.</p><p xmlns:e=\"http://www.w3.org/1999/XSL/Spec/ElementSyntax\">If the value of <code>$arg2</code> is the zero-length string, then the function returns\n                <code>true</code>. If the value of <code>$arg1</code> is the zero-length string and\n             the value of <code>$arg2</code> is not the zero-length string, then the function returns\n                <code>false</code>.</p><p xmlns:e=\"http://www.w3.org/1999/XSL/Spec/ElementSyntax\">The collation used by this function is determined according to the rules in <specref ref=\"choosing-a-collation\"/>.</p><p xmlns:e=\"http://www.w3.org/1999/XSL/Spec/ElementSyntax\">The function returns an <code>xs:boolean</code> indicating whether or not the value of\n                <code>$arg1</code> starts with a sequence of collation units that provides a\n                <term>match</term> to the collation units of <code>$arg2</code> according to the\n             collation that is used.</p><note xmlns:e=\"http://www.w3.org/1999/XSL/Spec/ElementSyntax\"><p><term>Match</term> is defined in <bibref ref=\"Unicode-Collations\"/>.</p></note><p xmlns:e=\"http://www.w3.org/1999/XSL/Spec/ElementSyntax\">A <phrase diff=\"add\" at=\"L\">dynamic</phrase> error <rfc2119>may</rfc2119> be raised <errorref class=\"CH\" code=\"0004\"/> if the\n             specified collation does not support collation units.</p></div>\n", "summary" : "<p>  Returns true if the string  $arg1  contains  $arg2  as a\n             leading substring, taking collations into account.</p>", "annotation_str" : "", "annotations" : [  ], "updating" : false, "parameters" : [ { "name" : "arg1", "type" : "xs:string", "occurrence" : "?", "description" : "" }, { "name" : "arg2", "type" : "xs:string", "occurrence" : "?", "description" : "" } ], "returns" : { "type" : "xs:boolean", "description" : "" }, "errors" : [  ] }, { "isDocumented" : true, "arity" : 3, "name" : "starts-with", "qname" : "fn:starts-with", "signature" : "($arg1 as xs:string?, $arg2 as xs:string?, $collation as xs:string) as xs:boolean external", "description" : " <div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"><p xmlns:e=\"http://www.w3.org/1999/XSL/Spec/ElementSyntax\">Returns true if the string <code>$arg1</code> contains <code>$arg2</code> as a\n             leading substring, taking collations into account.</p><p xmlns:e=\"http://www.w3.org/1999/XSL/Spec/ElementSyntax\"><example role=\"signature\"><proto name=\"starts-with\" return-type=\"xs:boolean\" isOp=\"no\" prefix=\"fn\" returnEmptyOk=\"no\" returnSeq=\"no\" returnVaries=\"no\" isSchema=\"no\" isDatatype=\"no\" isSpecial=\"no\"><arg name=\"arg1\" type=\"xs:string?\"/><arg name=\"arg2\" type=\"xs:string?\"/></proto></example><example role=\"signature\"><proto name=\"starts-with\" return-type=\"xs:boolean\" isOp=\"no\" prefix=\"fn\" returnEmptyOk=\"no\" returnSeq=\"no\" returnVaries=\"no\" isSchema=\"no\" isDatatype=\"no\" isSpecial=\"no\"><arg name=\"arg1\" type=\"xs:string?\"/><arg name=\"arg2\" type=\"xs:string?\"/><arg name=\"collation\" type=\"xs:string\"/></proto></example></p><p xmlns:e=\"http://www.w3.org/1999/XSL/Spec/ElementSyntax\">The two-argument form of this function is <termref def=\"dt-deterministic\">deterministic</termref>, <termref def=\"dt-context-dependent\">context-dependent</termref>,  and <termref def=\"dt-focus-independent\">focus-independent</termref>.  It depends on\n \t\tcollations.\n \t</p><p xmlns:e=\"http://www.w3.org/1999/XSL/Spec/ElementSyntax\">The three-argument form of this function is <termref def=\"dt-deterministic\">deterministic</termref>, <termref def=\"dt-context-dependent\">context-dependent</termref>,  and <termref def=\"dt-focus-independent\">focus-independent</termref>.  It depends on\n \t\tcollations, and static base uri.\n \t</p><p xmlns:e=\"http://www.w3.org/1999/XSL/Spec/ElementSyntax\">If the value of <code>$arg1</code> or <code>$arg2</code> is the empty sequence, or\n             contains only ignorable collation units, it is interpreted as the zero-length\n             string.</p><p xmlns:e=\"http://www.w3.org/1999/XSL/Spec/ElementSyntax\">If the value of <code>$arg2</code> is the zero-length string, then the function returns\n                <code>true</code>. If the value of <code>$arg1</code> is the zero-length string and\n             the value of <code>$arg2</code> is not the zero-length string, then the function returns\n                <code>false</code>.</p><p xmlns:e=\"http://www.w3.org/1999/XSL/Spec/ElementSyntax\">The collation used by this function is determined according to the rules in <specref ref=\"choosing-a-collation\"/>.</p><p xmlns:e=\"http://www.w3.org/1999/XSL/Spec/ElementSyntax\">The function returns an <code>xs:boolean</code> indicating whether or not the value of\n                <code>$arg1</code> starts with a sequence of collation units that provides a\n                <term>match</term> to the collation units of <code>$arg2</code> according to the\n             collation that is used.</p><note xmlns:e=\"http://www.w3.org/1999/XSL/Spec/ElementSyntax\"><p><term>Match</term> is defined in <bibref ref=\"Unicode-Collations\"/>.</p></note><p xmlns:e=\"http://www.w3.org/1999/XSL/Spec/ElementSyntax\">A <phrase diff=\"add\" at=\"L\">dynamic</phrase> error <rfc2119>may</rfc2119> be raised <errorref class=\"CH\" code=\"0004\"/> if the\n             specified collation does not support collation units.</p></div>\n", "summary" : "<p>  Returns true if the string  $arg1  contains  $arg2  as a\n             leading substring, taking collations into account.</p>", "annotation_str" : "", "annotations" : [  ], "updating" : false, "parameters" : [ { "name" : "arg1", "type" : "xs:string", "occurrence" : "?", "description" : "" }, { "name" : "arg2", "type" : "xs:string", "occurrence" : "?", "description" : "" }, { "name" : "collation", "type" : "xs:string", "occurrence" : null, "description" : "" } ], "returns" : { "type" : "xs:boolean", "description" : "" }, "errors" : [  ] }, { "isDocumented" : true, "arity" : 0, "name" : "static-base-uri", "qname" : "fn:static-base-uri", "signature" : "() as xs:anyURI? external", "description" : " <div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"><p xmlns:e=\"http://www.w3.org/1999/XSL/Spec/ElementSyntax\">This function returns the value of the Static Base URI property from the static context.</p><p xmlns:e=\"http://www.w3.org/1999/XSL/Spec/ElementSyntax\"><example role=\"signature\"><proto name=\"static-base-uri\" return-type=\"xs:anyURI?\" isOp=\"no\" prefix=\"fn\" returnEmptyOk=\"no\" returnSeq=\"no\" returnVaries=\"no\" isSchema=\"no\" isDatatype=\"no\" isSpecial=\"no\"/></example></p><p xmlns:e=\"http://www.w3.org/1999/XSL/Spec/ElementSyntax\">This function is <termref def=\"dt-deterministic\">deterministic</termref>, <termref def=\"dt-context-dependent\">context-dependent</termref>,  and <termref def=\"dt-focus-independent\">focus-independent</termref>.  It depends on\n \t\tstatic base uri.\n \t</p><p xmlns:e=\"http://www.w3.org/1999/XSL/Spec/ElementSyntax\">The function returns the value of the Static Base URI property from the static context. If the\n             property is absent, the empty sequence is returned.</p><p xmlns:e=\"http://www.w3.org/1999/XSL/Spec/ElementSyntax\">Components of the static context are discussed in <xspecref spec=\"XP30\" ref=\"static_context\"/> .</p><p xmlns:e=\"http://www.w3.org/1999/XSL/Spec/ElementSyntax\" diff=\"add\" at=\"L\">XQuery 3.0 and XSLT 3.0 give an implementation freedom to use different base URIs during the\n          static analysis phase and the dynamic evaluation phase, that is, for compile-time and run-time resources respectively.\n          In this situation, the <code>fn:static-base-uri</code> function should return a URI suitable for locating resources needed\n          during dynamic evaluation.</p></div>\n", "summary" : "<p>  This function returns the value of the Static Base URI property from the static context.</p>", "annotation_str" : "", "annotations" : [  ], "updating" : false, "parameters" : [  ], "returns" : { "type" : "xs:anyURI?", "description" : "" }, "errors" : [  ] }, { "isDocumented" : true, "arity" : 1, "name" : "string-join", "qname" : "fn:string-join", "signature" : "($arg1 as xs:string*) as xs:string external", "description" : " <div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"><p xmlns:e=\"http://www.w3.org/1999/XSL/Spec/ElementSyntax\">Returns a string created by concatenating the items in a sequence, with a\n             defined separator between adjacent items.</p><p xmlns:e=\"http://www.w3.org/1999/XSL/Spec/ElementSyntax\"><example role=\"signature\"><proto name=\"string-join\" return-type=\"xs:string\" isOp=\"no\" prefix=\"fn\" returnEmptyOk=\"no\" returnSeq=\"no\" returnVaries=\"no\" isSchema=\"no\" isDatatype=\"no\" isSpecial=\"no\"><arg name=\"arg1\" type=\"xs:string*\"/></proto></example><example role=\"signature\"><proto name=\"string-join\" return-type=\"xs:string\" isOp=\"no\" prefix=\"fn\" returnEmptyOk=\"no\" returnSeq=\"no\" returnVaries=\"no\" isSchema=\"no\" isDatatype=\"no\" isSpecial=\"no\"><arg name=\"arg1\" type=\"xs:string*\"/><arg name=\"arg2\" type=\"xs:string\"/></proto></example></p><p xmlns:e=\"http://www.w3.org/1999/XSL/Spec/ElementSyntax\">This function is <termref def=\"dt-deterministic\">deterministic</termref>, <termref def=\"dt-context-independent\">context-independent</termref>,  and <termref def=\"dt-focus-independent\">focus-independent</termref>. </p><p xmlns:e=\"http://www.w3.org/1999/XSL/Spec/ElementSyntax\" diff=\"add\" at=\"B\">The effect of calling the single-argument version of this function is\n             the same as calling the two-argument version with <code>$arg2</code> set to a\n             zero-length string.</p><p xmlns:e=\"http://www.w3.org/1999/XSL/Spec/ElementSyntax\">The function returns an <code>xs:string</code> created by concatenating the items in the\n             sequence <code>$arg1</code>, in order, using the value of <code>$arg2</code> as a\n             separator between adjacent items. If the value of <code>$arg2</code> is the zero-length\n             string, then the members of <code>$arg1</code> are concatenated without a separator.</p><p xmlns:e=\"http://www.w3.org/1999/XSL/Spec/ElementSyntax\">If the value of <code>$arg1</code> is the empty sequence, the function returns the\n             zero-length string.</p></div>\n", "summary" : "<p>  Returns a string created by concatenating the items in a sequence, with a\n             defined separator between adjacent items.</p>", "annotation_str" : "", "annotations" : [  ], "updating" : false, "parameters" : [ { "name" : "arg1", "type" : "xs:string", "occurrence" : "*", "description" : "" } ], "returns" : { "type" : "xs:string", "description" : "" }, "errors" : [  ] }, { "isDocumented" : true, "arity" : 2, "name" : "string-join", "qname" : "fn:string-join", "signature" : "($arg1 as xs:string*, $arg2 as xs:string) as xs:string external", "description" : " <div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"><p xmlns:e=\"http://www.w3.org/1999/XSL/Spec/ElementSyntax\">Returns a string created by concatenating the items in a sequence, with a\n             defined separator between adjacent items.</p><p xmlns:e=\"http://www.w3.org/1999/XSL/Spec/ElementSyntax\"><example role=\"signature\"><proto name=\"string-join\" return-type=\"xs:string\" isOp=\"no\" prefix=\"fn\" returnEmptyOk=\"no\" returnSeq=\"no\" returnVaries=\"no\" isSchema=\"no\" isDatatype=\"no\" isSpecial=\"no\"><arg name=\"arg1\" type=\"xs:string*\"/></proto></example><example role=\"signature\"><proto name=\"string-join\" return-type=\"xs:string\" isOp=\"no\" prefix=\"fn\" returnEmptyOk=\"no\" returnSeq=\"no\" returnVaries=\"no\" isSchema=\"no\" isDatatype=\"no\" isSpecial=\"no\"><arg name=\"arg1\" type=\"xs:string*\"/><arg name=\"arg2\" type=\"xs:string\"/></proto></example></p><p xmlns:e=\"http://www.w3.org/1999/XSL/Spec/ElementSyntax\">This function is <termref def=\"dt-deterministic\">deterministic</termref>, <termref def=\"dt-context-independent\">context-independent</termref>,  and <termref def=\"dt-focus-independent\">focus-independent</termref>. </p><p xmlns:e=\"http://www.w3.org/1999/XSL/Spec/ElementSyntax\" diff=\"add\" at=\"B\">The effect of calling the single-argument version of this function is\n             the same as calling the two-argument version with <code>$arg2</code> set to a\n             zero-length string.</p><p xmlns:e=\"http://www.w3.org/1999/XSL/Spec/ElementSyntax\">The function returns an <code>xs:string</code> created by concatenating the items in the\n             sequence <code>$arg1</code>, in order, using the value of <code>$arg2</code> as a\n             separator between adjacent items. If the value of <code>$arg2</code> is the zero-length\n             string, then the members of <code>$arg1</code> are concatenated without a separator.</p><p xmlns:e=\"http://www.w3.org/1999/XSL/Spec/ElementSyntax\">If the value of <code>$arg1</code> is the empty sequence, the function returns the\n             zero-length string.</p></div>\n", "summary" : "<p>  Returns a string created by concatenating the items in a sequence, with a\n             defined separator between adjacent items.</p>", "annotation_str" : "", "annotations" : [  ], "updating" : false, "parameters" : [ { "name" : "arg1", "type" : "xs:string", "occurrence" : "*", "description" : "" }, { "name" : "arg2", "type" : "xs:string", "occurrence" : null, "description" : "" } ], "returns" : { "type" : "xs:string", "description" : "" }, "errors" : [  ] }, { "isDocumented" : true, "arity" : 0, "name" : "string-length", "qname" : "fn:string-length", "signature" : "() as xs:integer external", "description" : " <div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"><p xmlns:e=\"http://www.w3.org/1999/XSL/Spec/ElementSyntax\">Returns the number of <termref def=\"character\">characters</termref> in a\n             string.</p><p xmlns:e=\"http://www.w3.org/1999/XSL/Spec/ElementSyntax\"><example role=\"signature\"><proto name=\"string-length\" return-type=\"xs:integer\" isOp=\"no\" prefix=\"fn\" returnEmptyOk=\"no\" returnSeq=\"no\" returnVaries=\"no\" isSchema=\"no\" isDatatype=\"no\" isSpecial=\"no\"/></example><example role=\"signature\"><proto name=\"string-length\" return-type=\"xs:integer\" isOp=\"no\" prefix=\"fn\" returnEmptyOk=\"no\" returnSeq=\"no\" returnVaries=\"no\" isSchema=\"no\" isDatatype=\"no\" isSpecial=\"no\"><arg name=\"arg\" type=\"xs:string?\"/></proto></example></p><p xmlns:e=\"http://www.w3.org/1999/XSL/Spec/ElementSyntax\">The zero-argument form of this function is <termref def=\"dt-deterministic\">deterministic</termref>, <termref def=\"dt-context-dependent\">context-dependent</termref>,  and <termref def=\"dt-focus-dependent\">focus-dependent</termref>. </p><p xmlns:e=\"http://www.w3.org/1999/XSL/Spec/ElementSyntax\">The one-argument form of this function is <termref def=\"dt-deterministic\">deterministic</termref>, <termref def=\"dt-context-independent\">context-independent</termref>,  and <termref def=\"dt-focus-independent\">focus-independent</termref>. </p><p xmlns:e=\"http://www.w3.org/1999/XSL/Spec/ElementSyntax\">The function returns an <code>xs:integer</code> equal to the length in <termref def=\"character\">characters</termref> of the value of <code>$arg</code>.</p><p xmlns:e=\"http://www.w3.org/1999/XSL/Spec/ElementSyntax\">Calling the zero-argument version of the function is equivalent to calling\n                <code>fn:string-length(fn:string(.))</code>.</p><p xmlns:e=\"http://www.w3.org/1999/XSL/Spec/ElementSyntax\">If the value of <code>$arg</code> is the empty sequence, the function returns the\n                <code>xs:integer</code> value zero (0).</p><p xmlns:e=\"http://www.w3.org/1999/XSL/Spec/ElementSyntax\">If <code>$arg</code> is not specified and the context item is <xtermref ref=\"dt-absent\" spec=\"DM30\">absent</xtermref>, a <phrase diff=\"add\" at=\"M\">dynamic</phrase> error is raised: <xerrorref spec=\"XP\" class=\"DY\" code=\"0002\" type=\"dynamic\"/>.</p></div>\n", "summary" : "<p>  Returns the number of  characters  in a\n             string.</p>", "annotation_str" : "", "annotations" : [  ], "updating" : false, "parameters" : [  ], "returns" : { "type" : "xs:integer", "description" : "" }, "errors" : [  ] }, { "isDocumented" : true, "arity" : 1, "name" : "string-length", "qname" : "fn:string-length", "signature" : "($arg as xs:string?) as xs:integer external", "description" : " <div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"><p xmlns:e=\"http://www.w3.org/1999/XSL/Spec/ElementSyntax\">Returns the number of <termref def=\"character\">characters</termref> in a\n             string.</p><p xmlns:e=\"http://www.w3.org/1999/XSL/Spec/ElementSyntax\"><example role=\"signature\"><proto name=\"string-length\" return-type=\"xs:integer\" isOp=\"no\" prefix=\"fn\" returnEmptyOk=\"no\" returnSeq=\"no\" returnVaries=\"no\" isSchema=\"no\" isDatatype=\"no\" isSpecial=\"no\"/></example><example role=\"signature\"><proto name=\"string-length\" return-type=\"xs:integer\" isOp=\"no\" prefix=\"fn\" returnEmptyOk=\"no\" returnSeq=\"no\" returnVaries=\"no\" isSchema=\"no\" isDatatype=\"no\" isSpecial=\"no\"><arg name=\"arg\" type=\"xs:string?\"/></proto></example></p><p xmlns:e=\"http://www.w3.org/1999/XSL/Spec/ElementSyntax\">The zero-argument form of this function is <termref def=\"dt-deterministic\">deterministic</termref>, <termref def=\"dt-context-dependent\">context-dependent</termref>,  and <termref def=\"dt-focus-dependent\">focus-dependent</termref>. </p><p xmlns:e=\"http://www.w3.org/1999/XSL/Spec/ElementSyntax\">The one-argument form of this function is <termref def=\"dt-deterministic\">deterministic</termref>, <termref def=\"dt-context-independent\">context-independent</termref>,  and <termref def=\"dt-focus-independent\">focus-independent</termref>. </p><p xmlns:e=\"http://www.w3.org/1999/XSL/Spec/ElementSyntax\">The function returns an <code>xs:integer</code> equal to the length in <termref def=\"character\">characters</termref> of the value of <code>$arg</code>.</p><p xmlns:e=\"http://www.w3.org/1999/XSL/Spec/ElementSyntax\">Calling the zero-argument version of the function is equivalent to calling\n                <code>fn:string-length(fn:string(.))</code>.</p><p xmlns:e=\"http://www.w3.org/1999/XSL/Spec/ElementSyntax\">If the value of <code>$arg</code> is the empty sequence, the function returns the\n                <code>xs:integer</code> value zero (0).</p><p xmlns:e=\"http://www.w3.org/1999/XSL/Spec/ElementSyntax\">If <code>$arg</code> is not specified and the context item is <xtermref ref=\"dt-absent\" spec=\"DM30\">absent</xtermref>, a <phrase diff=\"add\" at=\"M\">dynamic</phrase> error is raised: <xerrorref spec=\"XP\" class=\"DY\" code=\"0002\" type=\"dynamic\"/>.</p></div>\n", "summary" : "<p>  Returns the number of  characters  in a\n             string.</p>", "annotation_str" : "", "annotations" : [  ], "updating" : false, "parameters" : [ { "name" : "arg", "type" : "xs:string", "occurrence" : "?", "description" : "" } ], "returns" : { "type" : "xs:integer", "description" : "" }, "errors" : [  ] }, { "isDocumented" : true, "arity" : 1, "name" : "string-to-codepoints", "qname" : "fn:string-to-codepoints", "signature" : "($arg as xs:string?) as xs:integer* external", "description" : " <div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"><p xmlns:e=\"http://www.w3.org/1999/XSL/Spec/ElementSyntax\">Returns the sequence of <termref def=\"codepoint\">codepoints</termref> that\n             constitute an <code>xs:string</code> value. </p><p xmlns:e=\"http://www.w3.org/1999/XSL/Spec/ElementSyntax\"><example role=\"signature\"><proto name=\"string-to-codepoints\" return-type=\"xs:integer*\" isOp=\"no\" prefix=\"fn\" returnEmptyOk=\"no\" returnSeq=\"no\" returnVaries=\"no\" isSchema=\"no\" isDatatype=\"no\" isSpecial=\"no\"><arg name=\"arg\" type=\"xs:string?\"/></proto></example></p><p xmlns:e=\"http://www.w3.org/1999/XSL/Spec/ElementSyntax\">This function is <termref def=\"dt-deterministic\">deterministic</termref>, <termref def=\"dt-context-independent\">context-independent</termref>,  and <termref def=\"dt-focus-independent\">focus-independent</termref>. </p><p xmlns:e=\"http://www.w3.org/1999/XSL/Spec/ElementSyntax\">The function returns a sequence of integers, each integer being the Unicode <termref def=\"codepoint\">codepoints</termref> of the corresponding <termref def=\"character\">character</termref> in <code>$arg</code>.</p><p xmlns:e=\"http://www.w3.org/1999/XSL/Spec/ElementSyntax\">If <code>$arg</code> is a zero-length string or the empty sequence, the function returns\n             the empty sequence.</p><p xmlns:e=\"http://www.w3.org/1999/XSL/Spec/ElementSyntax\">The expression <code>fn:string-to-codepoints(\"Thérèse\")</code> returns <code>(84, 104, 233, 114, 232, 115, 101)</code>.</p></div>\n", "summary" : "<p>  Returns the sequence of  codepoints  that\n             constitute an  xs:string  value.</p>", "annotation_str" : "", "annotations" : [  ], "updating" : false, "parameters" : [ { "name" : "arg", "type" : "xs:string", "occurrence" : "?", "description" : "" } ], "returns" : { "type" : "xs:integer*", "description" : "" }, "errors" : [  ] }, { "isDocumented" : true, "arity" : 1, "name" : "string-to-codepoints", "qname" : "fn:string-to-codepoints", "signature" : "($arg as xs:string?) as xs:integer* external", "description" : " <div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"><p xmlns:e=\"http://www.w3.org/1999/XSL/Spec/ElementSyntax\">Returns the sequence of <termref def=\"codepoint\">codepoints</termref> that\n             constitute an <code>xs:string</code> value. </p><p xmlns:e=\"http://www.w3.org/1999/XSL/Spec/ElementSyntax\"><example role=\"signature\"><proto name=\"string-to-codepoints\" return-type=\"xs:integer*\" isOp=\"no\" prefix=\"fn\" returnEmptyOk=\"no\" returnSeq=\"no\" returnVaries=\"no\" isSchema=\"no\" isDatatype=\"no\" isSpecial=\"no\"><arg name=\"arg\" type=\"xs:string?\"/></proto></example></p><p xmlns:e=\"http://www.w3.org/1999/XSL/Spec/ElementSyntax\">This function is <termref def=\"dt-deterministic\">deterministic</termref>, <termref def=\"dt-context-independent\">context-independent</termref>,  and <termref def=\"dt-focus-independent\">focus-independent</termref>. </p><p xmlns:e=\"http://www.w3.org/1999/XSL/Spec/ElementSyntax\">The function returns a sequence of integers, each integer being the Unicode <termref def=\"codepoint\">codepoints</termref> of the corresponding <termref def=\"character\">character</termref> in <code>$arg</code>.</p><p xmlns:e=\"http://www.w3.org/1999/XSL/Spec/ElementSyntax\">If <code>$arg</code> is a zero-length string or the empty sequence, the function returns\n             the empty sequence.</p><p xmlns:e=\"http://www.w3.org/1999/XSL/Spec/ElementSyntax\">The expression <code>fn:string-to-codepoints(\"Thérèse\")</code> returns <code>(84, 104, 233, 114, 232, 115, 101)</code>.</p></div>\n", "summary" : "<p>  Returns the sequence of  codepoints  that\n             constitute an  xs:string  value.</p>", "annotation_str" : "", "annotations" : [  ], "updating" : false, "parameters" : [ { "name" : "arg", "type" : "xs:string", "occurrence" : "?", "description" : "" } ], "returns" : { "type" : "xs:integer*", "description" : "" }, "errors" : [  ] }, { "isDocumented" : true, "arity" : 0, "name" : "string", "qname" : "fn:string", "signature" : "() as xs:string external", "description" : " <div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"><p xmlns:e=\"http://www.w3.org/1999/XSL/Spec/ElementSyntax\">Returns the value of <code>$arg</code> represented as an\n             <code>xs:string</code>.</p><p xmlns:e=\"http://www.w3.org/1999/XSL/Spec/ElementSyntax\"><example role=\"signature\"><proto name=\"string\" return-type=\"xs:string\" isOp=\"no\" prefix=\"fn\" returnEmptyOk=\"no\" returnSeq=\"no\" returnVaries=\"no\" isSchema=\"no\" isDatatype=\"no\" isSpecial=\"no\"/></example><example role=\"signature\"><proto name=\"string\" return-type=\"xs:string\" isOp=\"no\" prefix=\"fn\" returnEmptyOk=\"no\" returnSeq=\"no\" returnVaries=\"no\" isSchema=\"no\" isDatatype=\"no\" isSpecial=\"no\"><arg name=\"arg\" type=\"item()?\"/></proto></example></p><p xmlns:e=\"http://www.w3.org/1999/XSL/Spec/ElementSyntax\">The zero-argument form of this function is <termref def=\"dt-deterministic\">deterministic</termref>, <termref def=\"dt-context-dependent\">context-dependent</termref>,  and <termref def=\"dt-focus-dependent\">focus-dependent</termref>. </p><p xmlns:e=\"http://www.w3.org/1999/XSL/Spec/ElementSyntax\">The one-argument form of this function is <termref def=\"dt-deterministic\">deterministic</termref>, <termref def=\"dt-context-independent\">context-independent</termref>,  and <termref def=\"dt-focus-independent\">focus-independent</termref>. </p><p xmlns:e=\"http://www.w3.org/1999/XSL/Spec/ElementSyntax\">In the zero-argument version of the function, <code>$arg</code> defaults to the context\n             item. That is, calling <code>fn:string()</code> is equivalent to calling\n                <code>fn:string(.)</code>.</p><p xmlns:e=\"http://www.w3.org/1999/XSL/Spec/ElementSyntax\">If <code>$arg</code> is the empty sequence, the function returns the zero-length\n             string.</p><p xmlns:e=\"http://www.w3.org/1999/XSL/Spec/ElementSyntax\">If <code>$arg</code> is a node, the function returns the string-value of the node, as\n             obtained using the <code>dm:string-value</code> accessor defined in <bibref ref=\"xpath-datamodel-30\"/> (see <xspecref spec=\"DM30\" ref=\"dm-string-value\"/>).</p><p xmlns:e=\"http://www.w3.org/1999/XSL/Spec/ElementSyntax\">If <code>$arg</code> is an atomic value, the function returns the result of the\n             expression <code>$arg cast as xs:string</code> (see <specref ref=\"casting\"/>).</p><p xmlns:e=\"http://www.w3.org/1999/XSL/Spec/ElementSyntax\">A <phrase diff=\"add\" at=\"M\">dynamic</phrase> error is raised <xerrorref spec=\"XP\" class=\"DY\" code=\"0002\" type=\"type\"/> by the\n             zero-argument version of the function if the context item is <xtermref ref=\"dt-absent\" spec=\"DM30\">absent</xtermref>. </p><p xmlns:e=\"http://www.w3.org/1999/XSL/Spec/ElementSyntax\">A <phrase diff=\"add\" at=\"L\">type</phrase> error is raised <errorref class=\"TY\" code=\"0014\" type=\"type\"/> if\n                <code>$arg</code> is a function item. </p></div>\n", "summary" : "<p>  Returns the value of  $arg  represented as an\n              xs:string .</p>", "annotation_str" : "", "annotations" : [  ], "updating" : false, "parameters" : [  ], "returns" : { "type" : "xs:string", "description" : "" }, "errors" : [  ] }, { "isDocumented" : true, "arity" : 1, "name" : "string", "qname" : "fn:string", "signature" : "($arg as item()?) as xs:string external", "description" : " <div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"><p xmlns:e=\"http://www.w3.org/1999/XSL/Spec/ElementSyntax\">Returns the value of <code>$arg</code> represented as an\n             <code>xs:string</code>.</p><p xmlns:e=\"http://www.w3.org/1999/XSL/Spec/ElementSyntax\"><example role=\"signature\"><proto name=\"string\" return-type=\"xs:string\" isOp=\"no\" prefix=\"fn\" returnEmptyOk=\"no\" returnSeq=\"no\" returnVaries=\"no\" isSchema=\"no\" isDatatype=\"no\" isSpecial=\"no\"/></example><example role=\"signature\"><proto name=\"string\" return-type=\"xs:string\" isOp=\"no\" prefix=\"fn\" returnEmptyOk=\"no\" returnSeq=\"no\" returnVaries=\"no\" isSchema=\"no\" isDatatype=\"no\" isSpecial=\"no\"><arg name=\"arg\" type=\"item()?\"/></proto></example></p><p xmlns:e=\"http://www.w3.org/1999/XSL/Spec/ElementSyntax\">The zero-argument form of this function is <termref def=\"dt-deterministic\">deterministic</termref>, <termref def=\"dt-context-dependent\">context-dependent</termref>,  and <termref def=\"dt-focus-dependent\">focus-dependent</termref>. </p><p xmlns:e=\"http://www.w3.org/1999/XSL/Spec/ElementSyntax\">The one-argument form of this function is <termref def=\"dt-deterministic\">deterministic</termref>, <termref def=\"dt-context-independent\">context-independent</termref>,  and <termref def=\"dt-focus-independent\">focus-independent</termref>. </p><p xmlns:e=\"http://www.w3.org/1999/XSL/Spec/ElementSyntax\">In the zero-argument version of the function, <code>$arg</code> defaults to the context\n             item. That is, calling <code>fn:string()</code> is equivalent to calling\n                <code>fn:string(.)</code>.</p><p xmlns:e=\"http://www.w3.org/1999/XSL/Spec/ElementSyntax\">If <code>$arg</code> is the empty sequence, the function returns the zero-length\n             string.</p><p xmlns:e=\"http://www.w3.org/1999/XSL/Spec/ElementSyntax\">If <code>$arg</code> is a node, the function returns the string-value of the node, as\n             obtained using the <code>dm:string-value</code> accessor defined in <bibref ref=\"xpath-datamodel-30\"/> (see <xspecref spec=\"DM30\" ref=\"dm-string-value\"/>).</p><p xmlns:e=\"http://www.w3.org/1999/XSL/Spec/ElementSyntax\">If <code>$arg</code> is an atomic value, the function returns the result of the\n             expression <code>$arg cast as xs:string</code> (see <specref ref=\"casting\"/>).</p><p xmlns:e=\"http://www.w3.org/1999/XSL/Spec/ElementSyntax\">A <phrase diff=\"add\" at=\"M\">dynamic</phrase> error is raised <xerrorref spec=\"XP\" class=\"DY\" code=\"0002\" type=\"type\"/> by the\n             zero-argument version of the function if the context item is <xtermref ref=\"dt-absent\" spec=\"DM30\">absent</xtermref>. </p><p xmlns:e=\"http://www.w3.org/1999/XSL/Spec/ElementSyntax\">A <phrase diff=\"add\" at=\"L\">type</phrase> error is raised <errorref class=\"TY\" code=\"0014\" type=\"type\"/> if\n                <code>$arg</code> is a function item. </p></div>\n", "summary" : "<p>  Returns the value of  $arg  represented as an\n              xs:string .</p>", "annotation_str" : "", "annotations" : [  ], "updating" : false, "parameters" : [ { "name" : "arg", "type" : "item()", "occurrence" : "?", "description" : "" } ], "returns" : { "type" : "xs:string", "description" : "" }, "errors" : [  ] }, { "isDocumented" : true, "arity" : 2, "name" : "subsequence", "qname" : "fn:subsequence", "signature" : "($sourceSeq as item()*, $startingLoc as xs:double) as item()* external", "description" : " <div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"><p xmlns:e=\"http://www.w3.org/1999/XSL/Spec/ElementSyntax\">Returns the contiguous sequence of items in the value of\n                <code>$sourceSeq</code> beginning at the position indicated by the value of\n                <code>$startingLoc</code> and continuing for the number of items indicated by the\n             value of <code>$length</code>. </p><p xmlns:e=\"http://www.w3.org/1999/XSL/Spec/ElementSyntax\"><example role=\"signature\"><proto name=\"subsequence\" return-type=\"item()*\" isOp=\"no\" prefix=\"fn\" returnEmptyOk=\"no\" returnSeq=\"no\" returnVaries=\"no\" isSchema=\"no\" isDatatype=\"no\" isSpecial=\"no\"><arg name=\"sourceSeq\" type=\"item()*\"/><arg name=\"startingLoc\" type=\"xs:double\"/></proto></example><example role=\"signature\"><proto name=\"subsequence\" return-type=\"item()*\" isOp=\"no\" prefix=\"fn\" returnEmptyOk=\"no\" returnSeq=\"no\" returnVaries=\"no\" isSchema=\"no\" isDatatype=\"no\" isSpecial=\"no\"><arg name=\"sourceSeq\" type=\"item()*\"/><arg name=\"startingLoc\" type=\"xs:double\"/><arg name=\"length\" type=\"xs:double\"/></proto></example></p><p xmlns:e=\"http://www.w3.org/1999/XSL/Spec/ElementSyntax\">This function is <termref def=\"dt-deterministic\">deterministic</termref>, <termref def=\"dt-context-independent\">context-independent</termref>,  and <termref def=\"dt-focus-independent\">focus-independent</termref>. </p><p xmlns:e=\"http://www.w3.org/1999/XSL/Spec/ElementSyntax\">In the two-argument case, returns:</p><eg xmlns:e=\"http://www.w3.org/1999/XSL/Spec/ElementSyntax\" diff=\"chg\" at=\"A-E2\" xml:space=\"preserve\">$sourceSeq[fn:round($startingLoc) le position()]</eg><p xmlns:e=\"http://www.w3.org/1999/XSL/Spec/ElementSyntax\">In the three-argument case, returns:</p><eg xmlns:e=\"http://www.w3.org/1999/XSL/Spec/ElementSyntax\" diff=\"chg\" at=\"A-E2\" xml:space=\"preserve\">$sourceSeq[fn:round($startingLoc) le position()\n          and position() lt fn:round($startingLoc) + fn:round($length)]</eg><p xmlns:e=\"http://www.w3.org/1999/XSL/Spec/ElementSyntax\" diff=\"del\" at=\"F\">For detailed type semantics, see [Formal Semantics].</p><p xmlns:e=\"http://www.w3.org/1999/XSL/Spec/ElementSyntax\">The first item of a sequence is located at position 1, not position 0.</p><p xmlns:e=\"http://www.w3.org/1999/XSL/Spec/ElementSyntax\">If <code>$sourceSeq</code> is the empty sequence, the empty sequence is returned.</p><p xmlns:e=\"http://www.w3.org/1999/XSL/Spec/ElementSyntax\"> If <code>$startingLoc</code> is zero or negative, the subsequence includes items from\n             the beginning of the <code>$sourceSeq</code>.</p><p xmlns:e=\"http://www.w3.org/1999/XSL/Spec/ElementSyntax\"> If <code>$length</code> is not specified, the subsequence includes items to the end of\n                <code>$sourceSeq</code>.</p><p xmlns:e=\"http://www.w3.org/1999/XSL/Spec/ElementSyntax\"> If <code>$length</code> is greater than the number of items in the value of\n                <code>$sourceSeq</code> following <code>$startingLoc</code>, the subsequence includes\n             items to the end of <code>$sourceSeq</code>.</p><p xmlns:e=\"http://www.w3.org/1999/XSL/Spec/ElementSyntax\" diff=\"add\" at=\"F\">As an exception to the previous two notes, if\n                <code>$startingLoc</code> is <code>-INF</code> and <code>$length</code> is\n                <code>+INF</code>, then <code>fn:round($startingLoc) + fn:round($length)</code> is\n                <code>NaN</code>; since <code>position() lt NaN</code> is always false, the result is\n             an empty sequence.</p><p xmlns:e=\"http://www.w3.org/1999/XSL/Spec/ElementSyntax\">The reason the function accepts arguments of type <code>xs:double</code> is that many\n             computations on untyped data return an <code>xs:double</code> result; and the reason for\n             the rounding rules is to compensate for any imprecision in these floating-point\n             computations.</p></div>\n", "summary" : "<p>  Returns the contiguous sequence of items in the value of\n                 $sourceSeq  beginning at the position indicated by the value of\n                 $startingLoc  and continuing for the number of items indicated by the\n             value of  $length .</p>", "annotation_str" : "", "annotations" : [  ], "updating" : false, "parameters" : [ { "name" : "sourceSeq", "type" : "item()", "occurrence" : "*", "description" : "" }, { "name" : "startingLoc", "type" : "xs:double", "occurrence" : null, "description" : "" } ], "returns" : { "type" : "item()*", "description" : "" }, "errors" : [  ] }, { "isDocumented" : true, "arity" : 3, "name" : "subsequence", "qname" : "fn:subsequence", "signature" : "($sourceSeq as item()*, $startingLoc as xs:double, $length as xs:double) as item()* external", "description" : " <div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"><p xmlns:e=\"http://www.w3.org/1999/XSL/Spec/ElementSyntax\">Returns the contiguous sequence of items in the value of\n                <code>$sourceSeq</code> beginning at the position indicated by the value of\n                <code>$startingLoc</code> and continuing for the number of items indicated by the\n             value of <code>$length</code>. </p><p xmlns:e=\"http://www.w3.org/1999/XSL/Spec/ElementSyntax\"><example role=\"signature\"><proto name=\"subsequence\" return-type=\"item()*\" isOp=\"no\" prefix=\"fn\" returnEmptyOk=\"no\" returnSeq=\"no\" returnVaries=\"no\" isSchema=\"no\" isDatatype=\"no\" isSpecial=\"no\"><arg name=\"sourceSeq\" type=\"item()*\"/><arg name=\"startingLoc\" type=\"xs:double\"/></proto></example><example role=\"signature\"><proto name=\"subsequence\" return-type=\"item()*\" isOp=\"no\" prefix=\"fn\" returnEmptyOk=\"no\" returnSeq=\"no\" returnVaries=\"no\" isSchema=\"no\" isDatatype=\"no\" isSpecial=\"no\"><arg name=\"sourceSeq\" type=\"item()*\"/><arg name=\"startingLoc\" type=\"xs:double\"/><arg name=\"length\" type=\"xs:double\"/></proto></example></p><p xmlns:e=\"http://www.w3.org/1999/XSL/Spec/ElementSyntax\">This function is <termref def=\"dt-deterministic\">deterministic</termref>, <termref def=\"dt-context-independent\">context-independent</termref>,  and <termref def=\"dt-focus-independent\">focus-independent</termref>. </p><p xmlns:e=\"http://www.w3.org/1999/XSL/Spec/ElementSyntax\">In the two-argument case, returns:</p><eg xmlns:e=\"http://www.w3.org/1999/XSL/Spec/ElementSyntax\" diff=\"chg\" at=\"A-E2\" xml:space=\"preserve\">$sourceSeq[fn:round($startingLoc) le position()]</eg><p xmlns:e=\"http://www.w3.org/1999/XSL/Spec/ElementSyntax\">In the three-argument case, returns:</p><eg xmlns:e=\"http://www.w3.org/1999/XSL/Spec/ElementSyntax\" diff=\"chg\" at=\"A-E2\" xml:space=\"preserve\">$sourceSeq[fn:round($startingLoc) le position()\n          and position() lt fn:round($startingLoc) + fn:round($length)]</eg><p xmlns:e=\"http://www.w3.org/1999/XSL/Spec/ElementSyntax\" diff=\"del\" at=\"F\">For detailed type semantics, see [Formal Semantics].</p><p xmlns:e=\"http://www.w3.org/1999/XSL/Spec/ElementSyntax\">The first item of a sequence is located at position 1, not position 0.</p><p xmlns:e=\"http://www.w3.org/1999/XSL/Spec/ElementSyntax\">If <code>$sourceSeq</code> is the empty sequence, the empty sequence is returned.</p><p xmlns:e=\"http://www.w3.org/1999/XSL/Spec/ElementSyntax\"> If <code>$startingLoc</code> is zero or negative, the subsequence includes items from\n             the beginning of the <code>$sourceSeq</code>.</p><p xmlns:e=\"http://www.w3.org/1999/XSL/Spec/ElementSyntax\"> If <code>$length</code> is not specified, the subsequence includes items to the end of\n                <code>$sourceSeq</code>.</p><p xmlns:e=\"http://www.w3.org/1999/XSL/Spec/ElementSyntax\"> If <code>$length</code> is greater than the number of items in the value of\n                <code>$sourceSeq</code> following <code>$startingLoc</code>, the subsequence includes\n             items to the end of <code>$sourceSeq</code>.</p><p xmlns:e=\"http://www.w3.org/1999/XSL/Spec/ElementSyntax\" diff=\"add\" at=\"F\">As an exception to the previous two notes, if\n                <code>$startingLoc</code> is <code>-INF</code> and <code>$length</code> is\n                <code>+INF</code>, then <code>fn:round($startingLoc) + fn:round($length)</code> is\n                <code>NaN</code>; since <code>position() lt NaN</code> is always false, the result is\n             an empty sequence.</p><p xmlns:e=\"http://www.w3.org/1999/XSL/Spec/ElementSyntax\">The reason the function accepts arguments of type <code>xs:double</code> is that many\n             computations on untyped data return an <code>xs:double</code> result; and the reason for\n             the rounding rules is to compensate for any imprecision in these floating-point\n             computations.</p></div>\n", "summary" : "<p>  Returns the contiguous sequence of items in the value of\n                 $sourceSeq  beginning at the position indicated by the value of\n                 $startingLoc  and continuing for the number of items indicated by the\n             value of  $length .</p>", "annotation_str" : "", "annotations" : [  ], "updating" : false, "parameters" : [ { "name" : "sourceSeq", "type" : "item()", "occurrence" : "*", "description" : "" }, { "name" : "startingLoc", "type" : "xs:double", "occurrence" : null, "description" : "" }, { "name" : "length", "type" : "xs:double", "occurrence" : null, "description" : "" } ], "returns" : { "type" : "item()*", "description" : "" }, "errors" : [  ] }, { "isDocumented" : true, "arity" : 2, "name" : "substring-after", "qname" : "fn:substring-after", "signature" : "($arg1 as xs:string?, $arg2 as xs:string?) as xs:string external", "description" : " <div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"><p xmlns:e=\"http://www.w3.org/1999/XSL/Spec/ElementSyntax\">Returns the part of <code>$arg1</code> that follows the first occurrence of\n                <code>$arg2</code>, taking collations into account.</p><p xmlns:e=\"http://www.w3.org/1999/XSL/Spec/ElementSyntax\"><example role=\"signature\"><proto name=\"substring-after\" return-type=\"xs:string\" isOp=\"no\" prefix=\"fn\" returnEmptyOk=\"no\" returnSeq=\"no\" returnVaries=\"no\" isSchema=\"no\" isDatatype=\"no\" isSpecial=\"no\"><arg name=\"arg1\" type=\"xs:string?\"/><arg name=\"arg2\" type=\"xs:string?\"/></proto></example><example role=\"signature\"><proto name=\"substring-after\" return-type=\"xs:string\" isOp=\"no\" prefix=\"fn\" returnEmptyOk=\"no\" returnSeq=\"no\" returnVaries=\"no\" isSchema=\"no\" isDatatype=\"no\" isSpecial=\"no\"><arg name=\"arg1\" type=\"xs:string?\"/><arg name=\"arg2\" type=\"xs:string?\"/><arg name=\"collation\" type=\"xs:string\"/></proto></example></p><p xmlns:e=\"http://www.w3.org/1999/XSL/Spec/ElementSyntax\">The two-argument form of this function is <termref def=\"dt-deterministic\">deterministic</termref>, <termref def=\"dt-context-dependent\">context-dependent</termref>,  and <termref def=\"dt-focus-independent\">focus-independent</termref>.  It depends on\n \t\tcollations.\n \t</p><p xmlns:e=\"http://www.w3.org/1999/XSL/Spec/ElementSyntax\">The three-argument form of this function is <termref def=\"dt-deterministic\">deterministic</termref>, <termref def=\"dt-context-dependent\">context-dependent</termref>,  and <termref def=\"dt-focus-independent\">focus-independent</termref>.  It depends on\n \t\tcollations, and static base uri.\n \t</p><p xmlns:e=\"http://www.w3.org/1999/XSL/Spec/ElementSyntax\">If the value of <code>$arg1</code> or <code>$arg2</code> is the empty sequence, or\n             contains only ignorable collation units, it is interpreted as the zero-length\n             string.</p><p xmlns:e=\"http://www.w3.org/1999/XSL/Spec/ElementSyntax\">If the value of <code>$arg2</code> is the zero-length string, then the function returns\n             the value of <code>$arg1</code>.</p><p xmlns:e=\"http://www.w3.org/1999/XSL/Spec/ElementSyntax\">If the value of <code>$arg1</code> does not contain a string that is equal to the value\n             of <code>$arg2</code>, then the function returns the zero-length string. </p><p xmlns:e=\"http://www.w3.org/1999/XSL/Spec/ElementSyntax\">The collation used by this function is determined according to the rules in <specref ref=\"choosing-a-collation\"/>.</p><p xmlns:e=\"http://www.w3.org/1999/XSL/Spec/ElementSyntax\">The function returns the substring of the value of <code>$arg1</code> that follows in\n             the value of <code>$arg1</code> the first occurrence of a sequence of collation units\n             that provides a <term>minimal match</term> to the collation units of <code>$arg2</code>\n             according to the collation that is used. </p><note xmlns:e=\"http://www.w3.org/1999/XSL/Spec/ElementSyntax\"><p><term>Minimal match</term> is defined in <bibref ref=\"Unicode-Collations\"/>. </p></note><p xmlns:e=\"http://www.w3.org/1999/XSL/Spec/ElementSyntax\">A <phrase diff=\"add\" at=\"L\">dynamic</phrase> error <rfc2119>may</rfc2119> be raised <errorref class=\"CH\" code=\"0004\"/> if the\n             specified collation does not support collation units.</p></div>\n", "summary" : "<p>  Returns the part of  $arg1  that follows the first occurrence of\n                 $arg2 , taking collations into account.</p>", "annotation_str" : "", "annotations" : [  ], "updating" : false, "parameters" : [ { "name" : "arg1", "type" : "xs:string", "occurrence" : "?", "description" : "" }, { "name" : "arg2", "type" : "xs:string", "occurrence" : "?", "description" : "" } ], "returns" : { "type" : "xs:string", "description" : "" }, "errors" : [  ] }, { "isDocumented" : true, "arity" : 3, "name" : "substring-after", "qname" : "fn:substring-after", "signature" : "($arg1 as xs:string?, $arg2 as xs:string?, $collation as xs:string) as xs:string external", "description" : " <div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"><p xmlns:e=\"http://www.w3.org/1999/XSL/Spec/ElementSyntax\">Returns the part of <code>$arg1</code> that follows the first occurrence of\n                <code>$arg2</code>, taking collations into account.</p><p xmlns:e=\"http://www.w3.org/1999/XSL/Spec/ElementSyntax\"><example role=\"signature\"><proto name=\"substring-after\" return-type=\"xs:string\" isOp=\"no\" prefix=\"fn\" returnEmptyOk=\"no\" returnSeq=\"no\" returnVaries=\"no\" isSchema=\"no\" isDatatype=\"no\" isSpecial=\"no\"><arg name=\"arg1\" type=\"xs:string?\"/><arg name=\"arg2\" type=\"xs:string?\"/></proto></example><example role=\"signature\"><proto name=\"substring-after\" return-type=\"xs:string\" isOp=\"no\" prefix=\"fn\" returnEmptyOk=\"no\" returnSeq=\"no\" returnVaries=\"no\" isSchema=\"no\" isDatatype=\"no\" isSpecial=\"no\"><arg name=\"arg1\" type=\"xs:string?\"/><arg name=\"arg2\" type=\"xs:string?\"/><arg name=\"collation\" type=\"xs:string\"/></proto></example></p><p xmlns:e=\"http://www.w3.org/1999/XSL/Spec/ElementSyntax\">The two-argument form of this function is <termref def=\"dt-deterministic\">deterministic</termref>, <termref def=\"dt-context-dependent\">context-dependent</termref>,  and <termref def=\"dt-focus-independent\">focus-independent</termref>.  It depends on\n \t\tcollations.\n \t</p><p xmlns:e=\"http://www.w3.org/1999/XSL/Spec/ElementSyntax\">The three-argument form of this function is <termref def=\"dt-deterministic\">deterministic</termref>, <termref def=\"dt-context-dependent\">context-dependent</termref>,  and <termref def=\"dt-focus-independent\">focus-independent</termref>.  It depends on\n \t\tcollations, and static base uri.\n \t</p><p xmlns:e=\"http://www.w3.org/1999/XSL/Spec/ElementSyntax\">If the value of <code>$arg1</code> or <code>$arg2</code> is the empty sequence, or\n             contains only ignorable collation units, it is interpreted as the zero-length\n             string.</p><p xmlns:e=\"http://www.w3.org/1999/XSL/Spec/ElementSyntax\">If the value of <code>$arg2</code> is the zero-length string, then the function returns\n             the value of <code>$arg1</code>.</p><p xmlns:e=\"http://www.w3.org/1999/XSL/Spec/ElementSyntax\">If the value of <code>$arg1</code> does not contain a string that is equal to the value\n             of <code>$arg2</code>, then the function returns the zero-length string. </p><p xmlns:e=\"http://www.w3.org/1999/XSL/Spec/ElementSyntax\">The collation used by this function is determined according to the rules in <specref ref=\"choosing-a-collation\"/>.</p><p xmlns:e=\"http://www.w3.org/1999/XSL/Spec/ElementSyntax\">The function returns the substring of the value of <code>$arg1</code> that follows in\n             the value of <code>$arg1</code> the first occurrence of a sequence of collation units\n             that provides a <term>minimal match</term> to the collation units of <code>$arg2</code>\n             according to the collation that is used. </p><note xmlns:e=\"http://www.w3.org/1999/XSL/Spec/ElementSyntax\"><p><term>Minimal match</term> is defined in <bibref ref=\"Unicode-Collations\"/>. </p></note><p xmlns:e=\"http://www.w3.org/1999/XSL/Spec/ElementSyntax\">A <phrase diff=\"add\" at=\"L\">dynamic</phrase> error <rfc2119>may</rfc2119> be raised <errorref class=\"CH\" code=\"0004\"/> if the\n             specified collation does not support collation units.</p></div>\n", "summary" : "<p>  Returns the part of  $arg1  that follows the first occurrence of\n                 $arg2 , taking collations into account.</p>", "annotation_str" : "", "annotations" : [  ], "updating" : false, "parameters" : [ { "name" : "arg1", "type" : "xs:string", "occurrence" : "?", "description" : "" }, { "name" : "arg2", "type" : "xs:string", "occurrence" : "?", "description" : "" }, { "name" : "collation", "type" : "xs:string", "occurrence" : null, "description" : "" } ], "returns" : { "type" : "xs:string", "description" : "" }, "errors" : [  ] }, { "isDocumented" : true, "arity" : 2, "name" : "substring-before", "qname" : "fn:substring-before", "signature" : "($arg1 as xs:string?, $arg2 as xs:string?) as xs:string external", "description" : " <div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"><p xmlns:e=\"http://www.w3.org/1999/XSL/Spec/ElementSyntax\">Returns the part of <code>$arg1</code> that precedes the first occurrence of\n                <code>$arg2</code>, taking collations into account.</p><p xmlns:e=\"http://www.w3.org/1999/XSL/Spec/ElementSyntax\"><example role=\"signature\"><proto name=\"substring-before\" return-type=\"xs:string\" isOp=\"no\" prefix=\"fn\" returnEmptyOk=\"no\" returnSeq=\"no\" returnVaries=\"no\" isSchema=\"no\" isDatatype=\"no\" isSpecial=\"no\"><arg name=\"arg1\" type=\"xs:string?\"/><arg name=\"arg2\" type=\"xs:string?\"/></proto></example><example role=\"signature\"><proto name=\"substring-before\" return-type=\"xs:string\" isOp=\"no\" prefix=\"fn\" returnEmptyOk=\"no\" returnSeq=\"no\" returnVaries=\"no\" isSchema=\"no\" isDatatype=\"no\" isSpecial=\"no\"><arg name=\"arg1\" type=\"xs:string?\"/><arg name=\"arg2\" type=\"xs:string?\"/><arg name=\"collation\" type=\"xs:string\"/></proto></example></p><p xmlns:e=\"http://www.w3.org/1999/XSL/Spec/ElementSyntax\">The two-argument form of this function is <termref def=\"dt-deterministic\">deterministic</termref>, <termref def=\"dt-context-dependent\">context-dependent</termref>,  and <termref def=\"dt-focus-independent\">focus-independent</termref>.  It depends on\n \t\tcollations.\n \t</p><p xmlns:e=\"http://www.w3.org/1999/XSL/Spec/ElementSyntax\">The three-argument form of this function is <termref def=\"dt-deterministic\">deterministic</termref>, <termref def=\"dt-context-dependent\">context-dependent</termref>,  and <termref def=\"dt-focus-independent\">focus-independent</termref>.  It depends on\n \t\tcollations, and static base uri.\n \t</p><p xmlns:e=\"http://www.w3.org/1999/XSL/Spec/ElementSyntax\"> If the value of <code>$arg1</code> or <code>$arg2</code> is the empty sequence, or\n             contains only ignorable collation units, it is interpreted as the zero-length\n             string.</p><p xmlns:e=\"http://www.w3.org/1999/XSL/Spec/ElementSyntax\">If the value of <code>$arg2</code> is the zero-length string, then the function returns\n             the zero-length string. </p><p xmlns:e=\"http://www.w3.org/1999/XSL/Spec/ElementSyntax\">If the value of <code>$arg1</code> does not contain a string that is equal to the value\n             of <code>$arg2</code>, then the function returns the zero-length string. </p><p xmlns:e=\"http://www.w3.org/1999/XSL/Spec/ElementSyntax\">The collation used by this function is determined according to the rules in <specref ref=\"choosing-a-collation\"/>.</p><p xmlns:e=\"http://www.w3.org/1999/XSL/Spec/ElementSyntax\">The function returns the substring of the value of <code>$arg1</code> that precedes in\n             the value of <code>$arg1</code> the first occurrence of a sequence of collation units\n             that provides a <term>minimal match</term> to the collation units of <code>$arg2</code>\n             according to the collation that is used.</p><note xmlns:e=\"http://www.w3.org/1999/XSL/Spec/ElementSyntax\"><p><term>Minimal match</term> is defined in <bibref ref=\"Unicode-Collations\"/>. </p></note><p xmlns:e=\"http://www.w3.org/1999/XSL/Spec/ElementSyntax\">A <phrase diff=\"add\" at=\"L\">dynamic</phrase> error <rfc2119>may</rfc2119> be raised <errorref class=\"CH\" code=\"0004\"/> if the\n             specified collation does not support collation units.</p></div>\n", "summary" : "<p>  Returns the part of  $arg1  that precedes the first occurrence of\n                 $arg2 , taking collations into account.</p>", "annotation_str" : "", "annotations" : [  ], "updating" : false, "parameters" : [ { "name" : "arg1", "type" : "xs:string", "occurrence" : "?", "description" : "" }, { "name" : "arg2", "type" : "xs:string", "occurrence" : "?", "description" : "" } ], "returns" : { "type" : "xs:string", "description" : "" }, "errors" : [  ] }, { "isDocumented" : true, "arity" : 3, "name" : "substring-before", "qname" : "fn:substring-before", "signature" : "($arg1 as xs:string?, $arg2 as xs:string?, $collation as xs:string) as xs:string external", "description" : " <div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"><p xmlns:e=\"http://www.w3.org/1999/XSL/Spec/ElementSyntax\">Returns the part of <code>$arg1</code> that precedes the first occurrence of\n                <code>$arg2</code>, taking collations into account.</p><p xmlns:e=\"http://www.w3.org/1999/XSL/Spec/ElementSyntax\"><example role=\"signature\"><proto name=\"substring-before\" return-type=\"xs:string\" isOp=\"no\" prefix=\"fn\" returnEmptyOk=\"no\" returnSeq=\"no\" returnVaries=\"no\" isSchema=\"no\" isDatatype=\"no\" isSpecial=\"no\"><arg name=\"arg1\" type=\"xs:string?\"/><arg name=\"arg2\" type=\"xs:string?\"/></proto></example><example role=\"signature\"><proto name=\"substring-before\" return-type=\"xs:string\" isOp=\"no\" prefix=\"fn\" returnEmptyOk=\"no\" returnSeq=\"no\" returnVaries=\"no\" isSchema=\"no\" isDatatype=\"no\" isSpecial=\"no\"><arg name=\"arg1\" type=\"xs:string?\"/><arg name=\"arg2\" type=\"xs:string?\"/><arg name=\"collation\" type=\"xs:string\"/></proto></example></p><p xmlns:e=\"http://www.w3.org/1999/XSL/Spec/ElementSyntax\">The two-argument form of this function is <termref def=\"dt-deterministic\">deterministic</termref>, <termref def=\"dt-context-dependent\">context-dependent</termref>,  and <termref def=\"dt-focus-independent\">focus-independent</termref>.  It depends on\n \t\tcollations.\n \t</p><p xmlns:e=\"http://www.w3.org/1999/XSL/Spec/ElementSyntax\">The three-argument form of this function is <termref def=\"dt-deterministic\">deterministic</termref>, <termref def=\"dt-context-dependent\">context-dependent</termref>,  and <termref def=\"dt-focus-independent\">focus-independent</termref>.  It depends on\n \t\tcollations, and static base uri.\n \t</p><p xmlns:e=\"http://www.w3.org/1999/XSL/Spec/ElementSyntax\"> If the value of <code>$arg1</code> or <code>$arg2</code> is the empty sequence, or\n             contains only ignorable collation units, it is interpreted as the zero-length\n             string.</p><p xmlns:e=\"http://www.w3.org/1999/XSL/Spec/ElementSyntax\">If the value of <code>$arg2</code> is the zero-length string, then the function returns\n             the zero-length string. </p><p xmlns:e=\"http://www.w3.org/1999/XSL/Spec/ElementSyntax\">If the value of <code>$arg1</code> does not contain a string that is equal to the value\n             of <code>$arg2</code>, then the function returns the zero-length string. </p><p xmlns:e=\"http://www.w3.org/1999/XSL/Spec/ElementSyntax\">The collation used by this function is determined according to the rules in <specref ref=\"choosing-a-collation\"/>.</p><p xmlns:e=\"http://www.w3.org/1999/XSL/Spec/ElementSyntax\">The function returns the substring of the value of <code>$arg1</code> that precedes in\n             the value of <code>$arg1</code> the first occurrence of a sequence of collation units\n             that provides a <term>minimal match</term> to the collation units of <code>$arg2</code>\n             according to the collation that is used.</p><note xmlns:e=\"http://www.w3.org/1999/XSL/Spec/ElementSyntax\"><p><term>Minimal match</term> is defined in <bibref ref=\"Unicode-Collations\"/>. </p></note><p xmlns:e=\"http://www.w3.org/1999/XSL/Spec/ElementSyntax\">A <phrase diff=\"add\" at=\"L\">dynamic</phrase> error <rfc2119>may</rfc2119> be raised <errorref class=\"CH\" code=\"0004\"/> if the\n             specified collation does not support collation units.</p></div>\n", "summary" : "<p>  Returns the part of  $arg1  that precedes the first occurrence of\n                 $arg2 , taking collations into account.</p>", "annotation_str" : "", "annotations" : [  ], "updating" : false, "parameters" : [ { "name" : "arg1", "type" : "xs:string", "occurrence" : "?", "description" : "" }, { "name" : "arg2", "type" : "xs:string", "occurrence" : "?", "description" : "" }, { "name" : "collation", "type" : "xs:string", "occurrence" : null, "description" : "" } ], "returns" : { "type" : "xs:string", "description" : "" }, "errors" : [  ] }, { "isDocumented" : true, "arity" : 2, "name" : "substring", "qname" : "fn:substring", "signature" : "($sourceString as xs:string?, $start as xs:double) as xs:string external", "description" : " <div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"><p xmlns:e=\"http://www.w3.org/1999/XSL/Spec/ElementSyntax\">Returns the portion of the value of <code>$sourceString</code> beginning at the\n             position indicated by the value of <code>$start</code> and continuing for the number of\n                <termref def=\"character\">characters</termref> indicated by the value of\n                <code>$length</code>.</p><p xmlns:e=\"http://www.w3.org/1999/XSL/Spec/ElementSyntax\"><example role=\"signature\"><proto name=\"substring\" return-type=\"xs:string\" isOp=\"no\" prefix=\"fn\" returnEmptyOk=\"no\" returnSeq=\"no\" returnVaries=\"no\" isSchema=\"no\" isDatatype=\"no\" isSpecial=\"no\"><arg name=\"sourceString\" type=\"xs:string?\"/><arg name=\"start\" type=\"xs:double\"/></proto></example><example role=\"signature\"><proto name=\"substring\" return-type=\"xs:string\" isOp=\"no\" prefix=\"fn\" returnEmptyOk=\"no\" returnSeq=\"no\" returnVaries=\"no\" isSchema=\"no\" isDatatype=\"no\" isSpecial=\"no\"><arg name=\"sourceString\" type=\"xs:string?\"/><arg name=\"start\" type=\"xs:double\"/><arg name=\"length\" type=\"xs:double\"/></proto></example></p><p xmlns:e=\"http://www.w3.org/1999/XSL/Spec/ElementSyntax\">This function is <termref def=\"dt-deterministic\">deterministic</termref>, <termref def=\"dt-context-independent\">context-independent</termref>,  and <termref def=\"dt-focus-independent\">focus-independent</termref>. </p><p xmlns:e=\"http://www.w3.org/1999/XSL/Spec/ElementSyntax\">If the value of <code>$sourceString</code> is the empty sequence, the function returns\n             the zero-length string. </p><p xmlns:e=\"http://www.w3.org/1999/XSL/Spec/ElementSyntax\">Otherwise, the function returns a string comprising those <termref def=\"character\">characters</termref> of <code>$sourceString</code> whose index position (counting\n             from one) is greater than or equal to the value of <code>$start</code> (rounded to an\n             integer), and (if <code>$length</code> is specified) less than the sum of\n                <code>$start</code> and <code>$length</code> (both rounded to integers).</p><p xmlns:e=\"http://www.w3.org/1999/XSL/Spec/ElementSyntax\">The characters returned do not extend beyond <code>$sourceString</code>. If\n                <code>$start</code> is zero or negative, only those characters in positions greater\n             than zero are returned.</p><p xmlns:e=\"http://www.w3.org/1999/XSL/Spec/ElementSyntax\">More specifically, the three argument version of the function returns the characters in\n                <code>$sourceString</code> whose position <code>$p</code> satisfies:</p><p xmlns:e=\"http://www.w3.org/1999/XSL/Spec/ElementSyntax\">\n             <code>fn:round($start) &lt;= $p &lt; fn:round($start) + fn:round($length)</code>\n          </p><p xmlns:e=\"http://www.w3.org/1999/XSL/Spec/ElementSyntax\">The two argument version of the function assumes that <code>$length</code> is infinite\n             and thus returns the <termref def=\"character\">characters</termref> in\n                <code>$sourceString</code> whose position <code>$p</code> satisfies:</p><p xmlns:e=\"http://www.w3.org/1999/XSL/Spec/ElementSyntax\">\n             <code>fn:round($start) &lt;= $p</code>\n          </p><p xmlns:e=\"http://www.w3.org/1999/XSL/Spec/ElementSyntax\">In the above computations, the rules for <code>op:numeric-less-than</code> and\n                <code>op:numeric-greater-than</code> apply.</p><p xmlns:e=\"http://www.w3.org/1999/XSL/Spec/ElementSyntax\">The first character of a string is located at position 1, not position 0.</p></div>\n", "summary" : "<p>  Returns the portion of the value of  $sourceString  beginning at the\n             position indicated by the value of  $start  and continuing for the number of\n                 characters  indicated by the value of\n                 $length .</p>", "annotation_str" : "", "annotations" : [  ], "updating" : false, "parameters" : [ { "name" : "sourceString", "type" : "xs:string", "occurrence" : "?", "description" : "" }, { "name" : "start", "type" : "xs:double", "occurrence" : null, "description" : "" } ], "returns" : { "type" : "xs:string", "description" : "" }, "errors" : [  ] }, { "isDocumented" : true, "arity" : 3, "name" : "substring", "qname" : "fn:substring", "signature" : "($sourceString as xs:string?, $start as xs:double, $length as xs:double) as xs:string external", "description" : " <div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"><p xmlns:e=\"http://www.w3.org/1999/XSL/Spec/ElementSyntax\">Returns the portion of the value of <code>$sourceString</code> beginning at the\n             position indicated by the value of <code>$start</code> and continuing for the number of\n                <termref def=\"character\">characters</termref> indicated by the value of\n                <code>$length</code>.</p><p xmlns:e=\"http://www.w3.org/1999/XSL/Spec/ElementSyntax\"><example role=\"signature\"><proto name=\"substring\" return-type=\"xs:string\" isOp=\"no\" prefix=\"fn\" returnEmptyOk=\"no\" returnSeq=\"no\" returnVaries=\"no\" isSchema=\"no\" isDatatype=\"no\" isSpecial=\"no\"><arg name=\"sourceString\" type=\"xs:string?\"/><arg name=\"start\" type=\"xs:double\"/></proto></example><example role=\"signature\"><proto name=\"substring\" return-type=\"xs:string\" isOp=\"no\" prefix=\"fn\" returnEmptyOk=\"no\" returnSeq=\"no\" returnVaries=\"no\" isSchema=\"no\" isDatatype=\"no\" isSpecial=\"no\"><arg name=\"sourceString\" type=\"xs:string?\"/><arg name=\"start\" type=\"xs:double\"/><arg name=\"length\" type=\"xs:double\"/></proto></example></p><p xmlns:e=\"http://www.w3.org/1999/XSL/Spec/ElementSyntax\">This function is <termref def=\"dt-deterministic\">deterministic</termref>, <termref def=\"dt-context-independent\">context-independent</termref>,  and <termref def=\"dt-focus-independent\">focus-independent</termref>. </p><p xmlns:e=\"http://www.w3.org/1999/XSL/Spec/ElementSyntax\">If the value of <code>$sourceString</code> is the empty sequence, the function returns\n             the zero-length string. </p><p xmlns:e=\"http://www.w3.org/1999/XSL/Spec/ElementSyntax\">Otherwise, the function returns a string comprising those <termref def=\"character\">characters</termref> of <code>$sourceString</code> whose index position (counting\n             from one) is greater than or equal to the value of <code>$start</code> (rounded to an\n             integer), and (if <code>$length</code> is specified) less than the sum of\n                <code>$start</code> and <code>$length</code> (both rounded to integers).</p><p xmlns:e=\"http://www.w3.org/1999/XSL/Spec/ElementSyntax\">The characters returned do not extend beyond <code>$sourceString</code>. If\n                <code>$start</code> is zero or negative, only those characters in positions greater\n             than zero are returned.</p><p xmlns:e=\"http://www.w3.org/1999/XSL/Spec/ElementSyntax\">More specifically, the three argument version of the function returns the characters in\n                <code>$sourceString</code> whose position <code>$p</code> satisfies:</p><p xmlns:e=\"http://www.w3.org/1999/XSL/Spec/ElementSyntax\">\n             <code>fn:round($start) &lt;= $p &lt; fn:round($start) + fn:round($length)</code>\n          </p><p xmlns:e=\"http://www.w3.org/1999/XSL/Spec/ElementSyntax\">The two argument version of the function assumes that <code>$length</code> is infinite\n             and thus returns the <termref def=\"character\">characters</termref> in\n                <code>$sourceString</code> whose position <code>$p</code> satisfies:</p><p xmlns:e=\"http://www.w3.org/1999/XSL/Spec/ElementSyntax\">\n             <code>fn:round($start) &lt;= $p</code>\n          </p><p xmlns:e=\"http://www.w3.org/1999/XSL/Spec/ElementSyntax\">In the above computations, the rules for <code>op:numeric-less-than</code> and\n                <code>op:numeric-greater-than</code> apply.</p><p xmlns:e=\"http://www.w3.org/1999/XSL/Spec/ElementSyntax\">The first character of a string is located at position 1, not position 0.</p></div>\n", "summary" : "<p>  Returns the portion of the value of  $sourceString  beginning at the\n             position indicated by the value of  $start  and continuing for the number of\n                 characters  indicated by the value of\n                 $length .</p>", "annotation_str" : "", "annotations" : [  ], "updating" : false, "parameters" : [ { "name" : "sourceString", "type" : "xs:string", "occurrence" : "?", "description" : "" }, { "name" : "start", "type" : "xs:double", "occurrence" : null, "description" : "" }, { "name" : "length", "type" : "xs:double", "occurrence" : null, "description" : "" } ], "returns" : { "type" : "xs:string", "description" : "" }, "errors" : [  ] }, { "isDocumented" : true, "arity" : 1, "name" : "sum", "qname" : "fn:sum", "signature" : "($arg as xs:anyAtomicType*) as xs:anyAtomicType external", "description" : " <div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"><p xmlns:e=\"http://www.w3.org/1999/XSL/Spec/ElementSyntax\">Returns a value obtained by adding together the values in\n             <code>$arg</code>.</p><p xmlns:e=\"http://www.w3.org/1999/XSL/Spec/ElementSyntax\"><example role=\"signature\"><proto name=\"sum\" return-type=\"xs:anyAtomicType\" isOp=\"no\" prefix=\"fn\" returnEmptyOk=\"no\" returnSeq=\"no\" returnVaries=\"no\" isSchema=\"no\" isDatatype=\"no\" isSpecial=\"no\"><arg name=\"arg\" type=\"xs:anyAtomicType*\"/></proto></example><example role=\"signature\"><proto name=\"sum\" return-type=\"xs:anyAtomicType?\" isOp=\"no\" prefix=\"fn\" returnEmptyOk=\"no\" returnSeq=\"no\" returnVaries=\"no\" isSchema=\"no\" isDatatype=\"no\" isSpecial=\"no\"><arg name=\"arg\" type=\"xs:anyAtomicType*\"/><arg name=\"zero\" type=\"xs:anyAtomicType?\"/></proto></example></p><p xmlns:e=\"http://www.w3.org/1999/XSL/Spec/ElementSyntax\">This function is <termref def=\"dt-deterministic\">deterministic</termref>, <termref def=\"dt-context-independent\">context-independent</termref>,  and <termref def=\"dt-focus-independent\">focus-independent</termref>. </p><p xmlns:e=\"http://www.w3.org/1999/XSL/Spec/ElementSyntax\">Any values of type <code>xs:untypedAtomic</code> in <code>$arg</code> are cast to\n                <code>xs:double</code>. The items in the resulting sequence may be reordered in an\n             arbitrary order. The resulting sequence is referred to below as the converted\n             sequence.</p><p xmlns:e=\"http://www.w3.org/1999/XSL/Spec/ElementSyntax\">If the converted sequence is empty, then the single-argument form of the function\n             returns the <code>xs:integer</code> value <code>0</code>; the two-argument form returns\n             the value of the argument <code>$zero</code>.</p><p xmlns:e=\"http://www.w3.org/1999/XSL/Spec/ElementSyntax\">If the converted sequence contains the value <code>NaN</code>, <code>NaN</code> is\n             returned.</p><p xmlns:e=\"http://www.w3.org/1999/XSL/Spec/ElementSyntax\">All items in <code>$arg</code> must be numeric or derived from a single base type. In\n             addition, the type must support addition. Duration values must either all be\n                <code>xs:yearMonthDuration</code> values or must all be\n                <code>xs:dayTimeDuration</code> values. For numeric values, the numeric promotion\n             rules defined in <specref ref=\"op.numeric\"/> are used to promote all values to a single\n             common type. The sum of a sequence of integers will therefore be an integer, while the\n             sum of a numeric sequence that includes at least one <code>xs:double</code> will be an\n                <code>xs:double</code>. </p><p xmlns:e=\"http://www.w3.org/1999/XSL/Spec/ElementSyntax\">The result of the function, using the second signature, is the result of the\n             expression:</p><eg xmlns:e=\"http://www.w3.org/1999/XSL/Spec/ElementSyntax\" xml:space=\"preserve\">\n if (fn:count($c) eq 0) then\n     $zero\n else if (fn:count($c) eq 1) then\n     $c[1]\n else\n     $c[1] + fn:sum(subsequence($c, 2))</eg><p xmlns:e=\"http://www.w3.org/1999/XSL/Spec/ElementSyntax\">where <code>$c</code> is the converted sequence.</p><p xmlns:e=\"http://www.w3.org/1999/XSL/Spec/ElementSyntax\">The result of the function, using the first signature, is the result of the expression:\n                <code>fn:sum($arg, 0)</code>.</p><p xmlns:e=\"http://www.w3.org/1999/XSL/Spec/ElementSyntax\" diff=\"del\" at=\"F\">For detailed type semantics, see [Formal Semantics].</p><p xmlns:e=\"http://www.w3.org/1999/XSL/Spec/ElementSyntax\">A type error is raised <errorref class=\"RG\" code=\"0006\"/> if the input sequence contains\n             items of incompatible types, as described above.</p></div>\n", "summary" : "<p>  Returns a value obtained by adding together the values in\n              $arg .</p>", "annotation_str" : "", "annotations" : [  ], "updating" : false, "parameters" : [ { "name" : "arg", "type" : "xs:anyAtomicType", "occurrence" : "*", "description" : "" } ], "returns" : { "type" : "xs:anyAtomicType", "description" : "" }, "errors" : [  ] }, { "isDocumented" : true, "arity" : 2, "name" : "sum", "qname" : "fn:sum", "signature" : "($arg as xs:anyAtomicType*, $zero as xs:anyAtomicType?) as xs:anyAtomicType? external", "description" : " <div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"><p xmlns:e=\"http://www.w3.org/1999/XSL/Spec/ElementSyntax\">Returns a value obtained by adding together the values in\n             <code>$arg</code>.</p><p xmlns:e=\"http://www.w3.org/1999/XSL/Spec/ElementSyntax\"><example role=\"signature\"><proto name=\"sum\" return-type=\"xs:anyAtomicType\" isOp=\"no\" prefix=\"fn\" returnEmptyOk=\"no\" returnSeq=\"no\" returnVaries=\"no\" isSchema=\"no\" isDatatype=\"no\" isSpecial=\"no\"><arg name=\"arg\" type=\"xs:anyAtomicType*\"/></proto></example><example role=\"signature\"><proto name=\"sum\" return-type=\"xs:anyAtomicType?\" isOp=\"no\" prefix=\"fn\" returnEmptyOk=\"no\" returnSeq=\"no\" returnVaries=\"no\" isSchema=\"no\" isDatatype=\"no\" isSpecial=\"no\"><arg name=\"arg\" type=\"xs:anyAtomicType*\"/><arg name=\"zero\" type=\"xs:anyAtomicType?\"/></proto></example></p><p xmlns:e=\"http://www.w3.org/1999/XSL/Spec/ElementSyntax\">This function is <termref def=\"dt-deterministic\">deterministic</termref>, <termref def=\"dt-context-independent\">context-independent</termref>,  and <termref def=\"dt-focus-independent\">focus-independent</termref>. </p><p xmlns:e=\"http://www.w3.org/1999/XSL/Spec/ElementSyntax\">Any values of type <code>xs:untypedAtomic</code> in <code>$arg</code> are cast to\n                <code>xs:double</code>. The items in the resulting sequence may be reordered in an\n             arbitrary order. The resulting sequence is referred to below as the converted\n             sequence.</p><p xmlns:e=\"http://www.w3.org/1999/XSL/Spec/ElementSyntax\">If the converted sequence is empty, then the single-argument form of the function\n             returns the <code>xs:integer</code> value <code>0</code>; the two-argument form returns\n             the value of the argument <code>$zero</code>.</p><p xmlns:e=\"http://www.w3.org/1999/XSL/Spec/ElementSyntax\">If the converted sequence contains the value <code>NaN</code>, <code>NaN</code> is\n             returned.</p><p xmlns:e=\"http://www.w3.org/1999/XSL/Spec/ElementSyntax\">All items in <code>$arg</code> must be numeric or derived from a single base type. In\n             addition, the type must support addition. Duration values must either all be\n                <code>xs:yearMonthDuration</code> values or must all be\n                <code>xs:dayTimeDuration</code> values. For numeric values, the numeric promotion\n             rules defined in <specref ref=\"op.numeric\"/> are used to promote all values to a single\n             common type. The sum of a sequence of integers will therefore be an integer, while the\n             sum of a numeric sequence that includes at least one <code>xs:double</code> will be an\n                <code>xs:double</code>. </p><p xmlns:e=\"http://www.w3.org/1999/XSL/Spec/ElementSyntax\">The result of the function, using the second signature, is the result of the\n             expression:</p><eg xmlns:e=\"http://www.w3.org/1999/XSL/Spec/ElementSyntax\" xml:space=\"preserve\">\n if (fn:count($c) eq 0) then\n     $zero\n else if (fn:count($c) eq 1) then\n     $c[1]\n else\n     $c[1] + fn:sum(subsequence($c, 2))</eg><p xmlns:e=\"http://www.w3.org/1999/XSL/Spec/ElementSyntax\">where <code>$c</code> is the converted sequence.</p><p xmlns:e=\"http://www.w3.org/1999/XSL/Spec/ElementSyntax\">The result of the function, using the first signature, is the result of the expression:\n                <code>fn:sum($arg, 0)</code>.</p><p xmlns:e=\"http://www.w3.org/1999/XSL/Spec/ElementSyntax\" diff=\"del\" at=\"F\">For detailed type semantics, see [Formal Semantics].</p><p xmlns:e=\"http://www.w3.org/1999/XSL/Spec/ElementSyntax\">A type error is raised <errorref class=\"RG\" code=\"0006\"/> if the input sequence contains\n             items of incompatible types, as described above.</p></div>\n", "summary" : "<p>  Returns a value obtained by adding together the values in\n              $arg .</p>", "annotation_str" : "", "annotations" : [  ], "updating" : false, "parameters" : [ { "name" : "arg", "type" : "xs:anyAtomicType", "occurrence" : "*", "description" : "" }, { "name" : "zero", "type" : "xs:anyAtomicType", "occurrence" : "?", "description" : "" } ], "returns" : { "type" : "xs:anyAtomicType?", "description" : "" }, "errors" : [  ] }, { "isDocumented" : true, "arity" : 1, "name" : "tail", "qname" : "fn:tail", "signature" : "($arg as item()*) as item()* external", "description" : " <div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"><p xmlns:e=\"http://www.w3.org/1999/XSL/Spec/ElementSyntax\">Returns all but the first item in a sequence. </p><p xmlns:e=\"http://www.w3.org/1999/XSL/Spec/ElementSyntax\"><example role=\"signature\"><proto name=\"tail\" return-type=\"item()*\" isOp=\"no\" prefix=\"fn\" returnEmptyOk=\"no\" returnSeq=\"no\" returnVaries=\"no\" isSchema=\"no\" isDatatype=\"no\" isSpecial=\"no\"><arg name=\"arg\" type=\"item()*\"/></proto></example></p><p xmlns:e=\"http://www.w3.org/1999/XSL/Spec/ElementSyntax\">This function is <termref def=\"dt-deterministic\">deterministic</termref>, <termref def=\"dt-context-independent\">context-independent</termref>,  and <termref def=\"dt-focus-independent\">focus-independent</termref>. </p><p xmlns:e=\"http://www.w3.org/1999/XSL/Spec/ElementSyntax\">The function returns the value of the expression <code>subsequence($arg, 2)</code></p><p xmlns:e=\"http://www.w3.org/1999/XSL/Spec/ElementSyntax\">If <code>$arg</code> is the empty sequence, or a sequence containing a single item, then\n             the empty sequence is returned. </p></div>\n", "summary" : "<p>  Returns all but the first item in a sequence.</p>", "annotation_str" : "", "annotations" : [  ], "updating" : false, "parameters" : [ { "name" : "arg", "type" : "item()", "occurrence" : "*", "description" : "" } ], "returns" : { "type" : "item()*", "description" : "" }, "errors" : [  ] }, { "isDocumented" : true, "arity" : 1, "name" : "timezone-from-date", "qname" : "fn:timezone-from-date", "signature" : "($arg as xs:date?) as xs:dayTimeDuration? external", "description" : " <div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"><p xmlns:e=\"http://www.w3.org/1999/XSL/Spec/ElementSyntax\">Returns the timezone component of an <code>xs:date</code>.</p><p xmlns:e=\"http://www.w3.org/1999/XSL/Spec/ElementSyntax\"><example role=\"signature\"><proto name=\"timezone-from-date\" return-type=\"xs:dayTimeDuration?\" isOp=\"no\" prefix=\"fn\" returnEmptyOk=\"no\" returnSeq=\"no\" returnVaries=\"no\" isSchema=\"no\" isDatatype=\"no\" isSpecial=\"no\"><arg name=\"arg\" type=\"xs:date?\"/></proto></example></p><p xmlns:e=\"http://www.w3.org/1999/XSL/Spec/ElementSyntax\">This function is <termref def=\"dt-deterministic\">deterministic</termref>, <termref def=\"dt-context-independent\">context-independent</termref>,  and <termref def=\"dt-focus-independent\">focus-independent</termref>. </p><p xmlns:e=\"http://www.w3.org/1999/XSL/Spec/ElementSyntax\">If <code>$arg</code> is the empty sequence, the function returns the empty sequence.</p><p xmlns:e=\"http://www.w3.org/1999/XSL/Spec/ElementSyntax\">Otherwise, the function returns the timezone component of <code>$arg</code>, if any. If\n                <code>$arg</code> has a timezone component, then the result is an\n                <code>xs:dayTimeDuration</code> that indicates deviation from UTC; its value may\n             range from +14:00 to -14:00 hours, both inclusive. If <code>$arg</code> has no timezone\n             component, the result is the empty sequence.</p><p xmlns:e=\"http://www.w3.org/1999/XSL/Spec/ElementSyntax\">The expression <code>fn:timezone-from-date(xs:date(\"1999-05-31-05:00\"))</code> returns <code>xs:dayTimeDuration(\"-PT5H\")</code>.</p><p xmlns:e=\"http://www.w3.org/1999/XSL/Spec/ElementSyntax\">The expression <code>fn:timezone-from-date(xs:date(\"2000-06-12Z\"))</code> returns <code>xs:dayTimeDuration(\"PT0S\")</code>.</p></div>\n", "summary" : "<p>  Returns the timezone component of an  xs:date .</p>", "annotation_str" : "", "annotations" : [  ], "updating" : false, "parameters" : [ { "name" : "arg", "type" : "xs:date", "occurrence" : "?", "description" : "" } ], "returns" : { "type" : "xs:dayTimeDuration?", "description" : "" }, "errors" : [  ] }, { "isDocumented" : true, "arity" : 1, "name" : "timezone-from-dateTime", "qname" : "fn:timezone-from-dateTime", "signature" : "($arg as xs:dateTime?) as xs:dayTimeDuration? external", "description" : " <div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"><p xmlns:e=\"http://www.w3.org/1999/XSL/Spec/ElementSyntax\">Returns the timezone component of an <code>xs:dateTime</code>.</p><p xmlns:e=\"http://www.w3.org/1999/XSL/Spec/ElementSyntax\"><example role=\"signature\"><proto name=\"timezone-from-dateTime\" return-type=\"xs:dayTimeDuration?\" isOp=\"no\" prefix=\"fn\" returnEmptyOk=\"no\" returnSeq=\"no\" returnVaries=\"no\" isSchema=\"no\" isDatatype=\"no\" isSpecial=\"no\"><arg name=\"arg\" type=\"xs:dateTime?\"/></proto></example></p><p xmlns:e=\"http://www.w3.org/1999/XSL/Spec/ElementSyntax\">This function is <termref def=\"dt-deterministic\">deterministic</termref>, <termref def=\"dt-context-independent\">context-independent</termref>,  and <termref def=\"dt-focus-independent\">focus-independent</termref>. </p><p xmlns:e=\"http://www.w3.org/1999/XSL/Spec/ElementSyntax\">If <code>$arg</code> is the empty sequence, the function returns the empty sequence.</p><p xmlns:e=\"http://www.w3.org/1999/XSL/Spec/ElementSyntax\">Otherwise, the function returns the timezone component of <code>$arg</code>, if any. If\n                <code>$arg</code> has a timezone component, then the result is an\n                <code>xs:dayTimeDuration</code> that indicates deviation from UTC; its value may\n             range from +14:00 to -14:00 hours, both inclusive. If <code>$arg</code> has no timezone\n             component, the result is the empty sequence.</p><p xmlns:e=\"http://www.w3.org/1999/XSL/Spec/ElementSyntax\">The expression <code>fn:timezone-from-dateTime(xs:dateTime(\"1999-05-31T13:20:00-05:00\"))</code> returns <code>xs:dayTimeDuration(\"-PT5H\")</code>.</p><p xmlns:e=\"http://www.w3.org/1999/XSL/Spec/ElementSyntax\">The expression <code>fn:timezone-from-dateTime(xs:dateTime(\"2000-06-12T13:20:00Z\"))</code> returns <code>xs:dayTimeDuration(\"PT0S\")</code>.</p><p xmlns:e=\"http://www.w3.org/1999/XSL/Spec/ElementSyntax\">The expression <code>fn:timezone-from-dateTime(xs:dateTime(\"2004-08-27T00:00:00\"))</code> returns <code>()</code>.</p></div>\n", "summary" : "<p>  Returns the timezone component of an  xs:dateTime .</p>", "annotation_str" : "", "annotations" : [  ], "updating" : false, "parameters" : [ { "name" : "arg", "type" : "xs:dateTime", "occurrence" : "?", "description" : "" } ], "returns" : { "type" : "xs:dayTimeDuration?", "description" : "" }, "errors" : [  ] }, { "isDocumented" : true, "arity" : 1, "name" : "timezone-from-time", "qname" : "fn:timezone-from-time", "signature" : "($arg as xs:time?) as xs:dayTimeDuration? external", "description" : " <div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"><p xmlns:e=\"http://www.w3.org/1999/XSL/Spec/ElementSyntax\">Returns the timezone component of an <code>xs:time</code>.</p><p xmlns:e=\"http://www.w3.org/1999/XSL/Spec/ElementSyntax\"><example role=\"signature\"><proto name=\"timezone-from-time\" return-type=\"xs:dayTimeDuration?\" isOp=\"no\" prefix=\"fn\" returnEmptyOk=\"no\" returnSeq=\"no\" returnVaries=\"no\" isSchema=\"no\" isDatatype=\"no\" isSpecial=\"no\"><arg name=\"arg\" type=\"xs:time?\"/></proto></example></p><p xmlns:e=\"http://www.w3.org/1999/XSL/Spec/ElementSyntax\">This function is <termref def=\"dt-deterministic\">deterministic</termref>, <termref def=\"dt-context-independent\">context-independent</termref>,  and <termref def=\"dt-focus-independent\">focus-independent</termref>. </p><p xmlns:e=\"http://www.w3.org/1999/XSL/Spec/ElementSyntax\">If <code>$arg</code> is the empty sequence, the function returns the empty sequence.</p><p xmlns:e=\"http://www.w3.org/1999/XSL/Spec/ElementSyntax\">Otherwise, the function returns the timezone component of <code>$arg</code>, if any. If\n                <code>$arg</code> has a timezone component, then the result is an\n                <code>xs:dayTimeDuration</code> that indicates deviation from UTC; its value may\n             range from +14:00 to -14:00 hours, both inclusive. If <code>$arg</code> has no timezone\n             component, the result is the empty sequence.</p><p xmlns:e=\"http://www.w3.org/1999/XSL/Spec/ElementSyntax\">The expression <code>fn:timezone-from-time(xs:time(\"13:20:00-05:00\"))</code> returns <code>xs:dayTimeDuration(\"-PT5H\")</code>.</p><p xmlns:e=\"http://www.w3.org/1999/XSL/Spec/ElementSyntax\">The expression <code>fn:timezone-from-time(xs:time(\"13:20:00\"))</code> returns <code>()</code>.</p></div>\n", "summary" : "<p>  Returns the timezone component of an  xs:time .</p>", "annotation_str" : "", "annotations" : [  ], "updating" : false, "parameters" : [ { "name" : "arg", "type" : "xs:time", "occurrence" : "?", "description" : "" } ], "returns" : { "type" : "xs:dayTimeDuration?", "description" : "" }, "errors" : [  ] }, { "isDocumented" : true, "arity" : 2, "name" : "tokenize", "qname" : "fn:tokenize", "signature" : "($input as xs:string?, $pattern as xs:string) as xs:string* external", "description" : " <div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"><p xmlns:e=\"http://www.w3.org/1999/XSL/Spec/ElementSyntax\">Returns a sequence of strings constructed by splitting the input wherever a\n             separator is found; the separator is any substring that matches a given regular\n             expression.</p><p xmlns:e=\"http://www.w3.org/1999/XSL/Spec/ElementSyntax\"><example role=\"signature\"><proto name=\"tokenize\" return-type=\"xs:string*\" isOp=\"no\" prefix=\"fn\" returnEmptyOk=\"no\" returnSeq=\"no\" returnVaries=\"no\" isSchema=\"no\" isDatatype=\"no\" isSpecial=\"no\"><arg name=\"input\" type=\"xs:string?\"/><arg name=\"pattern\" type=\"xs:string\"/></proto></example><example role=\"signature\"><proto name=\"tokenize\" return-type=\"xs:string*\" isOp=\"no\" prefix=\"fn\" returnEmptyOk=\"no\" returnSeq=\"no\" returnVaries=\"no\" isSchema=\"no\" isDatatype=\"no\" isSpecial=\"no\"><arg name=\"input\" type=\"xs:string?\"/><arg name=\"pattern\" type=\"xs:string\"/><arg name=\"flags\" type=\"xs:string\"/></proto></example></p><p xmlns:e=\"http://www.w3.org/1999/XSL/Spec/ElementSyntax\">This function is <termref def=\"dt-deterministic\">deterministic</termref>, <termref def=\"dt-context-independent\">context-independent</termref>,  and <termref def=\"dt-focus-independent\">focus-independent</termref>. </p><p xmlns:e=\"http://www.w3.org/1999/XSL/Spec/ElementSyntax\">The effect of calling the first version of this function (omitting the argument\n                <code>$flags</code>) is the same as the effect of calling the second version with the\n                <code>$flags</code> argument set to a zero-length string. Flags are defined in\n                <specref ref=\"flags\"/>.</p><p xmlns:e=\"http://www.w3.org/1999/XSL/Spec/ElementSyntax\">The <code>$flags</code> argument is interpreted in the same way as for the\n                <code>fn:matches</code> function.</p><p xmlns:e=\"http://www.w3.org/1999/XSL/Spec/ElementSyntax\">If <code>$input</code> is the empty sequence, or if <code>$input</code> is the\n             zero-length string, the function returns the empty sequence.</p><p xmlns:e=\"http://www.w3.org/1999/XSL/Spec/ElementSyntax\">The function returns a sequence of strings formed by breaking the <code>$input</code>\n             string into a sequence of strings, treating any substring that matches\n                <code>$pattern</code> as a separator. The separators themselves are not returned.</p><p xmlns:e=\"http://www.w3.org/1999/XSL/Spec/ElementSyntax\">If a separator occurs at the start of the <code>$input</code> string, the result\n             sequence will start with a zero-length string. Zero-length strings will also occur in\n             the result sequence if a separator occurs at the end of the <code>$input</code> string,\n             or if two adjacent substrings match the supplied <code>$pattern</code>.</p><p xmlns:e=\"http://www.w3.org/1999/XSL/Spec/ElementSyntax\"> If two alternatives within the supplied <code>$pattern</code> both match at the same\n             position in the <code>$input</code> string, then the match that is chosen is the first.\n             For example:</p><eg xmlns:e=\"http://www.w3.org/1999/XSL/Spec/ElementSyntax\" xml:space=\"preserve\"> fn:tokenize(\"abracadabra\", \"(ab)|(a)\") returns (\"\", \"r\", \"c\", \"d\", \"r\", \"\")</eg><p xmlns:e=\"http://www.w3.org/1999/XSL/Spec/ElementSyntax\">A <phrase diff=\"add\" at=\"L\">dynamic</phrase> error is raised <errorref class=\"RX\" code=\"0002\"/> if the value of\n                <code>$pattern</code> is invalid according to the rules described in section <specref ref=\"regex-syntax\"/>.</p><p xmlns:e=\"http://www.w3.org/1999/XSL/Spec/ElementSyntax\">A <phrase diff=\"add\" at=\"L\">dynamic</phrase> error is raised <errorref class=\"RX\" code=\"0001\"/> if the value of\n                <code>$flags</code> is invalid according to the rules described in section <specref ref=\"regex-syntax\"/>.</p><p xmlns:e=\"http://www.w3.org/1999/XSL/Spec/ElementSyntax\">A <phrase diff=\"add\" at=\"L\">dynamic</phrase> error is raised <errorref class=\"RX\" code=\"0003\"/> if the supplied\n                <code>$pattern</code> matches a zero-length string, that is, if <code>fn:matches(\"\",\n                $pattern, $flags)</code> returns <code>true</code>. </p></div>\n", "summary" : "<p>  Returns a sequence of strings constructed by splitting the input wherever a\n             separator is found; the separator is any substring that matches a given regular\n             expression.</p>", "annotation_str" : "", "annotations" : [  ], "updating" : false, "parameters" : [ { "name" : "input", "type" : "xs:string", "occurrence" : "?", "description" : "" }, { "name" : "pattern", "type" : "xs:string", "occurrence" : null, "description" : "" } ], "returns" : { "type" : "xs:string*", "description" : "" }, "errors" : [  ] }, { "isDocumented" : true, "arity" : 3, "name" : "tokenize", "qname" : "fn:tokenize", "signature" : "($input as xs:string?, $pattern as xs:string, $flags as xs:string) as xs:string* external", "description" : " <div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"><p xmlns:e=\"http://www.w3.org/1999/XSL/Spec/ElementSyntax\">Returns a sequence of strings constructed by splitting the input wherever a\n             separator is found; the separator is any substring that matches a given regular\n             expression.</p><p xmlns:e=\"http://www.w3.org/1999/XSL/Spec/ElementSyntax\"><example role=\"signature\"><proto name=\"tokenize\" return-type=\"xs:string*\" isOp=\"no\" prefix=\"fn\" returnEmptyOk=\"no\" returnSeq=\"no\" returnVaries=\"no\" isSchema=\"no\" isDatatype=\"no\" isSpecial=\"no\"><arg name=\"input\" type=\"xs:string?\"/><arg name=\"pattern\" type=\"xs:string\"/></proto></example><example role=\"signature\"><proto name=\"tokenize\" return-type=\"xs:string*\" isOp=\"no\" prefix=\"fn\" returnEmptyOk=\"no\" returnSeq=\"no\" returnVaries=\"no\" isSchema=\"no\" isDatatype=\"no\" isSpecial=\"no\"><arg name=\"input\" type=\"xs:string?\"/><arg name=\"pattern\" type=\"xs:string\"/><arg name=\"flags\" type=\"xs:string\"/></proto></example></p><p xmlns:e=\"http://www.w3.org/1999/XSL/Spec/ElementSyntax\">This function is <termref def=\"dt-deterministic\">deterministic</termref>, <termref def=\"dt-context-independent\">context-independent</termref>,  and <termref def=\"dt-focus-independent\">focus-independent</termref>. </p><p xmlns:e=\"http://www.w3.org/1999/XSL/Spec/ElementSyntax\">The effect of calling the first version of this function (omitting the argument\n                <code>$flags</code>) is the same as the effect of calling the second version with the\n                <code>$flags</code> argument set to a zero-length string. Flags are defined in\n                <specref ref=\"flags\"/>.</p><p xmlns:e=\"http://www.w3.org/1999/XSL/Spec/ElementSyntax\">The <code>$flags</code> argument is interpreted in the same way as for the\n                <code>fn:matches</code> function.</p><p xmlns:e=\"http://www.w3.org/1999/XSL/Spec/ElementSyntax\">If <code>$input</code> is the empty sequence, or if <code>$input</code> is the\n             zero-length string, the function returns the empty sequence.</p><p xmlns:e=\"http://www.w3.org/1999/XSL/Spec/ElementSyntax\">The function returns a sequence of strings formed by breaking the <code>$input</code>\n             string into a sequence of strings, treating any substring that matches\n                <code>$pattern</code> as a separator. The separators themselves are not returned.</p><p xmlns:e=\"http://www.w3.org/1999/XSL/Spec/ElementSyntax\">If a separator occurs at the start of the <code>$input</code> string, the result\n             sequence will start with a zero-length string. Zero-length strings will also occur in\n             the result sequence if a separator occurs at the end of the <code>$input</code> string,\n             or if two adjacent substrings match the supplied <code>$pattern</code>.</p><p xmlns:e=\"http://www.w3.org/1999/XSL/Spec/ElementSyntax\"> If two alternatives within the supplied <code>$pattern</code> both match at the same\n             position in the <code>$input</code> string, then the match that is chosen is the first.\n             For example:</p><eg xmlns:e=\"http://www.w3.org/1999/XSL/Spec/ElementSyntax\" xml:space=\"preserve\"> fn:tokenize(\"abracadabra\", \"(ab)|(a)\") returns (\"\", \"r\", \"c\", \"d\", \"r\", \"\")</eg><p xmlns:e=\"http://www.w3.org/1999/XSL/Spec/ElementSyntax\">A <phrase diff=\"add\" at=\"L\">dynamic</phrase> error is raised <errorref class=\"RX\" code=\"0002\"/> if the value of\n                <code>$pattern</code> is invalid according to the rules described in section <specref ref=\"regex-syntax\"/>.</p><p xmlns:e=\"http://www.w3.org/1999/XSL/Spec/ElementSyntax\">A <phrase diff=\"add\" at=\"L\">dynamic</phrase> error is raised <errorref class=\"RX\" code=\"0001\"/> if the value of\n                <code>$flags</code> is invalid according to the rules described in section <specref ref=\"regex-syntax\"/>.</p><p xmlns:e=\"http://www.w3.org/1999/XSL/Spec/ElementSyntax\">A <phrase diff=\"add\" at=\"L\">dynamic</phrase> error is raised <errorref class=\"RX\" code=\"0003\"/> if the supplied\n                <code>$pattern</code> matches a zero-length string, that is, if <code>fn:matches(\"\",\n                $pattern, $flags)</code> returns <code>true</code>. </p></div>\n", "summary" : "<p>  Returns a sequence of strings constructed by splitting the input wherever a\n             separator is found; the separator is any substring that matches a given regular\n             expression.</p>", "annotation_str" : "", "annotations" : [  ], "updating" : false, "parameters" : [ { "name" : "input", "type" : "xs:string", "occurrence" : "?", "description" : "" }, { "name" : "pattern", "type" : "xs:string", "occurrence" : null, "description" : "" }, { "name" : "flags", "type" : "xs:string", "occurrence" : null, "description" : "" } ], "returns" : { "type" : "xs:string*", "description" : "" }, "errors" : [  ] }, { "isDocumented" : true, "arity" : 2, "name" : "trace", "qname" : "fn:trace", "signature" : "($value as item()*, $label as xs:string) as item()* external", "description" : " <div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"><p xmlns:e=\"http://www.w3.org/1999/XSL/Spec/ElementSyntax\">Provides an execution trace intended to be used in debugging queries.</p><p xmlns:e=\"http://www.w3.org/1999/XSL/Spec/ElementSyntax\"><example role=\"signature\"><proto name=\"trace\" return-type=\"item()*\" isOp=\"no\" prefix=\"fn\" returnEmptyOk=\"no\" returnSeq=\"no\" returnVaries=\"no\" isSchema=\"no\" isDatatype=\"no\" isSpecial=\"no\"><arg name=\"value\" type=\"item()*\"/><arg name=\"label\" type=\"xs:string\"/></proto></example></p><p xmlns:e=\"http://www.w3.org/1999/XSL/Spec/ElementSyntax\">This function is <termref def=\"dt-deterministic\">deterministic</termref>, <termref def=\"dt-context-independent\">context-independent</termref>,  and <termref def=\"dt-focus-independent\">focus-independent</termref>. </p><p xmlns:e=\"http://www.w3.org/1999/XSL/Spec/ElementSyntax\">The function returns the value of <code>$value</code>, unchanged.</p><p xmlns:e=\"http://www.w3.org/1999/XSL/Spec/ElementSyntax\">In addition, the values of <code>$value</code>, converted to an <code>xs:string</code>,\n             and <code>$label</code>\n             <rfc2119>may</rfc2119> be directed to a trace data set. The destination of the trace\n             output is <termref def=\"implementation-defined\"/>. The format of the trace output is\n                <termref def=\"implementation-dependent\"/>. The ordering of output from calls of the\n                <code>fn:trace</code> function is <termref def=\"implementation-dependent\"/>.</p><p xmlns:e=\"http://www.w3.org/1999/XSL/Spec/ElementSyntax\">Consider a situation in which a user wants to investigate the actual value passed to\n                a function. Assume that in a particular execution, <code>$v</code> is an\n                   <code>xs:decimal</code> with value <code>124.84</code>. Writing <code>fn:trace($v,\n                   'the value of $v is:')</code> will put the strings <code>\"124.84\"</code> and\n                   <code>\"the value of $v is:\"</code> in the trace data set in implementation\n                dependent order.</p></div>\n", "summary" : "<p>  Provides an execution trace intended to be used in debugging queries.</p>", "annotation_str" : "", "annotations" : [  ], "updating" : false, "parameters" : [ { "name" : "value", "type" : "item()", "occurrence" : "*", "description" : "" }, { "name" : "label", "type" : "xs:string", "occurrence" : null, "description" : "" } ], "returns" : { "type" : "item()*", "description" : "" }, "errors" : [  ] }, { "isDocumented" : true, "arity" : 3, "name" : "translate", "qname" : "fn:translate", "signature" : "($arg as xs:string?, $mapString as xs:string, $transString as xs:string) as xs:string external", "description" : " <div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"><p xmlns:e=\"http://www.w3.org/1999/XSL/Spec/ElementSyntax\">Returns the value of <code>$arg</code> modified by replacing or removing\n             individual characters. </p><p xmlns:e=\"http://www.w3.org/1999/XSL/Spec/ElementSyntax\"><example role=\"signature\"><proto name=\"translate\" return-type=\"xs:string\" isOp=\"no\" prefix=\"fn\" returnEmptyOk=\"no\" returnSeq=\"no\" returnVaries=\"no\" isSchema=\"no\" isDatatype=\"no\" isSpecial=\"no\"><arg name=\"arg\" type=\"xs:string?\"/><arg name=\"mapString\" type=\"xs:string\"/><arg name=\"transString\" type=\"xs:string\"/></proto></example></p><p xmlns:e=\"http://www.w3.org/1999/XSL/Spec/ElementSyntax\">This function is <termref def=\"dt-deterministic\">deterministic</termref>, <termref def=\"dt-context-independent\">context-independent</termref>,  and <termref def=\"dt-focus-independent\">focus-independent</termref>. </p><p xmlns:e=\"http://www.w3.org/1999/XSL/Spec/ElementSyntax\">If the value of <code>$arg</code> is the empty sequence, the function returns the\n             zero-length string.</p><p xmlns:e=\"http://www.w3.org/1999/XSL/Spec/ElementSyntax\">Otherwise, the function returns a result string constructed by processing each <termref def=\"character\">character</termref> in the value of <code>$arg</code>, in order,\n             according to the following rules:</p><olist xmlns:e=\"http://www.w3.org/1999/XSL/Spec/ElementSyntax\"><item><p>If the character does not appear in the value of <code>$mapString</code> then it\n                   is added to the result string unchanged.</p></item><item><p>If the character first appears in the value of <code>$mapString</code> at some\n                   position <emph>M</emph>, where the value of <code>$transString</code> is\n                      <emph>M</emph> or more characters in length, then the character at position\n                      <emph>M</emph> in <code>$transString</code> is added to the result string.</p></item><item><p>If the character first appears in the value of <code>$mapString</code> at some\n                   position <emph>M</emph>, where the value of <code>$transString</code> is less than\n                      <emph>M</emph> characters in length, then the character is omitted from the\n                   result string.</p></item></olist><p xmlns:e=\"http://www.w3.org/1999/XSL/Spec/ElementSyntax\">If <code>$mapString</code> is the zero-length string then the function returns\n                <code>$arg</code> unchanged.</p><p xmlns:e=\"http://www.w3.org/1999/XSL/Spec/ElementSyntax\">If a character occurs more than once in <code>$mapString</code>, then the first\n             occurrence determines the action taken.</p><p xmlns:e=\"http://www.w3.org/1999/XSL/Spec/ElementSyntax\">If <code>$transString</code> is longer than <code>$mapString</code>, the excess\n             characters are ignored.</p></div>\n", "summary" : "<p>  Returns the value of  $arg  modified by replacing or removing\n             individual characters.</p>", "annotation_str" : "", "annotations" : [  ], "updating" : false, "parameters" : [ { "name" : "arg", "type" : "xs:string", "occurrence" : "?", "description" : "" }, { "name" : "mapString", "type" : "xs:string", "occurrence" : null, "description" : "" }, { "name" : "transString", "type" : "xs:string", "occurrence" : null, "description" : "" } ], "returns" : { "type" : "xs:string", "description" : "" }, "errors" : [  ] }, { "isDocumented" : true, "arity" : 0, "name" : "true", "qname" : "fn:true", "signature" : "() as xs:boolean external", "description" : " <div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"><p xmlns:e=\"http://www.w3.org/1999/XSL/Spec/ElementSyntax\">Returns the <code>xs:boolean</code> value <code>true</code>.</p><p xmlns:e=\"http://www.w3.org/1999/XSL/Spec/ElementSyntax\"><example role=\"signature\"><proto name=\"true\" return-type=\"xs:boolean\" isOp=\"no\" prefix=\"fn\" returnEmptyOk=\"no\" returnSeq=\"no\" returnVaries=\"no\" isSchema=\"no\" isDatatype=\"no\" isSpecial=\"no\"/></example></p><p xmlns:e=\"http://www.w3.org/1999/XSL/Spec/ElementSyntax\">This function is <termref def=\"dt-deterministic\">deterministic</termref>, <termref def=\"dt-context-independent\">context-independent</termref>,  and <termref def=\"dt-focus-independent\">focus-independent</termref>. </p><p xmlns:e=\"http://www.w3.org/1999/XSL/Spec/ElementSyntax\">The result is equivalent to <code>xs:boolean(\"1\")</code>.</p><p xmlns:e=\"http://www.w3.org/1999/XSL/Spec/ElementSyntax\">The expression <code>fn:true()</code> returns <code>xs:boolean(1)</code>.</p></div>\n", "summary" : "<p>  Returns the  xs:boolean  value  true .</p>", "annotation_str" : "", "annotations" : [  ], "updating" : false, "parameters" : [  ], "returns" : { "type" : "xs:boolean", "description" : "" }, "errors" : [  ] }, { "isDocumented" : true, "arity" : 1, "name" : "unordered", "qname" : "fn:unordered", "signature" : "($sourceSeq as item()*) as item()* external", "description" : " <div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"><p xmlns:e=\"http://www.w3.org/1999/XSL/Spec/ElementSyntax\">Returns the items of <code>$sourceSeq</code> in an <termref def=\"implementation-dependent\"/> order.</p><p xmlns:e=\"http://www.w3.org/1999/XSL/Spec/ElementSyntax\"><example role=\"signature\"><proto name=\"unordered\" return-type=\"item()*\" isOp=\"no\" prefix=\"fn\" returnEmptyOk=\"no\" returnSeq=\"no\" returnVaries=\"no\" isSchema=\"no\" isDatatype=\"no\" isSpecial=\"no\"><arg name=\"sourceSeq\" type=\"item()*\"/></proto></example></p><p xmlns:e=\"http://www.w3.org/1999/XSL/Spec/ElementSyntax\">This function is <termref def=\"dt-deterministic\">deterministic</termref>, <termref def=\"dt-context-independent\">context-independent</termref>,  and <termref def=\"dt-focus-independent\">focus-independent</termref>. </p><p xmlns:e=\"http://www.w3.org/1999/XSL/Spec/ElementSyntax\">The function returns the items of <code>$sourceSeq</code> in an <termref def=\"implementation-dependent\"/> order.</p><p xmlns:e=\"http://www.w3.org/1999/XSL/Spec/ElementSyntax\">Query optimizers may be able to do a better job if the order of the output sequence is\n             not specified. For example, when retrieving prices from a purchase order, if an index\n             exists on prices, it may be more efficient to return the prices in index order rather\n             than in document order.</p></div>\n", "summary" : "<p>  Returns the items of  $sourceSeq  in an    order.</p>", "annotation_str" : "", "annotations" : [  ], "updating" : false, "parameters" : [ { "name" : "sourceSeq", "type" : "item()", "occurrence" : "*", "description" : "" } ], "returns" : { "type" : "item()*", "description" : "" }, "errors" : [  ] }, { "isDocumented" : true, "arity" : 1, "name" : "unparsed-text-available", "qname" : "fn:unparsed-text-available", "signature" : "($href as xs:string?) as xs:boolean external", "description" : " <div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"><p xmlns:e=\"http://www.w3.org/1999/XSL/Spec/ElementSyntax\">Because errors in evaluating the <function>fn:unparsed-text</function> function are\n             non-recoverable, these two functions are provided to allow an application to determine\n             whether a call with particular arguments would succeed.</p><p xmlns:e=\"http://www.w3.org/1999/XSL/Spec/ElementSyntax\"><example role=\"signature\"><proto name=\"unparsed-text-available\" return-type=\"xs:boolean\" isOp=\"no\" prefix=\"fn\" returnEmptyOk=\"no\" returnSeq=\"no\" returnVaries=\"no\" isSchema=\"no\" isDatatype=\"no\" isSpecial=\"no\"><arg name=\"href\" type=\"xs:string?\"/></proto></example><example role=\"signature\"><proto name=\"unparsed-text-available\" return-type=\"xs:boolean\" isOp=\"no\" prefix=\"fn\" returnEmptyOk=\"no\" returnSeq=\"no\" returnVaries=\"no\" isSchema=\"no\" isDatatype=\"no\" isSpecial=\"no\"><arg name=\"href\" type=\"xs:string?\"/><arg name=\"encoding\" type=\"xs:string\"/></proto></example></p><p xmlns:e=\"http://www.w3.org/1999/XSL/Spec/ElementSyntax\">This function is <termref def=\"dt-deterministic\">deterministic</termref>, <termref def=\"dt-context-dependent\">context-dependent</termref>,  and <termref def=\"dt-focus-independent\">focus-independent</termref>.  It depends on\n \t\tstatic base uri.\n \t</p><p xmlns:e=\"http://www.w3.org/1999/XSL/Spec/ElementSyntax\">The <function>fn:unparsed-text-available</function> function determines whether a call\n             on the <function>fn:unparsed-text</function> function with identical arguments would\n             return a string.</p><p xmlns:e=\"http://www.w3.org/1999/XSL/Spec/ElementSyntax\">If the first argument is an empty sequence, the function returns false. <phrase diff=\"del\" at=\"L\">If the second\n             argument is an empty sequence, the function behaves as if the second argument were\n             omitted.</phrase></p><p xmlns:e=\"http://www.w3.org/1999/XSL/Spec/ElementSyntax\">In other cases, the function returns true if a call on\n                <function>fn:unparsed-text</function> with the same arguments would succeed, and\n             false if a call on <function>fn:unparsed-text</function> with the same arguments would\n             fail with a non-recoverable dynamic error.</p><p xmlns:e=\"http://www.w3.org/1999/XSL/Spec/ElementSyntax\">The functions <function>fn:unparsed-text</function> and\n                <function>fn:unparsed-text-available</function> have the same requirement for\n                <termref def=\"deterministic\">determinism</termref> as the functions\n                <code>fn:doc</code> and <code>fn:doc-available</code>. This means that unless the\n             user has explicitly stated a requirement for a reduced level of determinism, either of\n             these functions if called twice with the same arguments during the course of a\n             transformation <rfc2119>must</rfc2119> return the same results each time; moreover, the\n             results of a call on <function>fn:unparsed-text-available</function>\n             <rfc2119>must</rfc2119> be consistent with the results of a subsequent call on\n                <function>unparsed-text</function> with the same arguments.</p><p xmlns:e=\"http://www.w3.org/1999/XSL/Spec/ElementSyntax\">This requires that the <function>unparsed-text-available</function> function should\n             actually attempt to read the resource identified by the URI, and check that it is\n             correctly encoded and contains no characters that are invalid in XML. Implementations\n             may avoid the cost of repeating these checks for example by caching the validated\n             contents of the resource, to anticipate a subsequent call on the\n                <function>unparsed-text</function>\n             <phrase diff=\"add\" at=\"A\">or <function>unparsed-text-lines</function>\n             </phrase> function. Alternatively, implementations may be able to rewrite an expression\n             such as <code>if (unparsed-text-available(A)) then unparsed-text(A) else ...</code> to\n             generate a single call internally.</p></div>\n", "summary" : "<p>  Because errors in evaluating the  fn:unparsed-text  function are\n             non-recoverable, these two functions are provided to allow an application to determine\n             whether a call with particular arguments would succeed.</p>", "annotation_str" : "", "annotations" : [  ], "updating" : false, "parameters" : [ { "name" : "href", "type" : "xs:string", "occurrence" : "?", "description" : "" } ], "returns" : { "type" : "xs:boolean", "description" : "" }, "errors" : [  ] }, { "isDocumented" : true, "arity" : 1, "name" : "unparsed-text-available", "qname" : "fn:unparsed-text-available", "signature" : "($href as xs:string?) as xs:boolean external", "description" : " <div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"><p xmlns:e=\"http://www.w3.org/1999/XSL/Spec/ElementSyntax\">Because errors in evaluating the <function>fn:unparsed-text</function> function are\n             non-recoverable, these two functions are provided to allow an application to determine\n             whether a call with particular arguments would succeed.</p><p xmlns:e=\"http://www.w3.org/1999/XSL/Spec/ElementSyntax\"><example role=\"signature\"><proto name=\"unparsed-text-available\" return-type=\"xs:boolean\" isOp=\"no\" prefix=\"fn\" returnEmptyOk=\"no\" returnSeq=\"no\" returnVaries=\"no\" isSchema=\"no\" isDatatype=\"no\" isSpecial=\"no\"><arg name=\"href\" type=\"xs:string?\"/></proto></example><example role=\"signature\"><proto name=\"unparsed-text-available\" return-type=\"xs:boolean\" isOp=\"no\" prefix=\"fn\" returnEmptyOk=\"no\" returnSeq=\"no\" returnVaries=\"no\" isSchema=\"no\" isDatatype=\"no\" isSpecial=\"no\"><arg name=\"href\" type=\"xs:string?\"/><arg name=\"encoding\" type=\"xs:string\"/></proto></example></p><p xmlns:e=\"http://www.w3.org/1999/XSL/Spec/ElementSyntax\">This function is <termref def=\"dt-deterministic\">deterministic</termref>, <termref def=\"dt-context-dependent\">context-dependent</termref>,  and <termref def=\"dt-focus-independent\">focus-independent</termref>.  It depends on\n \t\tstatic base uri.\n \t</p><p xmlns:e=\"http://www.w3.org/1999/XSL/Spec/ElementSyntax\">The <function>fn:unparsed-text-available</function> function determines whether a call\n             on the <function>fn:unparsed-text</function> function with identical arguments would\n             return a string.</p><p xmlns:e=\"http://www.w3.org/1999/XSL/Spec/ElementSyntax\">If the first argument is an empty sequence, the function returns false. <phrase diff=\"del\" at=\"L\">If the second\n             argument is an empty sequence, the function behaves as if the second argument were\n             omitted.</phrase></p><p xmlns:e=\"http://www.w3.org/1999/XSL/Spec/ElementSyntax\">In other cases, the function returns true if a call on\n                <function>fn:unparsed-text</function> with the same arguments would succeed, and\n             false if a call on <function>fn:unparsed-text</function> with the same arguments would\n             fail with a non-recoverable dynamic error.</p><p xmlns:e=\"http://www.w3.org/1999/XSL/Spec/ElementSyntax\">The functions <function>fn:unparsed-text</function> and\n                <function>fn:unparsed-text-available</function> have the same requirement for\n                <termref def=\"deterministic\">determinism</termref> as the functions\n                <code>fn:doc</code> and <code>fn:doc-available</code>. This means that unless the\n             user has explicitly stated a requirement for a reduced level of determinism, either of\n             these functions if called twice with the same arguments during the course of a\n             transformation <rfc2119>must</rfc2119> return the same results each time; moreover, the\n             results of a call on <function>fn:unparsed-text-available</function>\n             <rfc2119>must</rfc2119> be consistent with the results of a subsequent call on\n                <function>unparsed-text</function> with the same arguments.</p><p xmlns:e=\"http://www.w3.org/1999/XSL/Spec/ElementSyntax\">This requires that the <function>unparsed-text-available</function> function should\n             actually attempt to read the resource identified by the URI, and check that it is\n             correctly encoded and contains no characters that are invalid in XML. Implementations\n             may avoid the cost of repeating these checks for example by caching the validated\n             contents of the resource, to anticipate a subsequent call on the\n                <function>unparsed-text</function>\n             <phrase diff=\"add\" at=\"A\">or <function>unparsed-text-lines</function>\n             </phrase> function. Alternatively, implementations may be able to rewrite an expression\n             such as <code>if (unparsed-text-available(A)) then unparsed-text(A) else ...</code> to\n             generate a single call internally.</p></div>\n", "summary" : "<p>  Because errors in evaluating the  fn:unparsed-text  function are\n             non-recoverable, these two functions are provided to allow an application to determine\n             whether a call with particular arguments would succeed.</p>", "annotation_str" : "", "annotations" : [  ], "updating" : false, "parameters" : [ { "name" : "href", "type" : "xs:string", "occurrence" : "?", "description" : "" } ], "returns" : { "type" : "xs:boolean", "description" : "" }, "errors" : [  ] }, { "isDocumented" : true, "arity" : 2, "name" : "unparsed-text-available", "qname" : "fn:unparsed-text-available", "signature" : "($href as xs:string?, $encoding as xs:string) as xs:boolean external", "description" : " <div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"><p xmlns:e=\"http://www.w3.org/1999/XSL/Spec/ElementSyntax\">Because errors in evaluating the <function>fn:unparsed-text</function> function are\n             non-recoverable, these two functions are provided to allow an application to determine\n             whether a call with particular arguments would succeed.</p><p xmlns:e=\"http://www.w3.org/1999/XSL/Spec/ElementSyntax\"><example role=\"signature\"><proto name=\"unparsed-text-available\" return-type=\"xs:boolean\" isOp=\"no\" prefix=\"fn\" returnEmptyOk=\"no\" returnSeq=\"no\" returnVaries=\"no\" isSchema=\"no\" isDatatype=\"no\" isSpecial=\"no\"><arg name=\"href\" type=\"xs:string?\"/></proto></example><example role=\"signature\"><proto name=\"unparsed-text-available\" return-type=\"xs:boolean\" isOp=\"no\" prefix=\"fn\" returnEmptyOk=\"no\" returnSeq=\"no\" returnVaries=\"no\" isSchema=\"no\" isDatatype=\"no\" isSpecial=\"no\"><arg name=\"href\" type=\"xs:string?\"/><arg name=\"encoding\" type=\"xs:string\"/></proto></example></p><p xmlns:e=\"http://www.w3.org/1999/XSL/Spec/ElementSyntax\">This function is <termref def=\"dt-deterministic\">deterministic</termref>, <termref def=\"dt-context-dependent\">context-dependent</termref>,  and <termref def=\"dt-focus-independent\">focus-independent</termref>.  It depends on\n \t\tstatic base uri.\n \t</p><p xmlns:e=\"http://www.w3.org/1999/XSL/Spec/ElementSyntax\">The <function>fn:unparsed-text-available</function> function determines whether a call\n             on the <function>fn:unparsed-text</function> function with identical arguments would\n             return a string.</p><p xmlns:e=\"http://www.w3.org/1999/XSL/Spec/ElementSyntax\">If the first argument is an empty sequence, the function returns false. <phrase diff=\"del\" at=\"L\">If the second\n             argument is an empty sequence, the function behaves as if the second argument were\n             omitted.</phrase></p><p xmlns:e=\"http://www.w3.org/1999/XSL/Spec/ElementSyntax\">In other cases, the function returns true if a call on\n                <function>fn:unparsed-text</function> with the same arguments would succeed, and\n             false if a call on <function>fn:unparsed-text</function> with the same arguments would\n             fail with a non-recoverable dynamic error.</p><p xmlns:e=\"http://www.w3.org/1999/XSL/Spec/ElementSyntax\">The functions <function>fn:unparsed-text</function> and\n                <function>fn:unparsed-text-available</function> have the same requirement for\n                <termref def=\"deterministic\">determinism</termref> as the functions\n                <code>fn:doc</code> and <code>fn:doc-available</code>. This means that unless the\n             user has explicitly stated a requirement for a reduced level of determinism, either of\n             these functions if called twice with the same arguments during the course of a\n             transformation <rfc2119>must</rfc2119> return the same results each time; moreover, the\n             results of a call on <function>fn:unparsed-text-available</function>\n             <rfc2119>must</rfc2119> be consistent with the results of a subsequent call on\n                <function>unparsed-text</function> with the same arguments.</p><p xmlns:e=\"http://www.w3.org/1999/XSL/Spec/ElementSyntax\">This requires that the <function>unparsed-text-available</function> function should\n             actually attempt to read the resource identified by the URI, and check that it is\n             correctly encoded and contains no characters that are invalid in XML. Implementations\n             may avoid the cost of repeating these checks for example by caching the validated\n             contents of the resource, to anticipate a subsequent call on the\n                <function>unparsed-text</function>\n             <phrase diff=\"add\" at=\"A\">or <function>unparsed-text-lines</function>\n             </phrase> function. Alternatively, implementations may be able to rewrite an expression\n             such as <code>if (unparsed-text-available(A)) then unparsed-text(A) else ...</code> to\n             generate a single call internally.</p></div>\n", "summary" : "<p>  Because errors in evaluating the  fn:unparsed-text  function are\n             non-recoverable, these two functions are provided to allow an application to determine\n             whether a call with particular arguments would succeed.</p>", "annotation_str" : "", "annotations" : [  ], "updating" : false, "parameters" : [ { "name" : "href", "type" : "xs:string", "occurrence" : "?", "description" : "" }, { "name" : "encoding", "type" : "xs:string", "occurrence" : null, "description" : "" } ], "returns" : { "type" : "xs:boolean", "description" : "" }, "errors" : [  ] }, { "isDocumented" : true, "arity" : 2, "name" : "unparsed-text-available", "qname" : "fn:unparsed-text-available", "signature" : "($href as xs:string?, $encoding as xs:string) as xs:boolean external", "description" : " <div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"><p xmlns:e=\"http://www.w3.org/1999/XSL/Spec/ElementSyntax\">Because errors in evaluating the <function>fn:unparsed-text</function> function are\n             non-recoverable, these two functions are provided to allow an application to determine\n             whether a call with particular arguments would succeed.</p><p xmlns:e=\"http://www.w3.org/1999/XSL/Spec/ElementSyntax\"><example role=\"signature\"><proto name=\"unparsed-text-available\" return-type=\"xs:boolean\" isOp=\"no\" prefix=\"fn\" returnEmptyOk=\"no\" returnSeq=\"no\" returnVaries=\"no\" isSchema=\"no\" isDatatype=\"no\" isSpecial=\"no\"><arg name=\"href\" type=\"xs:string?\"/></proto></example><example role=\"signature\"><proto name=\"unparsed-text-available\" return-type=\"xs:boolean\" isOp=\"no\" prefix=\"fn\" returnEmptyOk=\"no\" returnSeq=\"no\" returnVaries=\"no\" isSchema=\"no\" isDatatype=\"no\" isSpecial=\"no\"><arg name=\"href\" type=\"xs:string?\"/><arg name=\"encoding\" type=\"xs:string\"/></proto></example></p><p xmlns:e=\"http://www.w3.org/1999/XSL/Spec/ElementSyntax\">This function is <termref def=\"dt-deterministic\">deterministic</termref>, <termref def=\"dt-context-dependent\">context-dependent</termref>,  and <termref def=\"dt-focus-independent\">focus-independent</termref>.  It depends on\n \t\tstatic base uri.\n \t</p><p xmlns:e=\"http://www.w3.org/1999/XSL/Spec/ElementSyntax\">The <function>fn:unparsed-text-available</function> function determines whether a call\n             on the <function>fn:unparsed-text</function> function with identical arguments would\n             return a string.</p><p xmlns:e=\"http://www.w3.org/1999/XSL/Spec/ElementSyntax\">If the first argument is an empty sequence, the function returns false. <phrase diff=\"del\" at=\"L\">If the second\n             argument is an empty sequence, the function behaves as if the second argument were\n             omitted.</phrase></p><p xmlns:e=\"http://www.w3.org/1999/XSL/Spec/ElementSyntax\">In other cases, the function returns true if a call on\n                <function>fn:unparsed-text</function> with the same arguments would succeed, and\n             false if a call on <function>fn:unparsed-text</function> with the same arguments would\n             fail with a non-recoverable dynamic error.</p><p xmlns:e=\"http://www.w3.org/1999/XSL/Spec/ElementSyntax\">The functions <function>fn:unparsed-text</function> and\n                <function>fn:unparsed-text-available</function> have the same requirement for\n                <termref def=\"deterministic\">determinism</termref> as the functions\n                <code>fn:doc</code> and <code>fn:doc-available</code>. This means that unless the\n             user has explicitly stated a requirement for a reduced level of determinism, either of\n             these functions if called twice with the same arguments during the course of a\n             transformation <rfc2119>must</rfc2119> return the same results each time; moreover, the\n             results of a call on <function>fn:unparsed-text-available</function>\n             <rfc2119>must</rfc2119> be consistent with the results of a subsequent call on\n                <function>unparsed-text</function> with the same arguments.</p><p xmlns:e=\"http://www.w3.org/1999/XSL/Spec/ElementSyntax\">This requires that the <function>unparsed-text-available</function> function should\n             actually attempt to read the resource identified by the URI, and check that it is\n             correctly encoded and contains no characters that are invalid in XML. Implementations\n             may avoid the cost of repeating these checks for example by caching the validated\n             contents of the resource, to anticipate a subsequent call on the\n                <function>unparsed-text</function>\n             <phrase diff=\"add\" at=\"A\">or <function>unparsed-text-lines</function>\n             </phrase> function. Alternatively, implementations may be able to rewrite an expression\n             such as <code>if (unparsed-text-available(A)) then unparsed-text(A) else ...</code> to\n             generate a single call internally.</p></div>\n", "summary" : "<p>  Because errors in evaluating the  fn:unparsed-text  function are\n             non-recoverable, these two functions are provided to allow an application to determine\n             whether a call with particular arguments would succeed.</p>", "annotation_str" : "", "annotations" : [  ], "updating" : false, "parameters" : [ { "name" : "href", "type" : "xs:string", "occurrence" : "?", "description" : "" }, { "name" : "encoding", "type" : "xs:string", "occurrence" : null, "description" : "" } ], "returns" : { "type" : "xs:boolean", "description" : "" }, "errors" : [  ] }, { "isDocumented" : true, "arity" : 1, "name" : "unparsed-text-lines", "qname" : "fn:unparsed-text-lines", "signature" : "($href as xs:string?) as xs:string* external", "description" : " <div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"><p xmlns:e=\"http://www.w3.org/1999/XSL/Spec/ElementSyntax\">The <code>fn:unparsed-text-lines</code> function reads an external resource (for\n             example, a file) and returns its contents as a sequence of strings, one for each line of\n             text in the  <phrase diff=\"chg\" at=\"L\">string representation</phrase> of the resource.</p><p xmlns:e=\"http://www.w3.org/1999/XSL/Spec/ElementSyntax\"><example role=\"signature\"><proto name=\"unparsed-text-lines\" return-type=\"xs:string*\" isOp=\"no\" prefix=\"fn\" returnEmptyOk=\"no\" returnSeq=\"no\" returnVaries=\"no\" isSchema=\"no\" isDatatype=\"no\" isSpecial=\"no\"><arg name=\"href\" type=\"xs:string?\"/></proto></example><example role=\"signature\"><proto name=\"unparsed-text-lines\" return-type=\"xs:string*\" isOp=\"no\" prefix=\"fn\" returnEmptyOk=\"no\" returnSeq=\"no\" returnVaries=\"no\" isSchema=\"no\" isDatatype=\"no\" isSpecial=\"no\"><arg name=\"href\" type=\"xs:string?\"/><arg name=\"encoding\" type=\"xs:string\"/></proto></example></p><p xmlns:e=\"http://www.w3.org/1999/XSL/Spec/ElementSyntax\">This function is <termref def=\"dt-deterministic\">deterministic</termref>, <termref def=\"dt-context-dependent\">context-dependent</termref>,  and <termref def=\"dt-focus-independent\">focus-independent</termref>.  It depends on\n \t\tstatic base uri.\n \t</p><p xmlns:e=\"http://www.w3.org/1999/XSL/Spec/ElementSyntax\">The <code>unparsed-text-lines</code> function reads an external resource (for example, a\n             file) and returns its <phrase diff=\"chg\" at=\"L\">string representation</phrase> as a sequence of strings, separated at newline\n             boundaries. </p><p xmlns:e=\"http://www.w3.org/1999/XSL/Spec/ElementSyntax\">The result of the single-argument function is the same as the result of the expression\n                <code>fn:tokenize(fn:unparsed-text($href), '\\r\\n|\\r|\\n')[not(position()=last() and\n                .='')]</code>. The result of the two-argument function is the same as the result of\n             the expression <code>fn:tokenize(fn:unparsed-text($href, $encoding),\n                '\\r\\n|\\r|\\n'))[not(position()=last() and .='')]</code>. </p><p xmlns:e=\"http://www.w3.org/1999/XSL/Spec/ElementSyntax\">The result is a thus a sequence of strings containing the text of the resource retrieved\n             using the URI, each string representing one line of text. Lines are separated by one of\n             the sequences x0A, x0D, or x0Dx0A. The characters representing the newline are not\n             included in the returned strings. If there are two adjacent newline sequences, a\n             zero-length string will be returned to represent the empty line; but if the external\n             resource ends with a newline sequence, no zero-length string will be returned as the\n             last item in the result.</p><p xmlns:e=\"http://www.w3.org/1999/XSL/Spec/ElementSyntax\">Error conditions are the same as for the <code>fn:unparsed-text</code> function.</p></div>\n", "summary" : "<p>  The  fn:unparsed-text-lines  function reads an external resource (for\n             example, a file) and returns its contents as a sequence of strings, one for each line of\n             text in the   string representation  of the resource.</p>", "annotation_str" : "", "annotations" : [  ], "updating" : false, "parameters" : [ { "name" : "href", "type" : "xs:string", "occurrence" : "?", "description" : "" } ], "returns" : { "type" : "xs:string*", "description" : "" }, "errors" : [  ] }, { "isDocumented" : true, "arity" : 2, "name" : "unparsed-text-lines", "qname" : "fn:unparsed-text-lines", "signature" : "($href as xs:string?, $encoding as xs:string) as xs:string* external", "description" : " <div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"><p xmlns:e=\"http://www.w3.org/1999/XSL/Spec/ElementSyntax\">The <code>fn:unparsed-text-lines</code> function reads an external resource (for\n             example, a file) and returns its contents as a sequence of strings, one for each line of\n             text in the  <phrase diff=\"chg\" at=\"L\">string representation</phrase> of the resource.</p><p xmlns:e=\"http://www.w3.org/1999/XSL/Spec/ElementSyntax\"><example role=\"signature\"><proto name=\"unparsed-text-lines\" return-type=\"xs:string*\" isOp=\"no\" prefix=\"fn\" returnEmptyOk=\"no\" returnSeq=\"no\" returnVaries=\"no\" isSchema=\"no\" isDatatype=\"no\" isSpecial=\"no\"><arg name=\"href\" type=\"xs:string?\"/></proto></example><example role=\"signature\"><proto name=\"unparsed-text-lines\" return-type=\"xs:string*\" isOp=\"no\" prefix=\"fn\" returnEmptyOk=\"no\" returnSeq=\"no\" returnVaries=\"no\" isSchema=\"no\" isDatatype=\"no\" isSpecial=\"no\"><arg name=\"href\" type=\"xs:string?\"/><arg name=\"encoding\" type=\"xs:string\"/></proto></example></p><p xmlns:e=\"http://www.w3.org/1999/XSL/Spec/ElementSyntax\">This function is <termref def=\"dt-deterministic\">deterministic</termref>, <termref def=\"dt-context-dependent\">context-dependent</termref>,  and <termref def=\"dt-focus-independent\">focus-independent</termref>.  It depends on\n \t\tstatic base uri.\n \t</p><p xmlns:e=\"http://www.w3.org/1999/XSL/Spec/ElementSyntax\">The <code>unparsed-text-lines</code> function reads an external resource (for example, a\n             file) and returns its <phrase diff=\"chg\" at=\"L\">string representation</phrase> as a sequence of strings, separated at newline\n             boundaries. </p><p xmlns:e=\"http://www.w3.org/1999/XSL/Spec/ElementSyntax\">The result of the single-argument function is the same as the result of the expression\n                <code>fn:tokenize(fn:unparsed-text($href), '\\r\\n|\\r|\\n')[not(position()=last() and\n                .='')]</code>. The result of the two-argument function is the same as the result of\n             the expression <code>fn:tokenize(fn:unparsed-text($href, $encoding),\n                '\\r\\n|\\r|\\n'))[not(position()=last() and .='')]</code>. </p><p xmlns:e=\"http://www.w3.org/1999/XSL/Spec/ElementSyntax\">The result is a thus a sequence of strings containing the text of the resource retrieved\n             using the URI, each string representing one line of text. Lines are separated by one of\n             the sequences x0A, x0D, or x0Dx0A. The characters representing the newline are not\n             included in the returned strings. If there are two adjacent newline sequences, a\n             zero-length string will be returned to represent the empty line; but if the external\n             resource ends with a newline sequence, no zero-length string will be returned as the\n             last item in the result.</p><p xmlns:e=\"http://www.w3.org/1999/XSL/Spec/ElementSyntax\">Error conditions are the same as for the <code>fn:unparsed-text</code> function.</p></div>\n", "summary" : "<p>  The  fn:unparsed-text-lines  function reads an external resource (for\n             example, a file) and returns its contents as a sequence of strings, one for each line of\n             text in the   string representation  of the resource.</p>", "annotation_str" : "", "annotations" : [  ], "updating" : false, "parameters" : [ { "name" : "href", "type" : "xs:string", "occurrence" : "?", "description" : "" }, { "name" : "encoding", "type" : "xs:string", "occurrence" : null, "description" : "" } ], "returns" : { "type" : "xs:string*", "description" : "" }, "errors" : [  ] }, { "isDocumented" : true, "arity" : 2, "name" : "unparsed-text-lines", "qname" : "fn:unparsed-text-lines", "signature" : "($href as xs:string?, $encoding as xs:string) as xs:string* external", "description" : " <div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"><p xmlns:e=\"http://www.w3.org/1999/XSL/Spec/ElementSyntax\">The <code>fn:unparsed-text-lines</code> function reads an external resource (for\n             example, a file) and returns its contents as a sequence of strings, one for each line of\n             text in the  <phrase diff=\"chg\" at=\"L\">string representation</phrase> of the resource.</p><p xmlns:e=\"http://www.w3.org/1999/XSL/Spec/ElementSyntax\"><example role=\"signature\"><proto name=\"unparsed-text-lines\" return-type=\"xs:string*\" isOp=\"no\" prefix=\"fn\" returnEmptyOk=\"no\" returnSeq=\"no\" returnVaries=\"no\" isSchema=\"no\" isDatatype=\"no\" isSpecial=\"no\"><arg name=\"href\" type=\"xs:string?\"/></proto></example><example role=\"signature\"><proto name=\"unparsed-text-lines\" return-type=\"xs:string*\" isOp=\"no\" prefix=\"fn\" returnEmptyOk=\"no\" returnSeq=\"no\" returnVaries=\"no\" isSchema=\"no\" isDatatype=\"no\" isSpecial=\"no\"><arg name=\"href\" type=\"xs:string?\"/><arg name=\"encoding\" type=\"xs:string\"/></proto></example></p><p xmlns:e=\"http://www.w3.org/1999/XSL/Spec/ElementSyntax\">This function is <termref def=\"dt-deterministic\">deterministic</termref>, <termref def=\"dt-context-dependent\">context-dependent</termref>,  and <termref def=\"dt-focus-independent\">focus-independent</termref>.  It depends on\n \t\tstatic base uri.\n \t</p><p xmlns:e=\"http://www.w3.org/1999/XSL/Spec/ElementSyntax\">The <code>unparsed-text-lines</code> function reads an external resource (for example, a\n             file) and returns its <phrase diff=\"chg\" at=\"L\">string representation</phrase> as a sequence of strings, separated at newline\n             boundaries. </p><p xmlns:e=\"http://www.w3.org/1999/XSL/Spec/ElementSyntax\">The result of the single-argument function is the same as the result of the expression\n                <code>fn:tokenize(fn:unparsed-text($href), '\\r\\n|\\r|\\n')[not(position()=last() and\n                .='')]</code>. The result of the two-argument function is the same as the result of\n             the expression <code>fn:tokenize(fn:unparsed-text($href, $encoding),\n                '\\r\\n|\\r|\\n'))[not(position()=last() and .='')]</code>. </p><p xmlns:e=\"http://www.w3.org/1999/XSL/Spec/ElementSyntax\">The result is a thus a sequence of strings containing the text of the resource retrieved\n             using the URI, each string representing one line of text. Lines are separated by one of\n             the sequences x0A, x0D, or x0Dx0A. The characters representing the newline are not\n             included in the returned strings. If there are two adjacent newline sequences, a\n             zero-length string will be returned to represent the empty line; but if the external\n             resource ends with a newline sequence, no zero-length string will be returned as the\n             last item in the result.</p><p xmlns:e=\"http://www.w3.org/1999/XSL/Spec/ElementSyntax\">Error conditions are the same as for the <code>fn:unparsed-text</code> function.</p></div>\n", "summary" : "<p>  The  fn:unparsed-text-lines  function reads an external resource (for\n             example, a file) and returns its contents as a sequence of strings, one for each line of\n             text in the   string representation  of the resource.</p>", "annotation_str" : "", "annotations" : [  ], "updating" : false, "parameters" : [ { "name" : "href", "type" : "xs:string", "occurrence" : "?", "description" : "" }, { "name" : "encoding", "type" : "xs:string", "occurrence" : null, "description" : "" } ], "returns" : { "type" : "xs:string*", "description" : "" }, "errors" : [  ] }, { "isDocumented" : true, "arity" : 1, "name" : "unparsed-text", "qname" : "fn:unparsed-text", "signature" : "($href as xs:string?) as xs:string? external", "description" : " <div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"><p xmlns:e=\"http://www.w3.org/1999/XSL/Spec/ElementSyntax\">The <code>fn:unparsed-text</code> function reads an external resource (for example, a\n             file) and returns <phrase diff=\"chg\" at=\"L\">a string representation of the resource</phrase>.</p><p xmlns:e=\"http://www.w3.org/1999/XSL/Spec/ElementSyntax\"><example role=\"signature\"><proto name=\"unparsed-text\" return-type=\"xs:string?\" isOp=\"no\" prefix=\"fn\" returnEmptyOk=\"no\" returnSeq=\"no\" returnVaries=\"no\" isSchema=\"no\" isDatatype=\"no\" isSpecial=\"no\"><arg name=\"href\" type=\"xs:string?\"/></proto></example><example role=\"signature\"><proto name=\"unparsed-text\" return-type=\"xs:string?\" isOp=\"no\" prefix=\"fn\" returnEmptyOk=\"no\" returnSeq=\"no\" returnVaries=\"no\" isSchema=\"no\" isDatatype=\"no\" isSpecial=\"no\"><arg name=\"href\" type=\"xs:string?\"/><arg name=\"encoding\" type=\"xs:string\"/></proto></example></p><p xmlns:e=\"http://www.w3.org/1999/XSL/Spec/ElementSyntax\">This function is <termref def=\"dt-deterministic\">deterministic</termref>, <termref def=\"dt-context-dependent\">context-dependent</termref>,  and <termref def=\"dt-focus-independent\">focus-independent</termref>.  It depends on\n \t\tstatic base uri.\n \t</p><p xmlns:e=\"http://www.w3.org/1999/XSL/Spec/ElementSyntax\">The <code>$href</code> argument <rfc2119>must</rfc2119> be a string in the form of a URI\n             reference, which <rfc2119>must</rfc2119> contain no fragment identifier, and\n                <rfc2119>must</rfc2119> identify a resource\n             <phrase diff=\"chg\" at=\"L\">for which a string representation is available</phrase>. If the URI is a\n             relative URI reference, then it is resolved relative to the\n             <phrase diff=\"chg\" at=\"L\">Static Base URI property from the static context</phrase>.</p><p xmlns:e=\"http://www.w3.org/1999/XSL/Spec/ElementSyntax\" diff=\"add\" at=\"L\">The mapping of URIs to the string representation of a resource is the mapping defined\n             in the <xtermref spec=\"XP30\" ref=\"dt-available-text-resources\">available text resources</xtermref>\n          component of the dynamic context.</p><p xmlns:e=\"http://www.w3.org/1999/XSL/Spec/ElementSyntax\">If the value of the <code>$href</code> argument is an empty sequence, the function\n             returns an empty sequence.</p><p xmlns:e=\"http://www.w3.org/1999/XSL/Spec/ElementSyntax\">The <code>$encoding</code> argument, if present, is the name of an encoding. The values\n             for this attribute follow the same rules as for the <code>encoding</code> attribute in\n             an XML declaration. The only values which every <termref def=\"implementation\">implementation</termref> is <rfc2119>required</rfc2119> to recognize are\n                <code>utf-8</code> and <code>utf-16</code>.</p><p xmlns:e=\"http://www.w3.org/1999/XSL/Spec/ElementSyntax\">The encoding of the external resource is determined as follows:</p><olist xmlns:e=\"http://www.w3.org/1999/XSL/Spec/ElementSyntax\"><item><p>external encoding information is used if available, otherwise</p></item><item><p>if the media type of the resource is <code>text/xml</code> or\n                      <code>application/xml</code> (see <bibref ref=\"rfc2376\"/>), or if it matches\n                   the conventions <code>text/*+xml</code> or <code>application/*+xml</code> (see\n                      <bibref ref=\"rfc3023\"/> and/or its successors), then the encoding is recognized\n                   as specified in <bibref ref=\"REC-xml\"/>, otherwise</p></item><item><p>the value of the <code>$encoding</code> argument is used if present, otherwise</p></item><item><p>the processor <rfc2119>may</rfc2119> use <termref def=\"implementation-defined\">implementation-defined</termref> heuristics to determine the likely encoding,\n                   otherwise</p></item><item><p>UTF-8 is assumed.</p></item></olist><p xmlns:e=\"http://www.w3.org/1999/XSL/Spec/ElementSyntax\">The result of the function is a string containing the\n             <phrase diff=\"chg\" at=\"L\">string representation</phrase> of the resource retrieved\n             using the URI.</p><p xmlns:e=\"http://www.w3.org/1999/XSL/Spec/ElementSyntax\">A <phrase diff=\"add\" at=\"L\">dynamic</phrase> error is raised <errorref class=\"UT\" code=\"1170\"/> if <code>$href</code>\n             contains a fragment identifier, or if it cannot be used to retrieve the\n             <phrase diff=\"chg\" at=\"L\">string representation</phrase> of a resource.</p><p xmlns:e=\"http://www.w3.org/1999/XSL/Spec/ElementSyntax\">A <phrase diff=\"add\" at=\"L\">dynamic</phrase> error is raised <errorref class=\"UT\" code=\"1190\"/> <phrase diff=\"add\" at=\"L\">if the value\n             of the <code>$encoding</code> argument is not a valid encoding name, </phrase>if the <termref def=\"dt-processor\">processor</termref> does not support the specified encoding,\n             if the <phrase diff=\"chg\" at=\"L\">string representation</phrase> of the retrieved\n             resource contains octets that cannot be decoded into Unicode <termref def=\"character\">characters</termref> using the specified encoding, or if the resulting characters\n             are not permitted XML characters.</p><p xmlns:e=\"http://www.w3.org/1999/XSL/Spec/ElementSyntax\">A <phrase diff=\"add\" at=\"L\">dynamic</phrase> error is raised <errorref class=\"UT\" code=\"1200\"/> if\n                <code>$encoding</code> is absent and the <termref def=\"dt-processor\">processor</termref> cannot infer the encoding using external information and the\n             encoding is not UTF-8.</p></div>\n", "summary" : "<p>  The  fn:unparsed-text  function reads an external resource (for example, a\n             file) and returns  a string representation of the resource .</p>", "annotation_str" : "", "annotations" : [  ], "updating" : false, "parameters" : [ { "name" : "href", "type" : "xs:string", "occurrence" : "?", "description" : "" } ], "returns" : { "type" : "xs:string?", "description" : "" }, "errors" : [  ] }, { "isDocumented" : true, "arity" : 1, "name" : "unparsed-text", "qname" : "fn:unparsed-text", "signature" : "($href as xs:string?) as xs:string? external", "description" : " <div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"><p xmlns:e=\"http://www.w3.org/1999/XSL/Spec/ElementSyntax\">The <code>fn:unparsed-text</code> function reads an external resource (for example, a\n             file) and returns <phrase diff=\"chg\" at=\"L\">a string representation of the resource</phrase>.</p><p xmlns:e=\"http://www.w3.org/1999/XSL/Spec/ElementSyntax\"><example role=\"signature\"><proto name=\"unparsed-text\" return-type=\"xs:string?\" isOp=\"no\" prefix=\"fn\" returnEmptyOk=\"no\" returnSeq=\"no\" returnVaries=\"no\" isSchema=\"no\" isDatatype=\"no\" isSpecial=\"no\"><arg name=\"href\" type=\"xs:string?\"/></proto></example><example role=\"signature\"><proto name=\"unparsed-text\" return-type=\"xs:string?\" isOp=\"no\" prefix=\"fn\" returnEmptyOk=\"no\" returnSeq=\"no\" returnVaries=\"no\" isSchema=\"no\" isDatatype=\"no\" isSpecial=\"no\"><arg name=\"href\" type=\"xs:string?\"/><arg name=\"encoding\" type=\"xs:string\"/></proto></example></p><p xmlns:e=\"http://www.w3.org/1999/XSL/Spec/ElementSyntax\">This function is <termref def=\"dt-deterministic\">deterministic</termref>, <termref def=\"dt-context-dependent\">context-dependent</termref>,  and <termref def=\"dt-focus-independent\">focus-independent</termref>.  It depends on\n \t\tstatic base uri.\n \t</p><p xmlns:e=\"http://www.w3.org/1999/XSL/Spec/ElementSyntax\">The <code>$href</code> argument <rfc2119>must</rfc2119> be a string in the form of a URI\n             reference, which <rfc2119>must</rfc2119> contain no fragment identifier, and\n                <rfc2119>must</rfc2119> identify a resource\n             <phrase diff=\"chg\" at=\"L\">for which a string representation is available</phrase>. If the URI is a\n             relative URI reference, then it is resolved relative to the\n             <phrase diff=\"chg\" at=\"L\">Static Base URI property from the static context</phrase>.</p><p xmlns:e=\"http://www.w3.org/1999/XSL/Spec/ElementSyntax\" diff=\"add\" at=\"L\">The mapping of URIs to the string representation of a resource is the mapping defined\n             in the <xtermref spec=\"XP30\" ref=\"dt-available-text-resources\">available text resources</xtermref>\n          component of the dynamic context.</p><p xmlns:e=\"http://www.w3.org/1999/XSL/Spec/ElementSyntax\">If the value of the <code>$href</code> argument is an empty sequence, the function\n             returns an empty sequence.</p><p xmlns:e=\"http://www.w3.org/1999/XSL/Spec/ElementSyntax\">The <code>$encoding</code> argument, if present, is the name of an encoding. The values\n             for this attribute follow the same rules as for the <code>encoding</code> attribute in\n             an XML declaration. The only values which every <termref def=\"implementation\">implementation</termref> is <rfc2119>required</rfc2119> to recognize are\n                <code>utf-8</code> and <code>utf-16</code>.</p><p xmlns:e=\"http://www.w3.org/1999/XSL/Spec/ElementSyntax\">The encoding of the external resource is determined as follows:</p><olist xmlns:e=\"http://www.w3.org/1999/XSL/Spec/ElementSyntax\"><item><p>external encoding information is used if available, otherwise</p></item><item><p>if the media type of the resource is <code>text/xml</code> or\n                      <code>application/xml</code> (see <bibref ref=\"rfc2376\"/>), or if it matches\n                   the conventions <code>text/*+xml</code> or <code>application/*+xml</code> (see\n                      <bibref ref=\"rfc3023\"/> and/or its successors), then the encoding is recognized\n                   as specified in <bibref ref=\"REC-xml\"/>, otherwise</p></item><item><p>the value of the <code>$encoding</code> argument is used if present, otherwise</p></item><item><p>the processor <rfc2119>may</rfc2119> use <termref def=\"implementation-defined\">implementation-defined</termref> heuristics to determine the likely encoding,\n                   otherwise</p></item><item><p>UTF-8 is assumed.</p></item></olist><p xmlns:e=\"http://www.w3.org/1999/XSL/Spec/ElementSyntax\">The result of the function is a string containing the\n             <phrase diff=\"chg\" at=\"L\">string representation</phrase> of the resource retrieved\n             using the URI.</p><p xmlns:e=\"http://www.w3.org/1999/XSL/Spec/ElementSyntax\">A <phrase diff=\"add\" at=\"L\">dynamic</phrase> error is raised <errorref class=\"UT\" code=\"1170\"/> if <code>$href</code>\n             contains a fragment identifier, or if it cannot be used to retrieve the\n             <phrase diff=\"chg\" at=\"L\">string representation</phrase> of a resource.</p><p xmlns:e=\"http://www.w3.org/1999/XSL/Spec/ElementSyntax\">A <phrase diff=\"add\" at=\"L\">dynamic</phrase> error is raised <errorref class=\"UT\" code=\"1190\"/> <phrase diff=\"add\" at=\"L\">if the value\n             of the <code>$encoding</code> argument is not a valid encoding name, </phrase>if the <termref def=\"dt-processor\">processor</termref> does not support the specified encoding,\n             if the <phrase diff=\"chg\" at=\"L\">string representation</phrase> of the retrieved\n             resource contains octets that cannot be decoded into Unicode <termref def=\"character\">characters</termref> using the specified encoding, or if the resulting characters\n             are not permitted XML characters.</p><p xmlns:e=\"http://www.w3.org/1999/XSL/Spec/ElementSyntax\">A <phrase diff=\"add\" at=\"L\">dynamic</phrase> error is raised <errorref class=\"UT\" code=\"1200\"/> if\n                <code>$encoding</code> is absent and the <termref def=\"dt-processor\">processor</termref> cannot infer the encoding using external information and the\n             encoding is not UTF-8.</p></div>\n", "summary" : "<p>  The  fn:unparsed-text  function reads an external resource (for example, a\n             file) and returns  a string representation of the resource .</p>", "annotation_str" : "", "annotations" : [  ], "updating" : false, "parameters" : [ { "name" : "href", "type" : "xs:string", "occurrence" : "?", "description" : "" } ], "returns" : { "type" : "xs:string?", "description" : "" }, "errors" : [  ] }, { "isDocumented" : true, "arity" : 2, "name" : "unparsed-text", "qname" : "fn:unparsed-text", "signature" : "($href as xs:string?, $encoding as xs:string) as xs:string? external", "description" : " <div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"><p xmlns:e=\"http://www.w3.org/1999/XSL/Spec/ElementSyntax\">The <code>fn:unparsed-text</code> function reads an external resource (for example, a\n             file) and returns <phrase diff=\"chg\" at=\"L\">a string representation of the resource</phrase>.</p><p xmlns:e=\"http://www.w3.org/1999/XSL/Spec/ElementSyntax\"><example role=\"signature\"><proto name=\"unparsed-text\" return-type=\"xs:string?\" isOp=\"no\" prefix=\"fn\" returnEmptyOk=\"no\" returnSeq=\"no\" returnVaries=\"no\" isSchema=\"no\" isDatatype=\"no\" isSpecial=\"no\"><arg name=\"href\" type=\"xs:string?\"/></proto></example><example role=\"signature\"><proto name=\"unparsed-text\" return-type=\"xs:string?\" isOp=\"no\" prefix=\"fn\" returnEmptyOk=\"no\" returnSeq=\"no\" returnVaries=\"no\" isSchema=\"no\" isDatatype=\"no\" isSpecial=\"no\"><arg name=\"href\" type=\"xs:string?\"/><arg name=\"encoding\" type=\"xs:string\"/></proto></example></p><p xmlns:e=\"http://www.w3.org/1999/XSL/Spec/ElementSyntax\">This function is <termref def=\"dt-deterministic\">deterministic</termref>, <termref def=\"dt-context-dependent\">context-dependent</termref>,  and <termref def=\"dt-focus-independent\">focus-independent</termref>.  It depends on\n \t\tstatic base uri.\n \t</p><p xmlns:e=\"http://www.w3.org/1999/XSL/Spec/ElementSyntax\">The <code>$href</code> argument <rfc2119>must</rfc2119> be a string in the form of a URI\n             reference, which <rfc2119>must</rfc2119> contain no fragment identifier, and\n                <rfc2119>must</rfc2119> identify a resource\n             <phrase diff=\"chg\" at=\"L\">for which a string representation is available</phrase>. If the URI is a\n             relative URI reference, then it is resolved relative to the\n             <phrase diff=\"chg\" at=\"L\">Static Base URI property from the static context</phrase>.</p><p xmlns:e=\"http://www.w3.org/1999/XSL/Spec/ElementSyntax\" diff=\"add\" at=\"L\">The mapping of URIs to the string representation of a resource is the mapping defined\n             in the <xtermref spec=\"XP30\" ref=\"dt-available-text-resources\">available text resources</xtermref>\n          component of the dynamic context.</p><p xmlns:e=\"http://www.w3.org/1999/XSL/Spec/ElementSyntax\">If the value of the <code>$href</code> argument is an empty sequence, the function\n             returns an empty sequence.</p><p xmlns:e=\"http://www.w3.org/1999/XSL/Spec/ElementSyntax\">The <code>$encoding</code> argument, if present, is the name of an encoding. The values\n             for this attribute follow the same rules as for the <code>encoding</code> attribute in\n             an XML declaration. The only values which every <termref def=\"implementation\">implementation</termref> is <rfc2119>required</rfc2119> to recognize are\n                <code>utf-8</code> and <code>utf-16</code>.</p><p xmlns:e=\"http://www.w3.org/1999/XSL/Spec/ElementSyntax\">The encoding of the external resource is determined as follows:</p><olist xmlns:e=\"http://www.w3.org/1999/XSL/Spec/ElementSyntax\"><item><p>external encoding information is used if available, otherwise</p></item><item><p>if the media type of the resource is <code>text/xml</code> or\n                      <code>application/xml</code> (see <bibref ref=\"rfc2376\"/>), or if it matches\n                   the conventions <code>text/*+xml</code> or <code>application/*+xml</code> (see\n                      <bibref ref=\"rfc3023\"/> and/or its successors), then the encoding is recognized\n                   as specified in <bibref ref=\"REC-xml\"/>, otherwise</p></item><item><p>the value of the <code>$encoding</code> argument is used if present, otherwise</p></item><item><p>the processor <rfc2119>may</rfc2119> use <termref def=\"implementation-defined\">implementation-defined</termref> heuristics to determine the likely encoding,\n                   otherwise</p></item><item><p>UTF-8 is assumed.</p></item></olist><p xmlns:e=\"http://www.w3.org/1999/XSL/Spec/ElementSyntax\">The result of the function is a string containing the\n             <phrase diff=\"chg\" at=\"L\">string representation</phrase> of the resource retrieved\n             using the URI.</p><p xmlns:e=\"http://www.w3.org/1999/XSL/Spec/ElementSyntax\">A <phrase diff=\"add\" at=\"L\">dynamic</phrase> error is raised <errorref class=\"UT\" code=\"1170\"/> if <code>$href</code>\n             contains a fragment identifier, or if it cannot be used to retrieve the\n             <phrase diff=\"chg\" at=\"L\">string representation</phrase> of a resource.</p><p xmlns:e=\"http://www.w3.org/1999/XSL/Spec/ElementSyntax\">A <phrase diff=\"add\" at=\"L\">dynamic</phrase> error is raised <errorref class=\"UT\" code=\"1190\"/> <phrase diff=\"add\" at=\"L\">if the value\n             of the <code>$encoding</code> argument is not a valid encoding name, </phrase>if the <termref def=\"dt-processor\">processor</termref> does not support the specified encoding,\n             if the <phrase diff=\"chg\" at=\"L\">string representation</phrase> of the retrieved\n             resource contains octets that cannot be decoded into Unicode <termref def=\"character\">characters</termref> using the specified encoding, or if the resulting characters\n             are not permitted XML characters.</p><p xmlns:e=\"http://www.w3.org/1999/XSL/Spec/ElementSyntax\">A <phrase diff=\"add\" at=\"L\">dynamic</phrase> error is raised <errorref class=\"UT\" code=\"1200\"/> if\n                <code>$encoding</code> is absent and the <termref def=\"dt-processor\">processor</termref> cannot infer the encoding using external information and the\n             encoding is not UTF-8.</p></div>\n", "summary" : "<p>  The  fn:unparsed-text  function reads an external resource (for example, a\n             file) and returns  a string representation of the resource .</p>", "annotation_str" : "", "annotations" : [  ], "updating" : false, "parameters" : [ { "name" : "href", "type" : "xs:string", "occurrence" : "?", "description" : "" }, { "name" : "encoding", "type" : "xs:string", "occurrence" : null, "description" : "" } ], "returns" : { "type" : "xs:string?", "description" : "" }, "errors" : [  ] }, { "isDocumented" : true, "arity" : 2, "name" : "unparsed-text", "qname" : "fn:unparsed-text", "signature" : "($href as xs:string?, $encoding as xs:string) as xs:string? external", "description" : " <div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"><p xmlns:e=\"http://www.w3.org/1999/XSL/Spec/ElementSyntax\">The <code>fn:unparsed-text</code> function reads an external resource (for example, a\n             file) and returns <phrase diff=\"chg\" at=\"L\">a string representation of the resource</phrase>.</p><p xmlns:e=\"http://www.w3.org/1999/XSL/Spec/ElementSyntax\"><example role=\"signature\"><proto name=\"unparsed-text\" return-type=\"xs:string?\" isOp=\"no\" prefix=\"fn\" returnEmptyOk=\"no\" returnSeq=\"no\" returnVaries=\"no\" isSchema=\"no\" isDatatype=\"no\" isSpecial=\"no\"><arg name=\"href\" type=\"xs:string?\"/></proto></example><example role=\"signature\"><proto name=\"unparsed-text\" return-type=\"xs:string?\" isOp=\"no\" prefix=\"fn\" returnEmptyOk=\"no\" returnSeq=\"no\" returnVaries=\"no\" isSchema=\"no\" isDatatype=\"no\" isSpecial=\"no\"><arg name=\"href\" type=\"xs:string?\"/><arg name=\"encoding\" type=\"xs:string\"/></proto></example></p><p xmlns:e=\"http://www.w3.org/1999/XSL/Spec/ElementSyntax\">This function is <termref def=\"dt-deterministic\">deterministic</termref>, <termref def=\"dt-context-dependent\">context-dependent</termref>,  and <termref def=\"dt-focus-independent\">focus-independent</termref>.  It depends on\n \t\tstatic base uri.\n \t</p><p xmlns:e=\"http://www.w3.org/1999/XSL/Spec/ElementSyntax\">The <code>$href</code> argument <rfc2119>must</rfc2119> be a string in the form of a URI\n             reference, which <rfc2119>must</rfc2119> contain no fragment identifier, and\n                <rfc2119>must</rfc2119> identify a resource\n             <phrase diff=\"chg\" at=\"L\">for which a string representation is available</phrase>. If the URI is a\n             relative URI reference, then it is resolved relative to the\n             <phrase diff=\"chg\" at=\"L\">Static Base URI property from the static context</phrase>.</p><p xmlns:e=\"http://www.w3.org/1999/XSL/Spec/ElementSyntax\" diff=\"add\" at=\"L\">The mapping of URIs to the string representation of a resource is the mapping defined\n             in the <xtermref spec=\"XP30\" ref=\"dt-available-text-resources\">available text resources</xtermref>\n          component of the dynamic context.</p><p xmlns:e=\"http://www.w3.org/1999/XSL/Spec/ElementSyntax\">If the value of the <code>$href</code> argument is an empty sequence, the function\n             returns an empty sequence.</p><p xmlns:e=\"http://www.w3.org/1999/XSL/Spec/ElementSyntax\">The <code>$encoding</code> argument, if present, is the name of an encoding. The values\n             for this attribute follow the same rules as for the <code>encoding</code> attribute in\n             an XML declaration. The only values which every <termref def=\"implementation\">implementation</termref> is <rfc2119>required</rfc2119> to recognize are\n                <code>utf-8</code> and <code>utf-16</code>.</p><p xmlns:e=\"http://www.w3.org/1999/XSL/Spec/ElementSyntax\">The encoding of the external resource is determined as follows:</p><olist xmlns:e=\"http://www.w3.org/1999/XSL/Spec/ElementSyntax\"><item><p>external encoding information is used if available, otherwise</p></item><item><p>if the media type of the resource is <code>text/xml</code> or\n                      <code>application/xml</code> (see <bibref ref=\"rfc2376\"/>), or if it matches\n                   the conventions <code>text/*+xml</code> or <code>application/*+xml</code> (see\n                      <bibref ref=\"rfc3023\"/> and/or its successors), then the encoding is recognized\n                   as specified in <bibref ref=\"REC-xml\"/>, otherwise</p></item><item><p>the value of the <code>$encoding</code> argument is used if present, otherwise</p></item><item><p>the processor <rfc2119>may</rfc2119> use <termref def=\"implementation-defined\">implementation-defined</termref> heuristics to determine the likely encoding,\n                   otherwise</p></item><item><p>UTF-8 is assumed.</p></item></olist><p xmlns:e=\"http://www.w3.org/1999/XSL/Spec/ElementSyntax\">The result of the function is a string containing the\n             <phrase diff=\"chg\" at=\"L\">string representation</phrase> of the resource retrieved\n             using the URI.</p><p xmlns:e=\"http://www.w3.org/1999/XSL/Spec/ElementSyntax\">A <phrase diff=\"add\" at=\"L\">dynamic</phrase> error is raised <errorref class=\"UT\" code=\"1170\"/> if <code>$href</code>\n             contains a fragment identifier, or if it cannot be used to retrieve the\n             <phrase diff=\"chg\" at=\"L\">string representation</phrase> of a resource.</p><p xmlns:e=\"http://www.w3.org/1999/XSL/Spec/ElementSyntax\">A <phrase diff=\"add\" at=\"L\">dynamic</phrase> error is raised <errorref class=\"UT\" code=\"1190\"/> <phrase diff=\"add\" at=\"L\">if the value\n             of the <code>$encoding</code> argument is not a valid encoding name, </phrase>if the <termref def=\"dt-processor\">processor</termref> does not support the specified encoding,\n             if the <phrase diff=\"chg\" at=\"L\">string representation</phrase> of the retrieved\n             resource contains octets that cannot be decoded into Unicode <termref def=\"character\">characters</termref> using the specified encoding, or if the resulting characters\n             are not permitted XML characters.</p><p xmlns:e=\"http://www.w3.org/1999/XSL/Spec/ElementSyntax\">A <phrase diff=\"add\" at=\"L\">dynamic</phrase> error is raised <errorref class=\"UT\" code=\"1200\"/> if\n                <code>$encoding</code> is absent and the <termref def=\"dt-processor\">processor</termref> cannot infer the encoding using external information and the\n             encoding is not UTF-8.</p></div>\n", "summary" : "<p>  The  fn:unparsed-text  function reads an external resource (for example, a\n             file) and returns  a string representation of the resource .</p>", "annotation_str" : "", "annotations" : [  ], "updating" : false, "parameters" : [ { "name" : "href", "type" : "xs:string", "occurrence" : "?", "description" : "" }, { "name" : "encoding", "type" : "xs:string", "occurrence" : null, "description" : "" } ], "returns" : { "type" : "xs:string?", "description" : "" }, "errors" : [  ] }, { "isDocumented" : true, "arity" : 1, "name" : "upper-case", "qname" : "fn:upper-case", "signature" : "($arg as xs:string?) as xs:string external", "description" : " <div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"><p xmlns:e=\"http://www.w3.org/1999/XSL/Spec/ElementSyntax\">Converts a string to upper case.</p><p xmlns:e=\"http://www.w3.org/1999/XSL/Spec/ElementSyntax\"><example role=\"signature\"><proto name=\"upper-case\" return-type=\"xs:string\" isOp=\"no\" prefix=\"fn\" returnEmptyOk=\"no\" returnSeq=\"no\" returnVaries=\"no\" isSchema=\"no\" isDatatype=\"no\" isSpecial=\"no\"><arg name=\"arg\" type=\"xs:string?\"/></proto></example></p><p xmlns:e=\"http://www.w3.org/1999/XSL/Spec/ElementSyntax\">This function is <termref def=\"dt-deterministic\">deterministic</termref>, <termref def=\"dt-context-independent\">context-independent</termref>,  and <termref def=\"dt-focus-independent\">focus-independent</termref>. </p><p xmlns:e=\"http://www.w3.org/1999/XSL/Spec/ElementSyntax\">If the value of <code>$arg</code> is the empty sequence, the zero-length string is\n             returned.</p><p xmlns:e=\"http://www.w3.org/1999/XSL/Spec/ElementSyntax\">Otherwise, the function returns the value of <code>$arg</code> after translating every\n                <termref def=\"character\">character</termref> to its upper-case correspondent as\n             defined in the appropriate case mappings section in the Unicode standard <bibref ref=\"Unicode\"/>. For versions of Unicode beginning with the 2.1.8 update, only\n             locale-insensitive case mappings should be applied. Beginning with version 3.2.0 (and\n             likely future versions) of Unicode, precise mappings are described in default case\n             operations, which are full case mappings in the absence of tailoring for particular\n             languages and environments. Every lower-case character that does not have an upper-case\n             correspondent, as well as every upper-case character, is included in the returned value\n             in its original form. </p><p xmlns:e=\"http://www.w3.org/1999/XSL/Spec/ElementSyntax\">Case mappings may change the length of a string. In general, the\n                <code>fn:upper-case</code> and <code>fn:lower-case</code> functions are not inverses\n             of each other: <code>fn:lower-case(fn:upper-case($arg))</code> is not guaranteed to\n             return <code>$arg</code>, nor is <code>fn:upper-case(fn:lower-case($arg))</code>. The\n             Latin small letter dotless i (as used in Turkish) is perhaps the most prominent\n             lower-case letter which will not round-trip. The Latin capital letter i with dot above\n             is the most prominent upper-case letter which will not round trip; there are others,\n             such as Latin capital letter Sharp S (#1E9E) which is introduced in Unicode 5.1.</p><p xmlns:e=\"http://www.w3.org/1999/XSL/Spec/ElementSyntax\"> These functions may not always be linguistically appropriate (e.g. Turkish i without\n             dot) or appropriate for the application (e.g. titlecase). In cases such as Turkish, a\n             simple translation should be used first.</p><p xmlns:e=\"http://www.w3.org/1999/XSL/Spec/ElementSyntax\"> Because the function is not sensitive to locale, results will not always match user\n             expectations. In Quebec, for example, the standard uppercase equivalent of \"è\" is \"È\",\n             while in metropolitan France it is more commonly \"E\"; only one of these is supported by\n             the functions as defined.</p><p xmlns:e=\"http://www.w3.org/1999/XSL/Spec/ElementSyntax\"> Many characters of class Ll lack uppercase equivalents in the Unicode case mapping\n             tables; many characters of class Lu lack lowercase equivalents.</p></div>\n", "summary" : "<p>  Converts a string to upper case.</p>", "annotation_str" : "", "annotations" : [  ], "updating" : false, "parameters" : [ { "name" : "arg", "type" : "xs:string", "occurrence" : "?", "description" : "" } ], "returns" : { "type" : "xs:string", "description" : "" }, "errors" : [  ] }, { "isDocumented" : true, "arity" : 0, "name" : "uri-collection", "qname" : "fn:uri-collection", "signature" : "() as xs:anyURI* external", "description" : " <div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"><p xmlns:e=\"http://www.w3.org/1999/XSL/Spec/ElementSyntax\">Returns a sequence of <code>xs:anyURI</code> values representing the URIs in a resource collection.</p><p xmlns:e=\"http://www.w3.org/1999/XSL/Spec/ElementSyntax\"><example role=\"signature\"><proto name=\"uri-collection\" return-type=\"xs:anyURI*\" isOp=\"no\" prefix=\"fn\" returnEmptyOk=\"no\" returnSeq=\"no\" returnVaries=\"no\" isSchema=\"no\" isDatatype=\"no\" isSpecial=\"no\"/></example><example role=\"signature\"><proto name=\"uri-collection\" return-type=\"xs:anyURI*\" isOp=\"no\" prefix=\"fn\" returnEmptyOk=\"no\" returnSeq=\"no\" returnVaries=\"no\" isSchema=\"no\" isDatatype=\"no\" isSpecial=\"no\"><arg name=\"arg\" type=\"xs:string?\"/></proto></example></p><p xmlns:e=\"http://www.w3.org/1999/XSL/Spec/ElementSyntax\">This function is <termref def=\"dt-deterministic\">deterministic</termref>, <termref def=\"dt-context-dependent\">context-dependent</termref>,  and <termref def=\"dt-focus-independent\">focus-independent</termref>.  It depends on\n \t\tavailable resource collections, and static base uri.\n \t</p><p xmlns:e=\"http://www.w3.org/1999/XSL/Spec/ElementSyntax\">The zero-argument form of the function returns the URIs in the <term>Default resource collection</term>\n             described in <xspecref spec=\"XP30\" ref=\"id-xp-evaluation-context-components\"/>.</p><p xmlns:e=\"http://www.w3.org/1999/XSL/Spec/ElementSyntax\">If the value of <code>$arg</code> is a relative <code>xs:anyURI</code>, it is resolved\n             against the value of the base-URI property from the static context. </p><p xmlns:e=\"http://www.w3.org/1999/XSL/Spec/ElementSyntax\">If <code>$arg</code> is the empty sequence, the function behaves as if it had been\n             called without an argument. See above.</p><p xmlns:e=\"http://www.w3.org/1999/XSL/Spec/ElementSyntax\">The single-argument form of the function returns the sequence of URIs corresponding to the\n             supplied URI in the <term>Available resource collections</term> described in\n             <xspecref spec=\"XP30\" ref=\"id-xp-evaluation-context-components\"/>.</p><p xmlns:e=\"http://www.w3.org/1999/XSL/Spec/ElementSyntax\">A <phrase diff=\"add\" at=\"L\">dynamic</phrase> error is raised <errorref class=\"DC\" code=\"0002\"/> if no URI is supplied (that is, if the\n             the function is called with no arguments, or with a single argument that evaluates to an empty sequence), and the\n             value of the default resource collection is <xtermref ref=\"dt-absent\" spec=\"DM30\">absent</xtermref>.</p><p xmlns:e=\"http://www.w3.org/1999/XSL/Spec/ElementSyntax\" diff=\"chg\" at=\"J\">A <phrase diff=\"add\" at=\"L\">dynamic</phrase> error is raised <errorref class=\"DC\" code=\"0002\"/>\n             if <term>available resource collections</term> provides no mapping for the absolutized URI.</p><p xmlns:e=\"http://www.w3.org/1999/XSL/Spec/ElementSyntax\">A <phrase diff=\"add\" at=\"L\">dynamic</phrase> error is raised <errorref class=\"DC\" code=\"0004\"/> if <code>$arg</code> is not a\n             valid <code>xs:anyURI</code>.</p></div>\n", "summary" : "<p>  Returns a sequence of  xs:anyURI  values representing the URIs in a resource collection.</p>", "annotation_str" : "", "annotations" : [  ], "updating" : false, "parameters" : [  ], "returns" : { "type" : "xs:anyURI*", "description" : "" }, "errors" : [  ] }, { "isDocumented" : true, "arity" : 0, "name" : "uri-collection", "qname" : "fn:uri-collection", "signature" : "() as xs:anyURI* external", "description" : " <div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"><p xmlns:e=\"http://www.w3.org/1999/XSL/Spec/ElementSyntax\">Returns a sequence of <code>xs:anyURI</code> values representing the URIs in a resource collection.</p><p xmlns:e=\"http://www.w3.org/1999/XSL/Spec/ElementSyntax\"><example role=\"signature\"><proto name=\"uri-collection\" return-type=\"xs:anyURI*\" isOp=\"no\" prefix=\"fn\" returnEmptyOk=\"no\" returnSeq=\"no\" returnVaries=\"no\" isSchema=\"no\" isDatatype=\"no\" isSpecial=\"no\"/></example><example role=\"signature\"><proto name=\"uri-collection\" return-type=\"xs:anyURI*\" isOp=\"no\" prefix=\"fn\" returnEmptyOk=\"no\" returnSeq=\"no\" returnVaries=\"no\" isSchema=\"no\" isDatatype=\"no\" isSpecial=\"no\"><arg name=\"arg\" type=\"xs:string?\"/></proto></example></p><p xmlns:e=\"http://www.w3.org/1999/XSL/Spec/ElementSyntax\">This function is <termref def=\"dt-deterministic\">deterministic</termref>, <termref def=\"dt-context-dependent\">context-dependent</termref>,  and <termref def=\"dt-focus-independent\">focus-independent</termref>.  It depends on\n \t\tavailable resource collections, and static base uri.\n \t</p><p xmlns:e=\"http://www.w3.org/1999/XSL/Spec/ElementSyntax\">The zero-argument form of the function returns the URIs in the <term>Default resource collection</term>\n             described in <xspecref spec=\"XP30\" ref=\"id-xp-evaluation-context-components\"/>.</p><p xmlns:e=\"http://www.w3.org/1999/XSL/Spec/ElementSyntax\">If the value of <code>$arg</code> is a relative <code>xs:anyURI</code>, it is resolved\n             against the value of the base-URI property from the static context. </p><p xmlns:e=\"http://www.w3.org/1999/XSL/Spec/ElementSyntax\">If <code>$arg</code> is the empty sequence, the function behaves as if it had been\n             called without an argument. See above.</p><p xmlns:e=\"http://www.w3.org/1999/XSL/Spec/ElementSyntax\">The single-argument form of the function returns the sequence of URIs corresponding to the\n             supplied URI in the <term>Available resource collections</term> described in\n             <xspecref spec=\"XP30\" ref=\"id-xp-evaluation-context-components\"/>.</p><p xmlns:e=\"http://www.w3.org/1999/XSL/Spec/ElementSyntax\">A <phrase diff=\"add\" at=\"L\">dynamic</phrase> error is raised <errorref class=\"DC\" code=\"0002\"/> if no URI is supplied (that is, if the\n             the function is called with no arguments, or with a single argument that evaluates to an empty sequence), and the\n             value of the default resource collection is <xtermref ref=\"dt-absent\" spec=\"DM30\">absent</xtermref>.</p><p xmlns:e=\"http://www.w3.org/1999/XSL/Spec/ElementSyntax\" diff=\"chg\" at=\"J\">A <phrase diff=\"add\" at=\"L\">dynamic</phrase> error is raised <errorref class=\"DC\" code=\"0002\"/>\n             if <term>available resource collections</term> provides no mapping for the absolutized URI.</p><p xmlns:e=\"http://www.w3.org/1999/XSL/Spec/ElementSyntax\">A <phrase diff=\"add\" at=\"L\">dynamic</phrase> error is raised <errorref class=\"DC\" code=\"0004\"/> if <code>$arg</code> is not a\n             valid <code>xs:anyURI</code>.</p></div>\n", "summary" : "<p>  Returns a sequence of  xs:anyURI  values representing the URIs in a resource collection.</p>", "annotation_str" : "", "annotations" : [  ], "updating" : false, "parameters" : [  ], "returns" : { "type" : "xs:anyURI*", "description" : "" }, "errors" : [  ] }, { "isDocumented" : true, "arity" : 1, "name" : "uri-collection", "qname" : "fn:uri-collection", "signature" : "($arg as xs:string?) as xs:anyURI* external", "description" : " <div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"><p xmlns:e=\"http://www.w3.org/1999/XSL/Spec/ElementSyntax\">Returns a sequence of <code>xs:anyURI</code> values representing the URIs in a resource collection.</p><p xmlns:e=\"http://www.w3.org/1999/XSL/Spec/ElementSyntax\"><example role=\"signature\"><proto name=\"uri-collection\" return-type=\"xs:anyURI*\" isOp=\"no\" prefix=\"fn\" returnEmptyOk=\"no\" returnSeq=\"no\" returnVaries=\"no\" isSchema=\"no\" isDatatype=\"no\" isSpecial=\"no\"/></example><example role=\"signature\"><proto name=\"uri-collection\" return-type=\"xs:anyURI*\" isOp=\"no\" prefix=\"fn\" returnEmptyOk=\"no\" returnSeq=\"no\" returnVaries=\"no\" isSchema=\"no\" isDatatype=\"no\" isSpecial=\"no\"><arg name=\"arg\" type=\"xs:string?\"/></proto></example></p><p xmlns:e=\"http://www.w3.org/1999/XSL/Spec/ElementSyntax\">This function is <termref def=\"dt-deterministic\">deterministic</termref>, <termref def=\"dt-context-dependent\">context-dependent</termref>,  and <termref def=\"dt-focus-independent\">focus-independent</termref>.  It depends on\n \t\tavailable resource collections, and static base uri.\n \t</p><p xmlns:e=\"http://www.w3.org/1999/XSL/Spec/ElementSyntax\">The zero-argument form of the function returns the URIs in the <term>Default resource collection</term>\n             described in <xspecref spec=\"XP30\" ref=\"id-xp-evaluation-context-components\"/>.</p><p xmlns:e=\"http://www.w3.org/1999/XSL/Spec/ElementSyntax\">If the value of <code>$arg</code> is a relative <code>xs:anyURI</code>, it is resolved\n             against the value of the base-URI property from the static context. </p><p xmlns:e=\"http://www.w3.org/1999/XSL/Spec/ElementSyntax\">If <code>$arg</code> is the empty sequence, the function behaves as if it had been\n             called without an argument. See above.</p><p xmlns:e=\"http://www.w3.org/1999/XSL/Spec/ElementSyntax\">The single-argument form of the function returns the sequence of URIs corresponding to the\n             supplied URI in the <term>Available resource collections</term> described in\n             <xspecref spec=\"XP30\" ref=\"id-xp-evaluation-context-components\"/>.</p><p xmlns:e=\"http://www.w3.org/1999/XSL/Spec/ElementSyntax\">A <phrase diff=\"add\" at=\"L\">dynamic</phrase> error is raised <errorref class=\"DC\" code=\"0002\"/> if no URI is supplied (that is, if the\n             the function is called with no arguments, or with a single argument that evaluates to an empty sequence), and the\n             value of the default resource collection is <xtermref ref=\"dt-absent\" spec=\"DM30\">absent</xtermref>.</p><p xmlns:e=\"http://www.w3.org/1999/XSL/Spec/ElementSyntax\" diff=\"chg\" at=\"J\">A <phrase diff=\"add\" at=\"L\">dynamic</phrase> error is raised <errorref class=\"DC\" code=\"0002\"/>\n             if <term>available resource collections</term> provides no mapping for the absolutized URI.</p><p xmlns:e=\"http://www.w3.org/1999/XSL/Spec/ElementSyntax\">A <phrase diff=\"add\" at=\"L\">dynamic</phrase> error is raised <errorref class=\"DC\" code=\"0004\"/> if <code>$arg</code> is not a\n             valid <code>xs:anyURI</code>.</p></div>\n", "summary" : "<p>  Returns a sequence of  xs:anyURI  values representing the URIs in a resource collection.</p>", "annotation_str" : "", "annotations" : [  ], "updating" : false, "parameters" : [ { "name" : "arg", "type" : "xs:string", "occurrence" : "?", "description" : "" } ], "returns" : { "type" : "xs:anyURI*", "description" : "" }, "errors" : [  ] }, { "isDocumented" : true, "arity" : 1, "name" : "uri-collection", "qname" : "fn:uri-collection", "signature" : "($arg as xs:string?) as xs:anyURI* external", "description" : " <div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"><p xmlns:e=\"http://www.w3.org/1999/XSL/Spec/ElementSyntax\">Returns a sequence of <code>xs:anyURI</code> values representing the URIs in a resource collection.</p><p xmlns:e=\"http://www.w3.org/1999/XSL/Spec/ElementSyntax\"><example role=\"signature\"><proto name=\"uri-collection\" return-type=\"xs:anyURI*\" isOp=\"no\" prefix=\"fn\" returnEmptyOk=\"no\" returnSeq=\"no\" returnVaries=\"no\" isSchema=\"no\" isDatatype=\"no\" isSpecial=\"no\"/></example><example role=\"signature\"><proto name=\"uri-collection\" return-type=\"xs:anyURI*\" isOp=\"no\" prefix=\"fn\" returnEmptyOk=\"no\" returnSeq=\"no\" returnVaries=\"no\" isSchema=\"no\" isDatatype=\"no\" isSpecial=\"no\"><arg name=\"arg\" type=\"xs:string?\"/></proto></example></p><p xmlns:e=\"http://www.w3.org/1999/XSL/Spec/ElementSyntax\">This function is <termref def=\"dt-deterministic\">deterministic</termref>, <termref def=\"dt-context-dependent\">context-dependent</termref>,  and <termref def=\"dt-focus-independent\">focus-independent</termref>.  It depends on\n \t\tavailable resource collections, and static base uri.\n \t</p><p xmlns:e=\"http://www.w3.org/1999/XSL/Spec/ElementSyntax\">The zero-argument form of the function returns the URIs in the <term>Default resource collection</term>\n             described in <xspecref spec=\"XP30\" ref=\"id-xp-evaluation-context-components\"/>.</p><p xmlns:e=\"http://www.w3.org/1999/XSL/Spec/ElementSyntax\">If the value of <code>$arg</code> is a relative <code>xs:anyURI</code>, it is resolved\n             against the value of the base-URI property from the static context. </p><p xmlns:e=\"http://www.w3.org/1999/XSL/Spec/ElementSyntax\">If <code>$arg</code> is the empty sequence, the function behaves as if it had been\n             called without an argument. See above.</p><p xmlns:e=\"http://www.w3.org/1999/XSL/Spec/ElementSyntax\">The single-argument form of the function returns the sequence of URIs corresponding to the\n             supplied URI in the <term>Available resource collections</term> described in\n             <xspecref spec=\"XP30\" ref=\"id-xp-evaluation-context-components\"/>.</p><p xmlns:e=\"http://www.w3.org/1999/XSL/Spec/ElementSyntax\">A <phrase diff=\"add\" at=\"L\">dynamic</phrase> error is raised <errorref class=\"DC\" code=\"0002\"/> if no URI is supplied (that is, if the\n             the function is called with no arguments, or with a single argument that evaluates to an empty sequence), and the\n             value of the default resource collection is <xtermref ref=\"dt-absent\" spec=\"DM30\">absent</xtermref>.</p><p xmlns:e=\"http://www.w3.org/1999/XSL/Spec/ElementSyntax\" diff=\"chg\" at=\"J\">A <phrase diff=\"add\" at=\"L\">dynamic</phrase> error is raised <errorref class=\"DC\" code=\"0002\"/>\n             if <term>available resource collections</term> provides no mapping for the absolutized URI.</p><p xmlns:e=\"http://www.w3.org/1999/XSL/Spec/ElementSyntax\">A <phrase diff=\"add\" at=\"L\">dynamic</phrase> error is raised <errorref class=\"DC\" code=\"0004\"/> if <code>$arg</code> is not a\n             valid <code>xs:anyURI</code>.</p></div>\n", "summary" : "<p>  Returns a sequence of  xs:anyURI  values representing the URIs in a resource collection.</p>", "annotation_str" : "", "annotations" : [  ], "updating" : false, "parameters" : [ { "name" : "arg", "type" : "xs:string", "occurrence" : "?", "description" : "" } ], "returns" : { "type" : "xs:anyURI*", "description" : "" }, "errors" : [  ] }, { "isDocumented" : true, "arity" : 1, "name" : "year-from-date", "qname" : "fn:year-from-date", "signature" : "($arg as xs:date?) as xs:integer? external", "description" : " <div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"><p xmlns:e=\"http://www.w3.org/1999/XSL/Spec/ElementSyntax\">Returns the year component of an <code>xs:date</code>.</p><p xmlns:e=\"http://www.w3.org/1999/XSL/Spec/ElementSyntax\"><example role=\"signature\"><proto name=\"year-from-date\" return-type=\"xs:integer?\" isOp=\"no\" prefix=\"fn\" returnEmptyOk=\"no\" returnSeq=\"no\" returnVaries=\"no\" isSchema=\"no\" isDatatype=\"no\" isSpecial=\"no\"><arg name=\"arg\" type=\"xs:date?\"/></proto></example></p><p xmlns:e=\"http://www.w3.org/1999/XSL/Spec/ElementSyntax\">This function is <termref def=\"dt-deterministic\">deterministic</termref>, <termref def=\"dt-context-independent\">context-independent</termref>,  and <termref def=\"dt-focus-independent\">focus-independent</termref>. </p><p xmlns:e=\"http://www.w3.org/1999/XSL/Spec/ElementSyntax\">If <code>$arg</code> is the empty sequence, the function returns the empty sequence.</p><p xmlns:e=\"http://www.w3.org/1999/XSL/Spec/ElementSyntax\">Otherwise, the function returns an <code>xs:integer</code> representing the year in the\n             local value of <code>$arg</code>. The value may be negative. </p><p xmlns:e=\"http://www.w3.org/1999/XSL/Spec/ElementSyntax\">The expression <code>fn:year-from-date(xs:date(\"1999-05-31\"))</code> returns <code>1999</code>.</p><p xmlns:e=\"http://www.w3.org/1999/XSL/Spec/ElementSyntax\">The expression <code>fn:year-from-date(xs:date(\"2000-01-01+05:00\"))</code> returns <code>2000</code>.</p></div>\n", "summary" : "<p>  Returns the year component of an  xs:date .</p>", "annotation_str" : "", "annotations" : [  ], "updating" : false, "parameters" : [ { "name" : "arg", "type" : "xs:date", "occurrence" : "?", "description" : "" } ], "returns" : { "type" : "xs:integer?", "description" : "" }, "errors" : [  ] }, { "isDocumented" : true, "arity" : 1, "name" : "years-from-duration", "qname" : "fn:years-from-duration", "signature" : "($arg as xs:duration?) as xs:integer? external", "description" : " <div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"><p xmlns:e=\"http://www.w3.org/1999/XSL/Spec/ElementSyntax\">Returns the number of years in a duration.</p><p xmlns:e=\"http://www.w3.org/1999/XSL/Spec/ElementSyntax\"><example role=\"signature\"><proto name=\"years-from-duration\" return-type=\"xs:integer?\" isOp=\"no\" prefix=\"fn\" returnEmptyOk=\"no\" returnSeq=\"no\" returnVaries=\"no\" isSchema=\"no\" isDatatype=\"no\" isSpecial=\"no\"><arg name=\"arg\" type=\"xs:duration?\"/></proto></example></p><p xmlns:e=\"http://www.w3.org/1999/XSL/Spec/ElementSyntax\">This function is <termref def=\"dt-deterministic\">deterministic</termref>, <termref def=\"dt-context-independent\">context-independent</termref>,  and <termref def=\"dt-focus-independent\">focus-independent</termref>. </p><p xmlns:e=\"http://www.w3.org/1999/XSL/Spec/ElementSyntax\">If <code>$arg</code> is the empty sequence, the function returns the empty sequence.</p><p xmlns:e=\"http://www.w3.org/1999/XSL/Spec/ElementSyntax\">Otherwise, the function returns an <code>xs:integer</code> representing the years\n             component in the value of <code>$arg</code>. The result is obtained by casting\n                <code>$arg</code> to an <code>xs:yearMonthDuration</code> (see <specref ref=\"casting-to-durations\"/>) and then computing the years component as described in\n                <specref ref=\"canonical-yearMonthDuration\"/>.</p><p xmlns:e=\"http://www.w3.org/1999/XSL/Spec/ElementSyntax\">If <code>$arg</code> is a negative duration then the result will be negative..</p><p xmlns:e=\"http://www.w3.org/1999/XSL/Spec/ElementSyntax\">If <code>$arg</code> is an <code>xs:dayTimeDuration</code> the function returns 0.</p><p xmlns:e=\"http://www.w3.org/1999/XSL/Spec/ElementSyntax\">The expression <code>fn:years-from-duration(xs:yearMonthDuration(\"P20Y15M\"))</code> returns <code>21</code>.</p><p xmlns:e=\"http://www.w3.org/1999/XSL/Spec/ElementSyntax\">The expression <code>fn:years-from-duration(xs:yearMonthDuration(\"-P15M\"))</code> returns <code>-1</code>.</p><p xmlns:e=\"http://www.w3.org/1999/XSL/Spec/ElementSyntax\">The expression <code>fn:years-from-duration(xs:dayTimeDuration(\"-P2DT15H\"))</code> returns <code>0</code>.</p></div>\n", "summary" : "<p>  Returns the number of years in a duration.</p>", "annotation_str" : "", "annotations" : [  ], "updating" : false, "parameters" : [ { "name" : "arg", "type" : "xs:duration", "occurrence" : "?", "description" : "" } ], "returns" : { "type" : "xs:integer?", "description" : "" }, "errors" : [  ] }, { "isDocumented" : true, "arity" : 1, "name" : "zero-or-one", "qname" : "fn:zero-or-one", "signature" : "($arg as item()*) as item()? external", "description" : " <div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"><p xmlns:e=\"http://www.w3.org/1999/XSL/Spec/ElementSyntax\">Returns <code>$arg</code> if it contains zero or one items. Otherwise, raises\n             an error.</p><p xmlns:e=\"http://www.w3.org/1999/XSL/Spec/ElementSyntax\"><example role=\"signature\"><proto name=\"zero-or-one\" return-type=\"item()?\" isOp=\"no\" prefix=\"fn\" returnEmptyOk=\"no\" returnSeq=\"no\" returnVaries=\"no\" isSchema=\"no\" isDatatype=\"no\" isSpecial=\"no\"><arg name=\"arg\" type=\"item()*\"/></proto></example></p><p xmlns:e=\"http://www.w3.org/1999/XSL/Spec/ElementSyntax\">This function is <termref def=\"dt-deterministic\">deterministic</termref>, <termref def=\"dt-context-independent\">context-independent</termref>,  and <termref def=\"dt-focus-independent\">focus-independent</termref>. </p><p xmlns:e=\"http://www.w3.org/1999/XSL/Spec/ElementSyntax\">Except in error cases, the function returns <code>$arg</code> unchanged.</p><p xmlns:e=\"http://www.w3.org/1999/XSL/Spec/ElementSyntax\" diff=\"del\" at=\"F\">For detailed type semantics, see [Formal Semantics].</p><p xmlns:e=\"http://www.w3.org/1999/XSL/Spec/ElementSyntax\">A <phrase diff=\"add\" at=\"L\">dynamic</phrase> error is raised <errorref class=\"RG\" code=\"0003\"/> if <code>$arg</code> contains more\n             than one item.</p></div>\n", "summary" : "<p>  Returns  $arg  if it contains zero or one items.</p>", "annotation_str" : "", "annotations" : [  ], "updating" : false, "parameters" : [ { "name" : "arg", "type" : "item()", "occurrence" : "*", "description" : "" } ], "returns" : { "type" : "item()?", "description" : "" }, "errors" : [  ] } ], "variables" : [  ] }, "http://zorba.io/modules/csv" : { "ns" : "http://zorba.io/modules/csv", "description" : " Function library providing converters from CSV/TXT to XML and back.\n The functions are optimized to work with large amounts of data, in a streaming way.\n", "sees" : [  ], "authors" : [ "<xqdoc:author xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">Daniel Turcanu</xqdoc:author>" ], "version" : null, "encoding" : "utf-8", "namespaces" : [ { "uri" : "http://zorba.io/modules/csv", "prefix" : "csv" }, { "uri" : "http://zorba.io/modules/csv-options", "prefix" : "csv-options" }, { "uri" : "http://zorba.io/modules/schema", "prefix" : "schemaOptions" }, { "uri" : "http://zorba.io/options/versioning", "prefix" : "ver" } ], "functions" : [ { "isDocumented" : true, "arity" : 2, "name" : "parse", "qname" : "csv:parse", "signature" : "($csv as xs:string, $options as element(csv-options:options)?) as element(*)*", "description" : " Parse a CSV or fixed size text and convert to XML.<br xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"/>\n By default each line is converted to a &lt;row&gt; element, and each field to a &lt;column&gt; element inside &lt;row&gt;.<br xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"/>\n The format of the param $options is:<br xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"/>\n  <pre xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">\n    &lt;csv-options:options&gt;\n        &lt;csv  [separator=\"default comma ,\"] ?\n          [quote-char=\"default double quotes &amp;quote;\"]?\n          [quote-escape=\"default double double quotes &amp;quote;&amp;quote;\"]? /&gt;\n        or\n        &lt;column-widths&gt;\n          &lt;column-width&gt;<i>[column fixed width, unsigned int]</i>&lt;column-width&gt;*\n        &lt;/column-widths&gt;\n        or\n        &lt;column-positions&gt;\n          &lt;column-position&gt;<i>[column position on line, unsigned int]</i>&lt;column-position&gt;*\n        &lt;/column-positions&gt;\n        &lt;first-row-is-header [line=\"<i>first_line[-last_line]?</i>\"]?/&gt;?\n        &lt;start-from-row line=\"<i>first_line[-last_line]?</i>\"/&gt;?\n        &lt;add-last-void-columns/&gt;?\n        &lt;xml-nodes&gt;\n          [&lt;<i>row-name</i>&gt;\n            [&lt;<i>column-name/</i>&gt;]?\n          &lt;/<i>row-name</i>&gt;]?\n        &lt;/xml-nodes&gt;?\n    &lt;/csv-options:options&gt;\n  </pre>\n    All the parameters are optional and can appear in any order.<br xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"/>\n    All the parameters are case sensitive. The namespace used is \"http://zorba.io/modules/csv-options\".<br xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"/>\n    All strings must have UTF-8 encoding.<br xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"/>\n    Parameters csv, column-widths, column-positions are mutually exclusive. If none is specified,\n    the input string is assumed to be csv.<br xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"/>\n    Description of parameters:\n    <dl xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">\n     <dt><b>csv</b></dt>\n     <dd> Specifies the parameters for parsing a csv string.<br/>\n       <dl>\n        <dt><b>separator</b></dt>\n        <dd>The character or group of characters used to separating fields in a row.\n            If it is not specified, it defaults to comma ','.\n        </dd>\n        <dt><b>quote-char</b></dt>\n        <dd>The character or group of characters used for quoting the fields that may contain special characters,\n             like separator, new line or this quote char. The default value is double quote \".<br/>\n        </dd>\n        <dt><b>quote-escape</b></dt>\n        <dd>The group of characters used for escaping the quote char inside a field. The whole quote escape group\n           is translated to a quote char during parsing. The default value is double double quotes \"\".<br/>\n        </dd>\n       </dl>\n     </dd>\n     <br/>\n     <dt><b>column-widths</b></dt>\n     <dd>Specifies the column widths for fixed size text. It contains multiple column-width child elements\n        specifying the fixed width of each column, from left to right.<br/>\n        If the line has more fields than specified, they are ignored.\n     </dd>\n     <dt><b>column-positions</b></dt>\n     <dd>This is an alternative to column-widths, and specifies instead the starting position of each column.\n        Column positions are 1 based, and are specified in order from left to right.\n        The last column is read until end of line. The first column position can be greater than 1, if you want\n        to parse only a part of the input text.\n     </dd>\n     <dt><b>first-row-is-header</b></dt>\n     <dd>The presence of this element indicates that the first row is to be treated as the name of the columns.\n        If it is not present, then each field is enclosed in a &lt;column&gt; element,\n        or how it is specified in &lt;xml-nodes&gt; parameter.<br/>\n        If the first row is the header, then each field is enclosed in an element with the corresponding name from the header.<br/>\n        For example, the csv:\n        <pre>\n        <i>ID,Name,Occupation\n        1,John,student</i>\n        </pre>\n        is parsed into:\n        <pre>\n        <i>&lt;row&gt;\n        &lt;ID&gt;1&lt;/ID&gt;\n        &lt;Name&gt;John&lt;/Name&gt;\n        &lt;Occupation&gt;student&lt;/Occupation&gt;\n        &lt;/row&gt;</i>\n        </pre>\n        If the header names contain characters that cannot be used in a QName, they are replaced with underscore '_'.<br/>\n        The namespace for the header QNames is taken from the column name specified in xml-nodes parameter, or from\n        the row name, or if that doesn't exist either then empty namespace is used. <br/>\n        If the header is not the first line in the input string, the starting line can be specified in the <b>line</b> attribute.<br/>\n        If a column does not have a name, a new name is constructed in the form <i>columnN</i> where N is the position of the column,\n        starting from 1.<br/>\n        <b>Subheaders</b><br/>\n        If the header consists of more than one line, this can be specified in the <b>line</b> attribute in the form\n        \"<i>first_line - last_line</i>\". Having more lines as the header translates into a hierarchy of elements in the xml.<br/>\n        For example, the csv:\n        <pre>\n        <i>ID,Name,,Occupation\n        ,First Name,Last Name,\n        1,John,Howard,student</i>\n        </pre>\n        is parsed into:\n        <pre>\n        <i>&lt;row&gt;\n        &lt;ID&gt;1&lt;/ID&gt;\n        &lt;Name&gt;\n          &lt;First_Name&gt;John&lt;/First_Name&gt;\n          &lt;Last_Name&gt;Howard&lt;/Last_Name&gt;\n        &lt;/Name&gt;\n        &lt;Occupation&gt;student&lt;/Occupation&gt;\n        &lt;/row&gt;</i>\n        </pre>\n        This element can have an attribute \"accept-all-lines\" with values \"false\" or \"true\" (default \"false\").\n        When set to true it tells the parser to not report lines that do not have the same number of items as\n        the header. If set to false, the parser will raise a csv:WrongInput error for these lines.<br/>\n     </dd>\n     <dt><b>start-from-row</b></dt>\n     <dd>If the data does not start from line 1 or immediately after the header,\n        you can specify the starting line in the <b>line</b> attribute.<br/>\n        Also you can use this attribute in the form \"<i>first_line - last_line</i>\" to specify also the last line\n        if you don't want the whole csv to be parsed.\n     </dd>\n     <dt><b>add-last-void-columns</b></dt>\n     <dd>In the case when using headers and some data lines are shorter than the header, by default the excess columns are ignored\n          for those lines. You can set the add-last-void-columns parameter to make all the columns appear in xml even if they are void.\n     </dd>\n     <dt><b>xml-nodes</b></dt>\n     <dd>With this parameter you can specify the names for the row element and for the column element if there is no header.<br/>\n        The first element child of this element specifies the desired QName of the row element in the output xml.\n        The name of this element will be used as the name of the row element.<br/>\n        The element child of this row element is the column element, and its name will be used as the name of the column elements\n        that enclose the fields in the output xml if there is no header. <br/>\n        If the csv has a header, only the namespace is used from the column element.<br/>\n        For example, with parameter:\n        <pre>\n        <i>&lt;xml-nodes&gt;\n        &lt;r&gt;\n          &lt;c/&gt;\n        &lt;/r&gt;\n        &lt;/xml-nodes&gt;</i>\n        </pre>\n        the output for each line will look like:\n        <pre>\n        <i>&lt;r&gt;\n          &lt;c&gt;field1&lt;/c&gt;\n          &lt;c&gt;field2&lt;/c&gt;\n          .......\n        &lt;/r&gt;</i>\n        </pre>\n     </dd>\n    </dl>\n", "summary" : "<p> Parse a CSV or fixed size text and convert to XML.</p>", "annotation_str" : "", "annotations" : [  ], "updating" : false, "parameters" : [ { "name" : "csv", "type" : "xs:string", "occurrence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> the string containing the csv or fixed size text.</div>" }, { "name" : "options", "type" : "element(csv-options:options)", "occurrence" : "?", "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> this parameter is validated against \"http://zorba.io/modules/csv-options\" schema. If this parameter is not specified, the row name is by default \"row\" and the column name is by default \"column\".</div>" } ], "returns" : { "type" : "element(*)*", "description" : "a sequence of row elements, one for each line in csv" }, "errors" : [ "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">csv:CSV001 if the input string is streamable string and cannot be rewinded</xqdoc:error>", "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">csv:WrongInput if the input string has lines with variable number of items, and the csv has headers and the options do not specify the ignore-foreign-input attribute</xqdoc:error>", "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">err:XQDY0027 if $options can not be validated against the csv-options schema</xqdoc:error>", "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">err:XQDY0084 if the options parameter doesn't have the name \"csv-options:options\".</xqdoc:error>" ] }, { "isDocumented" : true, "arity" : 2, "name" : "serialize", "qname" : "csv:serialize", "signature" : "($xml as element(*)*, $options as element(csv-options:options)?) as xs:string", "description" : " Convert XML into CSV or fixed size text.\n Note: if you want to serialize out the result, make sure that the serializer method is set to \"text\".\n For example, in zorba command line, you have to set the param --serialize-text.\n When using the <pre xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">file:write(...)</pre> function, you have to set the\n method serialization parameter to \"text\":\n <pre xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">\n &lt;output:serialization-parameters&lt;\n   &lt;output:method value=\"text\"/&lt;\n &lt;/output:serialization-parameters&lt;\n </pre>\n The <pre xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">$options</pre> parameter must have the following format:\n <pre xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">\n    &lt;csv-options:options&gt;<br/>\n        &lt;csv  [separator=\"default comma ,\"] ? <br/>\n          [quote-char=\"default double quotes &amp;quote;\"]? <br/>\n          [quote-escape=\"default double double quotes &amp;quote;&amp;quote;\"]? /&gt; <br/>\n        <br/>\n        or<br/>\n        &lt;column-widths [align=\"left|right\"]?&gt;<br/>\n          &lt;column-width [align=\"left|right\"]?&gt;<i>[column fixed width, unsigned int]</i>&lt;column-width&gt;*<br/>\n        &lt;/column-widths&gt;<br/>\n        <br/>\n        or<br/>\n        &lt;column-positions [align=\"left|right\"]?&gt;<br/>\n          &lt;column-position [align=\"left|right\"]?&gt;<i>[column position on line, unsigned int]</i>&lt;column-position&gt;*<br/>\n        &lt;/column-positions&gt;<br/>\n        <br/>\n        &lt;first-row-is-header/&gt;?<br/>\n    &lt;/csv-options:options&gt;\n </pre>\n All the parameters are optional and can appear in any order.<br xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"/>\n All the parameters are case sensitive. The namespace used is \"http://zorba.io/modules/csv-options\".<br xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"/>\n All strings must have UTF-8 encoding.<br xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"/>\n Parameters csv, column-widths, column-positions are mutually exclusive.\n If none is specified, the xml is converted to csv.\n Description of parameters:\n    <dl xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">\n     <dt><b>csv</b></dt>\n     <dd> Specifies the parameters for converting to csv.<br/>\n       <dl>\n        <dt><b>separator</b></dt>\n        <dd>The character or group of characters used to separating fields in a row.\n            If it is not specified, it defaults to comma ','.\n        </dd>\n        <dt><b>quote-char</b></dt>\n        <dd>The character or group of characters used for quoting the fields that may contain special characters,\n             like separator, new line or this quote char. The default value is double quote \".<br/>\n        </dd>\n        <dt><b>quote-escape</b></dt>\n        <dd>The group of characters used for escaping the quote char inside a field. The whole quote escape group\n           is translated to a quote char during parsing. The default value is double double quotes \"\".<br/>\n        </dd>\n       </dl>\n     </dd>\n     <br/>\n     <dt><b>column-widths</b></dt>\n     <dd>Specifies the column widths for fixed size text. It contains multiple column-width child elements\n        specifying the fixed width of each column, from left to right.<br/>\n        With the attribute <b>align</b> you can specify how to align fields that are smaller than the column width.\n        The default alignment is left.<br/>\n     </dd>\n     <dt><b>column-positions</b></dt>\n     <dd>This is an alternative to column-widths, and specifies instead the starting position of each column.\n        Column positions are 1 based, and are specified in order from left to right.\n        The last column has a variable length.<br/>\n        With the attribute <b>align</b> you can specify how to align fields that are smaller than the column width.\n        The default alignment is left. The last column does not need alignment.<br/>\n     </dd>\n     <dt><b>first-row-is-header</b></dt>\n     <dd>The presence of this element indicates that the first row will contain the header, that is, the names of\n        the column elements. Only the column names from the first row element are taken into account.<br/>\n        For example, the row xml:<br/>\n        <i>&lt;row&gt;<br/>\n        &lt;ID&gt;1&lt;/ID&gt;<br/>\n        &lt;Name&gt;John&lt;/Name&gt;<br/>\n        &lt;Occupation&gt;student&lt;/Occupation&gt;<br/>\n        &lt;/row&gt;</i><br/>\n        <br/>\n        is converted to<br/>\n        <i>ID,Name,Occupation<br/>\n        1,John,student</i><br/>\n        <br/>\n        The header names are the localnames of the column elements, and the namespace is ignored.<br/>\n        <b>Subheaders</b><br/>\n        If the row-column hierarchy is more complex, then subheaders are also generated on subsequent lines.\n        The number of subheaders depends on the depth of the column hierarchy.<br/>\n        When generating the subheaders, the non-whitespace text nodes are also taken into account,\n        and a separate column is generated for them too.<br/>\n        For example, the xml row element:<br/>\n        <i>&lt;row&gt;<br/>\n        &lt;ID&gt;1&lt;/ID&gt;<br/>\n        &lt;Name&gt;<br/>\n          Mr.<br/>\n          &lt;First_Name&gt;John&lt;/First_Name&gt;<br/>\n          &lt;Last_Name&gt;Howard&lt;/Last_Name&gt;<br/>\n        &lt;/Name&gt;<br/>\n        &lt;Occupation&gt;student&lt;/Occupation&gt;<br/>\n        &lt;/row&gt;</i><br/>\n        is converted to<br/>\n        <i>ID,Name,,Occupation<br/>\n        ,,First Name,Last Name,<br/>\n        1,Mr.,John,Howard,student</i><br/>\n        <br/>\n        If first-row-is-header is not specified and the columns have a deeper hierarchy,\n          only the first layer of columns is processed, and the fields are the string values of each column.<br/>\n        This element can have an attribute \"ignore-foreign-input\" with values \"false\" or \"true\" (default \"false\").\n        When set to true it tells the serializer to ignore elements that to not match the header names.\n        If set to false, the serializer will raise a csv:ForeignInput error for these elements.<br/>\n     </dd>\n    </dl>\n", "summary" : "<p> Convert XML into CSV or fixed size text.</p>", "annotation_str" : "", "annotations" : [  ], "updating" : false, "parameters" : [ { "name" : "xml", "type" : "element(*)", "occurrence" : "*", "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> a sequence of elements, each element representing a row. The name of each row element is ignored. The childs of each row are the column fields.</div>" }, { "name" : "options", "type" : "element(csv-options:options)", "occurrence" : "?", "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> The options parameter. See the function description for details. This parameter is validated against \"http://zorba.io/modules/csv-options\" schema.</div>" } ], "returns" : { "type" : "xs:string", "description" : "the csv or fixed size text as string containing all the lines" }, "errors" : [ "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">csv:CSV003 if the serialize output is streamable string and cannot be reset</xqdoc:error>", "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">csv:ForeignInput if there are input elements in subsequent rows that do not match the headers, and the options specify first-row-is-header and do not specify the ignore-foreign-input attribute</xqdoc:error>", "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">err:XQDY0027 if $options can not be validated against csv-options schema</xqdoc:error>", "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">err:XQDY0084 if the options parameter doesn't have the name \"csv-options:options\".</xqdoc:error>" ] } ], "variables" : [  ] }, "http://zorba.io/modules/reference" : { "ns" : "http://zorba.io/modules/reference", "description" : " The module provides functions to compute an immutable and opaque reference\n for nodes, objects, or arrays and to retrieve such items given their\n identifier, respectively.\n The identifiers are immutable, i.e. a identifier does not change\n during the items lifetime and cannot be reused for another item after the\n original item gets deleted.\n Identifiers are unique, in that, two different items will never have the same\n identifier. A item, at any time during its lifetime, can be retrieved by its\n identifier.\n", "sees" : [  ], "authors" : [ "<xqdoc:author xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">Matthias Brantner</xqdoc:author>" ], "version" : null, "encoding" : "utf-8", "namespaces" : [ { "uri" : "http://zorba.io/modules/reference", "prefix" : "ref" }, { "uri" : "http://zorba.io/options/versioning", "prefix" : "ver" }, { "uri" : "http://zorba.io/errors", "prefix" : "zerr" } ], "functions" : [ { "isDocumented" : true, "arity" : 1, "name" : "dereference", "qname" : "ref:dereference", "signature" : "($arg as xs:string) as item()? external", "description" : " <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">Returns the node, object, or array identified by the given reference.</p>\n <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">The function returns the empty sequence if the item\n that is referenced does not exist.</p>\n", "summary" : "<p>  Returns the node, object, or array identified by the given reference.</p>", "annotation_str" : "", "annotations" : [  ], "updating" : false, "parameters" : [ { "name" : "arg", "type" : "xs:string", "occurrence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> the URI of the item to retrieve.</div>" } ], "returns" : { "type" : "item()?", "description" : "the item identified by the URI passed as parameter or the empty-sequence if no item with that URI is found." }, "errors" : [  ] }, { "isDocumented" : true, "arity" : 1, "name" : "reference", "qname" : "ref:reference", "signature" : "($arg as item()) as xs:string external", "description" : " <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">Returns an immutable and opaque reference (with type xs:anyURI) for\n a given node, object, or array.</p>\n <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">The generated identifier is immutable, i.e. a identifier does not\n change during the item's lifetime and cannot be reused for another node after\n the original item gets deleted.</p>\n <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">Identifiers are also unique, in that, two different items will never\n have the same identifier.</p>\n A item, at any time during its lifetime, can be retrieved by its\n identifier, using the <tt xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">ref:dereference</tt> function.\n Please note that a reference can only be retrieved for a JSON object or JSON\n array if the item is a member of a collection.\n", "summary" : "<p>  Returns an immutable and opaque reference (with type xs:anyURI) for\n a given node, object, or array.</p>", "annotation_str" : "", "annotations" : [  ], "updating" : false, "parameters" : [ { "name" : "arg", "type" : "item()", "occurrence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> the node, object, or array for which the URI should be computed</div>" } ], "returns" : { "type" : "xs:string", "description" : "the opaque URI of the item." }, "errors" : [ "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">zerr::ZAPI0080 is raised if the object or array passed as argument is not a member of a collection.</xqdoc:error>" ] } ], "variables" : [  ] }, "http://zorba.io/modules/dctx" : { "ns" : "http://zorba.io/modules/dctx", "description" : " This module provides functions that gets components of the dynamic context.\n", "sees" : [  ], "authors" : [ "<xqdoc:author xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">Federico Cavalieri</xqdoc:author>" ], "version" : null, "encoding" : "utf-8", "namespaces" : [ { "uri" : "http://zorba.io/modules/dctx", "prefix" : "dctx" }, { "uri" : "http://zorba.io/options/versioning", "prefix" : "ver" } ], "functions" : [ { "isDocumented" : true, "arity" : 0, "name" : "snapshot-id", "qname" : "dctx:snapshot-id", "signature" : "() as xs:unsignedLong external", "description" : " <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">Retrieves the current snapshot id.</p>\n <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">The returned id is opaque and should not be used for reasoning about time.\n The only guarantee is that the value returned by this function increases each\n time a snapshot finishes.</p>\n", "summary" : "<p>  Retrieves the current snapshot id.</p>", "annotation_str" : "", "annotations" : [  ], "updating" : false, "parameters" : [  ], "returns" : { "type" : "xs:unsignedLong", "description" : "the current snapshot id." }, "errors" : [  ] } ], "variables" : [  ] }, "http://xbrl.io/modules/bizql/facts" : { "ns" : "http://xbrl.io/modules/bizql/facts", "description" : " <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">This module provides functions for retrieving facts.</p>\n <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">Facts are the smallest reportable piece of information.</p>\n <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">Facts have a certain number of characteristics: the archive in\n which they were reported, a number of XBRL aspects (concept, entity, period,\n unit, further XBRL dimensions), as well as profile-specific information.</p>\n <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">With this module, you can retrieve facts by picking the characteristics\n you would like your results to have. You can retrieve a fact with its FID\n (Fact ID). You can extract information about facts (period, entity, etc).\n You can perform a full-text search on fact values, and obtain footnotes.</p>\n <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">If you are interested in the structures in which facts can be organized (such\n as hypercubes), look at the components module.</p>\n <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">Facts are stored in a MongoDB datasource called <b>xbrl</b>.</p>\n <h2 xmlns:xqdoc=\"http://www.xqdoc.org/1.0\" id=\"standard_options\">Standard <code>$options</code> Parameter</h2>\n <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">Most functions in the BizQL package allow an additional <code>$options</code>\n    parameter. The options parameter is a JSON object allowing the following\n    fields:</p>\n <ul xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">\n <li><b>Hypercube</b>: a hypercube object can be passed with the options to apply\n     implicit filtering for it. Only facts belonging to this hypercube will be\n     returned. Hypercube semantics (such as default dimension values) apply.\n     By default, the dimensionless hypercube is used (no dimensions allowed, no filtering).\n     You can override Hypercube with null to bypass hypercube semantics.</li>\n <li><b>Filter</b>: an object specifying the fields to filter for. Filtering fields\n     can be any field contained in facts, including profile specific fields, e.g.:\n     <pre class=\"ace-static\" ace-mode=\"java\">\n   {\n     Filter:\n       {\n         Archive: \"0000034088-13-000011\",\n         Aspects:\n         {\n           \"us-gaap:DefinedBenefitPlansDisclosuresDefinedBenefitPlansAxis\" :\n             \"us-gaap:ForeignPensionPlansDefinedBenefitMember\"\n         },\n         Profiles: {\n           SEC: {\n             Fiscal: {\n               Year: [2011, 2012]\n             }\n           }\n         }\n       }\n   }\n   </pre>\n   A filter must contain at least on of the fields Archive, Aspects.xbrl:Concept,\n   Aspects.xbrl:Period, or Aspects.xbrl:Entity.</li>\n <li><b>concept-maps</b>:\n   <ol><li>a string which is a name of a report schema that is stored in the\n       reportschemas collection and from which to load a ConceptMap</li>\n       <li>an object which is a ConceptMap network object</li>\n       <li>an array of ConceptMap network objects (to learn more about concept-maps\n       refer to the concept-maps module documentation)</li>\n   </ol></li>\n <li><b>Rules</b>:\n   <ol><li>a string which is a name of a report schema that is stored in the\n       reportschemas collection and from which to load Rules</li>\n       <li>an object which is a Rule object</li>\n       <li>an array of Rule objects</li>\n   </ol></li>\n <li><b>include-footnotes</b>: include XBRL Footnotes in each fact (true | false)</li>\n <li><b>Lang</b>: language identifier according to http://www.ietf.org/rfc/rfc3066.txt,\n     i.e. only return footnotes etc. for this specific language</li>\n <li><b>audit-trail</b>: if set to \"debug\" the audit trails will be more verbose</li>\n <li><b>facts-for-archives-and-concept</b>: to override how underlying facts are\n     resolved, for example with finer-grained, profile-specific filtering (option value\n     must be a function item). facts:facts-for-archives-and-concepts#3 is used by\n     default, but it is possible to supply another function that, for examples, filters\n     irrelevant facts out.</li>\n </ul>\n", "sees" : [  ], "authors" : [ "<xqdoc:author xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">Charles Hoffman</xqdoc:author>", "<xqdoc:author xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">Matthias Brantner</xqdoc:author>", "<xqdoc:author xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">Dennis Knochenwefel</xqdoc:author>", "<xqdoc:author xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">Ghislain Fourny</xqdoc:author>" ], "version" : null, "encoding" : "utf-8", "namespaces" : [ { "uri" : "http://xbrl.io/modules/bizql/archives", "prefix" : "archives" }, { "uri" : "http://xbrl.io/modules/bizql/concept-maps", "prefix" : "concept-maps" }, { "uri" : "http://www.28msec.com/modules/credentials", "prefix" : "credentials" }, { "uri" : "http://xbrl.io/modules/bizql/entities", "prefix" : "entities" }, { "uri" : "http://xbrl.io/modules/bizql/facts", "prefix" : "facts" }, { "uri" : "http://xbrl.io/modules/bizql/footnotes", "prefix" : "footnotes" }, { "uri" : "http://xbrl.io/modules/bizql/hypercubes", "prefix" : "hypercubes" }, { "uri" : "http://jsoniq.org/function-library", "prefix" : "j" }, { "uri" : "http://www.28msec.com/modules/mongodb", "prefix" : "mongo" }, { "uri" : "http://zorba.io/modules/reflection", "prefix" : "reflection" }, { "uri" : "http://xbrl.io/modules/bizql/rules", "prefix" : "rules" }, { "uri" : "http://zorba.io/modules/string", "prefix" : "string" }, { "uri" : "http://zorba.io/options/versioning", "prefix" : "ver" }, { "uri" : "http://zorba.io/modules/zorba-query", "prefix" : "zq" } ], "functions" : [ { "isDocumented" : true, "arity" : 1, "name" : "concept-for-fact", "qname" : "facts:concept-for-fact", "signature" : "($fact-or-id as item()) as string", "description" : " <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">Retrieves the concept against which a fact is reported.</p>\n", "summary" : "<p>  Retrieves the concept against which a fact is reported.</p>", "annotation_str" : "", "annotations" : [  ], "updating" : false, "parameters" : [ { "name" : "fact-or-id", "type" : "item()", "occurrence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> a fact or its FID.</div>" } ], "returns" : { "type" : "string", "description" : "the concept name." }, "errors" : [  ] }, { "isDocumented" : true, "arity" : 1, "name" : "decimal-value", "qname" : "facts:decimal-value", "signature" : "($facts as object()*) as decimal", "description" : " <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">Returns the value of the given facts in case that it\n    is castable to decimal. If no facts are given or a fact value\n    is not castable to decimal 0 is returned instead.</p>\n", "summary" : "<p>  Returns the value of the given facts in case that it\n    is castable to decimal.</p>", "annotation_str" : "", "annotations" : [  ], "updating" : false, "parameters" : [ { "name" : "facts", "type" : "object()", "occurrence" : "*", "description" : "" } ], "returns" : { "type" : "decimal", "description" : "the decimal value of the facts or 0." }, "errors" : [  ] }, { "isDocumented" : true, "arity" : 1, "name" : "duration-for-fact", "qname" : "facts:duration-for-fact", "signature" : "($fact-or-id as item()) as object()?", "description" : " <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">Retrieves the duration period for which a fact was reported.</p>\n", "summary" : "<p>  Retrieves the duration period for which a fact was reported.</p>", "annotation_str" : "", "annotations" : [  ], "updating" : false, "parameters" : [ { "name" : "fact-or-id", "type" : "item()", "occurrence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> a fact or its FID.</div>" } ], "returns" : { "type" : "object()?", "description" : "the duration period as an object with Start and End, or the empty sequence if it is not instant." }, "errors" : [  ] }, { "isDocumented" : true, "arity" : 1, "name" : "entity-for-fact", "qname" : "facts:entity-for-fact", "signature" : "($fact-or-id as item()) as string", "description" : " <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">Retrieves the eid of the entity who reported a fact.</p>\n", "summary" : "<p>  Retrieves the eid of the entity who reported a fact.</p>", "annotation_str" : "", "annotations" : [  ], "updating" : false, "parameters" : [ { "name" : "fact-or-id", "type" : "item()", "occurrence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> a fact or its FID.</div>" } ], "returns" : { "type" : "string", "description" : "the eid." }, "errors" : [  ] }, { "isDocumented" : true, "arity" : 2, "name" : "facts-for-archives-and-aspects", "qname" : "facts:facts-for-archives-and-aspects", "signature" : "($archives-or-ids as item()*, $aspects as object()) as object()*", "description" : " <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">Return all facts reported in a given archive, and associated with a\n given entity, concept, period and/or other aspects.</p>\n", "summary" : "<p>  Return all facts reported in a given archive, and associated with a\n given entity, concept, period and/or other aspects.</p>", "annotation_str" : "", "annotations" : [  ], "updating" : false, "parameters" : [ { "name" : "archives-or-ids", "type" : "item()", "occurrence" : "*", "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> a sequence of archive or archive IDs to filter (or $facts:ALL_OF_THEM to do not filter on archives).</div>" }, { "name" : "aspects", "type" : "object()", "occurrence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> an object containing aspects to filter, among which xbrl:Concept, xbrl:Entity and xbrl:Period (at least one of them is mandatory).</div>" } ], "returns" : { "type" : "object()*", "description" : "all facts satisfying all supplied conditions." }, "errors" : [  ] }, { "isDocumented" : true, "arity" : 3, "name" : "facts-for-archives-and-aspects", "qname" : "facts:facts-for-archives-and-aspects", "signature" : "($archives-or-ids as item()*, $aspects as object(), $options as object()?) as object()*", "description" : " <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">Return all facts associated with a given entity, concept, period\n and/or other aspects.</p>\n", "summary" : "<p>  Return all facts associated with a given entity, concept, period\n and/or other aspects.</p>", "annotation_str" : "", "annotations" : [  ], "updating" : false, "parameters" : [ { "name" : "archives-or-ids", "type" : "item()", "occurrence" : "*", "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> a sequence of archive or archive IDs to filter (or $facts:ALL_OF_THEM to do not filter on archives).</div>" }, { "name" : "aspects", "type" : "object()", "occurrence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> an object containing aspects to filter, among which xbrl:Concept, xbrl:Entity and xbrl:Period (all optional).</div>" }, { "name" : "options", "type" : "object()", "occurrence" : "?", "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> <a href=\"#standard_options\">standard fact retrieving options</a>.</div>" } ], "returns" : { "type" : "object()*", "description" : "all facts satisfying all supplied conditions." }, "errors" : [  ] }, { "isDocumented" : true, "arity" : 2, "name" : "facts-for-archives-and-concepts", "qname" : "facts:facts-for-archives-and-concepts", "signature" : "($archives-or-ids as item()*, $concepts as item()*) as object()*", "description" : " <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">Return facts associated with given concepts and archives.</p>\n", "summary" : "<p>  Return facts associated with given concepts and archives.</p>", "annotation_str" : "", "annotations" : [  ], "updating" : false, "parameters" : [ { "name" : "archives-or-ids", "type" : "item()", "occurrence" : "*", "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> a sequence of archive or archive IDs to filter (or $facts:ALL_OF_THEM to do not filter on archives).</div>" }, { "name" : "concepts", "type" : "item()", "occurrence" : "*", "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> the concepts (or $facts:ALL_OF_THEM to do no filter on concepts).</div>" } ], "returns" : { "type" : "object()*", "description" : "facts associated with these concepts and archives." }, "errors" : [  ] }, { "isDocumented" : true, "arity" : 3, "name" : "facts-for-archives-and-concepts", "qname" : "facts:facts-for-archives-and-concepts", "signature" : "($archives-or-ids as item()*, $concepts as item()*, $options as object()?) as object()*", "description" : " <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">Return facts associated with given concepts and archives.</p>\n", "summary" : "<p>  Return facts associated with given concepts and archives.</p>", "annotation_str" : "", "annotations" : [  ], "updating" : false, "parameters" : [ { "name" : "archives-or-ids", "type" : "item()", "occurrence" : "*", "description" : "" }, { "name" : "concepts", "type" : "item()", "occurrence" : "*", "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> the concepts (or $facts:ALL_OF_THEM to do no filter on concepts).</div>" }, { "name" : "options", "type" : "object()", "occurrence" : "?", "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> <a href=\"#standard_options\">standard fact retrieving options</a>.</div>" } ], "returns" : { "type" : "object()*", "description" : "facts associated with these concepts." }, "errors" : [  ] }, { "isDocumented" : true, "arity" : 1, "name" : "facts-for-archives", "qname" : "facts:facts-for-archives", "signature" : "($archives-or-ids as item()*) as object()*", "description" : " <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">Return all facts reported within a given archive.</p>\n", "summary" : "<p>  Return all facts reported within a given archive.</p>", "annotation_str" : "", "annotations" : [  ], "updating" : false, "parameters" : [ { "name" : "archives-or-ids", "type" : "item()", "occurrence" : "*", "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> a sequence of archives or AIDs to filter.</div>" } ], "returns" : { "type" : "object()*", "description" : "all facts reported in these archives." }, "errors" : [  ] }, { "isDocumented" : true, "arity" : 1, "name" : "facts-for-aspects", "qname" : "facts:facts-for-aspects", "signature" : "($aspects as object()) as object()*", "description" : " <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">Return all facts associated with the given aspects.</p>\n", "summary" : "<p>  Return all facts associated with the given aspects.</p>", "annotation_str" : "", "annotations" : [  ], "updating" : false, "parameters" : [ { "name" : "aspects", "type" : "object()", "occurrence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> an object containing aspects to filter, among which xbrl:Concept, xbrl:Entity and xbrl:Period (at least one of them is mandatory).</div>" } ], "returns" : { "type" : "object()*", "description" : "all facts associated with these aspects." }, "errors" : [  ] }, { "isDocumented" : true, "arity" : 2, "name" : "facts-for-aspects", "qname" : "facts:facts-for-aspects", "signature" : "($aspects as object(), $options as object()?) as object()*", "description" : " <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">Return all facts associated with the given aspects.</p>\n", "summary" : "<p>  Return all facts associated with the given aspects.</p>", "annotation_str" : "", "annotations" : [  ], "updating" : false, "parameters" : [ { "name" : "aspects", "type" : "object()", "occurrence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> an object containing aspects to filter, among which xbrl:Concept, xbrl:Entity and xbrl:Period (at least one of them is mandatory).</div>" }, { "name" : "options", "type" : "object()", "occurrence" : "?", "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> <a href=\"#standard_options\">standard fact retrieving options</a>.</div>" } ], "returns" : { "type" : "object()*", "description" : "all facts associated with these aspects." }, "errors" : [  ] }, { "isDocumented" : true, "arity" : 1, "name" : "facts-for-concepts", "qname" : "facts:facts-for-concepts", "signature" : "($concepts as string*) as object()*", "description" : " <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">Return facts associated with given concepts.</p>\n", "summary" : "<p>  Return facts associated with given concepts.</p>", "annotation_str" : "", "annotations" : [  ], "updating" : false, "parameters" : [ { "name" : "concepts", "type" : "string", "occurrence" : "*", "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> the concepts.</div>" } ], "returns" : { "type" : "object()*", "description" : "facts associated with these concepts." }, "errors" : [  ] }, { "isDocumented" : true, "arity" : 2, "name" : "facts-for-concepts", "qname" : "facts:facts-for-concepts", "signature" : "($concepts as string*, $options as object()?) as object()*", "description" : " <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">Return facts associated with given concepts.</p>\n", "summary" : "<p>  Return facts associated with given concepts.</p>", "annotation_str" : "", "annotations" : [  ], "updating" : false, "parameters" : [ { "name" : "concepts", "type" : "string", "occurrence" : "*", "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> the concepts.</div>" }, { "name" : "options", "type" : "object()", "occurrence" : "?", "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> <a href=\"#standard_options\">standard fact retrieving options</a>.</div>" } ], "returns" : { "type" : "object()*", "description" : "facts associated with these concepts." }, "errors" : [  ] }, { "isDocumented" : true, "arity" : 1, "name" : "facts-for-entities", "qname" : "facts:facts-for-entities", "signature" : "($entities-or-ids as item()*) as object()*", "description" : " <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">Return facts reported by the given entities.</p>\n", "summary" : "<p>  Return facts reported by the given entities.</p>", "annotation_str" : "", "annotations" : [  ], "updating" : false, "parameters" : [ { "name" : "entities-or-ids", "type" : "item()", "occurrence" : "*", "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> the entities or EIDs.</div>" } ], "returns" : { "type" : "object()*", "description" : "facts reported by the given entities." }, "errors" : [  ] }, { "isDocumented" : true, "arity" : 1, "name" : "facts-for", "qname" : "facts:facts-for", "signature" : "($options as object()?) as object()*", "description" : " <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">Return all facts that match a given filter object optionally interpreted\n    in the context of an optionally given hypercube.</p>\n", "summary" : "<p>  Return all facts that match a given filter object optionally interpreted\n    in the context of an optionally given hypercube.</p>", "annotation_str" : "", "annotations" : [  ], "updating" : false, "parameters" : [ { "name" : "options", "type" : "object()", "occurrence" : "?", "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> <a href=\"#standard_options\">standard fact retrieving options</a>.</div>" } ], "returns" : { "type" : "object()*", "description" : "all facts satisfying the filter and options." }, "errors" : [ "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">facts:FILTER-TOO-GENERIC The filter object must have at least one of the fields Archive, Aspects.xbrl:Concept, Aspects.xbrl:Period, or Aspects.xbrl:Entity.</xqdoc:error>" ] }, { "isDocumented" : true, "arity" : 1, "name" : "facts-search", "qname" : "facts:facts-search", "signature" : "($search as string) as object()*", "description" : " <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">Return all facts that match the given search term.</p>\n", "summary" : "<p>  Return all facts that match the given search term.</p>", "annotation_str" : "", "annotations" : [  ], "updating" : false, "parameters" : [ { "name" : "search", "type" : "string", "occurrence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> the search query</div>" } ], "returns" : { "type" : "object()*", "description" : "all facts matching the given search query" }, "errors" : [  ] }, { "isDocumented" : true, "arity" : 1, "name" : "facts", "qname" : "facts:facts", "signature" : "($fact-or-ids as item()*) as object()*", "description" : " <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">Return the fact with the given FIDs.</p>\n", "summary" : "<p>  Return the fact with the given FIDs.</p>", "annotation_str" : "", "annotations" : [  ], "updating" : false, "parameters" : [ { "name" : "fact-or-ids", "type" : "item()", "occurrence" : "*", "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> the FIDs or the facts themselves.</div>" } ], "returns" : { "type" : "object()*", "description" : "the facts with the given FIDs the empty sequence if no fact was found or if the input is an empty sequence." }, "errors" : [  ] }, { "isDocumented" : true, "arity" : 1, "name" : "fid", "qname" : "facts:fid", "signature" : "($facts-or-ids as item()*) as atomic*", "description" : " <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">Converts the input to a normalized fact id (FID). The input\n can be either an FID, or a fact object which contains an _id.</p>\n", "summary" : "<p>  Converts the input to a normalized fact id (FID).</p>", "annotation_str" : "", "annotations" : [  ], "updating" : false, "parameters" : [ { "name" : "facts-or-ids", "type" : "item()", "occurrence" : "*", "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> a sequence of fact objects or FIDs.</div>" } ], "returns" : { "type" : "atomic*", "description" : "the normalized FIDs." }, "errors" : [ "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">facts:INVALID-PARAMETER if the FID or fact is not valid.</xqdoc:error>" ] }, { "isDocumented" : true, "arity" : 1, "name" : "instant-for-fact", "qname" : "facts:instant-for-fact", "signature" : "($fact-or-id as item()) as atomic?", "description" : " <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">Retrieves the instant period for which a fact was reported.</p>\n", "summary" : "<p>  Retrieves the instant period for which a fact was reported.</p>", "annotation_str" : "", "annotations" : [  ], "updating" : false, "parameters" : [ { "name" : "fact-or-id", "type" : "item()", "occurrence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> a fact or its FID.</div>" } ], "returns" : { "type" : "atomic?", "description" : "the instance period, or the empty sequence if it is not instant." }, "errors" : [  ] }, { "isDocumented" : true, "arity" : 1, "name" : "is-fact-forever", "qname" : "facts:is-fact-forever", "signature" : "($fact-or-id as item()) as boolean", "description" : " <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">Tests whether a fact is reported forever.</p>\n", "summary" : "<p>  Tests whether a fact is reported forever.</p>", "annotation_str" : "", "annotations" : [  ], "updating" : false, "parameters" : [ { "name" : "fact-or-id", "type" : "item()", "occurrence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> a fact or its FID.</div>" } ], "returns" : { "type" : "boolean", "description" : "true if its period is forever, false otherwise." }, "errors" : [  ] }, { "isDocumented" : true, "arity" : 3, "name" : "merge-objects", "qname" : "facts:merge-objects", "signature" : "($o1 as object()?, $o2 as object()?, $prioritize-first-object as boolean) as object()?", "description" : " <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">Helper function to deep-merge two objects. If the two given objects have\n    fields with the same name they are merged, which means:\n      1. if the values of the fields are objects then these are merged\n      2. in any other case the fields are accumulated into an array.</p>\n <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">The third parameter can be used to priotitize the first object. If the first\n    object is prioritized and both objects contain fields with the same name,\n    the fields are either merged (in case of two object values) or the value of\n    the first object is taken.</p>\n", "summary" : "<p>  Helper function to deep-merge two objects.</p>", "annotation_str" : "", "annotations" : [  ], "updating" : false, "parameters" : [ { "name" : "o1", "type" : "object()", "occurrence" : "?", "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> first object</div>" }, { "name" : "o2", "type" : "object()", "occurrence" : "?", "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> second object</div>" }, { "name" : "prioritize-first-object", "type" : "boolean", "occurrence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> boolean flag to give the first object higher priority in the merge</div>" } ], "returns" : { "type" : "object()?", "description" : "one merge object or an empty-sequence (in case both input objects are empty)." }, "errors" : [  ] }, { "isDocumented" : true, "arity" : 1, "name" : "populate-with-footnotes", "qname" : "facts:populate-with-footnotes", "signature" : "($fact-or-ids as item()*) as object()*", "description" : " <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">Populates a sequence of facts with their associated footnotes.\n More in detail, in each returned fact object an additional field\n Footnotes is added which contains all connected footnotes in an\n array.</p>\n", "summary" : "<p>  Populates a sequence of facts with their associated footnotes.</p>", "annotation_str" : "", "annotations" : [  ], "updating" : false, "parameters" : [ { "name" : "fact-or-ids", "type" : "item()", "occurrence" : "*", "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> the FIDs or the facts themselves.</div>" } ], "returns" : { "type" : "object()*", "description" : "a sequence of facts with populated Footnotes field." }, "errors" : [  ] }, { "isDocumented" : true, "arity" : 2, "name" : "populate-with-footnotes", "qname" : "facts:populate-with-footnotes", "signature" : "($fact-or-ids as item()*, $options as object()?) as object()*", "description" : " <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">Populates a sequence of facts with their associated footnotes.\n More in detail, in each returned fact object an additional field\n Footnotes is added which contains all connected footnotes in an\n array.</p>\n", "summary" : "<p>  Populates a sequence of facts with their associated footnotes.</p>", "annotation_str" : "", "annotations" : [  ], "updating" : false, "parameters" : [ { "name" : "fact-or-ids", "type" : "item()", "occurrence" : "*", "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> the FIDs or the facts themselves.</div>" }, { "name" : "options", "type" : "object()", "occurrence" : "?", "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> <a href=\"#standard_options\">standard fact retrieving options</a>.</div>" } ], "returns" : { "type" : "object()*", "description" : "a sequence of facts with populated Footnotes field." }, "errors" : [  ] }, { "isDocumented" : true, "arity" : 1, "name" : "prefix-from-fact-concept", "qname" : "facts:prefix-from-fact-concept", "signature" : "($fact as object()) as string?", "description" : " <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">Helper function to get the prefix of a given fact`s xbrl:Concept aspect.</p>\n", "summary" : "<p>  Helper function to get the prefix of a given fact`s xbrl:Concept aspect.</p>", "annotation_str" : "", "annotations" : [  ], "updating" : false, "parameters" : [ { "name" : "fact", "type" : "object()", "occurrence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> a fact object.</div>" } ], "returns" : { "type" : "string?", "description" : "the prefix of the fact's xbrl:Concept aspect or empty sequence if the concept doesn't have a prefix." }, "errors" : [  ] } ], "variables" : [ { "name" : "facts:col", "type" : "string", "description" : " Name of the collection the facts are stored in.\n" }, { "name" : "facts:ID", "type" : "string", "description" : " Name of the field that points to the facts FID.\n" }, { "name" : "facts:ARCHIVE", "type" : "string", "description" : " Name of the field that points to the archive.\n" }, { "name" : "facts:ASPECTS", "type" : "string", "description" : " Name of the field that stores the aspects.\n" }, { "name" : "facts:CONCEPT", "type" : "string", "description" : " Name of the concept aspect.\n" }, { "name" : "facts:PERIOD", "type" : "string", "description" : " Name of the period aspect.\n" }, { "name" : "facts:ENTITY", "type" : "string", "description" : " Name of the entity aspect.\n" }, { "name" : "facts:UNIT", "type" : "string", "description" : " Name of the unit aspect.\n" }, { "name" : "facts:FOOTNOTES", "type" : "string", "description" : " Name of the field that stores the Footnotes (if populated).\n" }, { "name" : "facts:ALL_OF_THEM", "type" : "boolean", "description" : " Joker for all archives or all concepts.\n" } ] }, "http://www.w3.org/2005/xqt-errors" : { "ns" : "http://www.w3.org/2005/xqt-errors", "description" : " This module contains one variable declaration for each diagnostic of the\n http://www.w3.org/2005/xqt-errors namespace.\n The variables serves as documentation for the errors but can also\n be used in the code. For example, one useful scenario is to compare\n an error caught in the catch clause of a try-catch expression with one of\n the variables.\n", "sees" : [  ], "authors" : [ "<xqdoc:author xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">Carlos Lopez</xqdoc:author>" ], "version" : null, "encoding" : "utf-8", "namespaces" : [ { "uri" : "http://www.w3.org/2005/xqt-errors", "prefix" : "err" } ], "functions" : [  ], "variables" : [ { "name" : "err:FORG0006", "type" : "xs:QName", "description" : " Invalid argument type.\n" }, { "name" : "err:FODF1280", "type" : "xs:QName", "description" : " Invalid decimal format name supplied to \\c fn:format-number().\n" }, { "name" : "err:FODF1310", "type" : "xs:QName", "description" : " Invalid decimal/integer format picture string.\n" }, { "name" : "err:FODT0001", "type" : "xs:QName", "description" : " Overflow/underflow in date/time operation.\n" }, { "name" : "err:FODT0002", "type" : "xs:QName", "description" : " Overflow/underflow in duration operation.\n" }, { "name" : "err:FODT0003", "type" : "xs:QName", "description" : " Invalid timezone value.\n" }, { "name" : "err:FONS0004", "type" : "xs:QName", "description" : " No namespace found for prefix.\n" }, { "name" : "err:FONS0005", "type" : "xs:QName", "description" : " Base-URI not defined in static context.\n" }, { "name" : "err:FORG0001", "type" : "xs:QName", "description" : " Invalid value for cast/constructor.\n" }, { "name" : "err:FORG0002", "type" : "xs:QName", "description" : " Invalid argument to \\c fn:resolve-uri().\n" }, { "name" : "err:FORG0003", "type" : "xs:QName", "description" : " \\c fn:zero-or-one() called with a sequence containing more than one\n item.\n" }, { "name" : "err:FORG0004", "type" : "xs:QName", "description" : " \\c fn:one-or-more() called with a sequence containing no items.\n" }, { "name" : "err:FORG0005", "type" : "xs:QName", "description" : " \\c fn:exactly-one() called with a sequence containing zero or more\n than one item.\n" }, { "name" : "err:FODC0007", "type" : "xs:QName", "description" : " Base URI passed to \\c fn:parse() is not a valid absolute URI.\n" }, { "name" : "err:FORG0008", "type" : "xs:QName", "description" : " The two arguments to fn:dateTime() have inconsistent timezones.\n" }, { "name" : "err:FORG0009", "type" : "xs:QName", "description" : " Error in resolving a relative URI against a base URI in\n \\c fn:resolve-uri().\n" }, { "name" : "err:FORX0001", "type" : "xs:QName", "description" : " Invalid regular expression flags.\n" }, { "name" : "err:FORX0002", "type" : "xs:QName", "description" : " Invalid regular expression.\n" }, { "name" : "err:FORX0003", "type" : "xs:QName", "description" : " Regular expression matches zero-length string.\n" }, { "name" : "err:FORX0004", "type" : "xs:QName", "description" : " Invalid replacement string.\n" }, { "name" : "err:FOTY0012", "type" : "xs:QName", "description" : " Argument node does not have a typed value.\n" }, { "name" : "err:FOTY0013", "type" : "xs:QName", "description" : " An argument to \\c fn:data() contains a node that does not have a typed\n value.\n" }, { "name" : "err:FOTY0014", "type" : "xs:QName", "description" : " The argument to \\c fn:string() is a function item.\n" }, { "name" : "err:FOTY0015", "type" : "xs:QName", "description" : " An argument to \\c fn:deep-equal() contains a function item.\n" }, { "name" : "err:FOUT1170", "type" : "xs:QName", "description" : " Identifier cannot be used to retrive a resource containing text\n" }, { "name" : "err:FOCA0005", "type" : "xs:QName", "description" : " NaN supplied as float/double value.\n" }, { "name" : "err:FTDY0016", "type" : "xs:QName", "description" : " It is a dynamic error if a weight value is not within the required range\n of values; it is also a dynamic error if an implementation that does not\n support negative weights encounters a negative weight value.\n" }, { "name" : "err:FTDY0017", "type" : "xs:QName", "description" : " It is a dynamic error if an implementation encounters a mild not\n selection, one of whose operands evaluates to an AllMatches that\n contains a StringExclude.\n" }, { "name" : "err:FTST0018", "type" : "xs:QName", "description" : " It is a static error if, during the static analysis phase, the query is\n found to contain a thesaurus option that refers to a thesaurus that is\n not found in the statically known thesauri.\n" }, { "name" : "err:FTST0019", "type" : "xs:QName", "description" : " It is a static error if, within a single FTMatchOptions, there is more\n than one match option of any given match option group.\n" }, { "name" : "err:FTDY0020", "type" : "xs:QName", "description" : " It is a dynamic error if, when \"wildcards\" is in effect, a query string\n violates wildcard syntax.\n" }, { "name" : "err:FOER0000", "type" : "xs:QName", "description" : " Unidentified error.\n" }, { "name" : "err:FOAR0001", "type" : "xs:QName", "description" : " Division by zero.\n" }, { "name" : "err:FOAR0002", "type" : "xs:QName", "description" : " Numeric operation overflow/underflow.\n" }, { "name" : "err:FOCA0001", "type" : "xs:QName", "description" : " Input value too large for decimal.\n" }, { "name" : "err:FOCA0002", "type" : "xs:QName", "description" : " Invalid lexical value.\n" }, { "name" : "err:FOCA0003", "type" : "xs:QName", "description" : " Input value too large for integer.\n" }, { "name" : "err:FOUT1190", "type" : "xs:QName", "description" : " Retrieved resource contains octets that cannot be decoded into Unicode\n using the specified encoding, the resulting characters are not\n permitted XML characters or requested encoding not supported\n" }, { "name" : "err:FOCA0006", "type" : "xs:QName", "description" : " Raised when casting a string to xs:decimal if the string has more\n digits of precision than the implementation can represent (the\n implementation also has the option of rounding).\n" }, { "name" : "err:FOCH0001", "type" : "xs:QName", "description" : " Code point not valid.\n" }, { "name" : "err:FOCH0002", "type" : "xs:QName", "description" : " Unsupported collation.\n" }, { "name" : "err:FOCH0003", "type" : "xs:QName", "description" : " Unsupported normalization form.\n" }, { "name" : "err:FOCH0004", "type" : "xs:QName", "description" : " Collation does not support collation units.\n" }, { "name" : "err:FODC0001", "type" : "xs:QName", "description" : " No context document.\n" }, { "name" : "err:FODC0002", "type" : "xs:QName", "description" : " Error retrieving resource.\n" }, { "name" : "err:FODC0003", "type" : "xs:QName", "description" : " Raised by fn:doc, fn:collection to indicate that it is not possible to\n return a result that is guaranteed deterministic.\n" }, { "name" : "err:FODC0004", "type" : "xs:QName", "description" : " Invalid argument to \\c fn:collection().\n" }, { "name" : "err:FODC0005", "type" : "xs:QName", "description" : " Invalid argument to \\c fn:doc() or \\c fn:doc-available().\n" }, { "name" : "err:FODC0006", "type" : "xs:QName", "description" : " Invalid content passed to \\c fn:parse().\n" }, { "name" : "err:SERE0005", "type" : "xs:QName", "description" : " It is an error if the serialized result would contain an NCName Names\n that contains a character that is not permitted by the version of\n Namespaces in XML specified by the version parameter.\n" }, { "name" : "err:XUDY0024", "type" : "xs:QName", "description" : " It is a dynamic error if the effect of a set of updating expressions is\n to introduce conflicting namespace bindings into an element node.\n" }, { "name" : "err:XUDY0027", "type" : "xs:QName", "description" : " It is a dynamic error if the target expression of an insert, replace, or\n rename expression evaluates to an empty sequence.\n" }, { "name" : "err:XUST0028", "type" : "xs:QName", "description" : " It is a static error if a function declaration specifies both \\c updating\n and a return type.\n" }, { "name" : "err:XUDY0029", "type" : "xs:QName", "description" : " In an insert expression where \\c before or \\c after is specified, it is\n a dynamic error if the node returned by the target expression does not\n have a parent.\n" }, { "name" : "err:XUDY0030", "type" : "xs:QName", "description" : " It is a dynamic error if an insert expression specifies the insertion of\n an attribute node before or after a child of a document node.\n" }, { "name" : "err:XUDY0031", "type" : "xs:QName", "description" : " It is a dynamic error if multiple calls to \\c fn:put() in the same\n snapshot specify the same URI (after resolution of relative URIs).\n" }, { "name" : "err:FOUP0001", "type" : "xs:QName", "description" : " It is a dynamic error if the first operand of \\c fn:put() is not a node\n of a supported kind.\n" }, { "name" : "err:FOUP0002", "type" : "xs:QName", "description" : " It is a dynamic error if the second operand of \\c fn:put() is not a valid\n lexical representation of the \\c xs:anyURI type.\n" }, { "name" : "err:SENR0001", "type" : "xs:QName", "description" : " It is an error if an item in S6 in sequence normalization is an attribute\n node or a namespace node.\n" }, { "name" : "err:SERE0003", "type" : "xs:QName", "description" : " It is an error if the serializer is unable to satisfy the rules for\n either a well-formed XML document entity or a well-formed XML external\n general parsed entity, or both, except for content modified by the\n character expansion phase of serialization.\n" }, { "name" : "err:SEPM0004", "type" : "xs:QName", "description" : " It is an error to specify the doctype-system parameter, or to specify\n the standalone parameter with a value other than omit, if the instance\n of the data model contains text nodes or multiple element nodes as\n children of the root node.\n" }, { "name" : "err:XUDY0023", "type" : "xs:QName", "description" : " It is a dynamic error if an insert, replace, or rename expression\n affects an element node by introducing a new namespace binding that\n conflicts with one of its existing namespace bindings.\n" }, { "name" : "err:SERE0006", "type" : "xs:QName", "description" : " It is an error if the serialized result would contain a character that is\n not permitted by the version of XML specified by the version parameter.\n" }, { "name" : "err:SESU0007", "type" : "xs:QName", "description" : " It is an error if an output encoding other than UTF-8 or UTF-16 is\n requested and the serializer does not support that encoding.\n" }, { "name" : "err:SERE0008", "type" : "xs:QName", "description" : " It is an error if a character that cannot be represented in the encoding\n that the serializer is using for output appears in a context where\n character references are not allowed (for example if the character\n occurs in the name of an element).\n" }, { "name" : "err:SEPM0009", "type" : "xs:QName", "description" : " It is an error if the omit-xml-declaration parameter has the value yes,\n and the standalone attribute has a value other than omit; or the version\n parameter has a value other than 1.0 and the doctype-system parameter is\n specified.\n" }, { "name" : "err:SEPM0010", "type" : "xs:QName", "description" : " It is an error if the output method is xml, the value of the\n undeclare-prefixes parameter is yes, and the value of the version\n parameter is 1.0.\n" }, { "name" : "err:SESU0011", "type" : "xs:QName", "description" : " It is an error if the value of the normalization-form parameter\n specifies a normalization form that is not supported by the serializer.\n" }, { "name" : "err:SERE0012", "type" : "xs:QName", "description" : " It is an error if the value of the normalization-form parameter is\n fully-normalized and any relevant construct of the result begins with a\n combining character.\n" }, { "name" : "err:SESU0013", "type" : "xs:QName", "description" : " It is an error if the serializer does not support the version of XML or\n HTML specified by the version parameter.\n" }, { "name" : "err:SERE0014", "type" : "xs:QName", "description" : " It is an error to use the HTML output method when characters which are\n legal in XML but not in HTML, specifically the control characters\n #x7F-#x9F, appear in the instance of the data model.\n" }, { "name" : "err:SERE0015", "type" : "xs:QName", "description" : " It is an error to use the HTML output method when \\c &gt; appears within a\n processing instruction in the data model instance being serialized.\n" }, { "name" : "err:SEPM0016", "type" : "xs:QName", "description" : " It is a an error if a parameter value is invalid for the defined domain.\n" }, { "name" : "err:XUTY0010", "type" : "xs:QName", "description" : " In a replace expression where value of is not specified and\n the target is an element, text, comment, or processing instruction node,\n it is a type error if the replacement sequence does not consist of zero\n or more element, text, comment, or processing instruction nodes.\n" }, { "name" : "err:FOFL0001", "type" : "xs:QName", "description" : " This error is raised if the fn:function-lookup returns a context-dependent function and the context-dependent function is then called.\n" }, { "name" : "err:FOCZ0001", "type" : "xs:QName", "description" : " Invalid content passed to \\c x:canonicalize().\n" }, { "name" : "err:XUST0001", "type" : "xs:QName", "description" : " It is a static error if an updating expression is used in any position\n other than one of the following:\n - The topmost expression in the body of a query.\n - The \\c modify clause of a transform expression.\n - The \\c return clause of a FLWOR expression.\n - The \\c return clauses of a typeswitch expression in which every \\c\n return clause contains an updating expression or a vacuous expression.\n - The \\c then and \\c else clauses of a conditional statement in which\n both the \\c then and \\c else clauses contain either an updating\n expression or a vacuous expression.\n - An operand of a comma expression in which each operand is either an\n updating expression or a vacuous expression.\n - The content of a parenthesized expression.\n - The body of a function declaration in which the keyword \\c updating is\n specified.\n" }, { "name" : "err:XUST0002", "type" : "xs:QName", "description" : " It is a static error if a simple expression that is not a vacuous\n expression is used in one of the following positions:\n - The \\c modify clause of a transform expression.\n - The top-level expression in the body of a function declaration in\n which the keyword \\c updating is specified.\n" }, { "name" : "err:XUST0003", "type" : "xs:QName", "description" : " It is a static error if a Prolog contains more than one revalidation\n declaration.\n" }, { "name" : "err:XUTY0004", "type" : "xs:QName", "description" : " It is a type error if the insertion sequence of an insert expression\n contains an attribute node following a node that is not an attribute\n node.\n" }, { "name" : "err:XUTY0005", "type" : "xs:QName", "description" : " In an insert expression where into, as first\n into, or as last into is specified, it is a type\n error if the target expression returns a non-empty result that does not\n consist of a single element or document node.\n" }, { "name" : "err:XUTY0006", "type" : "xs:QName", "description" : " In an insert expression where \\c before or \\c after is specified, it is\n a type error if the target expression returns a non-empty result that\n does not consist of a single element, text, comment, or processing\n instruction node.\n" }, { "name" : "err:XUTY0007", "type" : "xs:QName", "description" : " It is a type error if the target expression of a delete expression does\n not return a sequence of zero or more nodes.\n" }, { "name" : "err:XUTY0008", "type" : "xs:QName", "description" : " In a replace expression, it is a type error if the target expression\n returns a non-empty result that does not consist of a single element,\n attribute, text, comment, or processing instruction node.\n" }, { "name" : "err:XUDY0009", "type" : "xs:QName", "description" : " In a replace expression where value of is not specified, it\n is a dynamic error if the node returned by the target expression does\n not have a parent.\n" }, { "name" : "err:FTST0009", "type" : "xs:QName", "description" : " It may be a static error if, during the static analysis phase, the query\n is found to contain a language identifier in a language option that the\n implementation does not support. The implementation may choose not to\n raise this error and instead provide some other implementation-defined\n behavior.\n" }, { "name" : "err:XUTY0011", "type" : "xs:QName", "description" : " In a replace expression where value of is not specified and\n the target is an attribute node, it is a type error if the replacement\n sequence does not consist of zero or more attribute nodes.\n" }, { "name" : "err:XUTY0012", "type" : "xs:QName", "description" : " In a rename expression, it is a type error if the target expression\n returns a non-empty result that does not consist of a single element,\n attribute, or processing instruction node.\n" }, { "name" : "err:XUTY0013", "type" : "xs:QName", "description" : " In a transform expression, it is a type error if a source expression in\n the \\c copy clause does not return a single node.\n" }, { "name" : "err:XUDY0014", "type" : "xs:QName", "description" : " In a transform expression, it is a dynamic error if the \\c modify clause\n modifies any node that was not created by the \\c copy clause.\n" }, { "name" : "err:XUDY0015", "type" : "xs:QName", "description" : " It is a dynamic error if any node is the target of more than one \\c\n rename expression within the same query.\n" }, { "name" : "err:XUDY0016", "type" : "xs:QName", "description" : " It is a dynamic error if any node is the target of more than one \\c\n replace expression (without value of being specified)\n within the same query.\n" }, { "name" : "err:XUDY0017", "type" : "xs:QName", "description" : " It is a dynamic error if any node is the target of more than one\n replace value of expression within the same query.\n" }, { "name" : "err:XUDY0018", "type" : "xs:QName", "description" : " It is a dynamic error if a function that was declared to be \\c external\n but not \\c updating returns a non-empty pending update list.\n" }, { "name" : "err:XUDY0019", "type" : "xs:QName", "description" : " It is a dynamic error if a function that was declared to be both \\c\n external and \\c updating returns a non-empty data model instance.\n" }, { "name" : "err:XUDY0021", "type" : "xs:QName", "description" : " It is a dynamic error if the XDM instance that would result from\n applying all the updates in a query violates any constraint specified in\n [XQuery 1.0 and XPath 2.0 Data Model]. In this case, none of the updates\n in the query are made effective.\n" }, { "name" : "err:XUTY0022", "type" : "xs:QName", "description" : " It is a type error if an insert expression specifies the insertion of an\n attribute node into a document node.\n" }, { "name" : "err:XQST0052", "type" : "xs:QName", "description" : " The type must be the name of a type defined in the in-scope schema types,\n and the {variety} of the type must be simple.\n" }, { "name" : "err:XQST0033", "type" : "xs:QName", "description" : " It is a static error if a module contains multiple bindings for the same\n namespace prefix.\n" }, { "name" : "err:XQST0034", "type" : "xs:QName", "description" : " It is a static error if multiple functions declared or imported by a\n module have the same number of arguments and their expanded QNames are\n equal (as defined by the eq operator).\n" }, { "name" : "err:XQST0035", "type" : "xs:QName", "description" : " It is a static error to import two schema components that both define the\n same name in the same symbol space and in the same scope.\n" }, { "name" : "err:XQST0036", "type" : "xs:QName", "description" : " It is a static error to import a module if the in-scope schema\n definitions of the importing module do not include all of the following:\n -# An in-scope schema type for each type-name that appears:\n - in the type of a variable that is declared in the imported module\n and referenced in the importing module, OR\n - in a parameter-type or result-type of a function that is declared in\n the imported module and referenced in the importing module.\n -# An in-scope element declaration for each element-name \\c EN such that:\n - \\c schema-element(EN) appears in the declared type of a variable in\n the imported module, and that variable is referenced in the\n importing module, OR\n - \\c schema-element(EN) appears in a parameter-type or result-type\n of a function declared in the imported module, and that function is\n referenced in the importing module.\n -# An in-scope attribute declaration for each attribute-name \\c AN such\n that:\n - \\c schema-attribute(AN) appears in the declared type of a variable\n in the imported module, and that variable is referenced in the\n importing module, OR\n - \\c schema-attribute(AN) appears in a parameter-type or result-type\n of a function declared in the imported module, and that function is\n referenced in the importing module.\n" }, { "name" : "err:XQST0038", "type" : "xs:QName", "description" : " It is a static error if a Prolog contains more than one default collation\n declaration, or the value specified by a default collation declaration is\n not present in statically known collations.\n" }, { "name" : "err:XQST0039", "type" : "xs:QName", "description" : " It is a static error for a function declaration to have more than one\n parameter with the same name.\n" }, { "name" : "err:XQST0040", "type" : "xs:QName", "description" : " It is a static error if the attributes specified by a direct element\n constructor do not have distinct expanded QNames.\n" }, { "name" : "err:XQST0045", "type" : "xs:QName", "description" : " It is a static error if the function name in a function declaration is in\n one of the following namespaces:\n http://www.w3.org/XML/1998/namespace,\n http://www.w3.org/2001/XMLSchema,\n http://www.w3.org/2001/XMLSchema-instance,\n http://www.w3.org/2005/xpath-functions.\n" }, { "name" : "err:XQST0046", "type" : "xs:QName", "description" : " An implementation MAY raise a static error if the value of a URILiteral\n is of nonzero length and is not in the lexical space of \\c xs:anyURI.\n" }, { "name" : "err:XQST0047", "type" : "xs:QName", "description" : " It is a static error if multiple module imports in the same Prolog\n specify the same target namespace.\n" }, { "name" : "err:XQST0048", "type" : "xs:QName", "description" : " It is a static error if a function or variable declared in a library\n module is not in the target namespace of the library module.\n" }, { "name" : "err:XQST0049", "type" : "xs:QName", "description" : " It is a static error if two or more variables declared or imported by a\n module have equal expanded QNames (as defined by the eq operator.)\n" }, { "name" : "err:XQST0032", "type" : "xs:QName", "description" : " A static error is raised if a Prolog contains more than one base URI\n declaration.\n" }, { "name" : "err:XQST0054", "type" : "xs:QName", "description" : " It is a static error if a variable depends on itself.\n" }, { "name" : "err:XQST0055", "type" : "xs:QName", "description" : " It is a static error if a Prolog contains more than one copy-namespaces\n declaration.\n" }, { "name" : "err:XQST0057", "type" : "xs:QName", "description" : " It is a static error if a schema import binds a namespace prefix but\n does not specify a target namespace other than a zero-length string.\n" }, { "name" : "err:XQST0058", "type" : "xs:QName", "description" : " It is a static error if multiple schema imports specify the same target\n namespace.\n" }, { "name" : "err:XQST0059", "type" : "xs:QName", "description" : " It is a static error if an implementation is unable to process a schema\n or module import by finding a schema or module with the specified\n target namespace.\n" }, { "name" : "err:XQST0060", "type" : "xs:QName", "description" : " It is a static error if the name of a function in a function declaration\n is not in a namespace (expanded QName has a null namespace URI).\n" }, { "name" : "err:XQST0065", "type" : "xs:QName", "description" : " A static error is raised if a Prolog contains more than one ordering mode\n declaration.\n" }, { "name" : "err:XQST0066", "type" : "xs:QName", "description" : " A static error is raised if a Prolog contains more than one default\n element/type namespace declaration, or more than one default function\n namespace declaration.\n" }, { "name" : "err:XQST0067", "type" : "xs:QName", "description" : " A static error is raised if a Prolog contains more than one construction\n declaration.\n" }, { "name" : "err:XQST0068", "type" : "xs:QName", "description" : " A static error is raised if a Prolog contains more than one\n boundary-space declaration.\n" }, { "name" : "err:XQST0069", "type" : "xs:QName", "description" : " A static error is raised if a Prolog contains more than one empty order\n declaration.\n" }, { "name" : "err:XPTY0019", "type" : "xs:QName", "description" : " It is a type error if the result of a step (other than the last step) in a\n path expression contains an atomic value.\n" }, { "name" : "err:XPST0001", "type" : "xs:QName", "description" : " It is a static error if analysis of an expression relies on some\n component of the static context that has not been assigned a value.\n" }, { "name" : "err:XPST0003", "type" : "xs:QName", "description" : " It is a static error if an expression is not a valid instance of the\n grammar.\n" }, { "name" : "err:XPST0005", "type" : "xs:QName", "description" : " During the analysis phase, it is a static error if the static type\n assigned to an expression other than the expression \\c () or \\c data(())\n is \\c empty-sequence().\n" }, { "name" : "err:XPST0008", "type" : "xs:QName", "description" : " It is a static error if an expression refers to an element name,\n attribute name, schema type name, namespace prefix, or variable name\n that is not defined in the static context, except for an ElementName in\n an ElementTest or an AttributeName in an AttributeTest.\n" }, { "name" : "err:XPST0017", "type" : "xs:QName", "description" : " It is a static error if the expanded QName and number of arguments in a\n function call do not match the name and arity of a function signature in\n the static context.\n" }, { "name" : "err:XPST0051", "type" : "xs:QName", "description" : " It is a static error if a QName that is used as an AtomicType in a\n SequenceType is not defined in the in-scope schema types as an atomic\n type.\n" }, { "name" : "err:XPST0080", "type" : "xs:QName", "description" : " It is a static error if the target type of a \\c cast or \\c castable\n expression is \\c xs:NOTATION or \\c xs:anyAtomicType.\n" }, { "name" : "err:XPST0081", "type" : "xs:QName", "description" : " It is a static error if a QName used in a query contains a namespace\n prefix that cannot be expanded into a namespace URI by using the\n statically known namespaces.\n" }, { "name" : "err:XPST0083", "type" : "xs:QName", "description" : " It is a static error if the target type of a \\c cast expression or\n constructor function is \\c xs:QName or a type derived from \\c xs:QName\n or \\c xs:NOTATION, and the argument of the cast expression or\n constructor function is not a string literal.\n" }, { "name" : "err:XPTY0004", "type" : "xs:QName", "description" : " It is a type error if, during the static analysis phase, an expression\n is found to have a static type that is not appropriate for the context\n in which the expression occurs, or during the dynamic evaluation phase,\n the dynamic type of a value does not match a required type as specified\n by the matching rules in 2.5.4 SequenceType Matching.\n" }, { "name" : "err:XPTY0018", "type" : "xs:QName", "description" : " It is a type error if the result of the last step in a path expression\n contains both nodes and non-nodes.\n" }, { "name" : "err:XQST0070", "type" : "xs:QName", "description" : " A static error is raised if one of the predefined prefixes \\c xml or \\c\n xmlns appears in a namespace declaration, or if any of the following\n conditions is statically detected in any expression or declaration:\n - The prefix \\c xml is bound to some namespace URI other than\n http://www.w3.org/XML/1998/namespace.\n - A prefix other than \\c xml is bound to the namespace URI\n http://www.w3.org/XML/1998/namespace.\n - The prefix \\c xmlns is bound to any namespace URI.\n - A prefix other than \\c xmlns is bound to the namespace URI\n http://www.w3.org/2000/xmlns/.\n" }, { "name" : "err:XPTY0020", "type" : "xs:QName", "description" : " It is a type error if, in an axis step, the context item is not a node.\n" }, { "name" : "err:XPTY0117", "type" : "xs:QName", "description" : " Attempt to cast to a namespace-sensitive type failed because the namespace\n bindings for the result can not be determined.\n" }, { "name" : "err:XQTY0024", "type" : "xs:QName", "description" : " It is a type error if the content sequence in an element constructor\n contains an attribute node following a node that is not an attribute node.\n" }, { "name" : "err:XQTY0030", "type" : "xs:QName", "description" : " It is a type error if the argument of a validate expression does not\n evaluate to exactly one document or element node.\n" }, { "name" : "err:XQTY0086", "type" : "xs:QName", "description" : " It is a type error if the typed value of a copied element or attribute\n node is namespace-sensitive when construction mode is \\c preserve and\n copy-namespaces mode is \\c no-preserve.\n" }, { "name" : "err:XQTY0105", "type" : "xs:QName", "description" : " It is a type error if the content sequence in an element constructor contains a function item.\n" }, { "name" : "err:XQST0009", "type" : "xs:QName", "description" : " An implementation that does not support the Schema Import Feature must\n raise a static error if a Prolog contains a schema import.\n" }, { "name" : "err:XQST0012", "type" : "xs:QName", "description" : " It is a static error if the set of definitions contained in all schemas\n imported by a Prolog do not satisfy the conditions for schema validity\n specified in Sections 3 and 5 of [XML Schema] Part 1--i.e., each\n definition must be valid, complete, and unique.\n" }, { "name" : "err:XQST0013", "type" : "xs:QName", "description" : " It is a static error if an implementation recognizes a pragma but\n determines that its content is invalid.\n" }, { "name" : "err:XQST0022", "type" : "xs:QName", "description" : " It is a static error if the value of a namespace declaration attribute is\n not a URILiteral.\n" }, { "name" : "err:XQST0031", "type" : "xs:QName", "description" : " It is a static error if the version number specified in a version\n declaration is not supported by the implementation.\n" }, { "name" : "err:XQDY0072", "type" : "xs:QName", "description" : " It is a dynamic error if the result of the content expression of a\n computed comment constructor contains two adjacent hyphens or ends with\n a hyphen.\n" }, { "name" : "err:XQST0128", "type" : "xs:QName", "description" : " It is a static error if a feature name that an implementation supports appears\n in a prohibit-feature option declaration, and the implementation is unable to\n disable the feature.\n" }, { "name" : "err:XPDY0002", "type" : "xs:QName", "description" : " It is a dynamic error if evaluation of an expression relies on some part\n of the dynamic context that has not been assigned a value.\n" }, { "name" : "err:XPDY0050", "type" : "xs:QName", "description" : " It is a dynamic error if the dynamic type of the operand of a treat\n expression does not match the sequence type specified by the treat\n expression. This error might also be raised by a path expression\n beginning with \"/\" or \"//\" if the context node\n is not in a tree that is rooted at a document node. This is because a\n leading \"/\" or \"//\" in a path expression is an\n abbreviation for an initial step that includes the clause \\c treat as \\c\n document-node().\n" }, { "name" : "err:XQDY0025", "type" : "xs:QName", "description" : " It is a dynamic error if any attribute of a constructed element does not\n have a name that is distinct from the names of all other attributes of\n the constructed element.\n" }, { "name" : "err:XQDY0026", "type" : "xs:QName", "description" : " It is a dynamic error if the result of the content expression of a\n computed processing instruction constructor contains the string \"?&gt;\".\n" }, { "name" : "err:XQDY0027", "type" : "xs:QName", "description" : " In a validate expression, it is a dynamic error if the root element\n information item in the PSVI resulting from validation does not have the\n expected validity property: \\c valid if validation mode is \\c strict, or\n either \\c valid or \\c notKnown if validation mode is \\c lax.\n" }, { "name" : "err:XQDY0041", "type" : "xs:QName", "description" : " It is a dynamic error if the value of the name expression in a computed\n processing instruction constructor cannot be cast to the type\n \\c xs:NCName.\n" }, { "name" : "err:XQDY0044", "type" : "xs:QName", "description" : " It is a static error the node-name of a node constructed by a computed\n attribute constructor has any of the following properties:\n - Its namespace prefix is \\c xmlns.\n - It has no namespace prefix and its local name is \\c xmlns.\n - Its namespace URI is http://www.w3.org/2000/xmlns/.\n - Its namespace prefix is \\c xml and its namespace URI is not\n http://www.w3.org/XML/1998/namespace.\n - Its namespace prefix is other than \\c xml and its namespace URI is\n http://www.w3.org/XML/1998/namespace.\n" }, { "name" : "err:XQDY0054", "type" : "xs:QName", "description" : " It is a dynamic error if a cycle is encountered in the definition of a\n module's dynamic context components, for example because of a cycle in\n variable declarations.\n" }, { "name" : "err:XQDY0061", "type" : "xs:QName", "description" : " It is a dynamic error if the operand of a validate expression is a\n document node whose children do not consist of exactly one element node\n and zero or more comment and processing instruction nodes, in any order.\n" }, { "name" : "err:XQDY0064", "type" : "xs:QName", "description" : " It is a dynamic error if the value of the name expression in a computed\n processing instruction constructor is equal to \"XML\" (in any combination\n of upper and lower case).\n" }, { "name" : "err:XQST0127", "type" : "xs:QName", "description" : " It is a static error if a given feature is both required and prohibited, directly or indirectly, in a module.\n" }, { "name" : "err:XQDY0074", "type" : "xs:QName", "description" : " It is a dynamic error if the value of the name expression in a computed\n element or attribute constructor cannot be converted to an expanded\n QName (for example, because it contains a namespace prefix not found in\n statically known namespaces).\n" }, { "name" : "err:XQDY0084", "type" : "xs:QName", "description" : " It is a dynamic error if the element validated by a \\c validate statement\n does not have a top-level element declaration in the in-scope element\n declarations, if validation mode is \\c strict.\n" }, { "name" : "err:XQDY0091", "type" : "xs:QName", "description" : " An implementation MAY raise a dynamic error if an \\c xml:id error, as\n defined in [XML ID], is encountered during construction of an attribute\n named \\c xml:id.\n" }, { "name" : "err:XQDY0092", "type" : "xs:QName", "description" : " An implementation MAY raise a dynamic error if a constructed attribute\n named \\c xml:space has a value other than \\c preserve or \\c default.\n" }, { "name" : "err:XQDY0096", "type" : "xs:QName", "description" : " It is a dynamic error the node-name of a node constructed by a computed\n element constructor has any of the following properties:\n - Its namespace prefix is \\c xmlns.\n - Its namespace URI is http://www.w3.org/2000/xmlns/.\n - Its namespace prefix is \\c xml and its namespace URI is not\n http://www.w3.org/XML/1998/namespace.\n - Its namespace prefix is other than \\c xml and its namespace URI is\n http://www.w3.org/XML/1998/namespace.\n" }, { "name" : "err:XQDY0101", "type" : "xs:QName", "description" : " Invalid prefix and/or uri in computed namespace constructor\n" }, { "name" : "err:XQDY0102", "type" : "xs:QName", "description" : " In an element constructor, if two or more namespace bindings in the in-scope bindings would have the same prefix, then an error is raised if they have different URIs; if they would have the same prefix and URI, duplicate bindings are ignored.\n" }, { "name" : "err:XTDE1310", "type" : "xs:QName", "description" : " It is a non-recoverable dynamic error if the picture string does not\n satisfy the format-number function rules.\n" }, { "name" : "err:FOFD1340", "type" : "xs:QName", "description" : " It is a non-recoverable dynamic error if the $picture, $language,\n $calendar, or $place argument for fn:format-date, fn:format-time, or\n fn:format-dateTime is invalid.\n" }, { "name" : "err:FOFD1350", "type" : "xs:QName", "description" : " It is a non-recoverable dynamic error if a component specifier within\n the picture refers to components that are not available in the given\n type of $value.\n" }, { "name" : "err:FTST0008", "type" : "xs:QName", "description" : " It is a static error if, during the static analysis phase, the query is\n found to contain a stop word option that refers to a stop word list that\n is not found in the statically known stop word lists.\n" }, { "name" : "err:XQST0098", "type" : "xs:QName", "description" : " It is a static error if, for any named or unnamed decimal format, the\n properties representing characters used in a picture string do not each\n have distinct values. These properties are decimal-separator-sign,\n grouping-separator, percent-sign, per-mille-sign, zero-digit,\n digit-sign, and pattern-separator-sign.\n" }, { "name" : "err:XQST0071", "type" : "xs:QName", "description" : " A static error is raised if the namespace declaration attributes of a\n direct element constructor do not have distinct names.\n" }, { "name" : "err:XQST0076", "type" : "xs:QName", "description" : " It is a static error if a \\c collation subclause in an order by clause\n of a FLWOR expression does not identify a collation that is present in\n statically known collations.\n" }, { "name" : "err:XQST0079", "type" : "xs:QName", "description" : " It is a static error if an extension expression contains neither a\n pragma that is recognized by the implementation nor an expression\n enclosed in curly braces.\n" }, { "name" : "err:XQST0085", "type" : "xs:QName", "description" : " It is a static error if the namespace URI in a namespace declaration\n attribute is a zero-length string, and the implementation does not\n support [XML Names 1.1].\n" }, { "name" : "err:XQST0087", "type" : "xs:QName", "description" : " It is a static error if the encoding specified in a Version Declaration\n does not conform to the definition of \\c EncName specified in [XML 1.0]\n" }, { "name" : "err:XQST0088", "type" : "xs:QName", "description" : " It is a static error if the literal that specifies the target namespace\n in a module import or a module declaration is of zero length.\n" }, { "name" : "err:XQST0089", "type" : "xs:QName", "description" : " It is a static error if a variable bound in a \\c for or \\c window clause\n of a FLWOR expression, and its associated positional variable, do not\n have distinct names (expanded QNames).\n" }, { "name" : "err:XQST0090", "type" : "xs:QName", "description" : " It is a static error if a character reference does not identify a valid\n character in the version of XML that is in use.\n" }, { "name" : "err:XQST0093", "type" : "xs:QName", "description" : " It is a static error to import a module M1 if there exists a sequence of\n modules M1 ... Mi ... M1 such that each module directly depends on the\n next module in the sequence (informally, if M1 depends on itself through\n some chain of module dependencies.)\n" }, { "name" : "err:XQST0094", "type" : "xs:QName", "description" : " In the group by clause of a FLWOR expression, it is a static error if the\n name of a grouping variable is not equal (by the eq operator on expanded\n QNames) to the name of a variable that is bound by a for or let clause\n that precedes the group by clause.\n" }, { "name" : "err:XQST0097", "type" : "xs:QName", "description" : " It is a static error for a decimal-format to specify a value that is\n not valid for a given property.\n" }, { "name" : "err:NS", "type" : "item()*", "description" : "" }, { "name" : "err:XQST0099", "type" : "xs:QName", "description" : " If a module contains more than one context item declaration, a static error is raised [err:XQST0099].\n" }, { "name" : "err:XQST0103", "type" : "xs:QName", "description" : " All variables in a window clause must have distinct names.\n" }, { "name" : "err:XQST0106", "type" : "xs:QName", "description" : " It is a static error if a function's annotations contain more than one\n annotation named \\c private or \\c public.  It is a static error if a\n function's annotations contain more than one annotation named \\c\n deterministic or \\c nondeterministic.\n" }, { "name" : "err:XQST0111", "type" : "xs:QName", "description" : " It is a static error for a query prolog to contain two decimal formats\n with the same name, or to contain two default decimal formats.\n" }, { "name" : "err:XQST0113", "type" : "xs:QName", "description" : " Specifying a VarValue or VarDefaultValue for a context item declaration\n in a library module is a static error.\n" }, { "name" : "err:XQST0114", "type" : "xs:QName", "description" : " It is a static error for a decimal format declaration to define the\n same property more than once.\n" }, { "name" : "err:XQST0116", "type" : "xs:QName", "description" : " It is a static error if a variable declaration contains both a %private\n and a %public annotation, more than one %private annotation, or more\n than one %public annotation.\n" }, { "name" : "err:XQST0120", "type" : "xs:QName", "description" : " It is a static error if a feature required by require-feature is not\n supported by the implementation.\n" }, { "name" : "err:XQST0122", "type" : "xs:QName", "description" : " It is a static error if the name of a feature in require-feature or\n prohibit-feature is not in the lexical space of QName.\n" }, { "name" : "err:XQST0123", "type" : "xs:QName", "description" : " It is a static error if the name of a feature in require-feature is not\n recognized by the implementation.\n" }, { "name" : "err:XQST0126", "type" : "xs:QName", "description" : " It is a static error if all-extensions appears in a require-feature option declaration.\n" } ] }, "http://zorba.io/modules/excel/math" : { "ns" : "http://zorba.io/modules/excel/math", "description" : " This is a library module offering a part of the set of functions\n defined by Microsoft Excel 2003.\n", "sees" : [ "<xqdoc:see xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"><a href=\"http://office.microsoft.com/en-us/excel/CH062528291033.aspx\" target=\"_blank\">Excel 2003 Documentation: Math Functions</a></xqdoc:see>" ], "authors" : [ "<xqdoc:author xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">Daniel Turcanu</xqdoc:author>" ], "version" : null, "encoding" : "utf-8", "namespaces" : [ { "uri" : "http://zorba.io/modules/excel/math", "prefix" : "excel" }, { "uri" : "http://zorba.io/modules/excel/errors", "prefix" : "excel-err" }, { "uri" : "http://zorba.io/options/versioning", "prefix" : "ver" } ], "functions" : [ { "isDocumented" : true, "arity" : 1, "name" : "abs", "qname" : "excel:abs", "signature" : "($arg as xs:anyAtomicType) as xs:anyAtomicType", "description" : " Compute the abs of a numeric value.\n The value can also be a string and it will be casted to the appropriate numeric first.\n", "summary" : "<p> Compute the abs of a numeric value.</p>", "annotation_str" : "", "annotations" : [  ], "updating" : false, "parameters" : [ { "name" : "arg", "type" : "xs:anyAtomicType", "occurrence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> The parameter can be a number, string, boolean value.</div>" } ], "returns" : { "type" : "xs:anyAtomicType", "description" : "The abs value as a numeric type." }, "errors" : [ "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">excel-err:Value if arg cannot be casted to numeric type.</xqdoc:error>" ] }, { "isDocumented" : true, "arity" : 1, "name" : "cast-as-numeric", "qname" : "excel:cast-as-numeric", "signature" : "($number as xs:anyAtomicType) as xs:anyAtomicType", "description" : " Cast the xs:anyAtomicType to a numeric type.\n If the value is already of a numeric type then nothing is changed.\n Otherwise the value is casted to the numeric type that is most appropriate.\n", "summary" : "<p> Cast the xs:anyAtomicType to a numeric type.</p>", "annotation_str" : "", "annotations" : [  ], "updating" : false, "parameters" : [ { "name" : "number", "type" : "xs:anyAtomicType", "occurrence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> The parameter can be a number, string, boolean value.</div>" } ], "returns" : { "type" : "xs:anyAtomicType", "description" : "The casted value." }, "errors" : [ "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">excel-err:Value if the value cannot be casted to numeric type.</xqdoc:error>" ] }, { "isDocumented" : true, "arity" : 2, "name" : "ceiling", "qname" : "excel:ceiling", "signature" : "($number as xs:anyAtomicType, $significance as xs:anyAtomicType) as xs:anyAtomicType", "description" : " Returns number rounded up, away from zero, to the nearest multiple of significance.\n Significance must have the same sign as number.\n Number and significance must be of a numeric type or castable to numeric.\n Significance must not be zero.\n", "summary" : "<p> Returns number rounded up, away from zero, to the nearest multiple of significance.</p>", "annotation_str" : "", "annotations" : [  ], "updating" : false, "parameters" : [ { "name" : "number", "type" : "xs:anyAtomicType", "occurrence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> The value you want to round.</div>" }, { "name" : "significance", "type" : "xs:anyAtomicType", "occurrence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> The multiple to which you want to round.</div>" } ], "returns" : { "type" : "xs:anyAtomicType", "description" : "The rounded value." }, "errors" : [ "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">excel-err:Value if parameters cannot be casted to numeric type.</xqdoc:error>", "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">excel-err:Num if significance is zero or it doesn't have the same sign as number.</xqdoc:error>" ] }, { "isDocumented" : true, "arity" : 1, "name" : "degrees", "qname" : "excel:degrees", "signature" : "($radian as xs:double) as xs:integer", "description" : " Converts radians into degrees.\n", "summary" : "<p> Converts radians into degrees.</p>", "annotation_str" : "", "annotations" : [  ], "updating" : false, "parameters" : [ { "name" : "radian", "type" : "xs:double", "occurrence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> The value in radians.</div>" } ], "returns" : { "type" : "xs:integer", "description" : "The value in degrees 0 .. 360 or 0 .. -360." }, "errors" : [  ] }, { "isDocumented" : true, "arity" : 1, "name" : "even", "qname" : "excel:even", "signature" : "($number as xs:anyAtomicType) as xs:anyAtomicType", "description" : " Returns number rounded up to the nearest even integer.\n Regardless of the sign of number, a value is rounded up when adjusted away from zero.\n", "summary" : "<p> Returns number rounded up to the nearest even integer.</p>", "annotation_str" : "", "annotations" : [  ], "updating" : false, "parameters" : [ { "name" : "number", "type" : "xs:anyAtomicType", "occurrence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> The value to round.</div>" } ], "returns" : { "type" : "xs:anyAtomicType", "description" : "The rounded value casted as numeric type." }, "errors" : [ "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">excel-err:Value if parameters cannot be casted to numeric type.</xqdoc:error>" ] }, { "isDocumented" : true, "arity" : 1, "name" : "fact", "qname" : "excel:fact", "signature" : "($number as xs:anyAtomicType) as xs:integer", "description" : " Returns the factorial of a number.\n", "summary" : "<p> Returns the factorial of a number.</p>", "annotation_str" : "", "annotations" : [  ], "updating" : false, "parameters" : [ { "name" : "number", "type" : "xs:anyAtomicType", "occurrence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> The nonnegative number you want the factorial of. If number is not an integer, it is truncated.</div>" } ], "returns" : { "type" : "xs:integer", "description" : "Returns the factorial of a number. The factorial of a number is equal to 1*2*3*...* number." }, "errors" : [ "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">excel-err:Num if the number is smaller than zero</xqdoc:error>" ] }, { "isDocumented" : true, "arity" : 1, "name" : "factdouble", "qname" : "excel:factdouble", "signature" : "($number as xs:integer) as xs:integer", "description" : " Returns the double factorial of a number.\n Computes the double factorial of n as n(n-2)(n-4)...\n", "summary" : "<p> Returns the double factorial of a number.</p>", "annotation_str" : "", "annotations" : [  ], "updating" : false, "parameters" : [ { "name" : "number", "type" : "xs:integer", "occurrence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> The positive integer value.</div>" } ], "returns" : { "type" : "xs:integer", "description" : "The result as integer." }, "errors" : [ "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">excel-err:Num if the number is negative.</xqdoc:error>" ] }, { "isDocumented" : true, "arity" : 2, "name" : "floor", "qname" : "excel:floor", "signature" : "($number as xs:anyAtomicType, $significance as xs:anyAtomicType) as xs:anyAtomicType", "description" : " Rounds number down, toward zero, to the nearest multiple of significance.\n Significance must have the same sign as number.\n", "summary" : "<p> Rounds number down, toward zero, to the nearest multiple of significance.</p>", "annotation_str" : "", "annotations" : [  ], "updating" : false, "parameters" : [ { "name" : "number", "type" : "xs:anyAtomicType", "occurrence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> The value you want to round. The value is casted to numeric.</div>" }, { "name" : "significance", "type" : "xs:anyAtomicType", "occurrence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> The multiple to which you want to round.</div>" } ], "returns" : { "type" : "xs:anyAtomicType", "description" : "The rounded value as numeric type." }, "errors" : [ "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">excel-err:Value if parameters cannot be casted to numeric type.</xqdoc:error>", "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">excel-err:Num if significance is zero or it doesn't have the same sign as number.</xqdoc:error>" ] }, { "isDocumented" : true, "arity" : 1, "name" : "gcd", "qname" : "excel:gcd", "signature" : "($numbers as xs:integer+) as xs:integer", "description" : " Returns the greatest common divisor GCD of a sequence of integers.\n The sequence can have one or more positive integers.\n", "summary" : "<p> Returns the greatest common divisor GCD of a sequence of integers.</p>", "annotation_str" : "", "annotations" : [  ], "updating" : false, "parameters" : [ { "name" : "numbers", "type" : "xs:integer", "occurrence" : "+", "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> The sequence of positive integers.</div>" } ], "returns" : { "type" : "xs:integer", "description" : "The GCD as integer." }, "errors" : [ "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">excel-err:Num if any number is smaller than zero.</xqdoc:error>" ] }, { "isDocumented" : true, "arity" : 1, "name" : "int", "qname" : "excel:int", "signature" : "($number as xs:anyAtomicType) as xs:integer", "description" : " Rounds a number down to the nearest integer.\n Positive numbers are rounded toward zero, negative numbers are rounded away from zero.\n", "summary" : "<p> Rounds a number down to the nearest integer.</p>", "annotation_str" : "", "annotations" : [  ], "updating" : false, "parameters" : [ { "name" : "number", "type" : "xs:anyAtomicType", "occurrence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> The value to be rounded.</div>" } ], "returns" : { "type" : "xs:integer", "description" : "The rounded integer." }, "errors" : [ "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">excel-err:Value if parameter cannot be casted to numeric type</xqdoc:error>" ] }, { "isDocumented" : true, "arity" : 1, "name" : "is-a-number", "qname" : "excel:is-a-number", "signature" : "($value as xs:anyAtomicType) as xs:boolean", "description" : " Checks if the xs:anyAtomicType argument is actually a numeric type\n or can be converted to numeric.\n", "summary" : "<p> Checks if the xs:anyAtomicType argument is actually a numeric type\n or can be converted to numeric.</p>", "annotation_str" : "", "annotations" : [  ], "updating" : false, "parameters" : [ { "name" : "value", "type" : "xs:anyAtomicType", "occurrence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> Parameter to be checked.</div>" } ], "returns" : { "type" : "xs:boolean", "description" : "true if the value can be casted to numeric." }, "errors" : [  ] }, { "isDocumented" : true, "arity" : 1, "name" : "lcm", "qname" : "excel:lcm", "signature" : "($numbers as xs:integer+) as xs:integer", "description" : " Returns the least common multiple of integers.<p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"/>\n LCM for two numbers is computed by multiplying them and dividing with GCD. <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"/>\n The function is applied recursively replacing the first two numbers in the sequence with their LCM.\n", "summary" : "<p> Returns the least common multiple of integers.</p>", "annotation_str" : "", "annotations" : [  ], "updating" : false, "parameters" : [ { "name" : "numbers", "type" : "xs:integer", "occurrence" : "+", "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> The sequence of one or more positive integers.</div>" } ], "returns" : { "type" : "xs:integer", "description" : "The LCM as integer." }, "errors" : [ "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">excel-err:Num if any number is smaller than zero.</xqdoc:error>" ] }, { "isDocumented" : true, "arity" : 2, "name" : "mod", "qname" : "excel:mod", "signature" : "($number as xs:anyAtomicType, $divisor as xs:anyAtomicType) as xs:anyAtomicType", "description" : " Returns the remainder after number is divided by divisor.\n The result has the same sign as divisor.\n", "summary" : "<p> Returns the remainder after number is divided by divisor.</p>", "annotation_str" : "", "annotations" : [  ], "updating" : false, "parameters" : [ { "name" : "number", "type" : "xs:anyAtomicType", "occurrence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> The number for which you want to find the remainder.</div>" }, { "name" : "divisor", "type" : "xs:anyAtomicType", "occurrence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> The number by which you want to divide number. This cannot be zero.</div>" } ], "returns" : { "type" : "xs:anyAtomicType", "description" : "The remainder from division as numeric type." }, "errors" : [ "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">excel-err:Value if parameters cannot be casted to numeric type.</xqdoc:error>", "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">excel-err:Div0 if divisor is zero after casting to numeric.</xqdoc:error>" ] }, { "isDocumented" : true, "arity" : 2, "name" : "mround", "qname" : "excel:mround", "signature" : "($number as xs:anyAtomicType, $multiple as xs:anyAtomicType) as xs:anyAtomicType", "description" : " Returns a number rounded to the desired multiple.\n MROUND rounds up, away from zero, if the remainder of dividing number by multiple\n is greater than or equal to half the value of multiple.\n MROUND is computed through floor function.\n", "summary" : "<p> Returns a number rounded to the desired multiple.</p>", "annotation_str" : "", "annotations" : [  ], "updating" : false, "parameters" : [ { "name" : "number", "type" : "xs:anyAtomicType", "occurrence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> The value to round, castable to numeric type.</div>" }, { "name" : "multiple", "type" : "xs:anyAtomicType", "occurrence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> The multiple to which you want to round number.</div>" } ], "returns" : { "type" : "xs:anyAtomicType", "description" : "The rounded number up to the desired multiple." }, "errors" : [ "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">excel-err:Value if parameters cannot be casted to numeric type.</xqdoc:error>" ] }, { "isDocumented" : true, "arity" : 1, "name" : "odd", "qname" : "excel:odd", "signature" : "($number as xs:anyAtomicType) as xs:integer", "description" : " Returns number rounded up to the nearest odd integer, away from zero.\n", "summary" : "<p> Returns number rounded up to the nearest odd integer, away from zero.</p>", "annotation_str" : "", "annotations" : [  ], "updating" : false, "parameters" : [ { "name" : "number", "type" : "xs:anyAtomicType", "occurrence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> The value to round.</div>" } ], "returns" : { "type" : "xs:integer", "description" : "The odd integer." }, "errors" : [ "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">excel-err:Value if parameter cannot be casted to numeric type.</xqdoc:error>" ] }, { "isDocumented" : true, "arity" : 0, "name" : "pi", "qname" : "excel:pi", "signature" : "() as xs:decimal", "description" : " Return the value of PI as decimal with 15 digits.\n", "summary" : "<p> Return the value of PI as decimal with 15 digits.</p>", "annotation_str" : "", "annotations" : [  ], "updating" : false, "parameters" : [  ], "returns" : { "type" : "xs:decimal", "description" : "The value of PI with 15 digits." }, "errors" : [  ] }, { "isDocumented" : true, "arity" : 2, "name" : "power", "qname" : "excel:power", "signature" : "($number as xs:anyAtomicType, $power as xs:integer) as xs:anyAtomicType", "description" : " Returns the result of a number raised to a power.\n The result is computed through successive multiplications.\n", "summary" : "<p> Returns the result of a number raised to a power.</p>", "annotation_str" : "", "annotations" : [  ], "updating" : false, "parameters" : [ { "name" : "number", "type" : "xs:anyAtomicType", "occurrence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> The base number.</div>" }, { "name" : "power", "type" : "xs:integer", "occurrence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> The exponent as integer (cannot be floating point like in Excel).</div>" } ], "returns" : { "type" : "xs:anyAtomicType", "description" : "The result as numeric type." }, "errors" : [ "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">excel-err:Value if parameter cannot be casted to numeric type.</xqdoc:error>", "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">excel-err:Value if power is smaller than zero.</xqdoc:error>" ] }, { "isDocumented" : true, "arity" : 1, "name" : "product", "qname" : "excel:product", "signature" : "($numbers as xs:anyAtomicType*) as xs:anyAtomicType", "description" : " Multiplies all the numbers given as arguments and returns the product.\n", "summary" : "<p> Multiplies all the numbers given as arguments and returns the product.</p>", "annotation_str" : "", "annotations" : [  ], "updating" : false, "parameters" : [ { "name" : "numbers", "type" : "xs:anyAtomicType", "occurrence" : "*", "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> The sequence of arguments convertable to numeric types. The sequence can be of any length.</div>" } ], "returns" : { "type" : "xs:anyAtomicType", "description" : "The multiplication result as numeric type." }, "errors" : [ "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">excel-err:Value if parameters cannot be casted to numeric type.</xqdoc:error>" ] }, { "isDocumented" : true, "arity" : 2, "name" : "quotient", "qname" : "excel:quotient", "signature" : "($numerator as xs:anyAtomicType, $denominator as xs:anyAtomicType) as xs:integer", "description" : " Returns the integer portion of a division.\n", "summary" : "<p> Returns the integer portion of a division.</p>", "annotation_str" : "", "annotations" : [  ], "updating" : false, "parameters" : [ { "name" : "numerator", "type" : "xs:anyAtomicType", "occurrence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> The divident.</div>" }, { "name" : "denominator", "type" : "xs:anyAtomicType", "occurrence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> The divisor. It cannot be zero.</div>" } ], "returns" : { "type" : "xs:integer", "description" : "The result value as numeric type." }, "errors" : [ "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">excel-err:Value if parameters cannot be casted to numeric type.</xqdoc:error>", "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">excel-err:Div0 if denominator casted as numeric type has value zero.</xqdoc:error>" ] }, { "isDocumented" : true, "arity" : 1, "name" : "radians", "qname" : "excel:radians", "signature" : "($degree as xs:integer) as xs:decimal", "description" : " Converts degrees to radians.\n", "summary" : "<p> Converts degrees to radians.</p>", "annotation_str" : "", "annotations" : [  ], "updating" : false, "parameters" : [ { "name" : "degree", "type" : "xs:integer", "occurrence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> An angle in degrees that you want to convert.</div>" } ], "returns" : { "type" : "xs:decimal", "description" : "The value in radians." }, "errors" : [  ] }, { "isDocumented" : true, "arity" : 1, "name" : "roman", "qname" : "excel:roman", "signature" : "($number as xs:integer) as xs:string", "description" : " Converts an arabic numeral to roman, as text.\n Only the clasic format is supported (out of all formats Excel requires).<p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"/>\n M is the largest digit, it represents 1000.\n Numbers bigger than 2000 will be represented by a sequence of \"M\".<p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"/>\n D = 500, C = 100, L = 50, X = 10, V = 5, I = 1.\n", "summary" : "<p> Converts an arabic numeral to roman, as text.</p>", "annotation_str" : "", "annotations" : [  ], "updating" : false, "parameters" : [ { "name" : "number", "type" : "xs:integer", "occurrence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> A positive integer.</div>" } ], "returns" : { "type" : "xs:string", "description" : "The roman string representation." }, "errors" : [ "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">excel-err:Num if the input integer is negative</xqdoc:error>" ] }, { "isDocumented" : true, "arity" : 2, "name" : "round", "qname" : "excel:round", "signature" : "($number as xs:anyAtomicType, $precision as xs:integer) as xs:anyAtomicType", "description" : " Rounds a number to a specified number of digits.\n If precision is greater than 0 (zero), then number is rounded\n to the specified number of decimal places.\n If num_digits is 0, then number is rounded to the nearest integer.\n If num_digits is less than 0, then number is rounded to the left of the decimal point.\n The 0.5 is rounded away from zero.\n", "summary" : "<p> Rounds a number to a specified number of digits.</p>", "annotation_str" : "", "annotations" : [  ], "updating" : false, "parameters" : [ { "name" : "number", "type" : "xs:anyAtomicType", "occurrence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> The number to round, castable to a numeric type.</div>" }, { "name" : "precision", "type" : "xs:integer", "occurrence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> The number of decimal places to keep.</div>" } ], "returns" : { "type" : "xs:anyAtomicType", "description" : "The rounded number as numeric type." }, "errors" : [ "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">excel-err:Value if parameters cannot be casted to numeric type.</xqdoc:error>" ] }, { "isDocumented" : true, "arity" : 2, "name" : "rounddown", "qname" : "excel:rounddown", "signature" : "($number as xs:anyAtomicType, $precision as xs:integer) as xs:anyAtomicType", "description" : " Rounds a number down, toward zero.\n If num_digits is greater than 0 (zero), then number is rounded down\n to the specified number of decimal places.\n If num_digits is 0, then number is rounded down to the nearest integer.\n If num_digits is less than 0, then number is rounded down to the left of the decimal point.\n", "summary" : "<p> Rounds a number down, toward zero.</p>", "annotation_str" : "", "annotations" : [  ], "updating" : false, "parameters" : [ { "name" : "number", "type" : "xs:anyAtomicType", "occurrence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> The number to round, castable to numeric type.</div>" }, { "name" : "precision", "type" : "xs:integer", "occurrence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> The number of decimal places to keep.</div>" } ], "returns" : { "type" : "xs:anyAtomicType", "description" : "the truncated number toward zero, as numeric type." }, "errors" : [ "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">excel-err:Value if parameters cannot be casted to numeric type.</xqdoc:error>" ] }, { "isDocumented" : true, "arity" : 2, "name" : "roundup", "qname" : "excel:roundup", "signature" : "($number as xs:anyAtomicType, $precision as xs:integer) as xs:anyAtomicType", "description" : " Rounds a number up, away from 0 (zero).\n If num_digits is greater than 0 (zero), then number is rounded down\n to the specified number of decimal places.\n If num_digits is 0, then number is rounded down to the nearest integer.\n If num_digits is less than 0, then number is rounded down to the left of the decimal point.\n", "summary" : "<p> Rounds a number up, away from 0 (zero).</p>", "annotation_str" : "", "annotations" : [  ], "updating" : false, "parameters" : [ { "name" : "number", "type" : "xs:anyAtomicType", "occurrence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> The number to round, castable to numeric type.</div>" }, { "name" : "precision", "type" : "xs:integer", "occurrence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> The number of decimal places to keep.</div>" } ], "returns" : { "type" : "xs:anyAtomicType", "description" : "The truncated number away from zero, as numeric type." }, "errors" : [ "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">excel-err:Value if parameters cannot be casted to numeric type.</xqdoc:error>" ] }, { "isDocumented" : true, "arity" : 1, "name" : "sign", "qname" : "excel:sign", "signature" : "($number as xs:anyAtomicType) as xs:integer", "description" : " Determines the sign of a number.\n Returns 1 if the number is positive, zero (0) if the number is 0,\n and -1 if the number is negative.\n", "summary" : "<p> Determines the sign of a number.</p>", "annotation_str" : "", "annotations" : [  ], "updating" : false, "parameters" : [ { "name" : "number", "type" : "xs:anyAtomicType", "occurrence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> The argument castable to numeric type.</div>" } ], "returns" : { "type" : "xs:integer", "description" : "The sign as (-1, 0, 1)." }, "errors" : [ "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">excel-err:Value if parameters cannot be casted to numeric type.</xqdoc:error>" ] }, { "isDocumented" : true, "arity" : 1, "name" : "sort-numbers", "qname" : "excel:sort-numbers", "signature" : "($numbers as xs:anyAtomicType*) as xs:anyAtomicType*", "description" : " Helper function.<p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"/>\n Sorts a sequence of numbers or arguments castable to numeric.\n It first casts all arguments to numeric and then sorts ascending.\n", "summary" : "<p> Helper function.</p>", "annotation_str" : "", "annotations" : [  ], "updating" : false, "parameters" : [ { "name" : "numbers", "type" : "xs:anyAtomicType", "occurrence" : "*", "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> The sequence of arguments castable to numeric.</div>" } ], "returns" : { "type" : "xs:anyAtomicType*", "description" : "The sorted sequence as numeric types." }, "errors" : [ "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">excel-err:Value if parameters cannot be casted to numeric type.</xqdoc:error>" ] }, { "isDocumented" : true, "arity" : 1, "name" : "sum", "qname" : "excel:sum", "signature" : "($numbers as xs:anyAtomicType*) as xs:anyAtomicType", "description" : " Adds all the numbers in the sequence.\n", "summary" : "<p> Adds all the numbers in the sequence.</p>", "annotation_str" : "", "annotations" : [  ], "updating" : false, "parameters" : [ { "name" : "numbers", "type" : "xs:anyAtomicType", "occurrence" : "*", "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> The sequence of arguments castable to numeric types. The sequence can be of any length.</div>" } ], "returns" : { "type" : "xs:anyAtomicType", "description" : "The sum as numeric type." }, "errors" : [ "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">excel-err:Value if parameters cannot be casted to numeric type.</xqdoc:error>" ] }, { "isDocumented" : true, "arity" : 1, "name" : "trunc", "qname" : "excel:trunc", "signature" : "($number as xs:anyAtomicType) as xs:integer", "description" : " Truncates a number to an integer by removing the fractional part of the number.\n", "summary" : "<p> Truncates a number to an integer by removing the fractional part of the number.</p>", "annotation_str" : "", "annotations" : [  ], "updating" : false, "parameters" : [ { "name" : "number", "type" : "xs:anyAtomicType", "occurrence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> The argument castable to numeric type.</div>" } ], "returns" : { "type" : "xs:integer", "description" : "The integer value." }, "errors" : [ "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">excel-err:Value if parameter cannot be casted to numeric type.</xqdoc:error>" ] }, { "isDocumented" : true, "arity" : 2, "name" : "trunc", "qname" : "excel:trunc", "signature" : "($number as xs:anyAtomicType, $precision as xs:integer) as xs:anyAtomicType", "description" : " Truncates a number down to precision.\n This behaves exactly like rounddown.\n", "summary" : "<p> Truncates a number down to precision.</p>", "annotation_str" : "", "annotations" : [  ], "updating" : false, "parameters" : [ { "name" : "number", "type" : "xs:anyAtomicType", "occurrence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> The argument castable to numeric type.</div>" }, { "name" : "precision", "type" : "xs:integer", "occurrence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> The number of decimal places to keep .</div>" } ], "returns" : { "type" : "xs:anyAtomicType", "description" : "The integer value." }, "errors" : [ "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">excel-err:Value if parameter cannot be casted to numeric type.</xqdoc:error>" ] } ], "variables" : [  ] }, "http://api.28.io/browserview" : { "ns" : "http://api.28.io/browserview", "description" : "", "sees" : [  ], "authors" : [  ], "version" : null, "encoding" : null, "namespaces" : [ { "uri" : "", "prefix" : "an" }, { "uri" : "http://api.28.io/browserview", "prefix" : "browserview" }, { "uri" : "http://api.28.io/model", "prefix" : "model" }, { "uri" : "http://zorba.io/modules/reference", "prefix" : "ref" } ], "functions" : [ { "isDocumented" : false, "arity" : 1, "name" : "node-path", "qname" : "browserview:node-path", "signature" : "($node)", "description" : "", "summary" : "", "annotation_str" : "", "annotations" : [  ], "updating" : false, "parameters" : [ { "name" : "node", "type" : null, "occurrence" : null, "description" : "" } ], "returns" : { "type" : null, "description" : "" }, "errors" : [  ] }, { "isDocumented" : false, "arity" : 2, "name" : "node-reference", "qname" : "browserview:node-reference", "signature" : "($node, $short as xs:boolean)", "description" : "", "summary" : "", "annotation_str" : "", "annotations" : [  ], "updating" : false, "parameters" : [ { "name" : "node", "type" : null, "occurrence" : null, "description" : "" }, { "name" : "short", "type" : "xs:boolean", "occurrence" : null, "description" : "" } ], "returns" : { "type" : null, "description" : "" }, "errors" : [  ] }, { "isDocumented" : false, "arity" : 1, "name" : "serialize", "qname" : "browserview:serialize", "signature" : "($json)", "description" : "", "summary" : "", "annotation_str" : "", "annotations" : [  ], "updating" : false, "parameters" : [ { "name" : "json", "type" : null, "occurrence" : null, "description" : "" } ], "returns" : { "type" : null, "description" : "" }, "errors" : [  ] }, { "isDocumented" : false, "arity" : 1, "name" : "serializeMulti", "qname" : "browserview:serializeMulti", "signature" : "($json)", "description" : "", "summary" : "", "annotation_str" : "", "annotations" : [  ], "updating" : false, "parameters" : [ { "name" : "json", "type" : null, "occurrence" : null, "description" : "" } ], "returns" : { "type" : null, "description" : "" }, "errors" : [  ] }, { "isDocumented" : false, "arity" : 1, "name" : "show-namespaces", "qname" : "browserview:show-namespaces", "signature" : "($namespaces)", "description" : "", "summary" : "", "annotation_str" : "", "annotations" : [  ], "updating" : false, "parameters" : [ { "name" : "namespaces", "type" : null, "occurrence" : null, "description" : "" } ], "returns" : { "type" : null, "description" : "" }, "errors" : [  ] }, { "isDocumented" : false, "arity" : 3, "name" : "show-node", "qname" : "browserview:show-node", "signature" : "($node, $namespaces, $short as xs:boolean)", "description" : "", "summary" : "", "annotation_str" : " %an:sequential", "annotations" : [ { "prefix" : "an", "ns" : "", "name" : "sequential", "value" : "" } ], "updating" : false, "parameters" : [ { "name" : "node", "type" : null, "occurrence" : null, "description" : "" }, { "name" : "namespaces", "type" : null, "occurrence" : null, "description" : "" }, { "name" : "short", "type" : "xs:boolean", "occurrence" : null, "description" : "" } ], "returns" : { "type" : null, "description" : "" }, "errors" : [  ] }, { "isDocumented" : false, "arity" : 1, "name" : "show-nodes", "qname" : "browserview:show-nodes", "signature" : "($nodes)", "description" : "", "summary" : "", "annotation_str" : " %an:sequential", "annotations" : [ { "prefix" : "an", "ns" : "", "name" : "sequential", "value" : "" } ], "updating" : false, "parameters" : [ { "name" : "nodes", "type" : null, "occurrence" : null, "description" : "" } ], "returns" : { "type" : null, "description" : "" }, "errors" : [  ] } ], "variables" : [  ] }, "http://zorba.io/modules/json-csv" : { "ns" : "http://zorba.io/modules/json-csv", "description" : " This module provides an API for parsing and serializing CSV (comma-separated\n values) files.\n See RFC 4180,\n \"Common Format and MIME Type for Comma-Separated Values (CSV) Files.\"\n", "sees" : [  ], "authors" : [ "<xqdoc:author xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">Paul J. Lucas</xqdoc:author>" ], "version" : null, "encoding" : "utf-8", "namespaces" : [ { "uri" : "http://zorba.io/modules/json-csv", "prefix" : "csv" }, { "uri" : "http://zorba.io/options/versioning", "prefix" : "ver" } ], "functions" : [ { "isDocumented" : true, "arity" : 1, "name" : "parse", "qname" : "csv:parse", "signature" : "($csv as string) as object()*", "description" : " Parses a CSV (comma-separated values) string using the default options.\n A newline (U+000A), optionally preceeded by a carriage-return (U+000D),\n terminates lines, aka, \"records.\"\n <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"/>\n Quoted values are always considered strings;\n unquoted values are attempted to be cast to other types, e.g., integer\n (unless the <code xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">cast-unquoted-values</code> option is <code xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">false</code>).\n Casting is attempted in the following order:\n integer, decimal, double, and boolean.\n If casting fails, the value is considered a string.\n Header field names are always considered strings even if unquoted.\n <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"/>\n In addition to the \"normal\" values of\n <code xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">true</code> and <code xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">false</code> for boolean,\n <code xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">T</code> and <code xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">Y</code> are also considered \"true\"\n and <code xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">F</code> and <code xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">N</code> are also considered \"false.\"\n <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"/>\n The default options are:\n  <dl xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">\n    <dt><code>cast-unquoted-values</code></dt>\n      <dd>\n        Whether to attempt to cast unquoted values to\n        integer, decimal, double, or boolean;\n        default: <code>true</code>.\n      </dd>\n    <dt><code>extra-name</code></dt>\n      <dd>\n        The field name for extra values, if any;\n        default: none (error <code>csv:EXTRA_VALUE</code> is raised).\n      </dd>\n    <dt><code>field-names</code></dt>\n      <dd>\n        A JSON array of strings denoting field names;\n        default: none.\n        The first CSV line is assumed to be a header line\n        and the field names are taken from this line.\n      </dd>\n    <dt><code>missing-value</code></dt>\n      <dd>\n        What should happen when a missing value is detected;\n        default: <code>\"null\"</code>.\n        A \"missing\" value is one of:\n        <ul>\n          <li>Two consecutive <code>quote-char</code> characters.</li>\n          <li>A <code>quote-char</code> character as either the first\n              or last character on a line.</li>\n          <li>Fewer values than the number of field names.</li>\n        </ul>\n        When a missing value is detected,\n        the value is set to <code>null</code>.\n      </dd>\n    <dt><code>quote-char</code></dt>\n      <dd>\n        The single ASCII character that may be used to quote values;\n        default: <code>\"</code> (U+0022).\n      </dd>\n    <dt><code>quote-escape</code></dt>\n      <dd>\n        The single ASCII character used to escape <code>quote-char</code>;\n        default: same as <code>quote-char</code>.\n        This means that an escaped quote is doubled as <code>\"\"</code>.\n      </dd>\n    <dt><code>separator</code></dt>\n      <dd>\n        The single ASCII character used to separate values;\n        default: <code>,</code> (U+002C).\n      </dd>\n  </dl>\n", "summary" : "<p> Parses a CSV (comma-separated values) string using the default options.</p>", "annotation_str" : "", "annotations" : [  ], "updating" : false, "parameters" : [ { "name" : "csv", "type" : "string", "occurrence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> The CSV string to parse.</div>" } ], "returns" : { "type" : "object()*", "description" : "a sequence of zero or more JSON objects where each key is a field name and each value is a parsed value." }, "errors" : [ "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">csv:EXTRA_VALUE if an extra value is detected.</xqdoc:error>" ] }, { "isDocumented" : true, "arity" : 2, "name" : "parse", "qname" : "csv:parse", "signature" : "($csv as string, $options as object()) as object()* external", "description" : " Parses a CSV (comma-separated values) string using the given options.\n A newline (U+000A), optionally preceeded by a carriage-return (U+000D),\n terminates lines, aka, \"records.\"\n <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"/>\n Quoted values are always considered strings;\n unquoted values are attempted to be cast to other types, e.g., integer\n (unless the <code xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">cast-unquoted-values</code> option is <code xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">false</code>).\n Casting is attempted in the following order:\n integer, decimal, double, and boolean.\n If casting fails, the value is considered a string.\n Header field names are always considered strings even if unquoted.\n <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"/>\n In addition to the \"normal\" values of\n <code xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">true</code> and <code xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">false</code> for boolean,\n <code xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">T</code> and <code xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">Y</code> are also considered \"true\"\n and <code xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">F</code> and <code xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">N</code> are also considered \"false.\"\n", "summary" : "<p> Parses a CSV (comma-separated values) string using the given options.</p>", "annotation_str" : "", "annotations" : [  ], "updating" : false, "parameters" : [ { "name" : "csv", "type" : "string", "occurrence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> The CSV string to parse.</div>" }, { "name" : "options", "type" : "object()", "occurrence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> The options to use: <dl> <dt><code>cast-unquoted-values</code></dt> <dd> Whether to attempt to cast unquoted values to integer, decimal, double, or boolean; default: <code>true</code>. </dd> <dt><code>extra-name</code></dt> <dd> The field name for extra values, if any; default: none (error <code>csv:EXTRA_VALUE</code> is raised). If this option is given and a line contains one or more extra values (that is, values that have no corresponding field names), then the extra values are assigned as the values for fields having <code>extra-name</code> as their names. <p/> If <code>extra-name</code> contains a <code>#</code> (U+0023), then the <code>#</code> is substituted with the field number (where field numbers start at 1). If <code>extra-name</code> does not contains a <code>#</code>, then the field number is appended. </dd> <dt><code>field-names</code></dt> <dd> A JSON array of strings denoting field names; default: none. If this option is given, then the first CSV line is assumed not to be a header line; if omitted, then the first CSV line is assumed to be a header line and the field names are taken from this line. </dd> <dt><code>missing-value</code></dt> <dd> What should happen when a missing value is detected; default: <code>\"null\"</code>. A \"missing\" value is one of: <ul> <li>Two consecutive <code>separator</code> characters.</li> <li>A <code>separator</code> character as either the first or last character on a line.</li> <li>Fewer values than the number of field names.</li> </ul> When a missing value is detected, the value of this option determines what happens: <dl> <dt><code>\"error\"</code></dt> <dd>Error <code>csv:MISSING_VALUE</code> is raised.</dd> <dt><code>\"omit\"</code></dt> <dd>Both the value and its key are omitted from the result object.</dd> <dt><code>\"null\"</code></dt> <dd>The value is set to <code>null</code>.</dd> </dl> </dd> <dt><code>quote-char</code></dt> <dd> The single ASCII character that may be used to quote values; default: <code>\"</code> (U+0022). </dd> <dt><code>quote-escape</code></dt> <dd> The single ASCII character used to escape <code>quote-char</code>; default: same as <code>quote-char</code>. If <code>quote-escape</code> equals <code>quote-char</code>, it means that <code>quote-char</code> must be doubled to escape it. If <code>quote-escape</code> does not equal <code>quote-char</code>, it means that <code>quote-escape</code> is used to escape <code>quote-char</code>. For example, a <code>quote-char</code> of <code>\"</code> (U+0022) and a <code>quote-escape</code> of <code>\\</code> (U+005C) means that quotes will be escaped by <code>\\\"</code>. </dd> <dt><code>separator</code></dt> <dd> The single ASCII character used to separate values; default: <code>,</code> (U+002C). </dd> </dl></div>" } ], "returns" : { "type" : "object()*", "description" : "a sequence of zero or more JSON objects where each key is a field name and each value is a parsed value." }, "errors" : [ "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">csv:INVALID_OPTION if the <code>quote-char</code>, <code>quote-escape</code>, or <code>separator</code> option is given and it's not a single ASCII character.</xqdoc:error>", "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">csv:MISSING_VALUE if a missing value is detected and the <code>missing-value</code> option is \"<code>error</code>\".</xqdoc:error>", "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">csv:EXTRA_VALUE if an extra value is detected and the <code>extra-name</code> option is not set.</xqdoc:error>" ] }, { "isDocumented" : true, "arity" : 1, "name" : "serialize", "qname" : "csv:serialize", "signature" : "($obj as object()*) as string*", "description" : " Serializes a sequence of JSON objects as CSV (comma-separated values) using\n the default options.\n The default options are:\n  <dl xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">\n    <dt><code>field-names</code></dt>\n      <dd>\n        A JSON array of strings denoting field names;\n        default: none.\n        The field names are taken from the first JSON object\n        and the order of the fields is implementation dependent.\n      </dd>\n    <dt><code>serialize-boolean-as</code></dt>\n      <dd>\n        What strings to serialize <code>true</code> and <code>false</code> as;\n        default: <code>true</code> and <code>false</code>.\n      </dd>\n    <dt><code>serialize-header</code></dt>\n      <dd>\n        Whether a header line is included;\n        default: <code>true</code>.\n        The first string result is the header line\n        comprised of all the objects' keys' names.\n      </dd>\n    <dt><code>serialize-null-as</code></dt>\n      <dd>\n        What string to serialize JSON <code>null</code> values as;\n        default: <code>null</code>.\n      </dd>\n    <dt><code>quote-char</code></dt>\n      <dd>\n        The single ASCII character that may be used to quote values;\n        default: <code>\"</code> (U+0022).\n      </dd>\n    <dt><code>quote-escape</code></dt>\n      <dd>\n        The single ASCII character used to escape <code>quote-char</code>;\n        default: same as <code>quote-char</code>.\n        This means that <code>quote-char</code> is doubled to escape it.\n      </dd>\n    <dt><code>separator</code></dt>\n      <dd>\n        The single ASCII character used to separate values;\n        default: <code>,</code> (U+002C).\n      </dd>\n  </dl>\n", "summary" : "<p> Serializes a sequence of JSON objects as CSV (comma-separated values) using\n the default options.</p>", "annotation_str" : "", "annotations" : [  ], "updating" : false, "parameters" : [ { "name" : "obj", "type" : "object()", "occurrence" : "*", "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> The sequence of JSON objects to serialize.</div>" } ], "returns" : { "type" : "string*", "description" : "a sequence of strings where each string corresponds to a JSON object, aka, \"record.\"" }, "errors" : [  ] }, { "isDocumented" : true, "arity" : 2, "name" : "serialize", "qname" : "csv:serialize", "signature" : "($obj as object()*, $options as object()) as string* external", "description" : " Serializes a sequence of JSON objects as CSV (comma-separated values) using\n the given options.\n", "summary" : "<p> Serializes a sequence of JSON objects as CSV (comma-separated values) using\n the given options.</p>", "annotation_str" : "", "annotations" : [  ], "updating" : false, "parameters" : [ { "name" : "obj", "type" : "object()", "occurrence" : "*", "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> The sequence of JSON objects to serialize.</div>" }, { "name" : "options", "type" : "object()", "occurrence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> The options to use: <dl> <dt><code>field-names</code></dt> <dd> A JSON array of strings denoting field names; default: none. If this option is not set, the field names are taken from the first JSON object and the order of the fields is implementation dependent. If this option is set, the fields are serielized in the order they are in the array. In either case, every JSON object must have the same keys as the first object. </dd> <dt><code>serialize-boolean-as</code></dt> <dd> What strings to serialize <code>true</code> and <code>false</code> as; default: <code>true</code> and <code>false</code>. This must be a sub-object with the two keys <code>\"true\"</code> and <code>\"false\"</code>, e.g.: <code>{ \"true\" : \"Y\", \"false\" : \"N\" }</code>. </dd> <dt><code>serialize-header</code></dt> <dd> Whether a header line is included; default: <code>true</code>. If <code>true</code>, the first string result is the header line comprised of all the objects' keys' names; if <code>false</code>, the heder line is not returned. </dd> <dt><code>serialize-null-as</code></dt> <dd> What string to serialize JSON <code>null</code> values as; default: <code>null</code>. </dd> <dt><code>quote-char</code></dt> <dd> The single ASCII character that may be used to quote values; default: <code>\"</code> (U+0022). </dd> <dt><code>quote-escape</code></dt> <dd> The single ASCII character used to escape <code>quote-char</code>; default: same as <code>quote-char</code>. If <code>quote-escape</code> equals <code>quote-char</code>, it means that <code>quote-char</code> must be doubled to escape it. If <code>quote-escape</code> does not equal <code>quote-char</code>, it means that <code>quote-escape</code> is used to escape <code>quote-char</code>. For example, a <code>quote-char</code> of <code>\"</code> (U+0022) and a <code>quote-escape</code> of <code>\\</code> (U+005C) means that quotes will be escaped by <code>\\\"</code>. </dd> <dt><code>separator</code></dt> <dd> The single ASCII character used to separate values; default: <code>,</code> (U+002C). </dd> </dl></div>" } ], "returns" : { "type" : "string*", "description" : "a sequence of strings where each string corresponds to a JSON object, aka, \"record.\"" }, "errors" : [  ] } ], "variables" : [  ] }, "http://www.zorba-xquery.com/modules/email/imap" : { "ns" : "http://www.zorba-xquery.com/modules/email/imap", "description" : " This module provides functions for accessing and manipulating emails on mail\n servers through the IMAP protocol.\n All functions in this module receive as the first argument the IMAP host and user\n information. This is an element with the type <code xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">hostInfoType</code> as defined\n in the email schema: <code xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">http://www.zorba-xquery.com/modules/email</code>.\n For example:\n <pre xmlns:xqdoc=\"http://www.xqdoc.org/1.0\" class=\"ace-static\" ace-mode=\"xquery\">\n &lt;email:hostInfo&gt;\n   &lt;email:hostName&gt;imap.example.com&lt;/email:hostName&gt;\n   &lt;email:userName&gt;myuser&lt;/email:userName&gt;\n   &lt;email:password&gt;mypassword&lt;/email:password&gt;\n &lt;/email:hostInfo&gt;\n </pre>\n The <code xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">hostInfoType</code> only needs to be in the email schema namespace\n (<code xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">http://www.zorba-xquery.com/modules/email</code>). It does not need\n to be validated since it's validated by the module.\n", "sees" : [ "<xqdoc:see xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"><a href=\"http://www.washington.edu/imap/\">c-client library part of UW IMAP toolkit</a></xqdoc:see>" ], "authors" : [ "<xqdoc:author xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">Daniel Thomas, Gabriel Petrovay</xqdoc:author>" ], "version" : null, "encoding" : "utf-8", "namespaces" : [ { "uri" : "http://zorba.io/annotations", "prefix" : "an" }, { "uri" : "http://www.zorba-xquery.com/modules/email", "prefix" : "email" }, { "uri" : "http://www.zorba-xquery.com/modules/email/imap", "prefix" : "imap" }, { "uri" : "http://zorba.io/options/versioning", "prefix" : "ver" } ], "functions" : [ { "isDocumented" : true, "arity" : 5, "name" : "copy", "qname" : "imap:copy", "signature" : "($host-info as element(email:hostInfo), $mailbox-from as xs:string, $mailbox-to as xs:string, $messages as xs:long+, $uid as xs:boolean?) as empty-sequence()", "description" : " Copies messages between mailboxes.\n Depending on the value of <code xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">$uid</code>, the messages are either specified\n through their sequence number or through their unique id. Both mailboxes must exist.\n", "summary" : "<p> Copies messages between mailboxes.</p>", "annotation_str" : " %an:sequential", "annotations" : [ { "prefix" : "an", "ns" : "http://zorba.io/annotations", "name" : "sequential", "value" : "" } ], "updating" : false, "parameters" : [ { "name" : "host-info", "type" : "element(email:hostInfo)", "occurrence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> The IMAP host, user name, and password.</div>" }, { "name" : "mailbox-from", "type" : "xs:string", "occurrence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> The mailbox in which the messages reside.</div>" }, { "name" : "mailbox-to", "type" : "xs:string", "occurrence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> The mailbox in to which the messages are copied.</div>" }, { "name" : "messages", "type" : "xs:long", "occurrence" : "+", "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> The messages to be copied, specified either by their sequence number or their unique id.</div>" }, { "name" : "uid", "type" : "xs:boolean", "occurrence" : "?", "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> If true, <code>$messages</code> are treated as sequence numbers. Else as unique identifiers.</div>" } ], "returns" : { "type" : "empty-sequence()", "description" : "The function is declared as sequential and has side-effects. It returns the empty sequence." }, "errors" : [ "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">imap:IMAP0001 If the IMAP operation failed.</xqdoc:error>", "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">imap:IMAP0002 If the connection to the IMAP server is refused.</xqdoc:error>", "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">imap:IMAP0003 If no message is found with the provided sequence number/unique identifier.</xqdoc:error>", "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">err:XQDY0027 If the value of <code>$host-info</code> is not valid according to the email schema: <code>http://www.zorba-xquery.com/modules/email</code></xqdoc:error>" ] }, { "isDocumented" : true, "arity" : 2, "name" : "create", "qname" : "imap:create", "signature" : "($host-info as element(email:hostInfo), $mailbox-name as xs:string) as empty-sequence()", "description" : " Creates a new mailbox for the given user.\n", "summary" : "<p> Creates a new mailbox for the given user.</p>", "annotation_str" : " %an:sequential", "annotations" : [ { "prefix" : "an", "ns" : "http://zorba.io/annotations", "name" : "sequential", "value" : "" } ], "updating" : false, "parameters" : [ { "name" : "host-info", "type" : "element(email:hostInfo)", "occurrence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> The IMAP host, user name, and password.</div>" }, { "name" : "mailbox-name", "type" : "xs:string", "occurrence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> The name for the new mailbox.</div>" } ], "returns" : { "type" : "empty-sequence()", "description" : "The function is declared as sequential and has side-effects. It returns the empty sequence." }, "errors" : [ "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">imap:IMAP0001 If the IMAP operation failed.</xqdoc:error>", "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">imap:IMAP0002 If the connection to the IMAP server is refused.</xqdoc:error>", "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">err:XQDY0027 If the value of <code>$host-info</code> is not valid according to the email schema: <code>http://www.zorba-xquery.com/modules/email</code></xqdoc:error>" ] }, { "isDocumented" : true, "arity" : 2, "name" : "delete", "qname" : "imap:delete", "signature" : "($host-info as element(email:hostInfo), $mailbox-name as xs:string) as empty-sequence()", "description" : " Deletes a mailbox for the given user.\n", "summary" : "<p> Deletes a mailbox for the given user.</p>", "annotation_str" : " %an:sequential", "annotations" : [ { "prefix" : "an", "ns" : "http://zorba.io/annotations", "name" : "sequential", "value" : "" } ], "updating" : false, "parameters" : [ { "name" : "host-info", "type" : "element(email:hostInfo)", "occurrence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> The IMAP host, user name, and password.</div>" }, { "name" : "mailbox-name", "type" : "xs:string", "occurrence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> The name of the mailbox to delete.</div>" } ], "returns" : { "type" : "empty-sequence()", "description" : "The function is declared as sequential and has side-effects. It returns the empty sequence." }, "errors" : [ "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">imap:IMAP0001 If the IMAP operation failed.</xqdoc:error>", "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">imap:IMAP0002 If the connection to the IMAP server is refused.</xqdoc:error>", "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">err:XQDY0027 If the value of <code>$host-info</code> is not valid according to the email schema: <code>http://www.zorba-xquery.com/modules/email</code></xqdoc:error>" ] }, { "isDocumented" : true, "arity" : 2, "name" : "expunge", "qname" : "imap:expunge", "signature" : "($host-info as element(email:hostInfo), $mailbox as xs:string) as empty-sequence()", "description" : " Permanently deletes all messages of the given mailbox that have the \"deleted\" flag set.\n", "summary" : "<p> Permanently deletes all messages of the given mailbox that have the \"deleted\" flag set.</p>", "annotation_str" : " %an:sequential", "annotations" : [ { "prefix" : "an", "ns" : "http://zorba.io/annotations", "name" : "sequential", "value" : "" } ], "updating" : false, "parameters" : [ { "name" : "host-info", "type" : "element(email:hostInfo)", "occurrence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> The IMAP host, user name, and password.</div>" }, { "name" : "mailbox", "type" : "xs:string", "occurrence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> The mailbox for which all messages that have the \\Deleted flag set should be permanently deleted.</div>" } ], "returns" : { "type" : "empty-sequence()", "description" : "The function is declared as sequential and has side-effects. It returns the empty sequence." }, "errors" : [ "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">imap:IMAP0001 If the IMAP operation failed.</xqdoc:error>", "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">imap:IMAP0002 If the connection to the IMAP server is refused.</xqdoc:error>", "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">err:XQDY0027 If the value of <code>$host-info</code> is not valid according to the email schema: <code>http://www.zorba-xquery.com/modules/email</code></xqdoc:error>" ] }, { "isDocumented" : true, "arity" : 4, "name" : "fetch-envelope", "qname" : "imap:fetch-envelope", "signature" : "($host-info as element(email:hostInfo), $mailbox as xs:string, $message-number as xs:long, $uid as xs:boolean?) as element(email:envelope)", "description" : " Fetches the envelope of a message.\n", "summary" : "<p> Fetches the envelope of a message.</p>", "annotation_str" : " %an:nondeterministic", "annotations" : [ { "prefix" : "an", "ns" : "http://zorba.io/annotations", "name" : "nondeterministic", "value" : "" } ], "updating" : false, "parameters" : [ { "name" : "host-info", "type" : "element(email:hostInfo)", "occurrence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> The IMAP host, user name, and password.</div>" }, { "name" : "mailbox", "type" : "xs:string", "occurrence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> The mailbox in which to search for the message.</div>" }, { "name" : "message-number", "type" : "xs:long", "occurrence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> The message for which to fetch the envelope (depending on <code>$uid</code> either as message sequence number or unique identifier).</div>" }, { "name" : "uid", "type" : "xs:boolean", "occurrence" : "?", "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> If true, <code>$message-number</code> is treated as sequence number. Else as unique identifier.</div>" } ], "returns" : { "type" : "element(email:envelope)", "description" : "The <code xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">envelope</code> of the requested message. The result is validated against the schema: <code xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">http://www.zorba-xquery.com/modules/email</code>." }, "errors" : [ "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">imap:IMAP0001 If the IMAP operation failed.</xqdoc:error>", "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">imap:IMAP0002 If the connection to the IMAP server is refused.</xqdoc:error>", "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">imap:IMAP0003 If no message is found with the provided sequence number/unique identifier.</xqdoc:error>", "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">err:XQDY0027 If the value of <code>$host-info</code> is not valid according to the email schema: <code>http://www.zorba-xquery.com/modules/email</code></xqdoc:error>" ] }, { "isDocumented" : true, "arity" : 4, "name" : "fetch-flags", "qname" : "imap:fetch-flags", "signature" : "($host-info as element(email:hostInfo), $mailbox as xs:string, $message-number as xs:long, $uid as xs:boolean?) as element(email:flags)", "description" : " Fetches the flags of a message.\n", "summary" : "<p> Fetches the flags of a message.</p>", "annotation_str" : " %an:nondeterministic", "annotations" : [ { "prefix" : "an", "ns" : "http://zorba.io/annotations", "name" : "nondeterministic", "value" : "" } ], "updating" : false, "parameters" : [ { "name" : "host-info", "type" : "element(email:hostInfo)", "occurrence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> The IMAP host, user name, and password.</div>" }, { "name" : "mailbox", "type" : "xs:string", "occurrence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> The mailbox containing the specified message.</div>" }, { "name" : "message-number", "type" : "xs:long", "occurrence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> Either the message sequence number or the unique identifier of the message.</div>" }, { "name" : "uid", "type" : "xs:boolean", "occurrence" : "?", "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> If true, <code>$message-number</code> is treated as sequence number. Else as unique identifier.</div>" } ], "returns" : { "type" : "element(email:flags)", "description" : "The <code xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">flags</code> of the specified message. The result is validated against the schema: <code xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">http://www.zorba-xquery.com/modules/email</code>." }, "errors" : [ "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">imap:IMAP0001 If the IMAP operation failed.</xqdoc:error>", "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">imap:IMAP0002 If the connection to the IMAP server is refused.</xqdoc:error>", "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">imap:IMAP0003 If no message is found with the provided sequence number/unique identifier.</xqdoc:error>", "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">err:XQDY0027 If the value of <code>$host-info</code> is not valid according to the email schema: <code>http://www.zorba-xquery.com/modules/email</code></xqdoc:error>" ] }, { "isDocumented" : true, "arity" : 3, "name" : "fetch-from", "qname" : "imap:fetch-from", "signature" : "($host-info as element(email:hostInfo), $mailbox as xs:string, $message-number as xs:long) as xs:string", "description" : " Fetches the 'from' string of a message.\n Please note that this function only words with message sequence numbers,\n not with unique identifiers. Only the first 255 characters of a 'from'\n string are fetched.\n", "summary" : "<p> Fetches the 'from' string of a message.</p>", "annotation_str" : " %an:nondeterministic", "annotations" : [ { "prefix" : "an", "ns" : "http://zorba.io/annotations", "name" : "nondeterministic", "value" : "" } ], "updating" : false, "parameters" : [ { "name" : "host-info", "type" : "element(email:hostInfo)", "occurrence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> The IMAP host, user name, and password.</div>" }, { "name" : "mailbox", "type" : "xs:string", "occurrence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> The mailbox for which we want to get the 'from' string of a message.</div>" }, { "name" : "message-number", "type" : "xs:long", "occurrence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> Denotes the message for which we want the 'from' string.</div>" } ], "returns" : { "type" : "xs:string", "description" : "The 'from' string of the specified message." }, "errors" : [ "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">imap:IMAP0001 If the IMAP operation failed.</xqdoc:error>", "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">imap:IMAP0002 If the connection to the IMAP server is refused.</xqdoc:error>", "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">imap:IMAP0003 If no message is found with the provided sequence number/unique identifier.</xqdoc:error>", "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">err:XQDY0027 If the value of <code>$host-info</code> is not valid according to the email schema: <code>http://www.zorba-xquery.com/modules/email</code></xqdoc:error>" ] }, { "isDocumented" : true, "arity" : 3, "name" : "fetch-message-sequence-number", "qname" : "imap:fetch-message-sequence-number", "signature" : "($host-info as element(email:hostInfo), $mailbox as xs:string, $message-number as xs:long) as xs:long", "description" : " Fetches the message sequence number for a given unique identifier.\n", "summary" : "<p> Fetches the message sequence number for a given unique identifier.</p>", "annotation_str" : " %an:nondeterministic", "annotations" : [ { "prefix" : "an", "ns" : "http://zorba.io/annotations", "name" : "nondeterministic", "value" : "" } ], "updating" : false, "parameters" : [ { "name" : "host-info", "type" : "element(email:hostInfo)", "occurrence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> The IMAP host, user name, and password.</div>" }, { "name" : "mailbox", "type" : "xs:string", "occurrence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> The mailbox for which we want to get the message sequence number of an unique identifier.</div>" }, { "name" : "message-number", "type" : "xs:long", "occurrence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> The unique identifier for which we want the message sequence number.</div>" } ], "returns" : { "type" : "xs:long", "description" : "The message sequence number of the of the given unique identifier." }, "errors" : [ "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">imap:IMAP0001 If the IMAP operation failed.</xqdoc:error>", "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">imap:IMAP0002 If the connection to the IMAP server is refused.</xqdoc:error>", "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">imap:IMAP0003 If no message is found with the provided sequence number/unique identifier.</xqdoc:error>", "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">err:XQDY0027 If the value of <code>$host-info</code> is not valid according to the email schema: <code>http://www.zorba-xquery.com/modules/email</code></xqdoc:error>" ] }, { "isDocumented" : true, "arity" : 4, "name" : "fetch-message", "qname" : "imap:fetch-message", "signature" : "($host-info as element(email:hostInfo), $mailbox as xs:string, $message-number as xs:long, $uid as xs:boolean) as element(email:message)", "description" : " Fetches a whole message.\n", "summary" : "<p> Fetches a whole message.</p>", "annotation_str" : " %an:nondeterministic", "annotations" : [ { "prefix" : "an", "ns" : "http://zorba.io/annotations", "name" : "nondeterministic", "value" : "" } ], "updating" : false, "parameters" : [ { "name" : "host-info", "type" : "element(email:hostInfo)", "occurrence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> The IMAP host, user name, and password.</div>" }, { "name" : "mailbox", "type" : "xs:string", "occurrence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> The mailbox in which to search for the message.</div>" }, { "name" : "message-number", "type" : "xs:long", "occurrence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> The message to fetch, denoted either by its sequence number or unique identifier.</div>" }, { "name" : "uid", "type" : "xs:boolean", "occurrence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> If true, <code>$message-number</code> is treated as sequence number. Else as unique identifier.</div>" } ], "returns" : { "type" : "element(email:message)", "description" : "the <code xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">message</code> with the given <code xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">$message-number</code>. The result is validated against the schema: <code xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">http://www.zorba-xquery.com/modules/email</code>." }, "errors" : [ "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">imap:IMAP0001 If the IMAP operation failed.</xqdoc:error>", "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">imap:IMAP0002 If the connection to the IMAP server is refused.</xqdoc:error>", "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">imap:IMAP0003 If no message is found with the provided sequence number/unique identifier.</xqdoc:error>", "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">err:XQDY0027 If the value of <code>$host-info</code> is not valid according to the email schema: <code>http://www.zorba-xquery.com/modules/email</code></xqdoc:error>" ] }, { "isDocumented" : true, "arity" : 3, "name" : "fetch-subject", "qname" : "imap:fetch-subject", "signature" : "($host-info as element(email:hostInfo), $mailbox as xs:string, $message-number as xs:long) as xs:string", "description" : " Fetches the subject for a message.\n Please note that this function only works with message sequence numbers,\n not with unique identifiers. Only the first 255 characters of a subject\n are fetched.\n", "summary" : "<p> Fetches the subject for a message.</p>", "annotation_str" : " %an:nondeterministic", "annotations" : [ { "prefix" : "an", "ns" : "http://zorba.io/annotations", "name" : "nondeterministic", "value" : "" } ], "updating" : false, "parameters" : [ { "name" : "host-info", "type" : "element(email:hostInfo)", "occurrence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> The IMAP host, user name, and password.</div>" }, { "name" : "mailbox", "type" : "xs:string", "occurrence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> The mailbox for which we want to get the subject of a message.</div>" }, { "name" : "message-number", "type" : "xs:long", "occurrence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> Denotes the message for which we want the subject.</div>" } ], "returns" : { "type" : "xs:string", "description" : "The subject of the specified message." }, "errors" : [ "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">imap:IMAP0001 If the IMAP operation failed.</xqdoc:error>", "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">imap:IMAP0002 If the connection to the IMAP server is refused.</xqdoc:error>", "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">imap:IMAP0003 If no message is found with the provided sequence number/unique identifier.</xqdoc:error>", "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">err:XQDY0027 If the value of <code>$host-info</code> is not valid according to the email schema: <code>http://www.zorba-xquery.com/modules/email</code></xqdoc:error>" ] }, { "isDocumented" : true, "arity" : 3, "name" : "fetch-uid", "qname" : "imap:fetch-uid", "signature" : "($host-info as element(email:hostInfo), $mailbox as xs:string, $message-number as xs:long) as xs:long", "description" : " Fetches the unique identifier for a given message sequence number.\n", "summary" : "<p> Fetches the unique identifier for a given message sequence number.</p>", "annotation_str" : " %an:nondeterministic", "annotations" : [ { "prefix" : "an", "ns" : "http://zorba.io/annotations", "name" : "nondeterministic", "value" : "" } ], "updating" : false, "parameters" : [ { "name" : "host-info", "type" : "element(email:hostInfo)", "occurrence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> The IMAP host, user name, and password.</div>" }, { "name" : "mailbox", "type" : "xs:string", "occurrence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> The mailbox for which we want to get the unique identifier of a message sequence number.</div>" }, { "name" : "message-number", "type" : "xs:long", "occurrence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> The message sequence number for which we want the unique identifier.</div>" } ], "returns" : { "type" : "xs:long", "description" : "The unique identifier of the given message sequence number." }, "errors" : [ "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">imap:IMAP0001 If the IMAP operation failed.</xqdoc:error>", "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">imap:IMAP0002 If the connection to the IMAP server is refused.</xqdoc:error>", "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">imap:IMAP0003 If no message is found with the provided sequence number/unique identifier.</xqdoc:error>", "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">err:XQDY0027 If the value of <code>$host-info</code> is not valid according to the email schema: <code>http://www.zorba-xquery.com/modules/email</code></xqdoc:error>" ] }, { "isDocumented" : true, "arity" : 4, "name" : "list", "qname" : "imap:list", "signature" : "($host-info as element(email:hostInfo), $mailbox-ref as xs:string, $pattern as xs:string, $only-subscribed as xs:boolean) as element(email:mailbox)*", "description" : " Lists IMAP folders for the specified user on the host that match the pattern.\n", "summary" : "<p> Lists IMAP folders for the specified user on the host that match the pattern.</p>", "annotation_str" : " %an:nondeterministic", "annotations" : [ { "prefix" : "an", "ns" : "http://zorba.io/annotations", "name" : "nondeterministic", "value" : "" } ], "updating" : false, "parameters" : [ { "name" : "host-info", "type" : "element(email:hostInfo)", "occurrence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> The IMAP host, user name, and password.</div>" }, { "name" : "mailbox-ref", "type" : "xs:string", "occurrence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> is applied to pattern in an implementation dependent fashion to search for matching mailbox names.</div>" }, { "name" : "pattern", "type" : "xs:string", "occurrence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> The pattern for mailboxes to look for (can include wildcards '*' and '%').</div>" }, { "name" : "only-subscribed", "type" : "xs:boolean", "occurrence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> If set true, only mailboxes are listed to which the user is subscribed.</div>" } ], "returns" : { "type" : "element(email:mailbox)*", "description" : "A sequence of <code xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">mailbox</code> elements. The result elements are validated against the schema: <code xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">http://www.zorba-xquery.com/modules/email</code>." }, "errors" : [ "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">imap:IMAP0001 If the IMAP operation failed.</xqdoc:error>", "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">imap:IMAP0002 If the connection to the IMAP server is refused.</xqdoc:error>", "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">err:XQDY0027 If the value of <code>$host-info</code> is not valid according to the email schema: <code>http://www.zorba-xquery.com/modules/email</code></xqdoc:error>" ] }, { "isDocumented" : true, "arity" : 5, "name" : "move", "qname" : "imap:move", "signature" : "($host-info as element(email:hostInfo), $mailbox-from as xs:string, $mailbox-to as xs:string, $messages as xs:long+, $uid as xs:boolean?) as empty-sequence()", "description" : " Moves messages between mailboxes.\n Depending on the value of <code xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">$uid</code>, the messages are either specified through\n their sequence number or through their unique id. Both mailboxes must exist.\n", "summary" : "<p> Moves messages between mailboxes.</p>", "annotation_str" : " %an:sequential", "annotations" : [ { "prefix" : "an", "ns" : "http://zorba.io/annotations", "name" : "sequential", "value" : "" } ], "updating" : false, "parameters" : [ { "name" : "host-info", "type" : "element(email:hostInfo)", "occurrence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> The IMAP host, user name, and password.</div>" }, { "name" : "mailbox-from", "type" : "xs:string", "occurrence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> The mailbox in which the messages reside.</div>" }, { "name" : "mailbox-to", "type" : "xs:string", "occurrence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> The mailbox in to which the messages should be moved.</div>" }, { "name" : "messages", "type" : "xs:long", "occurrence" : "+", "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> The messages to be copied, specified either by their sequence number or their unique id.</div>" }, { "name" : "uid", "type" : "xs:boolean", "occurrence" : "?", "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> If true, <code>$messages</code> are treated as sequence numbers. Else as unique identifiers.</div>" } ], "returns" : { "type" : "empty-sequence()", "description" : "The function is declared as sequential and has side-effects. It returns the empty sequence." }, "errors" : [ "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">imap:IMAP0001 If the IMAP operation failed.</xqdoc:error>", "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">imap:IMAP0002 If the connection to the IMAP server is refused.</xqdoc:error>", "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">imap:IMAP0003 If no message is found with the provided sequence number/unique identifier.</xqdoc:error>", "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">err:XQDY0027 If the value of <code>$host-info</code> is not valid according to the email schema: <code>http://www.zorba-xquery.com/modules/email</code></xqdoc:error>" ] }, { "isDocumented" : true, "arity" : 3, "name" : "rename", "qname" : "imap:rename", "signature" : "($host-info as element(email:hostInfo), $mailbox-old as xs:string, $mailbox-new as xs:string) as empty-sequence()", "description" : " Renames a mailbox.\n", "summary" : "<p> Renames a mailbox.</p>", "annotation_str" : " %an:sequential", "annotations" : [ { "prefix" : "an", "ns" : "http://zorba.io/annotations", "name" : "sequential", "value" : "" } ], "updating" : false, "parameters" : [ { "name" : "host-info", "type" : "element(email:hostInfo)", "occurrence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> The IMAP host, user name, and password.</div>" }, { "name" : "mailbox-old", "type" : "xs:string", "occurrence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> The name of the mailbox we want to rename.</div>" }, { "name" : "mailbox-new", "type" : "xs:string", "occurrence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> The new name for the mailbox.</div>" } ], "returns" : { "type" : "empty-sequence()", "description" : "The function is declared as sequential and has side-effects. It returns the empty sequence." }, "errors" : [ "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">imap:IMAP0001 If the IMAP operation failed.</xqdoc:error>", "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">imap:IMAP0002 If the connection to the IMAP server is refused.</xqdoc:error>", "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">err:XQDY0027 If the value of <code>$host-info</code> is not valid according to the email schema: <code>http://www.zorba-xquery.com/modules/email</code></xqdoc:error>" ] }, { "isDocumented" : true, "arity" : 4, "name" : "search", "qname" : "imap:search", "signature" : "($host-info as element(email:hostInfo), $mailbox as xs:string, $criteria as xs:string, $uid as xs:boolean?) as xs:long*", "description" : " Searches a mailbox for messages that match the given criteria.\n The criteria should be a string as defined in the RFC3501 (IMAP4rev1).\n A valid example would be: 'FROM zorba@gmail.com OR NOT SUBJECT Bug'.\n Depending on the value of <code xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">$uid</code>, the function will either\n return matching sequence numbers or unique identifiers.\n", "summary" : "<p> Searches a mailbox for messages that match the given criteria.</p>", "annotation_str" : " %an:nondeterministic", "annotations" : [ { "prefix" : "an", "ns" : "http://zorba.io/annotations", "name" : "nondeterministic", "value" : "" } ], "updating" : false, "parameters" : [ { "name" : "host-info", "type" : "element(email:hostInfo)", "occurrence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> The IMAP host, user name, and password.</div>" }, { "name" : "mailbox", "type" : "xs:string", "occurrence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> The mailbox to search.</div>" }, { "name" : "criteria", "type" : "xs:string", "occurrence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> The searching criteria.</div>" }, { "name" : "uid", "type" : "xs:boolean", "occurrence" : "?", "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> If true, the function returns the sequence of unique identifiers corresponding to the matching mails, else the corresponding sequence numbers are returned.</div>" } ], "returns" : { "type" : "xs:long*", "description" : "Either the sequence of matching sequence numbers or the sequence of matching unique identifiers." }, "errors" : [ "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">imap:IMAP0001 If the IMAP operation failed.</xqdoc:error>", "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">imap:IMAP0002 If the connection to the IMAP server is refused.</xqdoc:error>", "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">err:XQDY0027 If the value of <code>$host-info</code> is not valid according to the email schema: <code>http://www.zorba-xquery.com/modules/email</code></xqdoc:error>" ] }, { "isDocumented" : true, "arity" : 5, "name" : "set-flags", "qname" : "imap:set-flags", "signature" : "($host-info as element(email:hostInfo), $mailbox as xs:string, $message-number as xs:long, $flags as element(email:flags), $uid as xs:boolean?) as empty-sequence()", "description" : " Sets the flags for a given message.\n The flags are set and unset according to the passed <code xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">$flags</code>.\n", "summary" : "<p> Sets the flags for a given message.</p>", "annotation_str" : " %an:sequential", "annotations" : [ { "prefix" : "an", "ns" : "http://zorba.io/annotations", "name" : "sequential", "value" : "" } ], "updating" : false, "parameters" : [ { "name" : "host-info", "type" : "element(email:hostInfo)", "occurrence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> The IMAP host, user name, and password.</div>" }, { "name" : "mailbox", "type" : "xs:string", "occurrence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> The mailbox containing the specified message.</div>" }, { "name" : "message-number", "type" : "xs:long", "occurrence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> Either the message sequence number or the unique identifier of the message (depending on the value of <code>$uid</code>).</div>" }, { "name" : "flags", "type" : "element(email:flags)", "occurrence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> Defines which flags should be set for this message. The possibilities are \"seen\", \"deleted\", \"flagged\", \"answered\", and \"draft\". Setting all flags at once is done by passing the element: <code> &lt;email:flags&gt; &lt;email:seen/&gt; &lt;email:deleted/&gt; &lt;email:flagged/&gt; &lt;email:answered/&gt; &lt;email:draft/&gt; &lt;/email:flags&gt; </code>. Setting \"flagged\" only and unsetting all other at once can be done by passing: <code> &lt;email:flags&gt; &lt;email:flagged/&gt; &lt;/email:flags&gt; </code>.</div>" }, { "name" : "uid", "type" : "xs:boolean", "occurrence" : "?", "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> If true, <code>$message-number</code> is treated as sequence number. Else as unique identifier.</div>" } ], "returns" : { "type" : "empty-sequence()", "description" : "The function is declared as sequential and has side-effects. It returns the empty sequence." }, "errors" : [ "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">imap:IMAP0001 If the IMAP operation failed.</xqdoc:error>", "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">imap:IMAP0002 If the connection to the IMAP server is refused.</xqdoc:error>", "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">imap:IMAP0003 If no message is found with the provided sequence number/unique identifier.</xqdoc:error>", "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">err:XQDY0027 If the value of <code>$host-info</code> is not valid according to the email schema: <code>http://www.zorba-xquery.com/modules/email</code></xqdoc:error>" ] }, { "isDocumented" : true, "arity" : 2, "name" : "status", "qname" : "imap:status", "signature" : "($host-info as element(email:hostInfo), $mailbox as xs:string) as element(email:status)", "description" : " Returns the status of the given mailbox.\n The status of a mailbox contains:\n <ul xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">\n  <li><code>messages</code>: the number of messages in the mailbox</li>\n  <li><code>recent</code>: the number of messages flagged as recent</li>\n  <li><code>unseen</code>: the number of messages flagged as unseen</li>\n  <li><code>uidnext</code>: the next unique identifier that will be assigned to a message</li>\n  <li><code>uidvalidity</code>: a value that, together with the <code>uidnext</code> value\n    forms a 64 bit number that must be unique for the server</li>\n </ul>\n", "summary" : "<p> Returns the status of the given mailbox.</p>", "annotation_str" : " %an:nondeterministic", "annotations" : [ { "prefix" : "an", "ns" : "http://zorba.io/annotations", "name" : "nondeterministic", "value" : "" } ], "updating" : false, "parameters" : [ { "name" : "host-info", "type" : "element(email:hostInfo)", "occurrence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> The IMAP host, user name, and password.</div>" }, { "name" : "mailbox", "type" : "xs:string", "occurrence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> The mailbox for which we want to have the status.</div>" } ], "returns" : { "type" : "element(email:status)", "description" : "The <code xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">status</code> of the specified <code xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">$mailbox</code>. The result is validated against the schema: <code xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">http://www.zorba-xquery.com/modules/email</code>." }, "errors" : [ "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">imap:IMAP0001 If the IMAP operation failed.</xqdoc:error>", "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">imap:IMAP0002 If the connection to the IMAP server is refused.</xqdoc:error>", "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">err:XQDY0027 If the value of <code>$host-info</code> is not valid according to the email schema: <code>http://www.zorba-xquery.com/modules/email</code></xqdoc:error>" ] }, { "isDocumented" : true, "arity" : 2, "name" : "subscribe", "qname" : "imap:subscribe", "signature" : "($host-info as element(email:hostInfo), $mailbox as xs:string) as empty-sequence()", "description" : " Subscribes the user to the specified mailbox.\n", "summary" : "<p> Subscribes the user to the specified mailbox.</p>", "annotation_str" : " %an:sequential", "annotations" : [ { "prefix" : "an", "ns" : "http://zorba.io/annotations", "name" : "sequential", "value" : "" } ], "updating" : false, "parameters" : [ { "name" : "host-info", "type" : "element(email:hostInfo)", "occurrence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> The IMAP host, user name, and password.</div>" }, { "name" : "mailbox", "type" : "xs:string", "occurrence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> The mailbox the user wants to subscribe to.</div>" } ], "returns" : { "type" : "empty-sequence()", "description" : "The function is declared as sequential and has side-effects. It returns the empty sequence." }, "errors" : [ "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">imap:IMAP0001 If the IMAP operation failed.</xqdoc:error>", "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">imap:IMAP0002 If the connection to the IMAP server is refused.</xqdoc:error>", "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">err:XQDY0027 If the value of <code>$host-info</code> is not valid according to the email schema: <code>http://www.zorba-xquery.com/modules/email</code></xqdoc:error>" ] }, { "isDocumented" : true, "arity" : 2, "name" : "unsubscribe", "qname" : "imap:unsubscribe", "signature" : "($host-info as element(email:hostInfo), $mailbox as xs:string) as empty-sequence()", "description" : " Unsubscribes the user from the specified mailbox.\n", "summary" : "<p> Unsubscribes the user from the specified mailbox.</p>", "annotation_str" : " %an:sequential", "annotations" : [ { "prefix" : "an", "ns" : "http://zorba.io/annotations", "name" : "sequential", "value" : "" } ], "updating" : false, "parameters" : [ { "name" : "host-info", "type" : "element(email:hostInfo)", "occurrence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> The IMAP host, user name, and password.</div>" }, { "name" : "mailbox", "type" : "xs:string", "occurrence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> The mailbox the user wants to unsubscribe from.</div>" } ], "returns" : { "type" : "empty-sequence()", "description" : "The function is declared as sequential and has side-effects. It returns the empty sequence." }, "errors" : [ "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">imap:IMAP0001 If the IMAP operation failed.</xqdoc:error>", "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">imap:IMAP0002 If the connection to the IMAP server is refused.</xqdoc:error>", "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">err:XQDY0027 If the value of <code>$host-info</code> is not valid according to the email schema: <code>http://www.zorba-xquery.com/modules/email</code></xqdoc:error>" ] } ], "variables" : [  ] }, "http://zorba.io/errors" : { "ns" : "http://zorba.io/errors", "description" : " This module contains one variable declaration for each diagnostic of the\n http://zorba.io/errors namespace.\n The variables serves as documentation for the errors but can also\n be used in the code. For example, one useful scenario is to compare\n an error caught in the catch clause of a try-catch expression with one of\n the variables.\n", "sees" : [  ], "authors" : [ "<xqdoc:author xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">Carlos Lopez</xqdoc:author>" ], "version" : null, "encoding" : "utf-8", "namespaces" : [ { "uri" : "http://zorba.io/errors", "prefix" : "zerr" } ], "functions" : [  ], "variables" : [ { "name" : "zerr:ZDST0032", "type" : "item()*", "description" : "" }, { "name" : "zerr:ZDST0004", "type" : "item()*", "description" : "" }, { "name" : "zerr:ZDST0006", "type" : "item()*", "description" : "" }, { "name" : "zerr:ZDST0007", "type" : "item()*", "description" : "" }, { "name" : "zerr:ZDST0021", "type" : "item()*", "description" : "" }, { "name" : "zerr:ZDST0022", "type" : "item()*", "description" : "" }, { "name" : "zerr:ZDST0023", "type" : "item()*", "description" : "" }, { "name" : "zerr:ZDST0024", "type" : "item()*", "description" : "" }, { "name" : "zerr:ZDST0025", "type" : "item()*", "description" : "" }, { "name" : "zerr:ZDST0026", "type" : "item()*", "description" : "" }, { "name" : "zerr:ZDST0027", "type" : "item()*", "description" : "" }, { "name" : "zerr:ZDST0028", "type" : "item()*", "description" : "" }, { "name" : "zerr:ZDST0029", "type" : "item()*", "description" : "" }, { "name" : "zerr:ZDST0030", "type" : "item()*", "description" : "" }, { "name" : "zerr:ZDST0031", "type" : "item()*", "description" : "" }, { "name" : "zerr:ZDST0003", "type" : "item()*", "description" : "" }, { "name" : "zerr:ZDST0033", "type" : "item()*", "description" : "" }, { "name" : "zerr:ZDST0034", "type" : "item()*", "description" : "" }, { "name" : "zerr:ZDST0035", "type" : "item()*", "description" : "" }, { "name" : "zerr:ZDST0036", "type" : "item()*", "description" : "" }, { "name" : "zerr:ZDST0041", "type" : "item()*", "description" : "" }, { "name" : "zerr:ZDST0044", "type" : "item()*", "description" : "" }, { "name" : "zerr:ZDST0048", "type" : "item()*", "description" : "" }, { "name" : "zerr:ZDST0060", "type" : "item()*", "description" : "" }, { "name" : "zerr:ZDTY0001", "type" : "item()*", "description" : "" }, { "name" : "zerr:ZDTY0010", "type" : "item()*", "description" : "" }, { "name" : "zerr:ZDTY0011", "type" : "item()*", "description" : "" }, { "name" : "zerr:ZDTY0012", "type" : "item()*", "description" : "" }, { "name" : "zerr:ZGDB0001", "type" : "item()*", "description" : "" }, { "name" : "zerr:ZOSE0001", "type" : "item()*", "description" : "" }, { "name" : "zerr:ZDDY0038", "type" : "item()*", "description" : "" }, { "name" : "zerr:ZDDY0024", "type" : "item()*", "description" : "" }, { "name" : "zerr:ZDDY0025", "type" : "item()*", "description" : "" }, { "name" : "zerr:ZDDY0026", "type" : "item()*", "description" : "" }, { "name" : "zerr:ZDDY0027", "type" : "item()*", "description" : "" }, { "name" : "zerr:ZDDY0028", "type" : "item()*", "description" : "" }, { "name" : "zerr:ZDDY0029", "type" : "item()*", "description" : "" }, { "name" : "zerr:ZDDY0030", "type" : "item()*", "description" : "" }, { "name" : "zerr:ZDDY0031", "type" : "item()*", "description" : "" }, { "name" : "zerr:ZDDY0032", "type" : "item()*", "description" : "" }, { "name" : "zerr:ZDDY0033", "type" : "item()*", "description" : "" }, { "name" : "zerr:ZDDY0034", "type" : "item()*", "description" : "" }, { "name" : "zerr:ZDDY0035", "type" : "item()*", "description" : "" }, { "name" : "zerr:ZDDY0036", "type" : "item()*", "description" : "" }, { "name" : "zerr:ZDDY0037", "type" : "item()*", "description" : "" }, { "name" : "zerr:ZOSE0002", "type" : "item()*", "description" : "" }, { "name" : "zerr:ZDDY0039", "type" : "item()*", "description" : "" }, { "name" : "zerr:ZDDY0040", "type" : "item()*", "description" : "" }, { "name" : "zerr:ZDDY0041", "type" : "item()*", "description" : "" }, { "name" : "zerr:ZDDY0042", "type" : "item()*", "description" : "" }, { "name" : "zerr:ZDDY0043", "type" : "item()*", "description" : "" }, { "name" : "zerr:ZDDY1000", "type" : "item()*", "description" : "" }, { "name" : "zerr:ZDDY1001", "type" : "item()*", "description" : "" }, { "name" : "zerr:ZDDY1003", "type" : "item()*", "description" : "" }, { "name" : "zerr:ZDDY1004", "type" : "item()*", "description" : "" }, { "name" : "zerr:ZDDY1005", "type" : "item()*", "description" : "" }, { "name" : "zerr:ZDDY1006", "type" : "item()*", "description" : "" }, { "name" : "zerr:ZDST0001", "type" : "item()*", "description" : "" }, { "name" : "zerr:ZDST0002", "type" : "item()*", "description" : "" }, { "name" : "zerr:ZJPE0005", "type" : "item()*", "description" : "" }, { "name" : "zerr:XSST0001", "type" : "item()*", "description" : "" }, { "name" : "zerr:XSST0002", "type" : "item()*", "description" : "" }, { "name" : "zerr:XSST0003", "type" : "item()*", "description" : "" }, { "name" : "zerr:XSST0004", "type" : "item()*", "description" : "" }, { "name" : "zerr:XSST0005", "type" : "item()*", "description" : "" }, { "name" : "zerr:XSST0006", "type" : "item()*", "description" : "" }, { "name" : "zerr:XSST0007", "type" : "item()*", "description" : "" }, { "name" : "zerr:XSST0008", "type" : "item()*", "description" : "" }, { "name" : "zerr:XSST0009", "type" : "item()*", "description" : "" }, { "name" : "zerr:XSST0010", "type" : "item()*", "description" : "" }, { "name" : "zerr:ZJPE0001", "type" : "item()*", "description" : "" }, { "name" : "zerr:ZJPE0002", "type" : "item()*", "description" : "" }, { "name" : "zerr:ZJPE0003", "type" : "item()*", "description" : "" }, { "name" : "zerr:ZJPE0004", "type" : "item()*", "description" : "" }, { "name" : "zerr:ZSTR0066", "type" : "item()*", "description" : "" }, { "name" : "zerr:ZJPE0006", "type" : "item()*", "description" : "" }, { "name" : "zerr:ZJPE0007", "type" : "item()*", "description" : "" }, { "name" : "zerr:ZJPE0008", "type" : "item()*", "description" : "" }, { "name" : "zerr:ZJPE0009", "type" : "item()*", "description" : "" }, { "name" : "zerr:ZJPE0010", "type" : "item()*", "description" : "" }, { "name" : "zerr:ZJSE0001", "type" : "item()*", "description" : "" }, { "name" : "zerr:ZJSE0002", "type" : "item()*", "description" : "" }, { "name" : "zerr:ZJSE0003", "type" : "item()*", "description" : "" }, { "name" : "zerr:ZJSE0004", "type" : "item()*", "description" : "" }, { "name" : "zerr:ZJSE0007", "type" : "item()*", "description" : "" }, { "name" : "zerr:ZJSE0008", "type" : "item()*", "description" : "" }, { "name" : "zerr:ZJSE0009", "type" : "item()*", "description" : "" }, { "name" : "zerr:ZJ2X0001", "type" : "item()*", "description" : "" }, { "name" : "zerr:ZSTR0012", "type" : "item()*", "description" : "" }, { "name" : "zerr:ZOSE0003", "type" : "item()*", "description" : "" }, { "name" : "zerr:ZOSE0004", "type" : "item()*", "description" : "" }, { "name" : "zerr:ZOSE0005", "type" : "item()*", "description" : "" }, { "name" : "zerr:ZOSE0006", "type" : "item()*", "description" : "" }, { "name" : "zerr:ZOSE0007", "type" : "item()*", "description" : "" }, { "name" : "zerr:ZSTR0001", "type" : "item()*", "description" : "" }, { "name" : "zerr:ZSTR0002", "type" : "item()*", "description" : "" }, { "name" : "zerr:ZSTR0003", "type" : "item()*", "description" : "" }, { "name" : "zerr:ZSTR0004", "type" : "item()*", "description" : "" }, { "name" : "zerr:ZSTR0007", "type" : "item()*", "description" : "" }, { "name" : "zerr:ZSTR0008", "type" : "item()*", "description" : "" }, { "name" : "zerr:ZSTR0009", "type" : "item()*", "description" : "" }, { "name" : "zerr:ZSTR0010", "type" : "item()*", "description" : "" }, { "name" : "zerr:ZSTR0011", "type" : "item()*", "description" : "" }, { "name" : "zerr:ZDDY0023", "type" : "item()*", "description" : "" }, { "name" : "zerr:ZSTR0013", "type" : "item()*", "description" : "" }, { "name" : "zerr:ZSTR0015", "type" : "item()*", "description" : "" }, { "name" : "zerr:ZSTR0016", "type" : "item()*", "description" : "" }, { "name" : "zerr:ZSTR0020", "type" : "item()*", "description" : "" }, { "name" : "zerr:ZSTR0021", "type" : "item()*", "description" : "" }, { "name" : "zerr:ZSTR0030", "type" : "item()*", "description" : "" }, { "name" : "zerr:ZSTR0040", "type" : "item()*", "description" : "" }, { "name" : "zerr:ZSTR0041", "type" : "item()*", "description" : "" }, { "name" : "zerr:ZSTR0045", "type" : "item()*", "description" : "" }, { "name" : "zerr:ZSTR0050", "type" : "item()*", "description" : "" }, { "name" : "zerr:ZSTR0055", "type" : "item()*", "description" : "" }, { "name" : "zerr:ZSTR0060", "type" : "item()*", "description" : "" }, { "name" : "zerr:ZSTR0065", "type" : "item()*", "description" : "" }, { "name" : "zerr:ZXQD0004", "type" : "item()*", "description" : "" }, { "name" : "zerr:ZXQP0036", "type" : "item()*", "description" : "" }, { "name" : "zerr:ZXQP0037", "type" : "item()*", "description" : "" }, { "name" : "zerr:ZXQP0038", "type" : "item()*", "description" : "" }, { "name" : "zerr:ZXQP0039", "type" : "item()*", "description" : "" }, { "name" : "zerr:ZXQP0040", "type" : "item()*", "description" : "" }, { "name" : "zerr:ZXQP0050", "type" : "item()*", "description" : "" }, { "name" : "zerr:ZXQP0060", "type" : "item()*", "description" : "" }, { "name" : "zerr:ZXQP0061", "type" : "item()*", "description" : "" }, { "name" : "zerr:ZXQP8401", "type" : "xs:QName", "description" : " The version of the thesaurus is not the expected version.\n" }, { "name" : "zerr:ZXQP8402", "type" : "xs:QName", "description" : " The thesaurus data file's endianness does not match that of the CPU.\n" }, { "name" : "zerr:ZXQP8403", "type" : "xs:QName", "description" : " The thesaurus data contains an unexpected value.\n" }, { "name" : "zerr:ZXQD0001", "type" : "item()*", "description" : "" }, { "name" : "zerr:ZXQD0002", "type" : "item()*", "description" : "" }, { "name" : "zerr:ZXQD0003", "type" : "item()*", "description" : "" }, { "name" : "zerr:ZXQP0035", "type" : "item()*", "description" : "" }, { "name" : "zerr:ZXQD0005", "type" : "item()*", "description" : "" }, { "name" : "zerr:ZXQD0006", "type" : "item()*", "description" : "" }, { "name" : "zerr:ZAPI0002", "type" : "item()*", "description" : "" }, { "name" : "zerr:ZAPI0003", "type" : "item()*", "description" : "" }, { "name" : "zerr:ZAPI0004", "type" : "item()*", "description" : "" }, { "name" : "zerr:ZAPI0005", "type" : "item()*", "description" : "" }, { "name" : "zerr:ZAPI0006", "type" : "item()*", "description" : "" }, { "name" : "zerr:ZAPI0007", "type" : "item()*", "description" : "" }, { "name" : "zerr:ZAPI0008", "type" : "item()*", "description" : "" }, { "name" : "zerr:ZAPI0009", "type" : "item()*", "description" : "" }, { "name" : "zerr:ZAPI0011", "type" : "item()*", "description" : "" }, { "name" : "zerr:ZAPI0014", "type" : "item()*", "description" : "" }, { "name" : "zerr:ZAPI0015", "type" : "item()*", "description" : "" }, { "name" : "zerr:ZAPI0019", "type" : "item()*", "description" : "" }, { "name" : "zerr:ZXQP0014", "type" : "item()*", "description" : "" }, { "name" : "zerr:ZXQP0000", "type" : "xs:QName", "description" : " An \"error\" constant for \"no error.\"\n" }, { "name" : "zerr:ZXQP0001", "type" : "item()*", "description" : "" }, { "name" : "zerr:ZXQP0002", "type" : "xs:QName", "description" : " A Zorba programming assertion failed.  If this error occurs, it is a bug\n and should be reported.\n" }, { "name" : "zerr:ZXQP0003", "type" : "xs:QName", "description" : " Something unexpected occurred in Zorba.  If this error occurs, it is a\n bug and should be reported.\n" }, { "name" : "zerr:ZXQP0004", "type" : "xs:QName", "description" : " A particular XQuery feature has not been implemented by Zorba.\n" }, { "name" : "zerr:ZXQP0005", "type" : "xs:QName", "description" : " A particular XQuery feature has been implemented by Zorba, but the\n feature has not been enabled in the current build.\n" }, { "name" : "zerr:ZXQP0006", "type" : "item()*", "description" : "" }, { "name" : "zerr:ZXQP0007", "type" : "item()*", "description" : "" }, { "name" : "zerr:ZXQP0008", "type" : "item()*", "description" : "" }, { "name" : "zerr:ZXQP0009", "type" : "item()*", "description" : "" }, { "name" : "zerr:ZXQP0010", "type" : "item()*", "description" : "" }, { "name" : "zerr:ZXQP0011", "type" : "item()*", "description" : "" }, { "name" : "zerr:ZXQP0012", "type" : "item()*", "description" : "" }, { "name" : "zerr:ZXQP0013", "type" : "item()*", "description" : "" }, { "name" : "zerr:ZAPI0020", "type" : "item()*", "description" : "" }, { "name" : "zerr:ZXQP0016", "type" : "item()*", "description" : "" }, { "name" : "zerr:ZXQP0017", "type" : "item()*", "description" : "" }, { "name" : "zerr:ZXQP0020", "type" : "item()*", "description" : "" }, { "name" : "zerr:ZXQP0021", "type" : "item()*", "description" : "" }, { "name" : "zerr:ZXQP0024", "type" : "item()*", "description" : "" }, { "name" : "zerr:ZXQP0025", "type" : "item()*", "description" : "" }, { "name" : "zerr:ZXQP0026", "type" : "item()*", "description" : "" }, { "name" : "zerr:ZXQP0028", "type" : "item()*", "description" : "" }, { "name" : "zerr:ZXQP0029", "type" : "item()*", "description" : "" }, { "name" : "zerr:ZXQP0030", "type" : "item()*", "description" : "" }, { "name" : "zerr:ZXQP0031", "type" : "item()*", "description" : "" }, { "name" : "zerr:ZXQP0032", "type" : "item()*", "description" : "" }, { "name" : "zerr:ZXQP0033", "type" : "item()*", "description" : "" }, { "name" : "zerr:ZDDY0009", "type" : "item()*", "description" : "" }, { "name" : "zerr:ZCSE0012", "type" : "item()*", "description" : "" }, { "name" : "zerr:ZCSE0013", "type" : "item()*", "description" : "" }, { "name" : "zerr:ZCSE0014", "type" : "item()*", "description" : "" }, { "name" : "zerr:ZCSE0015", "type" : "item()*", "description" : "" }, { "name" : "zerr:ZCSE0016", "type" : "item()*", "description" : "" }, { "name" : "zerr:ZCSE0017", "type" : "item()*", "description" : "" }, { "name" : "zerr:ZDDY0001", "type" : "item()*", "description" : "" }, { "name" : "zerr:ZDDY0002", "type" : "item()*", "description" : "" }, { "name" : "zerr:ZDDY0003", "type" : "item()*", "description" : "" }, { "name" : "zerr:ZDDY0004", "type" : "item()*", "description" : "" }, { "name" : "zerr:ZDDY0005", "type" : "item()*", "description" : "" }, { "name" : "zerr:ZDDY0006", "type" : "item()*", "description" : "" }, { "name" : "zerr:ZDDY0007", "type" : "item()*", "description" : "" }, { "name" : "zerr:ZDDY0008", "type" : "item()*", "description" : "" }, { "name" : "zerr:ZCSE0011", "type" : "item()*", "description" : "" }, { "name" : "zerr:ZDDY0010", "type" : "item()*", "description" : "" }, { "name" : "zerr:ZDDY0011", "type" : "item()*", "description" : "" }, { "name" : "zerr:ZDDY0012", "type" : "item()*", "description" : "" }, { "name" : "zerr:ZDDY0013", "type" : "item()*", "description" : "" }, { "name" : "zerr:ZDDY0014", "type" : "item()*", "description" : "" }, { "name" : "zerr:ZDDY0015", "type" : "item()*", "description" : "" }, { "name" : "zerr:ZDDY0016", "type" : "item()*", "description" : "" }, { "name" : "zerr:ZDDY0017", "type" : "item()*", "description" : "" }, { "name" : "zerr:ZDDY0018", "type" : "item()*", "description" : "" }, { "name" : "zerr:ZDDY0020", "type" : "item()*", "description" : "" }, { "name" : "zerr:ZDDY0019", "type" : "item()*", "description" : "" }, { "name" : "zerr:ZDDY0021", "type" : "item()*", "description" : "" }, { "name" : "zerr:ZDDY0022", "type" : "item()*", "description" : "" }, { "name" : "zerr:ZAPI0045", "type" : "item()*", "description" : "" }, { "name" : "zerr:ZAPI0021", "type" : "item()*", "description" : "" }, { "name" : "zerr:ZAPI0023", "type" : "item()*", "description" : "" }, { "name" : "zerr:ZAPI0024", "type" : "item()*", "description" : "" }, { "name" : "zerr:ZAPI0025", "type" : "item()*", "description" : "" }, { "name" : "zerr:ZAPI0026", "type" : "item()*", "description" : "" }, { "name" : "zerr:ZAPI0027", "type" : "item()*", "description" : "" }, { "name" : "zerr:ZAPI0028", "type" : "item()*", "description" : "" }, { "name" : "zerr:ZAPI0029", "type" : "item()*", "description" : "" }, { "name" : "zerr:ZAPI0030", "type" : "item()*", "description" : "" }, { "name" : "zerr:ZAPI0039", "type" : "item()*", "description" : "" }, { "name" : "zerr:ZAPI0040", "type" : "item()*", "description" : "" }, { "name" : "zerr:ZAPI0041", "type" : "item()*", "description" : "" }, { "name" : "zerr:ZAPI0042", "type" : "item()*", "description" : "" }, { "name" : "zerr:ZAPI0043", "type" : "item()*", "description" : "" }, { "name" : "zerr:NS", "type" : "item()*", "description" : "" }, { "name" : "zerr:ZAPI0070", "type" : "item()*", "description" : "" }, { "name" : "zerr:ZAPI0080", "type" : "item()*", "description" : "" }, { "name" : "zerr:ZAPI0090", "type" : "item()*", "description" : "" }, { "name" : "zerr:ZCSE0001", "type" : "item()*", "description" : "" }, { "name" : "zerr:ZCSE0002", "type" : "item()*", "description" : "" }, { "name" : "zerr:ZCSE0003", "type" : "item()*", "description" : "" }, { "name" : "zerr:ZCSE0004", "type" : "item()*", "description" : "" }, { "name" : "zerr:ZCSE0005", "type" : "item()*", "description" : "" }, { "name" : "zerr:ZCSE0006", "type" : "item()*", "description" : "" }, { "name" : "zerr:ZCSE0007", "type" : "item()*", "description" : "" }, { "name" : "zerr:ZCSE0008", "type" : "item()*", "description" : "" }, { "name" : "zerr:ZCSE0009", "type" : "item()*", "description" : "" }, { "name" : "zerr:ZCSE0010", "type" : "item()*", "description" : "" } ] }, "http://zorba.io/modules/sequence" : { "ns" : "http://zorba.io/modules/sequence", "description" : " This module provides an XQuery API to perform set operations on sequences.\n", "sees" : [  ], "authors" : [ "<xqdoc:author xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">Paul J. Lucas</xqdoc:author>" ], "version" : null, "encoding" : "utf-8", "namespaces" : [ { "uri" : "http://zorba.io/modules/sequence", "prefix" : "seq" }, { "uri" : "http://zorba.io/options/versioning", "prefix" : "ver" } ], "functions" : [ { "isDocumented" : true, "arity" : 2, "name" : "value-except", "qname" : "seq:value-except", "signature" : "($seq1 as xs:anyAtomicType*, $seq2 as xs:anyAtomicType*) as xs:anyAtomicType* external", "description" : " Filters the first sequence of atomic items such that they are not in the\n second sequence based on their values.\n", "summary" : "<p> Filters the first sequence of atomic items such that they are not in the\n second sequence based on their values.</p>", "annotation_str" : "", "annotations" : [  ], "updating" : false, "parameters" : [ { "name" : "seq1", "type" : "xs:anyAtomicType", "occurrence" : "*", "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> The first sequence.</div>" }, { "name" : "seq2", "type" : "xs:anyAtomicType", "occurrence" : "*", "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> The second sequence.</div>" } ], "returns" : { "type" : "xs:anyAtomicType*", "description" : "a sequence only containing items from <code xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">$seq1</code> that are not in <code xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">$seq2</code>." }, "errors" : [  ] }, { "isDocumented" : true, "arity" : 2, "name" : "value-intersect", "qname" : "seq:value-intersect", "signature" : "($seq1 as xs:anyAtomicType*, $seq2 as xs:anyAtomicType*) as xs:anyAtomicType* external", "description" : " Performs a set intersection of two sequences of atomic items based on their\n values.\n", "summary" : "<p> Performs a set intersection of two sequences of atomic items based on their\n values.</p>", "annotation_str" : "", "annotations" : [  ], "updating" : false, "parameters" : [ { "name" : "seq1", "type" : "xs:anyAtomicType", "occurrence" : "*", "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> The first sequence.</div>" }, { "name" : "seq2", "type" : "xs:anyAtomicType", "occurrence" : "*", "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> The second sequence.</div>" } ], "returns" : { "type" : "xs:anyAtomicType*", "description" : "a sequence containing only items from <code xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">$seq1</code> that are also in <code xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">$seq2</code>." }, "errors" : [  ] }, { "isDocumented" : true, "arity" : 2, "name" : "value-union", "qname" : "seq:value-union", "signature" : "($seq1 as xs:anyAtomicType*, $seq2 as xs:anyAtomicType*) as xs:anyAtomicType* external", "description" : " Performs a set union of two sequences of atomic items based on their values.\n", "summary" : "<p> Performs a set union of two sequences of atomic items based on their values.</p>", "annotation_str" : "", "annotations" : [  ], "updating" : false, "parameters" : [ { "name" : "seq1", "type" : "xs:anyAtomicType", "occurrence" : "*", "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> The first sequence.</div>" }, { "name" : "seq2", "type" : "xs:anyAtomicType", "occurrence" : "*", "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> The second sequence.</div>" } ], "returns" : { "type" : "xs:anyAtomicType*", "description" : "a sequence containing all items from <code xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">$seq1</code> and <code xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">seq2$</code> but without duplicates." }, "errors" : [  ] } ], "variables" : [  ] }, "http://api.28.io/functions" : { "ns" : "http://api.28.io/functions", "description" : "", "sees" : [  ], "authors" : [  ], "version" : null, "encoding" : null, "namespaces" : [ { "uri" : "", "prefix" : "an" }, { "uri" : "http://api.28.io/functions", "prefix" : "functions" }, { "uri" : "http://api.28.io/model", "prefix" : "model" }, { "uri" : "http://www.zorba-xquery.com/schemas/pul", "prefix" : "pul" }, { "uri" : "http://zorba.io/modules/reference", "prefix" : "ref" }, { "uri" : "http://www.28msec.com/modules/http/request", "prefix" : "req" }, { "uri" : "http://www.28msec.com/modules/http/response", "prefix" : "response" }, { "uri" : "http://api.28.io/sandbox", "prefix" : "sandbox" }, { "uri" : "http://www.zorba-xquery.com/schemas/xdm", "prefix" : "xdm" } ], "functions" : [ { "isDocumented" : false, "arity" : 1, "name" : "apply-pul", "qname" : "functions:apply-pul", "signature" : "($pul)", "description" : "", "summary" : "", "annotation_str" : " %an:sequential", "annotations" : [ { "prefix" : "an", "ns" : "", "name" : "sequential", "value" : "" } ], "updating" : false, "parameters" : [ { "name" : "pul", "type" : null, "occurrence" : null, "description" : "" } ], "returns" : { "type" : null, "description" : "" }, "errors" : [  ] }, { "isDocumented" : false, "arity" : 0, "name" : "collections", "qname" : "functions:collections", "signature" : "()", "description" : "", "summary" : "", "annotation_str" : "", "annotations" : [  ], "updating" : false, "parameters" : [  ], "returns" : { "type" : null, "description" : "" }, "errors" : [  ] }, { "isDocumented" : false, "arity" : 1, "name" : "decodeURI", "qname" : "functions:decodeURI", "signature" : "($str as xs:string) as xs:anyURI", "description" : "", "summary" : "", "annotation_str" : "", "annotations" : [  ], "updating" : false, "parameters" : [ { "name" : "str", "type" : "xs:string", "occurrence" : null, "description" : "" } ], "returns" : { "type" : "xs:anyURI", "description" : "" }, "errors" : [  ] }, { "isDocumented" : false, "arity" : 1, "name" : "encode-for-js", "qname" : "functions:encode-for-js", "signature" : "($str as xs:string) as xs:string", "description" : "", "summary" : "", "annotation_str" : "", "annotations" : [  ], "updating" : false, "parameters" : [ { "name" : "str", "type" : "xs:string", "occurrence" : null, "description" : "" } ], "returns" : { "type" : "xs:string", "description" : "" }, "errors" : [  ] }, { "isDocumented" : false, "arity" : 5, "name" : "entries", "qname" : "functions:entries", "signature" : "($collection as xs:string?, $node as xs:anyURI?, $index as xs:string?, $value as xs:string?, $format as xs:string)", "description" : "", "summary" : "", "annotation_str" : " %an:sequential", "annotations" : [ { "prefix" : "an", "ns" : "", "name" : "sequential", "value" : "" } ], "updating" : false, "parameters" : [ { "name" : "collection", "type" : "xs:string", "occurrence" : "?", "description" : "" }, { "name" : "node", "type" : "xs:anyURI", "occurrence" : "?", "description" : "" }, { "name" : "index", "type" : "xs:string", "occurrence" : "?", "description" : "" }, { "name" : "value", "type" : "xs:string", "occurrence" : "?", "description" : "" }, { "name" : "format", "type" : "xs:string", "occurrence" : null, "description" : "" } ], "returns" : { "type" : null, "description" : "" }, "errors" : [  ] }, { "isDocumented" : false, "arity" : 0, "name" : "indexes", "qname" : "functions:indexes", "signature" : "()", "description" : "", "summary" : "", "annotation_str" : "", "annotations" : [  ], "updating" : false, "parameters" : [  ], "returns" : { "type" : null, "description" : "" }, "errors" : [  ] }, { "isDocumented" : false, "arity" : 3, "name" : "key", "qname" : "functions:key", "signature" : "($collection as xs:string, $condition as xs:string, $namespaces)", "description" : "", "summary" : "", "annotation_str" : "", "annotations" : [  ], "updating" : false, "parameters" : [ { "name" : "collection", "type" : "xs:string", "occurrence" : null, "description" : "" }, { "name" : "condition", "type" : "xs:string", "occurrence" : null, "description" : "" }, { "name" : "namespaces", "type" : null, "occurrence" : null, "description" : "" } ], "returns" : { "type" : null, "description" : "" }, "errors" : [  ] }, { "isDocumented" : false, "arity" : 3, "name" : "namesearch", "qname" : "functions:namesearch", "signature" : "($collection as xs:string, $path as xs:string, $namespaces)", "description" : "", "summary" : "", "annotation_str" : "", "annotations" : [  ], "updating" : false, "parameters" : [ { "name" : "collection", "type" : "xs:string", "occurrence" : null, "description" : "" }, { "name" : "path", "type" : "xs:string", "occurrence" : null, "description" : "" }, { "name" : "namespaces", "type" : null, "occurrence" : null, "description" : "" } ], "returns" : { "type" : null, "description" : "" }, "errors" : [  ] }, { "isDocumented" : false, "arity" : 1, "name" : "node-to-js", "qname" : "functions:node-to-js", "signature" : "($node) as xs:string*", "description" : "", "summary" : "", "annotation_str" : "", "annotations" : [  ], "updating" : false, "parameters" : [ { "name" : "node", "type" : null, "occurrence" : null, "description" : "" } ], "returns" : { "type" : "xs:string*", "description" : "" }, "errors" : [  ] }, { "isDocumented" : false, "arity" : 1, "name" : "parse-namespaces", "qname" : "functions:parse-namespaces", "signature" : "($namespaces as xs:string)", "description" : "", "summary" : "", "annotation_str" : "", "annotations" : [  ], "updating" : false, "parameters" : [ { "name" : "namespaces", "type" : "xs:string", "occurrence" : null, "description" : "" } ], "returns" : { "type" : null, "description" : "" }, "errors" : [  ] }, { "isDocumented" : false, "arity" : 1, "name" : "pksearch", "qname" : "functions:pksearch", "signature" : "($collection as xs:string)", "description" : "", "summary" : "", "annotation_str" : "", "annotations" : [  ], "updating" : false, "parameters" : [ { "name" : "collection", "type" : "xs:string", "occurrence" : null, "description" : "" } ], "returns" : { "type" : null, "description" : "" }, "errors" : [  ] }, { "isDocumented" : false, "arity" : 0, "name" : "startpage", "qname" : "functions:startpage", "signature" : "()", "description" : "", "summary" : "", "annotation_str" : " %an:sequential", "annotations" : [ { "prefix" : "an", "ns" : "", "name" : "sequential", "value" : "" } ], "updating" : false, "parameters" : [  ], "returns" : { "type" : null, "description" : "" }, "errors" : [  ] }, { "isDocumented" : false, "arity" : 1, "name" : "strip-whitespaces", "qname" : "functions:strip-whitespaces", "signature" : "($xml)", "description" : "", "summary" : "", "annotation_str" : "", "annotations" : [  ], "updating" : false, "parameters" : [ { "name" : "xml", "type" : null, "occurrence" : null, "description" : "" } ], "returns" : { "type" : null, "description" : "" }, "errors" : [  ] }, { "isDocumented" : false, "arity" : 3, "name" : "tuple", "qname" : "functions:tuple", "signature" : "($collection as xs:string, $condition as xs:string, $namespaces)", "description" : "", "summary" : "", "annotation_str" : "", "annotations" : [  ], "updating" : false, "parameters" : [ { "name" : "collection", "type" : "xs:string", "occurrence" : null, "description" : "" }, { "name" : "condition", "type" : "xs:string", "occurrence" : null, "description" : "" }, { "name" : "namespaces", "type" : null, "occurrence" : null, "description" : "" } ], "returns" : { "type" : null, "description" : "" }, "errors" : [  ] }, { "isDocumented" : false, "arity" : 3, "name" : "valuesearch", "qname" : "functions:valuesearch", "signature" : "($collection as xs:string, $path as xs:string, $namespaces)", "description" : "", "summary" : "", "annotation_str" : "", "annotations" : [  ], "updating" : false, "parameters" : [ { "name" : "collection", "type" : "xs:string", "occurrence" : null, "description" : "" }, { "name" : "path", "type" : "xs:string", "occurrence" : null, "description" : "" }, { "name" : "namespaces", "type" : null, "occurrence" : null, "description" : "" } ], "returns" : { "type" : null, "description" : "" }, "errors" : [  ] }, { "isDocumented" : true, "arity" : 1, "name" : "xmltojs", "qname" : "functions:xmltojs", "signature" : "($content)", "description" : " Internal function. Converts the XML contents of a POST BODY to JavaScript calls that rebuild the given XML for the collection browser frontend\n", "summary" : "<p> Internal function.</p>", "annotation_str" : " %an:sequential", "annotations" : [ { "prefix" : "an", "ns" : "", "name" : "sequential", "value" : "" } ], "updating" : false, "parameters" : [ { "name" : "content", "type" : null, "occurrence" : null, "description" : "" } ], "returns" : { "type" : null, "description" : "JavaScript calls for collection browser frontend" }, "errors" : [  ] } ], "variables" : [  ] }, "http://xbrl.io/modules/bizql/profiles/sec/companies" : { "ns" : "http://xbrl.io/modules/bizql/profiles/sec/companies", "description" : " <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">This module provides functionality for querying companies (XBRL entities)\n  submitting to the SEC.</p>\n <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">SEC Companies are nothing else than XBRL entities. For XBRL-generic requests on\n entities, use the generic entities module.</p>\n <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">With this module, you can retrieve a company with its CIK (without converting\n it to an EID). You can also retrieve companies by sector, by SIC code, by types,\n by tags, by tickers.</p>\n", "sees" : [  ], "authors" : [ "<xqdoc:author xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">Charles Hoffman</xqdoc:author>", "<xqdoc:author xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">Matthias Brantner</xqdoc:author>", "<xqdoc:author xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">Dennis Knochenwefel</xqdoc:author>", "<xqdoc:author xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">Ghislain Fourny</xqdoc:author>" ], "version" : null, "encoding" : "utf-8", "namespaces" : [ { "uri" : "http://xbrl.io/modules/bizql/archives", "prefix" : "archives" }, { "uri" : "http://xbrl.io/modules/bizql/profiles/sec/companies", "prefix" : "companies" }, { "uri" : "http://www.28msec.com/modules/credentials", "prefix" : "credentials" }, { "uri" : "http://xbrl.io/modules/bizql/entities", "prefix" : "entities" }, { "uri" : "http://www.28msec.com/modules/mongodb", "prefix" : "mongo" }, { "uri" : "http://xbrl.io/modules/bizql/profiles/sec/core", "prefix" : "sec" }, { "uri" : "http://zorba.io/options/versioning", "prefix" : "ver" } ], "functions" : [ { "isDocumented" : true, "arity" : 1, "name" : "companies-by-types", "qname" : "companies:companies-by-types", "signature" : "($company-types as string*) as object()*", "description" : " <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">Retrieves all companies whose company type matches the passed string(s).</p>\n", "summary" : "<p>  Retrieves all companies whose company type matches the passed string(s).</p>", "annotation_str" : "", "annotations" : [  ], "updating" : false, "parameters" : [ { "name" : "company-types", "type" : "string", "occurrence" : "*", "description" : "" } ], "returns" : { "type" : "object()*", "description" : "all companies with matching company type." }, "errors" : [  ] }, { "isDocumented" : true, "arity" : 1, "name" : "companies-for-SIC", "qname" : "companies:companies-for-SIC", "signature" : "($sic-codes as string*) as object()*", "description" : " <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">Retrieves all companies whose type of business\n matches the SIC (Standard Industrial Classification) code.</p>\n", "summary" : "<p>  Retrieves all companies whose type of business\n matches the SIC (Standard Industrial Classification) code.</p>", "annotation_str" : "", "annotations" : [  ], "updating" : false, "parameters" : [ { "name" : "sic-codes", "type" : "string", "occurrence" : "*", "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> a sequence of SIC codes.</div>" } ], "returns" : { "type" : "object()*", "description" : "all companies with one of these SIC codes." }, "errors" : [  ] }, { "isDocumented" : true, "arity" : 1, "name" : "companies-for-sector", "qname" : "companies:companies-for-sector", "signature" : "($sectors as string*) as object()*", "description" : " <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">Retrieves all companies in the given sectors.</p>\n", "summary" : "<p>  Retrieves all companies in the given sectors.</p>", "annotation_str" : "", "annotations" : [  ], "updating" : false, "parameters" : [ { "name" : "sectors", "type" : "string", "occurrence" : "*", "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> a sequence of sectors as strings.</div>" } ], "returns" : { "type" : "object()*", "description" : "all companies in these sectors." }, "errors" : [  ] }, { "isDocumented" : true, "arity" : 1, "name" : "companies-for-tags", "qname" : "companies:companies-for-tags", "signature" : "($tags as string*) as object()*", "description" : " <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">Return all companies with any of the given tags.</p>\n", "summary" : "<p>  Return all companies with any of the given tags.</p>", "annotation_str" : "", "annotations" : [  ], "updating" : false, "parameters" : [ { "name" : "tags", "type" : "string", "occurrence" : "*", "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> the tags to filter.</div>" } ], "returns" : { "type" : "object()*", "description" : "all companies with the given tags." }, "errors" : [  ] }, { "isDocumented" : true, "arity" : 1, "name" : "companies-for-tickers", "qname" : "companies:companies-for-tickers", "signature" : "($tickers as string*) as object()*", "description" : " <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">Return all companies with any of the given ticker symbols.</p>\n <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">Tickers are case insensitive</p>\n", "summary" : "<p>  Return all companies with any of the given ticker symbols.</p>", "annotation_str" : "", "annotations" : [  ], "updating" : false, "parameters" : [ { "name" : "tickers", "type" : "string", "occurrence" : "*", "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> the tickers to filter.</div>" } ], "returns" : { "type" : "object()*", "description" : "all companies with the given tickers." }, "errors" : [  ] }, { "isDocumented" : true, "arity" : 0, "name" : "companies", "qname" : "companies:companies", "signature" : "() as object()*", "description" : " <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">Return all companies</p>\n", "summary" : "<p>  Return all companies \n</p>", "annotation_str" : "", "annotations" : [  ], "updating" : false, "parameters" : [  ], "returns" : { "type" : "object()*", "description" : "all companies." }, "errors" : [  ] }, { "isDocumented" : true, "arity" : 1, "name" : "companies", "qname" : "companies:companies", "signature" : "($companies-or-ids as item()*) as object()*", "description" : " <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">Return the companies with the given identifiers.</p>\n", "summary" : "<p>  Return the companies with the given identifiers.</p>", "annotation_str" : "", "annotations" : [  ], "updating" : false, "parameters" : [ { "name" : "companies-or-ids", "type" : "item()", "occurrence" : "*", "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> the ids of the companies or the companies themselves.</div>" } ], "returns" : { "type" : "object()*", "description" : "the companies with the given identifiers the empty sequence if no company was found or if the input is an empty sequence." }, "errors" : [  ] }, { "isDocumented" : true, "arity" : 1, "name" : "company-type", "qname" : "companies:company-type", "signature" : "($company-name as string) as string", "description" : " <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">Return company type for a given company name. Company type can be one of:</p>\n <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">\n   <ul>\n     <li>Corporation</li>\n     <li>Partnership</li>\n     <li>unknown</li>\n   </ul>\n </p>\n", "summary" : "<p>  Return company type for a given company name.</p>", "annotation_str" : "", "annotations" : [  ], "updating" : false, "parameters" : [ { "name" : "company-name", "type" : "string", "occurrence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> the name of a company</div>" } ], "returns" : { "type" : "string", "description" : "the company type string or \"unknown\" if the type can not be inferred" }, "errors" : [  ] }, { "isDocumented" : true, "arity" : 1, "name" : "eid", "qname" : "companies:eid", "signature" : "($companies-or-eids-or-ciks as item()*) as string*", "description" : " <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">Converts the input to a normalized CIK. The input\n can be either a pure CIK without scheme, or an already\n normalized CIK, or an entity object which contains a CIK\n in its id field.</p>\n", "summary" : "<p>  Converts the input to a normalized CIK.</p>", "annotation_str" : "", "annotations" : [  ], "updating" : false, "parameters" : [ { "name" : "companies-or-eids-or-ciks", "type" : "item()", "occurrence" : "*", "description" : "" } ], "returns" : { "type" : "string*", "description" : "the normalized CIK." }, "errors" : [ "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">sec:INVALID_PARAMETER if the CIK or entity is not valid</xqdoc:error>" ] }, { "isDocumented" : true, "arity" : 1, "name" : "types", "qname" : "companies:types", "signature" : "($companies-or-ciks as item()*) as string*", "description" : " <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">Retrieves the type of a company.</p>\n", "summary" : "<p>  Retrieves the type of a company.</p>", "annotation_str" : "", "annotations" : [  ], "updating" : false, "parameters" : [ { "name" : "companies-or-ciks", "type" : "item()", "occurrence" : "*", "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> a sequence of companies or their identifiers (CIKs).</div>" } ], "returns" : { "type" : "string*", "description" : "all company types." }, "errors" : [  ] } ], "variables" : [  ] }, "http://api.28.io/collections" : { "ns" : "http://api.28.io/collections", "description" : "", "sees" : [  ], "authors" : [  ], "version" : null, "encoding" : null, "namespaces" : [ { "uri" : "", "prefix" : "an" }, { "uri" : "http://api.28.io/collections", "prefix" : "cm" }, { "uri" : "http://www.28msec.com/modules/http/request", "prefix" : "req" }, { "uri" : "http://www.28msec.com/modules/http/response", "prefix" : "resp" }, { "uri" : "http://api.28.io/util", "prefix" : "util" }, { "uri" : "http://api.28.io/validation", "prefix" : "validate" } ], "functions" : [ { "isDocumented" : false, "arity" : 1, "name" : "definition-for-dynamic-collection", "qname" : "cm:definition-for-dynamic-collection", "signature" : "($name as xs:string) as object()", "description" : "", "summary" : "", "annotation_str" : "", "annotations" : [  ], "updating" : false, "parameters" : [ { "name" : "name", "type" : "xs:string", "occurrence" : null, "description" : "" } ], "returns" : { "type" : "object()", "description" : "" }, "errors" : [  ] }, { "isDocumented" : false, "arity" : 2, "name" : "delete-collection-property", "qname" : "cm:delete-collection-property", "signature" : "($name as xs:string, $property as xs:string) as empty-sequence()", "description" : "", "summary" : "", "annotation_str" : " %an:sequential", "annotations" : [ { "prefix" : "an", "ns" : "", "name" : "sequential", "value" : "" } ], "updating" : false, "parameters" : [ { "name" : "name", "type" : "xs:string", "occurrence" : null, "description" : "" }, { "name" : "property", "type" : "xs:string", "occurrence" : null, "description" : "" } ], "returns" : { "type" : "empty-sequence()", "description" : "" }, "errors" : [  ] }, { "isDocumented" : false, "arity" : 1, "name" : "delete-collection", "qname" : "cm:delete-collection", "signature" : "($name) as empty-sequence()", "description" : "", "summary" : "", "annotation_str" : " %an:sequential", "annotations" : [ { "prefix" : "an", "ns" : "", "name" : "sequential", "value" : "" } ], "updating" : false, "parameters" : [ { "name" : "name", "type" : null, "occurrence" : null, "description" : "" } ], "returns" : { "type" : "empty-sequence()", "description" : "" }, "errors" : [  ] }, { "isDocumented" : false, "arity" : 0, "name" : "dispatch", "qname" : "cm:dispatch", "signature" : "()", "description" : "", "summary" : "", "annotation_str" : " %an:sequential", "annotations" : [ { "prefix" : "an", "ns" : "", "name" : "sequential", "value" : "" } ], "updating" : false, "parameters" : [  ], "returns" : { "type" : null, "description" : "" }, "errors" : [  ] }, { "isDocumented" : false, "arity" : 2, "name" : "get-collection-property", "qname" : "cm:get-collection-property", "signature" : "($name as xs:string, $property as xs:string)", "description" : "", "summary" : "", "annotation_str" : " %an:sequential", "annotations" : [ { "prefix" : "an", "ns" : "", "name" : "sequential", "value" : "" } ], "updating" : false, "parameters" : [ { "name" : "name", "type" : "xs:string", "occurrence" : null, "description" : "" }, { "name" : "property", "type" : "xs:string", "occurrence" : null, "description" : "" } ], "returns" : { "type" : null, "description" : "" }, "errors" : [  ] }, { "isDocumented" : false, "arity" : 1, "name" : "get-collection", "qname" : "cm:get-collection", "signature" : "($name as xs:string) as object()", "description" : "", "summary" : "", "annotation_str" : " %an:sequential", "annotations" : [ { "prefix" : "an", "ns" : "", "name" : "sequential", "value" : "" } ], "updating" : false, "parameters" : [ { "name" : "name", "type" : "xs:string", "occurrence" : null, "description" : "" } ], "returns" : { "type" : "object()", "description" : "" }, "errors" : [  ] }, { "isDocumented" : false, "arity" : 1, "name" : "get-or-create-collection-dynamic", "qname" : "cm:get-or-create-collection-dynamic", "signature" : "($name as xs:string) as object()", "description" : "", "summary" : "", "annotation_str" : " %an:sequential", "annotations" : [ { "prefix" : "an", "ns" : "", "name" : "sequential", "value" : "" } ], "updating" : false, "parameters" : [ { "name" : "name", "type" : "xs:string", "occurrence" : null, "description" : "" } ], "returns" : { "type" : "object()", "description" : "" }, "errors" : [  ] }, { "isDocumented" : false, "arity" : 0, "name" : "list-collections", "qname" : "cm:list-collections", "signature" : "() as array()", "description" : "", "summary" : "", "annotation_str" : " %an:sequential", "annotations" : [ { "prefix" : "an", "ns" : "", "name" : "sequential", "value" : "" } ], "updating" : false, "parameters" : [  ], "returns" : { "type" : "array()", "description" : "" }, "errors" : [  ] }, { "isDocumented" : false, "arity" : 0, "name" : "metadata", "qname" : "cm:metadata", "signature" : "()", "description" : "", "summary" : "", "annotation_str" : "", "annotations" : [  ], "updating" : false, "parameters" : [  ], "returns" : { "type" : null, "description" : "" }, "errors" : [  ] }, { "isDocumented" : false, "arity" : 3, "name" : "put-collection-property", "qname" : "cm:put-collection-property", "signature" : "($name as xs:string, $property as xs:string, $value) as empty-sequence()", "description" : "", "summary" : "", "annotation_str" : " %an:sequential", "annotations" : [ { "prefix" : "an", "ns" : "", "name" : "sequential", "value" : "" } ], "updating" : false, "parameters" : [ { "name" : "name", "type" : "xs:string", "occurrence" : null, "description" : "" }, { "name" : "property", "type" : "xs:string", "occurrence" : null, "description" : "" }, { "name" : "value", "type" : null, "occurrence" : null, "description" : "" } ], "returns" : { "type" : "empty-sequence()", "description" : "" }, "errors" : [  ] }, { "isDocumented" : false, "arity" : 2, "name" : "put-collection", "qname" : "cm:put-collection", "signature" : "($name as xs:string, $collection as object()) as empty-sequence()", "description" : "", "summary" : "", "annotation_str" : " %an:sequential", "annotations" : [ { "prefix" : "an", "ns" : "", "name" : "sequential", "value" : "" } ], "updating" : false, "parameters" : [ { "name" : "name", "type" : "xs:string", "occurrence" : null, "description" : "" }, { "name" : "collection", "type" : "object()", "occurrence" : null, "description" : "" } ], "returns" : { "type" : "empty-sequence()", "description" : "" }, "errors" : [  ] }, { "isDocumented" : false, "arity" : 1, "name" : "validate-collection", "qname" : "cm:validate-collection", "signature" : "($collection as object()) as empty-sequence()", "description" : "", "summary" : "", "annotation_str" : "", "annotations" : [  ], "updating" : false, "parameters" : [ { "name" : "collection", "type" : "object()", "occurrence" : null, "description" : "" } ], "returns" : { "type" : "empty-sequence()", "description" : "" }, "errors" : [  ] } ], "variables" : [  ] }, "http://zorba.io/modules/excel/math-sumproduct" : { "ns" : "http://zorba.io/modules/excel/math-sumproduct", "description" : " Module implementing the sumproduct functions from Excel 2003 math library.\n There are 30 functions defined, implementing the same function\n but with 1 to 30 parameters.\n Each parameter can be a sequence of infinite length.\n", "sees" : [ "<xqdoc:see xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"><a href=\"http://office.microsoft.com/en-us/excel/HP052092931033.aspx\" target=\"_blank\">Excel 2003 Documentation: Math-sumproduct Functions</a></xqdoc:see>" ], "authors" : [ "<xqdoc:author xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">Daniel Turcanu</xqdoc:author>" ], "version" : null, "encoding" : "utf-8", "namespaces" : [ { "uri" : "http://zorba.io/modules/excel/math-sumproduct", "prefix" : "excel" }, { "uri" : "http://zorba.io/modules/excel/errors", "prefix" : "excel-err" }, { "uri" : "http://zorba.io/modules/excel/math", "prefix" : "excel-math" }, { "uri" : "http://zorba.io/options/versioning", "prefix" : "ver" } ], "functions" : [ { "isDocumented" : true, "arity" : 1, "name" : "sumproduct", "qname" : "excel:sumproduct", "signature" : "($array1 as xs:anyAtomicType*) as xs:anyAtomicType", "description" : " Sums the values in the sequence.\n The sequence can be of any length.\n", "summary" : "<p> Sums the values in the sequence.</p>", "annotation_str" : "", "annotations" : [  ], "updating" : false, "parameters" : [ { "name" : "array1", "type" : "xs:anyAtomicType", "occurrence" : "*", "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> the sequence of numbers or arguments castable to numeric</div>" } ], "returns" : { "type" : "xs:anyAtomicType", "description" : "the sum" }, "errors" : [ "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">excel-err:Value if the parameters cannot be casted to numeric type</xqdoc:error>" ] }, { "isDocumented" : true, "arity" : 10, "name" : "sumproduct", "qname" : "excel:sumproduct", "signature" : "($array1 as xs:anyAtomicType*, $array2 as xs:anyAtomicType*, $array3 as xs:anyAtomicType*, $array4 as xs:anyAtomicType*, $array5 as xs:anyAtomicType*, $array6 as xs:anyAtomicType*, $array7 as xs:anyAtomicType*, $array8 as xs:anyAtomicType*, $array9 as xs:anyAtomicType*, $array10 as xs:anyAtomicType*) as xs:anyAtomicType", "description" : " Multiplies the elements on the same position in each sequence\n and sums up the results.\n", "summary" : "<p> Multiplies the elements on the same position in each sequence\n and sums up the results.</p>", "annotation_str" : "", "annotations" : [  ], "updating" : false, "parameters" : [ { "name" : "array1", "type" : "xs:anyAtomicType", "occurrence" : "*", "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> the sequences of numbers or arguments castable to numeric</div>" }, { "name" : "array2", "type" : "xs:anyAtomicType", "occurrence" : "*", "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> the sequences of numbers or arguments castable to numeric</div>" }, { "name" : "array3", "type" : "xs:anyAtomicType", "occurrence" : "*", "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> the sequences of numbers or arguments castable to numeric</div>" }, { "name" : "array4", "type" : "xs:anyAtomicType", "occurrence" : "*", "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> the sequences of numbers or arguments castable to numeric</div>" }, { "name" : "array5", "type" : "xs:anyAtomicType", "occurrence" : "*", "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> the sequences of numbers or arguments castable to numeric</div>" }, { "name" : "array6", "type" : "xs:anyAtomicType", "occurrence" : "*", "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> the sequences of numbers or arguments castable to numeric</div>" }, { "name" : "array7", "type" : "xs:anyAtomicType", "occurrence" : "*", "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> the sequences of numbers or arguments castable to numeric</div>" }, { "name" : "array8", "type" : "xs:anyAtomicType", "occurrence" : "*", "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> the sequences of numbers or arguments castable to numeric</div>" }, { "name" : "array9", "type" : "xs:anyAtomicType", "occurrence" : "*", "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> the sequences of numbers or arguments castable to numeric</div>" }, { "name" : "array10", "type" : "xs:anyAtomicType", "occurrence" : "*", "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> the sequences of numbers or arguments castable to numeric</div>" } ], "returns" : { "type" : "xs:anyAtomicType", "description" : "the sum of products" }, "errors" : [ "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">excel-err:Value if the parameters cannot be casted to numeric type</xqdoc:error>" ] }, { "isDocumented" : true, "arity" : 11, "name" : "sumproduct", "qname" : "excel:sumproduct", "signature" : "($array1 as xs:anyAtomicType*, $array2 as xs:anyAtomicType*, $array3 as xs:anyAtomicType*, $array4 as xs:anyAtomicType*, $array5 as xs:anyAtomicType*, $array6 as xs:anyAtomicType*, $array7 as xs:anyAtomicType*, $array8 as xs:anyAtomicType*, $array9 as xs:anyAtomicType*, $array10 as xs:anyAtomicType*, $array11 as xs:anyAtomicType*) as xs:anyAtomicType", "description" : " Multiplies the elements on the same position in each sequence\n and sums up the results.\n", "summary" : "<p> Multiplies the elements on the same position in each sequence\n and sums up the results.</p>", "annotation_str" : "", "annotations" : [  ], "updating" : false, "parameters" : [ { "name" : "array1", "type" : "xs:anyAtomicType", "occurrence" : "*", "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> the sequences of numbers or arguments castable to numeric</div>" }, { "name" : "array2", "type" : "xs:anyAtomicType", "occurrence" : "*", "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> the sequences of numbers or arguments castable to numeric</div>" }, { "name" : "array3", "type" : "xs:anyAtomicType", "occurrence" : "*", "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> the sequences of numbers or arguments castable to numeric</div>" }, { "name" : "array4", "type" : "xs:anyAtomicType", "occurrence" : "*", "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> the sequences of numbers or arguments castable to numeric</div>" }, { "name" : "array5", "type" : "xs:anyAtomicType", "occurrence" : "*", "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> the sequences of numbers or arguments castable to numeric</div>" }, { "name" : "array6", "type" : "xs:anyAtomicType", "occurrence" : "*", "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> the sequences of numbers or arguments castable to numeric</div>" }, { "name" : "array7", "type" : "xs:anyAtomicType", "occurrence" : "*", "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> the sequences of numbers or arguments castable to numeric</div>" }, { "name" : "array8", "type" : "xs:anyAtomicType", "occurrence" : "*", "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> the sequences of numbers or arguments castable to numeric</div>" }, { "name" : "array9", "type" : "xs:anyAtomicType", "occurrence" : "*", "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> the sequences of numbers or arguments castable to numeric</div>" }, { "name" : "array10", "type" : "xs:anyAtomicType", "occurrence" : "*", "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> the sequences of numbers or arguments castable to numeric</div>" }, { "name" : "array11", "type" : "xs:anyAtomicType", "occurrence" : "*", "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> the sequences of numbers or arguments castable to numeric</div>" } ], "returns" : { "type" : "xs:anyAtomicType", "description" : "the sum of products" }, "errors" : [ "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">excel-err:Value if the parameters cannot be casted to numeric type</xqdoc:error>" ] }, { "isDocumented" : true, "arity" : 12, "name" : "sumproduct", "qname" : "excel:sumproduct", "signature" : "($array1 as xs:anyAtomicType*, $array2 as xs:anyAtomicType*, $array3 as xs:anyAtomicType*, $array4 as xs:anyAtomicType*, $array5 as xs:anyAtomicType*, $array6 as xs:anyAtomicType*, $array7 as xs:anyAtomicType*, $array8 as xs:anyAtomicType*, $array9 as xs:anyAtomicType*, $array10 as xs:anyAtomicType*, $array11 as xs:anyAtomicType*, $array12 as xs:anyAtomicType*) as xs:anyAtomicType", "description" : " Multiplies the elements on the same position in each sequence\n and sums up the results.\n", "summary" : "<p> Multiplies the elements on the same position in each sequence\n and sums up the results.</p>", "annotation_str" : "", "annotations" : [  ], "updating" : false, "parameters" : [ { "name" : "array1", "type" : "xs:anyAtomicType", "occurrence" : "*", "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> the sequences of numbers or arguments castable to numeric</div>" }, { "name" : "array2", "type" : "xs:anyAtomicType", "occurrence" : "*", "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> the sequences of numbers or arguments castable to numeric</div>" }, { "name" : "array3", "type" : "xs:anyAtomicType", "occurrence" : "*", "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> the sequences of numbers or arguments castable to numeric</div>" }, { "name" : "array4", "type" : "xs:anyAtomicType", "occurrence" : "*", "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> the sequences of numbers or arguments castable to numeric</div>" }, { "name" : "array5", "type" : "xs:anyAtomicType", "occurrence" : "*", "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> the sequences of numbers or arguments castable to numeric</div>" }, { "name" : "array6", "type" : "xs:anyAtomicType", "occurrence" : "*", "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> the sequences of numbers or arguments castable to numeric</div>" }, { "name" : "array7", "type" : "xs:anyAtomicType", "occurrence" : "*", "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> the sequences of numbers or arguments castable to numeric</div>" }, { "name" : "array8", "type" : "xs:anyAtomicType", "occurrence" : "*", "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> the sequences of numbers or arguments castable to numeric</div>" }, { "name" : "array9", "type" : "xs:anyAtomicType", "occurrence" : "*", "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> the sequences of numbers or arguments castable to numeric</div>" }, { "name" : "array10", "type" : "xs:anyAtomicType", "occurrence" : "*", "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> the sequences of numbers or arguments castable to numeric</div>" }, { "name" : "array11", "type" : "xs:anyAtomicType", "occurrence" : "*", "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> the sequences of numbers or arguments castable to numeric</div>" }, { "name" : "array12", "type" : "xs:anyAtomicType", "occurrence" : "*", "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> the sequences of numbers or arguments castable to numeric</div>" } ], "returns" : { "type" : "xs:anyAtomicType", "description" : "the sum of products" }, "errors" : [ "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">excel-err:Value if the parameters cannot be casted to numeric type</xqdoc:error>" ] }, { "isDocumented" : true, "arity" : 13, "name" : "sumproduct", "qname" : "excel:sumproduct", "signature" : "($array1 as xs:anyAtomicType*, $array2 as xs:anyAtomicType*, $array3 as xs:anyAtomicType*, $array4 as xs:anyAtomicType*, $array5 as xs:anyAtomicType*, $array6 as xs:anyAtomicType*, $array7 as xs:anyAtomicType*, $array8 as xs:anyAtomicType*, $array9 as xs:anyAtomicType*, $array10 as xs:anyAtomicType*, $array11 as xs:anyAtomicType*, $array12 as xs:anyAtomicType*, $array13 as xs:anyAtomicType*) as xs:anyAtomicType", "description" : " Multiplies the elements on the same position in each sequence\n and sums up the results.\n", "summary" : "<p> Multiplies the elements on the same position in each sequence\n and sums up the results.</p>", "annotation_str" : "", "annotations" : [  ], "updating" : false, "parameters" : [ { "name" : "array1", "type" : "xs:anyAtomicType", "occurrence" : "*", "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> the sequences of numbers or arguments castable to numeric</div>" }, { "name" : "array2", "type" : "xs:anyAtomicType", "occurrence" : "*", "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> the sequences of numbers or arguments castable to numeric</div>" }, { "name" : "array3", "type" : "xs:anyAtomicType", "occurrence" : "*", "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> the sequences of numbers or arguments castable to numeric</div>" }, { "name" : "array4", "type" : "xs:anyAtomicType", "occurrence" : "*", "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> the sequences of numbers or arguments castable to numeric</div>" }, { "name" : "array5", "type" : "xs:anyAtomicType", "occurrence" : "*", "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> the sequences of numbers or arguments castable to numeric</div>" }, { "name" : "array6", "type" : "xs:anyAtomicType", "occurrence" : "*", "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> the sequences of numbers or arguments castable to numeric</div>" }, { "name" : "array7", "type" : "xs:anyAtomicType", "occurrence" : "*", "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> the sequences of numbers or arguments castable to numeric</div>" }, { "name" : "array8", "type" : "xs:anyAtomicType", "occurrence" : "*", "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> the sequences of numbers or arguments castable to numeric</div>" }, { "name" : "array9", "type" : "xs:anyAtomicType", "occurrence" : "*", "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> the sequences of numbers or arguments castable to numeric</div>" }, { "name" : "array10", "type" : "xs:anyAtomicType", "occurrence" : "*", "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> the sequences of numbers or arguments castable to numeric</div>" }, { "name" : "array11", "type" : "xs:anyAtomicType", "occurrence" : "*", "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> the sequences of numbers or arguments castable to numeric</div>" }, { "name" : "array12", "type" : "xs:anyAtomicType", "occurrence" : "*", "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> the sequences of numbers or arguments castable to numeric</div>" }, { "name" : "array13", "type" : "xs:anyAtomicType", "occurrence" : "*", "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> the sequences of numbers or arguments castable to numeric</div>" } ], "returns" : { "type" : "xs:anyAtomicType", "description" : "the sum of products" }, "errors" : [ "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">excel-err:Value if the parameters cannot be casted to numeric type</xqdoc:error>" ] }, { "isDocumented" : true, "arity" : 14, "name" : "sumproduct", "qname" : "excel:sumproduct", "signature" : "($array1 as xs:anyAtomicType*, $array2 as xs:anyAtomicType*, $array3 as xs:anyAtomicType*, $array4 as xs:anyAtomicType*, $array5 as xs:anyAtomicType*, $array6 as xs:anyAtomicType*, $array7 as xs:anyAtomicType*, $array8 as xs:anyAtomicType*, $array9 as xs:anyAtomicType*, $array10 as xs:anyAtomicType*, $array11 as xs:anyAtomicType*, $array12 as xs:anyAtomicType*, $array13 as xs:anyAtomicType*, $array14 as xs:anyAtomicType*) as xs:anyAtomicType", "description" : " Multiplies the elements on the same position in each sequence\n and sums up the results.\n", "summary" : "<p> Multiplies the elements on the same position in each sequence\n and sums up the results.</p>", "annotation_str" : "", "annotations" : [  ], "updating" : false, "parameters" : [ { "name" : "array1", "type" : "xs:anyAtomicType", "occurrence" : "*", "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> the sequences of numbers or arguments castable to numeric</div>" }, { "name" : "array2", "type" : "xs:anyAtomicType", "occurrence" : "*", "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> the sequences of numbers or arguments castable to numeric</div>" }, { "name" : "array3", "type" : "xs:anyAtomicType", "occurrence" : "*", "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> the sequences of numbers or arguments castable to numeric</div>" }, { "name" : "array4", "type" : "xs:anyAtomicType", "occurrence" : "*", "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> the sequences of numbers or arguments castable to numeric</div>" }, { "name" : "array5", "type" : "xs:anyAtomicType", "occurrence" : "*", "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> the sequences of numbers or arguments castable to numeric</div>" }, { "name" : "array6", "type" : "xs:anyAtomicType", "occurrence" : "*", "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> the sequences of numbers or arguments castable to numeric</div>" }, { "name" : "array7", "type" : "xs:anyAtomicType", "occurrence" : "*", "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> the sequences of numbers or arguments castable to numeric</div>" }, { "name" : "array8", "type" : "xs:anyAtomicType", "occurrence" : "*", "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> the sequences of numbers or arguments castable to numeric</div>" }, { "name" : "array9", "type" : "xs:anyAtomicType", "occurrence" : "*", "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> the sequences of numbers or arguments castable to numeric</div>" }, { "name" : "array10", "type" : "xs:anyAtomicType", "occurrence" : "*", "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> the sequences of numbers or arguments castable to numeric</div>" }, { "name" : "array11", "type" : "xs:anyAtomicType", "occurrence" : "*", "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> the sequences of numbers or arguments castable to numeric</div>" }, { "name" : "array12", "type" : "xs:anyAtomicType", "occurrence" : "*", "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> the sequences of numbers or arguments castable to numeric</div>" }, { "name" : "array13", "type" : "xs:anyAtomicType", "occurrence" : "*", "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> the sequences of numbers or arguments castable to numeric</div>" }, { "name" : "array14", "type" : "xs:anyAtomicType", "occurrence" : "*", "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> the sequences of numbers or arguments castable to numeric</div>" } ], "returns" : { "type" : "xs:anyAtomicType", "description" : "the sum of products" }, "errors" : [ "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">excel-err:Value if the parameters cannot be casted to numeric type</xqdoc:error>" ] }, { "isDocumented" : true, "arity" : 15, "name" : "sumproduct", "qname" : "excel:sumproduct", "signature" : "($array1 as xs:anyAtomicType*, $array2 as xs:anyAtomicType*, $array3 as xs:anyAtomicType*, $array4 as xs:anyAtomicType*, $array5 as xs:anyAtomicType*, $array6 as xs:anyAtomicType*, $array7 as xs:anyAtomicType*, $array8 as xs:anyAtomicType*, $array9 as xs:anyAtomicType*, $array10 as xs:anyAtomicType*, $array11 as xs:anyAtomicType*, $array12 as xs:anyAtomicType*, $array13 as xs:anyAtomicType*, $array14 as xs:anyAtomicType*, $array15 as xs:anyAtomicType*) as xs:anyAtomicType", "description" : " Multiplies the elements on the same position in each sequence\n and sums up the results.\n", "summary" : "<p> Multiplies the elements on the same position in each sequence\n and sums up the results.</p>", "annotation_str" : "", "annotations" : [  ], "updating" : false, "parameters" : [ { "name" : "array1", "type" : "xs:anyAtomicType", "occurrence" : "*", "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> the sequences of numbers or arguments castable to numeric</div>" }, { "name" : "array2", "type" : "xs:anyAtomicType", "occurrence" : "*", "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> the sequences of numbers or arguments castable to numeric</div>" }, { "name" : "array3", "type" : "xs:anyAtomicType", "occurrence" : "*", "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> the sequences of numbers or arguments castable to numeric</div>" }, { "name" : "array4", "type" : "xs:anyAtomicType", "occurrence" : "*", "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> the sequences of numbers or arguments castable to numeric</div>" }, { "name" : "array5", "type" : "xs:anyAtomicType", "occurrence" : "*", "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> the sequences of numbers or arguments castable to numeric</div>" }, { "name" : "array6", "type" : "xs:anyAtomicType", "occurrence" : "*", "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> the sequences of numbers or arguments castable to numeric</div>" }, { "name" : "array7", "type" : "xs:anyAtomicType", "occurrence" : "*", "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> the sequences of numbers or arguments castable to numeric</div>" }, { "name" : "array8", "type" : "xs:anyAtomicType", "occurrence" : "*", "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> the sequences of numbers or arguments castable to numeric</div>" }, { "name" : "array9", "type" : "xs:anyAtomicType", "occurrence" : "*", "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> the sequences of numbers or arguments castable to numeric</div>" }, { "name" : "array10", "type" : "xs:anyAtomicType", "occurrence" : "*", "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> the sequences of numbers or arguments castable to numeric</div>" }, { "name" : "array11", "type" : "xs:anyAtomicType", "occurrence" : "*", "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> the sequences of numbers or arguments castable to numeric</div>" }, { "name" : "array12", "type" : "xs:anyAtomicType", "occurrence" : "*", "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> the sequences of numbers or arguments castable to numeric</div>" }, { "name" : "array13", "type" : "xs:anyAtomicType", "occurrence" : "*", "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> the sequences of numbers or arguments castable to numeric</div>" }, { "name" : "array14", "type" : "xs:anyAtomicType", "occurrence" : "*", "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> the sequences of numbers or arguments castable to numeric</div>" }, { "name" : "array15", "type" : "xs:anyAtomicType", "occurrence" : "*", "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> the sequences of numbers or arguments castable to numeric</div>" } ], "returns" : { "type" : "xs:anyAtomicType", "description" : "the sum of products" }, "errors" : [ "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">excel-err:Value if the parameters cannot be casted to numeric type</xqdoc:error>" ] }, { "isDocumented" : true, "arity" : 16, "name" : "sumproduct", "qname" : "excel:sumproduct", "signature" : "($array1 as xs:anyAtomicType*, $array2 as xs:anyAtomicType*, $array3 as xs:anyAtomicType*, $array4 as xs:anyAtomicType*, $array5 as xs:anyAtomicType*, $array6 as xs:anyAtomicType*, $array7 as xs:anyAtomicType*, $array8 as xs:anyAtomicType*, $array9 as xs:anyAtomicType*, $array10 as xs:anyAtomicType*, $array11 as xs:anyAtomicType*, $array12 as xs:anyAtomicType*, $array13 as xs:anyAtomicType*, $array14 as xs:anyAtomicType*, $array15 as xs:anyAtomicType*, $array16 as xs:anyAtomicType*) as xs:anyAtomicType", "description" : " Multiplies the elements on the same position in each sequence\n and sums up the results.\n", "summary" : "<p> Multiplies the elements on the same position in each sequence\n and sums up the results.</p>", "annotation_str" : "", "annotations" : [  ], "updating" : false, "parameters" : [ { "name" : "array1", "type" : "xs:anyAtomicType", "occurrence" : "*", "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> the sequences of numbers or arguments castable to numeric</div>" }, { "name" : "array2", "type" : "xs:anyAtomicType", "occurrence" : "*", "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> the sequences of numbers or arguments castable to numeric</div>" }, { "name" : "array3", "type" : "xs:anyAtomicType", "occurrence" : "*", "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> the sequences of numbers or arguments castable to numeric</div>" }, { "name" : "array4", "type" : "xs:anyAtomicType", "occurrence" : "*", "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> the sequences of numbers or arguments castable to numeric</div>" }, { "name" : "array5", "type" : "xs:anyAtomicType", "occurrence" : "*", "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> the sequences of numbers or arguments castable to numeric</div>" }, { "name" : "array6", "type" : "xs:anyAtomicType", "occurrence" : "*", "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> the sequences of numbers or arguments castable to numeric</div>" }, { "name" : "array7", "type" : "xs:anyAtomicType", "occurrence" : "*", "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> the sequences of numbers or arguments castable to numeric</div>" }, { "name" : "array8", "type" : "xs:anyAtomicType", "occurrence" : "*", "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> the sequences of numbers or arguments castable to numeric</div>" }, { "name" : "array9", "type" : "xs:anyAtomicType", "occurrence" : "*", "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> the sequences of numbers or arguments castable to numeric</div>" }, { "name" : "array10", "type" : "xs:anyAtomicType", "occurrence" : "*", "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> the sequences of numbers or arguments castable to numeric</div>" }, { "name" : "array11", "type" : "xs:anyAtomicType", "occurrence" : "*", "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> the sequences of numbers or arguments castable to numeric</div>" }, { "name" : "array12", "type" : "xs:anyAtomicType", "occurrence" : "*", "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> the sequences of numbers or arguments castable to numeric</div>" }, { "name" : "array13", "type" : "xs:anyAtomicType", "occurrence" : "*", "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> the sequences of numbers or arguments castable to numeric</div>" }, { "name" : "array14", "type" : "xs:anyAtomicType", "occurrence" : "*", "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> the sequences of numbers or arguments castable to numeric</div>" }, { "name" : "array15", "type" : "xs:anyAtomicType", "occurrence" : "*", "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> the sequences of numbers or arguments castable to numeric</div>" }, { "name" : "array16", "type" : "xs:anyAtomicType", "occurrence" : "*", "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> the sequences of numbers or arguments castable to numeric</div>" } ], "returns" : { "type" : "xs:anyAtomicType", "description" : "the sum of products" }, "errors" : [ "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">excel-err:Value if the parameters cannot be casted to numeric type</xqdoc:error>" ] }, { "isDocumented" : true, "arity" : 17, "name" : "sumproduct", "qname" : "excel:sumproduct", "signature" : "($array1 as xs:anyAtomicType*, $array2 as xs:anyAtomicType*, $array3 as xs:anyAtomicType*, $array4 as xs:anyAtomicType*, $array5 as xs:anyAtomicType*, $array6 as xs:anyAtomicType*, $array7 as xs:anyAtomicType*, $array8 as xs:anyAtomicType*, $array9 as xs:anyAtomicType*, $array10 as xs:anyAtomicType*, $array11 as xs:anyAtomicType*, $array12 as xs:anyAtomicType*, $array13 as xs:anyAtomicType*, $array14 as xs:anyAtomicType*, $array15 as xs:anyAtomicType*, $array16 as xs:anyAtomicType*, $array17 as xs:anyAtomicType*) as xs:anyAtomicType", "description" : " Multiplies the elements on the same position in each sequence\n and sums up the results.\n", "summary" : "<p> Multiplies the elements on the same position in each sequence\n and sums up the results.</p>", "annotation_str" : "", "annotations" : [  ], "updating" : false, "parameters" : [ { "name" : "array1", "type" : "xs:anyAtomicType", "occurrence" : "*", "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> the sequences of numbers or arguments castable to numeric</div>" }, { "name" : "array2", "type" : "xs:anyAtomicType", "occurrence" : "*", "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> the sequences of numbers or arguments castable to numeric</div>" }, { "name" : "array3", "type" : "xs:anyAtomicType", "occurrence" : "*", "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> the sequences of numbers or arguments castable to numeric</div>" }, { "name" : "array4", "type" : "xs:anyAtomicType", "occurrence" : "*", "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> the sequences of numbers or arguments castable to numeric</div>" }, { "name" : "array5", "type" : "xs:anyAtomicType", "occurrence" : "*", "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> the sequences of numbers or arguments castable to numeric</div>" }, { "name" : "array6", "type" : "xs:anyAtomicType", "occurrence" : "*", "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> the sequences of numbers or arguments castable to numeric</div>" }, { "name" : "array7", "type" : "xs:anyAtomicType", "occurrence" : "*", "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> the sequences of numbers or arguments castable to numeric</div>" }, { "name" : "array8", "type" : "xs:anyAtomicType", "occurrence" : "*", "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> the sequences of numbers or arguments castable to numeric</div>" }, { "name" : "array9", "type" : "xs:anyAtomicType", "occurrence" : "*", "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> the sequences of numbers or arguments castable to numeric</div>" }, { "name" : "array10", "type" : "xs:anyAtomicType", "occurrence" : "*", "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> the sequences of numbers or arguments castable to numeric</div>" }, { "name" : "array11", "type" : "xs:anyAtomicType", "occurrence" : "*", "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> the sequences of numbers or arguments castable to numeric</div>" }, { "name" : "array12", "type" : "xs:anyAtomicType", "occurrence" : "*", "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> the sequences of numbers or arguments castable to numeric</div>" }, { "name" : "array13", "type" : "xs:anyAtomicType", "occurrence" : "*", "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> the sequences of numbers or arguments castable to numeric</div>" }, { "name" : "array14", "type" : "xs:anyAtomicType", "occurrence" : "*", "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> the sequences of numbers or arguments castable to numeric</div>" }, { "name" : "array15", "type" : "xs:anyAtomicType", "occurrence" : "*", "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> the sequences of numbers or arguments castable to numeric</div>" }, { "name" : "array16", "type" : "xs:anyAtomicType", "occurrence" : "*", "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> the sequences of numbers or arguments castable to numeric</div>" }, { "name" : "array17", "type" : "xs:anyAtomicType", "occurrence" : "*", "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> the sequences of numbers or arguments castable to numeric</div>" } ], "returns" : { "type" : "xs:anyAtomicType", "description" : "the sum of products" }, "errors" : [ "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">excel-err:Value if the parameters cannot be casted to numeric type</xqdoc:error>" ] }, { "isDocumented" : true, "arity" : 18, "name" : "sumproduct", "qname" : "excel:sumproduct", "signature" : "($array1 as xs:anyAtomicType*, $array2 as xs:anyAtomicType*, $array3 as xs:anyAtomicType*, $array4 as xs:anyAtomicType*, $array5 as xs:anyAtomicType*, $array6 as xs:anyAtomicType*, $array7 as xs:anyAtomicType*, $array8 as xs:anyAtomicType*, $array9 as xs:anyAtomicType*, $array10 as xs:anyAtomicType*, $array11 as xs:anyAtomicType*, $array12 as xs:anyAtomicType*, $array13 as xs:anyAtomicType*, $array14 as xs:anyAtomicType*, $array15 as xs:anyAtomicType*, $array16 as xs:anyAtomicType*, $array17 as xs:anyAtomicType*, $array18 as xs:anyAtomicType*) as xs:anyAtomicType", "description" : " Multiplies the elements on the same position in each sequence\n and sums up the results.\n", "summary" : "<p> Multiplies the elements on the same position in each sequence\n and sums up the results.</p>", "annotation_str" : "", "annotations" : [  ], "updating" : false, "parameters" : [ { "name" : "array1", "type" : "xs:anyAtomicType", "occurrence" : "*", "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> the sequences of numbers or arguments castable to numeric</div>" }, { "name" : "array2", "type" : "xs:anyAtomicType", "occurrence" : "*", "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> the sequences of numbers or arguments castable to numeric</div>" }, { "name" : "array3", "type" : "xs:anyAtomicType", "occurrence" : "*", "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> the sequences of numbers or arguments castable to numeric</div>" }, { "name" : "array4", "type" : "xs:anyAtomicType", "occurrence" : "*", "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> the sequences of numbers or arguments castable to numeric</div>" }, { "name" : "array5", "type" : "xs:anyAtomicType", "occurrence" : "*", "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> the sequences of numbers or arguments castable to numeric</div>" }, { "name" : "array6", "type" : "xs:anyAtomicType", "occurrence" : "*", "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> the sequences of numbers or arguments castable to numeric</div>" }, { "name" : "array7", "type" : "xs:anyAtomicType", "occurrence" : "*", "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> the sequences of numbers or arguments castable to numeric</div>" }, { "name" : "array8", "type" : "xs:anyAtomicType", "occurrence" : "*", "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> the sequences of numbers or arguments castable to numeric</div>" }, { "name" : "array9", "type" : "xs:anyAtomicType", "occurrence" : "*", "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> the sequences of numbers or arguments castable to numeric</div>" }, { "name" : "array10", "type" : "xs:anyAtomicType", "occurrence" : "*", "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> the sequences of numbers or arguments castable to numeric</div>" }, { "name" : "array11", "type" : "xs:anyAtomicType", "occurrence" : "*", "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> the sequences of numbers or arguments castable to numeric</div>" }, { "name" : "array12", "type" : "xs:anyAtomicType", "occurrence" : "*", "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> the sequences of numbers or arguments castable to numeric</div>" }, { "name" : "array13", "type" : "xs:anyAtomicType", "occurrence" : "*", "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> the sequences of numbers or arguments castable to numeric</div>" }, { "name" : "array14", "type" : "xs:anyAtomicType", "occurrence" : "*", "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> the sequences of numbers or arguments castable to numeric</div>" }, { "name" : "array15", "type" : "xs:anyAtomicType", "occurrence" : "*", "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> the sequences of numbers or arguments castable to numeric</div>" }, { "name" : "array16", "type" : "xs:anyAtomicType", "occurrence" : "*", "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> the sequences of numbers or arguments castable to numeric</div>" }, { "name" : "array17", "type" : "xs:anyAtomicType", "occurrence" : "*", "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> the sequences of numbers or arguments castable to numeric</div>" }, { "name" : "array18", "type" : "xs:anyAtomicType", "occurrence" : "*", "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> the sequences of numbers or arguments castable to numeric</div>" } ], "returns" : { "type" : "xs:anyAtomicType", "description" : "the sum of products" }, "errors" : [ "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">excel-err:Value if the parameters cannot be casted to numeric type</xqdoc:error>" ] }, { "isDocumented" : true, "arity" : 19, "name" : "sumproduct", "qname" : "excel:sumproduct", "signature" : "($array1 as xs:anyAtomicType*, $array2 as xs:anyAtomicType*, $array3 as xs:anyAtomicType*, $array4 as xs:anyAtomicType*, $array5 as xs:anyAtomicType*, $array6 as xs:anyAtomicType*, $array7 as xs:anyAtomicType*, $array8 as xs:anyAtomicType*, $array9 as xs:anyAtomicType*, $array10 as xs:anyAtomicType*, $array11 as xs:anyAtomicType*, $array12 as xs:anyAtomicType*, $array13 as xs:anyAtomicType*, $array14 as xs:anyAtomicType*, $array15 as xs:anyAtomicType*, $array16 as xs:anyAtomicType*, $array17 as xs:anyAtomicType*, $array18 as xs:anyAtomicType*, $array19 as xs:anyAtomicType*) as xs:anyAtomicType", "description" : " Multiplies the elements on the same position in each sequence\n and sums up the results.\n", "summary" : "<p> Multiplies the elements on the same position in each sequence\n and sums up the results.</p>", "annotation_str" : "", "annotations" : [  ], "updating" : false, "parameters" : [ { "name" : "array1", "type" : "xs:anyAtomicType", "occurrence" : "*", "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> the sequences of numbers or arguments castable to numeric</div>" }, { "name" : "array2", "type" : "xs:anyAtomicType", "occurrence" : "*", "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> the sequences of numbers or arguments castable to numeric</div>" }, { "name" : "array3", "type" : "xs:anyAtomicType", "occurrence" : "*", "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> the sequences of numbers or arguments castable to numeric</div>" }, { "name" : "array4", "type" : "xs:anyAtomicType", "occurrence" : "*", "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> the sequences of numbers or arguments castable to numeric</div>" }, { "name" : "array5", "type" : "xs:anyAtomicType", "occurrence" : "*", "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> the sequences of numbers or arguments castable to numeric</div>" }, { "name" : "array6", "type" : "xs:anyAtomicType", "occurrence" : "*", "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> the sequences of numbers or arguments castable to numeric</div>" }, { "name" : "array7", "type" : "xs:anyAtomicType", "occurrence" : "*", "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> the sequences of numbers or arguments castable to numeric</div>" }, { "name" : "array8", "type" : "xs:anyAtomicType", "occurrence" : "*", "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> the sequences of numbers or arguments castable to numeric</div>" }, { "name" : "array9", "type" : "xs:anyAtomicType", "occurrence" : "*", "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> the sequences of numbers or arguments castable to numeric</div>" }, { "name" : "array10", "type" : "xs:anyAtomicType", "occurrence" : "*", "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> the sequences of numbers or arguments castable to numeric</div>" }, { "name" : "array11", "type" : "xs:anyAtomicType", "occurrence" : "*", "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> the sequences of numbers or arguments castable to numeric</div>" }, { "name" : "array12", "type" : "xs:anyAtomicType", "occurrence" : "*", "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> the sequences of numbers or arguments castable to numeric</div>" }, { "name" : "array13", "type" : "xs:anyAtomicType", "occurrence" : "*", "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> the sequences of numbers or arguments castable to numeric</div>" }, { "name" : "array14", "type" : "xs:anyAtomicType", "occurrence" : "*", "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> the sequences of numbers or arguments castable to numeric</div>" }, { "name" : "array15", "type" : "xs:anyAtomicType", "occurrence" : "*", "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> the sequences of numbers or arguments castable to numeric</div>" }, { "name" : "array16", "type" : "xs:anyAtomicType", "occurrence" : "*", "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> the sequences of numbers or arguments castable to numeric</div>" }, { "name" : "array17", "type" : "xs:anyAtomicType", "occurrence" : "*", "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> the sequences of numbers or arguments castable to numeric</div>" }, { "name" : "array18", "type" : "xs:anyAtomicType", "occurrence" : "*", "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> the sequences of numbers or arguments castable to numeric</div>" }, { "name" : "array19", "type" : "xs:anyAtomicType", "occurrence" : "*", "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> the sequences of numbers or arguments castable to numeric</div>" } ], "returns" : { "type" : "xs:anyAtomicType", "description" : "the sum of products" }, "errors" : [ "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">excel-err:Value if the parameters cannot be casted to numeric type</xqdoc:error>" ] }, { "isDocumented" : true, "arity" : 2, "name" : "sumproduct", "qname" : "excel:sumproduct", "signature" : "($array1 as xs:anyAtomicType*, $array2 as xs:anyAtomicType*) as xs:anyAtomicType", "description" : " Multiplies the elements on the same position in each sequence\n and sums up the results.\n", "summary" : "<p> Multiplies the elements on the same position in each sequence\n and sums up the results.</p>", "annotation_str" : "", "annotations" : [  ], "updating" : false, "parameters" : [ { "name" : "array1", "type" : "xs:anyAtomicType", "occurrence" : "*", "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> the sequences of numbers or arguments castable to numeric</div>" }, { "name" : "array2", "type" : "xs:anyAtomicType", "occurrence" : "*", "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> the sequences of numbers or arguments castable to numeric</div>" } ], "returns" : { "type" : "xs:anyAtomicType", "description" : "the sum of products" }, "errors" : [ "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">excel-err:Value if the parameters cannot be casted to numeric type</xqdoc:error>" ] }, { "isDocumented" : true, "arity" : 20, "name" : "sumproduct", "qname" : "excel:sumproduct", "signature" : "($array1 as xs:anyAtomicType*, $array2 as xs:anyAtomicType*, $array3 as xs:anyAtomicType*, $array4 as xs:anyAtomicType*, $array5 as xs:anyAtomicType*, $array6 as xs:anyAtomicType*, $array7 as xs:anyAtomicType*, $array8 as xs:anyAtomicType*, $array9 as xs:anyAtomicType*, $array10 as xs:anyAtomicType*, $array11 as xs:anyAtomicType*, $array12 as xs:anyAtomicType*, $array13 as xs:anyAtomicType*, $array14 as xs:anyAtomicType*, $array15 as xs:anyAtomicType*, $array16 as xs:anyAtomicType*, $array17 as xs:anyAtomicType*, $array18 as xs:anyAtomicType*, $array19 as xs:anyAtomicType*, $array20 as xs:anyAtomicType*) as xs:anyAtomicType", "description" : " Multiplies the elements on the same position in each sequence\n and sums up the results.\n", "summary" : "<p> Multiplies the elements on the same position in each sequence\n and sums up the results.</p>", "annotation_str" : "", "annotations" : [  ], "updating" : false, "parameters" : [ { "name" : "array1", "type" : "xs:anyAtomicType", "occurrence" : "*", "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> the sequences of numbers or arguments castable to numeric</div>" }, { "name" : "array2", "type" : "xs:anyAtomicType", "occurrence" : "*", "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> the sequences of numbers or arguments castable to numeric</div>" }, { "name" : "array3", "type" : "xs:anyAtomicType", "occurrence" : "*", "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> the sequences of numbers or arguments castable to numeric</div>" }, { "name" : "array4", "type" : "xs:anyAtomicType", "occurrence" : "*", "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> the sequences of numbers or arguments castable to numeric</div>" }, { "name" : "array5", "type" : "xs:anyAtomicType", "occurrence" : "*", "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> the sequences of numbers or arguments castable to numeric</div>" }, { "name" : "array6", "type" : "xs:anyAtomicType", "occurrence" : "*", "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> the sequences of numbers or arguments castable to numeric</div>" }, { "name" : "array7", "type" : "xs:anyAtomicType", "occurrence" : "*", "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> the sequences of numbers or arguments castable to numeric</div>" }, { "name" : "array8", "type" : "xs:anyAtomicType", "occurrence" : "*", "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> the sequences of numbers or arguments castable to numeric</div>" }, { "name" : "array9", "type" : "xs:anyAtomicType", "occurrence" : "*", "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> the sequences of numbers or arguments castable to numeric</div>" }, { "name" : "array10", "type" : "xs:anyAtomicType", "occurrence" : "*", "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> the sequences of numbers or arguments castable to numeric</div>" }, { "name" : "array11", "type" : "xs:anyAtomicType", "occurrence" : "*", "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> the sequences of numbers or arguments castable to numeric</div>" }, { "name" : "array12", "type" : "xs:anyAtomicType", "occurrence" : "*", "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> the sequences of numbers or arguments castable to numeric</div>" }, { "name" : "array13", "type" : "xs:anyAtomicType", "occurrence" : "*", "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> the sequences of numbers or arguments castable to numeric</div>" }, { "name" : "array14", "type" : "xs:anyAtomicType", "occurrence" : "*", "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> the sequences of numbers or arguments castable to numeric</div>" }, { "name" : "array15", "type" : "xs:anyAtomicType", "occurrence" : "*", "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> the sequences of numbers or arguments castable to numeric</div>" }, { "name" : "array16", "type" : "xs:anyAtomicType", "occurrence" : "*", "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> the sequences of numbers or arguments castable to numeric</div>" }, { "name" : "array17", "type" : "xs:anyAtomicType", "occurrence" : "*", "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> the sequences of numbers or arguments castable to numeric</div>" }, { "name" : "array18", "type" : "xs:anyAtomicType", "occurrence" : "*", "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> the sequences of numbers or arguments castable to numeric</div>" }, { "name" : "array19", "type" : "xs:anyAtomicType", "occurrence" : "*", "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> the sequences of numbers or arguments castable to numeric</div>" }, { "name" : "array20", "type" : "xs:anyAtomicType", "occurrence" : "*", "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> the sequences of numbers or arguments castable to numeric</div>" } ], "returns" : { "type" : "xs:anyAtomicType", "description" : "the sum of products" }, "errors" : [ "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">excel-err:Value if the parameters cannot be casted to numeric type</xqdoc:error>" ] }, { "isDocumented" : true, "arity" : 21, "name" : "sumproduct", "qname" : "excel:sumproduct", "signature" : "($array1 as xs:anyAtomicType*, $array2 as xs:anyAtomicType*, $array3 as xs:anyAtomicType*, $array4 as xs:anyAtomicType*, $array5 as xs:anyAtomicType*, $array6 as xs:anyAtomicType*, $array7 as xs:anyAtomicType*, $array8 as xs:anyAtomicType*, $array9 as xs:anyAtomicType*, $array10 as xs:anyAtomicType*, $array11 as xs:anyAtomicType*, $array12 as xs:anyAtomicType*, $array13 as xs:anyAtomicType*, $array14 as xs:anyAtomicType*, $array15 as xs:anyAtomicType*, $array16 as xs:anyAtomicType*, $array17 as xs:anyAtomicType*, $array18 as xs:anyAtomicType*, $array19 as xs:anyAtomicType*, $array20 as xs:anyAtomicType*, $array21 as xs:anyAtomicType*) as xs:anyAtomicType", "description" : " Multiplies the elements on the same position in each sequence\n and sums up the results.\n", "summary" : "<p> Multiplies the elements on the same position in each sequence\n and sums up the results.</p>", "annotation_str" : "", "annotations" : [  ], "updating" : false, "parameters" : [ { "name" : "array1", "type" : "xs:anyAtomicType", "occurrence" : "*", "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> the sequences of numbers or arguments castable to numeric</div>" }, { "name" : "array2", "type" : "xs:anyAtomicType", "occurrence" : "*", "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> the sequences of numbers or arguments castable to numeric</div>" }, { "name" : "array3", "type" : "xs:anyAtomicType", "occurrence" : "*", "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> the sequences of numbers or arguments castable to numeric</div>" }, { "name" : "array4", "type" : "xs:anyAtomicType", "occurrence" : "*", "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> the sequences of numbers or arguments castable to numeric</div>" }, { "name" : "array5", "type" : "xs:anyAtomicType", "occurrence" : "*", "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> the sequences of numbers or arguments castable to numeric</div>" }, { "name" : "array6", "type" : "xs:anyAtomicType", "occurrence" : "*", "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> the sequences of numbers or arguments castable to numeric</div>" }, { "name" : "array7", "type" : "xs:anyAtomicType", "occurrence" : "*", "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> the sequences of numbers or arguments castable to numeric</div>" }, { "name" : "array8", "type" : "xs:anyAtomicType", "occurrence" : "*", "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> the sequences of numbers or arguments castable to numeric</div>" }, { "name" : "array9", "type" : "xs:anyAtomicType", "occurrence" : "*", "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> the sequences of numbers or arguments castable to numeric</div>" }, { "name" : "array10", "type" : "xs:anyAtomicType", "occurrence" : "*", "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> the sequences of numbers or arguments castable to numeric</div>" }, { "name" : "array11", "type" : "xs:anyAtomicType", "occurrence" : "*", "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> the sequences of numbers or arguments castable to numeric</div>" }, { "name" : "array12", "type" : "xs:anyAtomicType", "occurrence" : "*", "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> the sequences of numbers or arguments castable to numeric</div>" }, { "name" : "array13", "type" : "xs:anyAtomicType", "occurrence" : "*", "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> the sequences of numbers or arguments castable to numeric</div>" }, { "name" : "array14", "type" : "xs:anyAtomicType", "occurrence" : "*", "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> the sequences of numbers or arguments castable to numeric</div>" }, { "name" : "array15", "type" : "xs:anyAtomicType", "occurrence" : "*", "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> the sequences of numbers or arguments castable to numeric</div>" }, { "name" : "array16", "type" : "xs:anyAtomicType", "occurrence" : "*", "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> the sequences of numbers or arguments castable to numeric</div>" }, { "name" : "array17", "type" : "xs:anyAtomicType", "occurrence" : "*", "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> the sequences of numbers or arguments castable to numeric</div>" }, { "name" : "array18", "type" : "xs:anyAtomicType", "occurrence" : "*", "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> the sequences of numbers or arguments castable to numeric</div>" }, { "name" : "array19", "type" : "xs:anyAtomicType", "occurrence" : "*", "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> the sequences of numbers or arguments castable to numeric</div>" }, { "name" : "array20", "type" : "xs:anyAtomicType", "occurrence" : "*", "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> the sequences of numbers or arguments castable to numeric</div>" }, { "name" : "array21", "type" : "xs:anyAtomicType", "occurrence" : "*", "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> the sequences of numbers or arguments castable to numeric</div>" } ], "returns" : { "type" : "xs:anyAtomicType", "description" : "the sum of products" }, "errors" : [ "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">excel-err:Value if the parameters cannot be casted to numeric type</xqdoc:error>" ] }, { "isDocumented" : true, "arity" : 22, "name" : "sumproduct", "qname" : "excel:sumproduct", "signature" : "($array1 as xs:anyAtomicType*, $array2 as xs:anyAtomicType*, $array3 as xs:anyAtomicType*, $array4 as xs:anyAtomicType*, $array5 as xs:anyAtomicType*, $array6 as xs:anyAtomicType*, $array7 as xs:anyAtomicType*, $array8 as xs:anyAtomicType*, $array9 as xs:anyAtomicType*, $array10 as xs:anyAtomicType*, $array11 as xs:anyAtomicType*, $array12 as xs:anyAtomicType*, $array13 as xs:anyAtomicType*, $array14 as xs:anyAtomicType*, $array15 as xs:anyAtomicType*, $array16 as xs:anyAtomicType*, $array17 as xs:anyAtomicType*, $array18 as xs:anyAtomicType*, $array19 as xs:anyAtomicType*, $array20 as xs:anyAtomicType*, $array21 as xs:anyAtomicType*, $array22 as xs:anyAtomicType*) as xs:anyAtomicType", "description" : " Multiplies the elements on the same position in each sequence\n and sums up the results.\n", "summary" : "<p> Multiplies the elements on the same position in each sequence\n and sums up the results.</p>", "annotation_str" : "", "annotations" : [  ], "updating" : false, "parameters" : [ { "name" : "array1", "type" : "xs:anyAtomicType", "occurrence" : "*", "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> the sequences of numbers or arguments castable to numeric</div>" }, { "name" : "array2", "type" : "xs:anyAtomicType", "occurrence" : "*", "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> the sequences of numbers or arguments castable to numeric</div>" }, { "name" : "array3", "type" : "xs:anyAtomicType", "occurrence" : "*", "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> the sequences of numbers or arguments castable to numeric</div>" }, { "name" : "array4", "type" : "xs:anyAtomicType", "occurrence" : "*", "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> the sequences of numbers or arguments castable to numeric</div>" }, { "name" : "array5", "type" : "xs:anyAtomicType", "occurrence" : "*", "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> the sequences of numbers or arguments castable to numeric</div>" }, { "name" : "array6", "type" : "xs:anyAtomicType", "occurrence" : "*", "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> the sequences of numbers or arguments castable to numeric</div>" }, { "name" : "array7", "type" : "xs:anyAtomicType", "occurrence" : "*", "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> the sequences of numbers or arguments castable to numeric</div>" }, { "name" : "array8", "type" : "xs:anyAtomicType", "occurrence" : "*", "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> the sequences of numbers or arguments castable to numeric</div>" }, { "name" : "array9", "type" : "xs:anyAtomicType", "occurrence" : "*", "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> the sequences of numbers or arguments castable to numeric</div>" }, { "name" : "array10", "type" : "xs:anyAtomicType", "occurrence" : "*", "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> the sequences of numbers or arguments castable to numeric</div>" }, { "name" : "array11", "type" : "xs:anyAtomicType", "occurrence" : "*", "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> the sequences of numbers or arguments castable to numeric</div>" }, { "name" : "array12", "type" : "xs:anyAtomicType", "occurrence" : "*", "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> the sequences of numbers or arguments castable to numeric</div>" }, { "name" : "array13", "type" : "xs:anyAtomicType", "occurrence" : "*", "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> the sequences of numbers or arguments castable to numeric</div>" }, { "name" : "array14", "type" : "xs:anyAtomicType", "occurrence" : "*", "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> the sequences of numbers or arguments castable to numeric</div>" }, { "name" : "array15", "type" : "xs:anyAtomicType", "occurrence" : "*", "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> the sequences of numbers or arguments castable to numeric</div>" }, { "name" : "array16", "type" : "xs:anyAtomicType", "occurrence" : "*", "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> the sequences of numbers or arguments castable to numeric</div>" }, { "name" : "array17", "type" : "xs:anyAtomicType", "occurrence" : "*", "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> the sequences of numbers or arguments castable to numeric</div>" }, { "name" : "array18", "type" : "xs:anyAtomicType", "occurrence" : "*", "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> the sequences of numbers or arguments castable to numeric</div>" }, { "name" : "array19", "type" : "xs:anyAtomicType", "occurrence" : "*", "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> the sequences of numbers or arguments castable to numeric</div>" }, { "name" : "array20", "type" : "xs:anyAtomicType", "occurrence" : "*", "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> the sequences of numbers or arguments castable to numeric</div>" }, { "name" : "array21", "type" : "xs:anyAtomicType", "occurrence" : "*", "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> the sequences of numbers or arguments castable to numeric</div>" }, { "name" : "array22", "type" : "xs:anyAtomicType", "occurrence" : "*", "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> the sequences of numbers or arguments castable to numeric</div>" } ], "returns" : { "type" : "xs:anyAtomicType", "description" : "the sum of products" }, "errors" : [ "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">excel-err:Value if the parameters cannot be casted to numeric type</xqdoc:error>" ] }, { "isDocumented" : true, "arity" : 23, "name" : "sumproduct", "qname" : "excel:sumproduct", "signature" : "($array1 as xs:anyAtomicType*, $array2 as xs:anyAtomicType*, $array3 as xs:anyAtomicType*, $array4 as xs:anyAtomicType*, $array5 as xs:anyAtomicType*, $array6 as xs:anyAtomicType*, $array7 as xs:anyAtomicType*, $array8 as xs:anyAtomicType*, $array9 as xs:anyAtomicType*, $array10 as xs:anyAtomicType*, $array11 as xs:anyAtomicType*, $array12 as xs:anyAtomicType*, $array13 as xs:anyAtomicType*, $array14 as xs:anyAtomicType*, $array15 as xs:anyAtomicType*, $array16 as xs:anyAtomicType*, $array17 as xs:anyAtomicType*, $array18 as xs:anyAtomicType*, $array19 as xs:anyAtomicType*, $array20 as xs:anyAtomicType*, $array21 as xs:anyAtomicType*, $array22 as xs:anyAtomicType*, $array23 as xs:anyAtomicType*) as xs:anyAtomicType", "description" : " Multiplies the elements on the same position in each sequence\n and sums up the results.\n", "summary" : "<p> Multiplies the elements on the same position in each sequence\n and sums up the results.</p>", "annotation_str" : "", "annotations" : [  ], "updating" : false, "parameters" : [ { "name" : "array1", "type" : "xs:anyAtomicType", "occurrence" : "*", "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> the sequences of numbers or arguments castable to numeric</div>" }, { "name" : "array2", "type" : "xs:anyAtomicType", "occurrence" : "*", "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> the sequences of numbers or arguments castable to numeric</div>" }, { "name" : "array3", "type" : "xs:anyAtomicType", "occurrence" : "*", "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> the sequences of numbers or arguments castable to numeric</div>" }, { "name" : "array4", "type" : "xs:anyAtomicType", "occurrence" : "*", "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> the sequences of numbers or arguments castable to numeric</div>" }, { "name" : "array5", "type" : "xs:anyAtomicType", "occurrence" : "*", "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> the sequences of numbers or arguments castable to numeric</div>" }, { "name" : "array6", "type" : "xs:anyAtomicType", "occurrence" : "*", "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> the sequences of numbers or arguments castable to numeric</div>" }, { "name" : "array7", "type" : "xs:anyAtomicType", "occurrence" : "*", "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> the sequences of numbers or arguments castable to numeric</div>" }, { "name" : "array8", "type" : "xs:anyAtomicType", "occurrence" : "*", "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> the sequences of numbers or arguments castable to numeric</div>" }, { "name" : "array9", "type" : "xs:anyAtomicType", "occurrence" : "*", "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> the sequences of numbers or arguments castable to numeric</div>" }, { "name" : "array10", "type" : "xs:anyAtomicType", "occurrence" : "*", "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> the sequences of numbers or arguments castable to numeric</div>" }, { "name" : "array11", "type" : "xs:anyAtomicType", "occurrence" : "*", "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> the sequences of numbers or arguments castable to numeric</div>" }, { "name" : "array12", "type" : "xs:anyAtomicType", "occurrence" : "*", "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> the sequences of numbers or arguments castable to numeric</div>" }, { "name" : "array13", "type" : "xs:anyAtomicType", "occurrence" : "*", "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> the sequences of numbers or arguments castable to numeric</div>" }, { "name" : "array14", "type" : "xs:anyAtomicType", "occurrence" : "*", "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> the sequences of numbers or arguments castable to numeric</div>" }, { "name" : "array15", "type" : "xs:anyAtomicType", "occurrence" : "*", "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> the sequences of numbers or arguments castable to numeric</div>" }, { "name" : "array16", "type" : "xs:anyAtomicType", "occurrence" : "*", "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> the sequences of numbers or arguments castable to numeric</div>" }, { "name" : "array17", "type" : "xs:anyAtomicType", "occurrence" : "*", "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> the sequences of numbers or arguments castable to numeric</div>" }, { "name" : "array18", "type" : "xs:anyAtomicType", "occurrence" : "*", "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> the sequences of numbers or arguments castable to numeric</div>" }, { "name" : "array19", "type" : "xs:anyAtomicType", "occurrence" : "*", "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> the sequences of numbers or arguments castable to numeric</div>" }, { "name" : "array20", "type" : "xs:anyAtomicType", "occurrence" : "*", "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> the sequences of numbers or arguments castable to numeric</div>" }, { "name" : "array21", "type" : "xs:anyAtomicType", "occurrence" : "*", "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> the sequences of numbers or arguments castable to numeric</div>" }, { "name" : "array22", "type" : "xs:anyAtomicType", "occurrence" : "*", "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> the sequences of numbers or arguments castable to numeric</div>" }, { "name" : "array23", "type" : "xs:anyAtomicType", "occurrence" : "*", "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> the sequences of numbers or arguments castable to numeric</div>" } ], "returns" : { "type" : "xs:anyAtomicType", "description" : "the sum of products" }, "errors" : [ "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">excel-err:Value if the parameters cannot be casted to numeric type</xqdoc:error>" ] }, { "isDocumented" : true, "arity" : 24, "name" : "sumproduct", "qname" : "excel:sumproduct", "signature" : "($array1 as xs:anyAtomicType*, $array2 as xs:anyAtomicType*, $array3 as xs:anyAtomicType*, $array4 as xs:anyAtomicType*, $array5 as xs:anyAtomicType*, $array6 as xs:anyAtomicType*, $array7 as xs:anyAtomicType*, $array8 as xs:anyAtomicType*, $array9 as xs:anyAtomicType*, $array10 as xs:anyAtomicType*, $array11 as xs:anyAtomicType*, $array12 as xs:anyAtomicType*, $array13 as xs:anyAtomicType*, $array14 as xs:anyAtomicType*, $array15 as xs:anyAtomicType*, $array16 as xs:anyAtomicType*, $array17 as xs:anyAtomicType*, $array18 as xs:anyAtomicType*, $array19 as xs:anyAtomicType*, $array20 as xs:anyAtomicType*, $array21 as xs:anyAtomicType*, $array22 as xs:anyAtomicType*, $array23 as xs:anyAtomicType*, $array24 as xs:anyAtomicType*) as xs:anyAtomicType", "description" : " Multiplies the elements on the same position in each sequence\n and sums up the results.\n", "summary" : "<p> Multiplies the elements on the same position in each sequence\n and sums up the results.</p>", "annotation_str" : "", "annotations" : [  ], "updating" : false, "parameters" : [ { "name" : "array1", "type" : "xs:anyAtomicType", "occurrence" : "*", "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> the sequences of numbers or arguments castable to numeric</div>" }, { "name" : "array2", "type" : "xs:anyAtomicType", "occurrence" : "*", "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> the sequences of numbers or arguments castable to numeric</div>" }, { "name" : "array3", "type" : "xs:anyAtomicType", "occurrence" : "*", "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> the sequences of numbers or arguments castable to numeric</div>" }, { "name" : "array4", "type" : "xs:anyAtomicType", "occurrence" : "*", "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> the sequences of numbers or arguments castable to numeric</div>" }, { "name" : "array5", "type" : "xs:anyAtomicType", "occurrence" : "*", "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> the sequences of numbers or arguments castable to numeric</div>" }, { "name" : "array6", "type" : "xs:anyAtomicType", "occurrence" : "*", "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> the sequences of numbers or arguments castable to numeric</div>" }, { "name" : "array7", "type" : "xs:anyAtomicType", "occurrence" : "*", "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> the sequences of numbers or arguments castable to numeric</div>" }, { "name" : "array8", "type" : "xs:anyAtomicType", "occurrence" : "*", "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> the sequences of numbers or arguments castable to numeric</div>" }, { "name" : "array9", "type" : "xs:anyAtomicType", "occurrence" : "*", "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> the sequences of numbers or arguments castable to numeric</div>" }, { "name" : "array10", "type" : "xs:anyAtomicType", "occurrence" : "*", "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> the sequences of numbers or arguments castable to numeric</div>" }, { "name" : "array11", "type" : "xs:anyAtomicType", "occurrence" : "*", "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> the sequences of numbers or arguments castable to numeric</div>" }, { "name" : "array12", "type" : "xs:anyAtomicType", "occurrence" : "*", "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> the sequences of numbers or arguments castable to numeric</div>" }, { "name" : "array13", "type" : "xs:anyAtomicType", "occurrence" : "*", "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> the sequences of numbers or arguments castable to numeric</div>" }, { "name" : "array14", "type" : "xs:anyAtomicType", "occurrence" : "*", "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> the sequences of numbers or arguments castable to numeric</div>" }, { "name" : "array15", "type" : "xs:anyAtomicType", "occurrence" : "*", "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> the sequences of numbers or arguments castable to numeric</div>" }, { "name" : "array16", "type" : "xs:anyAtomicType", "occurrence" : "*", "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> the sequences of numbers or arguments castable to numeric</div>" }, { "name" : "array17", "type" : "xs:anyAtomicType", "occurrence" : "*", "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> the sequences of numbers or arguments castable to numeric</div>" }, { "name" : "array18", "type" : "xs:anyAtomicType", "occurrence" : "*", "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> the sequences of numbers or arguments castable to numeric</div>" }, { "name" : "array19", "type" : "xs:anyAtomicType", "occurrence" : "*", "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> the sequences of numbers or arguments castable to numeric</div>" }, { "name" : "array20", "type" : "xs:anyAtomicType", "occurrence" : "*", "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> the sequences of numbers or arguments castable to numeric</div>" }, { "name" : "array21", "type" : "xs:anyAtomicType", "occurrence" : "*", "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> the sequences of numbers or arguments castable to numeric</div>" }, { "name" : "array22", "type" : "xs:anyAtomicType", "occurrence" : "*", "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> the sequences of numbers or arguments castable to numeric</div>" }, { "name" : "array23", "type" : "xs:anyAtomicType", "occurrence" : "*", "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> the sequences of numbers or arguments castable to numeric</div>" }, { "name" : "array24", "type" : "xs:anyAtomicType", "occurrence" : "*", "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> the sequences of numbers or arguments castable to numeric</div>" } ], "returns" : { "type" : "xs:anyAtomicType", "description" : "the sum of products" }, "errors" : [ "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">excel-err:Value if the parameters cannot be casted to numeric type</xqdoc:error>" ] }, { "isDocumented" : true, "arity" : 25, "name" : "sumproduct", "qname" : "excel:sumproduct", "signature" : "($array1 as xs:anyAtomicType*, $array2 as xs:anyAtomicType*, $array3 as xs:anyAtomicType*, $array4 as xs:anyAtomicType*, $array5 as xs:anyAtomicType*, $array6 as xs:anyAtomicType*, $array7 as xs:anyAtomicType*, $array8 as xs:anyAtomicType*, $array9 as xs:anyAtomicType*, $array10 as xs:anyAtomicType*, $array11 as xs:anyAtomicType*, $array12 as xs:anyAtomicType*, $array13 as xs:anyAtomicType*, $array14 as xs:anyAtomicType*, $array15 as xs:anyAtomicType*, $array16 as xs:anyAtomicType*, $array17 as xs:anyAtomicType*, $array18 as xs:anyAtomicType*, $array19 as xs:anyAtomicType*, $array20 as xs:anyAtomicType*, $array21 as xs:anyAtomicType*, $array22 as xs:anyAtomicType*, $array23 as xs:anyAtomicType*, $array24 as xs:anyAtomicType*, $array25 as xs:anyAtomicType*) as xs:anyAtomicType", "description" : " Multiplies the elements on the same position in each sequence\n and sums up the results.\n", "summary" : "<p> Multiplies the elements on the same position in each sequence\n and sums up the results.</p>", "annotation_str" : "", "annotations" : [  ], "updating" : false, "parameters" : [ { "name" : "array1", "type" : "xs:anyAtomicType", "occurrence" : "*", "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> the sequences of numbers or arguments castable to numeric</div>" }, { "name" : "array2", "type" : "xs:anyAtomicType", "occurrence" : "*", "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> the sequences of numbers or arguments castable to numeric</div>" }, { "name" : "array3", "type" : "xs:anyAtomicType", "occurrence" : "*", "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> the sequences of numbers or arguments castable to numeric</div>" }, { "name" : "array4", "type" : "xs:anyAtomicType", "occurrence" : "*", "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> the sequences of numbers or arguments castable to numeric</div>" }, { "name" : "array5", "type" : "xs:anyAtomicType", "occurrence" : "*", "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> the sequences of numbers or arguments castable to numeric</div>" }, { "name" : "array6", "type" : "xs:anyAtomicType", "occurrence" : "*", "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> the sequences of numbers or arguments castable to numeric</div>" }, { "name" : "array7", "type" : "xs:anyAtomicType", "occurrence" : "*", "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> the sequences of numbers or arguments castable to numeric</div>" }, { "name" : "array8", "type" : "xs:anyAtomicType", "occurrence" : "*", "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> the sequences of numbers or arguments castable to numeric</div>" }, { "name" : "array9", "type" : "xs:anyAtomicType", "occurrence" : "*", "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> the sequences of numbers or arguments castable to numeric</div>" }, { "name" : "array10", "type" : "xs:anyAtomicType", "occurrence" : "*", "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> the sequences of numbers or arguments castable to numeric</div>" }, { "name" : "array11", "type" : "xs:anyAtomicType", "occurrence" : "*", "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> the sequences of numbers or arguments castable to numeric</div>" }, { "name" : "array12", "type" : "xs:anyAtomicType", "occurrence" : "*", "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> the sequences of numbers or arguments castable to numeric</div>" }, { "name" : "array13", "type" : "xs:anyAtomicType", "occurrence" : "*", "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> the sequences of numbers or arguments castable to numeric</div>" }, { "name" : "array14", "type" : "xs:anyAtomicType", "occurrence" : "*", "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> the sequences of numbers or arguments castable to numeric</div>" }, { "name" : "array15", "type" : "xs:anyAtomicType", "occurrence" : "*", "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> the sequences of numbers or arguments castable to numeric</div>" }, { "name" : "array16", "type" : "xs:anyAtomicType", "occurrence" : "*", "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> the sequences of numbers or arguments castable to numeric</div>" }, { "name" : "array17", "type" : "xs:anyAtomicType", "occurrence" : "*", "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> the sequences of numbers or arguments castable to numeric</div>" }, { "name" : "array18", "type" : "xs:anyAtomicType", "occurrence" : "*", "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> the sequences of numbers or arguments castable to numeric</div>" }, { "name" : "array19", "type" : "xs:anyAtomicType", "occurrence" : "*", "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> the sequences of numbers or arguments castable to numeric</div>" }, { "name" : "array20", "type" : "xs:anyAtomicType", "occurrence" : "*", "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> the sequences of numbers or arguments castable to numeric</div>" }, { "name" : "array21", "type" : "xs:anyAtomicType", "occurrence" : "*", "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> the sequences of numbers or arguments castable to numeric</div>" }, { "name" : "array22", "type" : "xs:anyAtomicType", "occurrence" : "*", "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> the sequences of numbers or arguments castable to numeric</div>" }, { "name" : "array23", "type" : "xs:anyAtomicType", "occurrence" : "*", "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> the sequences of numbers or arguments castable to numeric</div>" }, { "name" : "array24", "type" : "xs:anyAtomicType", "occurrence" : "*", "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> the sequences of numbers or arguments castable to numeric</div>" }, { "name" : "array25", "type" : "xs:anyAtomicType", "occurrence" : "*", "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> the sequences of numbers or arguments castable to numeric</div>" } ], "returns" : { "type" : "xs:anyAtomicType", "description" : "the sum of products" }, "errors" : [ "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">excel-err:Value if the parameters cannot be casted to numeric type</xqdoc:error>" ] }, { "isDocumented" : true, "arity" : 26, "name" : "sumproduct", "qname" : "excel:sumproduct", "signature" : "($array1 as xs:anyAtomicType*, $array2 as xs:anyAtomicType*, $array3 as xs:anyAtomicType*, $array4 as xs:anyAtomicType*, $array5 as xs:anyAtomicType*, $array6 as xs:anyAtomicType*, $array7 as xs:anyAtomicType*, $array8 as xs:anyAtomicType*, $array9 as xs:anyAtomicType*, $array10 as xs:anyAtomicType*, $array11 as xs:anyAtomicType*, $array12 as xs:anyAtomicType*, $array13 as xs:anyAtomicType*, $array14 as xs:anyAtomicType*, $array15 as xs:anyAtomicType*, $array16 as xs:anyAtomicType*, $array17 as xs:anyAtomicType*, $array18 as xs:anyAtomicType*, $array19 as xs:anyAtomicType*, $array20 as xs:anyAtomicType*, $array21 as xs:anyAtomicType*, $array22 as xs:anyAtomicType*, $array23 as xs:anyAtomicType*, $array24 as xs:anyAtomicType*, $array25 as xs:anyAtomicType*, $array26 as xs:anyAtomicType*) as xs:anyAtomicType", "description" : " Multiplies the elements on the same position in each sequence\n and sums up the results.\n", "summary" : "<p> Multiplies the elements on the same position in each sequence\n and sums up the results.</p>", "annotation_str" : "", "annotations" : [  ], "updating" : false, "parameters" : [ { "name" : "array1", "type" : "xs:anyAtomicType", "occurrence" : "*", "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> the sequences of numbers or arguments castable to numeric</div>" }, { "name" : "array2", "type" : "xs:anyAtomicType", "occurrence" : "*", "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> the sequences of numbers or arguments castable to numeric</div>" }, { "name" : "array3", "type" : "xs:anyAtomicType", "occurrence" : "*", "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> the sequences of numbers or arguments castable to numeric</div>" }, { "name" : "array4", "type" : "xs:anyAtomicType", "occurrence" : "*", "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> the sequences of numbers or arguments castable to numeric</div>" }, { "name" : "array5", "type" : "xs:anyAtomicType", "occurrence" : "*", "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> the sequences of numbers or arguments castable to numeric</div>" }, { "name" : "array6", "type" : "xs:anyAtomicType", "occurrence" : "*", "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> the sequences of numbers or arguments castable to numeric</div>" }, { "name" : "array7", "type" : "xs:anyAtomicType", "occurrence" : "*", "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> the sequences of numbers or arguments castable to numeric</div>" }, { "name" : "array8", "type" : "xs:anyAtomicType", "occurrence" : "*", "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> the sequences of numbers or arguments castable to numeric</div>" }, { "name" : "array9", "type" : "xs:anyAtomicType", "occurrence" : "*", "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> the sequences of numbers or arguments castable to numeric</div>" }, { "name" : "array10", "type" : "xs:anyAtomicType", "occurrence" : "*", "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> the sequences of numbers or arguments castable to numeric</div>" }, { "name" : "array11", "type" : "xs:anyAtomicType", "occurrence" : "*", "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> the sequences of numbers or arguments castable to numeric</div>" }, { "name" : "array12", "type" : "xs:anyAtomicType", "occurrence" : "*", "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> the sequences of numbers or arguments castable to numeric</div>" }, { "name" : "array13", "type" : "xs:anyAtomicType", "occurrence" : "*", "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> the sequences of numbers or arguments castable to numeric</div>" }, { "name" : "array14", "type" : "xs:anyAtomicType", "occurrence" : "*", "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> the sequences of numbers or arguments castable to numeric</div>" }, { "name" : "array15", "type" : "xs:anyAtomicType", "occurrence" : "*", "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> the sequences of numbers or arguments castable to numeric</div>" }, { "name" : "array16", "type" : "xs:anyAtomicType", "occurrence" : "*", "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> the sequences of numbers or arguments castable to numeric</div>" }, { "name" : "array17", "type" : "xs:anyAtomicType", "occurrence" : "*", "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> the sequences of numbers or arguments castable to numeric</div>" }, { "name" : "array18", "type" : "xs:anyAtomicType", "occurrence" : "*", "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> the sequences of numbers or arguments castable to numeric</div>" }, { "name" : "array19", "type" : "xs:anyAtomicType", "occurrence" : "*", "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> the sequences of numbers or arguments castable to numeric</div>" }, { "name" : "array20", "type" : "xs:anyAtomicType", "occurrence" : "*", "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> the sequences of numbers or arguments castable to numeric</div>" }, { "name" : "array21", "type" : "xs:anyAtomicType", "occurrence" : "*", "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> the sequences of numbers or arguments castable to numeric</div>" }, { "name" : "array22", "type" : "xs:anyAtomicType", "occurrence" : "*", "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> the sequences of numbers or arguments castable to numeric</div>" }, { "name" : "array23", "type" : "xs:anyAtomicType", "occurrence" : "*", "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> the sequences of numbers or arguments castable to numeric</div>" }, { "name" : "array24", "type" : "xs:anyAtomicType", "occurrence" : "*", "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> the sequences of numbers or arguments castable to numeric</div>" }, { "name" : "array25", "type" : "xs:anyAtomicType", "occurrence" : "*", "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> the sequences of numbers or arguments castable to numeric</div>" }, { "name" : "array26", "type" : "xs:anyAtomicType", "occurrence" : "*", "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> the sequences of numbers or arguments castable to numeric</div>" } ], "returns" : { "type" : "xs:anyAtomicType", "description" : "the sum of products" }, "errors" : [ "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">excel-err:Value if the parameters cannot be casted to numeric type</xqdoc:error>" ] }, { "isDocumented" : true, "arity" : 27, "name" : "sumproduct", "qname" : "excel:sumproduct", "signature" : "($array1 as xs:anyAtomicType*, $array2 as xs:anyAtomicType*, $array3 as xs:anyAtomicType*, $array4 as xs:anyAtomicType*, $array5 as xs:anyAtomicType*, $array6 as xs:anyAtomicType*, $array7 as xs:anyAtomicType*, $array8 as xs:anyAtomicType*, $array9 as xs:anyAtomicType*, $array10 as xs:anyAtomicType*, $array11 as xs:anyAtomicType*, $array12 as xs:anyAtomicType*, $array13 as xs:anyAtomicType*, $array14 as xs:anyAtomicType*, $array15 as xs:anyAtomicType*, $array16 as xs:anyAtomicType*, $array17 as xs:anyAtomicType*, $array18 as xs:anyAtomicType*, $array19 as xs:anyAtomicType*, $array20 as xs:anyAtomicType*, $array21 as xs:anyAtomicType*, $array22 as xs:anyAtomicType*, $array23 as xs:anyAtomicType*, $array24 as xs:anyAtomicType*, $array25 as xs:anyAtomicType*, $array26 as xs:anyAtomicType*, $array27 as xs:anyAtomicType*) as xs:anyAtomicType", "description" : " Multiplies the elements on the same position in each sequence\n and sums up the results.\n", "summary" : "<p> Multiplies the elements on the same position in each sequence\n and sums up the results.</p>", "annotation_str" : "", "annotations" : [  ], "updating" : false, "parameters" : [ { "name" : "array1", "type" : "xs:anyAtomicType", "occurrence" : "*", "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> the sequences of numbers or arguments castable to numeric</div>" }, { "name" : "array2", "type" : "xs:anyAtomicType", "occurrence" : "*", "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> the sequences of numbers or arguments castable to numeric</div>" }, { "name" : "array3", "type" : "xs:anyAtomicType", "occurrence" : "*", "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> the sequences of numbers or arguments castable to numeric</div>" }, { "name" : "array4", "type" : "xs:anyAtomicType", "occurrence" : "*", "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> the sequences of numbers or arguments castable to numeric</div>" }, { "name" : "array5", "type" : "xs:anyAtomicType", "occurrence" : "*", "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> the sequences of numbers or arguments castable to numeric</div>" }, { "name" : "array6", "type" : "xs:anyAtomicType", "occurrence" : "*", "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> the sequences of numbers or arguments castable to numeric</div>" }, { "name" : "array7", "type" : "xs:anyAtomicType", "occurrence" : "*", "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> the sequences of numbers or arguments castable to numeric</div>" }, { "name" : "array8", "type" : "xs:anyAtomicType", "occurrence" : "*", "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> the sequences of numbers or arguments castable to numeric</div>" }, { "name" : "array9", "type" : "xs:anyAtomicType", "occurrence" : "*", "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> the sequences of numbers or arguments castable to numeric</div>" }, { "name" : "array10", "type" : "xs:anyAtomicType", "occurrence" : "*", "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> the sequences of numbers or arguments castable to numeric</div>" }, { "name" : "array11", "type" : "xs:anyAtomicType", "occurrence" : "*", "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> the sequences of numbers or arguments castable to numeric</div>" }, { "name" : "array12", "type" : "xs:anyAtomicType", "occurrence" : "*", "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> the sequences of numbers or arguments castable to numeric</div>" }, { "name" : "array13", "type" : "xs:anyAtomicType", "occurrence" : "*", "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> the sequences of numbers or arguments castable to numeric</div>" }, { "name" : "array14", "type" : "xs:anyAtomicType", "occurrence" : "*", "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> the sequences of numbers or arguments castable to numeric</div>" }, { "name" : "array15", "type" : "xs:anyAtomicType", "occurrence" : "*", "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> the sequences of numbers or arguments castable to numeric</div>" }, { "name" : "array16", "type" : "xs:anyAtomicType", "occurrence" : "*", "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> the sequences of numbers or arguments castable to numeric</div>" }, { "name" : "array17", "type" : "xs:anyAtomicType", "occurrence" : "*", "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> the sequences of numbers or arguments castable to numeric</div>" }, { "name" : "array18", "type" : "xs:anyAtomicType", "occurrence" : "*", "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> the sequences of numbers or arguments castable to numeric</div>" }, { "name" : "array19", "type" : "xs:anyAtomicType", "occurrence" : "*", "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> the sequences of numbers or arguments castable to numeric</div>" }, { "name" : "array20", "type" : "xs:anyAtomicType", "occurrence" : "*", "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> the sequences of numbers or arguments castable to numeric</div>" }, { "name" : "array21", "type" : "xs:anyAtomicType", "occurrence" : "*", "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> the sequences of numbers or arguments castable to numeric</div>" }, { "name" : "array22", "type" : "xs:anyAtomicType", "occurrence" : "*", "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> the sequences of numbers or arguments castable to numeric</div>" }, { "name" : "array23", "type" : "xs:anyAtomicType", "occurrence" : "*", "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> the sequences of numbers or arguments castable to numeric</div>" }, { "name" : "array24", "type" : "xs:anyAtomicType", "occurrence" : "*", "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> the sequences of numbers or arguments castable to numeric</div>" }, { "name" : "array25", "type" : "xs:anyAtomicType", "occurrence" : "*", "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> the sequences of numbers or arguments castable to numeric</div>" }, { "name" : "array26", "type" : "xs:anyAtomicType", "occurrence" : "*", "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> the sequences of numbers or arguments castable to numeric</div>" }, { "name" : "array27", "type" : "xs:anyAtomicType", "occurrence" : "*", "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> the sequences of numbers or arguments castable to numeric</div>" } ], "returns" : { "type" : "xs:anyAtomicType", "description" : "the sum of products" }, "errors" : [ "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">excel-err:Value if the parameters cannot be casted to numeric type</xqdoc:error>" ] }, { "isDocumented" : true, "arity" : 28, "name" : "sumproduct", "qname" : "excel:sumproduct", "signature" : "($array1 as xs:anyAtomicType*, $array2 as xs:anyAtomicType*, $array3 as xs:anyAtomicType*, $array4 as xs:anyAtomicType*, $array5 as xs:anyAtomicType*, $array6 as xs:anyAtomicType*, $array7 as xs:anyAtomicType*, $array8 as xs:anyAtomicType*, $array9 as xs:anyAtomicType*, $array10 as xs:anyAtomicType*, $array11 as xs:anyAtomicType*, $array12 as xs:anyAtomicType*, $array13 as xs:anyAtomicType*, $array14 as xs:anyAtomicType*, $array15 as xs:anyAtomicType*, $array16 as xs:anyAtomicType*, $array17 as xs:anyAtomicType*, $array18 as xs:anyAtomicType*, $array19 as xs:anyAtomicType*, $array20 as xs:anyAtomicType*, $array21 as xs:anyAtomicType*, $array22 as xs:anyAtomicType*, $array23 as xs:anyAtomicType*, $array24 as xs:anyAtomicType*, $array25 as xs:anyAtomicType*, $array26 as xs:anyAtomicType*, $array27 as xs:anyAtomicType*, $array28 as xs:anyAtomicType*) as xs:anyAtomicType", "description" : " Multiplies the elements on the same position in each sequence\n and sums up the results.\n", "summary" : "<p> Multiplies the elements on the same position in each sequence\n and sums up the results.</p>", "annotation_str" : "", "annotations" : [  ], "updating" : false, "parameters" : [ { "name" : "array1", "type" : "xs:anyAtomicType", "occurrence" : "*", "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> the sequences of numbers or arguments castable to numeric</div>" }, { "name" : "array2", "type" : "xs:anyAtomicType", "occurrence" : "*", "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> the sequences of numbers or arguments castable to numeric</div>" }, { "name" : "array3", "type" : "xs:anyAtomicType", "occurrence" : "*", "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> the sequences of numbers or arguments castable to numeric</div>" }, { "name" : "array4", "type" : "xs:anyAtomicType", "occurrence" : "*", "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> the sequences of numbers or arguments castable to numeric</div>" }, { "name" : "array5", "type" : "xs:anyAtomicType", "occurrence" : "*", "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> the sequences of numbers or arguments castable to numeric</div>" }, { "name" : "array6", "type" : "xs:anyAtomicType", "occurrence" : "*", "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> the sequences of numbers or arguments castable to numeric</div>" }, { "name" : "array7", "type" : "xs:anyAtomicType", "occurrence" : "*", "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> the sequences of numbers or arguments castable to numeric</div>" }, { "name" : "array8", "type" : "xs:anyAtomicType", "occurrence" : "*", "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> the sequences of numbers or arguments castable to numeric</div>" }, { "name" : "array9", "type" : "xs:anyAtomicType", "occurrence" : "*", "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> the sequences of numbers or arguments castable to numeric</div>" }, { "name" : "array10", "type" : "xs:anyAtomicType", "occurrence" : "*", "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> the sequences of numbers or arguments castable to numeric</div>" }, { "name" : "array11", "type" : "xs:anyAtomicType", "occurrence" : "*", "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> the sequences of numbers or arguments castable to numeric</div>" }, { "name" : "array12", "type" : "xs:anyAtomicType", "occurrence" : "*", "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> the sequences of numbers or arguments castable to numeric</div>" }, { "name" : "array13", "type" : "xs:anyAtomicType", "occurrence" : "*", "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> the sequences of numbers or arguments castable to numeric</div>" }, { "name" : "array14", "type" : "xs:anyAtomicType", "occurrence" : "*", "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> the sequences of numbers or arguments castable to numeric</div>" }, { "name" : "array15", "type" : "xs:anyAtomicType", "occurrence" : "*", "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> the sequences of numbers or arguments castable to numeric</div>" }, { "name" : "array16", "type" : "xs:anyAtomicType", "occurrence" : "*", "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> the sequences of numbers or arguments castable to numeric</div>" }, { "name" : "array17", "type" : "xs:anyAtomicType", "occurrence" : "*", "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> the sequences of numbers or arguments castable to numeric</div>" }, { "name" : "array18", "type" : "xs:anyAtomicType", "occurrence" : "*", "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> the sequences of numbers or arguments castable to numeric</div>" }, { "name" : "array19", "type" : "xs:anyAtomicType", "occurrence" : "*", "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> the sequences of numbers or arguments castable to numeric</div>" }, { "name" : "array20", "type" : "xs:anyAtomicType", "occurrence" : "*", "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> the sequences of numbers or arguments castable to numeric</div>" }, { "name" : "array21", "type" : "xs:anyAtomicType", "occurrence" : "*", "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> the sequences of numbers or arguments castable to numeric</div>" }, { "name" : "array22", "type" : "xs:anyAtomicType", "occurrence" : "*", "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> the sequences of numbers or arguments castable to numeric</div>" }, { "name" : "array23", "type" : "xs:anyAtomicType", "occurrence" : "*", "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> the sequences of numbers or arguments castable to numeric</div>" }, { "name" : "array24", "type" : "xs:anyAtomicType", "occurrence" : "*", "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> the sequences of numbers or arguments castable to numeric</div>" }, { "name" : "array25", "type" : "xs:anyAtomicType", "occurrence" : "*", "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> the sequences of numbers or arguments castable to numeric</div>" }, { "name" : "array26", "type" : "xs:anyAtomicType", "occurrence" : "*", "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> the sequences of numbers or arguments castable to numeric</div>" }, { "name" : "array27", "type" : "xs:anyAtomicType", "occurrence" : "*", "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> the sequences of numbers or arguments castable to numeric</div>" }, { "name" : "array28", "type" : "xs:anyAtomicType", "occurrence" : "*", "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> the sequences of numbers or arguments castable to numeric</div>" } ], "returns" : { "type" : "xs:anyAtomicType", "description" : "the sum of products" }, "errors" : [ "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">excel-err:Value if the parameters cannot be casted to numeric type</xqdoc:error>" ] }, { "isDocumented" : true, "arity" : 29, "name" : "sumproduct", "qname" : "excel:sumproduct", "signature" : "($array1 as xs:anyAtomicType*, $array2 as xs:anyAtomicType*, $array3 as xs:anyAtomicType*, $array4 as xs:anyAtomicType*, $array5 as xs:anyAtomicType*, $array6 as xs:anyAtomicType*, $array7 as xs:anyAtomicType*, $array8 as xs:anyAtomicType*, $array9 as xs:anyAtomicType*, $array10 as xs:anyAtomicType*, $array11 as xs:anyAtomicType*, $array12 as xs:anyAtomicType*, $array13 as xs:anyAtomicType*, $array14 as xs:anyAtomicType*, $array15 as xs:anyAtomicType*, $array16 as xs:anyAtomicType*, $array17 as xs:anyAtomicType*, $array18 as xs:anyAtomicType*, $array19 as xs:anyAtomicType*, $array20 as xs:anyAtomicType*, $array21 as xs:anyAtomicType*, $array22 as xs:anyAtomicType*, $array23 as xs:anyAtomicType*, $array24 as xs:anyAtomicType*, $array25 as xs:anyAtomicType*, $array26 as xs:anyAtomicType*, $array27 as xs:anyAtomicType*, $array28 as xs:anyAtomicType*, $array29 as xs:anyAtomicType*) as xs:anyAtomicType", "description" : " Multiplies the elements on the same position in each sequence\n and sums up the results.\n", "summary" : "<p> Multiplies the elements on the same position in each sequence\n and sums up the results.</p>", "annotation_str" : "", "annotations" : [  ], "updating" : false, "parameters" : [ { "name" : "array1", "type" : "xs:anyAtomicType", "occurrence" : "*", "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> the sequences of numbers or arguments castable to numeric</div>" }, { "name" : "array2", "type" : "xs:anyAtomicType", "occurrence" : "*", "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> the sequences of numbers or arguments castable to numeric</div>" }, { "name" : "array3", "type" : "xs:anyAtomicType", "occurrence" : "*", "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> the sequences of numbers or arguments castable to numeric</div>" }, { "name" : "array4", "type" : "xs:anyAtomicType", "occurrence" : "*", "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> the sequences of numbers or arguments castable to numeric</div>" }, { "name" : "array5", "type" : "xs:anyAtomicType", "occurrence" : "*", "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> the sequences of numbers or arguments castable to numeric</div>" }, { "name" : "array6", "type" : "xs:anyAtomicType", "occurrence" : "*", "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> the sequences of numbers or arguments castable to numeric</div>" }, { "name" : "array7", "type" : "xs:anyAtomicType", "occurrence" : "*", "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> the sequences of numbers or arguments castable to numeric</div>" }, { "name" : "array8", "type" : "xs:anyAtomicType", "occurrence" : "*", "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> the sequences of numbers or arguments castable to numeric</div>" }, { "name" : "array9", "type" : "xs:anyAtomicType", "occurrence" : "*", "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> the sequences of numbers or arguments castable to numeric</div>" }, { "name" : "array10", "type" : "xs:anyAtomicType", "occurrence" : "*", "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> the sequences of numbers or arguments castable to numeric</div>" }, { "name" : "array11", "type" : "xs:anyAtomicType", "occurrence" : "*", "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> the sequences of numbers or arguments castable to numeric</div>" }, { "name" : "array12", "type" : "xs:anyAtomicType", "occurrence" : "*", "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> the sequences of numbers or arguments castable to numeric</div>" }, { "name" : "array13", "type" : "xs:anyAtomicType", "occurrence" : "*", "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> the sequences of numbers or arguments castable to numeric</div>" }, { "name" : "array14", "type" : "xs:anyAtomicType", "occurrence" : "*", "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> the sequences of numbers or arguments castable to numeric</div>" }, { "name" : "array15", "type" : "xs:anyAtomicType", "occurrence" : "*", "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> the sequences of numbers or arguments castable to numeric</div>" }, { "name" : "array16", "type" : "xs:anyAtomicType", "occurrence" : "*", "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> the sequences of numbers or arguments castable to numeric</div>" }, { "name" : "array17", "type" : "xs:anyAtomicType", "occurrence" : "*", "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> the sequences of numbers or arguments castable to numeric</div>" }, { "name" : "array18", "type" : "xs:anyAtomicType", "occurrence" : "*", "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> the sequences of numbers or arguments castable to numeric</div>" }, { "name" : "array19", "type" : "xs:anyAtomicType", "occurrence" : "*", "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> the sequences of numbers or arguments castable to numeric</div>" }, { "name" : "array20", "type" : "xs:anyAtomicType", "occurrence" : "*", "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> the sequences of numbers or arguments castable to numeric</div>" }, { "name" : "array21", "type" : "xs:anyAtomicType", "occurrence" : "*", "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> the sequences of numbers or arguments castable to numeric</div>" }, { "name" : "array22", "type" : "xs:anyAtomicType", "occurrence" : "*", "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> the sequences of numbers or arguments castable to numeric</div>" }, { "name" : "array23", "type" : "xs:anyAtomicType", "occurrence" : "*", "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> the sequences of numbers or arguments castable to numeric</div>" }, { "name" : "array24", "type" : "xs:anyAtomicType", "occurrence" : "*", "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> the sequences of numbers or arguments castable to numeric</div>" }, { "name" : "array25", "type" : "xs:anyAtomicType", "occurrence" : "*", "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> the sequences of numbers or arguments castable to numeric</div>" }, { "name" : "array26", "type" : "xs:anyAtomicType", "occurrence" : "*", "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> the sequences of numbers or arguments castable to numeric</div>" }, { "name" : "array27", "type" : "xs:anyAtomicType", "occurrence" : "*", "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> the sequences of numbers or arguments castable to numeric</div>" }, { "name" : "array28", "type" : "xs:anyAtomicType", "occurrence" : "*", "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> the sequences of numbers or arguments castable to numeric</div>" }, { "name" : "array29", "type" : "xs:anyAtomicType", "occurrence" : "*", "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> the sequences of numbers or arguments castable to numeric</div>" } ], "returns" : { "type" : "xs:anyAtomicType", "description" : "the sum of products" }, "errors" : [ "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">excel-err:Value if the parameters cannot be casted to numeric type</xqdoc:error>" ] }, { "isDocumented" : true, "arity" : 3, "name" : "sumproduct", "qname" : "excel:sumproduct", "signature" : "($array1 as xs:anyAtomicType*, $array2 as xs:anyAtomicType*, $array3 as xs:anyAtomicType*) as xs:anyAtomicType", "description" : " Multiplies the elements on the same position in each sequence\n and sums up the results.\n", "summary" : "<p> Multiplies the elements on the same position in each sequence\n and sums up the results.</p>", "annotation_str" : "", "annotations" : [  ], "updating" : false, "parameters" : [ { "name" : "array1", "type" : "xs:anyAtomicType", "occurrence" : "*", "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> the sequences of numbers or arguments castable to numeric</div>" }, { "name" : "array2", "type" : "xs:anyAtomicType", "occurrence" : "*", "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> the sequences of numbers or arguments castable to numeric</div>" }, { "name" : "array3", "type" : "xs:anyAtomicType", "occurrence" : "*", "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> the sequences of numbers or arguments castable to numeric</div>" } ], "returns" : { "type" : "xs:anyAtomicType", "description" : "the sum of products" }, "errors" : [ "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">excel-err:Value if the parameters cannot be casted to numeric type</xqdoc:error>" ] }, { "isDocumented" : true, "arity" : 30, "name" : "sumproduct", "qname" : "excel:sumproduct", "signature" : "($array1 as xs:anyAtomicType*, $array2 as xs:anyAtomicType*, $array3 as xs:anyAtomicType*, $array4 as xs:anyAtomicType*, $array5 as xs:anyAtomicType*, $array6 as xs:anyAtomicType*, $array7 as xs:anyAtomicType*, $array8 as xs:anyAtomicType*, $array9 as xs:anyAtomicType*, $array10 as xs:anyAtomicType*, $array11 as xs:anyAtomicType*, $array12 as xs:anyAtomicType*, $array13 as xs:anyAtomicType*, $array14 as xs:anyAtomicType*, $array15 as xs:anyAtomicType*, $array16 as xs:anyAtomicType*, $array17 as xs:anyAtomicType*, $array18 as xs:anyAtomicType*, $array19 as xs:anyAtomicType*, $array20 as xs:anyAtomicType*, $array21 as xs:anyAtomicType*, $array22 as xs:anyAtomicType*, $array23 as xs:anyAtomicType*, $array24 as xs:anyAtomicType*, $array25 as xs:anyAtomicType*, $array26 as xs:anyAtomicType*, $array27 as xs:anyAtomicType*, $array28 as xs:anyAtomicType*, $array29 as xs:anyAtomicType*, $array30 as xs:anyAtomicType*) as xs:anyAtomicType", "description" : " Multiplies the elements on the same position in each sequence\n and sums up the results.\n", "summary" : "<p> Multiplies the elements on the same position in each sequence\n and sums up the results.</p>", "annotation_str" : "", "annotations" : [  ], "updating" : false, "parameters" : [ { "name" : "array1", "type" : "xs:anyAtomicType", "occurrence" : "*", "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> the sequences of numbers or arguments castable to numeric</div>" }, { "name" : "array2", "type" : "xs:anyAtomicType", "occurrence" : "*", "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> the sequences of numbers or arguments castable to numeric</div>" }, { "name" : "array3", "type" : "xs:anyAtomicType", "occurrence" : "*", "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> the sequences of numbers or arguments castable to numeric</div>" }, { "name" : "array4", "type" : "xs:anyAtomicType", "occurrence" : "*", "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> the sequences of numbers or arguments castable to numeric</div>" }, { "name" : "array5", "type" : "xs:anyAtomicType", "occurrence" : "*", "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> the sequences of numbers or arguments castable to numeric</div>" }, { "name" : "array6", "type" : "xs:anyAtomicType", "occurrence" : "*", "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> the sequences of numbers or arguments castable to numeric</div>" }, { "name" : "array7", "type" : "xs:anyAtomicType", "occurrence" : "*", "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> the sequences of numbers or arguments castable to numeric</div>" }, { "name" : "array8", "type" : "xs:anyAtomicType", "occurrence" : "*", "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> the sequences of numbers or arguments castable to numeric</div>" }, { "name" : "array9", "type" : "xs:anyAtomicType", "occurrence" : "*", "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> the sequences of numbers or arguments castable to numeric</div>" }, { "name" : "array10", "type" : "xs:anyAtomicType", "occurrence" : "*", "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> the sequences of numbers or arguments castable to numeric</div>" }, { "name" : "array11", "type" : "xs:anyAtomicType", "occurrence" : "*", "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> the sequences of numbers or arguments castable to numeric</div>" }, { "name" : "array12", "type" : "xs:anyAtomicType", "occurrence" : "*", "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> the sequences of numbers or arguments castable to numeric</div>" }, { "name" : "array13", "type" : "xs:anyAtomicType", "occurrence" : "*", "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> the sequences of numbers or arguments castable to numeric</div>" }, { "name" : "array14", "type" : "xs:anyAtomicType", "occurrence" : "*", "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> the sequences of numbers or arguments castable to numeric</div>" }, { "name" : "array15", "type" : "xs:anyAtomicType", "occurrence" : "*", "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> the sequences of numbers or arguments castable to numeric</div>" }, { "name" : "array16", "type" : "xs:anyAtomicType", "occurrence" : "*", "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> the sequences of numbers or arguments castable to numeric</div>" }, { "name" : "array17", "type" : "xs:anyAtomicType", "occurrence" : "*", "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> the sequences of numbers or arguments castable to numeric</div>" }, { "name" : "array18", "type" : "xs:anyAtomicType", "occurrence" : "*", "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> the sequences of numbers or arguments castable to numeric</div>" }, { "name" : "array19", "type" : "xs:anyAtomicType", "occurrence" : "*", "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> the sequences of numbers or arguments castable to numeric</div>" }, { "name" : "array20", "type" : "xs:anyAtomicType", "occurrence" : "*", "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> the sequences of numbers or arguments castable to numeric</div>" }, { "name" : "array21", "type" : "xs:anyAtomicType", "occurrence" : "*", "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> the sequences of numbers or arguments castable to numeric</div>" }, { "name" : "array22", "type" : "xs:anyAtomicType", "occurrence" : "*", "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> the sequences of numbers or arguments castable to numeric</div>" }, { "name" : "array23", "type" : "xs:anyAtomicType", "occurrence" : "*", "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> the sequences of numbers or arguments castable to numeric</div>" }, { "name" : "array24", "type" : "xs:anyAtomicType", "occurrence" : "*", "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> the sequences of numbers or arguments castable to numeric</div>" }, { "name" : "array25", "type" : "xs:anyAtomicType", "occurrence" : "*", "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> the sequences of numbers or arguments castable to numeric</div>" }, { "name" : "array26", "type" : "xs:anyAtomicType", "occurrence" : "*", "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> the sequences of numbers or arguments castable to numeric</div>" }, { "name" : "array27", "type" : "xs:anyAtomicType", "occurrence" : "*", "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> the sequences of numbers or arguments castable to numeric</div>" }, { "name" : "array28", "type" : "xs:anyAtomicType", "occurrence" : "*", "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> the sequences of numbers or arguments castable to numeric</div>" }, { "name" : "array29", "type" : "xs:anyAtomicType", "occurrence" : "*", "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> the sequences of numbers or arguments castable to numeric</div>" }, { "name" : "array30", "type" : "xs:anyAtomicType", "occurrence" : "*", "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> the sequences of numbers or arguments castable to numeric</div>" } ], "returns" : { "type" : "xs:anyAtomicType", "description" : "the sum of products" }, "errors" : [ "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">excel-err:Value if the parameters cannot be casted to numeric type</xqdoc:error>" ] }, { "isDocumented" : true, "arity" : 4, "name" : "sumproduct", "qname" : "excel:sumproduct", "signature" : "($array1 as xs:anyAtomicType*, $array2 as xs:anyAtomicType*, $array3 as xs:anyAtomicType*, $array4 as xs:anyAtomicType*) as xs:anyAtomicType", "description" : " Multiplies the elements on the same position in each sequence\n and sums up the results.\n", "summary" : "<p> Multiplies the elements on the same position in each sequence\n and sums up the results.</p>", "annotation_str" : "", "annotations" : [  ], "updating" : false, "parameters" : [ { "name" : "array1", "type" : "xs:anyAtomicType", "occurrence" : "*", "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> the sequences of numbers or arguments castable to numeric</div>" }, { "name" : "array2", "type" : "xs:anyAtomicType", "occurrence" : "*", "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> the sequences of numbers or arguments castable to numeric</div>" }, { "name" : "array3", "type" : "xs:anyAtomicType", "occurrence" : "*", "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> the sequences of numbers or arguments castable to numeric</div>" }, { "name" : "array4", "type" : "xs:anyAtomicType", "occurrence" : "*", "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> the sequences of numbers or arguments castable to numeric</div>" } ], "returns" : { "type" : "xs:anyAtomicType", "description" : "the sum of products" }, "errors" : [ "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">excel-err:Value if the parameters cannot be casted to numeric type</xqdoc:error>" ] }, { "isDocumented" : true, "arity" : 5, "name" : "sumproduct", "qname" : "excel:sumproduct", "signature" : "($array1 as xs:anyAtomicType*, $array2 as xs:anyAtomicType*, $array3 as xs:anyAtomicType*, $array4 as xs:anyAtomicType*, $array5 as xs:anyAtomicType*) as xs:anyAtomicType", "description" : " Multiplies the elements on the same position in each sequence\n and sums up the results.\n", "summary" : "<p> Multiplies the elements on the same position in each sequence\n and sums up the results.</p>", "annotation_str" : "", "annotations" : [  ], "updating" : false, "parameters" : [ { "name" : "array1", "type" : "xs:anyAtomicType", "occurrence" : "*", "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> the sequences of numbers or arguments castable to numeric</div>" }, { "name" : "array2", "type" : "xs:anyAtomicType", "occurrence" : "*", "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> the sequences of numbers or arguments castable to numeric</div>" }, { "name" : "array3", "type" : "xs:anyAtomicType", "occurrence" : "*", "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> the sequences of numbers or arguments castable to numeric</div>" }, { "name" : "array4", "type" : "xs:anyAtomicType", "occurrence" : "*", "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> the sequences of numbers or arguments castable to numeric</div>" }, { "name" : "array5", "type" : "xs:anyAtomicType", "occurrence" : "*", "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> the sequences of numbers or arguments castable to numeric</div>" } ], "returns" : { "type" : "xs:anyAtomicType", "description" : "the sum of products" }, "errors" : [ "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">excel-err:Value if the parameters cannot be casted to numeric type</xqdoc:error>" ] }, { "isDocumented" : true, "arity" : 6, "name" : "sumproduct", "qname" : "excel:sumproduct", "signature" : "($array1 as xs:anyAtomicType*, $array2 as xs:anyAtomicType*, $array3 as xs:anyAtomicType*, $array4 as xs:anyAtomicType*, $array5 as xs:anyAtomicType*, $array6 as xs:anyAtomicType*) as xs:anyAtomicType", "description" : " Multiplies the elements on the same position in each sequence\n and sums up the results.\n", "summary" : "<p> Multiplies the elements on the same position in each sequence\n and sums up the results.</p>", "annotation_str" : "", "annotations" : [  ], "updating" : false, "parameters" : [ { "name" : "array1", "type" : "xs:anyAtomicType", "occurrence" : "*", "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> the sequences of numbers or arguments castable to numeric</div>" }, { "name" : "array2", "type" : "xs:anyAtomicType", "occurrence" : "*", "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> the sequences of numbers or arguments castable to numeric</div>" }, { "name" : "array3", "type" : "xs:anyAtomicType", "occurrence" : "*", "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> the sequences of numbers or arguments castable to numeric</div>" }, { "name" : "array4", "type" : "xs:anyAtomicType", "occurrence" : "*", "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> the sequences of numbers or arguments castable to numeric</div>" }, { "name" : "array5", "type" : "xs:anyAtomicType", "occurrence" : "*", "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> the sequences of numbers or arguments castable to numeric</div>" }, { "name" : "array6", "type" : "xs:anyAtomicType", "occurrence" : "*", "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> the sequences of numbers or arguments castable to numeric</div>" } ], "returns" : { "type" : "xs:anyAtomicType", "description" : "the sum of products" }, "errors" : [ "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">excel-err:Value if the parameters cannot be casted to numeric type</xqdoc:error>" ] }, { "isDocumented" : true, "arity" : 7, "name" : "sumproduct", "qname" : "excel:sumproduct", "signature" : "($array1 as xs:anyAtomicType*, $array2 as xs:anyAtomicType*, $array3 as xs:anyAtomicType*, $array4 as xs:anyAtomicType*, $array5 as xs:anyAtomicType*, $array6 as xs:anyAtomicType*, $array7 as xs:anyAtomicType*) as xs:anyAtomicType", "description" : " Multiplies the elements on the same position in each sequence\n and sums up the results.\n", "summary" : "<p> Multiplies the elements on the same position in each sequence\n and sums up the results.</p>", "annotation_str" : "", "annotations" : [  ], "updating" : false, "parameters" : [ { "name" : "array1", "type" : "xs:anyAtomicType", "occurrence" : "*", "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> the sequences of numbers or arguments castable to numeric</div>" }, { "name" : "array2", "type" : "xs:anyAtomicType", "occurrence" : "*", "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> the sequences of numbers or arguments castable to numeric</div>" }, { "name" : "array3", "type" : "xs:anyAtomicType", "occurrence" : "*", "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> the sequences of numbers or arguments castable to numeric</div>" }, { "name" : "array4", "type" : "xs:anyAtomicType", "occurrence" : "*", "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> the sequences of numbers or arguments castable to numeric</div>" }, { "name" : "array5", "type" : "xs:anyAtomicType", "occurrence" : "*", "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> the sequences of numbers or arguments castable to numeric</div>" }, { "name" : "array6", "type" : "xs:anyAtomicType", "occurrence" : "*", "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> the sequences of numbers or arguments castable to numeric</div>" }, { "name" : "array7", "type" : "xs:anyAtomicType", "occurrence" : "*", "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> the sequences of numbers or arguments castable to numeric</div>" } ], "returns" : { "type" : "xs:anyAtomicType", "description" : "the sum of products" }, "errors" : [ "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">excel-err:Value if the parameters cannot be casted to numeric type</xqdoc:error>" ] }, { "isDocumented" : true, "arity" : 8, "name" : "sumproduct", "qname" : "excel:sumproduct", "signature" : "($array1 as xs:anyAtomicType*, $array2 as xs:anyAtomicType*, $array3 as xs:anyAtomicType*, $array4 as xs:anyAtomicType*, $array5 as xs:anyAtomicType*, $array6 as xs:anyAtomicType*, $array7 as xs:anyAtomicType*, $array8 as xs:anyAtomicType*) as xs:anyAtomicType", "description" : " Multiplies the elements on the same position in each sequence\n and sums up the results.\n", "summary" : "<p> Multiplies the elements on the same position in each sequence\n and sums up the results.</p>", "annotation_str" : "", "annotations" : [  ], "updating" : false, "parameters" : [ { "name" : "array1", "type" : "xs:anyAtomicType", "occurrence" : "*", "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> the sequences of numbers or arguments castable to numeric</div>" }, { "name" : "array2", "type" : "xs:anyAtomicType", "occurrence" : "*", "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> the sequences of numbers or arguments castable to numeric</div>" }, { "name" : "array3", "type" : "xs:anyAtomicType", "occurrence" : "*", "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> the sequences of numbers or arguments castable to numeric</div>" }, { "name" : "array4", "type" : "xs:anyAtomicType", "occurrence" : "*", "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> the sequences of numbers or arguments castable to numeric</div>" }, { "name" : "array5", "type" : "xs:anyAtomicType", "occurrence" : "*", "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> the sequences of numbers or arguments castable to numeric</div>" }, { "name" : "array6", "type" : "xs:anyAtomicType", "occurrence" : "*", "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> the sequences of numbers or arguments castable to numeric</div>" }, { "name" : "array7", "type" : "xs:anyAtomicType", "occurrence" : "*", "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> the sequences of numbers or arguments castable to numeric</div>" }, { "name" : "array8", "type" : "xs:anyAtomicType", "occurrence" : "*", "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> the sequences of numbers or arguments castable to numeric</div>" } ], "returns" : { "type" : "xs:anyAtomicType", "description" : "the sum of products" }, "errors" : [ "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">excel-err:Value if the parameters cannot be casted to numeric type</xqdoc:error>" ] }, { "isDocumented" : true, "arity" : 9, "name" : "sumproduct", "qname" : "excel:sumproduct", "signature" : "($array1 as xs:anyAtomicType*, $array2 as xs:anyAtomicType*, $array3 as xs:anyAtomicType*, $array4 as xs:anyAtomicType*, $array5 as xs:anyAtomicType*, $array6 as xs:anyAtomicType*, $array7 as xs:anyAtomicType*, $array8 as xs:anyAtomicType*, $array9 as xs:anyAtomicType*) as xs:anyAtomicType", "description" : " Multiplies the elements on the same position in each sequence\n and sums up the results.\n", "summary" : "<p> Multiplies the elements on the same position in each sequence\n and sums up the results.</p>", "annotation_str" : "", "annotations" : [  ], "updating" : false, "parameters" : [ { "name" : "array1", "type" : "xs:anyAtomicType", "occurrence" : "*", "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> the sequences of numbers or arguments castable to numeric</div>" }, { "name" : "array2", "type" : "xs:anyAtomicType", "occurrence" : "*", "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> the sequences of numbers or arguments castable to numeric</div>" }, { "name" : "array3", "type" : "xs:anyAtomicType", "occurrence" : "*", "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> the sequences of numbers or arguments castable to numeric</div>" }, { "name" : "array4", "type" : "xs:anyAtomicType", "occurrence" : "*", "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> the sequences of numbers or arguments castable to numeric</div>" }, { "name" : "array5", "type" : "xs:anyAtomicType", "occurrence" : "*", "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> the sequences of numbers or arguments castable to numeric</div>" }, { "name" : "array6", "type" : "xs:anyAtomicType", "occurrence" : "*", "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> the sequences of numbers or arguments castable to numeric</div>" }, { "name" : "array7", "type" : "xs:anyAtomicType", "occurrence" : "*", "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> the sequences of numbers or arguments castable to numeric</div>" }, { "name" : "array8", "type" : "xs:anyAtomicType", "occurrence" : "*", "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> the sequences of numbers or arguments castable to numeric</div>" }, { "name" : "array9", "type" : "xs:anyAtomicType", "occurrence" : "*", "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> the sequences of numbers or arguments castable to numeric</div>" } ], "returns" : { "type" : "xs:anyAtomicType", "description" : "the sum of products" }, "errors" : [ "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">excel-err:Value if the parameters cannot be casted to numeric type</xqdoc:error>" ] }, { "isDocumented" : true, "arity" : 1, "name" : "sumsq", "qname" : "excel:sumsq", "signature" : "($numbers as xs:anyAtomicType+) as xs:anyAtomicType", "description" : " Returns the sum of the squares of the arguments.\n It used the sumproduct function.\n", "summary" : "<p> Returns the sum of the squares of the arguments.</p>", "annotation_str" : "", "annotations" : [  ], "updating" : false, "parameters" : [ { "name" : "numbers", "type" : "xs:anyAtomicType", "occurrence" : "+", "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> the sequence of one or more numbers or arguments castable to numeric</div>" } ], "returns" : { "type" : "xs:anyAtomicType", "description" : "the sum of squared values, as numeric type" }, "errors" : [ "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">excel-err:Value if the parameters cannot be casted to numeric type</xqdoc:error>" ] } ], "variables" : [  ] }, "http://zorba.io/modules/item" : { "ns" : "http://zorba.io/modules/item", "description" : " This module provides utility functions on items. For example,\n it provides a function that allows estimating the size in bytes\n that a given item allocates in memory.\n", "sees" : [  ], "authors" : [ "<xqdoc:author xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">Matthias Brantner</xqdoc:author>" ], "version" : null, "encoding" : "utf-8", "namespaces" : [ { "uri" : "http://zorba.io/modules/item", "prefix" : "item" }, { "uri" : "http://zorba.io/options/versioning", "prefix" : "ver" } ], "functions" : [ { "isDocumented" : true, "arity" : 1, "name" : "size", "qname" : "item:size", "signature" : "($item as item()) as xs:integer external", "description" : " Computes the size in bytes of the given item in main memory.<p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"/>\n", "summary" : "<p> Computes the size in bytes of the given item in main memory.</p>", "annotation_str" : "", "annotations" : [  ], "updating" : false, "parameters" : [ { "name" : "item", "type" : "item()", "occurrence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> the item whose size to compute.</div>" } ], "returns" : { "type" : "xs:integer", "description" : "the size allocated by the item in bytes." }, "errors" : [  ] } ], "variables" : [  ] }, "http://www.zorba-xquery.com/modules/xqdoc/menu" : { "ns" : "http://www.zorba-xquery.com/modules/xqdoc/menu", "description" : " Generate navigation for XQDoc batches.\n", "sees" : [  ], "authors" : [ "<xqdoc:author xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">William Candillon</xqdoc:author>" ], "version" : null, "encoding" : "utf-8", "namespaces" : [ { "uri" : "http://www.zorba-xquery.com/modules/xqdoc/menu", "prefix" : "menu" }, { "uri" : "http://zorba.io/options/versioning", "prefix" : "ver" } ], "functions" : [ { "isDocumented" : false, "arity" : 2, "name" : "categories-as-js", "qname" : "menu:categories-as-js", "signature" : "($url-prefix as xs:string, $cats as element(*)) as xs:string", "description" : "", "summary" : "", "annotation_str" : "", "annotations" : [  ], "updating" : false, "parameters" : [ { "name" : "url-prefix", "type" : "xs:string", "occurrence" : null, "description" : "" }, { "name" : "cats", "type" : "element(*)", "occurrence" : null, "description" : "" } ], "returns" : { "type" : "xs:string", "description" : "" }, "errors" : [  ] }, { "isDocumented" : false, "arity" : 1, "name" : "categories", "qname" : "menu:categories", "signature" : "($top as element(*)) as xs:string*", "description" : "", "summary" : "", "annotation_str" : "", "annotations" : [  ], "updating" : false, "parameters" : [ { "name" : "top", "type" : "element(*)", "occurrence" : null, "description" : "" } ], "returns" : { "type" : "xs:string*", "description" : "" }, "errors" : [  ] }, { "isDocumented" : false, "arity" : 2, "name" : "closed-tabs", "qname" : "menu:closed-tabs", "signature" : "($item as element(section), $url-prefix as xs:string) as element(li)*", "description" : "", "summary" : "", "annotation_str" : "", "annotations" : [  ], "updating" : false, "parameters" : [ { "name" : "item", "type" : "element(section)", "occurrence" : null, "description" : "" }, { "name" : "url-prefix", "type" : "xs:string", "occurrence" : null, "description" : "" } ], "returns" : { "type" : "element(li)*", "description" : "" }, "errors" : [  ] }, { "isDocumented" : false, "arity" : 3, "name" : "closed-tabs", "qname" : "menu:closed-tabs", "signature" : "($item as element(*)?, $result as element(*)*, $url-prefix as xs:string) as element(li)*", "description" : "", "summary" : "", "annotation_str" : "", "annotations" : [  ], "updating" : false, "parameters" : [ { "name" : "item", "type" : "element(*)", "occurrence" : "?", "description" : "" }, { "name" : "result", "type" : "element(*)", "occurrence" : "*", "description" : "" }, { "name" : "url-prefix", "type" : "xs:string", "occurrence" : null, "description" : "" } ], "returns" : { "type" : "element(li)*", "description" : "" }, "errors" : [  ] }, { "isDocumented" : false, "arity" : 1, "name" : "item-uri", "qname" : "menu:item-uri", "signature" : "($item as element(*)) as xs:string", "description" : "", "summary" : "", "annotation_str" : "", "annotations" : [  ], "updating" : false, "parameters" : [ { "name" : "item", "type" : "element(*)", "occurrence" : null, "description" : "" } ], "returns" : { "type" : "xs:string", "description" : "" }, "errors" : [  ] }, { "isDocumented" : false, "arity" : 2, "name" : "item-uri", "qname" : "menu:item-uri", "signature" : "($item as element(*)?, $result as xs:string*) as xs:string+", "description" : "", "summary" : "", "annotation_str" : "", "annotations" : [  ], "updating" : false, "parameters" : [ { "name" : "item", "type" : "element(*)", "occurrence" : "?", "description" : "" }, { "name" : "result", "type" : "xs:string", "occurrence" : "*", "description" : "" } ], "returns" : { "type" : "xs:string+", "description" : "" }, "errors" : [  ] }, { "isDocumented" : false, "arity" : 2, "name" : "item", "qname" : "menu:item", "signature" : "($ctx as element(*)?, $path as xs:string*) as element(*)?", "description" : "", "summary" : "", "annotation_str" : "", "annotations" : [  ], "updating" : false, "parameters" : [ { "name" : "ctx", "type" : "element(*)", "occurrence" : "?", "description" : "" }, { "name" : "path", "type" : "xs:string", "occurrence" : "*", "description" : "" } ], "returns" : { "type" : "element(*)?", "description" : "" }, "errors" : [  ] }, { "isDocumented" : false, "arity" : 2, "name" : "menu", "qname" : "menu:menu", "signature" : "($item as element(*), $url-prefix as xs:string)", "description" : "", "summary" : "", "annotation_str" : "", "annotations" : [  ], "updating" : false, "parameters" : [ { "name" : "item", "type" : "element(*)", "occurrence" : null, "description" : "" }, { "name" : "url-prefix", "type" : "xs:string", "occurrence" : null, "description" : "" } ], "returns" : { "type" : null, "description" : "" }, "errors" : [  ] } ], "variables" : [ { "name" : "menu:not-found", "type" : "item()*", "description" : "" } ] }, "http://zorba.io/modules/dbgp-message-handler" : { "ns" : "http://zorba.io/modules/dbgp-message-handler", "description" : " Zorba debugger module.\n", "sees" : [  ], "authors" : [ "<xqdoc:author xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">Gabriel Petrovay</xqdoc:author>" ], "version" : null, "encoding" : "utf-8", "namespaces" : [ { "uri" : "http://zorba.io/modules/base64", "prefix" : "base64" }, { "uri" : "http://zorba.io/modules/dbgp-message-handler", "prefix" : "dmh" }, { "uri" : "http://zorba.io/options/versioning", "prefix" : "ver" } ], "functions" : [ { "isDocumented" : true, "arity" : 1, "name" : "process", "qname" : "dmh:process", "signature" : "($message as element(*)) as xs:anyAtomicType*", "description" : " Process one message received from the Zorba debugger server.\n", "summary" : "<p> Process one message received from the Zorba debugger server.</p>", "annotation_str" : "", "annotations" : [  ], "updating" : false, "parameters" : [ { "name" : "message", "type" : "element(*)", "occurrence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> the message.</div>" } ], "returns" : { "type" : "xs:anyAtomicType*", "description" : "()." }, "errors" : [  ] } ], "variables" : [ { "name" : "dmh:debug", "type" : "xs:boolean", "description" : " Set this variale to true if you want to have mode debug information when\n an error occurs.\n" } ] }, "http://www.28msec.com/modules/ws/mailchimp" : { "ns" : "http://www.28msec.com/modules/ws/mailchimp", "description" : " Mailchimp Client Module.\n", "sees" : [ "<xqdoc:see xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"><a href=\"http://apidocs.mailchimp.com\" target=\"_blank\">http://apidocs.mailchimp.com</a></xqdoc:see>" ], "authors" : [ "<xqdoc:author xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">William Candillon {william.candillon@28msec.com}</xqdoc:author>" ], "version" : null, "encoding" : "utf-8", "namespaces" : [ { "uri" : "http://zorba.io/annotations", "prefix" : "an" }, { "uri" : "http://expath.org/ns/http-client", "prefix" : "http-client" }, { "uri" : "http://www.28msec.com/modules/ws/mailchimp", "prefix" : "mailchimp" }, { "uri" : "http://zorba.io/options/versioning", "prefix" : "ver" }, { "uri" : "http://www.28msec.com/modules/xmlrpc", "prefix" : "xmlrpc" } ], "functions" : [ { "isDocumented" : true, "arity" : 3, "name" : "apikey-add", "qname" : "mailchimp:apikey-add", "signature" : "($username as xs:string, $password as xs:string, $apikey as xs:string) as item()*", "description" : " Convenience function for <a xmlns:xqdoc=\"http://www.xqdoc.org/1.0\" href=\"#apikey-add-4\">apikey-add#4</a>.\n", "summary" : "<p> Convenience function for  apikey-add#4 .</p>", "annotation_str" : " %an:sequential", "annotations" : [ { "prefix" : "an", "ns" : "http://zorba.io/annotations", "name" : "sequential", "value" : "" } ], "updating" : false, "parameters" : [ { "name" : "username", "type" : "xs:string", "occurrence" : null, "description" : "" }, { "name" : "password", "type" : "xs:string", "occurrence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> Your MailChimp password</div>" }, { "name" : "apikey", "type" : "xs:string", "occurrence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> Any valid API Key</div>" } ], "returns" : { "type" : "item()*", "description" : "A new API Key that can be immediately used." }, "errors" : [  ] }, { "isDocumented" : true, "arity" : 4, "name" : "apikey-add", "qname" : "mailchimp:apikey-add", "signature" : "($endpoint-url as xs:string, $username as xs:string, $password as xs:string, $apikey as xs:string) as item()*", "description" : " Add an API Key to your account. We will generate a new key for you and return it.\n", "summary" : "<p> Add an API Key to your account.</p>", "annotation_str" : " %an:sequential", "annotations" : [ { "prefix" : "an", "ns" : "http://zorba.io/annotations", "name" : "sequential", "value" : "" } ], "updating" : false, "parameters" : [ { "name" : "endpoint-url", "type" : "xs:string", "occurrence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> Mailchimp endpoint URL, e.g. http://us1.api.mailchimp.com/1.3/</div>" }, { "name" : "username", "type" : "xs:string", "occurrence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> Your MailChimp user name</div>" }, { "name" : "password", "type" : "xs:string", "occurrence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> Your MailChimp password</div>" }, { "name" : "apikey", "type" : "xs:string", "occurrence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> Any valid API Key</div>" } ], "returns" : { "type" : "item()*", "description" : "A new API Key that can be immediately used." }, "errors" : [  ] }, { "isDocumented" : true, "arity" : 3, "name" : "apikey-expire", "qname" : "mailchimp:apikey-expire", "signature" : "($username as xs:string, $password as xs:string, $apikey as xs:string) as item()*", "description" : " Convenience function for <a xmlns:xqdoc=\"http://www.xqdoc.org/1.0\" href=\"#apikey-expire-4\">apikey-expire#4</a>.\n", "summary" : "<p> Convenience function for  apikey-expire#4 .</p>", "annotation_str" : " %an:sequential", "annotations" : [ { "prefix" : "an", "ns" : "http://zorba.io/annotations", "name" : "sequential", "value" : "" } ], "updating" : false, "parameters" : [ { "name" : "username", "type" : "xs:string", "occurrence" : null, "description" : "" }, { "name" : "password", "type" : "xs:string", "occurrence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> Your MailChimp password</div>" }, { "name" : "apikey", "type" : "xs:string", "occurrence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> Any valid API Key that you wish to expire</div>" } ], "returns" : { "type" : "item()*", "description" : "True if it worked, otherwise an error is thrown." }, "errors" : [  ] }, { "isDocumented" : true, "arity" : 4, "name" : "apikey-expire", "qname" : "mailchimp:apikey-expire", "signature" : "($endpoint-url as xs:string, $username as xs:string, $password as xs:string, $apikey as xs:string) as item()*", "description" : " Expire a Specific API Key. Note that if you expire all of your keys, just visit <a xmlns:xqdoc=\"http://www.xqdoc.org/1.0\" href=\"http://admin.mailchimp.com/account/api\" target=\"_blank\">your API dashboard</a> to create a new one. If you are trying to shut off access to your account for an old developer, change your MailChimp password, then expire all of the keys they had access to. Note that this takes effect immediately, so make sure you replace the keys in any working application before expiring them! Consider yourself warned...\n", "summary" : "<p> Expire a Specific API Key.</p>", "annotation_str" : " %an:sequential", "annotations" : [ { "prefix" : "an", "ns" : "http://zorba.io/annotations", "name" : "sequential", "value" : "" } ], "updating" : false, "parameters" : [ { "name" : "endpoint-url", "type" : "xs:string", "occurrence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> Mailchimp endpoint URL, e.g. http://us1.api.mailchimp.com/1.3/</div>" }, { "name" : "username", "type" : "xs:string", "occurrence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> Your MailChimp user name</div>" }, { "name" : "password", "type" : "xs:string", "occurrence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> Your MailChimp password</div>" }, { "name" : "apikey", "type" : "xs:string", "occurrence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> Any valid API Key that you wish to expire</div>" } ], "returns" : { "type" : "item()*", "description" : "True if it worked, otherwise an error is thrown." }, "errors" : [  ] }, { "isDocumented" : true, "arity" : 4, "name" : "apikeys", "qname" : "mailchimp:apikeys", "signature" : "($username as xs:string, $password as xs:string, $apikey as xs:string, $expired as xs:boolean) as item()*", "description" : " Convenience function for <a xmlns:xqdoc=\"http://www.xqdoc.org/1.0\" href=\"#apikeys-5\">apikeys#5</a>.\n", "summary" : "<p> Convenience function for  apikeys#5 .</p>", "annotation_str" : " %an:sequential", "annotations" : [ { "prefix" : "an", "ns" : "http://zorba.io/annotations", "name" : "sequential", "value" : "" } ], "updating" : false, "parameters" : [ { "name" : "username", "type" : "xs:string", "occurrence" : null, "description" : "" }, { "name" : "password", "type" : "xs:string", "occurrence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> Your MailChimp password</div>" }, { "name" : "apikey", "type" : "xs:string", "occurrence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> Any valid API Key for your account</div>" }, { "name" : "expired", "type" : "xs:boolean", "occurrence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> optional - whether or not to include expired keys, defaults to false</div>" } ], "returns" : { "type" : "item()*", "description" : "An array of API keys." }, "errors" : [  ] }, { "isDocumented" : true, "arity" : 5, "name" : "apikeys", "qname" : "mailchimp:apikeys", "signature" : "($endpoint-url as xs:string, $username as xs:string, $password as xs:string, $apikey as xs:string, $expired as xs:boolean) as item()*", "description" : " Retrieve a list of all MailChimp API Keys for this User.\n", "summary" : "<p> Retrieve a list of all MailChimp API Keys for this User.</p>", "annotation_str" : " %an:sequential", "annotations" : [ { "prefix" : "an", "ns" : "http://zorba.io/annotations", "name" : "sequential", "value" : "" } ], "updating" : false, "parameters" : [ { "name" : "endpoint-url", "type" : "xs:string", "occurrence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> Mailchimp endpoint URL, e.g. http://us1.api.mailchimp.com/1.3/</div>" }, { "name" : "username", "type" : "xs:string", "occurrence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> Your MailChimp user name</div>" }, { "name" : "password", "type" : "xs:string", "occurrence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> Your MailChimp password</div>" }, { "name" : "apikey", "type" : "xs:string", "occurrence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> Any valid API Key for your account</div>" }, { "name" : "expired", "type" : "xs:boolean", "occurrence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> optional - whether or not to include expired keys, defaults to false</div>" } ], "returns" : { "type" : "item()*", "description" : "An array of API keys." }, "errors" : [  ] }, { "isDocumented" : true, "arity" : 5, "name" : "campaign-abuse-reports", "qname" : "mailchimp:campaign-abuse-reports", "signature" : "($apikey as xs:string, $cid as xs:string, $since as xs:integer, $start as xs:integer, $limit as xs:string) as item()*", "description" : " Convenience function for <a xmlns:xqdoc=\"http://www.xqdoc.org/1.0\" href=\"#campaign-abuse-reports-6\">campaign-abuse-reports#6</a>.\n", "summary" : "<p> Convenience function for  campaign-abuse-reports#6 .</p>", "annotation_str" : " %an:sequential", "annotations" : [ { "prefix" : "an", "ns" : "http://zorba.io/annotations", "name" : "sequential", "value" : "" } ], "updating" : false, "parameters" : [ { "name" : "apikey", "type" : "xs:string", "occurrence" : null, "description" : "" }, { "name" : "cid", "type" : "xs:string", "occurrence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> the campaign id to pull abuse reports for (can be gathered using <a href=\"#campaigns-4\">campaigns()</a>)</div>" }, { "name" : "since", "type" : "xs:integer", "occurrence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> optional for large data sets, the page number to start at - defaults to 1st page of data (page 0)</div>" }, { "name" : "start", "type" : "xs:integer", "occurrence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> optional for large data sets, the number of results to return - defaults to 500, upper limit set at 1000</div>" }, { "name" : "limit", "type" : "xs:string", "occurrence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> optional pull only messages since this time - use YYYY-MM-DD HH:II:SS format in <strong>GMT</strong></div>" } ], "returns" : { "type" : "item()*", "description" : "Reports the abuse reports for this campaign" }, "errors" : [  ] }, { "isDocumented" : true, "arity" : 6, "name" : "campaign-abuse-reports", "qname" : "mailchimp:campaign-abuse-reports", "signature" : "($endpoint-url as xs:string, $apikey as xs:string, $cid as xs:string, $since as xs:integer, $start as xs:integer, $limit as xs:string) as item()*", "description" : " Get all email addresses that complained about a given campaign.\n", "summary" : "<p> Get all email addresses that complained about a given campaign.</p>", "annotation_str" : " %an:sequential", "annotations" : [ { "prefix" : "an", "ns" : "http://zorba.io/annotations", "name" : "sequential", "value" : "" } ], "updating" : false, "parameters" : [ { "name" : "endpoint-url", "type" : "xs:string", "occurrence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> Mailchimp endpoint URL, e.g. http://us1.api.mailchimp.com/1.3/</div>" }, { "name" : "apikey", "type" : "xs:string", "occurrence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> a valid API Key for your user account. Get by visiting <a href=\"http://admin.mailchimp.com/account/api\" target=\"_blank\">your API dashboard</a></div>" }, { "name" : "cid", "type" : "xs:string", "occurrence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> the campaign id to pull abuse reports for (can be gathered using <a href=\"#campaigns-4\">campaigns()</a>)</div>" }, { "name" : "since", "type" : "xs:integer", "occurrence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> optional for large data sets, the page number to start at - defaults to 1st page of data (page 0)</div>" }, { "name" : "start", "type" : "xs:integer", "occurrence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> optional for large data sets, the number of results to return - defaults to 500, upper limit set at 1000</div>" }, { "name" : "limit", "type" : "xs:string", "occurrence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> optional pull only messages since this time - use YYYY-MM-DD HH:II:SS format in <strong>GMT</strong></div>" } ], "returns" : { "type" : "item()*", "description" : "Reports the abuse reports for this campaign" }, "errors" : [  ] }, { "isDocumented" : true, "arity" : 2, "name" : "campaign-advice", "qname" : "mailchimp:campaign-advice", "signature" : "($apikey as xs:string, $cid as xs:string) as item()*", "description" : " Convenience function for <a xmlns:xqdoc=\"http://www.xqdoc.org/1.0\" href=\"#campaign-advice-3\">campaign-advice#3</a>.\n", "summary" : "<p> Convenience function for  campaign-advice#3 .</p>", "annotation_str" : " %an:sequential", "annotations" : [ { "prefix" : "an", "ns" : "http://zorba.io/annotations", "name" : "sequential", "value" : "" } ], "updating" : false, "parameters" : [ { "name" : "apikey", "type" : "xs:string", "occurrence" : null, "description" : "" }, { "name" : "cid", "type" : "xs:string", "occurrence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> the campaign id to pull advice text for (can be gathered using <a href=\"#campaigns-4\">campaigns()</a>)</div>" } ], "returns" : { "type" : "item()*", "description" : "Advice on the campaign's performance" }, "errors" : [  ] }, { "isDocumented" : true, "arity" : 3, "name" : "campaign-advice", "qname" : "mailchimp:campaign-advice", "signature" : "($endpoint-url as xs:string, $apikey as xs:string, $cid as xs:string) as item()*", "description" : " Retrieve the text presented in our app for how a campaign performed and any advice we may have for you - best suited for display in customized reports pages.\n Note: some messages will contain HTML - clean tags as necessary.\n", "summary" : "<p> Retrieve the text presented in our app for how a campaign performed and any advice we may have for you - best suited for display in customized reports pages.</p>", "annotation_str" : " %an:sequential", "annotations" : [ { "prefix" : "an", "ns" : "http://zorba.io/annotations", "name" : "sequential", "value" : "" } ], "updating" : false, "parameters" : [ { "name" : "endpoint-url", "type" : "xs:string", "occurrence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> Mailchimp endpoint URL, e.g. http://us1.api.mailchimp.com/1.3/</div>" }, { "name" : "apikey", "type" : "xs:string", "occurrence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> a valid API Key for your user account. Get by visiting <a href=\"http://admin.mailchimp.com/account/api\" target=\"_blank\">your API dashboard</a></div>" }, { "name" : "cid", "type" : "xs:string", "occurrence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> the campaign id to pull advice text for (can be gathered using <a href=\"#campaigns-4\">campaigns()</a>)</div>" } ], "returns" : { "type" : "item()*", "description" : "Advice on the campaign's performance" }, "errors" : [  ] }, { "isDocumented" : true, "arity" : 2, "name" : "campaign-analytics", "qname" : "mailchimp:campaign-analytics", "signature" : "($apikey as xs:string, $cid as xs:string) as item()*", "description" : " Convenience function for <a xmlns:xqdoc=\"http://www.xqdoc.org/1.0\" href=\"#campaign-analytics-3\">campaign-analytics#3</a>.\n", "summary" : "<p> Convenience function for  campaign-analytics#3 .</p>", "annotation_str" : " %an:sequential", "annotations" : [ { "prefix" : "an", "ns" : "http://zorba.io/annotations", "name" : "sequential", "value" : "" } ], "updating" : false, "parameters" : [ { "name" : "apikey", "type" : "xs:string", "occurrence" : null, "description" : "" }, { "name" : "cid", "type" : "xs:string", "occurrence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> the campaign id to pull bounces for (can be gathered using <a href=\"#campaigns-4\">campaigns()</a>)</div>" } ], "returns" : { "type" : "item()*", "description" : "Analytics we've collected for the passed campaign." }, "errors" : [  ] }, { "isDocumented" : true, "arity" : 3, "name" : "campaign-analytics", "qname" : "mailchimp:campaign-analytics", "signature" : "($endpoint-url as xs:string, $apikey as xs:string, $cid as xs:string) as item()*", "description" : " Retrieve the Google Analytics data we've collected for this campaign. Note, requires Google Analytics Add-on to be installed and configured.\n", "summary" : "<p> Retrieve the Google Analytics data we've collected for this campaign.</p>", "annotation_str" : " %an:sequential", "annotations" : [ { "prefix" : "an", "ns" : "http://zorba.io/annotations", "name" : "sequential", "value" : "" } ], "updating" : false, "parameters" : [ { "name" : "endpoint-url", "type" : "xs:string", "occurrence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> Mailchimp endpoint URL, e.g. http://us1.api.mailchimp.com/1.3/</div>" }, { "name" : "apikey", "type" : "xs:string", "occurrence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> a valid API Key for your user account. Get by visiting <a href=\"http://admin.mailchimp.com/account/api\" target=\"_blank\">your API dashboard</a></div>" }, { "name" : "cid", "type" : "xs:string", "occurrence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> the campaign id to pull bounces for (can be gathered using <a href=\"#campaigns-4\">campaigns()</a>)</div>" } ], "returns" : { "type" : "item()*", "description" : "Analytics we've collected for the passed campaign." }, "errors" : [  ] }, { "isDocumented" : true, "arity" : 3, "name" : "campaign-bounce-message", "qname" : "mailchimp:campaign-bounce-message", "signature" : "($apikey as xs:string, $cid as xs:string, $email as xs:string) as item()*", "description" : " Convenience function for <a xmlns:xqdoc=\"http://www.xqdoc.org/1.0\" href=\"#campaign-bounce-message-4\">campaign-bounce-message#4</a>.\n", "summary" : "<p> Convenience function for  campaign-bounce-message#4 .</p>", "annotation_str" : " %an:sequential", "annotations" : [ { "prefix" : "an", "ns" : "http://zorba.io/annotations", "name" : "sequential", "value" : "" } ], "updating" : false, "parameters" : [ { "name" : "apikey", "type" : "xs:string", "occurrence" : null, "description" : "" }, { "name" : "cid", "type" : "xs:string", "occurrence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> the campaign id to pull bounces for (can be gathered using <a href=\"#campaigns-4\">campaigns()</a>)</div>" }, { "name" : "email", "type" : "xs:string", "occurrence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> the email address or unique id of the member to pull a bounce message for.</div>" } ], "returns" : { "type" : "item()*", "description" : "The full bounce message for this email+campaign along with some extra data." }, "errors" : [  ] }, { "isDocumented" : true, "arity" : 4, "name" : "campaign-bounce-message", "qname" : "mailchimp:campaign-bounce-message", "signature" : "($endpoint-url as xs:string, $apikey as xs:string, $cid as xs:string, $email as xs:string) as item()*", "description" : " Retrieve the most recent full bounce message for a specific email address on the given campaign. Messages over 30 days old are subject to being removed.\n", "summary" : "<p> Retrieve the most recent full bounce message for a specific email address on the given campaign.</p>", "annotation_str" : " %an:sequential", "annotations" : [ { "prefix" : "an", "ns" : "http://zorba.io/annotations", "name" : "sequential", "value" : "" } ], "updating" : false, "parameters" : [ { "name" : "endpoint-url", "type" : "xs:string", "occurrence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> Mailchimp endpoint URL, e.g. http://us1.api.mailchimp.com/1.3/</div>" }, { "name" : "apikey", "type" : "xs:string", "occurrence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> a valid API Key for your user account. Get by visiting <a href=\"http://admin.mailchimp.com/account/api\" target=\"_blank\">your API dashboard</a></div>" }, { "name" : "cid", "type" : "xs:string", "occurrence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> the campaign id to pull bounces for (can be gathered using <a href=\"#campaigns-4\">campaigns()</a>)</div>" }, { "name" : "email", "type" : "xs:string", "occurrence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> the email address or unique id of the member to pull a bounce message for.</div>" } ], "returns" : { "type" : "item()*", "description" : "The full bounce message for this email+campaign along with some extra data." }, "errors" : [  ] }, { "isDocumented" : true, "arity" : 5, "name" : "campaign-bounce-messages", "qname" : "mailchimp:campaign-bounce-messages", "signature" : "($apikey as xs:string, $cid as xs:string, $start as xs:integer, $limit as xs:integer, $since as xs:string) as item()*", "description" : " Convenience function for <a xmlns:xqdoc=\"http://www.xqdoc.org/1.0\" href=\"#campaign-bounce-messages-6\">campaign-bounce-messages#6</a>.\n", "summary" : "<p> Convenience function for  campaign-bounce-messages#6 .</p>", "annotation_str" : " %an:sequential", "annotations" : [ { "prefix" : "an", "ns" : "http://zorba.io/annotations", "name" : "sequential", "value" : "" } ], "updating" : false, "parameters" : [ { "name" : "apikey", "type" : "xs:string", "occurrence" : null, "description" : "" }, { "name" : "cid", "type" : "xs:string", "occurrence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> the campaign id to pull bounces for (can be gathered using <a href=\"#campaigns-4\">campaigns()</a>)</div>" }, { "name" : "start", "type" : "xs:integer", "occurrence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> optional for large data sets, the page number to start at - defaults to 1st page of data (page 0)</div>" }, { "name" : "limit", "type" : "xs:integer", "occurrence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> optional for large data sets, the number of results to return - defaults to 25, upper limit set at 50</div>" }, { "name" : "since", "type" : "xs:string", "occurrence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> optional pull only messages since this time - use YYYY-MM-DD format in <strong>GMT</strong> (we only store the date, not the time)</div>" } ], "returns" : { "type" : "item()*", "description" : "Bounces the full bounce messages for this campaign" }, "errors" : [  ] }, { "isDocumented" : true, "arity" : 6, "name" : "campaign-bounce-messages", "qname" : "mailchimp:campaign-bounce-messages", "signature" : "($endpoint-url as xs:string, $apikey as xs:string, $cid as xs:string, $start as xs:integer, $limit as xs:integer, $since as xs:string) as item()*", "description" : " Retrieve the full bounce messages for the given campaign. Note that this can return very large amounts of data depending on how large the campaign was and how much cruft the bounce provider returned.\n", "summary" : "<p> Retrieve the full bounce messages for the given campaign.</p>", "annotation_str" : " %an:sequential", "annotations" : [ { "prefix" : "an", "ns" : "http://zorba.io/annotations", "name" : "sequential", "value" : "" } ], "updating" : false, "parameters" : [ { "name" : "endpoint-url", "type" : "xs:string", "occurrence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> Mailchimp endpoint URL, e.g. http://us1.api.mailchimp.com/1.3/</div>" }, { "name" : "apikey", "type" : "xs:string", "occurrence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> a valid API Key for your user account. Get by visiting <a href=\"http://admin.mailchimp.com/account/api\" target=\"_blank\">your API dashboard</a></div>" }, { "name" : "cid", "type" : "xs:string", "occurrence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> the campaign id to pull bounces for (can be gathered using <a href=\"#campaigns-4\">campaigns()</a>)</div>" }, { "name" : "start", "type" : "xs:integer", "occurrence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> optional for large data sets, the page number to start at - defaults to 1st page of data (page 0)</div>" }, { "name" : "limit", "type" : "xs:integer", "occurrence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> optional for large data sets, the number of results to return - defaults to 25, upper limit set at 50</div>" }, { "name" : "since", "type" : "xs:string", "occurrence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> optional pull only messages since this time - use YYYY-MM-DD format in <strong>GMT</strong> (we only store the date, not the time)</div>" } ], "returns" : { "type" : "item()*", "description" : "Bounces the full bounce messages for this campaign" }, "errors" : [  ] }, { "isDocumented" : true, "arity" : 5, "name" : "campaign-click-detail-AIM", "qname" : "mailchimp:campaign-click-detail-AIM", "signature" : "($apikey as xs:string, $cid as xs:string, $url as xs:string, $start as xs:integer, $limit as xs:integer) as item()*", "description" : " Convenience function for <a xmlns:xqdoc=\"http://www.xqdoc.org/1.0\" href=\"#campaign-click-detail-AIM-6\">campaign-click-detail-AIM#6</a>.\n", "summary" : "<p> Convenience function for  campaign-click-detail-AIM#6 .</p>", "annotation_str" : " %an:sequential", "annotations" : [ { "prefix" : "an", "ns" : "http://zorba.io/annotations", "name" : "sequential", "value" : "" } ], "updating" : false, "parameters" : [ { "name" : "apikey", "type" : "xs:string", "occurrence" : null, "description" : "" }, { "name" : "cid", "type" : "xs:string", "occurrence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> the campaign id to get click stats for (can be gathered using <a href=\"#campaigns-4\">campaigns()</a>)</div>" }, { "name" : "url", "type" : "xs:string", "occurrence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> the URL of the link that was clicked on</div>" }, { "name" : "start", "type" : "xs:integer", "occurrence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> art optional for large data sets, the page number to start at - defaults to 1st page of data (page 0)</div>" }, { "name" : "limit", "type" : "xs:integer", "occurrence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> mit optional for large data sets, the number of results to return - defaults to 1000, upper limit set at 15000</div>" } ], "returns" : { "type" : "item()*", "description" : "Array containing the total records matched and the specific records for this page" }, "errors" : [  ] }, { "isDocumented" : true, "arity" : 6, "name" : "campaign-click-detail-AIM", "qname" : "mailchimp:campaign-click-detail-AIM", "signature" : "($endpoint-url as xs:string, $apikey as xs:string, $cid as xs:string, $url as xs:string, $start as xs:integer, $limit as xs:integer) as item()*", "description" : " Return the list of email addresses that clicked on a given url, and how many times they clicked.\n", "summary" : "<p> Return the list of email addresses that clicked on a given url, and how many times they clicked.</p>", "annotation_str" : " %an:sequential", "annotations" : [ { "prefix" : "an", "ns" : "http://zorba.io/annotations", "name" : "sequential", "value" : "" } ], "updating" : false, "parameters" : [ { "name" : "endpoint-url", "type" : "xs:string", "occurrence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> Mailchimp endpoint URL, e.g. http://us1.api.mailchimp.com/1.3/</div>" }, { "name" : "apikey", "type" : "xs:string", "occurrence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> a valid API Key for your user account. Get by visiting <a href=\"http://admin.mailchimp.com/account/api\" target=\"_blank\">your API dashboard</a></div>" }, { "name" : "cid", "type" : "xs:string", "occurrence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> the campaign id to get click stats for (can be gathered using <a href=\"#campaigns-4\">campaigns()</a>)</div>" }, { "name" : "url", "type" : "xs:string", "occurrence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> the URL of the link that was clicked on</div>" }, { "name" : "start", "type" : "xs:integer", "occurrence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> art optional for large data sets, the page number to start at - defaults to 1st page of data (page 0)</div>" }, { "name" : "limit", "type" : "xs:integer", "occurrence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> mit optional for large data sets, the number of results to return - defaults to 1000, upper limit set at 15000</div>" } ], "returns" : { "type" : "item()*", "description" : "Array containing the total records matched and the specific records for this page" }, "errors" : [  ] }, { "isDocumented" : true, "arity" : 2, "name" : "campaign-click-stats", "qname" : "mailchimp:campaign-click-stats", "signature" : "($apikey as xs:string, $cid as xs:string) as item()*", "description" : " Convenience function for <a xmlns:xqdoc=\"http://www.xqdoc.org/1.0\" href=\"#campaign-click-stats-3\">campaign-click-stats#3</a>.\n", "summary" : "<p> Convenience function for  campaign-click-stats#3 .</p>", "annotation_str" : " %an:sequential", "annotations" : [ { "prefix" : "an", "ns" : "http://zorba.io/annotations", "name" : "sequential", "value" : "" } ], "updating" : false, "parameters" : [ { "name" : "apikey", "type" : "xs:string", "occurrence" : null, "description" : "" }, { "name" : "cid", "type" : "xs:string", "occurrence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> the campaign id to pull stats for (can be gathered using <a href=\"#campaigns-4\">campaigns()</a>)</div>" } ], "returns" : { "type" : "item()*", "description" : "URLs will be keys and contain their associated statistics: clicks (number of times a specific link was clicked) and unique (number of unique people who clicked on the specific link)." }, "errors" : [  ] }, { "isDocumented" : true, "arity" : 3, "name" : "campaign-click-stats", "qname" : "mailchimp:campaign-click-stats", "signature" : "($endpoint-url as xs:string, $apikey as xs:string, $cid as xs:string) as item()*", "description" : " Get an array of the urls being tracked, and their click counts for a given campaign.\n", "summary" : "<p> Get an array of the urls being tracked, and their click counts for a given campaign.</p>", "annotation_str" : " %an:sequential", "annotations" : [ { "prefix" : "an", "ns" : "http://zorba.io/annotations", "name" : "sequential", "value" : "" } ], "updating" : false, "parameters" : [ { "name" : "endpoint-url", "type" : "xs:string", "occurrence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> Mailchimp endpoint URL, e.g. http://us1.api.mailchimp.com/1.3/</div>" }, { "name" : "apikey", "type" : "xs:string", "occurrence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> a valid API Key for your user account. Get by visiting <a href=\"http://admin.mailchimp.com/account/api\" target=\"_blank\">your API dashboard</a></div>" }, { "name" : "cid", "type" : "xs:string", "occurrence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> the campaign id to pull stats for (can be gathered using <a href=\"#campaigns-4\">campaigns()</a>)</div>" } ], "returns" : { "type" : "item()*", "description" : "URLs will be keys and contain their associated statistics: clicks (number of times a specific link was clicked) and unique (number of unique people who clicked on the specific link)." }, "errors" : [  ] }, { "isDocumented" : true, "arity" : 3, "name" : "campaign-content", "qname" : "mailchimp:campaign-content", "signature" : "($apikey as xs:string, $cid as xs:string, $for_archive as xs:boolean) as item()*", "description" : " Convenience function for <a xmlns:xqdoc=\"http://www.xqdoc.org/1.0\" href=\"#campaign-content-4\">campaign-content#4</a>.\n", "summary" : "<p> Convenience function for  campaign-content#4 .</p>", "annotation_str" : " %an:sequential", "annotations" : [ { "prefix" : "an", "ns" : "http://zorba.io/annotations", "name" : "sequential", "value" : "" } ], "updating" : false, "parameters" : [ { "name" : "apikey", "type" : "xs:string", "occurrence" : null, "description" : "" }, { "name" : "cid", "type" : "xs:string", "occurrence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> the campaign id to get content for (can be gathered using <a href=\"#campaigns-4\">campaigns()</a>)</div>" }, { "name" : "for_archive", "type" : "xs:boolean", "occurrence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> optional controls whether we return the Archive version (true) or the Raw version (false), defaults to true</div>" } ], "returns" : { "type" : "item()*", "description" : "Struct containing all content for the campaign" }, "errors" : [  ] }, { "isDocumented" : true, "arity" : 4, "name" : "campaign-content", "qname" : "mailchimp:campaign-content", "signature" : "($endpoint-url as xs:string, $apikey as xs:string, $cid as xs:string, $for_archive as xs:boolean) as item()*", "description" : " Get the content (both html and text) for a campaign either as it would appear in the campaign archive or as the raw, original content.\n", "summary" : "<p> Get the content (both html and text) for a campaign either as it would appear in the campaign archive or as the raw, original content.</p>", "annotation_str" : " %an:sequential", "annotations" : [ { "prefix" : "an", "ns" : "http://zorba.io/annotations", "name" : "sequential", "value" : "" } ], "updating" : false, "parameters" : [ { "name" : "endpoint-url", "type" : "xs:string", "occurrence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> Mailchimp endpoint URL, e.g. http://us1.api.mailchimp.com/1.3/</div>" }, { "name" : "apikey", "type" : "xs:string", "occurrence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> a valid API Key for your user account. Get by visiting <a href=\"http://admin.mailchimp.com/account/api\" target=\"_blank\">your API dashboard</a></div>" }, { "name" : "cid", "type" : "xs:string", "occurrence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> the campaign id to get content for (can be gathered using <a href=\"#campaigns-4\">campaigns()</a>)</div>" }, { "name" : "for_archive", "type" : "xs:boolean", "occurrence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> optional controls whether we return the Archive version (true) or the Raw version (false), defaults to true</div>" } ], "returns" : { "type" : "item()*", "description" : "Struct containing all content for the campaign" }, "errors" : [  ] }, { "isDocumented" : true, "arity" : 6, "name" : "campaign-create", "qname" : "mailchimp:campaign-create", "signature" : "($apikey as xs:string, $type as xs:string, $options as element(array), $content as element(array), $segment_opts as element(array), $type_opts as element(array)) as item()*", "description" : " Convenience function for <a xmlns:xqdoc=\"http://www.xqdoc.org/1.0\" href=\"#campaign-create-7\">campaign-create#7</a>.\n", "summary" : "<p> Convenience function for  campaign-create#7 .</p>", "annotation_str" : " %an:sequential", "annotations" : [ { "prefix" : "an", "ns" : "http://zorba.io/annotations", "name" : "sequential", "value" : "" } ], "updating" : false, "parameters" : [ { "name" : "apikey", "type" : "xs:string", "occurrence" : null, "description" : "" }, { "name" : "type", "type" : "xs:string", "occurrence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> the Campaign Type to create - one of \"regular\", \"plaintext\", \"absplit\", \"rss\", \"trans\", \"auto\"</div>" }, { "name" : "options", "type" : "element(array)", "occurrence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> a hash of the standard options for this campaign. See <a href=\"http://apidocs.mailchimp.com/rtfm/campaigncreate.func.php\">Mailchimp API documentation</a> for more information about the parameter structure.</div>" }, { "name" : "content", "type" : "element(array)", "occurrence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> the content for this campaign - use a struct with the following keys. See <a href=\"http://apidocs.mailchimp.com/rtfm/campaigncreate.func.php\">Mailchimp API documentation</a> for more information about the parameter structure.</div>" }, { "name" : "segment_opts", "type" : "element(array)", "occurrence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> optional - if you wish to do Segmentation with this campaign this array should contain: see <a href=\"#campaign-segment-test-3\">campaign-segment-test()</a>. It's suggested that you test your options against <a href=\"#campaign-segment-test-3\">campaign-segment-test()</a>. Also, \"trans\" campaigns <strong>do not</strong> support segmentation.</div>" }, { "name" : "type_opts", "type" : "element(array)", "occurrence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> optional -</div>" } ], "returns" : { "type" : "item()*", "description" : "The ID for the created campaign" }, "errors" : [  ] }, { "isDocumented" : true, "arity" : 7, "name" : "campaign-create", "qname" : "mailchimp:campaign-create", "signature" : "($endpoint-url as xs:string, $apikey as xs:string, $type as xs:string, $options as element(array), $content as element(array), $segment_opts as element(array), $type_opts as element(array)) as item()*", "description" : " Create a new draft campaign to send. You can not have more than 32,000 campaigns in your account.\n", "summary" : "<p> Create a new draft campaign to send.</p>", "annotation_str" : " %an:sequential", "annotations" : [ { "prefix" : "an", "ns" : "http://zorba.io/annotations", "name" : "sequential", "value" : "" } ], "updating" : false, "parameters" : [ { "name" : "endpoint-url", "type" : "xs:string", "occurrence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> Mailchimp endpoint URL, e.g. http://us1.api.mailchimp.com/1.3/</div>" }, { "name" : "apikey", "type" : "xs:string", "occurrence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> a valid API Key for your user account. Get by visiting <a href=\"http://admin.mailchimp.com/account/api\" target=\"_blank\">your API dashboard</a></div>" }, { "name" : "type", "type" : "xs:string", "occurrence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> the Campaign Type to create - one of \"regular\", \"plaintext\", \"absplit\", \"rss\", \"trans\", \"auto\"</div>" }, { "name" : "options", "type" : "element(array)", "occurrence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> a hash of the standard options for this campaign. See <a href=\"http://apidocs.mailchimp.com/rtfm/campaigncreate.func.php\">Mailchimp API documentation</a> for more information about the parameter structure.</div>" }, { "name" : "content", "type" : "element(array)", "occurrence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> the content for this campaign - use a struct with the following keys. See <a href=\"http://apidocs.mailchimp.com/rtfm/campaigncreate.func.php\">Mailchimp API documentation</a> for more information about the parameter structure.</div>" }, { "name" : "segment_opts", "type" : "element(array)", "occurrence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> optional - if you wish to do Segmentation with this campaign this array should contain: see <a href=\"#campaign-segment-test-3\"><a href=\"#campaign-segment-test-3\">campaign-segment-test()</a></a>. It's suggested that you test your options against <a href=\"#campaign-segment-test-3\">campaign-segment-test()</a>. Also, \"trans\" campaigns <strong>do not</strong> support segmentation.</div>" }, { "name" : "type_opts", "type" : "element(array)", "occurrence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> optional</div>" } ], "returns" : { "type" : "item()*", "description" : "The ID for the created campaign" }, "errors" : [  ] }, { "isDocumented" : true, "arity" : 2, "name" : "campaign-delete", "qname" : "mailchimp:campaign-delete", "signature" : "($apikey as xs:string, $cid as xs:string) as item()*", "description" : " Convenience function for <a xmlns:xqdoc=\"http://www.xqdoc.org/1.0\" href=\"#campaign-delete-3\">campaign-delete#3</a>.\n", "summary" : "<p> Convenience function for  campaign-delete#3 .</p>", "annotation_str" : " %an:sequential", "annotations" : [ { "prefix" : "an", "ns" : "http://zorba.io/annotations", "name" : "sequential", "value" : "" } ], "updating" : false, "parameters" : [ { "name" : "apikey", "type" : "xs:string", "occurrence" : null, "description" : "" }, { "name" : "cid", "type" : "xs:string", "occurrence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> the Campaign Id to delete</div>" } ], "returns" : { "type" : "item()*", "description" : "True if the delete succeeds, otherwise an error will be thrown" }, "errors" : [  ] }, { "isDocumented" : true, "arity" : 3, "name" : "campaign-delete", "qname" : "mailchimp:campaign-delete", "signature" : "($endpoint-url as xs:string, $apikey as xs:string, $cid as xs:string) as item()*", "description" : " Delete a campaign. Seriously, \"poof, gone!\" - be careful!.\n", "summary" : "<p> Delete a campaign.</p>", "annotation_str" : " %an:sequential", "annotations" : [ { "prefix" : "an", "ns" : "http://zorba.io/annotations", "name" : "sequential", "value" : "" } ], "updating" : false, "parameters" : [ { "name" : "endpoint-url", "type" : "xs:string", "occurrence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> Mailchimp endpoint URL, e.g. http://us1.api.mailchimp.com/1.3/</div>" }, { "name" : "apikey", "type" : "xs:string", "occurrence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> a valid API Key for your user account. Get by visiting <a href=\"http://admin.mailchimp.com/account/api\" target=\"_blank\">your API dashboard</a></div>" }, { "name" : "cid", "type" : "xs:string", "occurrence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> the Campaign Id to delete</div>" } ], "returns" : { "type" : "item()*", "description" : "True if the delete succeeds, otherwise an error will be thrown" }, "errors" : [  ] }, { "isDocumented" : true, "arity" : 2, "name" : "campaign-ecomm-order-add", "qname" : "mailchimp:campaign-ecomm-order-add", "signature" : "($apikey as xs:string, $order as element(array)) as item()*", "description" : " Convenience function for <a xmlns:xqdoc=\"http://www.xqdoc.org/1.0\" href=\"#campaign-ecomm-order-add-3\">campaign-ecomm-order-add#3</a>.\n", "summary" : "<p> Convenience function for  campaign-ecomm-order-add#3 .</p>", "annotation_str" : " %an:sequential", "annotations" : [ { "prefix" : "an", "ns" : "http://zorba.io/annotations", "name" : "sequential", "value" : "" } ], "updating" : false, "parameters" : [ { "name" : "apikey", "type" : "xs:string", "occurrence" : null, "description" : "" }, { "name" : "order", "type" : "element(array)", "occurrence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> an array of information pertaining to the order that has completed. Use the following keys. See <a href=\"http://apidocs.mailchimp.com/rtfm/campaignecommorderadd.func.php\">Mailchimp API documentation</a> for more information about the parameter structure.</div>" } ], "returns" : { "type" : "item()*", "description" : "True if the data is saved, otherwise an error is thrown." }, "errors" : [  ] }, { "isDocumented" : true, "arity" : 3, "name" : "campaign-ecomm-order-add", "qname" : "mailchimp:campaign-ecomm-order-add", "signature" : "($endpoint-url as xs:string, $apikey as xs:string, $order as element(array)) as item()*", "description" : " Attach Ecommerce Order Information to a Campaign.\n", "summary" : "<p> Attach Ecommerce Order Information to a Campaign.</p>", "annotation_str" : " %an:sequential", "annotations" : [ { "prefix" : "an", "ns" : "http://zorba.io/annotations", "name" : "sequential", "value" : "" } ], "updating" : false, "parameters" : [ { "name" : "endpoint-url", "type" : "xs:string", "occurrence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> Mailchimp endpoint URL, e.g. http://us1.api.mailchimp.com/1.3/</div>" }, { "name" : "apikey", "type" : "xs:string", "occurrence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> a valid API Key for your user account. Get by visiting <a href=\"http://admin.mailchimp.com/account/api\" target=\"_blank\">your API dashboard</a></div>" }, { "name" : "order", "type" : "element(array)", "occurrence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> an array of information pertaining to the order that has completed. Use the following keys. See <a href=\"http://apidocs.mailchimp.com/rtfm/campaignecommorderadd.func.php\">Mailchimp API documentation</a> for more information about the parameter structure.</div>" } ], "returns" : { "type" : "item()*", "description" : "True if the data is saved, otherwise an error is thrown." }, "errors" : [  ] }, { "isDocumented" : true, "arity" : 5, "name" : "campaign-ecomm-orders", "qname" : "mailchimp:campaign-ecomm-orders", "signature" : "($apikey as xs:string, $cid as xs:string, $start as xs:integer, $limit as xs:integer, $since as xs:string) as item()*", "description" : " Convenience function for <a xmlns:xqdoc=\"http://www.xqdoc.org/1.0\" href=\"#campaign-ecomm-orders-6\">campaign-ecomm-orders#6</a>.\n", "summary" : "<p> Convenience function for  campaign-ecomm-orders#6 .</p>", "annotation_str" : " %an:sequential", "annotations" : [ { "prefix" : "an", "ns" : "http://zorba.io/annotations", "name" : "sequential", "value" : "" } ], "updating" : false, "parameters" : [ { "name" : "apikey", "type" : "xs:string", "occurrence" : null, "description" : "" }, { "name" : "cid", "type" : "xs:string", "occurrence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> the campaign id to pull bounces for (can be gathered using <a href=\"#campaigns-4\">campaigns()</a>)</div>" }, { "name" : "start", "type" : "xs:integer", "occurrence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> optional for large data sets, the page number to start at - defaults to 1st page of data (page 0)</div>" }, { "name" : "limit", "type" : "xs:integer", "occurrence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> optional for large data sets, the number of results to return - defaults to 100, upper limit set at 500</div>" }, { "name" : "since", "type" : "xs:string", "occurrence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> optional pull only messages since this time - use YYYY-MM-DD HH:II:SS format in <strong>GMT</strong></div>" } ], "returns" : { "type" : "item()*", "description" : "The total matching orders and the specific orders for the requested page" }, "errors" : [  ] }, { "isDocumented" : true, "arity" : 6, "name" : "campaign-ecomm-orders", "qname" : "mailchimp:campaign-ecomm-orders", "signature" : "($endpoint-url as xs:string, $apikey as xs:string, $cid as xs:string, $start as xs:integer, $limit as xs:integer, $since as xs:string) as item()*", "description" : " Retrieve the Ecommerce Orders tracked by <a xmlns:xqdoc=\"http://www.xqdoc.org/1.0\" href=\"#campaign-ecomm-order-add-2\">campaign-ecomm-order-add()</a>.\n", "summary" : "<p> Retrieve the Ecommerce Orders tracked by  campaign-ecomm-order-add() .</p>", "annotation_str" : " %an:sequential", "annotations" : [ { "prefix" : "an", "ns" : "http://zorba.io/annotations", "name" : "sequential", "value" : "" } ], "updating" : false, "parameters" : [ { "name" : "endpoint-url", "type" : "xs:string", "occurrence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> Mailchimp endpoint URL, e.g. http://us1.api.mailchimp.com/1.3/</div>" }, { "name" : "apikey", "type" : "xs:string", "occurrence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> a valid API Key for your user account. Get by visiting <a href=\"http://admin.mailchimp.com/account/api\" target=\"_blank\">your API dashboard</a></div>" }, { "name" : "cid", "type" : "xs:string", "occurrence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> the campaign id to pull bounces for (can be gathered using <a href=\"#campaigns-4\">campaigns()</a>)</div>" }, { "name" : "start", "type" : "xs:integer", "occurrence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> optional for large data sets, the page number to start at - defaults to 1st page of data (page 0)</div>" }, { "name" : "limit", "type" : "xs:integer", "occurrence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> optional for large data sets, the number of results to return - defaults to 100, upper limit set at 500</div>" }, { "name" : "since", "type" : "xs:string", "occurrence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> optional pull only messages since this time - use YYYY-MM-DD HH:II:SS format in <strong>GMT</strong></div>" } ], "returns" : { "type" : "item()*", "description" : "The total matching orders and the specific orders for the requested page" }, "errors" : [  ] }, { "isDocumented" : true, "arity" : 2, "name" : "campaign-eep-url-stats", "qname" : "mailchimp:campaign-eep-url-stats", "signature" : "($apikey as xs:string, $cid as xs:string) as item()*", "description" : " Convenience function for <a xmlns:xqdoc=\"http://www.xqdoc.org/1.0\" href=\"#campaign-eep-url-stats-3\">campaign-eep-url-stats#3</a>.\n", "summary" : "<p> Convenience function for  campaign-eep-url-stats#3 .</p>", "annotation_str" : " %an:sequential", "annotations" : [ { "prefix" : "an", "ns" : "http://zorba.io/annotations", "name" : "sequential", "value" : "" } ], "updating" : false, "parameters" : [ { "name" : "apikey", "type" : "xs:string", "occurrence" : null, "description" : "" }, { "name" : "cid", "type" : "xs:string", "occurrence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> the campaign id to pull bounces for (can be gathered using <a href=\"#campaigns-4\">campaigns()</a>)</div>" } ], "returns" : { "type" : "item()*", "description" : "Stats an array containing tweets, retweets, clicks, and referrer related to using the campaign's eepurl" }, "errors" : [  ] }, { "isDocumented" : true, "arity" : 3, "name" : "campaign-eep-url-stats", "qname" : "mailchimp:campaign-eep-url-stats", "signature" : "($endpoint-url as xs:string, $apikey as xs:string, $cid as xs:string) as item()*", "description" : " Retrieve the tracked eepurl mentions on Twitter.\n", "summary" : "<p> Retrieve the tracked eepurl mentions on Twitter.</p>", "annotation_str" : " %an:sequential", "annotations" : [ { "prefix" : "an", "ns" : "http://zorba.io/annotations", "name" : "sequential", "value" : "" } ], "updating" : false, "parameters" : [ { "name" : "endpoint-url", "type" : "xs:string", "occurrence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> Mailchimp endpoint URL, e.g. http://us1.api.mailchimp.com/1.3/</div>" }, { "name" : "apikey", "type" : "xs:string", "occurrence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> a valid API Key for your user account. Get by visiting <a href=\"http://admin.mailchimp.com/account/api\" target=\"_blank\">your API dashboard</a></div>" }, { "name" : "cid", "type" : "xs:string", "occurrence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> the campaign id to pull bounces for (can be gathered using <a href=\"#campaigns-4\">campaigns()</a>)</div>" } ], "returns" : { "type" : "item()*", "description" : "Stats an array containing tweets, retweets, clicks, and referrer related to using the campaign's eepurl" }, "errors" : [  ] }, { "isDocumented" : true, "arity" : 2, "name" : "campaign-email-domain-performance", "qname" : "mailchimp:campaign-email-domain-performance", "signature" : "($apikey as xs:string, $cid as xs:string) as item()*", "description" : " Convenience function for <a xmlns:xqdoc=\"http://www.xqdoc.org/1.0\" href=\"#campaign-email-domain-performance-3\">campaign-email-domain-performance#3</a>.\n", "summary" : "<p> Convenience function for  campaign-email-domain-performance#3 .</p>", "annotation_str" : " %an:sequential", "annotations" : [ { "prefix" : "an", "ns" : "http://zorba.io/annotations", "name" : "sequential", "value" : "" } ], "updating" : false, "parameters" : [ { "name" : "apikey", "type" : "xs:string", "occurrence" : null, "description" : "" }, { "name" : "cid", "type" : "xs:string", "occurrence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> the campaign id to pull email domain performance for (can be gathered using <a href=\"#campaigns-4\">campaigns()</a>)</div>" } ], "returns" : { "type" : "item()*", "description" : "Domains email domains and their associated stats" }, "errors" : [  ] }, { "isDocumented" : true, "arity" : 3, "name" : "campaign-email-domain-performance", "qname" : "mailchimp:campaign-email-domain-performance", "signature" : "($endpoint-url as xs:string, $apikey as xs:string, $cid as xs:string) as item()*", "description" : " Get the top 5 performing email domains for this campaign. Users want more than 5 should use campaign <a xmlns:xqdoc=\"http://www.xqdoc.org/1.0\" href=\"#campaign-email-stats-AIM-3\">campaign-email-stats-AIM()</a> or <a xmlns:xqdoc=\"http://www.xqdoc.org/1.0\" href=\"#campaign-email-stats-AIM-all-4\">campaign-email-stats-AIM-all()</a> and generate any additional stats they require.\n", "summary" : "<p> Get the top 5 performing email domains for this campaign.</p>", "annotation_str" : " %an:sequential", "annotations" : [ { "prefix" : "an", "ns" : "http://zorba.io/annotations", "name" : "sequential", "value" : "" } ], "updating" : false, "parameters" : [ { "name" : "endpoint-url", "type" : "xs:string", "occurrence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> Mailchimp endpoint URL, e.g. http://us1.api.mailchimp.com/1.3/</div>" }, { "name" : "apikey", "type" : "xs:string", "occurrence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> a valid API Key for your user account. Get by visiting <a href=\"http://admin.mailchimp.com/account/api\" target=\"_blank\">your API dashboard</a></div>" }, { "name" : "cid", "type" : "xs:string", "occurrence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> the campaign id to pull email domain performance for (can be gathered using <a href=\"#campaigns-4\">campaigns()</a>)</div>" } ], "returns" : { "type" : "item()*", "description" : "Domains email domains and their associated stats" }, "errors" : [  ] }, { "isDocumented" : true, "arity" : 4, "name" : "campaign-email-stats-AIM-all", "qname" : "mailchimp:campaign-email-stats-AIM-all", "signature" : "($apikey as xs:string, $cid as xs:string, $start as xs:integer, $limit as xs:integer) as item()*", "description" : " Convenience function for <a xmlns:xqdoc=\"http://www.xqdoc.org/1.0\" href=\"#campaign-email-stats-AIM-all-5\">campaign-email-stats-AIM-all#5</a>.\n", "summary" : "<p> Convenience function for  campaign-email-stats-AIM-all#5 .</p>", "annotation_str" : " %an:sequential", "annotations" : [ { "prefix" : "an", "ns" : "http://zorba.io/annotations", "name" : "sequential", "value" : "" } ], "updating" : false, "parameters" : [ { "name" : "apikey", "type" : "xs:string", "occurrence" : null, "description" : "" }, { "name" : "cid", "type" : "xs:string", "occurrence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> the campaign id to get stats for (can be gathered using <a href=\"#campaigns-4\">campaigns()</a>)</div>" }, { "name" : "start", "type" : "xs:integer", "occurrence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> optional for large data sets, the page number to start at - defaults to 1st page of data (page 0)</div>" }, { "name" : "limit", "type" : "xs:integer", "occurrence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> optional for large data sets, the number of results to return - defaults to 100, upper limit set at 1000</div>" } ], "returns" : { "type" : "item()*", "description" : "Array containing a total record count and data including the actions (opens and clicks) for each email, with timestamps" }, "errors" : [  ] }, { "isDocumented" : true, "arity" : 5, "name" : "campaign-email-stats-AIM-all", "qname" : "mailchimp:campaign-email-stats-AIM-all", "signature" : "($endpoint-url as xs:string, $apikey as xs:string, $cid as xs:string, $start as xs:integer, $limit as xs:integer) as item()*", "description" : " Given a campaign and correct paging limits, return the entire click and open history with timestamps, ordered by time, for every user a campaign was delivered to.\n", "summary" : "<p> Given a campaign and correct paging limits, return the entire click and open history with timestamps, ordered by time, for every user a campaign was delivered to.</p>", "annotation_str" : " %an:sequential", "annotations" : [ { "prefix" : "an", "ns" : "http://zorba.io/annotations", "name" : "sequential", "value" : "" } ], "updating" : false, "parameters" : [ { "name" : "endpoint-url", "type" : "xs:string", "occurrence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> Mailchimp endpoint URL, e.g. http://us1.api.mailchimp.com/1.3/</div>" }, { "name" : "apikey", "type" : "xs:string", "occurrence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> a valid API Key for your user account. Get by visiting <a href=\"http://admin.mailchimp.com/account/api\" target=\"_blank\">your API dashboard</a></div>" }, { "name" : "cid", "type" : "xs:string", "occurrence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> the campaign id to get stats for (can be gathered using <a href=\"#campaigns-4\">campaigns()</a>)</div>" }, { "name" : "start", "type" : "xs:integer", "occurrence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> optional for large data sets, the page number to start at - defaults to 1st page of data (page 0)</div>" }, { "name" : "limit", "type" : "xs:integer", "occurrence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> optional for large data sets, the number of results to return - defaults to 100, upper limit set at 1000</div>" } ], "returns" : { "type" : "item()*", "description" : "Array containing a total record count and data including the actions (opens and clicks) for each email, with timestamps" }, "errors" : [  ] }, { "isDocumented" : true, "arity" : 3, "name" : "campaign-email-stats-AIM", "qname" : "mailchimp:campaign-email-stats-AIM", "signature" : "($apikey as xs:string, $cid as xs:string, $email_address as element(array)) as item()*", "description" : " Convenience function for <a xmlns:xqdoc=\"http://www.xqdoc.org/1.0\" href=\"#campaign-email-stats-AIM-4\">campaign-email-stats-AIM#4</a>.\n", "summary" : "<p> Convenience function for  campaign-email-stats-AIM#4 .</p>", "annotation_str" : " %an:sequential", "annotations" : [ { "prefix" : "an", "ns" : "http://zorba.io/annotations", "name" : "sequential", "value" : "" } ], "updating" : false, "parameters" : [ { "name" : "apikey", "type" : "xs:string", "occurrence" : null, "description" : "" }, { "name" : "cid", "type" : "xs:string", "occurrence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> the campaign id to get stats for (can be gathered using <a href=\"#campaigns-4\">campaigns()</a>)</div>" }, { "name" : "email_address", "type" : "element(array)", "occurrence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> an array of up to 50 email addresses to check OR the email \"id\" returned from listMemberInfo, Webhooks, and Campaigns. For backwards compatibility, if a string is passed, it will be treated as an array with a single element (will not work with XML-RPC).</div>" } ], "returns" : { "type" : "item()*", "description" : "Array an array with the keys listed in Returned Fields below" }, "errors" : [  ] }, { "isDocumented" : true, "arity" : 4, "name" : "campaign-email-stats-AIM", "qname" : "mailchimp:campaign-email-stats-AIM", "signature" : "($endpoint-url as xs:string, $apikey as xs:string, $cid as xs:string, $email_address as element(array)) as item()*", "description" : " Given a campaign and email address, return the entire click and open history with timestamps, ordered by time.\n", "summary" : "<p> Given a campaign and email address, return the entire click and open history with timestamps, ordered by time.</p>", "annotation_str" : " %an:sequential", "annotations" : [ { "prefix" : "an", "ns" : "http://zorba.io/annotations", "name" : "sequential", "value" : "" } ], "updating" : false, "parameters" : [ { "name" : "endpoint-url", "type" : "xs:string", "occurrence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> Mailchimp endpoint URL, e.g. http://us1.api.mailchimp.com/1.3/</div>" }, { "name" : "apikey", "type" : "xs:string", "occurrence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> a valid API Key for your user account. Get by visiting <a href=\"http://admin.mailchimp.com/account/api\" target=\"_blank\">your API dashboard</a></div>" }, { "name" : "cid", "type" : "xs:string", "occurrence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> the campaign id to get stats for (can be gathered using <a href=\"#campaigns-4\">campaigns()</a>)</div>" }, { "name" : "email_address", "type" : "element(array)", "occurrence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> an array of up to 50 email addresses to check OR the email \"id\" returned from listMemberInfo, Webhooks, and Campaigns. For backwards compatibility, if a string is passed, it will be treated as an array with a single element (will not work with XML-RPC).</div>" } ], "returns" : { "type" : "item()*", "description" : "Array an array with the keys listed in Returned Fields below" }, "errors" : [  ] }, { "isDocumented" : true, "arity" : 3, "name" : "campaign-geo-opens-for-country", "qname" : "mailchimp:campaign-geo-opens-for-country", "signature" : "($apikey as xs:string, $cid as xs:string, $code as xs:string) as item()*", "description" : " Convenience function for <a xmlns:xqdoc=\"http://www.xqdoc.org/1.0\" href=\"#campaign-geo-opens-for-country-4\">campaign-geo-opens-for-country#4</a>.\n", "summary" : "<p> Convenience function for  campaign-geo-opens-for-country#4 .</p>", "annotation_str" : " %an:sequential", "annotations" : [ { "prefix" : "an", "ns" : "http://zorba.io/annotations", "name" : "sequential", "value" : "" } ], "updating" : false, "parameters" : [ { "name" : "apikey", "type" : "xs:string", "occurrence" : null, "description" : "" }, { "name" : "cid", "type" : "xs:string", "occurrence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> the campaign id to pull bounces for (can be gathered using <a href=\"#campaigns-4\">campaigns()</a>)</div>" }, { "name" : "code", "type" : "xs:string", "occurrence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> An ISO3166 2 digit country code</div>" } ], "returns" : { "type" : "item()*", "description" : "Regions an array of regions within the provided country where opens occurred." }, "errors" : [  ] }, { "isDocumented" : true, "arity" : 4, "name" : "campaign-geo-opens-for-country", "qname" : "mailchimp:campaign-geo-opens-for-country", "signature" : "($endpoint-url as xs:string, $apikey as xs:string, $cid as xs:string, $code as xs:string) as item()*", "description" : " Retrieve the regions and number of opens tracked for a certain country. Email address are not returned.\n", "summary" : "<p> Retrieve the regions and number of opens tracked for a certain country.</p>", "annotation_str" : " %an:sequential", "annotations" : [ { "prefix" : "an", "ns" : "http://zorba.io/annotations", "name" : "sequential", "value" : "" } ], "updating" : false, "parameters" : [ { "name" : "endpoint-url", "type" : "xs:string", "occurrence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> Mailchimp endpoint URL, e.g. http://us1.api.mailchimp.com/1.3/</div>" }, { "name" : "apikey", "type" : "xs:string", "occurrence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> a valid API Key for your user account. Get by visiting <a href=\"http://admin.mailchimp.com/account/api\" target=\"_blank\">your API dashboard</a></div>" }, { "name" : "cid", "type" : "xs:string", "occurrence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> the campaign id to pull bounces for (can be gathered using <a href=\"#campaigns-4\">campaigns()</a>)</div>" }, { "name" : "code", "type" : "xs:string", "occurrence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> An ISO3166 2 digit country code</div>" } ], "returns" : { "type" : "item()*", "description" : "Regions an array of regions within the provided country where opens occurred." }, "errors" : [  ] }, { "isDocumented" : true, "arity" : 2, "name" : "campaign-geo-opens", "qname" : "mailchimp:campaign-geo-opens", "signature" : "($apikey as xs:string, $cid as xs:string) as item()*", "description" : " Convenience function for <a xmlns:xqdoc=\"http://www.xqdoc.org/1.0\" href=\"#campaign-geo-opens-3\">campaign-geo-opens#3</a>.\n", "summary" : "<p> Convenience function for  campaign-geo-opens#3 .</p>", "annotation_str" : " %an:sequential", "annotations" : [ { "prefix" : "an", "ns" : "http://zorba.io/annotations", "name" : "sequential", "value" : "" } ], "updating" : false, "parameters" : [ { "name" : "apikey", "type" : "xs:string", "occurrence" : null, "description" : "" }, { "name" : "cid", "type" : "xs:string", "occurrence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> the campaign id to pull bounces for (can be gathered using <a href=\"#campaigns-4\">campaigns()</a>)</div>" } ], "returns" : { "type" : "item()*", "description" : "Countries an array of countries where opens occurred" }, "errors" : [  ] }, { "isDocumented" : true, "arity" : 3, "name" : "campaign-geo-opens", "qname" : "mailchimp:campaign-geo-opens", "signature" : "($endpoint-url as xs:string, $apikey as xs:string, $cid as xs:string) as item()*", "description" : " Retrieve the countries and number of opens tracked for each. Email address are not returned.\n", "summary" : "<p> Retrieve the countries and number of opens tracked for each.</p>", "annotation_str" : " %an:sequential", "annotations" : [ { "prefix" : "an", "ns" : "http://zorba.io/annotations", "name" : "sequential", "value" : "" } ], "updating" : false, "parameters" : [ { "name" : "endpoint-url", "type" : "xs:string", "occurrence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> Mailchimp endpoint URL, e.g. http://us1.api.mailchimp.com/1.3/</div>" }, { "name" : "apikey", "type" : "xs:string", "occurrence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> a valid API Key for your user account. Get by visiting <a href=\"http://admin.mailchimp.com/account/api\" target=\"_blank\">your API dashboard</a></div>" }, { "name" : "cid", "type" : "xs:string", "occurrence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> the campaign id to pull bounces for (can be gathered using <a href=\"#campaigns-4\">campaigns()</a>)</div>" } ], "returns" : { "type" : "item()*", "description" : "Countries an array of countries where opens occurred" }, "errors" : [  ] }, { "isDocumented" : true, "arity" : 4, "name" : "campaign-hard-bounces", "qname" : "mailchimp:campaign-hard-bounces", "signature" : "($apikey as xs:string, $cid as xs:string, $start as xs:integer, $limit as xs:integer) as item()*", "description" : " Convenience function for <a xmlns:xqdoc=\"http://www.xqdoc.org/1.0\" href=\"#campaign-hard-bounces-5\">campaign-hard-bounces#5</a>.\n", "summary" : "<p> Convenience function for  campaign-hard-bounces#5 .</p>", "annotation_str" : " %an:sequential", "annotations" : [ { "prefix" : "an", "ns" : "http://zorba.io/annotations", "name" : "sequential", "value" : "" } ], "updating" : false, "parameters" : [ { "name" : "apikey", "type" : "xs:string", "occurrence" : null, "description" : "" }, { "name" : "cid", "type" : "xs:string", "occurrence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> the campaign id to pull bounces for (can be gathered using <a href=\"#campaigns-4\">campaigns()</a>)</div>" }, { "name" : "start", "type" : "xs:integer", "occurrence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> art optional for large data sets, the page number to start at - defaults to 1st page of data (page 0)</div>" }, { "name" : "limit", "type" : "xs:integer", "occurrence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> mit optional for large data sets, the number of results to return - defaults to 1000, upper limit set at 15000</div>" } ], "returns" : { "type" : "item()*", "description" : "array a total of all hard bounced emails and the specific emails for this page" }, "errors" : [  ] }, { "isDocumented" : true, "arity" : 5, "name" : "campaign-hard-bounces", "qname" : "mailchimp:campaign-hard-bounces", "signature" : "($endpoint-url as xs:string, $apikey as xs:string, $cid as xs:string, $start as xs:integer, $limit as xs:integer) as item()*", "description" : " <strong xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">DEPRECATED</strong> Get all email addresses with Hard Bounces for a given campaign the email address that bounced.\n", "summary" : "<p>  DEPRECATED  Get all email addresses with Hard Bounces for a given campaign the email address that bounced.</p>", "annotation_str" : " %an:sequential", "annotations" : [ { "prefix" : "an", "ns" : "http://zorba.io/annotations", "name" : "sequential", "value" : "" } ], "updating" : false, "parameters" : [ { "name" : "endpoint-url", "type" : "xs:string", "occurrence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> Mailchimp endpoint URL, e.g. http://us1.api.mailchimp.com/1.3/</div>" }, { "name" : "apikey", "type" : "xs:string", "occurrence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> a valid API Key for your user account. Get by visiting <a href=\"http://admin.mailchimp.com/account/api\" target=\"_blank\">your API dashboard</a></div>" }, { "name" : "cid", "type" : "xs:string", "occurrence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> the campaign id to pull bounces for (can be gathered using <a href=\"#campaigns-4\">campaigns()</a>)</div>" }, { "name" : "start", "type" : "xs:integer", "occurrence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> art optional for large data sets, the page number to start at - defaults to 1st page of data (page 0)</div>" }, { "name" : "limit", "type" : "xs:integer", "occurrence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> mit optional for large data sets, the number of results to return - defaults to 1000, upper limit set at 15000</div>" } ], "returns" : { "type" : "item()*", "description" : "array a total of all hard bounced emails and the specific emails for this page" }, "errors" : [  ] }, { "isDocumented" : true, "arity" : 5, "name" : "campaign-members", "qname" : "mailchimp:campaign-members", "signature" : "($apikey as xs:string, $cid as xs:string, $status as xs:string, $start as xs:integer, $limit as xs:integer) as item()*", "description" : " Convenience function for <a xmlns:xqdoc=\"http://www.xqdoc.org/1.0\" href=\"#campaign-members-6\">campaign-members#6</a>.\n", "summary" : "<p> Convenience function for  campaign-members#6 .</p>", "annotation_str" : " %an:sequential", "annotations" : [ { "prefix" : "an", "ns" : "http://zorba.io/annotations", "name" : "sequential", "value" : "" } ], "updating" : false, "parameters" : [ { "name" : "apikey", "type" : "xs:string", "occurrence" : null, "description" : "" }, { "name" : "cid", "type" : "xs:string", "occurrence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> the campaign id to pull members for (can be gathered using <a href=\"#campaigns-4\">campaigns()</a>)</div>" }, { "name" : "status", "type" : "xs:string", "occurrence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> optional the status to pull - one of 'sent', 'hard' (bounce), or 'soft' (bounce). By default, all records are returned</div>" }, { "name" : "start", "type" : "xs:integer", "occurrence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> art optional for large data sets, the page number to start at - defaults to 1st page of data (page 0)</div>" }, { "name" : "limit", "type" : "xs:integer", "occurrence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> mit optional for large data sets, the number of results to return - defaults to 1000, upper limit set at 15000</div>" } ], "returns" : { "type" : "item()*", "description" : "A total of all matching emails and the specific emails for this page" }, "errors" : [  ] }, { "isDocumented" : true, "arity" : 6, "name" : "campaign-members", "qname" : "mailchimp:campaign-members", "signature" : "($endpoint-url as xs:string, $apikey as xs:string, $cid as xs:string, $status as xs:string, $start as xs:integer, $limit as xs:integer) as item()*", "description" : " Get all email addresses the campaign was successfully sent to (ie, no bounces).\n", "summary" : "<p> Get all email addresses the campaign was successfully sent to (ie, no bounces).</p>", "annotation_str" : " %an:sequential", "annotations" : [ { "prefix" : "an", "ns" : "http://zorba.io/annotations", "name" : "sequential", "value" : "" } ], "updating" : false, "parameters" : [ { "name" : "endpoint-url", "type" : "xs:string", "occurrence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> Mailchimp endpoint URL, e.g. http://us1.api.mailchimp.com/1.3/</div>" }, { "name" : "apikey", "type" : "xs:string", "occurrence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> a valid API Key for your user account. Get by visiting <a href=\"http://admin.mailchimp.com/account/api\" target=\"_blank\">your API dashboard</a></div>" }, { "name" : "cid", "type" : "xs:string", "occurrence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> the campaign id to pull members for (can be gathered using <a href=\"#campaigns-4\">campaigns()</a>)</div>" }, { "name" : "status", "type" : "xs:string", "occurrence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> optional the status to pull - one of 'sent', 'hard' (bounce), or 'soft' (bounce). By default, all records are returned</div>" }, { "name" : "start", "type" : "xs:integer", "occurrence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> art optional for large data sets, the page number to start at - defaults to 1st page of data (page 0)</div>" }, { "name" : "limit", "type" : "xs:integer", "occurrence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> mit optional for large data sets, the number of results to return - defaults to 1000, upper limit set at 15000</div>" } ], "returns" : { "type" : "item()*", "description" : "A total of all matching emails and the specific emails for this page" }, "errors" : [  ] }, { "isDocumented" : true, "arity" : 4, "name" : "campaign-not-opened-AIM", "qname" : "mailchimp:campaign-not-opened-AIM", "signature" : "($apikey as xs:string, $cid as xs:string, $start as xs:integer, $limit as xs:integer) as item()*", "description" : " Convenience function for <a xmlns:xqdoc=\"http://www.xqdoc.org/1.0\" href=\"#campaign-not-opened-AIM-5\">campaign-not-opened-AIM#5</a>.\n", "summary" : "<p> Convenience function for  campaign-not-opened-AIM#5 .</p>", "annotation_str" : " %an:sequential", "annotations" : [ { "prefix" : "an", "ns" : "http://zorba.io/annotations", "name" : "sequential", "value" : "" } ], "updating" : false, "parameters" : [ { "name" : "apikey", "type" : "xs:string", "occurrence" : null, "description" : "" }, { "name" : "cid", "type" : "xs:string", "occurrence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> the campaign id to get no opens for (can be gathered using <a href=\"#campaigns-4\">campaigns()</a>)</div>" }, { "name" : "start", "type" : "xs:integer", "occurrence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> art optional for large data sets, the page number to start at - defaults to 1st page of data (page 0)</div>" }, { "name" : "limit", "type" : "xs:integer", "occurrence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> mit optional for large data sets, the number of results to return - defaults to 1000, upper limit set at 15000</div>" } ], "returns" : { "type" : "item()*", "description" : "Array containing the total records matched and the specific records for this page" }, "errors" : [  ] }, { "isDocumented" : true, "arity" : 5, "name" : "campaign-not-opened-AIM", "qname" : "mailchimp:campaign-not-opened-AIM", "signature" : "($endpoint-url as xs:string, $apikey as xs:string, $cid as xs:string, $start as xs:integer, $limit as xs:integer) as item()*", "description" : " Retrieve the list of email addresses that did not open a given campaign string email Email address that opened the campaign.\n", "summary" : "<p> Retrieve the list of email addresses that did not open a given campaign string email Email address that opened the campaign.</p>", "annotation_str" : " %an:sequential", "annotations" : [ { "prefix" : "an", "ns" : "http://zorba.io/annotations", "name" : "sequential", "value" : "" } ], "updating" : false, "parameters" : [ { "name" : "endpoint-url", "type" : "xs:string", "occurrence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> Mailchimp endpoint URL, e.g. http://us1.api.mailchimp.com/1.3/</div>" }, { "name" : "apikey", "type" : "xs:string", "occurrence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> a valid API Key for your user account. Get by visiting <a href=\"http://admin.mailchimp.com/account/api\" target=\"_blank\">your API dashboard</a></div>" }, { "name" : "cid", "type" : "xs:string", "occurrence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> the campaign id to get no opens for (can be gathered using <a href=\"#campaigns-4\">campaigns()</a>)</div>" }, { "name" : "start", "type" : "xs:integer", "occurrence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> art optional for large data sets, the page number to start at - defaults to 1st page of data (page 0)</div>" }, { "name" : "limit", "type" : "xs:integer", "occurrence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> mit optional for large data sets, the number of results to return - defaults to 1000, upper limit set at 15000</div>" } ], "returns" : { "type" : "item()*", "description" : "array array containing the total records matched and the specific records for this page" }, "errors" : [  ] }, { "isDocumented" : true, "arity" : 4, "name" : "campaign-opened-AIM", "qname" : "mailchimp:campaign-opened-AIM", "signature" : "($apikey as xs:string, $cid as xs:string, $start as xs:integer, $limit as xs:integer) as item()*", "description" : " Convenience function for <a xmlns:xqdoc=\"http://www.xqdoc.org/1.0\" href=\"#campaign-opened-AIM-5\">campaign-openedAIM#5</a>.\n", "summary" : "<p> Convenience function for  campaign-openedAIM#5 .</p>", "annotation_str" : " %an:sequential", "annotations" : [ { "prefix" : "an", "ns" : "http://zorba.io/annotations", "name" : "sequential", "value" : "" } ], "updating" : false, "parameters" : [ { "name" : "apikey", "type" : "xs:string", "occurrence" : null, "description" : "" }, { "name" : "cid", "type" : "xs:string", "occurrence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> the campaign id to get opens for (can be gathered using <a href=\"#campaigns-4\">campaigns()</a>)</div>" }, { "name" : "start", "type" : "xs:integer", "occurrence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> art optional for large data sets, the page number to start at - defaults to 1st page of data (page 0)</div>" }, { "name" : "limit", "type" : "xs:integer", "occurrence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> mit optional for large data sets, the number of results to return - defaults to 1000, upper limit set at 15000</div>" } ], "returns" : { "type" : "item()*", "description" : "Array containing the total records matched and the specific records for this page" }, "errors" : [  ] }, { "isDocumented" : true, "arity" : 5, "name" : "campaign-opened-AIM", "qname" : "mailchimp:campaign-opened-AIM", "signature" : "($endpoint-url as xs:string, $apikey as xs:string, $cid as xs:string, $start as xs:integer, $limit as xs:integer) as item()*", "description" : " Retrieve the list of email addresses that opened a given campaign with how many times they opened.\n", "summary" : "<p> Retrieve the list of email addresses that opened a given campaign with how many times they opened.</p>", "annotation_str" : " %an:sequential", "annotations" : [ { "prefix" : "an", "ns" : "http://zorba.io/annotations", "name" : "sequential", "value" : "" } ], "updating" : false, "parameters" : [ { "name" : "endpoint-url", "type" : "xs:string", "occurrence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> Mailchimp endpoint URL, e.g. http://us1.api.mailchimp.com/1.3/</div>" }, { "name" : "apikey", "type" : "xs:string", "occurrence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> a valid API Key for your user account. Get by visiting <a href=\"http://admin.mailchimp.com/account/api\" target=\"_blank\">your API dashboard</a></div>" }, { "name" : "cid", "type" : "xs:string", "occurrence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> the campaign id to get opens for (can be gathered using <a href=\"#campaigns-4\">campaigns()</a>)</div>" }, { "name" : "start", "type" : "xs:integer", "occurrence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> art optional for large data sets, the page number to start at - defaults to 1st page of data (page 0)</div>" }, { "name" : "limit", "type" : "xs:integer", "occurrence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> mit optional for large data sets, the number of results to return - defaults to 1000, upper limit set at 15000</div>" } ], "returns" : { "type" : "item()*", "description" : "Array containing the total records matched and the specific records for this page" }, "errors" : [  ] }, { "isDocumented" : true, "arity" : 2, "name" : "campaign-pause", "qname" : "mailchimp:campaign-pause", "signature" : "($apikey as xs:string, $cid as xs:string) as item()*", "description" : " Convenience function for <a xmlns:xqdoc=\"http://www.xqdoc.org/1.0\" href=\"#campaign-pause-3\">campaign-pause#3</a>.\n", "summary" : "<p> Convenience function for  campaign-pause#3 .</p>", "annotation_str" : " %an:sequential", "annotations" : [ { "prefix" : "an", "ns" : "http://zorba.io/annotations", "name" : "sequential", "value" : "" } ], "updating" : false, "parameters" : [ { "name" : "apikey", "type" : "xs:string", "occurrence" : null, "description" : "" }, { "name" : "cid", "type" : "xs:string", "occurrence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> the id of the campaign to pause</div>" } ], "returns" : { "type" : "item()*", "description" : "True on success" }, "errors" : [  ] }, { "isDocumented" : true, "arity" : 3, "name" : "campaign-pause", "qname" : "mailchimp:campaign-pause", "signature" : "($endpoint-url as xs:string, $apikey as xs:string, $cid as xs:string) as item()*", "description" : " Pause an AutoResponder or RSS campaign from sending.\n", "summary" : "<p> Pause an AutoResponder or RSS campaign from sending.</p>", "annotation_str" : " %an:sequential", "annotations" : [ { "prefix" : "an", "ns" : "http://zorba.io/annotations", "name" : "sequential", "value" : "" } ], "updating" : false, "parameters" : [ { "name" : "endpoint-url", "type" : "xs:string", "occurrence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> Mailchimp endpoint URL, e.g. http://us1.api.mailchimp.com/1.3/</div>" }, { "name" : "apikey", "type" : "xs:string", "occurrence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> a valid API Key for your user account. Get by visiting <a href=\"http://admin.mailchimp.com/account/api\" target=\"_blank\">your API dashboard</a></div>" }, { "name" : "cid", "type" : "xs:string", "occurrence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> the id of the campaign to pause</div>" } ], "returns" : { "type" : "item()*", "description" : "True on success" }, "errors" : [  ] }, { "isDocumented" : true, "arity" : 2, "name" : "campaign-replicate", "qname" : "mailchimp:campaign-replicate", "signature" : "($apikey as xs:string, $cid as xs:string) as item()*", "description" : " Convenience function for <a xmlns:xqdoc=\"http://www.xqdoc.org/1.0\" href=\"#campaign-replicate-3\">campaign-replicate#3</a>.\n", "summary" : "<p> Convenience function for  campaign-replicate#3 .</p>", "annotation_str" : " %an:sequential", "annotations" : [ { "prefix" : "an", "ns" : "http://zorba.io/annotations", "name" : "sequential", "value" : "" } ], "updating" : false, "parameters" : [ { "name" : "apikey", "type" : "xs:string", "occurrence" : null, "description" : "" }, { "name" : "cid", "type" : "xs:string", "occurrence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> the Campaign Id to replicate</div>" } ], "returns" : { "type" : "item()*", "description" : "The id of the replicated Campaign created, otherwise an error will be thrown" }, "errors" : [  ] }, { "isDocumented" : true, "arity" : 3, "name" : "campaign-replicate", "qname" : "mailchimp:campaign-replicate", "signature" : "($endpoint-url as xs:string, $apikey as xs:string, $cid as xs:string) as item()*", "description" : " Replicate a campaign.\n", "summary" : "<p> Replicate a campaign.</p>", "annotation_str" : " %an:sequential", "annotations" : [ { "prefix" : "an", "ns" : "http://zorba.io/annotations", "name" : "sequential", "value" : "" } ], "updating" : false, "parameters" : [ { "name" : "endpoint-url", "type" : "xs:string", "occurrence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> Mailchimp endpoint URL, e.g. http://us1.api.mailchimp.com/1.3/</div>" }, { "name" : "apikey", "type" : "xs:string", "occurrence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> a valid API Key for your user account. Get by visiting <a href=\"http://admin.mailchimp.com/account/api\" target=\"_blank\">your API dashboard</a></div>" }, { "name" : "cid", "type" : "xs:string", "occurrence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> the Campaign Id to replicate</div>" } ], "returns" : { "type" : "item()*", "description" : "The id of the replicated Campaign created, otherwise an error will be thrown" }, "errors" : [  ] }, { "isDocumented" : true, "arity" : 2, "name" : "campaign-resume", "qname" : "mailchimp:campaign-resume", "signature" : "($apikey as xs:string, $cid as xs:string) as item()*", "description" : " Convenience function for <a xmlns:xqdoc=\"http://www.xqdoc.org/1.0\" href=\"#campaign-resume-3\">campaign-resume#3</a>.\n", "summary" : "<p> Convenience function for  campaign-resume#3 .</p>", "annotation_str" : " %an:sequential", "annotations" : [ { "prefix" : "an", "ns" : "http://zorba.io/annotations", "name" : "sequential", "value" : "" } ], "updating" : false, "parameters" : [ { "name" : "apikey", "type" : "xs:string", "occurrence" : null, "description" : "" }, { "name" : "cid", "type" : "xs:string", "occurrence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> the id of the campaign to pause</div>" } ], "returns" : { "type" : "item()*", "description" : "True on success" }, "errors" : [  ] }, { "isDocumented" : true, "arity" : 3, "name" : "campaign-resume", "qname" : "mailchimp:campaign-resume", "signature" : "($endpoint-url as xs:string, $apikey as xs:string, $cid as xs:string) as item()*", "description" : " Resume sending an AutoResponder or RSS campaign.\n", "summary" : "<p> Resume sending an AutoResponder or RSS campaign.</p>", "annotation_str" : " %an:sequential", "annotations" : [ { "prefix" : "an", "ns" : "http://zorba.io/annotations", "name" : "sequential", "value" : "" } ], "updating" : false, "parameters" : [ { "name" : "endpoint-url", "type" : "xs:string", "occurrence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> Mailchimp endpoint URL, e.g. http://us1.api.mailchimp.com/1.3/</div>" }, { "name" : "apikey", "type" : "xs:string", "occurrence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> a valid API Key for your user account. Get by visiting <a href=\"http://admin.mailchimp.com/account/api\" target=\"_blank\">your API dashboard</a></div>" }, { "name" : "cid", "type" : "xs:string", "occurrence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> the id of the campaign to pause</div>" } ], "returns" : { "type" : "item()*", "description" : "True on success" }, "errors" : [  ] }, { "isDocumented" : true, "arity" : 4, "name" : "campaign-schedule", "qname" : "mailchimp:campaign-schedule", "signature" : "($apikey as xs:string, $cid as xs:string, $schedule_time as xs:string, $schedule_time_b as xs:string) as item()*", "description" : " Convenience function for <a xmlns:xqdoc=\"http://www.xqdoc.org/1.0\" href=\"#campaign-schedule-5\">campaign-schedule#5</a>.\n", "summary" : "<p> Convenience function for  campaign-schedule#5 .</p>", "annotation_str" : " %an:sequential", "annotations" : [ { "prefix" : "an", "ns" : "http://zorba.io/annotations", "name" : "sequential", "value" : "" } ], "updating" : false, "parameters" : [ { "name" : "apikey", "type" : "xs:string", "occurrence" : null, "description" : "" }, { "name" : "cid", "type" : "xs:string", "occurrence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> the id of the campaign to schedule</div>" }, { "name" : "schedule_time", "type" : "xs:string", "occurrence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> the time to schedule the campaign. For A/B Split \"schedule\" campaigns, the time for Group A - in YYYY-MM-DD HH:II:SS format in <strong>GMT</strong></div>" }, { "name" : "schedule_time_b", "type" : "xs:string", "occurrence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> optional -the time to schedule Group B of an A/B Split \"schedule\" campaign - in YYYY-MM-DD HH:II:SS format in <strong>GMT</strong></div>" } ], "returns" : { "type" : "item()*", "description" : "boolean True on success" }, "errors" : [  ] }, { "isDocumented" : true, "arity" : 5, "name" : "campaign-schedule", "qname" : "mailchimp:campaign-schedule", "signature" : "($endpoint-url as xs:string, $apikey as xs:string, $cid as xs:string, $schedule_time as xs:string, $schedule_time_b as xs:string) as item()*", "description" : " Schedule a campaign to be sent in the future.\n", "summary" : "<p> Schedule a campaign to be sent in the future.</p>", "annotation_str" : " %an:sequential", "annotations" : [ { "prefix" : "an", "ns" : "http://zorba.io/annotations", "name" : "sequential", "value" : "" } ], "updating" : false, "parameters" : [ { "name" : "endpoint-url", "type" : "xs:string", "occurrence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> Mailchimp endpoint URL, e.g. http://us1.api.mailchimp.com/1.3/</div>" }, { "name" : "apikey", "type" : "xs:string", "occurrence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> a valid API Key for your user account. Get by visiting <a href=\"http://admin.mailchimp.com/account/api\" target=\"_blank\">your API dashboard</a></div>" }, { "name" : "cid", "type" : "xs:string", "occurrence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> the id of the campaign to schedule</div>" }, { "name" : "schedule_time", "type" : "xs:string", "occurrence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> the time to schedule the campaign. For A/B Split \"schedule\" campaigns, the time for Group A - in YYYY-MM-DD HH:II:SS format in <strong>GMT</strong></div>" }, { "name" : "schedule_time_b", "type" : "xs:string", "occurrence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> optional -the time to schedule Group B of an A/B Split \"schedule\" campaign - in YYYY-MM-DD HH:II:SS format in <strong>GMT</strong></div>" } ], "returns" : { "type" : "item()*", "description" : "boolean True on success" }, "errors" : [  ] }, { "isDocumented" : true, "arity" : 3, "name" : "campaign-segment-test", "qname" : "mailchimp:campaign-segment-test", "signature" : "($apikey as xs:string, $list_id as xs:string, $options as element(array)) as item()*", "description" : " Convenience function for <a xmlns:xqdoc=\"http://www.xqdoc.org/1.0\" href=\"#campaign-segment-test-4\">campaign-segment-test#4</a>.\n", "summary" : "<p> Convenience function for  campaign-segment-test#4 .</p>", "annotation_str" : " %an:sequential", "annotations" : [ { "prefix" : "an", "ns" : "http://zorba.io/annotations", "name" : "sequential", "value" : "" } ], "updating" : false, "parameters" : [ { "name" : "apikey", "type" : "xs:string", "occurrence" : null, "description" : "" }, { "name" : "list_id", "type" : "xs:string", "occurrence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> the list to test segmentation on - get lists using lists()</div>" }, { "name" : "options", "type" : "element(array)", "occurrence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> with 2 keys. See <a href=\"http://apidocs.mailchimp.com/rtfm/campaignsegmenttest.func.php\">Mailchimp API documentation</a> for more information about the parameter structure.</div>" } ], "returns" : { "type" : "item()*", "description" : "The total number of subscribers matching your segmentation options" }, "errors" : [  ] }, { "isDocumented" : true, "arity" : 4, "name" : "campaign-segment-test", "qname" : "mailchimp:campaign-segment-test", "signature" : "($endpoint-url as xs:string, $apikey as xs:string, $list_id as xs:string, $options as element(array)) as item()*", "description" : " Allows one to test their segmentation rules before creating a campaign using them.\n", "summary" : "<p> Allows one to test their segmentation rules before creating a campaign using them.</p>", "annotation_str" : " %an:sequential", "annotations" : [ { "prefix" : "an", "ns" : "http://zorba.io/annotations", "name" : "sequential", "value" : "" } ], "updating" : false, "parameters" : [ { "name" : "endpoint-url", "type" : "xs:string", "occurrence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> Mailchimp endpoint URL, e.g. http://us1.api.mailchimp.com/1.3/</div>" }, { "name" : "apikey", "type" : "xs:string", "occurrence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> a valid API Key for your user account. Get by visiting <a href=\"http://admin.mailchimp.com/account/api\" target=\"_blank\">your API dashboard</a></div>" }, { "name" : "list_id", "type" : "xs:string", "occurrence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> the list to test segmentation on - get lists using <a href=\"#lists-4\">lists()</a></div>" }, { "name" : "options", "type" : "element(array)", "occurrence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> with 2 keys. See <a href=\"http://apidocs.mailchimp.com/rtfm/campaignsegmenttest.func.php\">Mailchimp API documentation</a> for more information about the parameter structure.</div>" } ], "returns" : { "type" : "item()*", "description" : "The total number of subscribers matching your segmentation options" }, "errors" : [  ] }, { "isDocumented" : true, "arity" : 2, "name" : "campaign-send-now", "qname" : "mailchimp:campaign-send-now", "signature" : "($apikey as xs:string, $cid as xs:string) as item()*", "description" : " Convenience function for <a xmlns:xqdoc=\"http://www.xqdoc.org/1.0\" href=\"#campaign-send-now-3\">campaign-send-now#3</a>.\n", "summary" : "<p> Convenience function for  campaign-send-now#3 .</p>", "annotation_str" : " %an:sequential", "annotations" : [ { "prefix" : "an", "ns" : "http://zorba.io/annotations", "name" : "sequential", "value" : "" } ], "updating" : false, "parameters" : [ { "name" : "apikey", "type" : "xs:string", "occurrence" : null, "description" : "" }, { "name" : "cid", "type" : "xs:string", "occurrence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> the id of the campaign to send</div>" } ], "returns" : { "type" : "item()*", "description" : "True on success" }, "errors" : [  ] }, { "isDocumented" : true, "arity" : 3, "name" : "campaign-send-now", "qname" : "mailchimp:campaign-send-now", "signature" : "($endpoint-url as xs:string, $apikey as xs:string, $cid as xs:string) as item()*", "description" : " Send a given campaign immediately. For RSS campaigns, this will \"start\" them.\n", "summary" : "<p> Send a given campaign immediately.</p>", "annotation_str" : " %an:sequential", "annotations" : [ { "prefix" : "an", "ns" : "http://zorba.io/annotations", "name" : "sequential", "value" : "" } ], "updating" : false, "parameters" : [ { "name" : "endpoint-url", "type" : "xs:string", "occurrence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> Mailchimp endpoint URL, e.g. http://us1.api.mailchimp.com/1.3/</div>" }, { "name" : "apikey", "type" : "xs:string", "occurrence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> a valid API Key for your user account. Get by visiting <a href=\"http://admin.mailchimp.com/account/api\" target=\"_blank\">your API dashboard</a></div>" }, { "name" : "cid", "type" : "xs:string", "occurrence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> the id of the campaign to send</div>" } ], "returns" : { "type" : "item()*", "description" : "True on success" }, "errors" : [  ] }, { "isDocumented" : true, "arity" : 4, "name" : "campaign-send-test", "qname" : "mailchimp:campaign-send-test", "signature" : "($apikey as xs:string, $cid as xs:string, $test_emails as element(array), $send_type as xs:string) as item()*", "description" : " Convenience function for <a xmlns:xqdoc=\"http://www.xqdoc.org/1.0\" href=\"#campaign-send-test-5\">campaign-send-test#5</a>.\n", "summary" : "<p> Convenience function for  campaign-send-test#5 .</p>", "annotation_str" : " %an:sequential", "annotations" : [ { "prefix" : "an", "ns" : "http://zorba.io/annotations", "name" : "sequential", "value" : "" } ], "updating" : false, "parameters" : [ { "name" : "apikey", "type" : "xs:string", "occurrence" : null, "description" : "" }, { "name" : "cid", "type" : "xs:string", "occurrence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> the id of the campaign to test</div>" }, { "name" : "test_emails", "type" : "element(array)", "occurrence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> an array of email address to receive the test message</div>" }, { "name" : "send_type", "type" : "xs:string", "occurrence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> optional by default (null) both formats are sent - \"html\" or \"text\" send just that format</div>" } ], "returns" : { "type" : "item()*", "description" : "True on success" }, "errors" : [  ] }, { "isDocumented" : true, "arity" : 5, "name" : "campaign-send-test", "qname" : "mailchimp:campaign-send-test", "signature" : "($endpoint-url as xs:string, $apikey as xs:string, $cid as xs:string, $test_emails as element(array), $send_type as xs:string) as item()*", "description" : " Send a test of this campaign to the provided email address.\n", "summary" : "<p> Send a test of this campaign to the provided email address.</p>", "annotation_str" : " %an:sequential", "annotations" : [ { "prefix" : "an", "ns" : "http://zorba.io/annotations", "name" : "sequential", "value" : "" } ], "updating" : false, "parameters" : [ { "name" : "endpoint-url", "type" : "xs:string", "occurrence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> Mailchimp endpoint URL, e.g. http://us1.api.mailchimp.com/1.3/</div>" }, { "name" : "apikey", "type" : "xs:string", "occurrence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> a valid API Key for your user account. Get by visiting <a href=\"http://admin.mailchimp.com/account/api\" target=\"_blank\">your API dashboard</a></div>" }, { "name" : "cid", "type" : "xs:string", "occurrence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> the id of the campaign to test</div>" }, { "name" : "test_emails", "type" : "element(array)", "occurrence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> an array of email address to receive the test message</div>" }, { "name" : "send_type", "type" : "xs:string", "occurrence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> optional by default (null) both formats are sent - \"html\" or \"text\" send just that format</div>" } ], "returns" : { "type" : "item()*", "description" : "True on success" }, "errors" : [  ] }, { "isDocumented" : true, "arity" : 3, "name" : "campaign-share-report", "qname" : "mailchimp:campaign-share-report", "signature" : "($apikey as xs:string, $cid as xs:string, $opts as element(array)) as item()*", "description" : " Convenience function for <a xmlns:xqdoc=\"http://www.xqdoc.org/1.0\" href=\"#campaign-share-report-4\">campaign-share-report#4</a>.\n", "summary" : "<p> Convenience function for  campaign-share-report#4 .</p>", "annotation_str" : " %an:sequential", "annotations" : [ { "prefix" : "an", "ns" : "http://zorba.io/annotations", "name" : "sequential", "value" : "" } ], "updating" : false, "parameters" : [ { "name" : "apikey", "type" : "xs:string", "occurrence" : null, "description" : "" }, { "name" : "cid", "type" : "xs:string", "occurrence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> the campaign id to share a report for (can be gathered using <a href=\"#campaigns-4\">campaigns()</a>)</div>" }, { "name" : "opts", "type" : "element(array)", "occurrence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> s optional various parameters which can be used to configure the shared report</div>" } ], "returns" : { "type" : "item()*", "description" : "Struct containing details for the shared report" }, "errors" : [  ] }, { "isDocumented" : true, "arity" : 4, "name" : "campaign-share-report", "qname" : "mailchimp:campaign-share-report", "signature" : "($endpoint-url as xs:string, $apikey as xs:string, $cid as xs:string, $opts as element(array)) as item()*", "description" : " Get the URL to a customized <a xmlns:xqdoc=\"http://www.xqdoc.org/1.0\" href=\"http://eepurl.com/gKmL\" target=\"_blank\">VIP Report</a> for the specified campaign and optionally send an email to someone with links to it. Note subsequent calls will overwrite anything already set for the same campign (eg, the password).\n", "summary" : "<p> Get the URL to a customized  VIP Report  for the specified campaign and optionally send an email to someone with links to it.</p>", "annotation_str" : " %an:sequential", "annotations" : [ { "prefix" : "an", "ns" : "http://zorba.io/annotations", "name" : "sequential", "value" : "" } ], "updating" : false, "parameters" : [ { "name" : "endpoint-url", "type" : "xs:string", "occurrence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> Mailchimp endpoint URL, e.g. http://us1.api.mailchimp.com/1.3/</div>" }, { "name" : "apikey", "type" : "xs:string", "occurrence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> a valid API Key for your user account. Get by visiting <a href=\"http://admin.mailchimp.com/account/api\" target=\"_blank\">your API dashboard</a></div>" }, { "name" : "cid", "type" : "xs:string", "occurrence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> the campaign id to share a report for (can be gathered using <a href=\"#campaigns-4\">campaigns()</a>)</div>" }, { "name" : "opts", "type" : "element(array)", "occurrence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> s optional various parameters which can be used to configure the shared report</div>" } ], "returns" : { "type" : "item()*", "description" : "Struct containing details for the shared report" }, "errors" : [  ] }, { "isDocumented" : true, "arity" : 4, "name" : "campaign-soft-bounces", "qname" : "mailchimp:campaign-soft-bounces", "signature" : "($apikey as xs:string, $cid as xs:string, $start as xs:integer, $limit as xs:integer) as item()*", "description" : " Convenience function for <a xmlns:xqdoc=\"http://www.xqdoc.org/1.0\" href=\"#campaign-soft-bounces-5\">campaign-soft-bounces#5</a>.\n", "summary" : "<p> Convenience function for  campaign-soft-bounces#5 .</p>", "annotation_str" : " %an:sequential", "annotations" : [ { "prefix" : "an", "ns" : "http://zorba.io/annotations", "name" : "sequential", "value" : "" } ], "updating" : false, "parameters" : [ { "name" : "apikey", "type" : "xs:string", "occurrence" : null, "description" : "" }, { "name" : "cid", "type" : "xs:string", "occurrence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> the campaign id to pull bounces for (can be gathered using <a href=\"#campaigns-4\">campaigns()</a>)</div>" }, { "name" : "start", "type" : "xs:integer", "occurrence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> art optional for large data sets, the page number to start at - defaults to 1st page of data (page 0)</div>" }, { "name" : "limit", "type" : "xs:integer", "occurrence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> mit optional for large data sets, the number of results to return - defaults to 1000, upper limit set at 15000</div>" } ], "returns" : { "type" : "item()*", "description" : "A total of all soft bounced emails and the specific emails for this page" }, "errors" : [  ] }, { "isDocumented" : true, "arity" : 5, "name" : "campaign-soft-bounces", "qname" : "mailchimp:campaign-soft-bounces", "signature" : "($endpoint-url as xs:string, $apikey as xs:string, $cid as xs:string, $start as xs:integer, $limit as xs:integer) as item()*", "description" : " <strong xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">DEPRECATED</strong> Get all email addresses with Soft Bounces for a given campaign the email address that bounced.\n", "summary" : "<p>  DEPRECATED  Get all email addresses with Soft Bounces for a given campaign the email address that bounced.</p>", "annotation_str" : " %an:sequential", "annotations" : [ { "prefix" : "an", "ns" : "http://zorba.io/annotations", "name" : "sequential", "value" : "" } ], "updating" : false, "parameters" : [ { "name" : "endpoint-url", "type" : "xs:string", "occurrence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> Mailchimp endpoint URL, e.g. http://us1.api.mailchimp.com/1.3/</div>" }, { "name" : "apikey", "type" : "xs:string", "occurrence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> a valid API Key for your user account. Get by visiting <a href=\"http://admin.mailchimp.com/account/api\" target=\"_blank\">your API dashboard</a></div>" }, { "name" : "cid", "type" : "xs:string", "occurrence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> the campaign id to pull bounces for (can be gathered using <a href=\"#campaigns-4\">campaigns()</a>)</div>" }, { "name" : "start", "type" : "xs:integer", "occurrence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> art optional for large data sets, the page number to start at - defaults to 1st page of data (page 0)</div>" }, { "name" : "limit", "type" : "xs:integer", "occurrence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> mit optional for large data sets, the number of results to return - defaults to 1000, upper limit set at 15000</div>" } ], "returns" : { "type" : "item()*", "description" : "A total of all soft bounced emails and the specific emails for this page" }, "errors" : [  ] }, { "isDocumented" : true, "arity" : 2, "name" : "campaign-stats", "qname" : "mailchimp:campaign-stats", "signature" : "($apikey as xs:string, $cid as xs:string) as item()*", "description" : " Convenience function for <a xmlns:xqdoc=\"http://www.xqdoc.org/1.0\" href=\"#campaign-stats-3\">campaign-stats#3</a>.\n", "summary" : "<p> Convenience function for  campaign-stats#3 .</p>", "annotation_str" : " %an:sequential", "annotations" : [ { "prefix" : "an", "ns" : "http://zorba.io/annotations", "name" : "sequential", "value" : "" } ], "updating" : false, "parameters" : [ { "name" : "apikey", "type" : "xs:string", "occurrence" : null, "description" : "" }, { "name" : "cid", "type" : "xs:string", "occurrence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> the campaign id to pull stats for (can be gathered using <a href=\"#campaigns-4\">campaigns()</a>)</div>" } ], "returns" : { "type" : "item()*", "description" : "array struct of the statistics for this campaign" }, "errors" : [  ] }, { "isDocumented" : true, "arity" : 3, "name" : "campaign-stats", "qname" : "mailchimp:campaign-stats", "signature" : "($endpoint-url as xs:string, $apikey as xs:string, $cid as xs:string) as item()*", "description" : " Given a list and a campaign, get all the relevant campaign statistics (opens, bounces, clicks, etc.)\n", "summary" : "<p> Given a list and a campaign, get all the relevant campaign statistics (opens, bounces, clicks, etc.</p>", "annotation_str" : " %an:sequential", "annotations" : [ { "prefix" : "an", "ns" : "http://zorba.io/annotations", "name" : "sequential", "value" : "" } ], "updating" : false, "parameters" : [ { "name" : "endpoint-url", "type" : "xs:string", "occurrence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> Mailchimp endpoint URL, e.g. http://us1.api.mailchimp.com/1.3/</div>" }, { "name" : "apikey", "type" : "xs:string", "occurrence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> a valid API Key for your user account. Get by visiting <a href=\"http://admin.mailchimp.com/account/api\" target=\"_blank\">your API dashboard</a></div>" }, { "name" : "cid", "type" : "xs:string", "occurrence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> the campaign id to pull stats for (can be gathered using <a href=\"#campaigns-4\">campaigns()</a>)</div>" } ], "returns" : { "type" : "item()*", "description" : "array struct of the statistics for this campaign" }, "errors" : [  ] }, { "isDocumented" : true, "arity" : 2, "name" : "campaign-template-content", "qname" : "mailchimp:campaign-template-content", "signature" : "($apikey as xs:string, $cid as xs:string) as item()*", "description" : " Convenience function for <a xmlns:xqdoc=\"http://www.xqdoc.org/1.0\" href=\"#campaign-template-content-3\">campaign-template-content#3</a>.\n", "summary" : "<p> Convenience function for  campaign-template-content#3 .</p>", "annotation_str" : " %an:sequential", "annotations" : [ { "prefix" : "an", "ns" : "http://zorba.io/annotations", "name" : "sequential", "value" : "" } ], "updating" : false, "parameters" : [ { "name" : "apikey", "type" : "xs:string", "occurrence" : null, "description" : "" }, { "name" : "cid", "type" : "xs:string", "occurrence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> the campaign id to get content for (can be gathered using <a href=\"#campaigns-4\">campaigns()</a>)</div>" } ], "returns" : { "type" : "item()*", "description" : "Array containing all content section for the campaign -" }, "errors" : [  ] }, { "isDocumented" : true, "arity" : 3, "name" : "campaign-template-content", "qname" : "mailchimp:campaign-template-content", "signature" : "($endpoint-url as xs:string, $apikey as xs:string, $cid as xs:string) as item()*", "description" : " Get the HTML template content sections for a campaign. Note that this <strong xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">will</strong> return very jagged, non-standard results based on the template a campaign is using. You only want to use this if you want to allow editing template sections in your applicaton.\n", "summary" : "<p> Get the HTML template content sections for a campaign.</p>", "annotation_str" : " %an:sequential", "annotations" : [ { "prefix" : "an", "ns" : "http://zorba.io/annotations", "name" : "sequential", "value" : "" } ], "updating" : false, "parameters" : [ { "name" : "endpoint-url", "type" : "xs:string", "occurrence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> Mailchimp endpoint URL, e.g. http://us1.api.mailchimp.com/1.3/</div>" }, { "name" : "apikey", "type" : "xs:string", "occurrence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> a valid API Key for your user account. Get by visiting <a href=\"http://admin.mailchimp.com/account/api\" target=\"_blank\">your API dashboard</a></div>" }, { "name" : "cid", "type" : "xs:string", "occurrence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> the campaign id to get content for (can be gathered using <a href=\"#campaigns-4\">campaigns()</a>)</div>" } ], "returns" : { "type" : "item()*", "description" : "Array containing all content section for the campaign -" }, "errors" : [  ] }, { "isDocumented" : true, "arity" : 2, "name" : "campaign-unschedule", "qname" : "mailchimp:campaign-unschedule", "signature" : "($apikey as xs:string, $cid as xs:string) as item()*", "description" : " Convenience function for <a xmlns:xqdoc=\"http://www.xqdoc.org/1.0\" href=\"#campaign-unschedule-3\">campaign-unschedule#3</a>.\n", "summary" : "<p> Convenience function for  campaign-unschedule#3 .</p>", "annotation_str" : " %an:sequential", "annotations" : [ { "prefix" : "an", "ns" : "http://zorba.io/annotations", "name" : "sequential", "value" : "" } ], "updating" : false, "parameters" : [ { "name" : "apikey", "type" : "xs:string", "occurrence" : null, "description" : "" }, { "name" : "cid", "type" : "xs:string", "occurrence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> the id of the campaign to unschedule</div>" } ], "returns" : { "type" : "item()*", "description" : "True on success" }, "errors" : [  ] }, { "isDocumented" : true, "arity" : 3, "name" : "campaign-unschedule", "qname" : "mailchimp:campaign-unschedule", "signature" : "($endpoint-url as xs:string, $apikey as xs:string, $cid as xs:string) as item()*", "description" : " Unschedule a campaign that is scheduled to be sent in the future.\n", "summary" : "<p> Unschedule a campaign that is scheduled to be sent in the future.</p>", "annotation_str" : " %an:sequential", "annotations" : [ { "prefix" : "an", "ns" : "http://zorba.io/annotations", "name" : "sequential", "value" : "" } ], "updating" : false, "parameters" : [ { "name" : "endpoint-url", "type" : "xs:string", "occurrence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> Mailchimp endpoint URL, e.g. http://us1.api.mailchimp.com/1.3/</div>" }, { "name" : "apikey", "type" : "xs:string", "occurrence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> a valid API Key for your user account. Get by visiting <a href=\"http://admin.mailchimp.com/account/api\" target=\"_blank\">your API dashboard</a></div>" }, { "name" : "cid", "type" : "xs:string", "occurrence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> the id of the campaign to unschedule</div>" } ], "returns" : { "type" : "item()*", "description" : "True on success" }, "errors" : [  ] }, { "isDocumented" : true, "arity" : 4, "name" : "campaign-unsubscribes", "qname" : "mailchimp:campaign-unsubscribes", "signature" : "($apikey as xs:string, $cid as xs:string, $start as xs:integer, $limit as xs:integer) as item()*", "description" : " Convenience function for <a xmlns:xqdoc=\"http://www.xqdoc.org/1.0\" href=\"#campaign-unsubscribes-5\">campaign-unsubscribes#5</a>.\n", "summary" : "<p> Convenience function for  campaign-unsubscribes#5 .</p>", "annotation_str" : " %an:sequential", "annotations" : [ { "prefix" : "an", "ns" : "http://zorba.io/annotations", "name" : "sequential", "value" : "" } ], "updating" : false, "parameters" : [ { "name" : "apikey", "type" : "xs:string", "occurrence" : null, "description" : "" }, { "name" : "cid", "type" : "xs:string", "occurrence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> the campaign id to pull bounces for (can be gathered using <a href=\"#campaigns-4\">campaigns()</a>)</div>" }, { "name" : "start", "type" : "xs:integer", "occurrence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> art optional for large data sets, the page number to start at - defaults to 1st page of data (page 0)</div>" }, { "name" : "limit", "type" : "xs:integer", "occurrence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> mit optional for large data sets, the number of results to return - defaults to 1000, upper limit set at 15000</div>" } ], "returns" : { "type" : "item()*", "description" : "array email addresses that unsubscribed from this campaign along with reasons, if given array a total of all unsubscribed emails and the specific emails for this page" }, "errors" : [  ] }, { "isDocumented" : true, "arity" : 5, "name" : "campaign-unsubscribes", "qname" : "mailchimp:campaign-unsubscribes", "signature" : "($endpoint-url as xs:string, $apikey as xs:string, $cid as xs:string, $start as xs:integer, $limit as xs:integer) as item()*", "description" : " Get all unsubscribed email addresses for a given campaign.\n", "summary" : "<p> Get all unsubscribed email addresses for a given campaign.</p>", "annotation_str" : " %an:sequential", "annotations" : [ { "prefix" : "an", "ns" : "http://zorba.io/annotations", "name" : "sequential", "value" : "" } ], "updating" : false, "parameters" : [ { "name" : "endpoint-url", "type" : "xs:string", "occurrence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> Mailchimp endpoint URL, e.g. http://us1.api.mailchimp.com/1.3/</div>" }, { "name" : "apikey", "type" : "xs:string", "occurrence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> a valid API Key for your user account. Get by visiting <a href=\"http://admin.mailchimp.com/account/api\" target=\"_blank\">your API dashboard</a></div>" }, { "name" : "cid", "type" : "xs:string", "occurrence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> the campaign id to pull bounces for (can be gathered using <a href=\"#campaigns-4\">campaigns()</a>)</div>" }, { "name" : "start", "type" : "xs:integer", "occurrence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> art optional for large data sets, the page number to start at - defaults to 1st page of data (page 0)</div>" }, { "name" : "limit", "type" : "xs:integer", "occurrence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> mit optional for large data sets, the number of results to return - defaults to 1000, upper limit set at 15000</div>" } ], "returns" : { "type" : "item()*", "description" : "array email addresses that unsubscribed from this campaign along with reasons, if given array a total of all unsubscribed emails and the specific emails for this page" }, "errors" : [  ] }, { "isDocumented" : true, "arity" : 4, "name" : "campaign-update", "qname" : "mailchimp:campaign-update", "signature" : "($apikey as xs:string, $cid as xs:string, $name as xs:string, $value as item()) as item()*", "description" : " Convenience function for <a xmlns:xqdoc=\"http://www.xqdoc.org/1.0\" href=\"#campaign-update-5\">campaign-update#5</a>.\n", "summary" : "<p> Convenience function for  campaign-update#5 .</p>", "annotation_str" : " %an:sequential", "annotations" : [ { "prefix" : "an", "ns" : "http://zorba.io/annotations", "name" : "sequential", "value" : "" } ], "updating" : false, "parameters" : [ { "name" : "apikey", "type" : "xs:string", "occurrence" : null, "description" : "" }, { "name" : "cid", "type" : "xs:string", "occurrence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> the Campaign Id to update</div>" }, { "name" : "name", "type" : "xs:string", "occurrence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> the parameter name (see <a href=\"#campaign-create-6\">campaigncreate()</a>). For items in the <strong>options</strong> array, this will be that parameter's name (subject, from_email, etc.). Additional parameters will be that option name (content, segment_opts). \"type_opts\" will be the name of the type - rss, auto, trans, etc.</div>" }, { "name" : "value", "type" : "item()", "occurrence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> e an appropriate value for the parameter ( see <a href=\"#campaign-create-6\">campaigncreate()</a>). For items in the <strong>options</strong> array, this will be that parameter's value. For additional parameters, this is the same value passed to them.</div>" } ], "returns" : { "type" : "item()*", "description" : "boolean true if the update succeeds, otherwise an error will be thrown" }, "errors" : [  ] }, { "isDocumented" : true, "arity" : 5, "name" : "campaign-update", "qname" : "mailchimp:campaign-update", "signature" : "($endpoint-url as xs:string, $apikey as xs:string, $cid as xs:string, $name as xs:string, $value as item()) as item()*", "description" : " Update just about any setting for a campaign that has <em xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">not</em> been sent. See <a xmlns:xqdoc=\"http://www.xqdoc.org/1.0\" href=\"#campaign-create-6\">campaigncreate()</a> for details.\n Caveats: <br xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"/>\n  <ul xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">\n    <li>If you set list_id, all segmentation options will be deleted and must be re-added.</li>\n    <li>If you set template_id, you need to follow that up by setting it's 'content'</li>\n    <li>If you set segment_opts, you should have tested your options against <a href=\"#campaign-segment-test-3\">campaign-segment-test()</a> as <a href=\"#campaign-update-4\">campaign-update()</a> will not allow you to set a segment that includes no members.</li>\n  </ul>.\n", "summary" : "<p> Update just about any setting for a campaign that has  not  been sent.</p>", "annotation_str" : " %an:sequential", "annotations" : [ { "prefix" : "an", "ns" : "http://zorba.io/annotations", "name" : "sequential", "value" : "" } ], "updating" : false, "parameters" : [ { "name" : "endpoint-url", "type" : "xs:string", "occurrence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> Mailchimp endpoint URL, e.g. http://us1.api.mailchimp.com/1.3/</div>" }, { "name" : "apikey", "type" : "xs:string", "occurrence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> a valid API Key for your user account. Get by visiting <a href=\"http://admin.mailchimp.com/account/api\" target=\"_blank\">your API dashboard</a></div>" }, { "name" : "cid", "type" : "xs:string", "occurrence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> the Campaign Id to update</div>" }, { "name" : "name", "type" : "xs:string", "occurrence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> the parameter name ( see <a href=\"#campaign-create-6\">campaigncreate()</a>). For items in the <strong>options</strong> array, this will be that parameter's name (subject, from_email, etc.). Additional parameters will be that option name (content, segment_opts). \"type_opts\" will be the name of the type - rss, auto, trans, etc.</div>" }, { "name" : "value", "type" : "item()", "occurrence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> An appropriate value for the parameter ( see <a href=\"#campaign-create-6\">campaigncreate()</a>). For items in the <strong>options</strong> array, this will be that parameter's value. For additional parameters, this is the same value passed to them.</div>" } ], "returns" : { "type" : "item()*", "description" : "True if the update succeeds, otherwise an error will be thrown" }, "errors" : [  ] }, { "isDocumented" : true, "arity" : 2, "name" : "campaigns-for-email", "qname" : "mailchimp:campaigns-for-email", "signature" : "($apikey as xs:string, $email_address as xs:string) as item()*", "description" : " Convenience function for <a xmlns:xqdoc=\"http://www.xqdoc.org/1.0\" href=\"#campaigns-for-email-3\">campaigns-for-email#3</a>.\n", "summary" : "<p> Convenience function for  campaigns-for-email#3 .</p>", "annotation_str" : " %an:sequential", "annotations" : [ { "prefix" : "an", "ns" : "http://zorba.io/annotations", "name" : "sequential", "value" : "" } ], "updating" : false, "parameters" : [ { "name" : "apikey", "type" : "xs:string", "occurrence" : null, "description" : "" }, { "name" : "email_address", "type" : "xs:string", "occurrence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> the email address to unsubscribe OR the email \"id\" returned from listMemberInfo, Webhooks, and Campaigns</div>" } ], "returns" : { "type" : "item()*", "description" : "An array of campaign_ids the member received" }, "errors" : [  ] }, { "isDocumented" : true, "arity" : 3, "name" : "campaigns-for-email", "qname" : "mailchimp:campaigns-for-email", "signature" : "($endpoint-url as xs:string, $apikey as xs:string, $email_address as xs:string) as item()*", "description" : " Retrieve all Campaigns Ids a member was sent.\n", "summary" : "<p> Retrieve all Campaigns Ids a member was sent.</p>", "annotation_str" : " %an:sequential", "annotations" : [ { "prefix" : "an", "ns" : "http://zorba.io/annotations", "name" : "sequential", "value" : "" } ], "updating" : false, "parameters" : [ { "name" : "endpoint-url", "type" : "xs:string", "occurrence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> Mailchimp endpoint URL, e.g. http://us1.api.mailchimp.com/1.3/</div>" }, { "name" : "apikey", "type" : "xs:string", "occurrence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> a valid API Key for your user account. Get by visiting <a href=\"http://admin.mailchimp.com/account/api\" target=\"_blank\">your API dashboard</a></div>" }, { "name" : "email_address", "type" : "xs:string", "occurrence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> the email address to unsubscribe OR the email \"id\" returned from listMemberInfo, Webhooks, and Campaigns</div>" } ], "returns" : { "type" : "item()*", "description" : "An array of campaign_ids the member received" }, "errors" : [  ] }, { "isDocumented" : true, "arity" : 4, "name" : "campaigns", "qname" : "mailchimp:campaigns", "signature" : "($apikey as xs:string, $filters as element(array), $start as xs:integer, $limit as xs:integer) as item()*", "description" : " Convenience function for <a xmlns:xqdoc=\"http://www.xqdoc.org/1.0\" href=\"#campaigns-5\">campaigns#5</a>.\n", "summary" : "<p> Convenience function for  campaigns#5 .</p>", "annotation_str" : " %an:sequential", "annotations" : [ { "prefix" : "an", "ns" : "http://zorba.io/annotations", "name" : "sequential", "value" : "" } ], "updating" : false, "parameters" : [ { "name" : "apikey", "type" : "xs:string", "occurrence" : null, "description" : "" }, { "name" : "filters", "type" : "element(array)", "occurrence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> a hash of filters to apply to this query - all are optional. See <a href=\"http://apidocs.mailchimp.com/rtfm/campaigns.func.php\">Mailchimp API documentation</a> for more information about the parameter structure.</div>" }, { "name" : "start", "type" : "xs:integer", "occurrence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> optional - control paging of campaigns, start results at this campaign #, defaults to 1st page of data (page 0)</div>" }, { "name" : "limit", "type" : "xs:integer", "occurrence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> optional - control paging of campaigns, number of campaigns to return with each call, defaults to 25 (max=1000)</div>" } ], "returns" : { "type" : "item()*", "description" : "An array containing a count of all matching campaigns and the specific ones for the current page (see <a xmlns:xqdoc=\"http://www.xqdoc.org/1.0\" href=\"http://apidocs.mailchimp.com/rtfm/campaigns.func.php\">Mailchimp API documentation</a> for more information about the return type)" }, "errors" : [  ] }, { "isDocumented" : true, "arity" : 5, "name" : "campaigns", "qname" : "mailchimp:campaigns", "signature" : "($endpoint-url as xs:string, $apikey as xs:string, $filters as element(array), $start as xs:integer, $limit as xs:integer) as item()*", "description" : " Get the list of campaigns and their details matching the specified filters.\n", "summary" : "<p> Get the list of campaigns and their details matching the specified filters.</p>", "annotation_str" : " %an:sequential", "annotations" : [ { "prefix" : "an", "ns" : "http://zorba.io/annotations", "name" : "sequential", "value" : "" } ], "updating" : false, "parameters" : [ { "name" : "endpoint-url", "type" : "xs:string", "occurrence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> Mailchimp endpoint URL, e.g. http://us1.api.mailchimp.com/1.3/</div>" }, { "name" : "apikey", "type" : "xs:string", "occurrence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> a valid API Key for your user account. Get by visiting <a href=\"http://admin.mailchimp.com/account/api\" target=\"_blank\">your API dashboard</a></div>" }, { "name" : "filters", "type" : "element(array)", "occurrence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> a hash of filters to apply to this query - all are optional. See <a href=\"http://apidocs.mailchimp.com/rtfm/campaigns.func.php\">Mailchimp API documentation</a> for more information about the parameter structure.</div>" }, { "name" : "start", "type" : "xs:integer", "occurrence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> optional - control paging of campaigns, start results at this campaign #, defaults to 1st page of data (page 0)</div>" }, { "name" : "limit", "type" : "xs:integer", "occurrence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> optional - control paging of campaigns, number of campaigns to return with each call, defaults to 25 (max=1000)</div>" } ], "returns" : { "type" : "item()*", "description" : "An array containing a count of all matching campaigns and the specific ones for the current page (see <a xmlns:xqdoc=\"http://www.xqdoc.org/1.0\" href=\"http://apidocs.mailchimp.com/rtfm/campaigns.func.php\">Mailchimp API documentation</a> for more information about the return type)" }, "errors" : [  ] }, { "isDocumented" : true, "arity" : 1, "name" : "chimp-chatter", "qname" : "mailchimp:chimp-chatter", "signature" : "($apikey as xs:string) as item()*", "description" : " Convenience function for <a xmlns:xqdoc=\"http://www.xqdoc.org/1.0\" href=\"#chimp-chatter-2\">chimp-chatter#2</a>.\n", "summary" : "<p> Convenience function for  chimp-chatter#2 .</p>", "annotation_str" : " %an:sequential", "annotations" : [ { "prefix" : "an", "ns" : "http://zorba.io/annotations", "name" : "sequential", "value" : "" } ], "updating" : false, "parameters" : [ { "name" : "apikey", "type" : "xs:string", "occurrence" : null, "description" : "" } ], "returns" : { "type" : "item()*", "description" : "An array of chatter messages and properties" }, "errors" : [  ] }, { "isDocumented" : true, "arity" : 2, "name" : "chimp-chatter", "qname" : "mailchimp:chimp-chatter", "signature" : "($endpoint-url as xs:string, $apikey as xs:string) as item()*", "description" : " Return the current Chimp Chatter messages for an account.\n", "summary" : "<p> Return the current Chimp Chatter messages for an account.</p>", "annotation_str" : " %an:sequential", "annotations" : [ { "prefix" : "an", "ns" : "http://zorba.io/annotations", "name" : "sequential", "value" : "" } ], "updating" : false, "parameters" : [ { "name" : "endpoint-url", "type" : "xs:string", "occurrence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> Mailchimp endpoint URL, e.g. http://us1.api.mailchimp.com/1.3/</div>" }, { "name" : "apikey", "type" : "xs:string", "occurrence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> a valid API Key for your user account. Get by visiting <a href=\"http://admin.mailchimp.com/account/api\" target=\"_blank\">your API dashboard</a></div>" } ], "returns" : { "type" : "item()*", "description" : "An array of chatter messages and properties" }, "errors" : [  ] }, { "isDocumented" : true, "arity" : 2, "name" : "ecomm-order-add", "qname" : "mailchimp:ecomm-order-add", "signature" : "($apikey as xs:string, $order as element(array)) as item()*", "description" : " Convenience function for <a xmlns:xqdoc=\"http://www.xqdoc.org/1.0\" href=\"#ecomm-order-add-3\">ecomm-order-add#3</a>.\n", "summary" : "<p> Convenience function for  ecomm-order-add#3 .</p>", "annotation_str" : " %an:sequential", "annotations" : [ { "prefix" : "an", "ns" : "http://zorba.io/annotations", "name" : "sequential", "value" : "" } ], "updating" : false, "parameters" : [ { "name" : "apikey", "type" : "xs:string", "occurrence" : null, "description" : "" }, { "name" : "order", "type" : "element(array)", "occurrence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> an array of information pertaining to the order that has completed. Use the following keys. See <a href=\"http://apidocs.mailchimp.com/rtfm/ecommorderadd.func.php\">Mailchimp API documentation</a> for more information about the parameter structure.</div>" } ], "returns" : { "type" : "item()*", "description" : "True if the data is saved, otherwise an error is thrown." }, "errors" : [  ] }, { "isDocumented" : true, "arity" : 3, "name" : "ecomm-order-add", "qname" : "mailchimp:ecomm-order-add", "signature" : "($endpoint-url as xs:string, $apikey as xs:string, $order as element(array)) as item()*", "description" : " Import Ecommerce Order Information to be used for Segmentation.\n", "summary" : "<p> Import Ecommerce Order Information to be used for Segmentation.</p>", "annotation_str" : " %an:sequential", "annotations" : [ { "prefix" : "an", "ns" : "http://zorba.io/annotations", "name" : "sequential", "value" : "" } ], "updating" : false, "parameters" : [ { "name" : "endpoint-url", "type" : "xs:string", "occurrence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> Mailchimp endpoint URL, e.g. http://us1.api.mailchimp.com/1.3/</div>" }, { "name" : "apikey", "type" : "xs:string", "occurrence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> a valid API Key for your user account. Get by visiting <a href=\"http://admin.mailchimp.com/account/api\" target=\"_blank\">your API dashboard</a></div>" }, { "name" : "order", "type" : "element(array)", "occurrence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> an array of information pertaining to the order that has completed. Use the following keys. See <a href=\"http://apidocs.mailchimp.com/rtfm/ecommorderadd.func.php\">Mailchimp API documentation</a> for more information about the parameter structure.</div>" } ], "returns" : { "type" : "item()*", "description" : "True if the data is saved, otherwise an error is thrown." }, "errors" : [  ] }, { "isDocumented" : true, "arity" : 3, "name" : "ecomm-order-del", "qname" : "mailchimp:ecomm-order-del", "signature" : "($apikey as xs:string, $store_id as xs:string, $order_id as xs:string) as item()*", "description" : " Convenience function for <a xmlns:xqdoc=\"http://www.xqdoc.org/1.0\" href=\"#ecomm-order-del-4\">ecomm-order-del#4</a>.\n", "summary" : "<p> Convenience function for  ecomm-order-del#4 .</p>", "annotation_str" : " %an:sequential", "annotations" : [ { "prefix" : "an", "ns" : "http://zorba.io/annotations", "name" : "sequential", "value" : "" } ], "updating" : false, "parameters" : [ { "name" : "apikey", "type" : "xs:string", "occurrence" : null, "description" : "" }, { "name" : "store_id", "type" : "xs:string", "occurrence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> the store id the order belongs to</div>" }, { "name" : "order_id", "type" : "xs:string", "occurrence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> the order id (generated by the store) to delete</div>" } ], "returns" : { "type" : "item()*", "description" : "True if an order is deleted, otherwise an error is thrown." }, "errors" : [  ] }, { "isDocumented" : true, "arity" : 4, "name" : "ecomm-order-del", "qname" : "mailchimp:ecomm-order-del", "signature" : "($endpoint-url as xs:string, $apikey as xs:string, $store_id as xs:string, $order_id as xs:string) as item()*", "description" : " Delete Ecommerce Order Information used for segmentation. This will generally be used by ecommerce package plugins <a xmlns:xqdoc=\"http://www.xqdoc.org/1.0\" href=\"/plugins/ecomm360.phtml\">that we provide</a> or by 3rd part system developers.\n", "summary" : "<p> Delete Ecommerce Order Information used for segmentation.</p>", "annotation_str" : " %an:sequential", "annotations" : [ { "prefix" : "an", "ns" : "http://zorba.io/annotations", "name" : "sequential", "value" : "" } ], "updating" : false, "parameters" : [ { "name" : "endpoint-url", "type" : "xs:string", "occurrence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> Mailchimp endpoint URL, e.g. http://us1.api.mailchimp.com/1.3/</div>" }, { "name" : "apikey", "type" : "xs:string", "occurrence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> a valid API Key for your user account. Get by visiting <a href=\"http://admin.mailchimp.com/account/api\" target=\"_blank\">your API dashboard</a></div>" }, { "name" : "store_id", "type" : "xs:string", "occurrence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> the store id the order belongs to</div>" }, { "name" : "order_id", "type" : "xs:string", "occurrence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> the order id (generated by the store) to delete</div>" } ], "returns" : { "type" : "item()*", "description" : "True if an order is deleted, otherwise an error is thrown." }, "errors" : [  ] }, { "isDocumented" : true, "arity" : 4, "name" : "ecomm-orders", "qname" : "mailchimp:ecomm-orders", "signature" : "($apikey as xs:string, $start as xs:integer, $limit as xs:integer, $since as xs:string) as item()*", "description" : " Convenience function for <a xmlns:xqdoc=\"http://www.xqdoc.org/1.0\" href=\"#ecomm-orders-5\">ecomm-orders#5</a>.\n", "summary" : "<p> Convenience function for  ecomm-orders#5 .</p>", "annotation_str" : " %an:sequential", "annotations" : [ { "prefix" : "an", "ns" : "http://zorba.io/annotations", "name" : "sequential", "value" : "" } ], "updating" : false, "parameters" : [ { "name" : "apikey", "type" : "xs:string", "occurrence" : null, "description" : "" }, { "name" : "start", "type" : "xs:integer", "occurrence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> optional for large data sets, the page number to start at - defaults to 1st page of data (page 0)</div>" }, { "name" : "limit", "type" : "xs:integer", "occurrence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> optional for large data sets, the number of results to return - defaults to 100, upper limit set at 500</div>" }, { "name" : "since", "type" : "xs:string", "occurrence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> optional pull only messages since this time - use YYYY-MM-DD HH:II:SS format in <strong>GMT</strong></div>" } ], "returns" : { "type" : "item()*", "description" : "Array the total matching orders and the specific orders for the requested page" }, "errors" : [  ] }, { "isDocumented" : true, "arity" : 5, "name" : "ecomm-orders", "qname" : "mailchimp:ecomm-orders", "signature" : "($endpoint-url as xs:string, $apikey as xs:string, $start as xs:integer, $limit as xs:integer, $since as xs:string) as item()*", "description" : " Retrieve the Ecommerce Orders for an account.\n", "summary" : "<p> Retrieve the Ecommerce Orders for an account.</p>", "annotation_str" : " %an:sequential", "annotations" : [ { "prefix" : "an", "ns" : "http://zorba.io/annotations", "name" : "sequential", "value" : "" } ], "updating" : false, "parameters" : [ { "name" : "endpoint-url", "type" : "xs:string", "occurrence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> Mailchimp endpoint URL, e.g. http://us1.api.mailchimp.com/1.3/</div>" }, { "name" : "apikey", "type" : "xs:string", "occurrence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> a valid API Key for your user account. Get by visiting <a href=\"http://admin.mailchimp.com/account/api\" target=\"_blank\">your API dashboard</a></div>" }, { "name" : "start", "type" : "xs:integer", "occurrence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> optional for large data sets, the page number to start at - defaults to 1st page of data (page 0)</div>" }, { "name" : "limit", "type" : "xs:integer", "occurrence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> optional for large data sets, the number of results to return - defaults to 100, upper limit set at 500</div>" }, { "name" : "since", "type" : "xs:string", "occurrence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> optional pull only messages since this time - use YYYY-MM-DD HH:II:SS format in <strong>GMT</strong></div>" } ], "returns" : { "type" : "item()*", "description" : "Array the total matching orders and the specific orders for the requested page" }, "errors" : [  ] }, { "isDocumented" : true, "arity" : 3, "name" : "folder-add", "qname" : "mailchimp:folder-add", "signature" : "($apikey as xs:string, $name as xs:string, $type as xs:string) as item()*", "description" : " Convenience function for <a xmlns:xqdoc=\"http://www.xqdoc.org/1.0\" href=\"#folder-add-4\">folder-add#4</a>.\n", "summary" : "<p> Convenience function for  folder-add#4 .</p>", "annotation_str" : " %an:sequential", "annotations" : [ { "prefix" : "an", "ns" : "http://zorba.io/annotations", "name" : "sequential", "value" : "" } ], "updating" : false, "parameters" : [ { "name" : "apikey", "type" : "xs:string", "occurrence" : null, "description" : "" }, { "name" : "name", "type" : "xs:string", "occurrence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> a unique name for a folder (max 100 bytes)</div>" }, { "name" : "type", "type" : "xs:string", "occurrence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> optional the type of folder to create - either \"campaign\" or \"autoresponder\". Defaults to \"campaign\"</div>" } ], "returns" : { "type" : "item()*", "description" : "The folder_id of the newly created folder." }, "errors" : [  ] }, { "isDocumented" : true, "arity" : 4, "name" : "folder-add", "qname" : "mailchimp:folder-add", "signature" : "($endpoint-url as xs:string, $apikey as xs:string, $name as xs:string, $type as xs:string) as item()*", "description" : " Add a new folder to file campaigns or autoresponders in.\n", "summary" : "<p> Add a new folder to file campaigns or autoresponders in.</p>", "annotation_str" : " %an:sequential", "annotations" : [ { "prefix" : "an", "ns" : "http://zorba.io/annotations", "name" : "sequential", "value" : "" } ], "updating" : false, "parameters" : [ { "name" : "endpoint-url", "type" : "xs:string", "occurrence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> Mailchimp endpoint URL, e.g. http://us1.api.mailchimp.com/1.3/</div>" }, { "name" : "apikey", "type" : "xs:string", "occurrence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> a valid API Key for your user account. Get by visiting <a href=\"http://admin.mailchimp.com/account/api\" target=\"_blank\">your API dashboard</a></div>" }, { "name" : "name", "type" : "xs:string", "occurrence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> a unique name for a folder (max 100 bytes)</div>" }, { "name" : "type", "type" : "xs:string", "occurrence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> optional the type of folder to create - either \"campaign\" or \"autoresponder\". Defaults to \"campaign\"</div>" } ], "returns" : { "type" : "item()*", "description" : "The folder_id of the newly created folder." }, "errors" : [  ] }, { "isDocumented" : true, "arity" : 3, "name" : "folder-del", "qname" : "mailchimp:folder-del", "signature" : "($apikey as xs:string, $fid as xs:integer, $type as xs:string) as item()*", "description" : " Convenience function for <a xmlns:xqdoc=\"http://www.xqdoc.org/1.0\" href=\"#folder-del-4\">folder-del#4</a>.\n", "summary" : "<p> Convenience function for  folder-del#4 .</p>", "annotation_str" : " %an:sequential", "annotations" : [ { "prefix" : "an", "ns" : "http://zorba.io/annotations", "name" : "sequential", "value" : "" } ], "updating" : false, "parameters" : [ { "name" : "apikey", "type" : "xs:string", "occurrence" : null, "description" : "" }, { "name" : "fid", "type" : "xs:integer", "occurrence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> the folder id to update - retrieve from folders()</div>" }, { "name" : "type", "type" : "xs:string", "occurrence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> optional the type of folder to create - either \"campaign\" or \"autoresponder\". Defaults to \"campaign\"</div>" } ], "returns" : { "type" : "item()*", "description" : "True if the delete worked, otherwise an exception is thrown" }, "errors" : [  ] }, { "isDocumented" : true, "arity" : 4, "name" : "folder-del", "qname" : "mailchimp:folder-del", "signature" : "($endpoint-url as xs:string, $apikey as xs:string, $fid as xs:integer, $type as xs:string) as item()*", "description" : " Delete a campaign or autoresponder folder. Note that this will simply make campaigns in the folder appear unfiled, they are not removed.\n", "summary" : "<p> Delete a campaign or autoresponder folder.</p>", "annotation_str" : " %an:sequential", "annotations" : [ { "prefix" : "an", "ns" : "http://zorba.io/annotations", "name" : "sequential", "value" : "" } ], "updating" : false, "parameters" : [ { "name" : "endpoint-url", "type" : "xs:string", "occurrence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> Mailchimp endpoint URL, e.g. http://us1.api.mailchimp.com/1.3/</div>" }, { "name" : "apikey", "type" : "xs:string", "occurrence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> a valid API Key for your user account. Get by visiting <a href=\"http://admin.mailchimp.com/account/api\" target=\"_blank\">your API dashboard</a></div>" }, { "name" : "fid", "type" : "xs:integer", "occurrence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> the folder id to update - retrieve from folders()</div>" }, { "name" : "type", "type" : "xs:string", "occurrence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> optional the type of folder to create - either \"campaign\" or \"autoresponder\". Defaults to \"campaign\"</div>" } ], "returns" : { "type" : "item()*", "description" : "True if the delete worked, otherwise an exception is thrown" }, "errors" : [  ] }, { "isDocumented" : true, "arity" : 4, "name" : "folder-update", "qname" : "mailchimp:folder-update", "signature" : "($apikey as xs:string, $fid as xs:integer, $name as xs:string, $type as xs:string) as item()*", "description" : " Convenience function for <a xmlns:xqdoc=\"http://www.xqdoc.org/1.0\" href=\"#folder-update-5\">folder-update#5</a>.\n", "summary" : "<p> Convenience function for  folder-update#5 .</p>", "annotation_str" : " %an:sequential", "annotations" : [ { "prefix" : "an", "ns" : "http://zorba.io/annotations", "name" : "sequential", "value" : "" } ], "updating" : false, "parameters" : [ { "name" : "apikey", "type" : "xs:string", "occurrence" : null, "description" : "" }, { "name" : "fid", "type" : "xs:integer", "occurrence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> the folder id to update - retrieve from folders()</div>" }, { "name" : "name", "type" : "xs:string", "occurrence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> a new, unique name for the folder (max 100 bytes)</div>" }, { "name" : "type", "type" : "xs:string", "occurrence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> optional the type of folder to create - either \"campaign\" or \"autoresponder\". Defaults to \"campaign\"</div>" } ], "returns" : { "type" : "item()*", "description" : "True if the update worked, otherwise an exception is thrown" }, "errors" : [  ] }, { "isDocumented" : true, "arity" : 5, "name" : "folder-update", "qname" : "mailchimp:folder-update", "signature" : "($endpoint-url as xs:string, $apikey as xs:string, $fid as xs:integer, $name as xs:string, $type as xs:string) as item()*", "description" : " Update the name of a folder for campaigns or autoresponders.\n", "summary" : "<p> Update the name of a folder for campaigns or autoresponders.</p>", "annotation_str" : " %an:sequential", "annotations" : [ { "prefix" : "an", "ns" : "http://zorba.io/annotations", "name" : "sequential", "value" : "" } ], "updating" : false, "parameters" : [ { "name" : "endpoint-url", "type" : "xs:string", "occurrence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> Mailchimp endpoint URL, e.g. http://us1.api.mailchimp.com/1.3/</div>" }, { "name" : "apikey", "type" : "xs:string", "occurrence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> a valid API Key for your user account. Get by visiting <a href=\"http://admin.mailchimp.com/account/api\" target=\"_blank\">your API dashboard</a></div>" }, { "name" : "fid", "type" : "xs:integer", "occurrence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> the folder id to update - retrieve from folders()</div>" }, { "name" : "name", "type" : "xs:string", "occurrence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> a new, unique name for the folder (max 100 bytes)</div>" }, { "name" : "type", "type" : "xs:string", "occurrence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> optional the type of folder to create - either \"campaign\" or \"autoresponder\". Defaults to \"campaign\"</div>" } ], "returns" : { "type" : "item()*", "description" : "True if the update worked, otherwise an exception is thrown" }, "errors" : [  ] }, { "isDocumented" : true, "arity" : 2, "name" : "folders", "qname" : "mailchimp:folders", "signature" : "($apikey as xs:string, $type as xs:string) as item()*", "description" : " Convenience function for <a xmlns:xqdoc=\"http://www.xqdoc.org/1.0\" href=\"#folders-3\">folders#3</a>.\n", "summary" : "<p> Convenience function for  folders#3 .</p>", "annotation_str" : " %an:sequential", "annotations" : [ { "prefix" : "an", "ns" : "http://zorba.io/annotations", "name" : "sequential", "value" : "" } ], "updating" : false, "parameters" : [ { "name" : "apikey", "type" : "xs:string", "occurrence" : null, "description" : "" }, { "name" : "type", "type" : "xs:string", "occurrence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> optional the type of folders to return - either \"campaign\" or \"autoresponder\". Defaults to \"campaign\"</div>" } ], "returns" : { "type" : "item()*", "description" : "Array of folder structs (see Returned Fields for details)" }, "errors" : [  ] }, { "isDocumented" : true, "arity" : 3, "name" : "folders", "qname" : "mailchimp:folders", "signature" : "($endpoint-url as xs:string, $apikey as xs:string, $type as xs:string) as item()*", "description" : " List all the folders for a user account.\n", "summary" : "<p> List all the folders for a user account.</p>", "annotation_str" : " %an:sequential", "annotations" : [ { "prefix" : "an", "ns" : "http://zorba.io/annotations", "name" : "sequential", "value" : "" } ], "updating" : false, "parameters" : [ { "name" : "endpoint-url", "type" : "xs:string", "occurrence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> Mailchimp endpoint URL, e.g. http://us1.api.mailchimp.com/1.3/</div>" }, { "name" : "apikey", "type" : "xs:string", "occurrence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> a valid API Key for your user account. Get by visiting <a href=\"http://admin.mailchimp.com/account/api\" target=\"_blank\">your API dashboard</a></div>" }, { "name" : "type", "type" : "xs:string", "occurrence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> optional the type of folders to return - either \"campaign\" or \"autoresponder\". Defaults to \"campaign\"</div>" } ], "returns" : { "type" : "item()*", "description" : "Array of folder structs (see Returned Fields for details)" }, "errors" : [  ] }, { "isDocumented" : true, "arity" : 3, "name" : "generate-text", "qname" : "mailchimp:generate-text", "signature" : "($apikey as xs:string, $type as xs:string, $content as item()) as item()*", "description" : " Convenience function for <a xmlns:xqdoc=\"http://www.xqdoc.org/1.0\" href=\"#generate-text-4\">generate-text#4</a>.\n", "summary" : "<p> Convenience function for  generate-text#4 .</p>", "annotation_str" : " %an:sequential", "annotations" : [ { "prefix" : "an", "ns" : "http://zorba.io/annotations", "name" : "sequential", "value" : "" } ], "updating" : false, "parameters" : [ { "name" : "apikey", "type" : "xs:string", "occurrence" : null, "description" : "" }, { "name" : "type", "type" : "xs:string", "occurrence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> The type of content to parse. Must be one of: \"html\", \"template\", \"url\", \"cid\" (Campaign Id), or \"tid\" (Template Id)</div>" }, { "name" : "content", "type" : "item()", "occurrence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> The content to use. For \"html\" expects a single string value, \"template\" expects an array like you send to campaignCreate, \"url\" expects a valid &amp; public URL to pull from, \"cid\" expects a valid Campaign Id, and \"tid\" expects a valid Template Id on your account.</div>" } ], "returns" : { "type" : "item()*", "description" : "The content pass in converted to text." }, "errors" : [  ] }, { "isDocumented" : true, "arity" : 4, "name" : "generate-text", "qname" : "mailchimp:generate-text", "signature" : "($endpoint-url as xs:string, $apikey as xs:string, $type as xs:string, $content as item()) as item()*", "description" : " Have HTML content auto-converted to a text-only format. You can send: plain HTML, an array of Template content, an existing Campaign Id, or an existing Template Id. Note that this will <b xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">not</b> save anything to or update any of your lists, campaigns, or templates.\n", "summary" : "<p> Have HTML content auto-converted to a text-only format.</p>", "annotation_str" : " %an:sequential", "annotations" : [ { "prefix" : "an", "ns" : "http://zorba.io/annotations", "name" : "sequential", "value" : "" } ], "updating" : false, "parameters" : [ { "name" : "endpoint-url", "type" : "xs:string", "occurrence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> Mailchimp endpoint URL, e.g. http://us1.api.mailchimp.com/1.3/</div>" }, { "name" : "apikey", "type" : "xs:string", "occurrence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> a valid API Key for your user account. Get by visiting <a href=\"http://admin.mailchimp.com/account/api\" target=\"_blank\">your API dashboard</a></div>" }, { "name" : "type", "type" : "xs:string", "occurrence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> The type of content to parse. Must be one of: \"html\", \"template\", \"url\", \"cid\" (Campaign Id), or \"tid\" (Template Id)</div>" }, { "name" : "content", "type" : "item()", "occurrence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> The content to use. For \"html\" expects a single string value, \"template\" expects an array like you send to campaignCreate, \"url\" expects a valid &amp; public URL to pull from, \"cid\" expects a valid Campaign Id, and \"tid\" expects a valid Template Id on your account.</div>" } ], "returns" : { "type" : "item()*", "description" : "The content pass in converted to text." }, "errors" : [  ] }, { "isDocumented" : true, "arity" : 1, "name" : "get-account-details", "qname" : "mailchimp:get-account-details", "signature" : "($apikey as xs:string) as item()*", "description" : " Convenience function for <a xmlns:xqdoc=\"http://www.xqdoc.org/1.0\" href=\"#get-account-details-2\">get-account-details#2</a>.\n", "summary" : "<p> Convenience function for  get-account-details#2 .</p>", "annotation_str" : " %an:sequential", "annotations" : [ { "prefix" : "an", "ns" : "http://zorba.io/annotations", "name" : "sequential", "value" : "" } ], "updating" : false, "parameters" : [ { "name" : "apikey", "type" : "xs:string", "occurrence" : null, "description" : "" } ], "returns" : { "type" : "item()*", "description" : "array containing the details for the account tied to this API Key" }, "errors" : [  ] }, { "isDocumented" : true, "arity" : 2, "name" : "get-account-details", "qname" : "mailchimp:get-account-details", "signature" : "($endpoint-url as xs:string, $apikey as xs:string) as item()*", "description" : " Retrieve lots of account information including payments made, plan info, some account stats, installed modules, contact info, and more.\n", "summary" : "<p> Retrieve lots of account information including payments made, plan info, some account stats, installed modules, contact info, and more.</p>", "annotation_str" : " %an:sequential", "annotations" : [ { "prefix" : "an", "ns" : "http://zorba.io/annotations", "name" : "sequential", "value" : "" } ], "updating" : false, "parameters" : [ { "name" : "endpoint-url", "type" : "xs:string", "occurrence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> Mailchimp endpoint URL, e.g. http://us1.api.mailchimp.com/1.3/</div>" }, { "name" : "apikey", "type" : "xs:string", "occurrence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> a valid API Key for your user account. Get by visiting <a href=\"http://admin.mailchimp.com/account/api\" target=\"_blank\">your API dashboard</a></div>" } ], "returns" : { "type" : "item()*", "description" : "Array containing the details for the account tied to this API Key" }, "errors" : [  ] }, { "isDocumented" : true, "arity" : 3, "name" : "inline-css", "qname" : "mailchimp:inline-css", "signature" : "($apikey as xs:string, $html as xs:string, $strip_css as xs:boolean) as item()*", "description" : " Convenience function for <a xmlns:xqdoc=\"http://www.xqdoc.org/1.0\" href=\"#inline-css-4\">inline-css#4</a>.\n", "summary" : "<p> Convenience function for  inline-css#4 .</p>", "annotation_str" : " %an:sequential", "annotations" : [ { "prefix" : "an", "ns" : "http://zorba.io/annotations", "name" : "sequential", "value" : "" } ], "updating" : false, "parameters" : [ { "name" : "apikey", "type" : "xs:string", "occurrence" : null, "description" : "" }, { "name" : "html", "type" : "xs:string", "occurrence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> Your HTML content</div>" }, { "name" : "strip_css", "type" : "xs:boolean", "occurrence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> optional Whether you want the CSS &amp;lt;style&amp;gt; tags stripped from the returned document. Defaults to false.</div>" } ], "returns" : { "type" : "item()*", "description" : "Your HTML content with all CSS inlined, just like if we sent it." }, "errors" : [  ] }, { "isDocumented" : true, "arity" : 4, "name" : "inline-css", "qname" : "mailchimp:inline-css", "signature" : "($endpoint-url as xs:string, $apikey as xs:string, $html as xs:string, $strip_css as xs:boolean) as item()*", "description" : " Send your HTML content to have the CSS inlined and optionally remove the original styles.\n", "summary" : "<p> Send your HTML content to have the CSS inlined and optionally remove the original styles.</p>", "annotation_str" : " %an:sequential", "annotations" : [ { "prefix" : "an", "ns" : "http://zorba.io/annotations", "name" : "sequential", "value" : "" } ], "updating" : false, "parameters" : [ { "name" : "endpoint-url", "type" : "xs:string", "occurrence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> Mailchimp endpoint URL, e.g. http://us1.api.mailchimp.com/1.3/</div>" }, { "name" : "apikey", "type" : "xs:string", "occurrence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> a valid API Key for your user account. Get by visiting <a href=\"http://admin.mailchimp.com/account/api\" target=\"_blank\">your API dashboard</a></div>" }, { "name" : "html", "type" : "xs:string", "occurrence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> Your HTML content</div>" }, { "name" : "strip_css", "type" : "xs:boolean", "occurrence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> optional Whether you want the CSS &amp;lt;style&amp;gt; tags stripped from the returned document. Defaults to false.</div>" } ], "returns" : { "type" : "item()*", "description" : "Your HTML content with all CSS inlined, just like if we sent it." }, "errors" : [  ] }, { "isDocumented" : true, "arity" : 5, "name" : "list-abuse-reports", "qname" : "mailchimp:list-abuse-reports", "signature" : "($apikey as xs:string, $id as xs:string, $start as xs:integer, $limit as xs:integer, $since as xs:string) as item()*", "description" : " Convenience function for <a xmlns:xqdoc=\"http://www.xqdoc.org/1.0\" href=\"#list-abuse-reports-6\">list-abuse-reports#6</a>.\n", "summary" : "<p> Convenience function for  list-abuse-reports#6 .</p>", "annotation_str" : " %an:sequential", "annotations" : [ { "prefix" : "an", "ns" : "http://zorba.io/annotations", "name" : "sequential", "value" : "" } ], "updating" : false, "parameters" : [ { "name" : "apikey", "type" : "xs:string", "occurrence" : null, "description" : "" }, { "name" : "id", "type" : "xs:string", "occurrence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> the list id to pull abuse reports for (can be gathered using lists())</div>" }, { "name" : "start", "type" : "xs:integer", "occurrence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> optional for large data sets, the page number to start at - defaults to 1st page of data (page 0)</div>" }, { "name" : "limit", "type" : "xs:integer", "occurrence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> optional for large data sets, the number of results to return - defaults to 500, upper limit set at 1000</div>" }, { "name" : "since", "type" : "xs:string", "occurrence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> optional pull only messages since this time - use YYYY-MM-DD HH:II:SS format in <strong>GMT</strong></div>" } ], "returns" : { "type" : "item()*", "description" : "The total of all reports and the specific reports reports this page" }, "errors" : [  ] }, { "isDocumented" : true, "arity" : 6, "name" : "list-abuse-reports", "qname" : "mailchimp:list-abuse-reports", "signature" : "($endpoint-url as xs:string, $apikey as xs:string, $id as xs:string, $start as xs:integer, $limit as xs:integer, $since as xs:string) as item()*", "description" : " Get all email addresses that complained about a given campaign.\n", "summary" : "<p> Get all email addresses that complained about a given campaign.</p>", "annotation_str" : " %an:sequential", "annotations" : [ { "prefix" : "an", "ns" : "http://zorba.io/annotations", "name" : "sequential", "value" : "" } ], "updating" : false, "parameters" : [ { "name" : "endpoint-url", "type" : "xs:string", "occurrence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> Mailchimp endpoint URL, e.g. http://us1.api.mailchimp.com/1.3/</div>" }, { "name" : "apikey", "type" : "xs:string", "occurrence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> a valid API Key for your user account. Get by visiting <a href=\"http://admin.mailchimp.com/account/api\" target=\"_blank\">your API dashboard</a></div>" }, { "name" : "id", "type" : "xs:string", "occurrence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> the list id to pull abuse reports for (can be gathered using lists())</div>" }, { "name" : "start", "type" : "xs:integer", "occurrence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> optional for large data sets, the page number to start at - defaults to 1st page of data (page 0)</div>" }, { "name" : "limit", "type" : "xs:integer", "occurrence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> optional for large data sets, the number of results to return - defaults to 500, upper limit set at 1000</div>" }, { "name" : "since", "type" : "xs:string", "occurrence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> optional pull only messages since this time - use YYYY-MM-DD HH:II:SS format in <strong>GMT</strong></div>" } ], "returns" : { "type" : "item()*", "description" : "The total of all reports and the specific reports reports this page" }, "errors" : [  ] }, { "isDocumented" : true, "arity" : 2, "name" : "list-activity", "qname" : "mailchimp:list-activity", "signature" : "($apikey as xs:string, $id as xs:string) as item()*", "description" : " Convenience function for <a xmlns:xqdoc=\"http://www.xqdoc.org/1.0\" href=\"#list-activity-3\">list-activity#3</a>.\n", "summary" : "<p> Convenience function for  list-activity#3 .</p>", "annotation_str" : " %an:sequential", "annotations" : [ { "prefix" : "an", "ns" : "http://zorba.io/annotations", "name" : "sequential", "value" : "" } ], "updating" : false, "parameters" : [ { "name" : "apikey", "type" : "xs:string", "occurrence" : null, "description" : "" }, { "name" : "id", "type" : "xs:string", "occurrence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> the list id to connect to. Get by calling <a href=\"#lists-4\">lists()</a></div>" } ], "returns" : { "type" : "item()*", "description" : "Array of array of daily values." }, "errors" : [  ] }, { "isDocumented" : true, "arity" : 3, "name" : "list-activity", "qname" : "mailchimp:list-activity", "signature" : "($endpoint-url as xs:string, $apikey as xs:string, $id as xs:string) as item()*", "description" : " Access up to the previous 180 days of daily detailed aggregated activity stats for a given list.\n", "summary" : "<p> Access up to the previous 180 days of daily detailed aggregated activity stats for a given list.</p>", "annotation_str" : " %an:sequential", "annotations" : [ { "prefix" : "an", "ns" : "http://zorba.io/annotations", "name" : "sequential", "value" : "" } ], "updating" : false, "parameters" : [ { "name" : "endpoint-url", "type" : "xs:string", "occurrence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> Mailchimp endpoint URL, e.g. http://us1.api.mailchimp.com/1.3/</div>" }, { "name" : "apikey", "type" : "xs:string", "occurrence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> a valid API Key for your user account. Get by visiting <a href=\"http://admin.mailchimp.com/account/api\" target=\"_blank\">your API dashboard</a></div>" }, { "name" : "id", "type" : "xs:string", "occurrence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> the list id to connect to. Get by calling <a href=\"#lists-4\">lists()</a></div>" } ], "returns" : { "type" : "item()*", "description" : "array array of array of daily values." }, "errors" : [  ] }, { "isDocumented" : true, "arity" : 6, "name" : "list-batch-subscribe", "qname" : "mailchimp:list-batch-subscribe", "signature" : "($apikey as xs:string, $id as xs:string, $batch as element(array), $double_optin as xs:boolean, $update_existing as xs:boolean, $replace_interests as xs:boolean) as item()*", "description" : " Convenience function for <a xmlns:xqdoc=\"http://www.xqdoc.org/1.0\" href=\"#list-batch-subscribe-7\">list-batch-subscribe#7</a>.\n", "summary" : "<p> Convenience function for  list-batch-subscribe#7 .</p>", "annotation_str" : " %an:sequential", "annotations" : [ { "prefix" : "an", "ns" : "http://zorba.io/annotations", "name" : "sequential", "value" : "" } ], "updating" : false, "parameters" : [ { "name" : "apikey", "type" : "xs:string", "occurrence" : null, "description" : "" }, { "name" : "id", "type" : "xs:string", "occurrence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> the list id to connect to. Get by calling <a href=\"#lists-4\">lists()</a></div>" }, { "name" : "batch", "type" : "element(array)", "occurrence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> an array of structs for each address to import with two special keys: \"EMAIL\" for the email address, and \"EMAIL_TYPE\" for the email type option (html, text, or mobile)</div>" }, { "name" : "double_optin", "type" : "xs:boolean", "occurrence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> flag to control whether to send an opt-in confirmation email - defaults to true</div>" }, { "name" : "update_existing", "type" : "xs:boolean", "occurrence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> flag to control whether to update members that are already subscribed to the list or to return an error, defaults to false (return error)</div>" }, { "name" : "replace_interests", "type" : "xs:boolean", "occurrence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> flag to determine whether we replace the interest groups with the updated groups provided, or we add the provided groups to the member's interest groups (optional, defaults to true)</div>" } ], "returns" : { "type" : "item()*", "description" : "Array of result counts and any errors that occurred" }, "errors" : [  ] }, { "isDocumented" : true, "arity" : 7, "name" : "list-batch-subscribe", "qname" : "mailchimp:list-batch-subscribe", "signature" : "($endpoint-url as xs:string, $apikey as xs:string, $id as xs:string, $batch as element(array), $double_optin as xs:boolean, $update_existing as xs:boolean, $replace_interests as xs:boolean) as item()*", "description" : " Subscribe a batch of email addresses to a list at once. If you are using a serialized version of the API, we strongly suggest that you only run this method as a POST request, and <em xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">not</em> a GET request. Maximum batch sizes vary based on the amount of data in each record, though you should cap them at 5k - 10k records, depending on your experience. These calls are also long, so be sure you increase your timeout values.\n", "summary" : "<p> Subscribe a batch of email addresses to a list at once.</p>", "annotation_str" : " %an:sequential", "annotations" : [ { "prefix" : "an", "ns" : "http://zorba.io/annotations", "name" : "sequential", "value" : "" } ], "updating" : false, "parameters" : [ { "name" : "endpoint-url", "type" : "xs:string", "occurrence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> Mailchimp endpoint URL, e.g. http://us1.api.mailchimp.com/1.3/</div>" }, { "name" : "apikey", "type" : "xs:string", "occurrence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> a valid API Key for your user account. Get by visiting <a href=\"http://admin.mailchimp.com/account/api\" target=\"_blank\">your API dashboard</a></div>" }, { "name" : "id", "type" : "xs:string", "occurrence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> the list id to connect to. Get by calling <a href=\"#lists-4\">lists()</a></div>" }, { "name" : "batch", "type" : "element(array)", "occurrence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> an array of structs for each address to import with two special keys: \"EMAIL\" for the email address, and \"EMAIL_TYPE\" for the email type option (html, text, or mobile)</div>" }, { "name" : "double_optin", "type" : "xs:boolean", "occurrence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> flag to control whether to send an opt-in confirmation email - defaults to true</div>" }, { "name" : "update_existing", "type" : "xs:boolean", "occurrence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> flag to control whether to update members that are already subscribed to the list or to return an error, defaults to false (return error)</div>" }, { "name" : "replace_interests", "type" : "xs:boolean", "occurrence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> flag to determine whether we replace the interest groups with the updated groups provided, or we add the provided groups to the member's interest groups (optional, defaults to true)</div>" } ], "returns" : { "type" : "item()*", "description" : "Array of result counts and any errors that occurred" }, "errors" : [  ] }, { "isDocumented" : true, "arity" : 6, "name" : "list-batch-unsubscribe", "qname" : "mailchimp:list-batch-unsubscribe", "signature" : "($apikey as xs:string, $id as xs:string, $emails as element(array), $delete_member as xs:boolean, $send_goodbye as xs:boolean, $send_notify as xs:boolean) as item()*", "description" : " Convenience function for <a xmlns:xqdoc=\"http://www.xqdoc.org/1.0\" href=\"#list-batch-unsubscribe-7\">list-batch-unsubscribe#7</a>.\n", "summary" : "<p> Convenience function for  list-batch-unsubscribe#7 .</p>", "annotation_str" : " %an:sequential", "annotations" : [ { "prefix" : "an", "ns" : "http://zorba.io/annotations", "name" : "sequential", "value" : "" } ], "updating" : false, "parameters" : [ { "name" : "apikey", "type" : "xs:string", "occurrence" : null, "description" : "" }, { "name" : "id", "type" : "xs:string", "occurrence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> the list id to connect to. Get by calling <a href=\"#lists-4\">lists()</a></div>" }, { "name" : "emails", "type" : "element(array)", "occurrence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> array of email addresses to unsubscribe</div>" }, { "name" : "delete_member", "type" : "xs:boolean", "occurrence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> flag to completely delete the member from your list instead of just unsubscribing, default to false</div>" }, { "name" : "send_goodbye", "type" : "xs:boolean", "occurrence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> flag to send the goodbye email to the email addresses, defaults to true</div>" }, { "name" : "send_notify", "type" : "xs:boolean", "occurrence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> flag to send the unsubscribe notification email to the address defined in the list email notification settings, defaults to false</div>" } ], "returns" : { "type" : "item()*", "description" : "Array of result counts and any errors that occurred" }, "errors" : [  ] }, { "isDocumented" : true, "arity" : 7, "name" : "list-batch-unsubscribe", "qname" : "mailchimp:list-batch-unsubscribe", "signature" : "($endpoint-url as xs:string, $apikey as xs:string, $id as xs:string, $emails as element(array), $delete_member as xs:boolean, $send_goodbye as xs:boolean, $send_notify as xs:boolean) as item()*", "description" : " Unsubscribe a batch of email addresses to a list.\n", "summary" : "<p> Unsubscribe a batch of email addresses to a list.</p>", "annotation_str" : " %an:sequential", "annotations" : [ { "prefix" : "an", "ns" : "http://zorba.io/annotations", "name" : "sequential", "value" : "" } ], "updating" : false, "parameters" : [ { "name" : "endpoint-url", "type" : "xs:string", "occurrence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> Mailchimp endpoint URL, e.g. http://us1.api.mailchimp.com/1.3/</div>" }, { "name" : "apikey", "type" : "xs:string", "occurrence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> a valid API Key for your user account. Get by visiting <a href=\"http://admin.mailchimp.com/account/api\" target=\"_blank\">your API dashboard</a></div>" }, { "name" : "id", "type" : "xs:string", "occurrence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> the list id to connect to. Get by calling <a href=\"#lists-4\">lists()</a></div>" }, { "name" : "emails", "type" : "element(array)", "occurrence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> array of email addresses to unsubscribe</div>" }, { "name" : "delete_member", "type" : "xs:boolean", "occurrence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> flag to completely delete the member from your list instead of just unsubscribing, default to false</div>" }, { "name" : "send_goodbye", "type" : "xs:boolean", "occurrence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> flag to send the goodbye email to the email addresses, defaults to true</div>" }, { "name" : "send_notify", "type" : "xs:boolean", "occurrence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> flag to send the unsubscribe notification email to the address defined in the list email notification settings, defaults to false</div>" } ], "returns" : { "type" : "item()*", "description" : "Array of result counts and any errors that occurred" }, "errors" : [  ] }, { "isDocumented" : true, "arity" : 2, "name" : "list-clients", "qname" : "mailchimp:list-clients", "signature" : "($apikey as xs:string, $id as xs:string) as item()*", "description" : " Convenience function for <a xmlns:xqdoc=\"http://www.xqdoc.org/1.0\" href=\"#list-clients-3\">list-clients#3</a>.\n", "summary" : "<p> Convenience function for  list-clients#3 .</p>", "annotation_str" : " %an:sequential", "annotations" : [ { "prefix" : "an", "ns" : "http://zorba.io/annotations", "name" : "sequential", "value" : "" } ], "updating" : false, "parameters" : [ { "name" : "apikey", "type" : "xs:string", "occurrence" : null, "description" : "" }, { "name" : "id", "type" : "xs:string", "occurrence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> the list id to connect to. Get by calling <a href=\"#lists-4\">lists()</a></div>" } ], "returns" : { "type" : "item()*", "description" : "array the desktop and mobile user agents in use on the list" }, "errors" : [  ] }, { "isDocumented" : true, "arity" : 3, "name" : "list-clients", "qname" : "mailchimp:list-clients", "signature" : "($endpoint-url as xs:string, $apikey as xs:string, $id as xs:string) as item()*", "description" : " Retrieve the clients that the list's subscribers have been tagged as being used based on user agents seen. Made possible by <a xmlns:xqdoc=\"http://www.xqdoc.org/1.0\" href=\"http://user-agent-string.info\" target=\"_blank\">user-agent-string.info</a> double penetration the percent of desktop clients in use array clients a record containing the 'client', an 'icon' image url, the 'percent' using the client, and the total 'members' represented double penetration the percent of mobile clients in use array clients a record containing the 'client', an 'icon' image url, the 'percent' using the client, and the total 'members' represented.\n", "summary" : "<p> Retrieve the clients that the list's subscribers have been tagged as being used based on user agents seen.</p>", "annotation_str" : " %an:sequential", "annotations" : [ { "prefix" : "an", "ns" : "http://zorba.io/annotations", "name" : "sequential", "value" : "" } ], "updating" : false, "parameters" : [ { "name" : "endpoint-url", "type" : "xs:string", "occurrence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> Mailchimp endpoint URL, e.g. http://us1.api.mailchimp.com/1.3/</div>" }, { "name" : "apikey", "type" : "xs:string", "occurrence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> a valid API Key for your user account. Get by visiting <a href=\"http://admin.mailchimp.com/account/api\" target=\"_blank\">your API dashboard</a></div>" }, { "name" : "id", "type" : "xs:string", "occurrence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> the list id to connect to. Get by calling <a href=\"#lists-4\">lists()</a></div>" } ], "returns" : { "type" : "item()*", "description" : "Array the desktop and mobile user agents in use on the list" }, "errors" : [  ] }, { "isDocumented" : true, "arity" : 2, "name" : "list-growth-history", "qname" : "mailchimp:list-growth-history", "signature" : "($apikey as xs:string, $id as xs:string) as item()*", "description" : " Convenience function for <a xmlns:xqdoc=\"http://www.xqdoc.org/1.0\" href=\"#list-growth-history-3\">list-growth-history#3</a>.\n", "summary" : "<p> Convenience function for  list-growth-history#3 .</p>", "annotation_str" : " %an:sequential", "annotations" : [ { "prefix" : "an", "ns" : "http://zorba.io/annotations", "name" : "sequential", "value" : "" } ], "updating" : false, "parameters" : [ { "name" : "apikey", "type" : "xs:string", "occurrence" : null, "description" : "" }, { "name" : "id", "type" : "xs:string", "occurrence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> the list id to connect to. Get by calling <a href=\"#lists-4\">lists()</a></div>" } ], "returns" : { "type" : "item()*", "description" : "Array of months and growth" }, "errors" : [  ] }, { "isDocumented" : true, "arity" : 3, "name" : "list-growth-history", "qname" : "mailchimp:list-growth-history", "signature" : "($endpoint-url as xs:string, $apikey as xs:string, $id as xs:string) as item()*", "description" : " Access the Growth History by Month for a given list.\n", "summary" : "<p> Access the Growth History by Month for a given list.</p>", "annotation_str" : " %an:sequential", "annotations" : [ { "prefix" : "an", "ns" : "http://zorba.io/annotations", "name" : "sequential", "value" : "" } ], "updating" : false, "parameters" : [ { "name" : "endpoint-url", "type" : "xs:string", "occurrence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> Mailchimp endpoint URL, e.g. http://us1.api.mailchimp.com/1.3/</div>" }, { "name" : "apikey", "type" : "xs:string", "occurrence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> a valid API Key for your user account. Get by visiting <a href=\"http://admin.mailchimp.com/account/api\" target=\"_blank\">your API dashboard</a></div>" }, { "name" : "id", "type" : "xs:string", "occurrence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> the list id to connect to. Get by calling <a href=\"#lists-4\">lists()</a></div>" } ], "returns" : { "type" : "item()*", "description" : "Array of months and growth" }, "errors" : [  ] }, { "isDocumented" : true, "arity" : 4, "name" : "list-interest-group-add", "qname" : "mailchimp:list-interest-group-add", "signature" : "($apikey as xs:string, $id as xs:string, $group_name as xs:string, $grouping_id as xs:integer) as item()*", "description" : " Convenience function for <a xmlns:xqdoc=\"http://www.xqdoc.org/1.0\" href=\"#list-interest-group-add-5\">list-interest-group-add#5</a>.\n", "summary" : "<p> Convenience function for  list-interest-group-add#5 .</p>", "annotation_str" : " %an:sequential", "annotations" : [ { "prefix" : "an", "ns" : "http://zorba.io/annotations", "name" : "sequential", "value" : "" } ], "updating" : false, "parameters" : [ { "name" : "apikey", "type" : "xs:string", "occurrence" : null, "description" : "" }, { "name" : "id", "type" : "xs:string", "occurrence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> the list id to connect to. Get by calling <a href=\"#lists-4\">lists()</a></div>" }, { "name" : "group_name", "type" : "xs:string", "occurrence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> the interest group to add - group names must be unique within a grouping</div>" }, { "name" : "grouping_id", "type" : "xs:integer", "occurrence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> ouping_id The grouping to add the new group to - get using <a href=\"#list-interest-groupings-2\">list-interest-groupings()</a>. If not supplied, the first grouping on the list is used.</div>" } ], "returns" : { "type" : "item()*", "description" : "True if the request succeeds, otherwise an error will be thrown" }, "errors" : [  ] }, { "isDocumented" : true, "arity" : 5, "name" : "list-interest-group-add", "qname" : "mailchimp:list-interest-group-add", "signature" : "($endpoint-url as xs:string, $apikey as xs:string, $id as xs:string, $group_name as xs:string, $grouping_id as xs:integer) as item()*", "description" : " Add a single Interest Group - if interest groups for the List are not yet enabled, adding the first group will automatically turn them on.\n", "summary" : "<p> Add a single Interest Group - if interest groups for the List are not yet enabled, adding the first group will automatically turn them on.</p>", "annotation_str" : " %an:sequential", "annotations" : [ { "prefix" : "an", "ns" : "http://zorba.io/annotations", "name" : "sequential", "value" : "" } ], "updating" : false, "parameters" : [ { "name" : "endpoint-url", "type" : "xs:string", "occurrence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> Mailchimp endpoint URL, e.g. http://us1.api.mailchimp.com/1.3/</div>" }, { "name" : "apikey", "type" : "xs:string", "occurrence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> a valid API Key for your user account. Get by visiting <a href=\"http://admin.mailchimp.com/account/api\" target=\"_blank\">your API dashboard</a></div>" }, { "name" : "id", "type" : "xs:string", "occurrence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> the list id to connect to. Get by calling <a href=\"#lists-4\">lists()</a></div>" }, { "name" : "group_name", "type" : "xs:string", "occurrence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> the interest group to add - group names must be unique within a grouping</div>" }, { "name" : "grouping_id", "type" : "xs:integer", "occurrence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> ouping_id The grouping to add the new group to - get using <a href=\"#list-interest-groupings-2\">list-interest-groupings()</a> . If not supplied, the first grouping on the list is used.</div>" } ], "returns" : { "type" : "item()*", "description" : "bool true if the request succeeds, otherwise an error will be thrown" }, "errors" : [  ] }, { "isDocumented" : true, "arity" : 4, "name" : "list-interest-group-del", "qname" : "mailchimp:list-interest-group-del", "signature" : "($apikey as xs:string, $id as xs:string, $group_name as xs:string, $grouping_id as xs:integer) as item()*", "description" : " Convenience function for <a xmlns:xqdoc=\"http://www.xqdoc.org/1.0\" href=\"#list-interest-group-del-5\">list-interest-group-del#5</a>.\n", "summary" : "<p> Convenience function for  list-interest-group-del#5 .</p>", "annotation_str" : " %an:sequential", "annotations" : [ { "prefix" : "an", "ns" : "http://zorba.io/annotations", "name" : "sequential", "value" : "" } ], "updating" : false, "parameters" : [ { "name" : "apikey", "type" : "xs:string", "occurrence" : null, "description" : "" }, { "name" : "id", "type" : "xs:string", "occurrence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> the list id to connect to. Get by calling <a href=\"#lists-4\">lists()</a></div>" }, { "name" : "group_name", "type" : "xs:string", "occurrence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> the interest group to delete</div>" }, { "name" : "grouping_id", "type" : "xs:integer", "occurrence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> The grouping to delete the group from - get using <a href=\"#list-interest-groupings-2\">list-interest-groupings()</a> . If not supplied, the first grouping on the list is used.</div>" } ], "returns" : { "type" : "item()*", "description" : "True if the request succeeds, otherwise an error will be thrown" }, "errors" : [  ] }, { "isDocumented" : true, "arity" : 5, "name" : "list-interest-group-del", "qname" : "mailchimp:list-interest-group-del", "signature" : "($endpoint-url as xs:string, $apikey as xs:string, $id as xs:string, $group_name as xs:string, $grouping_id as xs:integer) as item()*", "description" : " Delete a single Interest Group - if the last group for a list is deleted, this will also turn groups for the list off.\n", "summary" : "<p> Delete a single Interest Group - if the last group for a list is deleted, this will also turn groups for the list off.</p>", "annotation_str" : " %an:sequential", "annotations" : [ { "prefix" : "an", "ns" : "http://zorba.io/annotations", "name" : "sequential", "value" : "" } ], "updating" : false, "parameters" : [ { "name" : "endpoint-url", "type" : "xs:string", "occurrence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> Mailchimp endpoint URL, e.g. http://us1.api.mailchimp.com/1.3/</div>" }, { "name" : "apikey", "type" : "xs:string", "occurrence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> a valid API Key for your user account. Get by visiting <a href=\"http://admin.mailchimp.com/account/api\" target=\"_blank\">your API dashboard</a></div>" }, { "name" : "id", "type" : "xs:string", "occurrence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> the list id to connect to. Get by calling <a href=\"#lists-4\">lists()</a></div>" }, { "name" : "group_name", "type" : "xs:string", "occurrence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> the interest group to delete</div>" }, { "name" : "grouping_id", "type" : "xs:integer", "occurrence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> The grouping to delete the group from - get using <a href=\"#list-interest-groupings-2\">list-interest-groupings()</a> . If not supplied, the first grouping on the list is used.</div>" } ], "returns" : { "type" : "item()*", "description" : "True if the request succeeds, otherwise an error will be thrown" }, "errors" : [  ] }, { "isDocumented" : true, "arity" : 5, "name" : "list-interest-group-update", "qname" : "mailchimp:list-interest-group-update", "signature" : "($apikey as xs:string, $id as xs:string, $old_name as xs:string, $new_name as xs:string, $grouping_id as xs:integer) as item()*", "description" : " Convenience function for <a xmlns:xqdoc=\"http://www.xqdoc.org/1.0\" href=\"#list-interest-group-update-6\">list-interest-group-update#6</a>.\n", "summary" : "<p> Convenience function for  list-interest-group-update#6 .</p>", "annotation_str" : " %an:sequential", "annotations" : [ { "prefix" : "an", "ns" : "http://zorba.io/annotations", "name" : "sequential", "value" : "" } ], "updating" : false, "parameters" : [ { "name" : "apikey", "type" : "xs:string", "occurrence" : null, "description" : "" }, { "name" : "id", "type" : "xs:string", "occurrence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> the list id to connect to. Get by calling <a href=\"#lists-4\">lists()</a></div>" }, { "name" : "old_name", "type" : "xs:string", "occurrence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> the interest group name to be changed</div>" }, { "name" : "new_name", "type" : "xs:string", "occurrence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> the new interest group name to be set</div>" }, { "name" : "grouping_id", "type" : "xs:integer", "occurrence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> ouping_id The grouping to delete the group from - get using <a href=\"#list-interest-groupings-2\">list-interest-groupings()</a> . If not supplied, the first grouping on the list is used.</div>" } ], "returns" : { "type" : "item()*", "description" : "True if the request succeeds, otherwise an error will be thrown" }, "errors" : [  ] }, { "isDocumented" : true, "arity" : 6, "name" : "list-interest-group-update", "qname" : "mailchimp:list-interest-group-update", "signature" : "($endpoint-url as xs:string, $apikey as xs:string, $id as xs:string, $old_name as xs:string, $new_name as xs:string, $grouping_id as xs:integer) as item()*", "description" : " Change the name of an Interest Group.\n", "summary" : "<p> Change the name of an Interest Group.</p>", "annotation_str" : " %an:sequential", "annotations" : [ { "prefix" : "an", "ns" : "http://zorba.io/annotations", "name" : "sequential", "value" : "" } ], "updating" : false, "parameters" : [ { "name" : "endpoint-url", "type" : "xs:string", "occurrence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> Mailchimp endpoint URL, e.g. http://us1.api.mailchimp.com/1.3/</div>" }, { "name" : "apikey", "type" : "xs:string", "occurrence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> a valid API Key for your user account. Get by visiting <a href=\"http://admin.mailchimp.com/account/api\" target=\"_blank\">your API dashboard</a></div>" }, { "name" : "id", "type" : "xs:string", "occurrence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> the list id to connect to. Get by calling <a href=\"#lists-4\">lists()</a></div>" }, { "name" : "old_name", "type" : "xs:string", "occurrence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> the interest group name to be changed</div>" }, { "name" : "new_name", "type" : "xs:string", "occurrence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> the new interest group name to be set</div>" }, { "name" : "grouping_id", "type" : "xs:integer", "occurrence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> ouping_id The grouping to delete the group from - get using <a href=\"#list-interest-groupings-2\">list-interest-groupings()</a> . If not supplied, the first grouping on the list is used.</div>" } ], "returns" : { "type" : "item()*", "description" : "True if the request succeeds, otherwise an error will be thrown" }, "errors" : [  ] }, { "isDocumented" : true, "arity" : 5, "name" : "list-interest-grouping-add", "qname" : "mailchimp:list-interest-grouping-add", "signature" : "($apikey as xs:string, $id as xs:string, $name as xs:string, $type as xs:string, $groups as element(array)) as item()*", "description" : " Convenience function for <a xmlns:xqdoc=\"http://www.xqdoc.org/1.0\" href=\"#list-interest-grouping-add-6\">list-interest-grouping-add#6</a>.\n", "summary" : "<p> Convenience function for  list-interest-grouping-add#6 .</p>", "annotation_str" : " %an:sequential", "annotations" : [ { "prefix" : "an", "ns" : "http://zorba.io/annotations", "name" : "sequential", "value" : "" } ], "updating" : false, "parameters" : [ { "name" : "apikey", "type" : "xs:string", "occurrence" : null, "description" : "" }, { "name" : "id", "type" : "xs:string", "occurrence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> the list id to connect to. Get by calling <a href=\"#lists-4\">lists()</a></div>" }, { "name" : "name", "type" : "xs:string", "occurrence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> the interest grouping to add - grouping names must be unique</div>" }, { "name" : "type", "type" : "xs:string", "occurrence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> The type of the grouping to add - one of \"checkboxes\", \"hidden\", \"dropdown\", \"radio\"</div>" }, { "name" : "groups", "type" : "element(array)", "occurrence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> The lists of initial group names to be added - at least 1 is required and the names must be unique within a grouping. If the number takes you over the 60 group limit, an error will be thrown.</div>" } ], "returns" : { "type" : "item()*", "description" : "The new grouping id if the request succeeds, otherwise an error will be thrown" }, "errors" : [  ] }, { "isDocumented" : true, "arity" : 6, "name" : "list-interest-grouping-add", "qname" : "mailchimp:list-interest-grouping-add", "signature" : "($endpoint-url as xs:string, $apikey as xs:string, $id as xs:string, $name as xs:string, $type as xs:string, $groups as element(array)) as item()*", "description" : " Add a new Interest Grouping - if interest groups for the List are not yet enabled, adding the first grouping will automatically turn them on.\n", "summary" : "<p> Add a new Interest Grouping - if interest groups for the List are not yet enabled, adding the first grouping will automatically turn them on.</p>", "annotation_str" : " %an:sequential", "annotations" : [ { "prefix" : "an", "ns" : "http://zorba.io/annotations", "name" : "sequential", "value" : "" } ], "updating" : false, "parameters" : [ { "name" : "endpoint-url", "type" : "xs:string", "occurrence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> Mailchimp endpoint URL, e.g. http://us1.api.mailchimp.com/1.3/</div>" }, { "name" : "apikey", "type" : "xs:string", "occurrence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> a valid API Key for your user account. Get by visiting <a href=\"http://admin.mailchimp.com/account/api\" target=\"_blank\">your API dashboard</a></div>" }, { "name" : "id", "type" : "xs:string", "occurrence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> the list id to connect to. Get by calling <a href=\"#lists-4\">lists()</a></div>" }, { "name" : "name", "type" : "xs:string", "occurrence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> the interest grouping to add - grouping names must be unique</div>" }, { "name" : "type", "type" : "xs:string", "occurrence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> The type of the grouping to add - one of \"checkboxes\", \"hidden\", \"dropdown\", \"radio\"</div>" }, { "name" : "groups", "type" : "element(array)", "occurrence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> The lists of initial group names to be added - at least 1 is required and the names must be unique within a grouping. If the number takes you over the 60 group limit, an error will be thrown.</div>" } ], "returns" : { "type" : "item()*", "description" : "The new grouping id if the request succeeds, otherwise an error will be thrown" }, "errors" : [  ] }, { "isDocumented" : true, "arity" : 2, "name" : "list-interest-grouping-del", "qname" : "mailchimp:list-interest-grouping-del", "signature" : "($apikey as xs:string, $grouping_id as xs:integer) as item()*", "description" : " Convenience function for <a xmlns:xqdoc=\"http://www.xqdoc.org/1.0\" href=\"#list-interest-grouping-del-3\">list-interest-grouping-del#3</a>.\n", "summary" : "<p> Convenience function for  list-interest-grouping-del#3 .</p>", "annotation_str" : " %an:sequential", "annotations" : [ { "prefix" : "an", "ns" : "http://zorba.io/annotations", "name" : "sequential", "value" : "" } ], "updating" : false, "parameters" : [ { "name" : "apikey", "type" : "xs:string", "occurrence" : null, "description" : "" }, { "name" : "grouping_id", "type" : "xs:integer", "occurrence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> the interest grouping id - get from <a href=\"#list-interest-groupings-2\">list-interest-groupings()</a></div>" } ], "returns" : { "type" : "item()*", "description" : "True if the request succeeds, otherwise an error will be thrown" }, "errors" : [  ] }, { "isDocumented" : true, "arity" : 3, "name" : "list-interest-grouping-del", "qname" : "mailchimp:list-interest-grouping-del", "signature" : "($endpoint-url as xs:string, $apikey as xs:string, $grouping_id as xs:integer) as item()*", "description" : " Delete an existing Interest Grouping - this will permanently delete all contained interest groups and will remove those selections from all list members.\n", "summary" : "<p> Delete an existing Interest Grouping - this will permanently delete all contained interest groups and will remove those selections from all list members.</p>", "annotation_str" : " %an:sequential", "annotations" : [ { "prefix" : "an", "ns" : "http://zorba.io/annotations", "name" : "sequential", "value" : "" } ], "updating" : false, "parameters" : [ { "name" : "endpoint-url", "type" : "xs:string", "occurrence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> Mailchimp endpoint URL, e.g. http://us1.api.mailchimp.com/1.3/</div>" }, { "name" : "apikey", "type" : "xs:string", "occurrence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> a valid API Key for your user account. Get by visiting <a href=\"http://admin.mailchimp.com/account/api\" target=\"_blank\">your API dashboard</a></div>" }, { "name" : "grouping_id", "type" : "xs:integer", "occurrence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> the interest grouping id - get from <a href=\"#list-interest-groupings-2\">list-interest-groupings()</a></div>" } ], "returns" : { "type" : "item()*", "description" : "True if the request succeeds, otherwise an error will be thrown" }, "errors" : [  ] }, { "isDocumented" : true, "arity" : 4, "name" : "list-interest-grouping-update", "qname" : "mailchimp:list-interest-grouping-update", "signature" : "($apikey as xs:string, $grouping_id as xs:integer, $name as xs:string, $value as xs:string) as item()*", "description" : " Convenience function for <a xmlns:xqdoc=\"http://www.xqdoc.org/1.0\" href=\"#list-interest-grouping-update-5\">list-interest-grouping-update#5</a>.\n", "summary" : "<p> Convenience function for  list-interest-grouping-update#5 .</p>", "annotation_str" : " %an:sequential", "annotations" : [ { "prefix" : "an", "ns" : "http://zorba.io/annotations", "name" : "sequential", "value" : "" } ], "updating" : false, "parameters" : [ { "name" : "apikey", "type" : "xs:string", "occurrence" : null, "description" : "" }, { "name" : "grouping_id", "type" : "xs:integer", "occurrence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> the interest grouping id - get from <a href=\"#list-interest-groupings-2\">list-interest-groupings()</a></div>" }, { "name" : "name", "type" : "xs:string", "occurrence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> The name of the field to update - either \"name\" or \"type\". Groups with in the grouping should be manipulated using the standard listInterestGroup* methods</div>" }, { "name" : "value", "type" : "xs:string", "occurrence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> The new value of the field. Grouping names must be unique - only \"hidden\" and \"checkboxes\" grouping types can be converted between each other.</div>" } ], "returns" : { "type" : "item()*", "description" : "True if the request succeeds, otherwise an error will be thrown" }, "errors" : [  ] }, { "isDocumented" : true, "arity" : 5, "name" : "list-interest-grouping-update", "qname" : "mailchimp:list-interest-grouping-update", "signature" : "($endpoint-url as xs:string, $apikey as xs:string, $grouping_id as xs:integer, $name as xs:string, $value as xs:string) as item()*", "description" : " Update an existing Interest Grouping.\n", "summary" : "<p> Update an existing Interest Grouping.</p>", "annotation_str" : " %an:sequential", "annotations" : [ { "prefix" : "an", "ns" : "http://zorba.io/annotations", "name" : "sequential", "value" : "" } ], "updating" : false, "parameters" : [ { "name" : "endpoint-url", "type" : "xs:string", "occurrence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> Mailchimp endpoint URL, e.g. http://us1.api.mailchimp.com/1.3/</div>" }, { "name" : "apikey", "type" : "xs:string", "occurrence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> a valid API Key for your user account. Get by visiting <a href=\"http://admin.mailchimp.com/account/api\" target=\"_blank\">your API dashboard</a></div>" }, { "name" : "grouping_id", "type" : "xs:integer", "occurrence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> the interest grouping id - get from <a href=\"#list-interest-groupings-2\">list-interest-groupings()</a></div>" }, { "name" : "name", "type" : "xs:string", "occurrence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> The name of the field to update - either \"name\" or \"type\". Groups with in the grouping should be manipulated using the standard listInterestGroup* methods</div>" }, { "name" : "value", "type" : "xs:string", "occurrence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> The new value of the field. Grouping names must be unique - only \"hidden\" and \"checkboxes\" grouping types can be converted between each other.</div>" } ], "returns" : { "type" : "item()*", "description" : "True if the request succeeds, otherwise an error will be thrown" }, "errors" : [  ] }, { "isDocumented" : true, "arity" : 2, "name" : "list-interest-groupings", "qname" : "mailchimp:list-interest-groupings", "signature" : "($apikey as xs:string, $id as xs:string) as item()*", "description" : " Convenience function for <a xmlns:xqdoc=\"http://www.xqdoc.org/1.0\" href=\"#list-interest-groupings-3\">list-interest-groupings#3</a>.\n", "summary" : "<p> Convenience function for  list-interest-groupings#3 .</p>", "annotation_str" : " %an:sequential", "annotations" : [ { "prefix" : "an", "ns" : "http://zorba.io/annotations", "name" : "sequential", "value" : "" } ], "updating" : false, "parameters" : [ { "name" : "apikey", "type" : "xs:string", "occurrence" : null, "description" : "" }, { "name" : "id", "type" : "xs:string", "occurrence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> the list id to connect to. Get by calling <a href=\"#lists-4\">lists()</a></div>" } ], "returns" : { "type" : "item()*", "description" : "List of interest groups for the list" }, "errors" : [  ] }, { "isDocumented" : true, "arity" : 3, "name" : "list-interest-groupings", "qname" : "mailchimp:list-interest-groupings", "signature" : "($endpoint-url as xs:string, $apikey as xs:string, $id as xs:string) as item()*", "description" : " Get the list of interest groupings for a given list, including the label, form information, and included groups for each.\n", "summary" : "<p> Get the list of interest groupings for a given list, including the label, form information, and included groups for each.</p>", "annotation_str" : " %an:sequential", "annotations" : [ { "prefix" : "an", "ns" : "http://zorba.io/annotations", "name" : "sequential", "value" : "" } ], "updating" : false, "parameters" : [ { "name" : "endpoint-url", "type" : "xs:string", "occurrence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> Mailchimp endpoint URL, e.g. http://us1.api.mailchimp.com/1.3/</div>" }, { "name" : "apikey", "type" : "xs:string", "occurrence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> a valid API Key for your user account. Get by visiting <a href=\"http://admin.mailchimp.com/account/api\" target=\"_blank\">your API dashboard</a></div>" }, { "name" : "id", "type" : "xs:string", "occurrence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> the list id to connect to. Get by calling <a href=\"#lists-4\">lists()</a></div>" } ], "returns" : { "type" : "item()*", "description" : "List of interest groups for the list" }, "errors" : [  ] }, { "isDocumented" : true, "arity" : 2, "name" : "list-locations", "qname" : "mailchimp:list-locations", "signature" : "($apikey as xs:string, $id as xs:string) as item()*", "description" : " Convenience function for <a xmlns:xqdoc=\"http://www.xqdoc.org/1.0\" href=\"#list-locations-3\">list-locations#3</a>.\n", "summary" : "<p> Convenience function for  list-locations#3 .</p>", "annotation_str" : " %an:sequential", "annotations" : [ { "prefix" : "an", "ns" : "http://zorba.io/annotations", "name" : "sequential", "value" : "" } ], "updating" : false, "parameters" : [ { "name" : "apikey", "type" : "xs:string", "occurrence" : null, "description" : "" }, { "name" : "id", "type" : "xs:string", "occurrence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> the list id to connect to. Get by calling <a href=\"#lists-4\">lists()</a></div>" } ], "returns" : { "type" : "item()*", "description" : "Array of locations" }, "errors" : [  ] }, { "isDocumented" : true, "arity" : 3, "name" : "list-locations", "qname" : "mailchimp:list-locations", "signature" : "($endpoint-url as xs:string, $apikey as xs:string, $id as xs:string) as item()*", "description" : " Retrieve the locations (countries) that the list's subscribers have been tagged to based on geocoding their IP address.\n", "summary" : "<p> Retrieve the locations (countries) that the list's subscribers have been tagged to based on geocoding their IP address.</p>", "annotation_str" : " %an:sequential", "annotations" : [ { "prefix" : "an", "ns" : "http://zorba.io/annotations", "name" : "sequential", "value" : "" } ], "updating" : false, "parameters" : [ { "name" : "endpoint-url", "type" : "xs:string", "occurrence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> Mailchimp endpoint URL, e.g. http://us1.api.mailchimp.com/1.3/</div>" }, { "name" : "apikey", "type" : "xs:string", "occurrence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> a valid API Key for your user account. Get by visiting <a href=\"http://admin.mailchimp.com/account/api\" target=\"_blank\">your API dashboard</a></div>" }, { "name" : "id", "type" : "xs:string", "occurrence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> the list id to connect to. Get by calling <a href=\"#lists-4\">lists()</a></div>" } ], "returns" : { "type" : "item()*", "description" : "Array of locations" }, "errors" : [  ] }, { "isDocumented" : true, "arity" : 3, "name" : "list-member-activity", "qname" : "mailchimp:list-member-activity", "signature" : "($apikey as xs:string, $id as xs:string, $email_address as element(array)) as item()*", "description" : " Convenience function for <a xmlns:xqdoc=\"http://www.xqdoc.org/1.0\" href=\"#list-member-activity-4\">list-member-activity#4</a>.\n", "summary" : "<p> Convenience function for  list-member-activity#4 .</p>", "annotation_str" : " %an:sequential", "annotations" : [ { "prefix" : "an", "ns" : "http://zorba.io/annotations", "name" : "sequential", "value" : "" } ], "updating" : false, "parameters" : [ { "name" : "apikey", "type" : "xs:string", "occurrence" : null, "description" : "" }, { "name" : "id", "type" : "xs:string", "occurrence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> the list id to connect to. Get by calling <a href=\"#lists-4\">lists()</a></div>" }, { "name" : "email_address", "type" : "element(array)", "occurrence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> an array of up to 50 email addresses to get information for OR the \"id\"(s) for the member returned from listMembers, Webhooks, and Campaigns.</div>" } ], "returns" : { "type" : "item()*", "description" : "Array of data and success/error counts" }, "errors" : [  ] }, { "isDocumented" : true, "arity" : 4, "name" : "list-member-activity", "qname" : "mailchimp:list-member-activity", "signature" : "($endpoint-url as xs:string, $apikey as xs:string, $id as xs:string, $email_address as element(array)) as item()*", "description" : " Get the most recent 100 activities for particular list members (open, click, bounce, unsub, abuse, sent to).\n", "summary" : "<p> Get the most recent 100 activities for particular list members (open, click, bounce, unsub, abuse, sent to).</p>", "annotation_str" : " %an:sequential", "annotations" : [ { "prefix" : "an", "ns" : "http://zorba.io/annotations", "name" : "sequential", "value" : "" } ], "updating" : false, "parameters" : [ { "name" : "endpoint-url", "type" : "xs:string", "occurrence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> Mailchimp endpoint URL, e.g. http://us1.api.mailchimp.com/1.3/</div>" }, { "name" : "apikey", "type" : "xs:string", "occurrence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> a valid API Key for your user account. Get by visiting <a href=\"http://admin.mailchimp.com/account/api\" target=\"_blank\">your API dashboard</a></div>" }, { "name" : "id", "type" : "xs:string", "occurrence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> the list id to connect to. Get by calling <a href=\"#lists-4\">lists()</a></div>" }, { "name" : "email_address", "type" : "element(array)", "occurrence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> an array of up to 50 email addresses to get information for OR the \"id\"(s) for the member returned from listMembers, Webhooks, and Campaigns.</div>" } ], "returns" : { "type" : "item()*", "description" : "Array of data and success/error counts" }, "errors" : [  ] }, { "isDocumented" : true, "arity" : 3, "name" : "list-member-info", "qname" : "mailchimp:list-member-info", "signature" : "($apikey as xs:string, $id as xs:string, $email_address as element(array)) as item()*", "description" : " Convenience function for <a xmlns:xqdoc=\"http://www.xqdoc.org/1.0\" href=\"#list-member-info-4\">list-member-info#4</a>.\n", "summary" : "<p> Convenience function for  list-member-info#4 .</p>", "annotation_str" : " %an:sequential", "annotations" : [ { "prefix" : "an", "ns" : "http://zorba.io/annotations", "name" : "sequential", "value" : "" } ], "updating" : false, "parameters" : [ { "name" : "apikey", "type" : "xs:string", "occurrence" : null, "description" : "" }, { "name" : "id", "type" : "xs:string", "occurrence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> the list id to connect to. Get by calling <a href=\"#lists-4\">lists()</a></div>" }, { "name" : "email_address", "type" : "element(array)", "occurrence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> an array of up to 50 email addresses to get information for OR the \"id\"(s) for the member returned from listMembers, Webhooks, and Campaigns. For backwards compatibility, if a string is passed, it will be treated as an array with a single element (will not work with XML-RPC).</div>" } ], "returns" : { "type" : "item()*", "description" : "Array of list members with their info in an array (see Returned Fields for details)" }, "errors" : [  ] }, { "isDocumented" : true, "arity" : 4, "name" : "list-member-info", "qname" : "mailchimp:list-member-info", "signature" : "($endpoint-url as xs:string, $apikey as xs:string, $id as xs:string, $email_address as element(array)) as item()*", "description" : " Get all the information for particular members of a list.\n", "summary" : "<p> Get all the information for particular members of a list.</p>", "annotation_str" : " %an:sequential", "annotations" : [ { "prefix" : "an", "ns" : "http://zorba.io/annotations", "name" : "sequential", "value" : "" } ], "updating" : false, "parameters" : [ { "name" : "endpoint-url", "type" : "xs:string", "occurrence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> Mailchimp endpoint URL, e.g. http://us1.api.mailchimp.com/1.3/</div>" }, { "name" : "apikey", "type" : "xs:string", "occurrence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> a valid API Key for your user account. Get by visiting <a href=\"http://admin.mailchimp.com/account/api\" target=\"_blank\">your API dashboard</a></div>" }, { "name" : "id", "type" : "xs:string", "occurrence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> the list id to connect to. Get by calling <a href=\"#lists-4\">lists()</a></div>" }, { "name" : "email_address", "type" : "element(array)", "occurrence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> an array of up to 50 email addresses to get information for OR the \"id\"(s) for the member returned from listMembers, Webhooks, and Campaigns. For backwards compatibility, if a string is passed, it will be treated as an array with a single element (will not work with XML-RPC).</div>" } ], "returns" : { "type" : "item()*", "description" : "Array of list members with their info in an array (see Returned Fields for details)" }, "errors" : [  ] }, { "isDocumented" : true, "arity" : 6, "name" : "list-members", "qname" : "mailchimp:list-members", "signature" : "($apikey as xs:string, $id as xs:string, $status as xs:string, $since as xs:string, $start as xs:integer, $limit as xs:integer) as item()*", "description" : " Convenience function for <a xmlns:xqdoc=\"http://www.xqdoc.org/1.0\" href=\"#list-members-7\">list-members#7</a>.\n", "summary" : "<p> Convenience function for  list-members#7 .</p>", "annotation_str" : " %an:sequential", "annotations" : [ { "prefix" : "an", "ns" : "http://zorba.io/annotations", "name" : "sequential", "value" : "" } ], "updating" : false, "parameters" : [ { "name" : "apikey", "type" : "xs:string", "occurrence" : null, "description" : "" }, { "name" : "id", "type" : "xs:string", "occurrence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> the list id to connect to. Get by calling <a href=\"#lists-4\">lists()</a></div>" }, { "name" : "status", "type" : "xs:string", "occurrence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> the status to get members for - one of(subscribed, unsubscribed, <a target=\"_blank\" href=\"http://eepurl.com/dwk1\">cleaned</a>, updated), defaults to subscribed</div>" }, { "name" : "since", "type" : "xs:string", "occurrence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> optional pull all members whose status (subscribed/unsubscribed/cleaned) has changed or whose profile (updated) has changed since this date/time (in GMT) - format is YYYY-MM-DD HH:mm:ss (24hr)</div>" }, { "name" : "start", "type" : "xs:integer", "occurrence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> optional for large data sets, the page number to start at - defaults to 1st page of data (page 0)</div>" }, { "name" : "limit", "type" : "xs:integer", "occurrence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> optional for large data sets, the number of results to return - defaults to 100, upper limit set at 15000</div>" } ], "returns" : { "type" : "item()*", "description" : "Array of a the total records match and matching list member data for this page (see Returned Fields for details)" }, "errors" : [  ] }, { "isDocumented" : true, "arity" : 7, "name" : "list-members", "qname" : "mailchimp:list-members", "signature" : "($endpoint-url as xs:string, $apikey as xs:string, $id as xs:string, $status as xs:string, $since as xs:string, $start as xs:integer, $limit as xs:integer) as item()*", "description" : " Get all of the list members for a list that are of a particular status.\n", "summary" : "<p> Get all of the list members for a list that are of a particular status.</p>", "annotation_str" : " %an:sequential", "annotations" : [ { "prefix" : "an", "ns" : "http://zorba.io/annotations", "name" : "sequential", "value" : "" } ], "updating" : false, "parameters" : [ { "name" : "endpoint-url", "type" : "xs:string", "occurrence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> Mailchimp endpoint URL, e.g. http://us1.api.mailchimp.com/1.3/</div>" }, { "name" : "apikey", "type" : "xs:string", "occurrence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> a valid API Key for your user account. Get by visiting <a href=\"http://admin.mailchimp.com/account/api\" target=\"_blank\">your API dashboard</a></div>" }, { "name" : "id", "type" : "xs:string", "occurrence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> the list id to connect to. Get by calling <a href=\"#lists-4\">lists()</a></div>" }, { "name" : "status", "type" : "xs:string", "occurrence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> the status to get members for - one of(subscribed, unsubscribed, <a target=\"_blank\" href=\"http://eepurl.com/dwk1\">cleaned</a>, updated), defaults to subscribed</div>" }, { "name" : "since", "type" : "xs:string", "occurrence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> optional pull all members whose status (subscribed/unsubscribed/cleaned) has changed or whose profile (updated) has changed since this date/time (in GMT) - format is YYYY-MM-DD HH:mm:ss (24hr)</div>" }, { "name" : "start", "type" : "xs:integer", "occurrence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> optional for large data sets, the page number to start at - defaults to 1st page of data (page 0)</div>" }, { "name" : "limit", "type" : "xs:integer", "occurrence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> optional for large data sets, the number of results to return - defaults to 100, upper limit set at 15000</div>" } ], "returns" : { "type" : "item()*", "description" : "Array of a the total records match and matching list member data for this page (see Returned Fields for details)" }, "errors" : [  ] }, { "isDocumented" : true, "arity" : 5, "name" : "list-merge-var-add", "qname" : "mailchimp:list-merge-var-add", "signature" : "($apikey as xs:string, $id as xs:string, $tag as xs:string, $name as xs:string, $options as element(array)) as item()*", "description" : " Convenience function for <a xmlns:xqdoc=\"http://www.xqdoc.org/1.0\" href=\"#list-merge-var-add-6\">list-merge-var-add#6</a>.\n", "summary" : "<p> Convenience function for  list-merge-var-add#6 .</p>", "annotation_str" : " %an:sequential", "annotations" : [ { "prefix" : "an", "ns" : "http://zorba.io/annotations", "name" : "sequential", "value" : "" } ], "updating" : false, "parameters" : [ { "name" : "apikey", "type" : "xs:string", "occurrence" : null, "description" : "" }, { "name" : "id", "type" : "xs:string", "occurrence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> the list id to connect to. Get by calling <a href=\"#lists-4\">lists()</a></div>" }, { "name" : "tag", "type" : "xs:string", "occurrence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> The merge tag to add, e.g. FNAME</div>" }, { "name" : "name", "type" : "xs:string", "occurrence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> The long description of the tag being added, used for user displays</div>" }, { "name" : "options", "type" : "element(array)", "occurrence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> optional Various options for this merge var. <em>note:</em> for historical purposes this can also take a \"boolean\"</div>" } ], "returns" : { "type" : "item()*", "description" : "True if the request succeeds, otherwise an error will be thrown" }, "errors" : [  ] }, { "isDocumented" : true, "arity" : 6, "name" : "list-merge-var-add", "qname" : "mailchimp:list-merge-var-add", "signature" : "($endpoint-url as xs:string, $apikey as xs:string, $id as xs:string, $tag as xs:string, $name as xs:string, $options as element(array)) as item()*", "description" : " Add a new merge tag to a given list.\n", "summary" : "<p> Add a new merge tag to a given list.</p>", "annotation_str" : " %an:sequential", "annotations" : [ { "prefix" : "an", "ns" : "http://zorba.io/annotations", "name" : "sequential", "value" : "" } ], "updating" : false, "parameters" : [ { "name" : "endpoint-url", "type" : "xs:string", "occurrence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> Mailchimp endpoint URL, e.g. http://us1.api.mailchimp.com/1.3/</div>" }, { "name" : "apikey", "type" : "xs:string", "occurrence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> a valid API Key for your user account. Get by visiting <a href=\"http://admin.mailchimp.com/account/api\" target=\"_blank\">your API dashboard</a></div>" }, { "name" : "id", "type" : "xs:string", "occurrence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> the list id to connect to. Get by calling <a href=\"#lists-4\">lists()</a></div>" }, { "name" : "tag", "type" : "xs:string", "occurrence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> The merge tag to add, e.g. FNAME</div>" }, { "name" : "name", "type" : "xs:string", "occurrence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> The long description of the tag being added, used for user displays</div>" }, { "name" : "options", "type" : "element(array)", "occurrence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> optional Various options for this merge var. <em>note:</em> for historical purposes this can also take a \"boolean\"</div>" } ], "returns" : { "type" : "item()*", "description" : "True if the request succeeds, otherwise an error will be thrown" }, "errors" : [  ] }, { "isDocumented" : true, "arity" : 3, "name" : "list-merge-var-del", "qname" : "mailchimp:list-merge-var-del", "signature" : "($apikey as xs:string, $id as xs:string, $tag as xs:string) as item()*", "description" : " Convenience function for <a xmlns:xqdoc=\"http://www.xqdoc.org/1.0\" href=\"#list-merge-var-del-4\">list-merge-var-del#4</a>.\n", "summary" : "<p> Convenience function for  list-merge-var-del#4 .</p>", "annotation_str" : " %an:sequential", "annotations" : [ { "prefix" : "an", "ns" : "http://zorba.io/annotations", "name" : "sequential", "value" : "" } ], "updating" : false, "parameters" : [ { "name" : "apikey", "type" : "xs:string", "occurrence" : null, "description" : "" }, { "name" : "id", "type" : "xs:string", "occurrence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> the list id to connect to. Get by calling <a href=\"#lists-4\">lists()</a></div>" }, { "name" : "tag", "type" : "xs:string", "occurrence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> The merge tag to delete</div>" } ], "returns" : { "type" : "item()*", "description" : "bool true if the request succeeds, otherwise an error will be thrown" }, "errors" : [  ] }, { "isDocumented" : true, "arity" : 4, "name" : "list-merge-var-del", "qname" : "mailchimp:list-merge-var-del", "signature" : "($endpoint-url as xs:string, $apikey as xs:string, $id as xs:string, $tag as xs:string) as item()*", "description" : " Delete a merge tag from a given list and all its members. Seriously - the data is removed from all members as well! Note that on large lists this method may seem a bit slower than calls you typically make.\n", "summary" : "<p> Delete a merge tag from a given list and all its members.</p>", "annotation_str" : " %an:sequential", "annotations" : [ { "prefix" : "an", "ns" : "http://zorba.io/annotations", "name" : "sequential", "value" : "" } ], "updating" : false, "parameters" : [ { "name" : "endpoint-url", "type" : "xs:string", "occurrence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> Mailchimp endpoint URL, e.g. http://us1.api.mailchimp.com/1.3/</div>" }, { "name" : "apikey", "type" : "xs:string", "occurrence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> a valid API Key for your user account. Get by visiting <a href=\"http://admin.mailchimp.com/account/api\" target=\"_blank\">your API dashboard</a></div>" }, { "name" : "id", "type" : "xs:string", "occurrence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> the list id to connect to. Get by calling <a href=\"#lists-4\">lists()</a></div>" }, { "name" : "tag", "type" : "xs:string", "occurrence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> The merge tag to delete</div>" } ], "returns" : { "type" : "item()*", "description" : "True if the request succeeds, otherwise an error will be thrown" }, "errors" : [  ] }, { "isDocumented" : true, "arity" : 4, "name" : "list-merge-var-update", "qname" : "mailchimp:list-merge-var-update", "signature" : "($apikey as xs:string, $id as xs:string, $tag as xs:string, $options as element(array)) as item()*", "description" : " Convenience function for <a xmlns:xqdoc=\"http://www.xqdoc.org/1.0\" href=\"#list-merge-var-update-5\">list-merge-var-update#5</a>.\n", "summary" : "<p> Convenience function for  list-merge-var-update#5 .</p>", "annotation_str" : " %an:sequential", "annotations" : [ { "prefix" : "an", "ns" : "http://zorba.io/annotations", "name" : "sequential", "value" : "" } ], "updating" : false, "parameters" : [ { "name" : "apikey", "type" : "xs:string", "occurrence" : null, "description" : "" }, { "name" : "id", "type" : "xs:string", "occurrence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> the list id to connect to. Get by calling <a href=\"#lists-4\">lists()</a></div>" }, { "name" : "tag", "type" : "xs:string", "occurrence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> The merge tag to update</div>" }, { "name" : "options", "type" : "element(array)", "occurrence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> The options to change for a merge var. See <a href=\"#list-merge-var-add-5\">list-merge-var-add()</a> for valid options</div>" } ], "returns" : { "type" : "item()*", "description" : "True if the request succeeds, otherwise an error will be thrown" }, "errors" : [  ] }, { "isDocumented" : true, "arity" : 5, "name" : "list-merge-var-update", "qname" : "mailchimp:list-merge-var-update", "signature" : "($endpoint-url as xs:string, $apikey as xs:string, $id as xs:string, $tag as xs:string, $options as element(array)) as item()*", "description" : " Update most parameters for a merge tag on a given list. You cannot currently change the merge type.\n", "summary" : "<p> Update most parameters for a merge tag on a given list.</p>", "annotation_str" : " %an:sequential", "annotations" : [ { "prefix" : "an", "ns" : "http://zorba.io/annotations", "name" : "sequential", "value" : "" } ], "updating" : false, "parameters" : [ { "name" : "endpoint-url", "type" : "xs:string", "occurrence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> Mailchimp endpoint URL, e.g. http://us1.api.mailchimp.com/1.3/</div>" }, { "name" : "apikey", "type" : "xs:string", "occurrence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> a valid API Key for your user account. Get by visiting <a href=\"http://admin.mailchimp.com/account/api\" target=\"_blank\">your API dashboard</a></div>" }, { "name" : "id", "type" : "xs:string", "occurrence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> the list id to connect to. Get by calling <a href=\"#lists-4\">lists()</a></div>" }, { "name" : "tag", "type" : "xs:string", "occurrence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> The merge tag to update</div>" }, { "name" : "options", "type" : "element(array)", "occurrence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> The options to change for a merge var. See <a href=\"#list-merge-var-add-5\">list-merge-var-add()</a> for valid options</div>" } ], "returns" : { "type" : "item()*", "description" : "True if the request succeeds, otherwise an error will be thrown" }, "errors" : [  ] }, { "isDocumented" : true, "arity" : 2, "name" : "list-merge-vars", "qname" : "mailchimp:list-merge-vars", "signature" : "($apikey as xs:string, $id as xs:string) as item()*", "description" : " Convenience function for <a xmlns:xqdoc=\"http://www.xqdoc.org/1.0\" href=\"#list-merge-vars-3\">list-merge-vars#3</a>.\n", "summary" : "<p> Convenience function for  list-merge-vars#3 .</p>", "annotation_str" : " %an:sequential", "annotations" : [ { "prefix" : "an", "ns" : "http://zorba.io/annotations", "name" : "sequential", "value" : "" } ], "updating" : false, "parameters" : [ { "name" : "apikey", "type" : "xs:string", "occurrence" : null, "description" : "" }, { "name" : "id", "type" : "xs:string", "occurrence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> the list id to connect to. Get by calling <a href=\"#lists-4\">lists()</a></div>" } ], "returns" : { "type" : "item()*", "description" : "List of merge tags for the list" }, "errors" : [  ] }, { "isDocumented" : true, "arity" : 3, "name" : "list-merge-vars", "qname" : "mailchimp:list-merge-vars", "signature" : "($endpoint-url as xs:string, $apikey as xs:string, $id as xs:string) as item()*", "description" : " Get the list of merge tags for a given list, including their name, tag, and required setting.\n", "summary" : "<p> Get the list of merge tags for a given list, including their name, tag, and required setting.</p>", "annotation_str" : " %an:sequential", "annotations" : [ { "prefix" : "an", "ns" : "http://zorba.io/annotations", "name" : "sequential", "value" : "" } ], "updating" : false, "parameters" : [ { "name" : "endpoint-url", "type" : "xs:string", "occurrence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> Mailchimp endpoint URL, e.g. http://us1.api.mailchimp.com/1.3/</div>" }, { "name" : "apikey", "type" : "xs:string", "occurrence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> a valid API Key for your user account. Get by visiting <a href=\"http://admin.mailchimp.com/account/api\" target=\"_blank\">your API dashboard</a></div>" }, { "name" : "id", "type" : "xs:string", "occurrence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> the list id to connect to. Get by calling <a href=\"#lists-4\">lists()</a></div>" } ], "returns" : { "type" : "item()*", "description" : "List of merge tags for the list" }, "errors" : [  ] }, { "isDocumented" : true, "arity" : 3, "name" : "list-static-segment-add", "qname" : "mailchimp:list-static-segment-add", "signature" : "($apikey as xs:string, $id as xs:string, $name as xs:string) as item()*", "description" : " Convenience function for <a xmlns:xqdoc=\"http://www.xqdoc.org/1.0\" href=\"#list-static-segment-add-4\">list-static-segment-add#4</a>.\n", "summary" : "<p> Convenience function for  list-static-segment-add#4 .</p>", "annotation_str" : " %an:sequential", "annotations" : [ { "prefix" : "an", "ns" : "http://zorba.io/annotations", "name" : "sequential", "value" : "" } ], "updating" : false, "parameters" : [ { "name" : "apikey", "type" : "xs:string", "occurrence" : null, "description" : "" }, { "name" : "id", "type" : "xs:string", "occurrence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> the list id to connect to. Get by calling <a href=\"#lists-4\">lists()</a></div>" }, { "name" : "name", "type" : "xs:string", "occurrence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> a unique name per list for the segment - 50 byte maximum length, anything longer will throw an error</div>" } ], "returns" : { "type" : "item()*", "description" : "The id of the new segment, otherwise an error will be thrown." }, "errors" : [  ] }, { "isDocumented" : true, "arity" : 4, "name" : "list-static-segment-add", "qname" : "mailchimp:list-static-segment-add", "signature" : "($endpoint-url as xs:string, $apikey as xs:string, $id as xs:string, $name as xs:string) as item()*", "description" : " Save a segment against a list for later use. There is no limit to the number of segments which can be saved. Static Segments <strong xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">are not</strong> tied to any merge data, interest groups, etc. They essentially allow you to configure an unlimited number of custom segments which will have standard performance. When using proper segments, Static Segments are one of the available options for segmentation just as if you used a merge var (and they can be used with other segmentation options), though performance may degrade at that point.\n", "summary" : "<p> Save a segment against a list for later use.</p>", "annotation_str" : " %an:sequential", "annotations" : [ { "prefix" : "an", "ns" : "http://zorba.io/annotations", "name" : "sequential", "value" : "" } ], "updating" : false, "parameters" : [ { "name" : "endpoint-url", "type" : "xs:string", "occurrence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> Mailchimp endpoint URL, e.g. http://us1.api.mailchimp.com/1.3/</div>" }, { "name" : "apikey", "type" : "xs:string", "occurrence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> a valid API Key for your user account. Get by visiting <a href=\"http://admin.mailchimp.com/account/api\" target=\"_blank\">your API dashboard</a></div>" }, { "name" : "id", "type" : "xs:string", "occurrence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> the list id to connect to. Get by calling <a href=\"#lists-4\">lists()</a></div>" }, { "name" : "name", "type" : "xs:string", "occurrence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> a unique name per list for the segment - 50 byte maximum length, anything longer will throw an error</div>" } ], "returns" : { "type" : "item()*", "description" : "The id of the new segment, otherwise an error will be thrown." }, "errors" : [  ] }, { "isDocumented" : true, "arity" : 3, "name" : "list-static-segment-del", "qname" : "mailchimp:list-static-segment-del", "signature" : "($apikey as xs:string, $id as xs:string, $seg_id as xs:integer) as item()*", "description" : " Convenience function for <a xmlns:xqdoc=\"http://www.xqdoc.org/1.0\" href=\"#listStaticSegmentDel-4\">list-static-segment-del#4</a>.\n", "summary" : "<p> Convenience function for  list-static-segment-del#4 .</p>", "annotation_str" : " %an:sequential", "annotations" : [ { "prefix" : "an", "ns" : "http://zorba.io/annotations", "name" : "sequential", "value" : "" } ], "updating" : false, "parameters" : [ { "name" : "apikey", "type" : "xs:string", "occurrence" : null, "description" : "" }, { "name" : "id", "type" : "xs:string", "occurrence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> the list id to connect to. Get by calling <a href=\"#lists-4\">lists()</a></div>" }, { "name" : "seg_id", "type" : "xs:integer", "occurrence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> the id of the static segment to delete - get from <a href=\"#list-static-segments-2\">list-static-segments()</a></div>" } ], "returns" : { "type" : "item()*", "description" : "True if it worked, otherwise an error is thrown." }, "errors" : [  ] }, { "isDocumented" : true, "arity" : 4, "name" : "list-static-segment-del", "qname" : "mailchimp:list-static-segment-del", "signature" : "($endpoint-url as xs:string, $apikey as xs:string, $id as xs:string, $seg_id as xs:integer) as item()*", "description" : " Delete a static segment. Note that this will, of course, remove any member affiliations with the segment.\n", "summary" : "<p> Delete a static segment.</p>", "annotation_str" : " %an:sequential", "annotations" : [ { "prefix" : "an", "ns" : "http://zorba.io/annotations", "name" : "sequential", "value" : "" } ], "updating" : false, "parameters" : [ { "name" : "endpoint-url", "type" : "xs:string", "occurrence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> Mailchimp endpoint URL, e.g. http://us1.api.mailchimp.com/1.3/</div>" }, { "name" : "apikey", "type" : "xs:string", "occurrence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> a valid API Key for your user account. Get by visiting <a href=\"http://admin.mailchimp.com/account/api\" target=\"_blank\">your API dashboard</a></div>" }, { "name" : "id", "type" : "xs:string", "occurrence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> the list id to connect to. Get by calling <a href=\"#lists-4\">lists()</a></div>" }, { "name" : "seg_id", "type" : "xs:integer", "occurrence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> the id of the static segment to delete - get from <a href=\"#list-static-segments-2\">list-static-segments()</a></div>" } ], "returns" : { "type" : "item()*", "description" : "True if it worked, otherwise an error is thrown." }, "errors" : [  ] }, { "isDocumented" : true, "arity" : 4, "name" : "list-static-segment-members-add", "qname" : "mailchimp:list-static-segment-members-add", "signature" : "($apikey as xs:string, $id as xs:string, $seg_id as xs:integer, $batch as element(array)) as item()*", "description" : " Convenience function for <a xmlns:xqdoc=\"http://www.xqdoc.org/1.0\" href=\"#list-static-segment-members-add-5\">list-static-segment-members-add#5</a>.\n", "summary" : "<p> Convenience function for  list-static-segment-members-add#5 .</p>", "annotation_str" : " %an:sequential", "annotations" : [ { "prefix" : "an", "ns" : "http://zorba.io/annotations", "name" : "sequential", "value" : "" } ], "updating" : false, "parameters" : [ { "name" : "apikey", "type" : "xs:string", "occurrence" : null, "description" : "" }, { "name" : "id", "type" : "xs:string", "occurrence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> the list id to connect to. Get by calling <a href=\"#lists-4\">lists()</a></div>" }, { "name" : "seg_id", "type" : "xs:integer", "occurrence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> the id of the static segment to modify - get from <a href=\"#list-static-segments-2\">list-static-segments()</a></div>" }, { "name" : "batch", "type" : "element(array)", "occurrence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> an array of email addresses and/or unique_ids to add to the segment</div>" } ], "returns" : { "type" : "item()*", "description" : "An array with the results of the operation" }, "errors" : [  ] }, { "isDocumented" : true, "arity" : 5, "name" : "list-static-segment-members-add", "qname" : "mailchimp:list-static-segment-members-add", "signature" : "($endpoint-url as xs:string, $apikey as xs:string, $id as xs:string, $seg_id as xs:integer, $batch as element(array)) as item()*", "description" : " Add list members to a static segment. It is suggested that you limit batch size to no more than 10,000 addresses per call. Email addresses must exist on the list in order to be included - this <strong xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">will not</strong> subscribe them to the list!.\n", "summary" : "<p> Add list members to a static segment.</p>", "annotation_str" : " %an:sequential", "annotations" : [ { "prefix" : "an", "ns" : "http://zorba.io/annotations", "name" : "sequential", "value" : "" } ], "updating" : false, "parameters" : [ { "name" : "endpoint-url", "type" : "xs:string", "occurrence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> Mailchimp endpoint URL, e.g. http://us1.api.mailchimp.com/1.3/</div>" }, { "name" : "apikey", "type" : "xs:string", "occurrence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> a valid API Key for your user account. Get by visiting <a href=\"http://admin.mailchimp.com/account/api\" target=\"_blank\">your API dashboard</a></div>" }, { "name" : "id", "type" : "xs:string", "occurrence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> the list id to connect to. Get by calling <a href=\"#lists-4\">lists()</a></div>" }, { "name" : "seg_id", "type" : "xs:integer", "occurrence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> the id of the static segment to modify - get from <a href=\"#list-static-segments-2\">list-static-segments()</a></div>" }, { "name" : "batch", "type" : "element(array)", "occurrence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> an array of email addresses and/or unique_ids to add to the segment</div>" } ], "returns" : { "type" : "item()*", "description" : "array an array with the results of the operation" }, "errors" : [  ] }, { "isDocumented" : true, "arity" : 4, "name" : "list-static-segment-members-del", "qname" : "mailchimp:list-static-segment-members-del", "signature" : "($apikey as xs:string, $id as xs:string, $seg_id as xs:integer, $batch as element(array)) as item()*", "description" : " Convenience function for <a xmlns:xqdoc=\"http://www.xqdoc.org/1.0\" href=\"#list-static-segment-members-del-5\">list-static-segment-members-del#5</a>.\n", "summary" : "<p> Convenience function for  list-static-segment-members-del#5 .</p>", "annotation_str" : " %an:sequential", "annotations" : [ { "prefix" : "an", "ns" : "http://zorba.io/annotations", "name" : "sequential", "value" : "" } ], "updating" : false, "parameters" : [ { "name" : "apikey", "type" : "xs:string", "occurrence" : null, "description" : "" }, { "name" : "id", "type" : "xs:string", "occurrence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> the list id to connect to. Get by calling <a href=\"#lists-4\">lists()</a></div>" }, { "name" : "seg_id", "type" : "xs:integer", "occurrence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> the id of the static segment to delete - get from <a href=\"#list-static-segments-2\">list-static-segments()</a></div>" }, { "name" : "batch", "type" : "element(array)", "occurrence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> an array of email addresses and/or unique_ids to remove from the segment</div>" } ], "returns" : { "type" : "item()*", "description" : "An array with the results of the operation" }, "errors" : [  ] }, { "isDocumented" : true, "arity" : 5, "name" : "list-static-segment-members-del", "qname" : "mailchimp:list-static-segment-members-del", "signature" : "($endpoint-url as xs:string, $apikey as xs:string, $id as xs:string, $seg_id as xs:integer, $batch as element(array)) as item()*", "description" : " Remove list members from a static segment. It is suggested that you limit batch size to no more than 10,000 addresses per call. Email addresses must exist on the list in order to be removed - this <strong xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">will not</strong> unsubscribe them from the list!.\n", "summary" : "<p> Remove list members from a static segment.</p>", "annotation_str" : " %an:sequential", "annotations" : [ { "prefix" : "an", "ns" : "http://zorba.io/annotations", "name" : "sequential", "value" : "" } ], "updating" : false, "parameters" : [ { "name" : "endpoint-url", "type" : "xs:string", "occurrence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> Mailchimp endpoint URL, e.g. http://us1.api.mailchimp.com/1.3/</div>" }, { "name" : "apikey", "type" : "xs:string", "occurrence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> a valid API Key for your user account. Get by visiting <a href=\"http://admin.mailchimp.com/account/api\" target=\"_blank\">your API dashboard</a></div>" }, { "name" : "id", "type" : "xs:string", "occurrence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> the list id to connect to. Get by calling <a href=\"#lists-4\">lists()</a></div>" }, { "name" : "seg_id", "type" : "xs:integer", "occurrence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> the id of the static segment to delete - get from <a href=\"#list-static-segments-2\">list-static-segments()</a></div>" }, { "name" : "batch", "type" : "element(array)", "occurrence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> an array of email addresses and/or unique_ids to remove from the segment</div>" } ], "returns" : { "type" : "item()*", "description" : "An array with the results of the operation" }, "errors" : [  ] }, { "isDocumented" : true, "arity" : 3, "name" : "list-static-segment-reset", "qname" : "mailchimp:list-static-segment-reset", "signature" : "($apikey as xs:string, $id as xs:string, $seg_id as xs:integer) as item()*", "description" : " Convenience function for <a xmlns:xqdoc=\"http://www.xqdoc.org/1.0\" href=\"#list-static-segment-reset-4\">list-static-segment-reset#4</a>.\n", "summary" : "<p> Convenience function for  list-static-segment-reset#4 .</p>", "annotation_str" : " %an:sequential", "annotations" : [ { "prefix" : "an", "ns" : "http://zorba.io/annotations", "name" : "sequential", "value" : "" } ], "updating" : false, "parameters" : [ { "name" : "apikey", "type" : "xs:string", "occurrence" : null, "description" : "" }, { "name" : "id", "type" : "xs:string", "occurrence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> the list id to connect to. Get by calling <a href=\"#lists-4\">lists()</a></div>" }, { "name" : "seg_id", "type" : "xs:integer", "occurrence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> the id of the static segment to reset - get from <a href=\"#list-static-segments-2\">list-static-segments()</a></div>" } ], "returns" : { "type" : "item()*", "description" : "True if it worked, otherwise an error is thrown." }, "errors" : [  ] }, { "isDocumented" : true, "arity" : 4, "name" : "list-static-segment-reset", "qname" : "mailchimp:list-static-segment-reset", "signature" : "($endpoint-url as xs:string, $apikey as xs:string, $id as xs:string, $seg_id as xs:integer) as item()*", "description" : " Resets a static segment - removes <strong xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">all</strong> members from the static segment. Note: does not actually affect list member data.\n", "summary" : "<p> Resets a static segment - removes  all  members from the static segment.</p>", "annotation_str" : " %an:sequential", "annotations" : [ { "prefix" : "an", "ns" : "http://zorba.io/annotations", "name" : "sequential", "value" : "" } ], "updating" : false, "parameters" : [ { "name" : "endpoint-url", "type" : "xs:string", "occurrence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> Mailchimp endpoint URL, e.g. http://us1.api.mailchimp.com/1.3/</div>" }, { "name" : "apikey", "type" : "xs:string", "occurrence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> a valid API Key for your user account. Get by visiting <a href=\"http://admin.mailchimp.com/account/api\" target=\"_blank\">your API dashboard</a></div>" }, { "name" : "id", "type" : "xs:string", "occurrence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> the list id to connect to. Get by calling <a href=\"#lists-4\">lists()</a></div>" }, { "name" : "seg_id", "type" : "xs:integer", "occurrence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> the id of the static segment to reset - get from <a href=\"#list-static-segments-2\">list-static-segments()</a></div>" } ], "returns" : { "type" : "item()*", "description" : "True if it worked, otherwise an error is thrown." }, "errors" : [  ] }, { "isDocumented" : true, "arity" : 2, "name" : "list-static-segments", "qname" : "mailchimp:list-static-segments", "signature" : "($apikey as xs:string, $id as xs:string) as item()*", "description" : " Convenience function for <a xmlns:xqdoc=\"http://www.xqdoc.org/1.0\" href=\"#list-static-segments-3\">list-static-segments#3</a>.\n", "summary" : "<p> Convenience function for  list-static-segments#3 .</p>", "annotation_str" : " %an:sequential", "annotations" : [ { "prefix" : "an", "ns" : "http://zorba.io/annotations", "name" : "sequential", "value" : "" } ], "updating" : false, "parameters" : [ { "name" : "apikey", "type" : "xs:string", "occurrence" : null, "description" : "" }, { "name" : "id", "type" : "xs:string", "occurrence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> the list id to connect to. Get by calling <a href=\"#lists-4\">lists()</a></div>" } ], "returns" : { "type" : "item()*", "description" : "An array of parameters for each static segment" }, "errors" : [  ] }, { "isDocumented" : true, "arity" : 3, "name" : "list-static-segments", "qname" : "mailchimp:list-static-segments", "signature" : "($endpoint-url as xs:string, $apikey as xs:string, $id as xs:string) as item()*", "description" : " Retrieve all of the Static Segments for a list.\n", "summary" : "<p> Retrieve all of the Static Segments for a list.</p>", "annotation_str" : " %an:sequential", "annotations" : [ { "prefix" : "an", "ns" : "http://zorba.io/annotations", "name" : "sequential", "value" : "" } ], "updating" : false, "parameters" : [ { "name" : "endpoint-url", "type" : "xs:string", "occurrence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> Mailchimp endpoint URL, e.g. http://us1.api.mailchimp.com/1.3/</div>" }, { "name" : "apikey", "type" : "xs:string", "occurrence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> a valid API Key for your user account. Get by visiting <a href=\"http://admin.mailchimp.com/account/api\" target=\"_blank\">your API dashboard</a></div>" }, { "name" : "id", "type" : "xs:string", "occurrence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> the list id to connect to. Get by calling <a href=\"#lists-4\">lists()</a></div>" } ], "returns" : { "type" : "item()*", "description" : "An array of parameters for each static segment" }, "errors" : [  ] }, { "isDocumented" : true, "arity" : 10, "name" : "list-subscribe", "qname" : "mailchimp:list-subscribe", "signature" : "($endpoint-url as xs:string, $apikey as xs:string, $id as xs:string, $email_address as xs:string, $merge_vars as element(array), $email_type as xs:string, $double_optin as xs:boolean, $update_existing as xs:boolean, $replace_interests as xs:boolean, $send_welcome as xs:boolean) as item()*", "description" : " Subscribe the provided email to a list.\n", "summary" : "<p> Subscribe the provided email to a list.</p>", "annotation_str" : " %an:sequential", "annotations" : [ { "prefix" : "an", "ns" : "http://zorba.io/annotations", "name" : "sequential", "value" : "" } ], "updating" : false, "parameters" : [ { "name" : "endpoint-url", "type" : "xs:string", "occurrence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> Mailchimp endpoint URL, e.g. http://us1.api.mailchimp.com/1.3/</div>" }, { "name" : "apikey", "type" : "xs:string", "occurrence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> a valid API Key for your user account. Get by visiting <a href=\"http://admin.mailchimp.com/account/api\" target=\"_blank\">your API dashboard</a></div>" }, { "name" : "id", "type" : "xs:string", "occurrence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> the list id to connect to. Get by calling <a href=\"#lists-4\">lists()</a></div>" }, { "name" : "email_address", "type" : "xs:string", "occurrence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> the email address to subscribe</div>" }, { "name" : "merge_vars", "type" : "element(array)", "occurrence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> optional merges for the email (FNAME, LNAME, etc.) (see examples below for handling \"blank\" arrays). Note that a merge field can only hold up to 255 bytes. Also, there are a few \"special\" keys. See <a href=\"http://apidocs.mailchimp.com/rtfm/listsubscribe.func.php\">Mailchimp API documentation</a> for more information about the parameter structure.</div>" }, { "name" : "email_type", "type" : "xs:string", "occurrence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> optional email type preference for the email (html, text, or mobile defaults to html)</div>" }, { "name" : "double_optin", "type" : "xs:boolean", "occurrence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> optional flag to control whether a double opt-in confirmation message is sent, defaults to true. <em>Abusing this may cause your account to be suspended.</em></div>" }, { "name" : "update_existing", "type" : "xs:boolean", "occurrence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> optional flag to control whether a existing subscribers should be updated instead of throwing and error, defaults to false</div>" }, { "name" : "replace_interests", "type" : "xs:boolean", "occurrence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> optional flag to determine whether we replace the interest groups with the groups provided, or we add the provided groups to the member's interest groups (optional, defaults to true)</div>" }, { "name" : "send_welcome", "type" : "xs:boolean", "occurrence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> optional if your double_optin is false and this is true, we will send your lists Welcome Email if this subscribe succeeds - this will *not* fire if we end up updating an existing subscriber. If double_optin is true, this has no effect. defaults to false.</div>" } ], "returns" : { "type" : "item()*", "description" : "True on success, false on failure." }, "errors" : [  ] }, { "isDocumented" : true, "arity" : 9, "name" : "list-subscribe", "qname" : "mailchimp:list-subscribe", "signature" : "($apikey as xs:string, $id as xs:string, $email_address as xs:string, $merge_vars as element(array), $email_type as xs:string, $double_optin as xs:boolean, $update_existing as xs:boolean, $replace_interests as xs:boolean, $send_welcome as xs:boolean) as item()*", "description" : " Convenience function for <a xmlns:xqdoc=\"http://www.xqdoc.org/1.0\" href=\"#list-subscribe-10\">list-subscribe#10</a>.\n", "summary" : "<p> Convenience function for  list-subscribe#10 .</p>", "annotation_str" : " %an:sequential", "annotations" : [ { "prefix" : "an", "ns" : "http://zorba.io/annotations", "name" : "sequential", "value" : "" } ], "updating" : false, "parameters" : [ { "name" : "apikey", "type" : "xs:string", "occurrence" : null, "description" : "" }, { "name" : "id", "type" : "xs:string", "occurrence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> the list id to connect to. Get by calling <a href=\"#lists-4\">lists()</a></div>" }, { "name" : "email_address", "type" : "xs:string", "occurrence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> the email address to subscribe</div>" }, { "name" : "merge_vars", "type" : "element(array)", "occurrence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> optional merges for the email (FNAME, LNAME, etc.) (see examples below for handling \"blank\" arrays). Note that a merge field can only hold up to 255 bytes. Also, there are a few \"special\" keys. See <a href=\"http://apidocs.mailchimp.com/rtfm/listsubscribe.func.php\">Mailchimp API documentation</a> for more information about the parameter structure.</div>" }, { "name" : "email_type", "type" : "xs:string", "occurrence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> optional email type preference for the email (html, text, or mobile defaults to html)</div>" }, { "name" : "double_optin", "type" : "xs:boolean", "occurrence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> optional flag to control whether a double opt-in confirmation message is sent, defaults to true. <em>Abusing this may cause your account to be suspended.</em></div>" }, { "name" : "update_existing", "type" : "xs:boolean", "occurrence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> optional flag to control whether a existing subscribers should be updated instead of throwing and error, defaults to false</div>" }, { "name" : "replace_interests", "type" : "xs:boolean", "occurrence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> optional flag to determine whether we replace the interest groups with the groups provided, or we add the provided groups to the member's interest groups (optional, defaults to true)</div>" }, { "name" : "send_welcome", "type" : "xs:boolean", "occurrence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> optional if your double_optin is false and this is true, we will send your lists Welcome Email if this subscribe succeeds - this will *not* fire if we end up updating an existing subscriber. If double_optin is true, this has no effect. defaults to false.</div>" } ], "returns" : { "type" : "item()*", "description" : "True on success, false on failure." }, "errors" : [  ] }, { "isDocumented" : true, "arity" : 6, "name" : "list-unsubscribe", "qname" : "mailchimp:list-unsubscribe", "signature" : "($apikey as xs:string, $id as xs:string, $email_address as xs:string, $delete_member as xs:boolean, $send_goodbye as xs:boolean, $send_notify as xs:boolean) as item()*", "description" : " Convenience function for <a xmlns:xqdoc=\"http://www.xqdoc.org/1.0\" href=\"#list-unsubscribe-7\">list-unsubscribe#7</a>.\n", "summary" : "<p> Convenience function for  list-unsubscribe#7 .</p>", "annotation_str" : " %an:sequential", "annotations" : [ { "prefix" : "an", "ns" : "http://zorba.io/annotations", "name" : "sequential", "value" : "" } ], "updating" : false, "parameters" : [ { "name" : "apikey", "type" : "xs:string", "occurrence" : null, "description" : "" }, { "name" : "id", "type" : "xs:string", "occurrence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> the list id to connect to. Get by calling <a href=\"#lists-4\">lists()</a></div>" }, { "name" : "email_address", "type" : "xs:string", "occurrence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> the email address to unsubscribe OR the email \"id\" returned from listMemberInfo, Webhooks, and Campaigns</div>" }, { "name" : "delete_member", "type" : "xs:boolean", "occurrence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> flag to completely delete the member from your list instead of just unsubscribing, default to false</div>" }, { "name" : "send_goodbye", "type" : "xs:boolean", "occurrence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> flag to send the goodbye email to the email address, defaults to true</div>" }, { "name" : "send_notify", "type" : "xs:boolean", "occurrence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> flag to send the unsubscribe notification email to the address defined in the list email notification settings, defaults to true</div>" } ], "returns" : { "type" : "item()*", "description" : "True on success, false on failure." }, "errors" : [  ] }, { "isDocumented" : true, "arity" : 7, "name" : "list-unsubscribe", "qname" : "mailchimp:list-unsubscribe", "signature" : "($endpoint-url as xs:string, $apikey as xs:string, $id as xs:string, $email_address as xs:string, $delete_member as xs:boolean, $send_goodbye as xs:boolean, $send_notify as xs:boolean) as item()*", "description" : " Unsubscribe the given email address from the list.\n", "summary" : "<p> Unsubscribe the given email address from the list.</p>", "annotation_str" : " %an:sequential", "annotations" : [ { "prefix" : "an", "ns" : "http://zorba.io/annotations", "name" : "sequential", "value" : "" } ], "updating" : false, "parameters" : [ { "name" : "endpoint-url", "type" : "xs:string", "occurrence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> Mailchimp endpoint URL, e.g. http://us1.api.mailchimp.com/1.3/</div>" }, { "name" : "apikey", "type" : "xs:string", "occurrence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> a valid API Key for your user account. Get by visiting <a href=\"http://admin.mailchimp.com/account/api\" target=\"_blank\">your API dashboard</a></div>" }, { "name" : "id", "type" : "xs:string", "occurrence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> the list id to connect to. Get by calling <a href=\"#lists-4\">lists()</a></div>" }, { "name" : "email_address", "type" : "xs:string", "occurrence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> the email address to unsubscribe OR the email \"id\" returned from listMemberInfo, Webhooks, and Campaigns</div>" }, { "name" : "delete_member", "type" : "xs:boolean", "occurrence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> flag to completely delete the member from your list instead of just unsubscribing, default to false</div>" }, { "name" : "send_goodbye", "type" : "xs:boolean", "occurrence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> flag to send the goodbye email to the email address, defaults to true</div>" }, { "name" : "send_notify", "type" : "xs:boolean", "occurrence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> flag to send the unsubscribe notification email to the address defined in the list email notification settings, defaults to true</div>" } ], "returns" : { "type" : "item()*", "description" : "True on success, false on failure." }, "errors" : [  ] }, { "isDocumented" : true, "arity" : 6, "name" : "list-update-member", "qname" : "mailchimp:list-update-member", "signature" : "($apikey as xs:string, $id as xs:string, $email_address as xs:string, $merge_vars as element(array), $email_type as xs:string, $replace_interests as xs:boolean) as item()*", "description" : " Convenience function for <a xmlns:xqdoc=\"http://www.xqdoc.org/1.0\" href=\"#list-update-member-7\">list-update-member#7</a>.\n", "summary" : "<p> Convenience function for  list-update-member#7 .</p>", "annotation_str" : " %an:sequential", "annotations" : [ { "prefix" : "an", "ns" : "http://zorba.io/annotations", "name" : "sequential", "value" : "" } ], "updating" : false, "parameters" : [ { "name" : "apikey", "type" : "xs:string", "occurrence" : null, "description" : "" }, { "name" : "id", "type" : "xs:string", "occurrence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> the list id to connect to. Get by calling <a href=\"#lists-4\">lists()</a></div>" }, { "name" : "email_address", "type" : "xs:string", "occurrence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> the current email address of the member to update OR the \"id\" for the member returned from listMemberInfo, Webhooks, and Campaigns</div>" }, { "name" : "merge_vars", "type" : "element(array)", "occurrence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> array of new field values to update the member with. See merge_vars in <a href=\"#list-subscribe-10\">list-subscribe()</a> for details.</div>" }, { "name" : "email_type", "type" : "xs:string", "occurrence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> change the email type preference for the member (\"html\", \"text\", or \"mobile\"). Leave blank to keep the existing preference (optional)</div>" }, { "name" : "replace_interests", "type" : "xs:boolean", "occurrence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> flag to determine whether we replace the interest groups with the updated groups provided, or we add the provided groups to the member's interest groups (optional, defaults to true)</div>" } ], "returns" : { "type" : "item()*", "description" : "True on success, false on failure." }, "errors" : [  ] }, { "isDocumented" : true, "arity" : 7, "name" : "list-update-member", "qname" : "mailchimp:list-update-member", "signature" : "($endpoint-url as xs:string, $apikey as xs:string, $id as xs:string, $email_address as xs:string, $merge_vars as element(array), $email_type as xs:string, $replace_interests as xs:boolean) as item()*", "description" : " Edit the email address, merge fields, and interest groups for a list member. If you are doing a batch update on lots of users, consider using <a xmlns:xqdoc=\"http://www.xqdoc.org/1.0\" href=\"#list-batch-subscribe-6\">#list-batch-subscribe()</a> with the update_existing and possible replace_interests parameter.\n", "summary" : "<p> Edit the email address, merge fields, and interest groups for a list member.</p>", "annotation_str" : " %an:sequential", "annotations" : [ { "prefix" : "an", "ns" : "http://zorba.io/annotations", "name" : "sequential", "value" : "" } ], "updating" : false, "parameters" : [ { "name" : "endpoint-url", "type" : "xs:string", "occurrence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> Mailchimp endpoint URL, e.g. http://us1.api.mailchimp.com/1.3/</div>" }, { "name" : "apikey", "type" : "xs:string", "occurrence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> a valid API Key for your user account. Get by visiting <a href=\"http://admin.mailchimp.com/account/api\" target=\"_blank\">your API dashboard</a></div>" }, { "name" : "id", "type" : "xs:string", "occurrence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> the list id to connect to. Get by calling <a href=\"#lists-4\">lists()</a></div>" }, { "name" : "email_address", "type" : "xs:string", "occurrence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> the current email address of the member to update OR the \"id\" for the member returned from listMemberInfo, Webhooks, and Campaigns</div>" }, { "name" : "merge_vars", "type" : "element(array)", "occurrence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> array of new field values to update the member with. See merge_vars in <a href=\"#list-subscribe-10\">list-subscribe()</a> for details.</div>" }, { "name" : "email_type", "type" : "xs:string", "occurrence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> change the email type preference for the member (\"html\", \"text\", or \"mobile\"). Leave blank to keep the existing preference (optional)</div>" }, { "name" : "replace_interests", "type" : "xs:boolean", "occurrence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> flag to determine whether we replace the interest groups with the updated groups provided, or we add the provided groups to the member's interest groups (optional, defaults to true)</div>" } ], "returns" : { "type" : "item()*", "description" : "True on success, false on failure." }, "errors" : [  ] }, { "isDocumented" : true, "arity" : 5, "name" : "list-webhook-add", "qname" : "mailchimp:list-webhook-add", "signature" : "($apikey as xs:string, $id as xs:string, $url as xs:string, $actions as element(array), $sources as element(array)) as item()*", "description" : " Convenience function for <a xmlns:xqdoc=\"http://www.xqdoc.org/1.0\" href=\"#list-webhook-add-6\">list-webhook-add#6</a>.\n", "summary" : "<p> Convenience function for  list-webhook-add#6 .</p>", "annotation_str" : " %an:sequential", "annotations" : [ { "prefix" : "an", "ns" : "http://zorba.io/annotations", "name" : "sequential", "value" : "" } ], "updating" : false, "parameters" : [ { "name" : "apikey", "type" : "xs:string", "occurrence" : null, "description" : "" }, { "name" : "id", "type" : "xs:string", "occurrence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> the list id to connect to. Get by calling <a href=\"#lists-4\">lists()</a></div>" }, { "name" : "url", "type" : "xs:string", "occurrence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> a valid URL for the Webhook - it will be validated. note that a url may only exist on a list once.</div>" }, { "name" : "actions", "type" : "element(array)", "occurrence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> optional a hash of actions to fire this Webhook for</div>" }, { "name" : "sources", "type" : "element(array)", "occurrence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> optional a hash of sources to fire this Webhook for</div>" } ], "returns" : { "type" : "item()*", "description" : "True if the call succeeds, otherwise an exception will be thrown" }, "errors" : [  ] }, { "isDocumented" : true, "arity" : 6, "name" : "list-webhook-add", "qname" : "mailchimp:list-webhook-add", "signature" : "($endpoint-url as xs:string, $apikey as xs:string, $id as xs:string, $url as xs:string, $actions as element(array), $sources as element(array)) as item()*", "description" : " Add a new Webhook URL for the given list.\n", "summary" : "<p> Add a new Webhook URL for the given list.</p>", "annotation_str" : " %an:sequential", "annotations" : [ { "prefix" : "an", "ns" : "http://zorba.io/annotations", "name" : "sequential", "value" : "" } ], "updating" : false, "parameters" : [ { "name" : "endpoint-url", "type" : "xs:string", "occurrence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> Mailchimp endpoint URL, e.g. http://us1.api.mailchimp.com/1.3/</div>" }, { "name" : "apikey", "type" : "xs:string", "occurrence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> a valid API Key for your user account. Get by visiting <a href=\"http://admin.mailchimp.com/account/api\" target=\"_blank\">your API dashboard</a></div>" }, { "name" : "id", "type" : "xs:string", "occurrence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> the list id to connect to. Get by calling <a href=\"#lists-4\">lists()</a></div>" }, { "name" : "url", "type" : "xs:string", "occurrence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> a valid URL for the Webhook - it will be validated. note that a url may only exist on a list once.</div>" }, { "name" : "actions", "type" : "element(array)", "occurrence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> optional a hash of actions to fire this Webhook for</div>" }, { "name" : "sources", "type" : "element(array)", "occurrence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> optional a hash of sources to fire this Webhook for</div>" } ], "returns" : { "type" : "item()*", "description" : "True if the call succeeds, otherwise an exception will be thrown" }, "errors" : [  ] }, { "isDocumented" : true, "arity" : 3, "name" : "list-webhook-del", "qname" : "mailchimp:list-webhook-del", "signature" : "($apikey as xs:string, $id as xs:string, $url as xs:string) as item()*", "description" : " Convenience function for <a xmlns:xqdoc=\"http://www.xqdoc.org/1.0\" href=\"#list-webhook-del-4\">list-webhook-del#4</a>.\n", "summary" : "<p> Convenience function for  list-webhook-del#4 .</p>", "annotation_str" : " %an:sequential", "annotations" : [ { "prefix" : "an", "ns" : "http://zorba.io/annotations", "name" : "sequential", "value" : "" } ], "updating" : false, "parameters" : [ { "name" : "apikey", "type" : "xs:string", "occurrence" : null, "description" : "" }, { "name" : "id", "type" : "xs:string", "occurrence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> the list id to connect to. Get by calling <a href=\"#lists-4\">lists()</a></div>" }, { "name" : "url", "type" : "xs:string", "occurrence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> the URL of a Webhook on this list</div>" } ], "returns" : { "type" : "item()*", "description" : "True if the call succeeds, otherwise an exception will be thrown" }, "errors" : [  ] }, { "isDocumented" : true, "arity" : 4, "name" : "list-webhook-del", "qname" : "mailchimp:list-webhook-del", "signature" : "($endpoint-url as xs:string, $apikey as xs:string, $id as xs:string, $url as xs:string) as item()*", "description" : " Delete an existing Webhook URL from a given list.\n", "summary" : "<p> Delete an existing Webhook URL from a given list.</p>", "annotation_str" : " %an:sequential", "annotations" : [ { "prefix" : "an", "ns" : "http://zorba.io/annotations", "name" : "sequential", "value" : "" } ], "updating" : false, "parameters" : [ { "name" : "endpoint-url", "type" : "xs:string", "occurrence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> Mailchimp endpoint URL, e.g. http://us1.api.mailchimp.com/1.3/</div>" }, { "name" : "apikey", "type" : "xs:string", "occurrence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> a valid API Key for your user account. Get by visiting <a href=\"http://admin.mailchimp.com/account/api\" target=\"_blank\">your API dashboard</a></div>" }, { "name" : "id", "type" : "xs:string", "occurrence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> the list id to connect to. Get by calling <a href=\"#lists-4\">lists()</a></div>" }, { "name" : "url", "type" : "xs:string", "occurrence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> the URL of a Webhook on this list</div>" } ], "returns" : { "type" : "item()*", "description" : "True if the call succeeds, otherwise an exception will be thrown" }, "errors" : [  ] }, { "isDocumented" : true, "arity" : 2, "name" : "list-webhooks", "qname" : "mailchimp:list-webhooks", "signature" : "($apikey as xs:string, $id as xs:string) as item()*", "description" : " Convenience function for <a xmlns:xqdoc=\"http://www.xqdoc.org/1.0\" href=\"#list-webhooks-3\">list-webhooks#3</a>.\n", "summary" : "<p> Convenience function for  list-webhooks#3 .</p>", "annotation_str" : " %an:sequential", "annotations" : [ { "prefix" : "an", "ns" : "http://zorba.io/annotations", "name" : "sequential", "value" : "" } ], "updating" : false, "parameters" : [ { "name" : "apikey", "type" : "xs:string", "occurrence" : null, "description" : "" }, { "name" : "id", "type" : "xs:string", "occurrence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> the list id to connect to. Get by calling <a href=\"#lists-4\">lists()</a></div>" } ], "returns" : { "type" : "item()*", "description" : "List of webhooks" }, "errors" : [  ] }, { "isDocumented" : true, "arity" : 3, "name" : "list-webhooks", "qname" : "mailchimp:list-webhooks", "signature" : "($endpoint-url as xs:string, $apikey as xs:string, $id as xs:string) as item()*", "description" : " Return the Webhooks configured for the given list.\n", "summary" : "<p> Return the Webhooks configured for the given list.</p>", "annotation_str" : " %an:sequential", "annotations" : [ { "prefix" : "an", "ns" : "http://zorba.io/annotations", "name" : "sequential", "value" : "" } ], "updating" : false, "parameters" : [ { "name" : "endpoint-url", "type" : "xs:string", "occurrence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> Mailchimp endpoint URL, e.g. http://us1.api.mailchimp.com/1.3/</div>" }, { "name" : "apikey", "type" : "xs:string", "occurrence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> a valid API Key for your user account. Get by visiting <a href=\"http://admin.mailchimp.com/account/api\" target=\"_blank\">your API dashboard</a></div>" }, { "name" : "id", "type" : "xs:string", "occurrence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> the list id to connect to. Get by calling <a href=\"#lists-4\">lists()</a></div>" } ], "returns" : { "type" : "item()*", "description" : "List of webhooks" }, "errors" : [  ] }, { "isDocumented" : true, "arity" : 2, "name" : "lists-for-email", "qname" : "mailchimp:lists-for-email", "signature" : "($apikey as xs:string, $email_address as xs:string) as item()*", "description" : " Convenience function for <a xmlns:xqdoc=\"http://www.xqdoc.org/1.0\" href=\"#lists-for-email-3\">lists-for-email#3</a>.\n", "summary" : "<p> Convenience function for  lists-for-email#3 .</p>", "annotation_str" : " %an:sequential", "annotations" : [ { "prefix" : "an", "ns" : "http://zorba.io/annotations", "name" : "sequential", "value" : "" } ], "updating" : false, "parameters" : [ { "name" : "apikey", "type" : "xs:string", "occurrence" : null, "description" : "" }, { "name" : "email_address", "type" : "xs:string", "occurrence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> the email address to check OR the email \"id\" returned from listMemberInfo, Webhooks, and Campaigns</div>" } ], "returns" : { "type" : "item()*", "description" : "An array of list_ids the member is subscribed to." }, "errors" : [  ] }, { "isDocumented" : true, "arity" : 3, "name" : "lists-for-email", "qname" : "mailchimp:lists-for-email", "signature" : "($endpoint-url as xs:string, $apikey as xs:string, $email_address as xs:string) as item()*", "description" : " Retrieve all List Ids a member is subscribed to.\n", "summary" : "<p> Retrieve all List Ids a member is subscribed to.</p>", "annotation_str" : " %an:sequential", "annotations" : [ { "prefix" : "an", "ns" : "http://zorba.io/annotations", "name" : "sequential", "value" : "" } ], "updating" : false, "parameters" : [ { "name" : "endpoint-url", "type" : "xs:string", "occurrence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> Mailchimp endpoint URL, e.g. http://us1.api.mailchimp.com/1.3/</div>" }, { "name" : "apikey", "type" : "xs:string", "occurrence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> a valid API Key for your user account. Get by visiting <a href=\"http://admin.mailchimp.com/account/api\" target=\"_blank\">your API dashboard</a></div>" }, { "name" : "email_address", "type" : "xs:string", "occurrence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> the email address to check OR the email \"id\" returned from listMemberInfo, Webhooks, and Campaigns</div>" } ], "returns" : { "type" : "item()*", "description" : "An array of list_ids the member is subscribed to." }, "errors" : [  ] }, { "isDocumented" : true, "arity" : 4, "name" : "lists", "qname" : "mailchimp:lists", "signature" : "($apikey as xs:string, $filters as element(array), $start as xs:integer, $limit as xs:integer) as item()*", "description" : " Convenience function for <a xmlns:xqdoc=\"http://www.xqdoc.org/1.0\" href=\"#lists-5\">lists#5</a>.\n", "summary" : "<p> Convenience function for  lists#5 .</p>", "annotation_str" : " %an:sequential", "annotations" : [ { "prefix" : "an", "ns" : "http://zorba.io/annotations", "name" : "sequential", "value" : "" } ], "updating" : false, "parameters" : [ { "name" : "apikey", "type" : "xs:string", "occurrence" : null, "description" : "" }, { "name" : "filters", "type" : "element(array)", "occurrence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> a hash of filters to apply to this query - all are optional. See <a href=\"http://apidocs.mailchimp.com/rtfm/lists.func.php\">Mailchimp API documentation</a> for more information about the parameter structure.</div>" }, { "name" : "start", "type" : "xs:integer", "occurrence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> optional - control paging of lists, start results at this list #, defaults to 1st page of data (page 0)</div>" }, { "name" : "limit", "type" : "xs:integer", "occurrence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> optional - control paging of lists, number of lists to return with each call, defaults to 25 (max=100)</div>" } ], "returns" : { "type" : "item()*", "description" : "Array with keys listed in Returned Fields below" }, "errors" : [  ] }, { "isDocumented" : true, "arity" : 5, "name" : "lists", "qname" : "mailchimp:lists", "signature" : "($endpoint-url as xs:string, $apikey as xs:string, $filters as element(array), $start as xs:integer, $limit as xs:integer) as item()*", "description" : " Retrieve all of the lists defined for your user account.\n", "summary" : "<p> Retrieve all of the lists defined for your user account.</p>", "annotation_str" : " %an:sequential", "annotations" : [ { "prefix" : "an", "ns" : "http://zorba.io/annotations", "name" : "sequential", "value" : "" } ], "updating" : false, "parameters" : [ { "name" : "endpoint-url", "type" : "xs:string", "occurrence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> Mailchimp endpoint URL, e.g. http://us1.api.mailchimp.com/1.3/</div>" }, { "name" : "apikey", "type" : "xs:string", "occurrence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> a valid API Key for your user account. Get by visiting <a href=\"http://admin.mailchimp.com/account/api\" target=\"_blank\">your API dashboard</a></div>" }, { "name" : "filters", "type" : "element(array)", "occurrence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> a hash of filters to apply to this query - all are optional. See <a href=\"http://apidocs.mailchimp.com/rtfm/lists.func.php\">Mailchimp API documentation</a> for more information about the parameter structure.</div>" }, { "name" : "start", "type" : "xs:integer", "occurrence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> optional - control paging of lists, start results at this list #, defaults to 1st page of data (page 0)</div>" }, { "name" : "limit", "type" : "xs:integer", "occurrence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> optional - control paging of lists, number of lists to return with each call, defaults to 25 (max=100)</div>" } ], "returns" : { "type" : "item()*", "description" : "Array with keys listed in Returned Fields below" }, "errors" : [  ] }, { "isDocumented" : true, "arity" : 1, "name" : "ping", "qname" : "mailchimp:ping", "signature" : "($apikey as xs:string) as item()*", "description" : " Convenience function for <a xmlns:xqdoc=\"http://www.xqdoc.org/1.0\" href=\"#ping-2\">ping#2</a>.\n", "summary" : "<p> Convenience function for  ping#2 .</p>", "annotation_str" : " %an:sequential", "annotations" : [ { "prefix" : "an", "ns" : "http://zorba.io/annotations", "name" : "sequential", "value" : "" } ], "updating" : false, "parameters" : [ { "name" : "apikey", "type" : "xs:string", "occurrence" : null, "description" : "" } ], "returns" : { "type" : "item()*", "description" : "Returns \"Everything's Chimpy!\" if everything is chimpy, otherwise returns an error message" }, "errors" : [  ] }, { "isDocumented" : true, "arity" : 2, "name" : "ping", "qname" : "mailchimp:ping", "signature" : "($endpoint-url as xs:string, $apikey as xs:string) as item()*", "description" : " \"Ping\" the MailChimp API - a simple method you can call that will return a constant value as long as everything is good. Note than unlike most all of our methods, we don't throw an Exception if we are having issues. You will simply receive a different string back that will explain our view on what is going on.\n", "summary" : "<p> \"Ping\" the MailChimp API - a simple method you can call that will return a constant value as long as everything is good.</p>", "annotation_str" : " %an:sequential", "annotations" : [ { "prefix" : "an", "ns" : "http://zorba.io/annotations", "name" : "sequential", "value" : "" } ], "updating" : false, "parameters" : [ { "name" : "endpoint-url", "type" : "xs:string", "occurrence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> Mailchimp endpoint URL, e.g. http://us1.api.mailchimp.com/1.3/</div>" }, { "name" : "apikey", "type" : "xs:string", "occurrence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> a valid API Key for your user account. Get by visiting <a href=\"http://admin.mailchimp.com/account/api\" target=\"_blank\">your API dashboard</a></div>" } ], "returns" : { "type" : "item()*", "description" : "Returns \"Everything's Chimpy!\" if everything is chimpy, otherwise returns an error message" }, "errors" : [  ] }, { "isDocumented" : true, "arity" : 3, "name" : "template-add", "qname" : "mailchimp:template-add", "signature" : "($apikey as xs:string, $name as xs:string, $html as xs:string) as item()*", "description" : " Convenience function for <a xmlns:xqdoc=\"http://www.xqdoc.org/1.0\" href=\"#template-add-4\">template-add#4</a>.\n", "summary" : "<p> Convenience function for  template-add#4 .</p>", "annotation_str" : " %an:sequential", "annotations" : [ { "prefix" : "an", "ns" : "http://zorba.io/annotations", "name" : "sequential", "value" : "" } ], "updating" : false, "parameters" : [ { "name" : "apikey", "type" : "xs:string", "occurrence" : null, "description" : "" }, { "name" : "name", "type" : "xs:string", "occurrence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> the name for the template - names must be unique and a max of 50 bytes</div>" }, { "name" : "html", "type" : "xs:string", "occurrence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> a string specifying the entire template to be created. This is <strong>NOT</strong> campaign content. They are intended to utilize our <a href=\"http://www.mailchimp.com/resources/email-template-language/\" target=\"_blank\">template language</a>.</div>" } ], "returns" : { "type" : "item()*", "description" : "The new template id, otherwise an error is thrown." }, "errors" : [  ] }, { "isDocumented" : true, "arity" : 4, "name" : "template-add", "qname" : "mailchimp:template-add", "signature" : "($endpoint-url as xs:string, $apikey as xs:string, $name as xs:string, $html as xs:string) as item()*", "description" : " Create a new user template, <strong xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">NOT</strong> campaign content. These templates can then be applied while creating campaigns.\n", "summary" : "<p> Create a new user template,  NOT  campaign content.</p>", "annotation_str" : " %an:sequential", "annotations" : [ { "prefix" : "an", "ns" : "http://zorba.io/annotations", "name" : "sequential", "value" : "" } ], "updating" : false, "parameters" : [ { "name" : "endpoint-url", "type" : "xs:string", "occurrence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> Mailchimp endpoint URL, e.g. http://us1.api.mailchimp.com/1.3/</div>" }, { "name" : "apikey", "type" : "xs:string", "occurrence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> a valid API Key for your user account. Get by visiting <a href=\"http://admin.mailchimp.com/account/api\" target=\"_blank\">your API dashboard</a></div>" }, { "name" : "name", "type" : "xs:string", "occurrence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> the name for the template - names must be unique and a max of 50 bytes</div>" }, { "name" : "html", "type" : "xs:string", "occurrence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> a string specifying the entire template to be created. This is <strong>NOT</strong> campaign content. They are intended to utilize our <a href=\"http://www.mailchimp.com/resources/email-template-language/\" target=\"_blank\">template language</a>.</div>" } ], "returns" : { "type" : "item()*", "description" : "The new template id, otherwise an error is thrown." }, "errors" : [  ] }, { "isDocumented" : true, "arity" : 2, "name" : "template-del", "qname" : "mailchimp:template-del", "signature" : "($apikey as xs:string, $id as xs:integer) as item()*", "description" : " Convenience function for <a xmlns:xqdoc=\"http://www.xqdoc.org/1.0\" href=\"#template-del-3\">template-del#3</a>.\n", "summary" : "<p> Convenience function for  template-del#3 .</p>", "annotation_str" : " %an:sequential", "annotations" : [ { "prefix" : "an", "ns" : "http://zorba.io/annotations", "name" : "sequential", "value" : "" } ], "updating" : false, "parameters" : [ { "name" : "apikey", "type" : "xs:string", "occurrence" : null, "description" : "" }, { "name" : "id", "type" : "xs:integer", "occurrence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> the id of the user template to delete</div>" } ], "returns" : { "type" : "item()*", "description" : "True if the template was deleted, otherwise an error will be thrown" }, "errors" : [  ] }, { "isDocumented" : true, "arity" : 3, "name" : "template-del", "qname" : "mailchimp:template-del", "signature" : "($endpoint-url as xs:string, $apikey as xs:string, $id as xs:integer) as item()*", "description" : " Delete (deactivate) a user template.\n", "summary" : "<p> Delete (deactivate) a user template.</p>", "annotation_str" : " %an:sequential", "annotations" : [ { "prefix" : "an", "ns" : "http://zorba.io/annotations", "name" : "sequential", "value" : "" } ], "updating" : false, "parameters" : [ { "name" : "endpoint-url", "type" : "xs:string", "occurrence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> Mailchimp endpoint URL, e.g. http://us1.api.mailchimp.com/1.3/</div>" }, { "name" : "apikey", "type" : "xs:string", "occurrence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> a valid API Key for your user account. Get by visiting <a href=\"http://admin.mailchimp.com/account/api\" target=\"_blank\">your API dashboard</a></div>" }, { "name" : "id", "type" : "xs:integer", "occurrence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> the id of the user template to delete</div>" } ], "returns" : { "type" : "item()*", "description" : "True if the template was deleted, otherwise an error will be thrown" }, "errors" : [  ] }, { "isDocumented" : true, "arity" : 3, "name" : "template-info", "qname" : "mailchimp:template-info", "signature" : "($apikey as xs:string, $tid as xs:integer, $type as xs:string) as item()*", "description" : " Convenience function for <a xmlns:xqdoc=\"http://www.xqdoc.org/1.0\" href=\"#template-info-4\">template-info#4</a>.\n", "summary" : "<p> Convenience function for  template-info#4 .</p>", "annotation_str" : " %an:sequential", "annotations" : [ { "prefix" : "an", "ns" : "http://zorba.io/annotations", "name" : "sequential", "value" : "" } ], "updating" : false, "parameters" : [ { "name" : "apikey", "type" : "xs:string", "occurrence" : null, "description" : "" }, { "name" : "tid", "type" : "xs:integer", "occurrence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> the template id - get from templates()</div>" }, { "name" : "type", "type" : "xs:string", "occurrence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> the template type to load - one of 'user', 'gallery', 'base'</div>" } ], "returns" : { "type" : "item()*", "description" : "An array of info to be used when editing" }, "errors" : [  ] }, { "isDocumented" : true, "arity" : 4, "name" : "template-info", "qname" : "mailchimp:template-info", "signature" : "($endpoint-url as xs:string, $apikey as xs:string, $tid as xs:integer, $type as xs:string) as item()*", "description" : " Pull details for a specific template to help support editing.\n", "summary" : "<p> Pull details for a specific template to help support editing.</p>", "annotation_str" : " %an:sequential", "annotations" : [ { "prefix" : "an", "ns" : "http://zorba.io/annotations", "name" : "sequential", "value" : "" } ], "updating" : false, "parameters" : [ { "name" : "endpoint-url", "type" : "xs:string", "occurrence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> Mailchimp endpoint URL, e.g. http://us1.api.mailchimp.com/1.3/</div>" }, { "name" : "apikey", "type" : "xs:string", "occurrence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> a valid API Key for your user account. Get by visiting <a href=\"http://admin.mailchimp.com/account/api\" target=\"_blank\">your API dashboard</a></div>" }, { "name" : "tid", "type" : "xs:integer", "occurrence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> the template id - get from templates()</div>" }, { "name" : "type", "type" : "xs:string", "occurrence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> the template type to load - one of 'user', 'gallery', 'base'</div>" } ], "returns" : { "type" : "item()*", "description" : "An array of info to be used when editing" }, "errors" : [  ] }, { "isDocumented" : true, "arity" : 2, "name" : "template-undel", "qname" : "mailchimp:template-undel", "signature" : "($apikey as xs:string, $id as xs:integer) as item()*", "description" : " Convenience function for <a xmlns:xqdoc=\"http://www.xqdoc.org/1.0\" href=\"#template-undel-3\">template-undel#3</a>.\n", "summary" : "<p> Convenience function for  template-undel#3 .</p>", "annotation_str" : " %an:sequential", "annotations" : [ { "prefix" : "an", "ns" : "http://zorba.io/annotations", "name" : "sequential", "value" : "" } ], "updating" : false, "parameters" : [ { "name" : "apikey", "type" : "xs:string", "occurrence" : null, "description" : "" }, { "name" : "id", "type" : "xs:integer", "occurrence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> the id of the user template to reactivate</div>" } ], "returns" : { "type" : "item()*", "description" : "boolean true if the template was deleted, otherwise an error will be thrown" }, "errors" : [  ] }, { "isDocumented" : true, "arity" : 3, "name" : "template-undel", "qname" : "mailchimp:template-undel", "signature" : "($endpoint-url as xs:string, $apikey as xs:string, $id as xs:integer) as item()*", "description" : " Undelete (reactivate) a user template.\n", "summary" : "<p> Undelete (reactivate) a user template.</p>", "annotation_str" : " %an:sequential", "annotations" : [ { "prefix" : "an", "ns" : "http://zorba.io/annotations", "name" : "sequential", "value" : "" } ], "updating" : false, "parameters" : [ { "name" : "endpoint-url", "type" : "xs:string", "occurrence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> Mailchimp endpoint URL, e.g. http://us1.api.mailchimp.com/1.3/</div>" }, { "name" : "apikey", "type" : "xs:string", "occurrence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> a valid API Key for your user account. Get by visiting <a href=\"http://admin.mailchimp.com/account/api\" target=\"_blank\">your API dashboard</a></div>" }, { "name" : "id", "type" : "xs:integer", "occurrence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> the id of the user template to reactivate</div>" } ], "returns" : { "type" : "item()*", "description" : "boolean true if the template was deleted, otherwise an error will be thrown" }, "errors" : [  ] }, { "isDocumented" : true, "arity" : 3, "name" : "template-update", "qname" : "mailchimp:template-update", "signature" : "($apikey as xs:string, $id as xs:integer, $values as element(array)) as item()*", "description" : " Convenience function for <a xmlns:xqdoc=\"http://www.xqdoc.org/1.0\" href=\"#template-update-4\">template-update#4</a>.\n", "summary" : "<p> Convenience function for  template-update#4 .</p>", "annotation_str" : " %an:sequential", "annotations" : [ { "prefix" : "an", "ns" : "http://zorba.io/annotations", "name" : "sequential", "value" : "" } ], "updating" : false, "parameters" : [ { "name" : "apikey", "type" : "xs:string", "occurrence" : null, "description" : "" }, { "name" : "id", "type" : "xs:integer", "occurrence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> the id of the user template to update</div>" }, { "name" : "values", "type" : "element(array)", "occurrence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> s the values to updates - while both are optional, at least one should be provided. Both can be updated at the same time.</div>" } ], "returns" : { "type" : "item()*", "description" : "True if the template was updated, otherwise an error will be thrown" }, "errors" : [  ] }, { "isDocumented" : true, "arity" : 4, "name" : "template-update", "qname" : "mailchimp:template-update", "signature" : "($endpoint-url as xs:string, $apikey as xs:string, $id as xs:integer, $values as element(array)) as item()*", "description" : " Replace the content of a user template, <strong xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">NOT</strong> campaign content.\n", "summary" : "<p> Replace the content of a user template,  NOT  campaign content.</p>", "annotation_str" : " %an:sequential", "annotations" : [ { "prefix" : "an", "ns" : "http://zorba.io/annotations", "name" : "sequential", "value" : "" } ], "updating" : false, "parameters" : [ { "name" : "endpoint-url", "type" : "xs:string", "occurrence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> Mailchimp endpoint URL, e.g. http://us1.api.mailchimp.com/1.3/</div>" }, { "name" : "apikey", "type" : "xs:string", "occurrence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> a valid API Key for your user account. Get by visiting <a href=\"http://admin.mailchimp.com/account/api\" target=\"_blank\">your API dashboard</a></div>" }, { "name" : "id", "type" : "xs:integer", "occurrence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> the id of the user template to update</div>" }, { "name" : "values", "type" : "element(array)", "occurrence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> s the values to updates - while both are optional, at least one should be provided. Both can be updated at the same time.</div>" } ], "returns" : { "type" : "item()*", "description" : "True if the template was updated, otherwise an error will be thrown" }, "errors" : [  ] }, { "isDocumented" : true, "arity" : 4, "name" : "templates", "qname" : "mailchimp:templates", "signature" : "($apikey as xs:string, $types as element(array), $category as xs:string, $inactives as element(array)) as item()*", "description" : " Convenience function for <a xmlns:xqdoc=\"http://www.xqdoc.org/1.0\" href=\"#templates-5\">templates#5</a>.\n", "summary" : "<p> Convenience function for  templates#5 .</p>", "annotation_str" : " %an:sequential", "annotations" : [ { "prefix" : "an", "ns" : "http://zorba.io/annotations", "name" : "sequential", "value" : "" } ], "updating" : false, "parameters" : [ { "name" : "apikey", "type" : "xs:string", "occurrence" : null, "description" : "" }, { "name" : "types", "type" : "element(array)", "occurrence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> optional the types of templates to return</div>" }, { "name" : "category", "type" : "xs:string", "occurrence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> optional for Gallery templates only, limit to a specific template category</div>" }, { "name" : "inactives", "type" : "element(array)", "occurrence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> optional options to control how inactive templates are returned, if at all</div>" } ], "returns" : { "type" : "item()*", "description" : "An array of structs, one for each template (see Returned Fields for details)" }, "errors" : [  ] }, { "isDocumented" : true, "arity" : 5, "name" : "templates", "qname" : "mailchimp:templates", "signature" : "($endpoint-url as xs:string, $apikey as xs:string, $types as element(array), $category as xs:string, $inactives as element(array)) as item()*", "description" : " Retrieve various templates available in the system, allowing some thing similar to our template gallery to be created. boolean user Customer template for this user account. Defaults to true. boolean gallery Templates from our Gallery. Note that some templates that require extra configuration are withheld. (eg, the Etsy template). Defaults to false. boolean base Our \"start from scratch\" extremely basic templates boolean include user templates are not deleted, only set inactive. defaults to false. boolean only only include inactive templates. defaults to false.\n", "summary" : "<p> Retrieve various templates available in the system, allowing some thing similar to our template gallery to be created.</p>", "annotation_str" : " %an:sequential", "annotations" : [ { "prefix" : "an", "ns" : "http://zorba.io/annotations", "name" : "sequential", "value" : "" } ], "updating" : false, "parameters" : [ { "name" : "endpoint-url", "type" : "xs:string", "occurrence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> Mailchimp endpoint URL, e.g. http://us1.api.mailchimp.com/1.3/</div>" }, { "name" : "apikey", "type" : "xs:string", "occurrence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> a valid API Key for your user account. Get by visiting <a href=\"http://admin.mailchimp.com/account/api\" target=\"_blank\">your API dashboard</a></div>" }, { "name" : "types", "type" : "element(array)", "occurrence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> optional the types of templates to return</div>" }, { "name" : "category", "type" : "xs:string", "occurrence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> optional for Gallery templates only, limit to a specific template category</div>" }, { "name" : "inactives", "type" : "element(array)", "occurrence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> optional options to control how inactive templates are returned, if at all</div>" } ], "returns" : { "type" : "item()*", "description" : "An array of structs, one for each template (see Returned Fields for details)" }, "errors" : [  ] } ], "variables" : [ { "name" : "mailchimp:gateway", "type" : "item()*", "description" : " Mailchimp gateway where the client data is stored.\n" }, { "name" : "mailchimp:version", "type" : "item()*", "description" : " Mailchimp API version.\n" }, { "name" : "mailchimp:endpoint", "type" : "item()*", "description" : " Endpoint URL for the XML-RPC requests.\n" } ] }, "http://www.zorba-xquery.com/modules/couchbase" : { "ns" : "http://www.zorba-xquery.com/modules/couchbase", "description" : " This module provides minimal functionality to interact with the\n Couchbase NoSQL database.\n The module is built using the libcouchbase C client library and\n exposes most of its functionality in XQuery with JSONiq extensions.\n Beyond just allowing for basic key-value store operations (e.g.\n put-/get-text or put-/get-binary, this module also allows to work\n with Couchbase views in order to allow for complex JSON query\n operations.\n", "sees" : [  ], "authors" : [ "<xqdoc:author xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">Juan Zacarias</xqdoc:author>" ], "version" : null, "encoding" : "utf-8", "namespaces" : [ { "uri" : "http://zorba.io/annotations", "prefix" : "an" }, { "uri" : "http://www.zorba-xquery.com/modules/couchbase", "prefix" : "cb" }, { "uri" : "http://jsoniq.org/functions", "prefix" : "jn" }, { "uri" : "http://zorba.io/options/versioning", "prefix" : "ver" } ], "functions" : [ { "isDocumented" : true, "arity" : 1, "name" : "connect", "qname" : "cb:connect", "signature" : "($options as object()) as xs:anyURI external", "description" : " Connect to the Couchbase server and return an opaque identifier\n representing the established connection.\n", "summary" : "<p> Connect to the Couchbase server and return an opaque identifier\n representing the established connection.</p>", "annotation_str" : " %an:sequential", "annotations" : [ { "prefix" : "an", "ns" : "http://zorba.io/annotations", "name" : "sequential", "value" : "" } ], "updating" : false, "parameters" : [ { "name" : "options", "type" : "object()", "occurrence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> a JSONiq object that contains the host, bucket, and user information.</div>" } ], "returns" : { "type" : "xs:anyURI", "description" : "an identifier for the established connection. Example: <code xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> { \"host\": \"localhost:8091\", \"username\" : null, \"password\" : null, \"bucket\" : \"default\" } </code>" }, "errors" : [ "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">cb:LCB0001 if the connection to the given host/bucket could not be established.</xqdoc:error>", "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">cb:CB0001 if mandatory connection information is missing.</xqdoc:error>", "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">cb:CB0007 if a given option is not supported.</xqdoc:error>" ] }, { "isDocumented" : true, "arity" : 4, "name" : "connect", "qname" : "cb:connect", "signature" : "($host as xs:string, $username as xs:string?, $password as xs:string?, $bucket as xs:string) as xs:anyURI", "description" : " Connect to the Couchbase server and return an opaque identifier\n representing the established connection.\n", "summary" : "<p> Connect to the Couchbase server and return an opaque identifier\n representing the established connection.</p>", "annotation_str" : " %an:sequential", "annotations" : [ { "prefix" : "an", "ns" : "http://zorba.io/annotations", "name" : "sequential", "value" : "" } ], "updating" : false, "parameters" : [ { "name" : "host", "type" : "xs:string", "occurrence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> address of the couchbase server (e.g. \"localhost:8091\")</div>" }, { "name" : "username", "type" : "xs:string", "occurrence" : "?", "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> username used for the connection</div>" }, { "name" : "password", "type" : "xs:string", "occurrence" : "?", "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> password used for the connection</div>" }, { "name" : "bucket", "type" : "xs:string", "occurrence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> name of the bucket to use (e.g. \"default\")</div>" } ], "returns" : { "type" : "xs:anyURI", "description" : "an identifier for the established connection." }, "errors" : [ "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">cb:LCB0001 if the connection to the given host/bucket could not be established.</xqdoc:error>" ] }, { "isDocumented" : true, "arity" : 3, "name" : "create-view", "qname" : "cb:create-view", "signature" : "($db as xs:anyURI, $doc-name as xs:string, $view-names as xs:string*) as xs:string* external", "description" : " Create a document/view.\n If the document already exists, it is replaced. A document can hold several\n views that must be specified in the same call of cb:create-view.\n", "summary" : "<p> Create a document/view.</p>", "annotation_str" : " %an:sequential", "annotations" : [ { "prefix" : "an", "ns" : "http://zorba.io/annotations", "name" : "sequential", "value" : "" } ], "updating" : false, "parameters" : [ { "name" : "db", "type" : "xs:anyURI", "occurrence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> connection reference</div>" }, { "name" : "doc-name", "type" : "xs:string", "occurrence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> name of the document to create.</div>" }, { "name" : "view-names", "type" : "xs:string", "occurrence" : "*", "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> names of the views to create in the document.</div>" } ], "returns" : { "type" : "xs:string*", "description" : "the names of the paths for the views that have been created." }, "errors" : [ "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">cb:LCB0002 if any error occurs in the communication with the server.</xqdoc:error>" ] }, { "isDocumented" : true, "arity" : 4, "name" : "create-view", "qname" : "cb:create-view", "signature" : "($db as xs:anyURI, $doc-name as xs:string, $view-names as xs:string*, $options as object()*) as xs:string* external", "description" : " Create a document/view.\n If the document already exists, it is replaced. A document can hold several\n views that must be specified in the same call of cb:create-view.\n", "summary" : "<p> Create a document/view.</p>", "annotation_str" : " %an:sequential", "annotations" : [ { "prefix" : "an", "ns" : "http://zorba.io/annotations", "name" : "sequential", "value" : "" } ], "updating" : false, "parameters" : [ { "name" : "db", "type" : "xs:anyURI", "occurrence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> connection reference</div>" }, { "name" : "doc-name", "type" : "xs:string", "occurrence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> name of the document to create.</div>" }, { "name" : "view-names", "type" : "xs:string", "occurrence" : "*", "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> names of the views to create in the document.</div>" }, { "name" : "options", "type" : "object()", "occurrence" : "*", "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> options describing how to create the view.</div>" } ], "returns" : { "type" : "xs:string*", "description" : "the names of the paths for the views that have been created." }, "errors" : [ "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">cb:LCB0002 if any error occurs in the communication with the server.</xqdoc:error>", "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">cb:CB0005 if the number of options doesn't match the number of view-names.</xqdoc:error>", "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">cb:CB0007 if any of the options is not supported.</xqdoc:error>", "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">cb:CB0010 if any of the given options has an invalid type.</xqdoc:error>" ] }, { "isDocumented" : true, "arity" : 2, "name" : "delete-view", "qname" : "cb:delete-view", "signature" : "($db as xs:anyURI, $doc as xs:string*) as xs:string* external", "description" : " Delete a document/view.\n If the document doesn't exists, function does nothing. All the views hold in the\n Document are deleted, this function can't delete single views.\n", "summary" : "<p> Delete a document/view.</p>", "annotation_str" : " %an:sequential", "annotations" : [ { "prefix" : "an", "ns" : "http://zorba.io/annotations", "name" : "sequential", "value" : "" } ], "updating" : false, "parameters" : [ { "name" : "db", "type" : "xs:anyURI", "occurrence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> connection reference</div>" }, { "name" : "doc", "type" : "xs:string", "occurrence" : "*", "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">-name name of the document to create.</div>" } ], "returns" : { "type" : "xs:string*", "description" : "empty sequence." }, "errors" : [ "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">cb:LCB0002 if any error occurs in the communication with the server.</xqdoc:error>" ] }, { "isDocumented" : true, "arity" : 1, "name" : "flush", "qname" : "cb:flush", "signature" : "($db as xs:anyURI) as empty-sequence() external", "description" : " Remove all key/value pairs from the cluster\n", "summary" : "<p> Remove all key/value pairs from the cluster\n</p>", "annotation_str" : " %an:sequential", "annotations" : [ { "prefix" : "an", "ns" : "http://zorba.io/annotations", "name" : "sequential", "value" : "" } ], "updating" : false, "parameters" : [ { "name" : "db", "type" : "xs:anyURI", "occurrence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> connection reference</div>" } ], "returns" : { "type" : "empty-sequence()", "description" : "a empty sequence." }, "errors" : [ "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">cb:LCB0002 if any error occurs in the communication with the server.</xqdoc:error>" ] }, { "isDocumented" : true, "arity" : 2, "name" : "get-binary", "qname" : "cb:get-binary", "signature" : "($db as xs:anyURI, $key as xs:string*) as xs:base64Binary* external", "description" : " Return the values of the given keys (type xs:string) as base64Binary.\n", "summary" : "<p> Return the values of the given keys (type xs:string) as base64Binary.</p>", "annotation_str" : " %an:sequential", "annotations" : [ { "prefix" : "an", "ns" : "http://zorba.io/annotations", "name" : "sequential", "value" : "" } ], "updating" : false, "parameters" : [ { "name" : "db", "type" : "xs:anyURI", "occurrence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> connection reference</div>" }, { "name" : "key", "type" : "xs:string", "occurrence" : "*", "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> the requested keys</div>" } ], "returns" : { "type" : "xs:base64Binary*", "description" : "a sequence of xs:base64Binary items for the given keys." }, "errors" : [ "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">cb:LCB0002 if any error occurs in the communication with the server.</xqdoc:error>" ] }, { "isDocumented" : true, "arity" : 3, "name" : "get-binary", "qname" : "cb:get-binary", "signature" : "($db as xs:anyURI, $key as xs:string*, $options as object()) as xs:base64Binary* external", "description" : " Return the values of the given keys (type xs:string) as base64Binary.\n", "summary" : "<p> Return the values of the given keys (type xs:string) as base64Binary.</p>", "annotation_str" : " %an:sequential", "annotations" : [ { "prefix" : "an", "ns" : "http://zorba.io/annotations", "name" : "sequential", "value" : "" } ], "updating" : false, "parameters" : [ { "name" : "db", "type" : "xs:anyURI", "occurrence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> connection reference</div>" }, { "name" : "key", "type" : "xs:string", "occurrence" : "*", "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> the requested keys</div>" }, { "name" : "options", "type" : "object()", "occurrence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> JSONiq object with additional options</div>" } ], "returns" : { "type" : "xs:base64Binary*", "description" : "a sequence of xs:base64Binary items for the given keys." }, "errors" : [ "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">cb:LCB0002 if any error occurs in the communication with the server.</xqdoc:error>", "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">cb:CB0007 if any of the options is not supported.</xqdoc:error>", "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">cb:CB0009 if the given expiration time is not an xs:integer.</xqdoc:error>" ] }, { "isDocumented" : true, "arity" : 2, "name" : "get-text", "qname" : "cb:get-text", "signature" : "($db as xs:anyURI, $key as xs:string*) as xs:string* external", "description" : " Return the values of the given keys (type xs:string) as string.\n", "summary" : "<p> Return the values of the given keys (type xs:string) as string.</p>", "annotation_str" : " %an:sequential", "annotations" : [ { "prefix" : "an", "ns" : "http://zorba.io/annotations", "name" : "sequential", "value" : "" } ], "updating" : false, "parameters" : [ { "name" : "db", "type" : "xs:anyURI", "occurrence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> connection reference</div>" }, { "name" : "key", "type" : "xs:string", "occurrence" : "*", "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> the requested keys</div>" } ], "returns" : { "type" : "xs:string*", "description" : "A sequence of string Items corresponding to the key" }, "errors" : [ "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">cb:LCB0002 if any error occurs in the communication with the server.</xqdoc:error>" ] }, { "isDocumented" : true, "arity" : 3, "name" : "get-text", "qname" : "cb:get-text", "signature" : "($db as xs:anyURI, $key as xs:string*, $options as object()) as xs:string* external", "description" : " Return the values of the given keys (type xs:string) as string.\n", "summary" : "<p> Return the values of the given keys (type xs:string) as string.</p>", "annotation_str" : " %an:sequential", "annotations" : [ { "prefix" : "an", "ns" : "http://zorba.io/annotations", "name" : "sequential", "value" : "" } ], "updating" : false, "parameters" : [ { "name" : "db", "type" : "xs:anyURI", "occurrence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> connection reference</div>" }, { "name" : "key", "type" : "xs:string", "occurrence" : "*", "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> the requested keys</div>" }, { "name" : "options", "type" : "object()", "occurrence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> JSONiq object with additional options</div>" } ], "returns" : { "type" : "xs:string*", "description" : "a sequence of strings for the given keys." }, "errors" : [ "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">cb:LCB0002 if any error occurs in the communication with the server.</xqdoc:error>", "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">cb:CB0006 if the given encoding is not supported.</xqdoc:error>", "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">cb:CB0007 if any of the options is not supported.</xqdoc:error>", "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">cb:CB0009 if the given expiration time is not an xs:integer.</xqdoc:error>" ] }, { "isDocumented" : true, "arity" : 3, "name" : "put-binary", "qname" : "cb:put-binary", "signature" : "($db as xs:anyURI, $key as xs:string*, $value as xs:base64Binary*) as empty-sequence()", "description" : " Store the given key-value bindings.\n", "summary" : "<p> Store the given key-value bindings.</p>", "annotation_str" : " %an:sequential", "annotations" : [ { "prefix" : "an", "ns" : "http://zorba.io/annotations", "name" : "sequential", "value" : "" } ], "updating" : false, "parameters" : [ { "name" : "db", "type" : "xs:anyURI", "occurrence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> connection reference</div>" }, { "name" : "key", "type" : "xs:string", "occurrence" : "*", "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> the keys to store</div>" }, { "name" : "value", "type" : "xs:base64Binary", "occurrence" : "*", "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> the values (as xs:base64binary) to be stored.</div>" } ], "returns" : { "type" : "empty-sequence()", "description" : "a empty sequence." }, "errors" : [ "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">cb:LCB0002 if any error occurs in the communication with the server.</xqdoc:error>", "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">cb:CB0005 if the number of keys doesn't match the number of values.</xqdoc:error>" ] }, { "isDocumented" : true, "arity" : 4, "name" : "put-binary", "qname" : "cb:put-binary", "signature" : "($db as xs:anyURI, $key as xs:string*, $value as xs:base64Binary*, $options as object()) as empty-sequence() external", "description" : " Store the given key-value bindings.\n", "summary" : "<p> Store the given key-value bindings.</p>", "annotation_str" : " %an:sequential", "annotations" : [ { "prefix" : "an", "ns" : "http://zorba.io/annotations", "name" : "sequential", "value" : "" } ], "updating" : false, "parameters" : [ { "name" : "db", "type" : "xs:anyURI", "occurrence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> connection reference</div>" }, { "name" : "key", "type" : "xs:string", "occurrence" : "*", "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> the keys to store</div>" }, { "name" : "value", "type" : "xs:base64Binary", "occurrence" : "*", "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> the values (as xs:base64binary) to be stored.</div>" }, { "name" : "options", "type" : "object()", "occurrence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> JSONiq object with additional options</div>" } ], "returns" : { "type" : "empty-sequence()", "description" : "a empty sequence." }, "errors" : [ "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">cb:LCB0002 if any error occurs in the communication with the server.</xqdoc:error>", "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">cb:CB0005 if the number of keys doesn't match the number of values.</xqdoc:error>", "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">cb:CB0007 if any of the options is not supported.</xqdoc:error>", "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">cb:CB0009 if the given expiration time is not an xs:integer.</xqdoc:error>", "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">cb:CB0011 if the stored Variable was not stored</xqdoc:error>" ] }, { "isDocumented" : true, "arity" : 3, "name" : "put-text", "qname" : "cb:put-text", "signature" : "($db as xs:anyURI, $key as xs:string*, $value as xs:string*) as empty-sequence()", "description" : " Store the given key-value bindings.\n The values are stored with the UTF-8 encoding and a default\n expiration time of 60 seconds.\n", "summary" : "<p> Store the given key-value bindings.</p>", "annotation_str" : " %an:sequential", "annotations" : [ { "prefix" : "an", "ns" : "http://zorba.io/annotations", "name" : "sequential", "value" : "" } ], "updating" : false, "parameters" : [ { "name" : "db", "type" : "xs:anyURI", "occurrence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> connection reference</div>" }, { "name" : "key", "type" : "xs:string", "occurrence" : "*", "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> the keys to store</div>" }, { "name" : "value", "type" : "xs:string", "occurrence" : "*", "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> the values (as xs:string) to be stored.</div>" } ], "returns" : { "type" : "empty-sequence()", "description" : "a empty sequence." }, "errors" : [ "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">cb:LCB0002 if any error occurs in the communication with the server.</xqdoc:error>", "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">cb:CB0005 if the number of keys doesn't match the number of values.</xqdoc:error>" ] }, { "isDocumented" : true, "arity" : 4, "name" : "put-text", "qname" : "cb:put-text", "signature" : "($db as xs:anyURI, $key as xs:string*, $value as xs:string*, $options as object()) as empty-sequence() external", "description" : " Store the given key-value bindings.\n", "summary" : "<p> Store the given key-value bindings.</p>", "annotation_str" : " %an:sequential", "annotations" : [ { "prefix" : "an", "ns" : "http://zorba.io/annotations", "name" : "sequential", "value" : "" } ], "updating" : false, "parameters" : [ { "name" : "db", "type" : "xs:anyURI", "occurrence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> connection reference</div>" }, { "name" : "key", "type" : "xs:string", "occurrence" : "*", "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> the keys to store</div>" }, { "name" : "value", "type" : "xs:string", "occurrence" : "*", "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> the values (as xs:string) to be stored.</div>" }, { "name" : "options", "type" : "object()", "occurrence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> JSONiq object with additional options</div>" } ], "returns" : { "type" : "empty-sequence()", "description" : "a empty sequence." }, "errors" : [ "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">cb:LCB0002 if any error occurs in the communication with the server.</xqdoc:error>", "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">cb:CB0005 if the number of keys doesn't match the number of values.</xqdoc:error>", "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">cb:CB0006 if the given encoding is not supported.</xqdoc:error>", "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">cb:CB0007 if any of the options is not supported.</xqdoc:error>", "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">cb:CB0009 if the given expiration time is not an xs:integer.</xqdoc:error>", "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">cb:CB0011 if the stored Variable was not stored</xqdoc:error>" ] }, { "isDocumented" : true, "arity" : 2, "name" : "remove", "qname" : "cb:remove", "signature" : "($db as xs:anyURI, $key as xs:string*) as empty-sequence() external", "description" : " Remove the values matching the given keys (xs:string) from the server.\n", "summary" : "<p> Remove the values matching the given keys (xs:string) from the server.</p>", "annotation_str" : " %an:sequential", "annotations" : [ { "prefix" : "an", "ns" : "http://zorba.io/annotations", "name" : "sequential", "value" : "" } ], "updating" : false, "parameters" : [ { "name" : "db", "type" : "xs:anyURI", "occurrence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> connection reference</div>" }, { "name" : "key", "type" : "xs:string", "occurrence" : "*", "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> the keys of the values that should be removed.</div>" } ], "returns" : { "type" : "empty-sequence()", "description" : "a empty sequence." }, "errors" : [ "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">cb:LCB0002 if any error occurs in the communication with the server.</xqdoc:error>" ] }, { "isDocumented" : true, "arity" : 3, "name" : "touch", "qname" : "cb:touch", "signature" : "($db as xs:anyURI, $key as xs:string*, $exp-time as xs:integer) as empty-sequence() external", "description" : " Refresh the expiration time of the given keys.\n", "summary" : "<p> Refresh the expiration time of the given keys.</p>", "annotation_str" : " %an:sequential", "annotations" : [ { "prefix" : "an", "ns" : "http://zorba.io/annotations", "name" : "sequential", "value" : "" } ], "updating" : false, "parameters" : [ { "name" : "db", "type" : "xs:anyURI", "occurrence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> connection reference</div>" }, { "name" : "key", "type" : "xs:string", "occurrence" : "*", "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> the keys to touch</div>" }, { "name" : "exp-time", "type" : "xs:integer", "occurrence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> new expieration time in seconds</div>" } ], "returns" : { "type" : "empty-sequence()", "description" : "a empty sequence." }, "errors" : [ "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">cb:LCB0002 if any error occurs in the communication with the server.</xqdoc:error>" ] }, { "isDocumented" : true, "arity" : 2, "name" : "view", "qname" : "cb:view", "signature" : "($db as xs:anyURI, $path as xs:string*) as object()*", "description" : " Retrieve the content of existing views.\n", "summary" : "<p> Retrieve the content of existing views.</p>", "annotation_str" : " %an:sequential", "annotations" : [ { "prefix" : "an", "ns" : "http://zorba.io/annotations", "name" : "sequential", "value" : "" } ], "updating" : false, "parameters" : [ { "name" : "db", "type" : "xs:anyURI", "occurrence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> connection reference</div>" }, { "name" : "path", "type" : "xs:string", "occurrence" : "*", "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> contains the string of a view path (e.g. \"_design/test/_view/vies\").</div>" } ], "returns" : { "type" : "object()*", "description" : "a sequence of strings (as JSON) containing information of the views." }, "errors" : [ "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">cb:LCB0002 if any error occurs in the communication with the server.</xqdoc:error>" ] }, { "isDocumented" : true, "arity" : 3, "name" : "view", "qname" : "cb:view", "signature" : "($db as xs:anyURI, $path as xs:string*, $options as object()) as object()*", "description" : " Retrieve the content of existing views.\n", "summary" : "<p> Retrieve the content of existing views.</p>", "annotation_str" : " %an:sequential", "annotations" : [ { "prefix" : "an", "ns" : "http://zorba.io/annotations", "name" : "sequential", "value" : "" } ], "updating" : false, "parameters" : [ { "name" : "db", "type" : "xs:anyURI", "occurrence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> connection reference</div>" }, { "name" : "path", "type" : "xs:string", "occurrence" : "*", "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> contains the string of a view path (e.g. \"_design/test/_view/vies\").</div>" }, { "name" : "options", "type" : "object()", "occurrence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> JSONiq object with additional options</div>" } ], "returns" : { "type" : "object()*", "description" : "a sequence of strings (as JSON) containing information of the views." }, "errors" : [ "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">cb:LCB0002 if any error occurs in the communication with the server.</xqdoc:error>", "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">cb:CB0007 if any of the options is not supported.</xqdoc:error>" ] } ], "variables" : [  ] }, "http://zorba.io/modules/excel/text" : { "ns" : "http://zorba.io/modules/excel/text", "description" : " This is a library module offering the same set of functions\n defined by Microsoft Excel, under Text and Data Functions.\n", "sees" : [ "<xqdoc:see xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"><a href=\"http://office.microsoft.com/en-us/excel/CH062528321033.aspx\" target=\"_blank\">Excel Documentation: Text Functions</a></xqdoc:see>" ], "authors" : [ "<xqdoc:author xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">Sorin Nasoi</xqdoc:author>" ], "version" : null, "encoding" : "utf-8", "namespaces" : [ { "uri" : "http://zorba.io/modules/excel/errors", "prefix" : "excel-err" }, { "uri" : "http://zorba.io/modules/excel/math", "prefix" : "excel-math" }, { "uri" : "http://zorba.io/modules/excel/text", "prefix" : "excel-text" }, { "uri" : "http://zorba.io/options/versioning", "prefix" : "ver" } ], "functions" : [ { "isDocumented" : true, "arity" : 1, "name" : "asc", "qname" : "excel-text:asc", "signature" : "($text as xs:string) as xs:string", "description" : " Returns the given $text unchanged.\n", "summary" : "<p> Returns the given $text unchanged.</p>", "annotation_str" : "", "annotations" : [  ], "updating" : false, "parameters" : [ { "name" : "text", "type" : "xs:string", "occurrence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> the time</div>" } ], "returns" : { "type" : "xs:string", "description" : "The given $text unchanged." }, "errors" : [  ] }, { "isDocumented" : true, "arity" : 1, "name" : "char", "qname" : "excel-text:char", "signature" : "($number as xs:integer) as xs:string", "description" : " Returns the character specified by a certain codepoint.\n", "summary" : "<p> Returns the character specified by a certain codepoint.</p>", "annotation_str" : "", "annotations" : [  ], "updating" : false, "parameters" : [ { "name" : "number", "type" : "xs:integer", "occurrence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> the codepoint.</div>" } ], "returns" : { "type" : "xs:string", "description" : "the character specified by a certain codepoint." }, "errors" : [ "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">excel-err:Value provided $number must be in range [1,255].</xqdoc:error>" ] }, { "isDocumented" : true, "arity" : 1, "name" : "clean", "qname" : "excel-text:clean", "signature" : "($arg as xs:string?) as xs:string?", "description" : " Removes all nonprintable characters from text.\n", "summary" : "<p> Removes all nonprintable characters from text.</p>", "annotation_str" : "", "annotations" : [  ], "updating" : false, "parameters" : [ { "name" : "arg", "type" : "xs:string", "occurrence" : "?", "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> the string.</div>" } ], "returns" : { "type" : "xs:string?", "description" : "Removes all nonprintable characters from text. The CLEAN function was designed. to remove the first 32 nonprinting characters in the 7-bit ASCII code (values 0 through 31) from text. <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"/> In the Unicode character set, there are additional nonprinting characters (values 127, 129, 141, 143, 144, and 157). <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"/> By itself, the CLEAN function does not remove these additional nonprinting characters." }, "errors" : [  ] }, { "isDocumented" : true, "arity" : 1, "name" : "code", "qname" : "excel-text:code", "signature" : "($arg as xs:string) as xs:integer", "description" : " Returns a codepoint for the first character in a text string.\n", "summary" : "<p> Returns a codepoint for the first character in a text string.</p>", "annotation_str" : "", "annotations" : [  ], "updating" : false, "parameters" : [ { "name" : "arg", "type" : "xs:string", "occurrence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> the string.</div>" } ], "returns" : { "type" : "xs:integer", "description" : "A codepoint for the first character in a text string." }, "errors" : [ "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">excel-err:Value Provided $arg was empty.</xqdoc:error>" ] }, { "isDocumented" : true, "arity" : 1, "name" : "concatenate", "qname" : "excel-text:concatenate", "signature" : "($args as xs:anyAtomicType*) as xs:string", "description" : " Joins several text strings into one text string.\n", "summary" : "<p> Joins several text strings into one text string.</p>", "annotation_str" : "", "annotations" : [  ], "updating" : false, "parameters" : [ { "name" : "args", "type" : "xs:anyAtomicType", "occurrence" : "*", "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> a sequence of strings.</div>" } ], "returns" : { "type" : "xs:string", "description" : "Joins several text strings into one text string." }, "errors" : [  ] }, { "isDocumented" : true, "arity" : 2, "name" : "concatenate", "qname" : "excel-text:concatenate", "signature" : "($arg1 as xs:anyAtomicType?, $arg2 as xs:anyAtomicType?) as xs:string", "description" : " Joins two text strings into one text string.\n", "summary" : "<p> Joins two text strings into one text string.</p>", "annotation_str" : "", "annotations" : [  ], "updating" : false, "parameters" : [ { "name" : "arg1", "type" : "xs:anyAtomicType", "occurrence" : "?", "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> the first string.</div>" }, { "name" : "arg2", "type" : "xs:anyAtomicType", "occurrence" : "?", "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> the second string.</div>" } ], "returns" : { "type" : "xs:string", "description" : "Joins two text strings into one text string." }, "errors" : [  ] }, { "isDocumented" : true, "arity" : 1, "name" : "dollar", "qname" : "excel-text:dollar", "signature" : "($number as xs:decimal) as xs:string", "description" : " Converts a number to text format and applies a currency symbol. The number of\ndigits to the right of the decimal point is 2.\n", "summary" : "<p> Converts a number to text format and applies a currency symbol.</p>", "annotation_str" : "", "annotations" : [  ], "updating" : false, "parameters" : [ { "name" : "number", "type" : "xs:decimal", "occurrence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> is the number.</div>" } ], "returns" : { "type" : "xs:string", "description" : "Converts a number to text format and applies a currency symbol. The number of digits to the right of the decimal point is 2." }, "errors" : [  ] }, { "isDocumented" : true, "arity" : 2, "name" : "dollar", "qname" : "excel-text:dollar", "signature" : "($number as xs:decimal, $decimals as xs:decimal) as xs:string", "description" : " Converts a number to text format and applies a currency symbol.\n", "summary" : "<p> Converts a number to text format and applies a currency symbol.</p>", "annotation_str" : "", "annotations" : [  ], "updating" : false, "parameters" : [ { "name" : "number", "type" : "xs:decimal", "occurrence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> is the number.</div>" }, { "name" : "decimals", "type" : "xs:decimal", "occurrence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> is the number of digits to the right of the decimal point. <p/> If decimals is negative, number is rounded to the left of the decimal point.</div>" } ], "returns" : { "type" : "xs:string", "description" : "Converts a number to text format and applies a currency symbol." }, "errors" : [  ] }, { "isDocumented" : true, "arity" : 2, "name" : "exact", "qname" : "excel-text:exact", "signature" : "($arg1 as xs:string, $arg2 as xs:string) as xs:boolean", "description" : " Compares two text strings and returns TRUE if they are exactly the same,\nFALSE otherwise. EXACT is case-sensitive but ignores formatting differences.\n", "summary" : "<p> Compares two text strings and returns TRUE if they are exactly the same,\nFALSE otherwise.</p>", "annotation_str" : "", "annotations" : [  ], "updating" : false, "parameters" : [ { "name" : "arg1", "type" : "xs:string", "occurrence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> the first string.</div>" }, { "name" : "arg2", "type" : "xs:string", "occurrence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> the second string.</div>" } ], "returns" : { "type" : "xs:boolean", "description" : "Compares two text strings and returns TRUE if they are exactly the same, FALSE otherwise. EXACT is case-sensitive but ignores formatting differences." }, "errors" : [  ] }, { "isDocumented" : true, "arity" : 2, "name" : "find", "qname" : "excel-text:find", "signature" : "($find_text as xs:string, $within_text as xs:string) as xs:integer?", "description" : " Locate one text string within a second text string, and return the number of the\n starting position of the first text string from the first character of the second text string. <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"/>\n The search is case sensitive.\n", "summary" : "<p> Locate one text string within a second text string, and return the number of the\n starting position of the first text string from the first character of the second text string.</p>", "annotation_str" : "", "annotations" : [  ], "updating" : false, "parameters" : [ { "name" : "find_text", "type" : "xs:string", "occurrence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> text you want to find.</div>" }, { "name" : "within_text", "type" : "xs:string", "occurrence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> text in which you want to search for $find_text.</div>" } ], "returns" : { "type" : "xs:integer?", "description" : "Locate one text string within a second text string, and return the number of the starting position of the first text string from the first character of the second text string. <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"/> The search is case sensitive." }, "errors" : [ "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">excel-err:Value the value is not greater than zero or is greater than the length of within_text.</xqdoc:error>", "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">excel-err:Value value was not found.</xqdoc:error>" ] }, { "isDocumented" : true, "arity" : 3, "name" : "find", "qname" : "excel-text:find", "signature" : "($find_text as xs:string, $within_text as xs:string, $start_num as xs:integer) as xs:integer?", "description" : " Locate one text string within a second text string, and return the number of the\n starting position of the first text string from the first character of the second text string.<p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"/>\n The search is case sensitive.\n", "summary" : "<p> Locate one text string within a second text string, and return the number of the\n starting position of the first text string from the first character of the second text string.</p>", "annotation_str" : "", "annotations" : [  ], "updating" : false, "parameters" : [ { "name" : "find_text", "type" : "xs:string", "occurrence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> text you want to find.</div>" }, { "name" : "within_text", "type" : "xs:string", "occurrence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> text in which you want to search for $find_text.</div>" }, { "name" : "start_num", "type" : "xs:integer", "occurrence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> specifies the character at which to start the search.</div>" } ], "returns" : { "type" : "xs:integer?", "description" : "Locate one text string within a second text string, and return the number of the starting position of the first text string from the first character of the second text string.<p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"/> The search is case sensitive." }, "errors" : [ "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">excel-err:Value the value is not greater than zero or is greater than the length of within_text.</xqdoc:error>", "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">excel-err:Value value was not found.</xqdoc:error>" ] }, { "isDocumented" : true, "arity" : 2, "name" : "fixed", "qname" : "excel-text:fixed", "signature" : "($number as xs:decimal, $decimals as xs:decimal) as xs:string", "description" : " Rounds a number to the specified number of decimals, formats the number in\n decimal format using a period and commas, and returns the result as text.\n", "summary" : "<p> Rounds a number to the specified number of decimals, formats the number in\n decimal format using a period and commas, and returns the result as text.</p>", "annotation_str" : "", "annotations" : [  ], "updating" : false, "parameters" : [ { "name" : "number", "type" : "xs:decimal", "occurrence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> is the number you want to round and convert to text.</div>" }, { "name" : "decimals", "type" : "xs:decimal", "occurrence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> is the number of digits to the right of the decimal point.</div>" } ], "returns" : { "type" : "xs:string", "description" : "Rounds a number to the specified number of decimals, formats the number in decimal format using a period and commas, and returns the result as text." }, "errors" : [  ] }, { "isDocumented" : true, "arity" : 3, "name" : "fixed", "qname" : "excel-text:fixed", "signature" : "($number as xs:decimal, $decimals as xs:decimal, $no_commas as xs:boolean) as xs:string", "description" : " Rounds a number to the specified number of decimals, formats the number in\ndecimal format using a period and commas, and returns the result as text.\n", "summary" : "<p> Rounds a number to the specified number of decimals, formats the number in\ndecimal format using a period and commas, and returns the result as text.</p>", "annotation_str" : "", "annotations" : [  ], "updating" : false, "parameters" : [ { "name" : "number", "type" : "xs:decimal", "occurrence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> is the number you want to round and convert to text.</div>" }, { "name" : "decimals", "type" : "xs:decimal", "occurrence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> is the number of digits to the right of the decimal point.</div>" }, { "name" : "no_commas", "type" : "xs:boolean", "occurrence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> is a logical value that, if TRUE, prevents FIXED from including commas in the returned text.</div>" } ], "returns" : { "type" : "xs:string", "description" : "Rounds a number to the specified number of decimals, formats the number in decimal format using a period and commas, and returns the result as text." }, "errors" : [  ] }, { "isDocumented" : true, "arity" : 1, "name" : "left", "qname" : "excel-text:left", "signature" : "($arg as xs:string) as xs:string", "description" : " Returns the first character in a text string.\n", "summary" : "<p> Returns the first character in a text string.</p>", "annotation_str" : "", "annotations" : [  ], "updating" : false, "parameters" : [ { "name" : "arg", "type" : "xs:string", "occurrence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> is the text string that contains the characters you want to extract.</div>" } ], "returns" : { "type" : "xs:string", "description" : "The first character in a text string." }, "errors" : [  ] }, { "isDocumented" : true, "arity" : 2, "name" : "left", "qname" : "excel-text:left", "signature" : "($text as xs:string, $num_chars as xs:integer) as xs:string", "description" : " Returns the first character or characters in $text, based on the number of $num_chars you specify.\n", "summary" : "<p> Returns the first character or characters in $text, based on the number of $num_chars you specify.</p>", "annotation_str" : "", "annotations" : [  ], "updating" : false, "parameters" : [ { "name" : "text", "type" : "xs:string", "occurrence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> is the text string that contains the characters you want to extract.</div>" }, { "name" : "num_chars", "type" : "xs:integer", "occurrence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> specifies the number of characters you want to extract.</div>" } ], "returns" : { "type" : "xs:string", "description" : "The first character or characters in $text, based on the number of $num_chars you specify." }, "errors" : [  ] }, { "isDocumented" : true, "arity" : 1, "name" : "len", "qname" : "excel-text:len", "signature" : "($arg as xs:string?) as xs:integer", "description" : " Returns the number of characters in a text string.\n", "summary" : "<p> Returns the number of characters in a text string.</p>", "annotation_str" : "", "annotations" : [  ], "updating" : false, "parameters" : [ { "name" : "arg", "type" : "xs:string", "occurrence" : "?", "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> the string.</div>" } ], "returns" : { "type" : "xs:integer", "description" : "The number of characters in a text string." }, "errors" : [  ] }, { "isDocumented" : true, "arity" : 1, "name" : "lower", "qname" : "excel-text:lower", "signature" : "($arg as xs:string?) as xs:string?", "description" : " Converts all uppercase letters in a text string to lowercase.\n", "summary" : "<p> Converts all uppercase letters in a text string to lowercase.</p>", "annotation_str" : "", "annotations" : [  ], "updating" : false, "parameters" : [ { "name" : "arg", "type" : "xs:string", "occurrence" : "?", "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> the string.</div>" } ], "returns" : { "type" : "xs:string?", "description" : "Converts all uppercase letters in a text string to lowercase." }, "errors" : [  ] }, { "isDocumented" : true, "arity" : 3, "name" : "mid", "qname" : "excel-text:mid", "signature" : "($text as xs:string?, $start_num as xs:integer, $num_chars as xs:integer) as xs:string?", "description" : " Returns a specific number of characters from a text string, starting at\nthe position you specify, based on the number of characters you specify.\n", "summary" : "<p> Returns a specific number of characters from a text string, starting at\nthe position you specify, based on the number of characters you specify.</p>", "annotation_str" : "", "annotations" : [  ], "updating" : false, "parameters" : [ { "name" : "text", "type" : "xs:string", "occurrence" : "?", "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> the text string containing the characters you want to extract.</div>" }, { "name" : "start_num", "type" : "xs:integer", "occurrence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> the position of the first character you want to extract in text. The first character in text has start_num 1, and so on.</div>" }, { "name" : "num_chars", "type" : "xs:integer", "occurrence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> the number of characters you want to return from text.</div>" } ], "returns" : { "type" : "xs:string?", "description" : "A specific number of characters from a text string, starting at the position you specify, based on the number of characters you specify." }, "errors" : [  ] }, { "isDocumented" : true, "arity" : 3, "name" : "pad-integer-to-length", "qname" : "excel-text:pad-integer-to-length", "signature" : "($toPad as xs:anyAtomicType?, $padChar as xs:string, $length as xs:integer) as xs:string", "description" : " Returns $toPad appended with enough repetitions of $padChar to make its length $length, the characters are added before the string.\n", "summary" : "<p> Returns $toPad appended with enough repetitions of $padChar to make its length $length, the characters are added before the string.</p>", "annotation_str" : "", "annotations" : [  ], "updating" : false, "parameters" : [ { "name" : "toPad", "type" : "xs:anyAtomicType", "occurrence" : "?", "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> the value to be padded.</div>" }, { "name" : "padChar", "type" : "xs:string", "occurrence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> the character used for padding.</div>" }, { "name" : "length", "type" : "xs:integer", "occurrence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> the desired length.</div>" } ], "returns" : { "type" : "xs:string", "description" : "$toPad appended with enough repetitions of $padChar to make its length $length, the characters are added before the string." }, "errors" : [ "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">excel-err:Value if the length of the $toPad is greater than the desired length.</xqdoc:error>" ] }, { "isDocumented" : true, "arity" : 4, "name" : "replace", "qname" : "excel-text:replace", "signature" : "($old_text as xs:string?, $start_num as xs:integer, $num_chars as xs:integer, $new_text as xs:string) as xs:string", "description" : " Replaces part of a text string, based on the number of characters you specify, with a different text string.\n", "summary" : "<p> Replaces part of a text string, based on the number of characters you specify, with a different text string.</p>", "annotation_str" : "", "annotations" : [  ], "updating" : false, "parameters" : [ { "name" : "old_text", "type" : "xs:string", "occurrence" : "?", "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> is text in which you want to replace some characters.</div>" }, { "name" : "start_num", "type" : "xs:integer", "occurrence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> the position of the character in old_text that you want to replace with new_text.</div>" }, { "name" : "num_chars", "type" : "xs:integer", "occurrence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> the number of characters in old_text that you want REPLACE to replace with new_text.</div>" }, { "name" : "new_text", "type" : "xs:string", "occurrence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> the text that will replace characters in old_text.</div>" } ], "returns" : { "type" : "xs:string", "description" : "Replaces part of a text string, based on the number of characters you specify, with a different text string." }, "errors" : [  ] }, { "isDocumented" : true, "arity" : 1, "name" : "right", "qname" : "excel-text:right", "signature" : "($arg as xs:string) as xs:string", "description" : " Returns the last character in a text string.\n", "summary" : "<p> Returns the last character in a text string.</p>", "annotation_str" : "", "annotations" : [  ], "updating" : false, "parameters" : [ { "name" : "arg", "type" : "xs:string", "occurrence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> the text string containing the characters you want to extract.</div>" } ], "returns" : { "type" : "xs:string", "description" : "The last character in a text string." }, "errors" : [  ] }, { "isDocumented" : true, "arity" : 2, "name" : "right", "qname" : "excel-text:right", "signature" : "($text as xs:string, $num_chars as xs:integer) as xs:string", "description" : " Returns the last character or characters in a text string, based on the number of characters you specify.\n", "summary" : "<p> Returns the last character or characters in a text string, based on the number of characters you specify.</p>", "annotation_str" : "", "annotations" : [  ], "updating" : false, "parameters" : [ { "name" : "text", "type" : "xs:string", "occurrence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> the text string containing the characters you want to extract.</div>" }, { "name" : "num_chars", "type" : "xs:integer", "occurrence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> specifies the number of characters you want RIGHT to extract.</div>" } ], "returns" : { "type" : "xs:string", "description" : "The last character or characters in a text string, based on the number of characters you specify." }, "errors" : [  ] }, { "isDocumented" : true, "arity" : 2, "name" : "search", "qname" : "excel-text:search", "signature" : "($find_text as xs:string, $within_text as xs:string) as xs:integer?", "description" : " Locate one text string within a second text string, and return the number of\n the starting position of the first text string from the first character of the\n second text string. <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"/> The search starts at position 1, and it is not case sensitive.\n", "summary" : "<p> Locate one text string within a second text string, and return the number of\n the starting position of the first text string from the first character of the\n second text string.</p>", "annotation_str" : "", "annotations" : [  ], "updating" : false, "parameters" : [ { "name" : "find_text", "type" : "xs:string", "occurrence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> text you want to find.</div>" }, { "name" : "within_text", "type" : "xs:string", "occurrence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> text in which you want to search for $find_text.</div>" } ], "returns" : { "type" : "xs:integer?", "description" : "Locate one text string within a second text string, and return the number of the starting position of the first text string from the first character of the second text string. <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"/> The search starts at position 1, and it is not case sensitive." }, "errors" : [ "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">excel-err:Value the value is not greater than zero or is greater than the length of within_text.</xqdoc:error>", "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">excel-err:Value value was not found.</xqdoc:error>" ] }, { "isDocumented" : true, "arity" : 3, "name" : "search", "qname" : "excel-text:search", "signature" : "($find_text as xs:string, $within_text as xs:string, $start_num as xs:integer) as xs:integer?", "description" : " Locate one text string within a second text string, and return the number of\n the starting position of the first text string from the first character of the\n second text string.<p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"/> The search starts at $start_num, and it is not case sensitive.\n", "summary" : "<p> Locate one text string within a second text string, and return the number of\n the starting position of the first text string from the first character of the\n second text string.</p>", "annotation_str" : "", "annotations" : [  ], "updating" : false, "parameters" : [ { "name" : "find_text", "type" : "xs:string", "occurrence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> text you want to find.</div>" }, { "name" : "within_text", "type" : "xs:string", "occurrence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> text in which you want to search for $find_text.</div>" }, { "name" : "start_num", "type" : "xs:integer", "occurrence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> the character number in within_text at which you want to start searching.</div>" } ], "returns" : { "type" : "xs:integer?", "description" : "Locate one text string within a second text string, and return the number of the starting position of the first text string from the first character of the second text string.<p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"/> The search starts at $start_num, and it is not case sensitive." }, "errors" : [ "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">excel-err:Value the value is not greater than zero or is greater than the length of within_text.</xqdoc:error>", "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">excel-err:Value value was not found.</xqdoc:error>" ] }, { "isDocumented" : true, "arity" : 3, "name" : "substitute", "qname" : "excel-text:substitute", "signature" : "($text as xs:string, $old_text as xs:string, $new_text as xs:string) as xs:string?", "description" : " Substitutes new_text for old_text in a text string. Every occurrence of old_text in text is changed to new_text.\n", "summary" : "<p> Substitutes new_text for old_text in a text string.</p>", "annotation_str" : "", "annotations" : [  ], "updating" : false, "parameters" : [ { "name" : "text", "type" : "xs:string", "occurrence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> the text or the reference to a cell containing text for which you want to substitute characters.</div>" }, { "name" : "old_text", "type" : "xs:string", "occurrence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> text you want to replace.</div>" }, { "name" : "new_text", "type" : "xs:string", "occurrence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> text you want to replace old_text with.</div>" } ], "returns" : { "type" : "xs:string?", "description" : "Substitutes new_text for old_text in a text string. Every occurrence of old_text in text is changed to new_text." }, "errors" : [  ] }, { "isDocumented" : true, "arity" : 4, "name" : "substitute", "qname" : "excel-text:substitute", "signature" : "($text as xs:string, $old_text as xs:string, $new_text as xs:string, $instance_num as xs:integer?) as xs:string", "description" : " Substitutes new_text for old_text in a text string.\n", "summary" : "<p> Substitutes new_text for old_text in a text string.</p>", "annotation_str" : "", "annotations" : [  ], "updating" : false, "parameters" : [ { "name" : "text", "type" : "xs:string", "occurrence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> the text or the reference to a cell containing text for which you want to substitute characters.</div>" }, { "name" : "old_text", "type" : "xs:string", "occurrence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> text you want to replace.</div>" }, { "name" : "new_text", "type" : "xs:string", "occurrence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> text you want to replace old_text with.</div>" }, { "name" : "instance_num", "type" : "xs:integer", "occurrence" : "?", "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> specifies which occurrence of old_text you want to replace with new_text. <p/> Only that instance of old_text is replaced.</div>" } ], "returns" : { "type" : "xs:string", "description" : "Substitutes new_text for old_text in a text string. <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"/> Use SUBSTITUTE when you want to replace specific text in a text string; use REPLACE when you want to replace any text that occurs in a specific location in a text string." }, "errors" : [  ] }, { "isDocumented" : true, "arity" : 1, "name" : "t", "qname" : "excel-text:t", "signature" : "($value as xs:anyAtomicType?) as xs:string", "description" : " Converts the $value to string.\n", "summary" : "<p> Converts the $value to string.</p>", "annotation_str" : "", "annotations" : [  ], "updating" : false, "parameters" : [ { "name" : "value", "type" : "xs:anyAtomicType", "occurrence" : "?", "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> the value</div>" } ], "returns" : { "type" : "xs:string", "description" : "Converts the $value to string." }, "errors" : [  ] }, { "isDocumented" : true, "arity" : 1, "name" : "trim", "qname" : "excel-text:trim", "signature" : "($text as xs:string?) as xs:string?", "description" : " Removes all spaces from text except for single spaces between words.\n", "summary" : "<p> Removes all spaces from text except for single spaces between words.</p>", "annotation_str" : "", "annotations" : [  ], "updating" : false, "parameters" : [ { "name" : "text", "type" : "xs:string", "occurrence" : "?", "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> from which you want spaces removed.</div>" } ], "returns" : { "type" : "xs:string?", "description" : "Removes all spaces from text except for single spaces between words." }, "errors" : [  ] }, { "isDocumented" : true, "arity" : 1, "name" : "upper", "qname" : "excel-text:upper", "signature" : "($text as xs:string?) as xs:string?", "description" : " Converts text to uppercase.\n", "summary" : "<p> Converts text to uppercase.</p>", "annotation_str" : "", "annotations" : [  ], "updating" : false, "parameters" : [ { "name" : "text", "type" : "xs:string", "occurrence" : "?", "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> text you want converted to uppercase.</div>" } ], "returns" : { "type" : "xs:string?", "description" : "Converts text to uppercase." }, "errors" : [  ] }, { "isDocumented" : true, "arity" : 2, "name" : "value-except", "qname" : "excel-text:value-except", "signature" : "($arg1 as xs:anyAtomicType*, $arg2 as xs:anyAtomicType*) as xs:anyAtomicType*", "description" : " Returns the values in one sequence that do not appear in the second sequence in an implementation-defined order.\n", "summary" : "<p> Returns the values in one sequence that do not appear in the second sequence in an implementation-defined order.</p>", "annotation_str" : "", "annotations" : [  ], "updating" : false, "parameters" : [ { "name" : "arg1", "type" : "xs:anyAtomicType", "occurrence" : "*", "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> the first sequence.</div>" }, { "name" : "arg2", "type" : "xs:anyAtomicType", "occurrence" : "*", "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> the second sequence.</div>" } ], "returns" : { "type" : "xs:anyAtomicType*", "description" : "The values in one sequence that do not appear in the second sequence in an implementation-defined order." }, "errors" : [  ] }, { "isDocumented" : true, "arity" : 1, "name" : "value", "qname" : "excel-text:value", "signature" : "($arg as xs:anyAtomicType?) as xs:anyAtomicType?", "description" : " Converts a text string that represents a number to a number.\n", "summary" : "<p> Converts a text string that represents a number to a number.</p>", "annotation_str" : "", "annotations" : [  ], "updating" : false, "parameters" : [ { "name" : "arg", "type" : "xs:anyAtomicType", "occurrence" : "?", "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> the value.</div>" } ], "returns" : { "type" : "xs:anyAtomicType?", "description" : "Converts a text string that represents a number to a number." }, "errors" : [ "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">excel-err:Value provided value is not a number.</xqdoc:error>" ] } ], "variables" : [  ] }, "http://www.28msec.com/modules/http/response" : { "ns" : "http://www.28msec.com/modules/http/response", "description" : " The Sausalito response module can be used to modify the HTTP response\n that will be send as a result of this request. For example, the\n <tt xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">set-content-type</tt> function can be used to set the Content-Type\n header and determine the encoding of data in the response.\n", "sees" : [  ], "authors" : [ "<xqdoc:author xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">28msec</xqdoc:author>" ], "version" : null, "encoding" : "utf-8", "namespaces" : [ { "uri" : "http://zorba.io/annotations", "prefix" : "an" }, { "uri" : "http://www.28msec.com/modules/http/response", "prefix" : "http" }, { "uri" : "http://www.w3.org/2010/xslt-xquery-serialization", "prefix" : "output" }, { "uri" : "http://www.28msec.com/modules/http/response", "prefix" : "resp" }, { "uri" : "http://zorba.io/modules/schema", "prefix" : "s" }, { "uri" : "http://zorba.io/options/versioning", "prefix" : "ver" } ], "functions" : [ { "isDocumented" : true, "arity" : 1, "name" : "code-for-status", "qname" : "resp:code-for-status", "signature" : "($status as xs:QName) as xs:int", "description" : " Convert between the HTTP status code as QName and\n the integer value of that status code.\n", "summary" : "<p> Convert between the HTTP status code as QName and\n the integer value of that status code.</p>", "annotation_str" : "", "annotations" : [  ], "updating" : false, "parameters" : [ { "name" : "status", "type" : "xs:QName", "occurrence" : null, "description" : "" } ], "returns" : { "type" : "xs:int", "description" : "the integer value of the given QName as xs:int" }, "errors" : [ "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">http:invalid-status if the given QName does not represent a valid http status code</xqdoc:error>" ] }, { "isDocumented" : true, "arity" : 1, "name" : "content-type-binary", "qname" : "resp:content-type-binary", "signature" : "($type as xs:string) as xs:boolean external", "description" : " <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">Test if a given content-type is a binary content-type. A\n content-type is considered to be binary if it's not a text\n content-type.</p>\n", "summary" : "<p>  Test if a given content-type is a binary content-type.</p>", "annotation_str" : "", "annotations" : [  ], "updating" : false, "parameters" : [ { "name" : "type", "type" : "xs:string", "occurrence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> the content-type to test.</div>" } ], "returns" : { "type" : "xs:boolean", "description" : "true if the given content-type is a binary content-type, false otherwise." }, "errors" : [  ] }, { "isDocumented" : true, "arity" : 1, "name" : "content-type-html", "qname" : "resp:content-type-html", "signature" : "($type as xs:string) as xs:boolean external", "description" : " <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">Test if a given content-type is a HTML content-type, i.e.\n the content-type is the string \"text/html\".</p>\n", "summary" : "<p>  Test if a given content-type is a HTML content-type, i.</p>", "annotation_str" : "", "annotations" : [  ], "updating" : false, "parameters" : [ { "name" : "type", "type" : "xs:string", "occurrence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> the content-type to test.</div>" } ], "returns" : { "type" : "xs:boolean", "description" : "true if the given content-type is the HTML content-type, false otherwise." }, "errors" : [  ] }, { "isDocumented" : true, "arity" : 1, "name" : "content-type-json", "qname" : "resp:content-type-json", "signature" : "($type as xs:string) as xs:boolean external", "description" : " <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">Test if a given content-type is a JSON content-type, i.e.\n the content-type is the string \"application/json\".</p>\n", "summary" : "<p>  Test if a given content-type is a JSON content-type, i.</p>", "annotation_str" : "", "annotations" : [  ], "updating" : false, "parameters" : [ { "name" : "type", "type" : "xs:string", "occurrence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> the content-type to test.</div>" } ], "returns" : { "type" : "xs:boolean", "description" : "true if the given content-type is the JSON content-type, false otherwise." }, "errors" : [  ] }, { "isDocumented" : true, "arity" : 1, "name" : "content-type-mixed-json-xml", "qname" : "resp:content-type-mixed-json-xml", "signature" : "($type as xs:string) as xs:boolean external", "description" : " <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">Test if a given content-type is a mixed JSON-XML content-type, i.e.\n the content-type is the string \"application/mixed-json-xml\".</p>\n", "summary" : "<p>  Test if a given content-type is a mixed JSON-XML content-type, i.</p>", "annotation_str" : "", "annotations" : [  ], "updating" : false, "parameters" : [ { "name" : "type", "type" : "xs:string", "occurrence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> the content-type to test.</div>" } ], "returns" : { "type" : "xs:boolean", "description" : "true if the given content-type is a mixed JSON-XML content-type, false otherwise." }, "errors" : [  ] }, { "isDocumented" : true, "arity" : 1, "name" : "content-type-text", "qname" : "resp:content-type-text", "signature" : "($type as xs:string) as xs:boolean external", "description" : " <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">Test if a given content-type is a text content-type.</p>\n <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">A text content-type starts with \"text/\" or contains either of\n the strings \"xml\" or \"json\".</p>\n", "summary" : "<p>  Test if a given content-type is a text content-type.</p>", "annotation_str" : "", "annotations" : [  ], "updating" : false, "parameters" : [ { "name" : "type", "type" : "xs:string", "occurrence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> the content-type to test.</div>" } ], "returns" : { "type" : "xs:boolean", "description" : "true if the given content-type is a text content-type, false otherwise." }, "errors" : [  ] }, { "isDocumented" : true, "arity" : 1, "name" : "content-type-xhtml", "qname" : "resp:content-type-xhtml", "signature" : "($type as xs:string) as xs:boolean external", "description" : " <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">Test if a given content-type is a XHTML content-type, i.e.\n the content-type is the string \"application/xhtml+xml\".</p>\n", "summary" : "<p>  Test if a given content-type is a XHTML content-type, i.</p>", "annotation_str" : "", "annotations" : [  ], "updating" : false, "parameters" : [ { "name" : "type", "type" : "xs:string", "occurrence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> the content-type to test.</div>" } ], "returns" : { "type" : "xs:boolean", "description" : "true if the given content-type is the XHTML content-type, false otherwise." }, "errors" : [  ] }, { "isDocumented" : true, "arity" : 1, "name" : "content-type-xml", "qname" : "resp:content-type-xml", "signature" : "($type as xs:string) as xs:boolean external", "description" : " <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">Test if a given content-type is a XML content-type</p>\n <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">A XML content-type is a content-type that is \"application/xml\"\n or ends : with the string \"+xml\".</p>\n", "summary" : "<p>  Test if a given content-type is a XML content-type \n  A XML content-type is a content-type that is \"application/xml\"\n or ends : with the string \"+xml\".</p>", "annotation_str" : "", "annotations" : [  ], "updating" : false, "parameters" : [ { "name" : "type", "type" : "xs:string", "occurrence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> the content-type to test.</div>" } ], "returns" : { "type" : "xs:boolean", "description" : "true if the given content-type is a XML content-type, false otherwise." }, "errors" : [  ] }, { "isDocumented" : true, "arity" : 0, "name" : "decode-binary", "qname" : "resp:decode-binary", "signature" : "() as xs:boolean external", "description" : " <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">Returns the boolean indiciating whether base64Binaries returned by\n this request will be decoded.</p>\n <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">The default if not modified using resp:set-decode-binary is false.</p>\n", "summary" : "<p>  Returns the boolean indiciating whether base64Binaries returned by\n this request will be decoded.</p>", "annotation_str" : " %an:sequential", "annotations" : [ { "prefix" : "an", "ns" : "http://zorba.io/annotations", "name" : "sequential", "value" : "" } ], "updating" : false, "parameters" : [  ], "returns" : { "type" : "xs:boolean", "description" : "the said boolean value" }, "errors" : [  ] }, { "isDocumented" : true, "arity" : 1, "name" : "message-for-status", "qname" : "resp:message-for-status", "signature" : "($status as xs:QName) as xs:string", "description" : " Convert between the HTTP status code as QName and\n the name/message of that status code.\n", "summary" : "<p> Convert between the HTTP status code as QName and\n the name/message of that status code.</p>", "annotation_str" : "", "annotations" : [  ], "updating" : false, "parameters" : [ { "name" : "status", "type" : "xs:QName", "occurrence" : null, "description" : "" } ], "returns" : { "type" : "xs:string", "description" : "the message of the given QName as xs:string" }, "errors" : [ "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">http:invalid-status if the given QName does not represent a valid http status code</xqdoc:error>" ] }, { "isDocumented" : true, "arity" : 0, "name" : "serialization-parameters", "qname" : "resp:serialization-parameters", "signature" : "() as element(output:serialization-parameters)", "description" : " <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">Returns the serialization parameters that are currently\n active, i.e. the ones that will be used to serialize the result\n of this request.</p>\n <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">This will either be the default, the defaults set when\n calling resp:set-content-type(), or the ones set by\n resp:set-serialization-parameters().</p>\n", "summary" : "<p>  Returns the serialization parameters that are currently\n active, i.</p>", "annotation_str" : "", "annotations" : [  ], "updating" : false, "parameters" : [  ], "returns" : { "type" : "element(output:serialization-parameters)", "description" : "the said serialization parameters" }, "errors" : [  ] }, { "isDocumented" : true, "arity" : 0, "name" : "serializer-defaults-html", "qname" : "resp:serializer-defaults-html", "signature" : "() as element(*)*", "description" : " <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">Returns an element that can be used to specify the\n settings of serialization parameters for the HTML serialization\n method.</p>\n <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">The defaults are\n <ul>\n  <li>encoding: UTF-8</li>\n  <li>indent: yes</li>\n  <li>version: 4.01</li>\n  <li>doctype-system: http://www.w3.org/TR/html4/loose.dtd</li>\n  <li>doctype-public: -//W3C//DTD HTML 4.01 Transitional//EN</li>\n  <li>include-content-type: yes</li>\n </ul>\n </p>\n <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">For example, those defaults are used when setting\n the content-type to some HTML content-type (i.e. text/html).</p>\n", "summary" : "<p>  Returns an element that can be used to specify the\n settings of serialization parameters for the HTML serialization\n method.</p>", "annotation_str" : "", "annotations" : [  ], "updating" : false, "parameters" : [  ], "returns" : { "type" : "element(*)*", "description" : "an element that can be used to specify the above serialization parameters." }, "errors" : [  ] }, { "isDocumented" : true, "arity" : 0, "name" : "serializer-defaults-json-xml-hybrid", "qname" : "resp:serializer-defaults-json-xml-hybrid", "signature" : "() as element(output:serialization-parameters)", "description" : " <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">Returns an element that can be used to specify the\n settings of serialization parameters for the json-xml-hybrid\n serialization method.</p>\n <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">The defaults are\n <ul>\n  <li>encoding: UTF-8</li>\n  <li>indent: yes</li>\n  <li>method: json-xml-hybrid</li>\n  <li>omit-xml-declaration: yes</li>\n  <li>version: 1.0</li>\n </ul>\n </p>\n <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">For example, those defaults are used when setting\n the content-type to application/mixed-json-xml.</p>\n", "summary" : "<p>  Returns an element that can be used to specify the\n settings of serialization parameters for the json-xml-hybrid\n serialization method.</p>", "annotation_str" : "", "annotations" : [  ], "updating" : false, "parameters" : [  ], "returns" : { "type" : "element(output:serialization-parameters)", "description" : "an element that can be used to specify the above serialization parameters." }, "errors" : [  ] }, { "isDocumented" : true, "arity" : 0, "name" : "serializer-defaults-json", "qname" : "resp:serializer-defaults-json", "signature" : "() as element(output:serialization-parameters)", "description" : " <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">Returns an element that can be used to specify the\n settings of serialization parameters for the json\n serialization method.</p>\n <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">The defaults are\n <ul>\n  <li>encoding: UTF-8</li>\n  <li>indent: yes</li>\n  <li>method: json</li>\n </ul>\n </p>\n <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">For example, those defaults are used when setting\n the content-type to some JSON content-type (e.g. application/json).</p>\n", "summary" : "<p>  Returns an element that can be used to specify the\n settings of serialization parameters for the json\n serialization method.</p>", "annotation_str" : "", "annotations" : [  ], "updating" : false, "parameters" : [  ], "returns" : { "type" : "element(output:serialization-parameters)", "description" : "an element that can be used to specify the above serialization parameters." }, "errors" : [  ] }, { "isDocumented" : true, "arity" : 0, "name" : "serializer-defaults-text", "qname" : "resp:serializer-defaults-text", "signature" : "() as element(*)*", "description" : " <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">Returns an element that can be used to specify the\n settings of serialization parameters for the text serialization\n method.</p>\n <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">The only default used is\n <ul>\n  <li>encoding: UTF-8</li>\n </ul>\n </p>\n <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">For example, this default is used when setting\n the content-type to some text content-type (e.g. text/plain).</p>\n", "summary" : "<p>  Returns an element that can be used to specify the\n settings of serialization parameters for the text serialization\n method.</p>", "annotation_str" : "", "annotations" : [  ], "updating" : false, "parameters" : [  ], "returns" : { "type" : "element(*)*", "description" : "an element that can be used to specify the above serialization parameters." }, "errors" : [  ] }, { "isDocumented" : true, "arity" : 0, "name" : "serializer-defaults-xhtml", "qname" : "resp:serializer-defaults-xhtml", "signature" : "() as element(*)*", "description" : " <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">Returns an element that can be used to specify the\n settings of serialization parameters for the XHTML serialization\n method.</p>\n <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">The defaults are\n <ul>\n  <li>encoding: UTF-8</li>\n  <li>indent: yes</li>\n  <li>omit-xml-declaration: yes</li>\n  <li>version: 1.0</li>\n  <li>doctype-system: http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd</li>\n  <li>doctype-public: -//W3C//DTD XHTML 1.0 Transitional//EN</li>\n </ul>\n </p>\n <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">For example, those defaults are used when setting\n the content-type to some XHTML content-type (i.e. application/xhtml+xml).</p>\n", "summary" : "<p>  Returns an element that can be used to specify the\n settings of serialization parameters for the XHTML serialization\n method.</p>", "annotation_str" : "", "annotations" : [  ], "updating" : false, "parameters" : [  ], "returns" : { "type" : "element(*)*", "description" : "an element that can be used to specify the above serialization parameters." }, "errors" : [  ] }, { "isDocumented" : true, "arity" : 0, "name" : "serializer-defaults-xml", "qname" : "resp:serializer-defaults-xml", "signature" : "() as element(output:serialization-parameters)", "description" : " <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">Returns an element that can be used to specify the\n settings of serialization parameters for the XML serialization\n method.</p>\n <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">The defaults are\n <ul>\n  <li>encoding: UTF-8</li>\n  <li>indent: yes</li>\n  <li>omit-xml-declaration: yes</li>\n  <li>version: 1.0</li>\n </ul>\n </p>\n <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">For example, those defaults are used when setting\n the content-type to some XML content-type (e.g. application/atom+xml).</p>\n", "summary" : "<p>  Returns an element that can be used to specify the\n settings of serialization parameters for the XML serialization\n method.</p>", "annotation_str" : "", "annotations" : [  ], "updating" : false, "parameters" : [  ], "returns" : { "type" : "element(output:serialization-parameters)", "description" : "an element that can be used to specify the above serialization parameters." }, "errors" : [  ] }, { "isDocumented" : true, "arity" : 1, "name" : "set-content-type", "qname" : "resp:set-content-type", "signature" : "($type as xs:string) as empty-sequence()", "description" : " <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">Sets the Content-Type header for the response.</p>\n <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">\n For example,\n <tt>resp:set-content-type(\"text/plain\")</tt> will cause the\n header\n <tt>Content-Type: text/plain</tt> to be added for the response.</p>\n <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">In addtion to setting the Content-Type header, the function also\n sets the serialization parameters to the default values for serialization\n method for the given content-type. For example, if the content-type is set to\n text/plain, the default serialization parameters for the text\n serialization method will be used. For application/atom+xml, the default\n serialization parameters for the XML serialization method will be used.</p>\n <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">The functions resp:content-type-text/xml/html/xhtml/binary may be used\n to figure out which serialization method will be used for a specific\n content-type.</p>\n <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">If the given content-type contains a charset declaration (e.g.\n <tt>resp:set-content-type(\"text/plain;charset=ISO-8859-1\")</tt>), the\n content of the response will be transcoded to the given encoding.</p>\n <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">The default serialization parameters set by this function can\n be overwritten using the resp:set-serialization-parameters() function.</p>\n", "summary" : "<p>  Sets the Content-Type header for the response.</p>", "annotation_str" : " %an:sequential", "annotations" : [ { "prefix" : "an", "ns" : "http://zorba.io/annotations", "name" : "sequential", "value" : "" } ], "updating" : false, "parameters" : [ { "name" : "type", "type" : "xs:string", "occurrence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> the content-type to be set</div>" } ], "returns" : { "type" : "empty-sequence()", "description" : "the function is sequential and returns the empty sequence" }, "errors" : [ "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">http:invalid-encoding if the given encoding is invalid or not supported.</xqdoc:error>" ] }, { "isDocumented" : true, "arity" : 2, "name" : "set-content-type", "qname" : "resp:set-content-type", "signature" : "($type as xs:string, $params as element(output:serialization-parameters)) as empty-sequence()", "description" : " <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">Sets the Content-Type header for the response.</p>\n <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">For example,\n <tt>resp:set-content-type(\"text/plain\")</tt> will cause the\n header\n <tt>Content-Type: text/plain</tt> to be added for the response.</p>\n <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">In addition to the content-type, the function also allows to\n specify the serialization method and parameters that will be used\n for serializing the result. For details about this parameter, please\n refer to resp:set-serialization-parameters().</p>\n <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">If the given content-type contains a charset declaration (e.g.\n <tt>resp:set-content-type(\"text/plain;charset=ISO-8859-1\")</tt>), the\n content of the response will be transcoded to the given encoding.\n If the serialization parameters also contain a charset declaration,\n the charset contained in the content-type will be used. to transcode\n the result.</p>\n", "summary" : "<p>  Sets the Content-Type header for the response.</p>", "annotation_str" : " %an:sequential", "annotations" : [ { "prefix" : "an", "ns" : "http://zorba.io/annotations", "name" : "sequential", "value" : "" } ], "updating" : false, "parameters" : [ { "name" : "type", "type" : "xs:string", "occurrence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> the content-type to be set</div>" }, { "name" : "params", "type" : "element(output:serialization-parameters)", "occurrence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> the serialization parameters that will be used for serialization the result.</div>" } ], "returns" : { "type" : "empty-sequence()", "description" : "the function is sequential and returns the empty sequence" }, "errors" : [ "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">http:invalid-encoding if the given encoding is invalid or not supported.</xqdoc:error>" ] }, { "isDocumented" : true, "arity" : 1, "name" : "set-decode-binary", "qname" : "resp:set-decode-binary", "signature" : "($decode as xs:boolean) as empty-sequence() external", "description" : " <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">If this function is invoked with true, the result of the request\n will not be serialized. Instead, the result will be the binary values\n of any item that is of type xs:base64Binary. The values of all other\n items will not be part of the result.</p>\n <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">Please note that all serialization parameters which have been set using\n resp:set-serialization-parameters will be ignored. Also, the output encoding\n is ignored for binaries.</p>\n", "summary" : "<p>  If this function is invoked with true, the result of the request\n will not be serialized.</p>", "annotation_str" : " %an:sequential", "annotations" : [ { "prefix" : "an", "ns" : "http://zorba.io/annotations", "name" : "sequential", "value" : "" } ], "updating" : false, "parameters" : [ { "name" : "decode", "type" : "xs:boolean", "occurrence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> boolean value indicating whether base64Binaries should be decoded.</div>" } ], "returns" : { "type" : "empty-sequence()", "description" : "the function is sequential and returns the empty sequence." }, "errors" : [  ] }, { "isDocumented" : true, "arity" : 1, "name" : "set-encoding", "qname" : "resp:set-encoding", "signature" : "($encoding as xs:string) as empty-sequence() external", "description" : " <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">The function sets the output encoding that will be\n used for the payload of the response.</p>\n <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">For example,\n <tt>resp:set-encoding(\"ISO-8859-1\")</tt> will cause the\n content in the response to be encoded using ISO-8859-1.</p>\n <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">Please note that the encoding only applies to textual data.\n It is not used if the function <tt>set-decode-binary()</tt>\n was invoked passing true as parameter.</p>\n", "summary" : "<p>  The function sets the output encoding that will be\n used for the payload of the response.</p>", "annotation_str" : " %an:sequential", "annotations" : [ { "prefix" : "an", "ns" : "http://zorba.io/annotations", "name" : "sequential", "value" : "" } ], "updating" : false, "parameters" : [ { "name" : "encoding", "type" : "xs:string", "occurrence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> the encoding to be used for the payload of the response.</div>" } ], "returns" : { "type" : "empty-sequence()", "description" : "the function is sequential and returns the empty sequence" }, "errors" : [ "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">http:invalid-encoding if the given encoding is invalid or not supported.</xqdoc:error>" ] }, { "isDocumented" : true, "arity" : 2, "name" : "set-header-impl", "qname" : "resp:set-header-impl", "signature" : "($name as xs:string, $value as xs:string) as xs:string? external", "description" : " <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">Set an HTTP header in the response.</p>\n <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">This function is only used for internal purposes and should\n not be called by the user.</p>\n", "summary" : "<p>  Set an HTTP header in the response.</p>", "annotation_str" : " %an:sequential", "annotations" : [ { "prefix" : "an", "ns" : "http://zorba.io/annotations", "name" : "sequential", "value" : "" } ], "updating" : false, "parameters" : [ { "name" : "name", "type" : "xs:string", "occurrence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> the name for the header to set</div>" }, { "name" : "value", "type" : "xs:string", "occurrence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> the value for the header to set</div>" } ], "returns" : { "type" : "xs:string?", "description" : "the value of the header previously set or the empty sequence if no header has been set with the same name." }, "errors" : [  ] }, { "isDocumented" : true, "arity" : 2, "name" : "set-header", "qname" : "resp:set-header", "signature" : "($name as xs:string, $value as xs:string) as xs:string?", "description" : " <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">Set a HTTP header in the response.</p>\n <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">If a header with the same name was already set, the\n value is overwritten and the function returns the old value. As defined\n in the HTTP specification, multiple headers with the same name\n can be combined into one header whose value is a comma-separated\n list of the values.</p>\n <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">The following headers must not be set using this function.\n Instead, other functions of this module should be used in order\n to implemented the required semantics:\n <ul>\n   <li>Status: use set-status() instead</li>\n   <li>Content-Type: use set-content-type() instead</li>\n </ul>\n </p>\n", "summary" : "<p>  Set a HTTP header in the response.</p>", "annotation_str" : " %an:sequential", "annotations" : [ { "prefix" : "an", "ns" : "http://zorba.io/annotations", "name" : "sequential", "value" : "" } ], "updating" : false, "parameters" : [ { "name" : "name", "type" : "xs:string", "occurrence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> the name of the header to set</div>" }, { "name" : "value", "type" : "xs:string", "occurrence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> the value of the header to set `</div>" } ], "returns" : { "type" : "xs:string?", "description" : "the value of the header previously set or the empty sequence if no header has been set with the same name." }, "errors" : [ "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">resp:invalid-header-name if an invalid name is used for the header.</xqdoc:error>" ] }, { "isDocumented" : true, "arity" : 1, "name" : "set-redirect", "qname" : "resp:set-redirect", "signature" : "($url as xs:string) as empty-sequence()", "description" : " This function sets the HTTP 302 redirect status code in the response. As\n a result, a redirect to the URL given as parameter will be made.\n", "summary" : "<p> This function sets the HTTP 302 redirect status code in the response.</p>", "annotation_str" : " %an:sequential", "annotations" : [ { "prefix" : "an", "ns" : "http://zorba.io/annotations", "name" : "sequential", "value" : "" } ], "updating" : false, "parameters" : [ { "name" : "url", "type" : "xs:string", "occurrence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> The URL to which the redirect will be made.</div>" } ], "returns" : { "type" : "empty-sequence()", "description" : "The empty-sequence is returned." }, "errors" : [  ] }, { "isDocumented" : true, "arity" : 1, "name" : "set-serialization-parameters", "qname" : "resp:set-serialization-parameters", "signature" : "($params as element(output:serialization-parameters)) as empty-sequence()", "description" : " <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">Set the serialization parameters used for serializing the result\n of the request.</p>\n <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">The following example shows how to set several options\n for the HTML serialization method. Specifically, it sets the\n HTML method to HTML 4.01, set the doctype-system and\n doctype-public makes sure that the output is indented. In addition,\n the output is UTF-8 encoded and\n <pre>\n &lt;output:serialization-parameters&gt;\n   &lt;output:encoding value=\"UTF-8\"/&gt;\n   &lt;output:doctype-system value=\"http://www.w3.org/TR/html4/loose.dtd\"/&gt;\n   &lt;output:doctype-public value=\"-//W3C//DTD HTML 4.01 Transitional//EN\"/&gt;\n &lt;/output:serialization-parameters&gt;\n </pre>\n </p>\n <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">The element passed as parameter need to be valid according\n to the schema http://www.w3.org/2010/xslt-xquery-serialization. This\n function validates its input (if it has not already been validated)\n and may raise an error if the input is not valid.</p>\n <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">Please note that serialization options set by this function can\n be overwritten by a subsequent call to resp:set-content-type. In this\n case, the options will be reset to the default for the given\n content-type. Also note, that the output encoding can be overwritten\n by subsequently calling the resp:set-encoding function.</p>\n", "summary" : "<p>  Set the serialization parameters used for serializing the result\n of the request.</p>", "annotation_str" : " %an:sequential", "annotations" : [ { "prefix" : "an", "ns" : "http://zorba.io/annotations", "name" : "sequential", "value" : "" } ], "updating" : false, "parameters" : [ { "name" : "params", "type" : "element(output:serialization-parameters)", "occurrence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> the serialization parameters that will be used to serialize the result of the request</div>" } ], "returns" : { "type" : "empty-sequence()", "description" : "the function is sequential and, on success, returns the empty sequence." }, "errors" : [ "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">err:XQDY0027 if the input is not valid according to the schema http://www.w3.org/2010/xslt-xquery-serialization.</xqdoc:error>", "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">http:invalid-encoding if the encoding specified in the serialization options is invalid or not supported.</xqdoc:error>" ] }, { "isDocumented" : true, "arity" : 1, "name" : "set-status-code", "qname" : "resp:set-status-code", "signature" : "($status as xs:integer) as empty-sequence() external", "description" : " <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">Sets the status code of the HTTP response to the integer given as\n parameter.</p>\n For example,\n <tt xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">resp:set-status(204)</tt>\n will result in \"HTTP/1.1 204 No Content\".\n", "summary" : "<p>  Sets the status code of the HTTP response to the integer given as\n parameter.</p>", "annotation_str" : " %an:sequential", "annotations" : [ { "prefix" : "an", "ns" : "http://zorba.io/annotations", "name" : "sequential", "value" : "" } ], "updating" : false, "parameters" : [ { "name" : "status", "type" : "xs:integer", "occurrence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> The status code of the HTTP response as integer.</div>" } ], "returns" : { "type" : "empty-sequence()", "description" : "On success, the empty-sequence is returned" }, "errors" : [ "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">http:invalid-status-code if the given integer does not reflect a valid HTTP status code</xqdoc:error>" ] }, { "isDocumented" : true, "arity" : 1, "name" : "set-status", "qname" : "resp:set-status", "signature" : "($status as xs:QName) as empty-sequence()", "description" : " <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">Sets the status code of the HTTP response to the QName given as\n parameter.</p>\n For example,\n <tt xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">resp:set-status($http:no-content)</tt>\n will result in \"HTTP/1.1 204 No Content\".\n", "summary" : "<p>  Sets the status code of the HTTP response to the QName given as\n parameter.</p>", "annotation_str" : " %an:sequential", "annotations" : [ { "prefix" : "an", "ns" : "http://zorba.io/annotations", "name" : "sequential", "value" : "" } ], "updating" : false, "parameters" : [ { "name" : "status", "type" : "xs:QName", "occurrence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> The status code of the HTTP response as a QName (e.g. $http:no-content)</div>" } ], "returns" : { "type" : "empty-sequence()", "description" : "On success, the empty-sequence is returned" }, "errors" : [ "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">http:invalid-status if the given QName does not represent a valid HTTP status code;</xqdoc:error>" ] }, { "isDocumented" : true, "arity" : 1, "name" : "valid-status", "qname" : "resp:valid-status", "signature" : "($status as xs:QName) as xs:boolean", "description" : " Test whether the given QName refers to a valid HTTP status code.\n", "summary" : "<p> Test whether the given QName refers to a valid HTTP status code.</p>", "annotation_str" : "", "annotations" : [  ], "updating" : false, "parameters" : [ { "name" : "status", "type" : "xs:QName", "occurrence" : null, "description" : "" } ], "returns" : { "type" : "xs:boolean", "description" : "true if the given QName refers to a valid HTTP status code, false otherwise." }, "errors" : [  ] } ], "variables" : [ { "name" : "http:precondition-required", "type" : "xs:QName", "description" : " QName representing the HTTP Status Code 428 Precondition Required (RFC 6585)\n" }, { "name" : "http:gone", "type" : "xs:QName", "description" : " QName representing the HTTP Status Code 410 GONE\n" }, { "name" : "http:length-required", "type" : "xs:QName", "description" : " QName representing the HTTP Status Code 411 Length Required\n" }, { "name" : "http:precondition-failed", "type" : "xs:QName", "description" : " QName representing the HTTP Status Code 412 Precondition Failed\n" }, { "name" : "http:request-entity-too-large", "type" : "xs:QName", "description" : " QName representing the HTTP Status Code 413 Request Entity Too Large\n" }, { "name" : "http:request-entity-too-long", "type" : "xs:QName", "description" : " QName representing the HTTP Status Code 414 Request Entity Too Long\n" }, { "name" : "http:unsupported-media-type", "type" : "xs:QName", "description" : " QName representing the HTTP Status Code 415 Unsupported Media Type\n" }, { "name" : "http:request-range-not-satisfiable", "type" : "xs:QName", "description" : " QName representing the HTTP Status Code 416 Request Range Not Satisfiable\n" }, { "name" : "http:expectation-failed", "type" : "xs:QName", "description" : " QName representing the HTTP Status Code 417 Expectation Failed\n" }, { "name" : "http:im-a-teapot", "type" : "xs:QName", "description" : " QName representing the HTTP Status Code 418 I'm a teapot (RFC 2324)\n" }, { "name" : "http:enhance-your-calm", "type" : "xs:QName", "description" : " QName representing the HTTP Status Code 420 Enhance Your Calm\n" }, { "name" : "http:unprocessable-entity", "type" : "xs:QName", "description" : " QName representing the HTTP Status Code 422 Unprocessable Entity (WebDAV; RFC 4918)\n" }, { "name" : "http:locked", "type" : "xs:QName", "description" : " QName representing the HTTP Status Code 423 Locked (WebDAV; RFC 4918)\n" }, { "name" : "http:failed-dependency", "type" : "xs:QName", "description" : " QName representing the HTTP Status Code 424 Failed Dependency (WebDAV; RFC 4918)\n" }, { "name" : "http:unordered-collection", "type" : "xs:QName", "description" : " QName representing the HTTP Status Code 425 Unordered Collection\n" }, { "name" : "http:upgrade-required", "type" : "xs:QName", "description" : " QName representing the HTTP Status Code 426 Upgrade Required\n" }, { "name" : "http:conflict", "type" : "xs:QName", "description" : " QName representing the HTTP Status Code 409 Conflict\n" }, { "name" : "http:too-many-requests", "type" : "xs:QName", "description" : " QName representing the HTTP Status Code 429 Too Many Requests (RFC 6585)\n" }, { "name" : "http:request-header-fields-too-large", "type" : "xs:QName", "description" : " QName representing the HTTP Status Code 431 Request Header Fields Too Large (RFC 6585)\n" }, { "name" : "http:internal-server-error", "type" : "xs:QName", "description" : " QName representing the HTTP Status Code 500 Internal Server Error\n" }, { "name" : "http:not-implemented", "type" : "xs:QName", "description" : " QName representing the HTTP Status Code 501 Not Implemented\n" }, { "name" : "http:bad-gateway", "type" : "xs:QName", "description" : " QName representing the HTTP Status Code 502 Bad Gateway\n" }, { "name" : "http:service-unavailable", "type" : "xs:QName", "description" : " QName representing the HTTP Status Code 503 Service Unavailable\n" }, { "name" : "http:gateway-timeout", "type" : "xs:QName", "description" : " QName representing the HTTP Status Code 504 Gateway Timeout\n" }, { "name" : "http:http-version-not-supported", "type" : "xs:QName", "description" : " QName representing the HTTP Status Code 505 HTTP Version Not Supported\n" }, { "name" : "http:variant-also-negotiates", "type" : "xs:QName", "description" : " QName representing the HTTP Status Code 506 Variant Also Negotiates (RFC 2295)\n" }, { "name" : "http:insufficient-storage", "type" : "xs:QName", "description" : " QName representing the HTTP Status Code 507 Insufficient Storage (WebDAV; RFC 4918)\n" }, { "name" : "http:loop-detected", "type" : "xs:QName", "description" : " QName representing the HTTP status code 508 Loop Detected (webdav; rfc 5842)\n" }, { "name" : "http:not-extended", "type" : "xs:QName", "description" : " QName representing the HTTP status code 510 Not Extended (RFC 2774)\n" }, { "name" : "http:network-authentication-required", "type" : "xs:QName", "description" : " QName representing the HTTP status code 511 Network Authentication Required (RFC 6585)\n" }, { "name" : "resp:status-info", "type" : "item()*", "description" : " Variable containing a description for all the HTTP Status Codes\n" }, { "name" : "http:see-other", "type" : "xs:QName", "description" : " QName representing the HTTP Status Code 303 See Other\n" }, { "name" : "http:switching-protocols", "type" : "xs:QName", "description" : " QName representing the HTTP Status Code 101 Switching Protocols\n" }, { "name" : "http:processing", "type" : "xs:QName", "description" : " QName representing the HTTP Status Code 102 Processing (Web; RFC 2518)\n" }, { "name" : "http:ok", "type" : "xs:QName", "description" : " QName representing the HTTP Status Code 200 OK\n" }, { "name" : "http:created", "type" : "xs:QName", "description" : " QName representing the HTTP Status Code 201 Created\n" }, { "name" : "http:accepted", "type" : "xs:QName", "description" : " QName representing the HTTP Status Code 202 Accepted\n" }, { "name" : "http:non-authoritative", "type" : "xs:QName", "description" : " QName representing the HTTP Status Code 203 Non-Authoritative\n" }, { "name" : "http:no-content", "type" : "xs:QName", "description" : " QName representing the HTTP Status Code 204 No Content\n" }, { "name" : "http:reset-content", "type" : "xs:QName", "description" : " QName representing the HTTP Status Code 205 Reset Content\n" }, { "name" : "http:partial-content", "type" : "xs:QName", "description" : " QName representing the HTTP Status Code 206 Partial Content\n" }, { "name" : "http:multi-status", "type" : "xs:QName", "description" : " QName representing the HTTP Status Code 207 Multi-Status (WebDAV; RFC 5842)\n" }, { "name" : "http:already-reported", "type" : "xs:QName", "description" : " QName representing the HTTP Status Code 208 Already Reported (WebDAV; RFC 5842)\n" }, { "name" : "http:im-used", "type" : "xs:QName", "description" : " QName representing the HTTP Status Code 226 IM Used (RFC 3229)\n" }, { "name" : "http:multiple-choices", "type" : "xs:QName", "description" : " QName representing the HTTP Status Code 300 Multiple Choices\n" }, { "name" : "http:moved-permanently", "type" : "xs:QName", "description" : " QName representing the HTTP Status Code 301 Moved Permantently\n" }, { "name" : "http:found", "type" : "xs:QName", "description" : " QName representing the HTTP Status Code 302 Found\n" }, { "name" : "http:continue", "type" : "xs:QName", "description" : " QName representing the HTTP Status Code 100 Continue\n" }, { "name" : "http:not-modified", "type" : "xs:QName", "description" : " QName representing the HTTP Status Code 304 Not Modified\n" }, { "name" : "http:use-proxy", "type" : "xs:QName", "description" : " QName representing the HTTP Status Code 305 Use Proxy\n" }, { "name" : "http:switch-proxy", "type" : "xs:QName", "description" : " QName representing the HTTP Status Code 306 Switch Proxy\n" }, { "name" : "http:temporary-redirect", "type" : "xs:QName", "description" : " QName representing the HTTP Status Code 307 Temporary Redirect\n" }, { "name" : "http:permanent-redirect", "type" : "xs:QName", "description" : " QName representing the HTTP Status Code 308 Permanent Redirect (http://tools.ietf.org/html/draft-reschke-http-status-308-07)\n" }, { "name" : "http:bad-request", "type" : "xs:QName", "description" : " QName representing the HTTP Status Code 400 Bad Request\n" }, { "name" : "http:unauthorized", "type" : "xs:QName", "description" : " QName representing the HTTP Status Code 401 Unauthorized\n" }, { "name" : "http:payment-required", "type" : "xs:QName", "description" : " QName representing the HTTP Status Code 402 Payment Required\n" }, { "name" : "http:forbidden", "type" : "xs:QName", "description" : " QName representing the HTTP Status Code 403 Forbidden\n" }, { "name" : "http:not-found", "type" : "xs:QName", "description" : " QName representing the HTTP Status Code 404 Not Found\n" }, { "name" : "http:not-allowed", "type" : "xs:QName", "description" : " QName representing the HTTP Status Code 405 Not Allowed\n" }, { "name" : "http:not-acceptable", "type" : "xs:QName", "description" : " QName representing the HTTP Status Code 406 Not Acceptable\n" }, { "name" : "http:proxy-authentication-required", "type" : "xs:QName", "description" : " QName representing the HTTP Status Code 407 Proxy Authentication Required\n" }, { "name" : "http:request-timeout", "type" : "xs:QName", "description" : " QName representing the HTTP Status Code 408 Request Timeout\n" } ] }, "http://zorba.io/modules/uri" : { "ns" : "http://zorba.io/modules/uri", "description" : " This module provides functions for processing URIs and URLs.\n", "sees" : [  ], "authors" : [ "<xqdoc:author xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">Matthias Brantner, Luis Rodriguez Gonzalez</xqdoc:author>" ], "version" : null, "encoding" : "utf-8", "namespaces" : [ { "uri" : "http://zorba.io/modules/uri", "prefix" : "uri" }, { "uri" : "http://zorba.io/options/versioning", "prefix" : "ver" }, { "uri" : "http://zorba.io/errors", "prefix" : "zerr" } ], "functions" : [ { "isDocumented" : true, "arity" : 1, "name" : "decode", "qname" : "uri:decode", "signature" : "($u as xs:string) as xs:string", "description" : " Percent-decodes (aka URL decoding) the given string.\n All percent encoded octets will be translated into their\n decoded UTF-8 representation.\n Please note that the percent encoding guarantees that a string\n consists of ASCII characters only. Passing a string that contains\n non-ASCII characters results in undefined behavior.\n", "summary" : "<p> Percent-decodes (aka URL decoding) the given string.</p>", "annotation_str" : "", "annotations" : [  ], "updating" : false, "parameters" : [ { "name" : "u", "type" : "xs:string", "occurrence" : null, "description" : "" } ], "returns" : { "type" : "xs:string", "description" : "the percent decoded string" }, "errors" : [  ] }, { "isDocumented" : true, "arity" : 2, "name" : "decode", "qname" : "uri:decode", "signature" : "($u as xs:string, $decode-plus as xs:boolean) as xs:string", "description" : " Percent-decodes (aka URL decoding) the given string.\n All percent encoded octets will be translated into their\n decoded UTF-8 representation.\n If $decode-plus is specified all occurrences of the char '+'\n will be replaced with a space ' ' before the percent decoding\n happens.\n Please note that the percent encoding guarantees that a string\n consists of ASCII characters only. Passing a string that contains\n non-ASCII characters results in undefined behavior.\n", "summary" : "<p> Percent-decodes (aka URL decoding) the given string.</p>", "annotation_str" : "", "annotations" : [  ], "updating" : false, "parameters" : [ { "name" : "u", "type" : "xs:string", "occurrence" : null, "description" : "" }, { "name" : "decode-plus", "type" : "xs:boolean", "occurrence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> whether '+' chars will be replaced with spaces</div>" } ], "returns" : { "type" : "xs:string", "description" : "the percent decoded string" }, "errors" : [  ] }, { "isDocumented" : true, "arity" : 3, "name" : "decode", "qname" : "uri:decode", "signature" : "($s as xs:string, $decode-plus as xs:boolean, $charset as xs:string) as xs:string external", "description" : " Percent-decodes (aka URL decoding) the given string.\n All percent encoded octets will be translated into their\n decoded UTF-8 representation.\n If $decode-plus is specified all occurrences of the char '+'\n will be replaced with a space ' ' before the percent decoding\n happens.\n The $charset parameter specifies the source charset after precent\n decoding. It is used to convert the decoded string into UTF-8.\n Please note that the percent encoding guarantees that a string\n consists of ASCII characters only. Passing a string that contains\n non-ASCII characters results in undefined behavior.\n", "summary" : "<p> Percent-decodes (aka URL decoding) the given string.</p>", "annotation_str" : "", "annotations" : [  ], "updating" : false, "parameters" : [ { "name" : "s", "type" : "xs:string", "occurrence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> the string to decode</div>" }, { "name" : "decode-plus", "type" : "xs:boolean", "occurrence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> whether '+' chars will be replaced with spaces</div>" }, { "name" : "charset", "type" : "xs:string", "occurrence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> the source charset of the string after percent decoding</div>" } ], "returns" : { "type" : "xs:string", "description" : "the percent decoded string" }, "errors" : [ "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">uri:CHARSET_UNKNOWN if the given charset is unknown or not supported</xqdoc:error>", "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">zerr:ZOSE0006 if there is an error transcoding the string</xqdoc:error>" ] }, { "isDocumented" : true, "arity" : 1, "name" : "parse", "qname" : "uri:parse", "signature" : "($uri as xs:string) as object() external", "description" : " Parses the URI passed as string. The returned object\n contains only members with field names declared as constants in\n this module.\n For example,\n <pre xmlns:xqdoc=\"http://www.xqdoc.org/1.0\" class=\"ace-static\" ace-mode=\"xquery\">\n let my-uri := \"http://www.my.project.com/a/b/c?user=john;pass=1234#profile\"\n return uri:parse(my-uri)\n </pre>\n returns\n <pre xmlns:xqdoc=\"http://www.xqdoc.org/1.0\" class=\"ace-static\" ace-mode=\"java\">\n { \"squeme\" : \"http\", \"host\" : \"www.my.project.com\", \"path\" : \"/a/b/c\",\n   \"query\" : \"user=john;pass=123\", \"fragment\" : \"profile\" }\n </pre>\n", "summary" : "<p> Parses the URI passed as string.</p>", "annotation_str" : "", "annotations" : [  ], "updating" : false, "parameters" : [ { "name" : "uri", "type" : "xs:string", "occurrence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> the URI to parse</div>" } ], "returns" : { "type" : "object()", "description" : "the JSON object" }, "errors" : [ "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">err:XQST0046 if the URI is textually invalid</xqdoc:error>" ] }, { "isDocumented" : true, "arity" : 1, "name" : "serialize", "qname" : "uri:serialize", "signature" : "($uri as object()) as xs:string external", "description" : " Serialize the URI passed as object into a string.\n", "summary" : "<p> Serialize the URI passed as object into a string.</p>", "annotation_str" : "", "annotations" : [  ], "updating" : false, "parameters" : [ { "name" : "uri", "type" : "object()", "occurrence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> the object representing the URI</div>" } ], "returns" : { "type" : "xs:string", "description" : "the URI as string" }, "errors" : [ "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">uri:OPAQUE_COMB_NOT_VALID if opaque part is specified in conjunction with host/port/path/user-info/query.</xqdoc:error>", "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">uri:OPAQUE_WITHOUT_SCHEME if opaque part is present but no scheme is present.</xqdoc:error>", "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">uri:INVALID_ABSOLUTE_PATH if a path component for an absolute URI doesn't start with \"/\".</xqdoc:error>" ] } ], "variables" : [ { "name" : "uri:SCHEME", "type" : "xs:string", "description" : " Constant for the \"scheme\" part of a URI object.\n" }, { "name" : "uri:AUTHORITY", "type" : "xs:string", "description" : " Constant for the \"authority\" part of a URI object.\n" }, { "name" : "uri:USER-INFO", "type" : "xs:string", "description" : " Constant for the \"user-info\" part of a URI object.\n" }, { "name" : "uri:HOST", "type" : "xs:string", "description" : " Constant for the \"host\" part of a URI object.\n" }, { "name" : "uri:PORT", "type" : "xs:string", "description" : " Constant for the \"port\" part of a URI object.\n" }, { "name" : "uri:PATH", "type" : "xs:string", "description" : " Constant for the \"path\" part of a URI object.\n" }, { "name" : "uri:QUERY", "type" : "xs:string", "description" : " Constant for the \"query\" part of a URI object.\n" }, { "name" : "uri:FRAGMENT", "type" : "xs:string", "description" : " Constant for the \"fragment\" part of a URI object.\n" }, { "name" : "uri:OPAQUE-PART", "type" : "xs:string", "description" : " Constant for the \"opaque-part\" part of a URI object.\n If this is set in a URI object, then none of $uri:PATH, $uri:HOST,\n $uri:PORT, $uri:USER-INFO, or : $uri:QUERY may be specified.\n If this is set in a URI object, $uri:SCHEME must also be specified\n (ie, it must be an absolute URI).\n" } ] }, "http://xbrl.io/modules/bizql/profiles/sec/fiscal/core" : { "ns" : "http://xbrl.io/modules/bizql/profiles/sec/fiscal/core", "description" : " <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">This module provides functionality for querying fiscal reports (10-K, 10-Q)\n submitted to the SEC.</p>\n", "sees" : [  ], "authors" : [ "<xqdoc:author xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">Charles Hoffman</xqdoc:author>", "<xqdoc:author xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">Matthias Brantner</xqdoc:author>", "<xqdoc:author xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">Dennis Knochenwefel</xqdoc:author>", "<xqdoc:author xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">Ghislain Fourny</xqdoc:author>" ], "version" : null, "encoding" : "utf-8", "namespaces" : [ { "uri" : "http://xbrl.io/modules/bizql/archives", "prefix" : "archives" }, { "uri" : "http://xbrl.io/modules/bizql/profiles/sec/companies", "prefix" : "companies" }, { "uri" : "http://xbrl.io/modules/bizql/components", "prefix" : "components" }, { "uri" : "http://www.28msec.com/modules/credentials", "prefix" : "credentials" }, { "uri" : "http://xbrl.io/modules/bizql/facts", "prefix" : "facts" }, { "uri" : "http://xbrl.io/modules/bizql/profiles/sec/filings", "prefix" : "filings" }, { "uri" : "http://xbrl.io/modules/bizql/profiles/sec/fiscal/core", "prefix" : "fiscal-core" }, { "uri" : "http://jsoniq.org/function-library", "prefix" : "j" }, { "uri" : "http://www.28msec.com/modules/mongodb", "prefix" : "mongo" }, { "uri" : "http://xbrl.io/modules/bizql/profiles/sec/core", "prefix" : "sec" }, { "uri" : "http://xbrl.io/modules/bizql/profiles/sec/networks", "prefix" : "sec-networks" }, { "uri" : "http://zorba.io/options/versioning", "prefix" : "ver" } ], "functions" : [ { "isDocumented" : true, "arity" : 3, "name" : "balance-sheets-for-fiscal-periods-and-years", "qname" : "fiscal-core:balance-sheets-for-fiscal-periods-and-years", "signature" : "($entity-or-ids as item()*, $fiscal-period-focus as string*, $fiscal-year-focus as integer*) as object()*", "description" : " <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">Retrieves the balance sheet for the given entities and fiscal periods and years.</p>\n", "summary" : "<p>  Retrieves the balance sheet for the given entities and fiscal periods and years.</p>", "annotation_str" : "", "annotations" : [  ], "updating" : false, "parameters" : [ { "name" : "entity-or-ids", "type" : "item()", "occurrence" : "*", "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> a list of entities or their EIDs.</div>" }, { "name" : "fiscal-period-focus", "type" : "string", "occurrence" : "*", "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> the periods (YTD1, YTD2, YTD3, Q1, Q2, Q3 or FY) or $fiscal-core:ALL_FISCAL_PERIODS to accept all.</div>" }, { "name" : "fiscal-year-focus", "type" : "integer", "occurrence" : "*", "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> the years (2012) or $fiscal-core:ALL_FISCAL_YEARS to accept all.</div>" } ], "returns" : { "type" : "object()*", "description" : "the balance sheet at that date and for that formType." }, "errors" : [ "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">entities:INVALID_PARAMETER if the CIK or entity is not valid.</xqdoc:error>" ] }, { "isDocumented" : true, "arity" : 3, "name" : "facts-for-aspects-and-fiscal-periods-and-years", "qname" : "fiscal-core:facts-for-aspects-and-fiscal-periods-and-years", "signature" : "($aspects as object()?, $fiscal-period-focus as string*, $fiscal-year-focus as integer*) as object()*", "description" : " <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">Retrieves facts for the given aspects, fiscal periods and years.</p>\n", "summary" : "<p>  Retrieves facts for the given aspects, fiscal periods and years.</p>", "annotation_str" : "", "annotations" : [  ], "updating" : false, "parameters" : [ { "name" : "aspects", "type" : "object()", "occurrence" : "?", "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> an object containing aspects to filter, among which xbrl:Concept, xbrl:Entity and xbrl:Period (all optional).</div>" }, { "name" : "fiscal-period-focus", "type" : "string", "occurrence" : "*", "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> the periods (YTD1, YTD2, YTD3, Q1, Q2, Q3 or FY).</div>" }, { "name" : "fiscal-year-focus", "type" : "integer", "occurrence" : "*", "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> the years (2012)</div>" } ], "returns" : { "type" : "object()*", "description" : "all facts matching the given aspects, fiscal period and year." }, "errors" : [  ] }, { "isDocumented" : true, "arity" : 4, "name" : "facts-for-aspects-and-fiscal-periods-and-years", "qname" : "fiscal-core:facts-for-aspects-and-fiscal-periods-and-years", "signature" : "($aspects as object()?, $fiscal-period-focus as string*, $fiscal-year-focus as integer*, $options as object()?) as object()*", "description" : " <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">Retrieves facts for the given aspects, fiscal periods and years.</p>\n", "summary" : "<p>  Retrieves facts for the given aspects, fiscal periods and years.</p>", "annotation_str" : "", "annotations" : [  ], "updating" : false, "parameters" : [ { "name" : "aspects", "type" : "object()", "occurrence" : "?", "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> an object containing aspects to filter, among which xbrl:Concept, xbrl:Entity and xbrl:Period (all optional).</div>" }, { "name" : "fiscal-period-focus", "type" : "string", "occurrence" : "*", "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> the periods (YTD1, YTD2, YTD3, Q1, Q2, Q3 or FY) or $fiscal-core:ALL_FISCAL_PERIODS to accept all.</div>" }, { "name" : "fiscal-year-focus", "type" : "integer", "occurrence" : "*", "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> the years (2012) or $fiscal-core:ALL_FISCAL_YEARS to accept all.</div>" }, { "name" : "options", "type" : "object()", "occurrence" : "?", "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> <a href=\"../core#standard_options\">standard SEC BizQL options</a>.</div>" } ], "returns" : { "type" : "object()*", "description" : "all facts matching the given aspects, fiscal period and year." }, "errors" : [  ] }, { "isDocumented" : true, "arity" : 4, "name" : "facts-for-entities-and-concepts-and-fiscal-periods-and-years", "qname" : "fiscal-core:facts-for-entities-and-concepts-and-fiscal-periods-and-years", "signature" : "($entities-or-ids as item()*, $concepts as string*, $fiscal-period-focus as string*, $fiscal-year-focus as integer*) as object()*", "description" : " <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">Retrieves facts for the given entities, concepts, fiscal periods and years.</p>\n", "summary" : "<p>  Retrieves facts for the given entities, concepts, fiscal periods and years.</p>", "annotation_str" : "", "annotations" : [  ], "updating" : false, "parameters" : [ { "name" : "entities-or-ids", "type" : "item()", "occurrence" : "*", "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> a list of entities or their EIDs.</div>" }, { "name" : "concepts", "type" : "string", "occurrence" : "*", "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> a list of concept names (us-gaap:Assets)</div>" }, { "name" : "fiscal-period-focus", "type" : "string", "occurrence" : "*", "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> the periods (YTD1, YTD2, YTD3, Q1, Q2, Q3 or FY) or $fiscal-core:ALL_FISCAL_PERIODS to accept all.</div>" }, { "name" : "fiscal-year-focus", "type" : "integer", "occurrence" : "*", "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> the years (2012) or $fiscal-core:ALL_FISCAL_YEARS to accept all.</div>" } ], "returns" : { "type" : "object()*", "description" : "all facts matching entities, concepts, fiscal periods and years" }, "errors" : [ "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">entities:INVALID_PARAMETER if the CIK or entity is not valid.</xqdoc:error>" ] }, { "isDocumented" : true, "arity" : 5, "name" : "facts-for-entities-and-concepts-and-fiscal-periods-and-years", "qname" : "fiscal-core:facts-for-entities-and-concepts-and-fiscal-periods-and-years", "signature" : "($entities-or-ids as item()*, $concepts as string*, $fiscal-period-focus as string*, $fiscal-year-focus as integer*, $options as object()?) as object()*", "description" : " <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">Retrieves facts for the given entities, concepts, fiscal periods and years.</p>\n", "summary" : "<p>  Retrieves facts for the given entities, concepts, fiscal periods and years.</p>", "annotation_str" : "", "annotations" : [  ], "updating" : false, "parameters" : [ { "name" : "entities-or-ids", "type" : "item()", "occurrence" : "*", "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> a list of entities or their EIDs.</div>" }, { "name" : "concepts", "type" : "string", "occurrence" : "*", "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> a list of concept names (us-gaap:Assets)</div>" }, { "name" : "fiscal-period-focus", "type" : "string", "occurrence" : "*", "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> the periods (YTD1, YTD2, YTD3, Q1, Q2, Q3 or FY) or $fiscal-core:ALL_FISCAL_PERIODS to accept all.</div>" }, { "name" : "fiscal-year-focus", "type" : "integer", "occurrence" : "*", "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> the years (2012) or $fiscal-core:ALL_FISCAL_YEARS to accept all.</div>" }, { "name" : "options", "type" : "object()", "occurrence" : "?", "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> <a href=\"../core#standard_options\">standard SEC BizQL options</a>.</div>" } ], "returns" : { "type" : "object()*", "description" : "all facts matching entities, concepts, fiscal periods and years" }, "errors" : [ "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">entities:INVALID_PARAMETER if the CIK or entity is not valid.</xqdoc:error>" ] }, { "isDocumented" : true, "arity" : 3, "name" : "filings-for-entities-and-fiscal-periods-and-years", "qname" : "fiscal-core:filings-for-entities-and-fiscal-periods-and-years", "signature" : "($entities-or-ids as item()*, $fiscal-period-focus as string*, $fiscal-year-focus as integer*) as object()*", "description" : " <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">Retrieves all filings by entities and for given fiscal periods and years.</p>\n", "summary" : "<p>  Retrieves all filings by entities and for given fiscal periods and years.</p>", "annotation_str" : "", "annotations" : [  ], "updating" : false, "parameters" : [ { "name" : "entities-or-ids", "type" : "item()", "occurrence" : "*", "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> entities or their ids.</div>" }, { "name" : "fiscal-period-focus", "type" : "string", "occurrence" : "*", "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> fiscal periods (FY, YTD1, YTD2, YTD3, Q1, Q2, Q3, Q4) or $fiscal-core:ALL_FISCAL_PERIODS to accept all..</div>" }, { "name" : "fiscal-year-focus", "type" : "integer", "occurrence" : "*", "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> fiscal years or $fiscal-core:ALL_FISCAL_YEARS to accept all..</div>" } ], "returns" : { "type" : "object()*", "description" : "all filings that match the criteria." }, "errors" : [  ] }, { "isDocumented" : true, "arity" : 1, "name" : "fiscal-period", "qname" : "fiscal-core:fiscal-period", "signature" : "($filing-fact-or-id as item()?) as string?", "description" : " <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">Retrieves the fiscal period of a filing or a fact.</p>\n", "summary" : "<p>  Retrieves the fiscal period of a filing or a fact.</p>", "annotation_str" : "", "annotations" : [  ], "updating" : false, "parameters" : [ { "name" : "filing-fact-or-id", "type" : "item()", "occurrence" : "?", "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> a filing, a fact, or its id.</div>" } ], "returns" : { "type" : "string?", "description" : "the fiscal period (FY, YTD2, YTD3, Q1, Q2 or Q3)." }, "errors" : [  ] }, { "isDocumented" : true, "arity" : 1, "name" : "fiscal-year", "qname" : "fiscal-core:fiscal-year", "signature" : "($filing-fact-or-id as item()?) as integer?", "description" : " <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">Retrieves the fiscal year of a filing or a fact.</p>\n", "summary" : "<p>  Retrieves the fiscal year of a filing or a fact.</p>", "annotation_str" : "", "annotations" : [  ], "updating" : false, "parameters" : [ { "name" : "filing-fact-or-id", "type" : "item()", "occurrence" : "?", "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> a filing, a fact, or its id.</div>" } ], "returns" : { "type" : "integer?", "description" : "the fiscal year (e.g., 2012)." }, "errors" : [  ] }, { "isDocumented" : true, "arity" : 1, "name" : "latest-reported-fiscal-period", "qname" : "fiscal-core:latest-reported-fiscal-period", "signature" : "($entity-or-id as item()) as object()*", "description" : " <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">Retrieves the latest reported fiscal period and year for the\n supplied entity.</p>\n", "summary" : "<p>  Retrieves the latest reported fiscal period and year for the\n supplied entity.</p>", "annotation_str" : "", "annotations" : [  ], "updating" : false, "parameters" : [ { "name" : "entity-or-id", "type" : "item()", "occurrence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> an entity or its EID.</div>" } ], "returns" : { "type" : "object()*", "description" : "an object with two fields: period and year." }, "errors" : [  ] }, { "isDocumented" : true, "arity" : 2, "name" : "latest-reported-fiscal-period", "qname" : "fiscal-core:latest-reported-fiscal-period", "signature" : "($entity-or-id as item(), $type as string) as object()*", "description" : " <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">Retrieves the latest fiscal period and year for the\n supplied entity.</p>\n", "summary" : "<p>  Retrieves the latest fiscal period and year for the\n supplied entity.</p>", "annotation_str" : "", "annotations" : [  ], "updating" : false, "parameters" : [ { "name" : "entity-or-id", "type" : "item()", "occurrence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> an entity or its EID.</div>" }, { "name" : "type", "type" : "string", "occurrence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> 10-K or 10-Q or FY, YTD1, YTD2, YTD3, Q1, Q2, or Q3.</div>" } ], "returns" : { "type" : "object()*", "description" : "an object with two fields: period and year." }, "errors" : [  ] } ], "variables" : [ { "name" : "fiscal-core:ALL_FISCAL_PERIODS", "type" : "string", "description" : " Joker for all fiscal periods.\n" }, { "name" : "fiscal-core:ALL_FISCAL_YEARS", "type" : "integer", "description" : " Joker for all fiscal years.\n" } ] }, "http://zorba.io/modules/base64" : { "ns" : "http://zorba.io/modules/base64", "description" : " <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">Base64 encoding and decoding.</p>\n", "sees" : [  ], "authors" : [ "<xqdoc:author xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">Matthias Brantner</xqdoc:author>" ], "version" : null, "encoding" : "utf-8", "namespaces" : [ { "uri" : "http://zorba.io/modules/base64", "prefix" : "base64" }, { "uri" : "http://zorba.io/options/versioning", "prefix" : "ver" }, { "uri" : "http://zorba.io/errors", "prefix" : "zerr" } ], "functions" : [ { "isDocumented" : true, "arity" : 1, "name" : "decode", "qname" : "base64:decode", "signature" : "($base64 as base64Binary) as string external", "description" : " <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">Decode a base64Binary.</p>\n <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">The function assumes that the content after decoding is valid\n UTF-8.</p>\n", "summary" : "<p>  Decode a base64Binary.</p>", "annotation_str" : "", "annotations" : [  ], "updating" : false, "parameters" : [ { "name" : "base64", "type" : "base64Binary", "occurrence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> The base64Binary item to decode</div>" } ], "returns" : { "type" : "string", "description" : "the base64-decoded value as string" }, "errors" : [ "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">zerr:ZOSE0006 if $base64 contains invalid base-64 data.</xqdoc:error>" ] }, { "isDocumented" : true, "arity" : 2, "name" : "decode", "qname" : "base64:decode", "signature" : "($base64 as base64Binary, $encoding as string) as string external", "description" : " <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">Decode a base64Binary.</p>\n <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">The function assumes that the content after decoding has\n the given encoding.</p>\n", "summary" : "<p>  Decode a base64Binary.</p>", "annotation_str" : "", "annotations" : [  ], "updating" : false, "parameters" : [ { "name" : "base64", "type" : "base64Binary", "occurrence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> The base64Binary item to decode</div>" }, { "name" : "encoding", "type" : "string", "occurrence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> The encoding of the string after base64-decoding it. The encoding parameter is case insensitive.</div>" } ], "returns" : { "type" : "string", "description" : "the base64-decoded value as a string" }, "errors" : [ "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">zerr:ZXQP0006 if the given encoding is invalid or not supported. \"ASCII\" and \"UTF-8\" are guaranteed to be supported; other encodings may be supported depending on the installation.</xqdoc:error>", "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">zerr:ZOSE0006 if $base64 contains invalid base-64 data.</xqdoc:error>" ] }, { "isDocumented" : true, "arity" : 1, "name" : "encode", "qname" : "base64:encode", "signature" : "($string as string) as base64Binary external", "description" : " <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">Encode a string as base64Binary.</p>\n", "summary" : "<p>  Encode a string as base64Binary.</p>", "annotation_str" : "", "annotations" : [  ], "updating" : false, "parameters" : [ { "name" : "string", "type" : "string", "occurrence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> The item whose string-value should be encoded</div>" } ], "returns" : { "type" : "base64Binary", "description" : "the base64-encoded string-value of the item parameter" }, "errors" : [  ] } ], "variables" : [  ] }, "http://xbrl.io/modules/bizql/networks" : { "ns" : "http://xbrl.io/modules/bizql/networks", "description" : " <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">This module provides functionality for handling networks.</p>\n <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">A network is a graph of concepts and resources, of which the edges\n share the same semantics.</p>\n <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">There are several kinds of networks.\n A network can be a tree or a DAG of concepts. It can be a bipartite\n graph mapping concepts to resources.</p>\n <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">XBRL defines a number of standard networks: presentation, calculation,\n definition (essence-alias, general-special, requires-element, similar-tuples, domain-member),\n and label networks.</p>\n <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">With this module, you can retrieve the networks contained in a component, and you\n can retrieve a standard XBRL network with the provided short names.</p>\n", "sees" : [  ], "authors" : [ "<xqdoc:author xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">Charles Hoffman</xqdoc:author>", "<xqdoc:author xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">Matthias Brantner</xqdoc:author>", "<xqdoc:author xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">Dennis Knochenwefel</xqdoc:author>", "<xqdoc:author xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">Ghislain Fourny</xqdoc:author>" ], "version" : null, "encoding" : "utf-8", "namespaces" : [ { "uri" : "http://xbrl.io/modules/bizql/components", "prefix" : "components" }, { "uri" : "http://xbrl.io/modules/bizql/networks", "prefix" : "networks" } ], "functions" : [ { "isDocumented" : true, "arity" : 2, "name" : "networks-for-components-and-short-names", "qname" : "networks:networks-for-components-and-short-names", "signature" : "($components as item()*, $short-name as string*) as object()*", "description" : " <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">Retrieves the standardized networks in the supplied components with the given short names.</p>\n", "summary" : "<p>  Retrieves the standardized networks in the supplied components with the given short names.</p>", "annotation_str" : "", "annotations" : [  ], "updating" : false, "parameters" : [ { "name" : "components", "type" : "item()", "occurrence" : "*", "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> a sequence of components.</div>" }, { "name" : "short-name", "type" : "string", "occurrence" : "*", "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> the short names of the networks.</div>" } ], "returns" : { "type" : "object()*", "description" : "the standardized networks with these short names." }, "errors" : [  ] }, { "isDocumented" : true, "arity" : 1, "name" : "networks-for-components", "qname" : "networks:networks-for-components", "signature" : "($components as item()*) as object()*", "description" : " <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">Retrieves all networks in the supplied components.</p>\n", "summary" : "<p>  Retrieves all networks in the supplied components.</p>", "annotation_str" : "", "annotations" : [  ], "updating" : false, "parameters" : [ { "name" : "components", "type" : "item()", "occurrence" : "*", "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> a sequence of components.</div>" } ], "returns" : { "type" : "object()*", "description" : "all networks." }, "errors" : [  ] } ], "variables" : [ { "name" : "networks:PRESENTATION_NETWORK", "type" : "xs:string", "description" : " Short name of the presentation network.\n" }, { "name" : "networks:CALCULATION_NETWORK", "type" : "xs:string", "description" : " Short name of the calculation network.\n" }, { "name" : "networks:ESSENCE_ALIAS_NETWORK", "type" : "xs:string", "description" : " Short name of the essence-alias definition network.\n" }, { "name" : "networks:GENERAL_SPECIAL_NETWORK", "type" : "xs:string", "description" : " Short name of the general-special definition network.\n" }, { "name" : "networks:REQUIRES_ELEMENT_NETWORK", "type" : "xs:string", "description" : " Short name of the requires-element definition network.\n" }, { "name" : "networks:SIMILAR_TUPLES_NETWORK", "type" : "xs:string", "description" : " Short name of the similar-tuples definition network.\n" }, { "name" : "networks:DOMAIN_MEMBER_NETWORK", "type" : "xs:string", "description" : " Short name of the domain-member definition network.\n" } ] }, "http://jsound.io/modules/validate/map" : { "ns" : "http://jsound.io/modules/validate/map", "description" : " Map utility\n", "sees" : [  ], "authors" : [ "<xqdoc:author xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">Chris Hillery, Cezar Andrei</xqdoc:author>" ], "version" : null, "encoding" : "utf-8", "namespaces" : [ { "uri" : "http://zorba.io/annotations", "prefix" : "an" }, { "uri" : "http://jsound.io/modules/validate/map", "prefix" : "map" }, { "uri" : "http://zorba.io/options/versioning", "prefix" : "ver" } ], "functions" : [ { "isDocumented" : true, "arity" : 2, "name" : "get", "qname" : "map:get", "signature" : "($map as object(), $key as string) as item()", "description" : " Returns the value under the key.\n", "summary" : "<p> Returns the value under the key.</p>", "annotation_str" : "", "annotations" : [  ], "updating" : false, "parameters" : [ { "name" : "map", "type" : "object()", "occurrence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> the map JSON object</div>" }, { "name" : "key", "type" : "string", "occurrence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> the key</div>" } ], "returns" : { "type" : "item()", "description" : "the value under the $key, () if empty Example:" }, "errors" : [  ] }, { "isDocumented" : true, "arity" : 2, "name" : "has-key", "qname" : "map:has-key", "signature" : "($map as object(), $key as string) as boolean", "description" : " Returns true if $key exists in the map.\n", "summary" : "<p> Returns true if $key exists in the map.</p>", "annotation_str" : "", "annotations" : [  ], "updating" : false, "parameters" : [ { "name" : "map", "type" : "object()", "occurrence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> the map JSON object</div>" }, { "name" : "key", "type" : "string", "occurrence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> the key</div>" } ], "returns" : { "type" : "boolean", "description" : "true if $key exists, false otherwise Example:" }, "errors" : [  ] }, { "isDocumented" : true, "arity" : 3, "name" : "set-if-empty", "qname" : "map:set-if-empty", "signature" : "($map as object(), $key as xs:string, $value as item()) as boolean", "description" : " Only if key doesn't exist, inserts new key and value into the map and\n returns true. Otherwise returns false.\n", "summary" : "<p> Only if key doesn't exist, inserts new key and value into the map and\n returns true.</p>", "annotation_str" : " %an:sequential", "annotations" : [ { "prefix" : "an", "ns" : "http://zorba.io/annotations", "name" : "sequential", "value" : "" } ], "updating" : false, "parameters" : [ { "name" : "map", "type" : "object()", "occurrence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> the map JSON object</div>" }, { "name" : "key", "type" : "xs:string", "occurrence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> the key</div>" }, { "name" : "value", "type" : "item()", "occurrence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> the value</div>" } ], "returns" : { "type" : "boolean", "description" : "true if $key is empty, false otherwise Example:" }, "errors" : [  ] }, { "isDocumented" : true, "arity" : 3, "name" : "set", "qname" : "map:set", "signature" : "($map as object(), $key as xs:string, $value as item()) as boolean", "description" : " Inserts new key and value into the map or replaces value under the exiting key.\n Returns true all the time.\n", "summary" : "<p> Inserts new key and value into the map or replaces value under the exiting key.</p>", "annotation_str" : " %an:sequential", "annotations" : [ { "prefix" : "an", "ns" : "http://zorba.io/annotations", "name" : "sequential", "value" : "" } ], "updating" : false, "parameters" : [ { "name" : "map", "type" : "object()", "occurrence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> the map JSON object</div>" }, { "name" : "key", "type" : "xs:string", "occurrence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> the key</div>" }, { "name" : "value", "type" : "item()", "occurrence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> the value</div>" } ], "returns" : { "type" : "boolean", "description" : "true Example:" }, "errors" : [  ] } ], "variables" : [  ] }, "http://zorba.io/modules/xml" : { "ns" : "http://zorba.io/modules/xml", "description" : " <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">\n This module provides functions for reading XML files from string inputs.\n It allows reading of well-formed XML documents as well as well-formed\n external parsed entities, described by\n <a href=\"http://www.w3.org/TR/xml/#wf-entities\">XML 1.0 Well-Formed\n Parsed Entities</a>. The functions can also perform Schema and DTD\n validation of the input documents.\n </p>\n <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">The following example parses a sequence of XML elements and returns\n them in a streaming fashion - each at a time:</p>\n <pre xmlns:xqdoc=\"http://www.xqdoc.org/1.0\" class=\"ace-static\" ace-mode=\"xquery\">\n import module namespace x = \"http://zorba.io/modules/xml\";\n import schema namespace opt = \"http://zorba.io/modules/xml-options\";\n x:parse(\n   \"&lt;from1&gt;Jani&lt;/from1&gt;&lt;from2&gt;Jani&lt;/from2&gt;&lt;from3&gt;Jani&lt;/from3&gt;\",\n   &lt;opt:options&gt;\n     &lt;opt:parse-external-parsed-entity/&gt;\n   &lt;/opt:options&gt;\n )\n </pre>\n <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">Another useful option allows to skip an arbitrary number of levels\n before returning a sequence of nodes as shown in the following example:</p>\n <pre xmlns:xqdoc=\"http://www.xqdoc.org/1.0\" class=\"ace-static\" ace-mode=\"xquery\">\n import module namespace x = \"http://zorba.io/modules/xml\";\n import schema namespace opt = \"http://zorba.io/modules/xml-options\";\n x:parse(\n   \"&lt;root&gt;\n     &lt;from1&gt;Jani1&lt;/from1&gt;\n     &lt;from2&gt;Jani2&lt;/from2&gt;\n     &lt;from3&gt;Jani3&lt;/from3&gt;\n   &lt;/root&gt;\",\n   &lt;opt:options&gt;\n     &lt;opt:parse-external-parsed-entity opt:skip-root-nodes=\"1\"/&gt;\n   &lt;/opt:options&gt;\n )\n </pre>\n", "sees" : [ "<xqdoc:see xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"><a href=\"http://www.w3.org/TR/xml/#wf-entities\">XML 1.0 Well-Formed Parsed Entities</a></xqdoc:see>", "<xqdoc:see xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"><a href=\"http://www.w3.org/TR/xpath-functions-30/#func-parse-xml\"> fn:parse-xml() function in XPath and XQuery Functions and Operators 3.0</a></xqdoc:see>", "<xqdoc:see xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"><a href=\"http://xmlsoft.org/html/libxml-parser.html\">LibXml2 parser</a></xqdoc:see>" ], "authors" : [ "<xqdoc:author xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">Nicolae Brinza, Juan Zacarias</xqdoc:author>" ], "version" : null, "encoding" : "utf-8", "namespaces" : [ { "uri" : "http://www.w3.org/xqt-errors", "prefix" : "err" }, { "uri" : "http://zorba.io/modules/xml-options", "prefix" : "opt" }, { "uri" : "http://zorba.io/modules/schema", "prefix" : "schema" }, { "uri" : "http://zorba.io/options/versioning", "prefix" : "ver" }, { "uri" : "http://zorba.io/modules/xml", "prefix" : "x" }, { "uri" : "http://zorba.io/errors", "prefix" : "zerr" } ], "functions" : [ { "isDocumented" : true, "arity" : 1, "name" : "canonicalize", "qname" : "x:canonicalize", "signature" : "($xml-string as xs:string) as xs:string", "description" : " <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">A function to canonicalize the given XML string, that is, transform\n it into Canonical XML as defined by <a href=\"http://www.w3.org/TR/xml-c14n\">Canonical XML</a>.</p>\n <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">Note: This function is not streamable. If a streamable string is used\n as input for the function it will be materialized.</p>\n <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">Note: This function sets the\n <a href=\"http://xmlsoft.org/html/libxml-parser.html#xmlParserOption\">XML_PARSE_NOERROR</a>\n option when parsing the XML input.</p>\n", "summary" : "<p>  A function to canonicalize the given XML string, that is, transform\n it into Canonical XML as defined by  Canonical XML .</p>", "annotation_str" : "", "annotations" : [  ], "updating" : false, "parameters" : [ { "name" : "xml-string", "type" : "xs:string", "occurrence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> a string representation of a well formed XML to canonicalize. XML fragments are not allowed.</div>" } ], "returns" : { "type" : "xs:string", "description" : "the canonicalized XML string." }, "errors" : [ "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">err:CANO0001 invalid input.</xqdoc:error>" ] }, { "isDocumented" : true, "arity" : 2, "name" : "canonicalize", "qname" : "x:canonicalize", "signature" : "($xml-string as xs:string, $options as element(opt:options)) as xs:string", "description" : " <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">A function to canonicalize the given XML string, that is, transform\n it into Canonical XML as defined by <a href=\"http://www.w3.org/TR/xml-c14n\">Canonical XML</a>.</p>\n <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">This version of the function allows specifying certain options to be\n used when initially parsing the XML string. These are of the same form\n as the options to x:parse#2(), although the following options are\n currently ignored for this function:\n <ul>\n <li>&lt;opt:no-error/&gt;</li>\n <li>&lt;opt:base-uri/&gt;</li>\n <li>&lt;opt:schema-validate/&gt;</li>\n <li>&lt;opt:parse-external-parsed-entity/&gt;</li>\n </ul>\n </p>\n <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">Note: This function is not streamable, if a streamable string is used\n as input for the function it will be materialized.</p>\n <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">Note: This function sets the\n <a href=\"http://xmlsoft.org/html/libxml-parser.html#xmlParserOption\">XML_PARSE_NOERROR</a>\n option when parsing the XML input.</p>\n", "summary" : "<p>  A function to canonicalize the given XML string, that is, transform\n it into Canonical XML as defined by  Canonical XML .</p>", "annotation_str" : "", "annotations" : [  ], "updating" : false, "parameters" : [ { "name" : "xml-string", "type" : "xs:string", "occurrence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> a string representation of a well formed XML to canonicalize. XML fragments are not allowed.</div>" }, { "name" : "options", "type" : "element(opt:options)", "occurrence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> an XML containg options for the canonicalize function.</div>" } ], "returns" : { "type" : "xs:string", "description" : "the canonicalized XML string." }, "errors" : [ "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">err:CANO0001 invalid input.</xqdoc:error>" ] }, { "isDocumented" : true, "arity" : 2, "name" : "parse", "qname" : "x:parse", "signature" : "($xml-string as xs:string?, $options as element(opt:options)?) as node()* external", "description" : " <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">A function to parse XML files and fragments (i.e.\n <a href=\"http://www.w3.org/TR/xml/#wf-entities\">external general parsed\n entities</a>).</p>\n <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">The functions takes two arguments: the first one is the\n string to be parsed and the second argument is an &lt;options/&gt; element that\n passes a list of options to the parsing function. They are described below.\n The options element must conform to the xml-options:options element type\n from the xml-options.xsd schema. Some of these\n will be passed to the underlying library (LibXml2) and further documentation\n for them can be found at <a href=\"http://xmlsoft.org/html/libxml-parser.html\">\n LibXml2 parser</a>.</p>\n The list of available options:\n <ul xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">\n <li>\n &lt;base-uri/&gt; - the element must have a \"value\" attribute, which will provide\n the baseURI that will be used as the baseURI for every node returned by this\n function.\n </li>\n <li>\n &lt;no-error/&gt; - if present, the option will disable fatal error processing. Any\n failure to parse or validate the input in the requested manner will result\n in the function returning an empty sequence and no error will raised.\n </li>\n <li>\n &lt;schema-validate/&gt; - if present, it will request that the input string be Schema\n validated. The element accepts an attribute named \"mode\" which can have two\n values: \"strict and \"lax\". Enabling the option will produce a result that is\n equivalent to processing the input with the option disabled, and then copying\n the result using the XQuery \"validate strict|lax\" expression. This option can not\n be used together with either the &lt;DTD-validate/&gt; or the &lt;parse-external-parsed-entity/&gt;\n option. Doing so will raise a zerr:ZXQD0003 error.\n </li>\n <li>\n &lt;DTD-validate/&gt; - the option will enable the DTD-based validation. If this\n option is enabled and the input references a DTD, then the input must be a\n well-formed and DTD-valid XML document. The &lt;DTD-load/&gt; option must be used for\n external DTD files to be loaded. If the option is enabled and the input does\n not reference a DTD then the option is ignored. If the option is disabled, the\n input is not required to reference a DTD and if it does reference a DTD then\n the DTD is ignored for validation purposes. This option can not\n be used together with either the &lt;schema-validate/&gt; or the &lt;parse-external-parsed-entity&gt;\n option. Doing so will raise a zerr:ZXQD0003 error.\n </li>\n <li>\n &lt;DTD-load/&gt; - if present, it will enable loading of external DTD files.\n </li>\n <li>\n &lt;default-DTD-attributes/&gt; - if present, it will enable the default DTD attributes.\n </li>\n <li>\n &lt;parse-external-parsed-entity/&gt; - if present, it will enable the processing of XML\n external entities. If the option\n is enabled, the input must conform to the syntax extParsedEnt (production\n [78] in XML 1.0, see <a href=\"http://www.w3.org/TR/xml/#wf-entities\">\n Well-Formed Parsed Entities</a>). In addition, by default a DOCTYPE declaration is allowed,\n as described by the [28] doctypedecl production, see <a href=\"http://www.w3.org/TR/xml/#NT-doctypedecl\">\n Document Type Definition</a>. A parameter is available to forbid the appearance of the DOCTYPE.\n The result of the function call is a list\n of nodes corresponding to the top-level components of the content of the\n external entity: that is, elements, processing instructions, comments, and\n text nodes. CDATA sections and character references are expanded, and\n adjacent characters are merged so the result contains no adjacent text\n nodes. If the option is disabled, the input must be a well-formed XML\n document conforming to the Document production\n (<a href=\"http://www.w3.org/TR/xml/#sec-well-formed\">production [1] in XML 1.0</a>).\n This option can not be used together with either the &lt;schema-validate/&gt; or the &lt;DTD-validate/&gt;\n option. Doing so will raise a zerr:ZXQD0003 error.\n The &lt;parse-external-parsed-entity/&gt; option has three parameters, given by attributes. The first\n attribute is \"skip-root-nodes\" and it can have a non-negative value. Specifying the paramter\n tells the parser to skip the given number of root nodes and return only their children. E.g.\n skip-root-nodes=\"1\" is equivalent to parse-xml($xml-string)/node()/node() . skip-root-nodes=\"2\" is equivalent\n to parse-xml($xml-string)/node()/node()/node() , etc. The second attribute is \"skip-top-level-text-nodes\" with a\n boolean value. Specifying \"true\" will tell the parser to skip top level text nodes, returning\n only the top level elements, comments, PIs, etc. This parameter works in combination with\n the \"skip-root-nodes\" paramter, thus top level text nodes are skipped after \"skip-root-nodes\" has\n been applied. The third paramter is \"error-on-doctype\" and will generate an error if a DOCTYPE\n declaration appears in the input, which by default is allowed.\n </li>\n <li>\n &lt;substitute-entities/&gt; - if present, it will enable the XML entities substitutions.\n </li>\n <li>\n &lt;remove-redundant-ns/&gt; - if present, the parser will remove redundant namespaces declarations.\n </li>\n <li>\n &lt;no-CDATA/&gt; - if present, the parser will merge CDATA nodes as text nodes.\n </li>\n <li>\n &lt;xinclude-substitutions/&gt; - if present, it will enable the XInclude substitutions.\n </li>\n <li>\n &lt;no-xinclude-nodes/&gt; - if present, the parser will not generate XInclude START/END nodes.\n </li>\n </ul>\n <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">\n An example that sets the base-uri of the parsed external entities:\n </p>\n <pre xmlns:xqdoc=\"http://www.xqdoc.org/1.0\" class=\"ace-static\" ace-mode=\"xquery\">\n   import module namespace x = \"http://zorba.io/modules/xml\";\n   import schema namespace opt = \"http://zorba.io/modules/xml-options\";\n   x:parse(\"&lt;from1&gt;Jani&lt;/from1&gt;&lt;from2&gt;Jani&lt;/from2&gt;&lt;from3&gt;Jani&lt;/from3&gt;\",\n     &lt;opt:options&gt;\n       &lt;opt:base-uri opt:value=\"urn:test\"/&gt;\n       &lt;opt:parse-external-parsed-entity/&gt;\n     &lt;/opt:options&gt;\n   )\n </pre>\n", "summary" : "<p>  A function to parse XML files and fragments (i.</p>", "annotation_str" : "", "annotations" : [  ], "updating" : false, "parameters" : [ { "name" : "xml-string", "type" : "xs:string", "occurrence" : "?", "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> The string that holds the XML to be parsed. If empty, the function will return an empty sequence</div>" }, { "name" : "options", "type" : "element(opt:options)", "occurrence" : "?", "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> The options for the parsing</div>" } ], "returns" : { "type" : "node()*", "description" : "The parsed XML as a document node or a list of nodes, or an empty sequence." }, "errors" : [ "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">zerr:ZXQD0003 The error will be raised if the options to the function are inconsistent.</xqdoc:error>", "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">err:FODC0006 The error will be raised if the input string is not a valid XML document or fragment (external general parsed entity) or if DTD validation was enabled and the document has not passed it.</xqdoc:error>", "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">err:XQDY0027 The error will be raised if schema validation was enabled and the input document has not passed it or if the parsing options are not conformant to the xml-options.xsd schema.</xqdoc:error>" ] } ], "variables" : [  ] }, "http://www.zorba-xquery.com/modules/process" : { "ns" : "http://www.zorba-xquery.com/modules/process", "description" : " This module provides functions to create a native process and return the result\n (i.e. exit code, result on standard out and error).\n <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">\n Example:\n<pre class=\"ace-static\" ace-mode=\"xquery\">\n  import module namespace proc = \"http://www.zorba-xquery.com/modules/process\";\n  proc:exec(\"ls\")\n</pre>\n </p>\n <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">\n Potential result:\n <pre class=\"ace-static\" ace-mode=\"xquery\">\n &lt;result xmlns=\"http://www.zorba-xquery.com/modules/process\"&gt;\n   &lt;stdout&gt;myfile.txt&lt;/stout&gt;\n   &lt;stderr/&gt;\n   &lt;exit-code&gt;0&lt;/exit-code&gt;\n &lt;/result&gt;\n </pre>\n </p>\n", "sees" : [  ], "authors" : [ "<xqdoc:author xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">Cezar Andrei</xqdoc:author>" ], "version" : null, "encoding" : "utf-8", "namespaces" : [ { "uri" : "http://zorba.io/annotations", "prefix" : "an" }, { "uri" : "http://www.zorba-xquery.com/modules/process", "prefix" : "process" }, { "uri" : "http://zorba.io/options/versioning", "prefix" : "ver" } ], "functions" : [ { "isDocumented" : true, "arity" : 1, "name" : "exec", "qname" : "process:exec", "signature" : "($cmd as xs:string) as element(process:result) external", "description" : " Executes the specified string command in a separate process.\n This function does not allow arguments to be passed to\n the command.\n", "summary" : "<p> Executes the specified string command in a separate process.</p>", "annotation_str" : " %an:sequential", "annotations" : [ { "prefix" : "an", "ns" : "http://zorba.io/annotations", "name" : "sequential", "value" : "" } ], "updating" : false, "parameters" : [ { "name" : "cmd", "type" : "xs:string", "occurrence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> command to be executed (without arguments)</div>" } ], "returns" : { "type" : "element(process:result)", "description" : "the result of the execution as an element as shown in the documentation of this module. The exit-code element returns the exit code of the child process. For POSIX compliant platforms: returns the process exit code. If process is terminated or stopped: 128 + termination signal code. For Windows platforms: returns the return value of the process or the exit or terminate process specified value." }, "errors" : [ "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">process:PROC01 if an error occurred while communicating with the executed process.</xqdoc:error>" ] }, { "isDocumented" : true, "arity" : 2, "name" : "exec", "qname" : "process:exec", "signature" : "($cmd as xs:string, $args as xs:string*) as element(process:result) external", "description" : " Executes the specified string command in a separate process.\n Each of the strings in the sequence passed in as the second\n argument is passed as an argument to the executed command.\n", "summary" : "<p> Executes the specified string command in a separate process.</p>", "annotation_str" : " %an:sequential", "annotations" : [ { "prefix" : "an", "ns" : "http://zorba.io/annotations", "name" : "sequential", "value" : "" } ], "updating" : false, "parameters" : [ { "name" : "cmd", "type" : "xs:string", "occurrence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> command to be executed (without arguments)</div>" }, { "name" : "args", "type" : "xs:string", "occurrence" : "*", "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> the arguments passed to the executed command (e.g. \"-la\")</div>" } ], "returns" : { "type" : "element(process:result)", "description" : "the result of the execution as an element as shown in the documentation of this module. The exit-code element returns the exit code of the child process. For POSIX compliant platforms: returns the process exit code. If process is terminated or stopped: 128 + termination signal code. For Windows platforms: returns the return value of the process or the exit or terminate process specified value." }, "errors" : [ "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">process:PROC01 if an error occurred while communicating with the executed process.</xqdoc:error>" ] } ], "variables" : [  ] }, "http://www.28msec.com/modules/maps" : { "ns" : "http://www.28msec.com/modules/maps", "description" : " <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">This module defines a set of functions for working with maps. A map\n is identified by a string and can be created using the map:create function\n and dropped using the map:drop function.</p>\n <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">It is possible to create persistent and transient maps. The lifetime of a\n transient map is limited by the execution of the current query.\n A persistent map lives until it is explicitly dropped.\n Accordingly, it is also available to other requests.</p>\n <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">For example,\n <pre class=\"ace-static\" ace-mode=\"xquery\">map:create(\"my-map\", [\"string\", \"integer\"], { \"persistent\" : false })</pre>\n will create a transient map named my-map having two keys.\n The types of the keys are string and integer.\n </p>\n <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">The key of a particular entry in the map can consist of a tuple of\n atomic values (called key attributes). The actual type of each attribute\n is determined when the map is created. The value of each entry is a\n sequence of items. If an item in this sequence is a object or array,\n this item needs to belong to a collection, otherwise, an error is raised.</p>\n <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">For every persistent map, 28.io will create a new collection\n in your MongoDB database. The collection will have the prefix <em>_28.map</em>.\n For example, if your map is called foo, the according collection will\n be named <em>_28.map.foo</em>.</p>\n", "sees" : [  ], "authors" : [ "<xqdoc:author xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">28msec</xqdoc:author>" ], "version" : null, "encoding" : "utf-8", "namespaces" : [ { "uri" : "http://zorba.io/annotations", "prefix" : "an" }, { "uri" : "http://www.28msec.com/modules/maps", "prefix" : "map" }, { "uri" : "http://zorba.io/options/versioning", "prefix" : "ver" }, { "uri" : "http://zorba.io/errors", "prefix" : "zerr" } ], "functions" : [ { "isDocumented" : true, "arity" : 0, "name" : "available-maps", "qname" : "map:available-maps", "signature" : "() as string* external", "description" : " The function returns a sequence of names of the maps that are\n available (persistent and non-persistent). The sequence will be\n empty if there are no maps.\n", "summary" : "<p> The function returns a sequence of names of the maps that are\n available (persistent and non-persistent).</p>", "annotation_str" : "", "annotations" : [  ], "updating" : false, "parameters" : [  ], "returns" : { "type" : "string*", "description" : "A sequence of string, one for each available map, or an emtpy sequence." }, "errors" : [  ] }, { "isDocumented" : true, "arity" : 2, "name" : "create", "qname" : "map:create", "signature" : "($name as string, $key-types as item()) as empty-sequence() external", "description" : " Create a persistent map with a given name and type identifiers for the key\n attributes.\n If the map has only one key attribute, a single type identifier is given,\n for more than one key attribute an array of type identifiers is given.\n Calling this function is equivalent to calling create with the options\n <pre xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">{ \"persistent\" : true }</pre>\n Note that the function is sequential and immediately creates the map.\n <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">Each key-type should be specified as string (e.g. \"integer\",\n \"string\", \"boolean\", \"double\", or \"datetime\").</p>\n <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">For example,\n <pre>map:create(\"my-map\", \"string\")</pre> or\n <pre>map:create(\"my-map\", [\"string\", \"integer\"])</pre>.</p>\n", "summary" : "<p> Create a persistent map with a given name and type identifiers for the key\n attributes.</p>", "annotation_str" : " %an:sequential", "annotations" : [ { "prefix" : "an", "ns" : "http://zorba.io/annotations", "name" : "sequential", "value" : "" } ], "updating" : false, "parameters" : [ { "name" : "name", "type" : "string", "occurrence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> the name of the map (the restrictons on collection names apply)</div>" }, { "name" : "key-types", "type" : "item()", "occurrence" : null, "description" : "" } ], "returns" : { "type" : "empty-sequence()", "description" : "the function is sequential and immediately creates the corresponding map. It returns the empty-sequence." }, "errors" : [ "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">err:XPTY0004 if any of the key attribute types is not a subtype of anyAtomicType.</xqdoc:error>", "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">zerr:ZSTR0001 if a map with the given name already exists.</xqdoc:error>", "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">zerr:ZDDY1000 if the given name is not a legal collection name</xqdoc:error>", "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">zerr:ZDDY0043 if any of the given options has an invalid type</xqdoc:error>" ] }, { "isDocumented" : true, "arity" : 3, "name" : "create", "qname" : "map:create", "signature" : "($name as string, $key-types as item(), $options as object()) as empty-sequence() external", "description" : " Create a map with a given name, type identifiers for the key attributes, and\n options.\n If the map has only one key attribute, a single type identifier is given,\n for more than one key attribute an array of type identifiers is given.\n Currently only one option is supported: To create a transient map the object\n <code xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">{ \"persistent\" : false }</code>\n has to be passed to the $options parameter.\n Note that the function is sequential and immediately creates the map in the\n store.\n", "summary" : "<p> Create a map with a given name, type identifiers for the key attributes, and\n options.</p>", "annotation_str" : " %an:sequential", "annotations" : [ { "prefix" : "an", "ns" : "http://zorba.io/annotations", "name" : "sequential", "value" : "" } ], "updating" : false, "parameters" : [ { "name" : "name", "type" : "string", "occurrence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> the name of the map (the restrictons on collection names apply)</div>" }, { "name" : "key-types", "type" : "item()", "occurrence" : null, "description" : "" }, { "name" : "options", "type" : "object()", "occurrence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> an object describing options for the map</div>" } ], "returns" : { "type" : "empty-sequence()", "description" : "the function is sequential and immediately creates the corresponding map but returns the empty-sequence." }, "errors" : [ "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">err:XPTY0004 if any of the attribute types is not a subtype of anyAtomicType.</xqdoc:error>", "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">zerr:ZSTR0001 if a map with the given name already exists.</xqdoc:error>", "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">zerr:ZDDY1000 if the given name is not a legal collection name</xqdoc:error>", "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">zerr:ZDDY0043 if any of the given options has an invalid type</xqdoc:error>" ] }, { "isDocumented" : true, "arity" : 2, "name" : "delete", "qname" : "map:delete", "signature" : "($name as string, $key as item()) as empty-sequence() external", "description" : " Removes an entry identified by the given key from the map.\n If the map has only one key attribute, a single key value is given, for\n more than one key attribute an array of key values is given.\n Note that it is possible to insert entries with empty key attributes.\n However as the removing the entries is based on the \"eq\" comparison and\n as \"eq\" with an empty sequence always return false, it is not possible\n to delete these entries.\n", "summary" : "<p> Removes an entry identified by the given key from the map.</p>", "annotation_str" : " %an:sequential", "annotations" : [ { "prefix" : "an", "ns" : "http://zorba.io/annotations", "name" : "sequential", "value" : "" } ], "updating" : false, "parameters" : [ { "name" : "name", "type" : "string", "occurrence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> the name of the map</div>" }, { "name" : "key", "type" : "item()", "occurrence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> either a single attribute key or an array of keys</div>" } ], "returns" : { "type" : "empty-sequence()", "description" : "the function is sequential and immediately deletes the entry into the map but returns the empty-sequence." }, "errors" : [ "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">zerr:ZDDY0023 if a map with the given name does not exist.</xqdoc:error>", "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">zerr:ZDDY0025 if the given number of key attributes does not match the number of key attributes specified when creating the map (see the map:create function).</xqdoc:error>", "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">zerr:ZXQD0005 if any of the given key attributes can not be cast (or is not a subtype) of the corresponding key attribute specified when creating the map.</xqdoc:error>" ] }, { "isDocumented" : true, "arity" : 1, "name" : "drop", "qname" : "map:drop", "signature" : "($name as string) as empty-sequence() external", "description" : " Deletes the map with the given name.\n", "summary" : "<p> Deletes the map with the given name.</p>", "annotation_str" : " %an:sequential", "annotations" : [ { "prefix" : "an", "ns" : "http://zorba.io/annotations", "name" : "sequential", "value" : "" } ], "updating" : false, "parameters" : [ { "name" : "name", "type" : "string", "occurrence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> the name of the map to drop</div>" } ], "returns" : { "type" : "empty-sequence()", "description" : "the function is sequential and immediately drops the map. It returns the empty-sequence." }, "errors" : [ "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">zerr:ZDDY0023 if a map with the given name does not exist.</xqdoc:error>" ] }, { "isDocumented" : true, "arity" : 2, "name" : "get", "qname" : "map:get", "signature" : "($name as string, $key as item()) as item()* external", "description" : " Returns the value of the entry with the given key from the map.\n If the map has only one key attribute, a single key value is given, for\n more than one key attribute an array of key values is given.\n Note that it is possible to insert entries with empty key attributes.\n However as the getting the entries is based on the \"eq\" comparison and\n as \"eq\" with an empty sequence always return false, it is not possible\n to retrieve these entries.\n <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">For example,\n <pre>map:get(\"my-map\", \"key\")</pre> or\n <pre>map:get(\"my-map\", [ \"key1\", \"key2\" ])</pre>.</p>\n", "summary" : "<p> Returns the value of the entry with the given key from the map.</p>", "annotation_str" : "", "annotations" : [  ], "updating" : false, "parameters" : [ { "name" : "name", "type" : "string", "occurrence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> the name of the map</div>" }, { "name" : "key", "type" : "item()", "occurrence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> either a single attribute key or an array of keys</div>" } ], "returns" : { "type" : "item()*", "description" : "the value of the entry in the map identified by the given key. The empty-sequence will be returned if no entry with the given key is contained in the map." }, "errors" : [ "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">zerr:ZDDY0023 if a map with the given name does not exist.</xqdoc:error>", "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">zerr:ZDDY0025 if the given number of key attributes does not match the number of key attributes specified when creating the map (see the map:create function).</xqdoc:error>", "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">zerr:ZXQD0005 if any of the given key attributes can not be cast (or is not a subtype) of the corresponding key attribute specified when creating the map.</xqdoc:error>" ] }, { "isDocumented" : true, "arity" : 3, "name" : "insert", "qname" : "map:insert", "signature" : "($name as string, $key as item(), $value as item()*) as empty-sequence() external", "description" : " Inserts a new entry into the map with the given name.\n If the map has only one key attribute, a single key value is given, for\n more than one key attribute an array of key values is given.\n If an entry with the given key already exists in the map, the value\n sequences of the existing entry and the sequence passed using $value\n argument are concatenated.\n <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">If a map is persistent and if an item in the value sequence\n is an object or array, this item needs to belong to a collection,\n otherwise, an an error is raised.</p>\n Note that it is possible to insert entries with empty key attributes\n or key attributes having the value <code xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">null</code>. However, as\n the comparison with an empty sequence or null always returns false,\n it is not possible to retrieve these entries.\n <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">For example,\n <pre>map:insert(\"my-map\", \"key\", \"value\")</pre> or\n <pre>map:insert(\"my-map\", [ \"key1\", \"key2\" ] , (42, \"value\"))</pre>.</p>\n", "summary" : "<p> Inserts a new entry into the map with the given name.</p>", "annotation_str" : " %an:sequential", "annotations" : [ { "prefix" : "an", "ns" : "http://zorba.io/annotations", "name" : "sequential", "value" : "" } ], "updating" : false, "parameters" : [ { "name" : "name", "type" : "string", "occurrence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> the name of the map</div>" }, { "name" : "key", "type" : "item()", "occurrence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> either a single attribute key or an array of keys</div>" }, { "name" : "value", "type" : "item()", "occurrence" : "*", "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> the value of the entry to insert</div>" } ], "returns" : { "type" : "empty-sequence()", "description" : "the function is sequential and immediately inserts the entry into the map. It returns the empty-sequence." }, "errors" : [ "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">zerr:ZDDY0023 if a map with the given name does not exist.</xqdoc:error>", "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">zerr:ZDDY0025 if the given number of key attributes does not match the number of key attributes specified when creating the map (see the map:create function).</xqdoc:error>", "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">zerr:ZXQD0005 if any of the given key attributes can not be cast (or is not a subtype) of the corresponding key attribute specified when creating the map.</xqdoc:error>", "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">zerr:ZDDY1003 if the value to insert is an object or array it must belong to a collection.</xqdoc:error>" ] }, { "isDocumented" : true, "arity" : 1, "name" : "keys", "qname" : "map:keys", "signature" : "($name as string) as array()* external", "description" : " Returns the keys of all entries of a map. The keys\n are returned as sequence of arrays.\n The following condition always holds:\n <tt xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">map:size($name) eq count(map:keys($name))</tt>\n", "summary" : "<p> Returns the keys of all entries of a map.</p>", "annotation_str" : "", "annotations" : [  ], "updating" : false, "parameters" : [ { "name" : "name", "type" : "string", "occurrence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> the name of the map</div>" } ], "returns" : { "type" : "array()*", "description" : "an sequence of arrays each array containing the values of all attributes of one key." }, "errors" : [ "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">zerr:ZDDY0023 if a map with the given name does not exist.</xqdoc:error>" ] }, { "isDocumented" : true, "arity" : 1, "name" : "options", "qname" : "map:options", "signature" : "($name as string) as object() external", "description" : " The function returns the options that were passed during creation or the\n default options if no options were passed.\n", "summary" : "<p> The function returns the options that were passed during creation or the\n default options if no options were passed.</p>", "annotation_str" : "", "annotations" : [  ], "updating" : false, "parameters" : [ { "name" : "name", "type" : "string", "occurrence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> the name of the map</div>" } ], "returns" : { "type" : "object()", "description" : "an options object" }, "errors" : [ "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">zerr:ZDDY0023 if a map with the given name does not exist.</xqdoc:error>" ] }, { "isDocumented" : true, "arity" : 1, "name" : "size", "qname" : "map:size", "signature" : "($name as string) as integer external", "description" : " The number of entries in a map.\n The following condition always holds:\n <tt xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">map:size($name) eq count(map:keys($name))</tt>\n", "summary" : "<p> The number of entries in a map.</p>", "annotation_str" : "", "annotations" : [  ], "updating" : false, "parameters" : [ { "name" : "name", "type" : "string", "occurrence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> the name of the map</div>" } ], "returns" : { "type" : "integer", "description" : "the number of entries in the map." }, "errors" : [ "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">zerr:ZDDY0023 if a map with the given name does not exist.</xqdoc:error>" ] } ], "variables" : [  ] }, "http://www.w3.org/2005/xpath-functions/math" : { "ns" : "http://www.w3.org/2005/xpath-functions/math", "description" : " This module contains all the functions part of the\n W3C XPath and XQuery Functions and Operators 3.0\n section \"4.7 Trigonometric and exponential functions\".\n", "sees" : [ "<xqdoc:see xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">http://www.w3.org/TR/xpath-functions-30/#trigonometry</xqdoc:see>" ], "authors" : [ "<xqdoc:author xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">www.w3c.org</xqdoc:author>" ], "version" : null, "encoding" : "utf-8", "namespaces" : [ { "uri" : "http://www.w3.org/2005/xpath-functions/math", "prefix" : "math" } ], "functions" : [ { "isDocumented" : true, "arity" : 1, "name" : "acos", "qname" : "math:acos", "signature" : "($arg as xs:double?) as xs:double? external", "description" : " <div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"><p xmlns:e=\"http://www.w3.org/1999/XSL/Spec/ElementSyntax\">Returns the arc cosine of the argument, the result being in the range zero to\n                +<var>π</var> radians.</p><p xmlns:e=\"http://www.w3.org/1999/XSL/Spec/ElementSyntax\"><example role=\"signature\"><proto name=\"acos\" return-type=\"xs:double?\" isOp=\"no\" prefix=\"math\" returnEmptyOk=\"no\" returnSeq=\"no\" returnVaries=\"no\" isSchema=\"no\" isDatatype=\"no\" isSpecial=\"no\"><arg name=\"arg\" type=\"xs:double?\"/></proto></example></p><p xmlns:e=\"http://www.w3.org/1999/XSL/Spec/ElementSyntax\">This function is <termref def=\"dt-deterministic\">deterministic</termref>, <termref def=\"dt-context-independent\">context-independent</termref>,  and <termref def=\"dt-focus-independent\">focus-independent</termref>. </p><p xmlns:e=\"http://www.w3.org/1999/XSL/Spec/ElementSyntax\">If <code>$arg</code> is the empty sequence, the function returns the empty sequence.</p><p xmlns:e=\"http://www.w3.org/1999/XSL/Spec/ElementSyntax\" diff=\"chg\" at=\"G\">Otherwise the result is the arc cosine of <code>$</code><var>θ</var>,\n             treated as an angle in radians, as defined in the <bibref ref=\"ieee754-2008\"/>\n             specification of the <code>acos</code> function applied to 64-bit binary floating point\n             values.</p><p xmlns:e=\"http://www.w3.org/1999/XSL/Spec/ElementSyntax\">The treatment of the <code>invalidOperation</code> exception is defined in <specref ref=\"op.numeric\"/>. </p><p xmlns:e=\"http://www.w3.org/1999/XSL/Spec/ElementSyntax\">If <code>$arg</code> is <code>NaN</code>, or if its absolute value is greater than one,\n             then the result is <code>NaN</code>.</p><p xmlns:e=\"http://www.w3.org/1999/XSL/Spec/ElementSyntax\">In other cases the result is an <code>xs:double</code> value representing an angle\n                <var>θ</var> in radians in the range <code>0 &lt;= $</code><var>θ</var><code> &lt;=\n                +</code><var>π</var>. </p></div>\n", "summary" : "<p>  Returns the arc cosine of the argument, the result being in the range zero to\n                + π  radians.</p>", "annotation_str" : "", "annotations" : [  ], "updating" : false, "parameters" : [ { "name" : "arg", "type" : "xs:double", "occurrence" : "?", "description" : "" } ], "returns" : { "type" : "xs:double?", "description" : "" }, "errors" : [  ] }, { "isDocumented" : true, "arity" : 1, "name" : "asin", "qname" : "math:asin", "signature" : "($arg as xs:double?) as xs:double? external", "description" : " <div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"><p xmlns:e=\"http://www.w3.org/1999/XSL/Spec/ElementSyntax\">Returns the arc sine of the argument, the result being in the range\n                -<var>π</var>/2 to +<var>π</var>/2 radians.</p><p xmlns:e=\"http://www.w3.org/1999/XSL/Spec/ElementSyntax\"><example role=\"signature\"><proto name=\"asin\" return-type=\"xs:double?\" isOp=\"no\" prefix=\"math\" returnEmptyOk=\"no\" returnSeq=\"no\" returnVaries=\"no\" isSchema=\"no\" isDatatype=\"no\" isSpecial=\"no\"><arg name=\"arg\" type=\"xs:double?\"/></proto></example></p><p xmlns:e=\"http://www.w3.org/1999/XSL/Spec/ElementSyntax\">This function is <termref def=\"dt-deterministic\">deterministic</termref>, <termref def=\"dt-context-independent\">context-independent</termref>,  and <termref def=\"dt-focus-independent\">focus-independent</termref>. </p><p xmlns:e=\"http://www.w3.org/1999/XSL/Spec/ElementSyntax\">If <code>$arg</code> is the empty sequence, the function returns the empty sequence.</p><p xmlns:e=\"http://www.w3.org/1999/XSL/Spec/ElementSyntax\" diff=\"chg\" at=\"G\">Otherwise the result is the arc sine of <code>$</code><var>θ</var>,\n             treated as an angle in radians, as defined in the <bibref ref=\"ieee754-2008\"/>\n             specification of the <code>asin</code> function applied to 64-bit binary floating point\n             values.</p><p xmlns:e=\"http://www.w3.org/1999/XSL/Spec/ElementSyntax\">The treatment of the <code>invalidOperation</code> and <code>underflow</code> exceptions\n             is defined in <specref ref=\"op.numeric\"/>. </p><p xmlns:e=\"http://www.w3.org/1999/XSL/Spec/ElementSyntax\">If <code>$arg</code> is positive or negative zero, the result is <code>$arg</code>.</p><p xmlns:e=\"http://www.w3.org/1999/XSL/Spec/ElementSyntax\">If <code>$arg</code> is <code>NaN</code>, or if its absolute value is greater than one,\n             then the result is <code>NaN</code>.</p><p xmlns:e=\"http://www.w3.org/1999/XSL/Spec/ElementSyntax\">In other cases the result is an <code>xs:double</code> value representing an angle\n                <var>θ</var> in radians in the range -<var>π</var><code>/2 &lt;=\n                $</code><var>θ</var><code> &lt;= +</code><var>π</var><code>/2</code>. </p></div>\n", "summary" : "<p>  Returns the arc sine of the argument, the result being in the range\n                - π /2 to + π /2 radians.</p>", "annotation_str" : "", "annotations" : [  ], "updating" : false, "parameters" : [ { "name" : "arg", "type" : "xs:double", "occurrence" : "?", "description" : "" } ], "returns" : { "type" : "xs:double?", "description" : "" }, "errors" : [  ] }, { "isDocumented" : true, "arity" : 1, "name" : "atan", "qname" : "math:atan", "signature" : "($arg as xs:double?) as xs:double? external", "description" : " <div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"><p xmlns:e=\"http://www.w3.org/1999/XSL/Spec/ElementSyntax\">Returns the arc tangent of the argument, the result being in the range\n                -<var>π</var>/2 to +<var>π</var>/2 radians.</p><p xmlns:e=\"http://www.w3.org/1999/XSL/Spec/ElementSyntax\"><example role=\"signature\"><proto name=\"atan\" return-type=\"xs:double?\" isOp=\"no\" prefix=\"math\" returnEmptyOk=\"no\" returnSeq=\"no\" returnVaries=\"no\" isSchema=\"no\" isDatatype=\"no\" isSpecial=\"no\"><arg name=\"arg\" type=\"xs:double?\"/></proto></example></p><p xmlns:e=\"http://www.w3.org/1999/XSL/Spec/ElementSyntax\">This function is <termref def=\"dt-deterministic\">deterministic</termref>, <termref def=\"dt-context-independent\">context-independent</termref>,  and <termref def=\"dt-focus-independent\">focus-independent</termref>. </p><p xmlns:e=\"http://www.w3.org/1999/XSL/Spec/ElementSyntax\">If <code>$arg</code> is the empty sequence, the function returns the empty sequence.</p><p xmlns:e=\"http://www.w3.org/1999/XSL/Spec/ElementSyntax\" diff=\"chg\" at=\"G\">Otherwise the result is the arc tangent of <code>$</code><var>θ</var>,\n             treated as an angle in radians, as defined in the <bibref ref=\"ieee754-2008\"/>\n             specification of the <code>atan</code> function applied to 64-bit binary floating point\n             values.</p><p xmlns:e=\"http://www.w3.org/1999/XSL/Spec/ElementSyntax\">The treatment of the <code>underflow</code> exception is defined in <specref ref=\"op.numeric\"/>. </p><p xmlns:e=\"http://www.w3.org/1999/XSL/Spec/ElementSyntax\">If <code>$arg</code> is positive or negative zero, the result is <code>$arg</code>.</p><p xmlns:e=\"http://www.w3.org/1999/XSL/Spec/ElementSyntax\">If <code>$arg</code> is <code>NaN</code> then the result is <code>NaN</code>.</p><p xmlns:e=\"http://www.w3.org/1999/XSL/Spec/ElementSyntax\">In other cases the result is an <code>xs:double</code> value representing an angle\n                <var>θ</var> in radians in the range -<var>π</var><code>/2 &lt;=\n                $</code><var>θ</var><code> &lt;= +</code><var>π</var><code>/2</code>. </p></div>\n", "summary" : "<p>  Returns the arc tangent of the argument, the result being in the range\n                - π /2 to + π /2 radians.</p>", "annotation_str" : "", "annotations" : [  ], "updating" : false, "parameters" : [ { "name" : "arg", "type" : "xs:double", "occurrence" : "?", "description" : "" } ], "returns" : { "type" : "xs:double?", "description" : "" }, "errors" : [  ] }, { "isDocumented" : true, "arity" : 2, "name" : "atan2", "qname" : "math:atan2", "signature" : "($y as xs:double, $x as xs:double) as xs:double external", "description" : " <div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"><p xmlns:e=\"http://www.w3.org/1999/XSL/Spec/ElementSyntax\">Returns the angle in radians subtended at the origin by the point on a plane\n             with coordinates (x, y) and the positive x-axis, the result being in the range\n                -<var>π</var> to +<var>π</var>.</p><p xmlns:e=\"http://www.w3.org/1999/XSL/Spec/ElementSyntax\"><example role=\"signature\"><proto name=\"atan2\" return-type=\"xs:double\" isOp=\"no\" prefix=\"math\" returnEmptyOk=\"no\" returnSeq=\"no\" returnVaries=\"no\" isSchema=\"no\" isDatatype=\"no\" isSpecial=\"no\"><arg name=\"y\" type=\"xs:double\"/><arg name=\"x\" type=\"xs:double\"/></proto></example></p><p xmlns:e=\"http://www.w3.org/1999/XSL/Spec/ElementSyntax\">This function is <termref def=\"dt-deterministic\">deterministic</termref>, <termref def=\"dt-context-independent\">context-independent</termref>,  and <termref def=\"dt-focus-independent\">focus-independent</termref>. </p><p xmlns:e=\"http://www.w3.org/1999/XSL/Spec/ElementSyntax\" diff=\"chg\" at=\"G\">The result is the value of <code>atan2(y, x)</code> as defined in the\n                <bibref ref=\"ieee754-2008\"/> specification of the <code>atan2</code> function applied\n             to 64-bit binary floating point values.</p><p xmlns:e=\"http://www.w3.org/1999/XSL/Spec/ElementSyntax\">The treatment of the <code>underflow</code> exception is defined in <specref ref=\"op.numeric\"/>. </p><p xmlns:e=\"http://www.w3.org/1999/XSL/Spec/ElementSyntax\">If <phrase diff=\"chg\" at=\"L\">either argument</phrase> is <code>NaN</code>\n             then the result is <code>NaN</code>.</p><p xmlns:e=\"http://www.w3.org/1999/XSL/Spec/ElementSyntax\">If <code>$y</code> is positive and <code>$x</code> is positive and finite, then\n             (subject to rules for overflow, underflow and approximation)\n          the value of <code>atan2($y, $x)</code> is <code>atan($y div $x)</code>.</p><p xmlns:e=\"http://www.w3.org/1999/XSL/Spec/ElementSyntax\">If <code>$y</code> is positive and <code>$x</code> is negative and finite, then\n             (subject to the same caveats)\n             the value of <code>atan2($y, $x)</code> is <var>π</var> <code>- atan($y div $x)</code>.</p><p xmlns:e=\"http://www.w3.org/1999/XSL/Spec/ElementSyntax\">Some results for special values of the arguments are shown in the examples below.</p></div>\n", "summary" : "<p>  Returns the angle in radians subtended at the origin by the point on a plane\n             with coordinates (x, y) and the positive x-axis, the result being in the range\n                - π  to + π .</p>", "annotation_str" : "", "annotations" : [  ], "updating" : false, "parameters" : [ { "name" : "y", "type" : "xs:double", "occurrence" : null, "description" : "" }, { "name" : "x", "type" : "xs:double", "occurrence" : null, "description" : "" } ], "returns" : { "type" : "xs:double", "description" : "" }, "errors" : [  ] }, { "isDocumented" : true, "arity" : 1, "name" : "cos", "qname" : "math:cos", "signature" : "($theta as xs:double?) as xs:double? external", "description" : " <div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"><p xmlns:e=\"http://www.w3.org/1999/XSL/Spec/ElementSyntax\">Returns the cosine of the argument, expressed in radians.</p><p xmlns:e=\"http://www.w3.org/1999/XSL/Spec/ElementSyntax\"><example role=\"signature\"><proto name=\"cos\" return-type=\"xs:double?\" isOp=\"no\" prefix=\"math\" returnEmptyOk=\"no\" returnSeq=\"no\" returnVaries=\"no\" isSchema=\"no\" isDatatype=\"no\" isSpecial=\"no\"><arg name=\"θ\" type=\"xs:double?\"/></proto></example></p><p xmlns:e=\"http://www.w3.org/1999/XSL/Spec/ElementSyntax\">This function is <termref def=\"dt-deterministic\">deterministic</termref>, <termref def=\"dt-context-independent\">context-independent</termref>,  and <termref def=\"dt-focus-independent\">focus-independent</termref>. </p><p xmlns:e=\"http://www.w3.org/1999/XSL/Spec/ElementSyntax\">If <code>$</code><var>θ</var> is the empty sequence, the function returns the empty\n             sequence.</p><p xmlns:e=\"http://www.w3.org/1999/XSL/Spec/ElementSyntax\">If <code>$</code><var>θ</var> is positive or negative infinity, or <code>NaN</code>,\n             then the result is <code>NaN</code>.</p><p xmlns:e=\"http://www.w3.org/1999/XSL/Spec/ElementSyntax\" diff=\"chg\" at=\"G\">Otherwise the result is the cosine of <code>$</code><var>θ</var>,\n             treated as an angle in radians, as defined in the <bibref ref=\"ieee754-2008\"/>\n             specification of the <code>cos</code> function applied to 64-bit binary floating point\n             values.</p><p xmlns:e=\"http://www.w3.org/1999/XSL/Spec/ElementSyntax\">The treatment of the <code>invalidOperation</code> exception is defined in <specref ref=\"op.numeric\"/>. </p><p xmlns:e=\"http://www.w3.org/1999/XSL/Spec/ElementSyntax\">If <code>$</code><var>θ</var> is positive or negative zero, the result is\n                <code>$</code><var>θ</var>.</p><p xmlns:e=\"http://www.w3.org/1999/XSL/Spec/ElementSyntax\">If <code>$</code><var>θ</var> is positive or negative infinity, or <code>NaN</code>,\n             then the result is <code>NaN</code>.</p><p xmlns:e=\"http://www.w3.org/1999/XSL/Spec/ElementSyntax\">Otherwise the result is always in the range -1.0e0 to +1.0e0</p></div>\n", "summary" : "<p>  Returns the cosine of the argument, expressed in radians.</p>", "annotation_str" : "", "annotations" : [  ], "updating" : false, "parameters" : [ { "name" : "theta", "type" : "xs:double", "occurrence" : "?", "description" : "" } ], "returns" : { "type" : "xs:double?", "description" : "" }, "errors" : [  ] }, { "isDocumented" : true, "arity" : 1, "name" : "exp", "qname" : "math:exp", "signature" : "($arg as xs:double?) as xs:double? external", "description" : " <div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"><p xmlns:e=\"http://www.w3.org/1999/XSL/Spec/ElementSyntax\">Returns the value of <var>e</var><sup><var>x</var></sup>.</p><p xmlns:e=\"http://www.w3.org/1999/XSL/Spec/ElementSyntax\"><example role=\"signature\"><proto name=\"exp\" return-type=\"xs:double?\" isOp=\"no\" prefix=\"math\" returnEmptyOk=\"no\" returnSeq=\"no\" returnVaries=\"no\" isSchema=\"no\" isDatatype=\"no\" isSpecial=\"no\"><arg name=\"arg\" type=\"xs:double?\"/></proto></example></p><p xmlns:e=\"http://www.w3.org/1999/XSL/Spec/ElementSyntax\">This function is <termref def=\"dt-deterministic\">deterministic</termref>, <termref def=\"dt-context-independent\">context-independent</termref>,  and <termref def=\"dt-focus-independent\">focus-independent</termref>. </p><p xmlns:e=\"http://www.w3.org/1999/XSL/Spec/ElementSyntax\">If <code>$arg</code> is the empty sequence, the function returns the empty sequence.</p><p xmlns:e=\"http://www.w3.org/1999/XSL/Spec/ElementSyntax\" diff=\"chg\" at=\"G\">Otherwise the result is the mathematical constant <var>e</var>\n             raised to the power of <code>$arg</code>, as defined in the <bibref ref=\"ieee754-2008\"/>\n             specification of the <code>exp</code> function applied to 64-bit binary floating point\n             values.</p><p xmlns:e=\"http://www.w3.org/1999/XSL/Spec/ElementSyntax\">The treatment of overflow and underflow is defined in <specref ref=\"op.numeric\"/>.</p></div>\n", "summary" : "<p>  Returns the value of  e x .</p>", "annotation_str" : "", "annotations" : [  ], "updating" : false, "parameters" : [ { "name" : "arg", "type" : "xs:double", "occurrence" : "?", "description" : "" } ], "returns" : { "type" : "xs:double?", "description" : "" }, "errors" : [  ] }, { "isDocumented" : true, "arity" : 1, "name" : "exp10", "qname" : "math:exp10", "signature" : "($arg as xs:double?) as xs:double? external", "description" : " <div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"><p xmlns:e=\"http://www.w3.org/1999/XSL/Spec/ElementSyntax\">Returns the value of <code>10</code><sup><var>x</var></sup>.</p><p xmlns:e=\"http://www.w3.org/1999/XSL/Spec/ElementSyntax\"><example role=\"signature\"><proto name=\"exp10\" return-type=\"xs:double?\" isOp=\"no\" prefix=\"math\" returnEmptyOk=\"no\" returnSeq=\"no\" returnVaries=\"no\" isSchema=\"no\" isDatatype=\"no\" isSpecial=\"no\"><arg name=\"arg\" type=\"xs:double?\"/></proto></example></p><p xmlns:e=\"http://www.w3.org/1999/XSL/Spec/ElementSyntax\">This function is <termref def=\"dt-deterministic\">deterministic</termref>, <termref def=\"dt-context-independent\">context-independent</termref>,  and <termref def=\"dt-focus-independent\">focus-independent</termref>. </p><p xmlns:e=\"http://www.w3.org/1999/XSL/Spec/ElementSyntax\">If <code>$arg</code> is the empty sequence, the function returns the empty sequence.</p><p xmlns:e=\"http://www.w3.org/1999/XSL/Spec/ElementSyntax\" diff=\"chg\" at=\"G\">Otherwise the result is ten raised to the power of <code>$arg</code>,\n             as defined in the <bibref ref=\"ieee754-2008\"/> specification of the <code>exp10</code>\n             function applied to 64-bit binary floating point values.</p><p xmlns:e=\"http://www.w3.org/1999/XSL/Spec/ElementSyntax\">The treatment of overflow and underflow is defined in <specref ref=\"op.numeric\"/>.</p></div>\n", "summary" : "<p>  Returns the value of  10 x .</p>", "annotation_str" : "", "annotations" : [  ], "updating" : false, "parameters" : [ { "name" : "arg", "type" : "xs:double", "occurrence" : "?", "description" : "" } ], "returns" : { "type" : "xs:double?", "description" : "" }, "errors" : [  ] }, { "isDocumented" : true, "arity" : 1, "name" : "log", "qname" : "math:log", "signature" : "($arg as xs:double?) as xs:double? external", "description" : " <div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"><p xmlns:e=\"http://www.w3.org/1999/XSL/Spec/ElementSyntax\">Returns the natural logarithm of the argument.</p><p xmlns:e=\"http://www.w3.org/1999/XSL/Spec/ElementSyntax\"><example role=\"signature\"><proto name=\"log\" return-type=\"xs:double?\" isOp=\"no\" prefix=\"math\" returnEmptyOk=\"no\" returnSeq=\"no\" returnVaries=\"no\" isSchema=\"no\" isDatatype=\"no\" isSpecial=\"no\"><arg name=\"arg\" type=\"xs:double?\"/></proto></example></p><p xmlns:e=\"http://www.w3.org/1999/XSL/Spec/ElementSyntax\">This function is <termref def=\"dt-deterministic\">deterministic</termref>, <termref def=\"dt-context-independent\">context-independent</termref>,  and <termref def=\"dt-focus-independent\">focus-independent</termref>. </p><p xmlns:e=\"http://www.w3.org/1999/XSL/Spec/ElementSyntax\">If <code>$arg</code> is the empty sequence, the function returns the empty sequence.</p><p xmlns:e=\"http://www.w3.org/1999/XSL/Spec/ElementSyntax\" diff=\"chg\" at=\"G\">Otherwise the result is the natural logarithm of <code>$arg</code>, as\n             defined in the <bibref ref=\"ieee754-2008\"/> specification of the <code>log</code>\n             function applied to 64-bit binary floating point values.</p><p xmlns:e=\"http://www.w3.org/1999/XSL/Spec/ElementSyntax\">The treatment of <code>divideByZero</code> and <code>invalidOperation</code> exceptions\n             is defined in <specref ref=\"op.numeric\"/>. The effect is that if the argument is less\n             than or equal to zero, the result is <code>NaN</code>.</p></div>\n", "summary" : "<p>  Returns the natural logarithm of the argument.</p>", "annotation_str" : "", "annotations" : [  ], "updating" : false, "parameters" : [ { "name" : "arg", "type" : "xs:double", "occurrence" : "?", "description" : "" } ], "returns" : { "type" : "xs:double?", "description" : "" }, "errors" : [  ] }, { "isDocumented" : true, "arity" : 1, "name" : "log10", "qname" : "math:log10", "signature" : "($arg as xs:double?) as xs:double? external", "description" : " <div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"><p xmlns:e=\"http://www.w3.org/1999/XSL/Spec/ElementSyntax\">Returns the base-ten logarithm of the argument.</p><p xmlns:e=\"http://www.w3.org/1999/XSL/Spec/ElementSyntax\"><example role=\"signature\"><proto name=\"log10\" return-type=\"xs:double?\" isOp=\"no\" prefix=\"math\" returnEmptyOk=\"no\" returnSeq=\"no\" returnVaries=\"no\" isSchema=\"no\" isDatatype=\"no\" isSpecial=\"no\"><arg name=\"arg\" type=\"xs:double?\"/></proto></example></p><p xmlns:e=\"http://www.w3.org/1999/XSL/Spec/ElementSyntax\">This function is <termref def=\"dt-deterministic\">deterministic</termref>, <termref def=\"dt-context-independent\">context-independent</termref>,  and <termref def=\"dt-focus-independent\">focus-independent</termref>. </p><p xmlns:e=\"http://www.w3.org/1999/XSL/Spec/ElementSyntax\">If <code>$arg</code> is the empty sequence, the function returns the empty sequence.</p><p xmlns:e=\"http://www.w3.org/1999/XSL/Spec/ElementSyntax\" diff=\"chg\" at=\"G\">Otherwise the result is the base-10 logarithm of <code>$arg</code>, as\n             defined in the <bibref ref=\"ieee754-2008\"/> specification of the <code>log10</code>\n             function applied to 64-bit binary floating point values.</p><p xmlns:e=\"http://www.w3.org/1999/XSL/Spec/ElementSyntax\">The treatment of <code>divideByZero</code> and <code>invalidOperation</code> exceptions\n             is defined in <specref ref=\"op.numeric\"/>. The effect is that if the argument is less\n             than or equal to zero, the result is <code>NaN</code>.</p></div>\n", "summary" : "<p>  Returns the base-ten logarithm of the argument.</p>", "annotation_str" : "", "annotations" : [  ], "updating" : false, "parameters" : [ { "name" : "arg", "type" : "xs:double", "occurrence" : "?", "description" : "" } ], "returns" : { "type" : "xs:double?", "description" : "" }, "errors" : [  ] }, { "isDocumented" : true, "arity" : 0, "name" : "pi", "qname" : "math:pi", "signature" : "() as xs:double external", "description" : " <div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"><p xmlns:e=\"http://www.w3.org/1999/XSL/Spec/ElementSyntax\">Returns an approximation to the mathematical constant <var>π</var>.</p><p xmlns:e=\"http://www.w3.org/1999/XSL/Spec/ElementSyntax\"><example role=\"signature\"><proto name=\"pi\" return-type=\"xs:double\" isOp=\"no\" prefix=\"math\" returnEmptyOk=\"no\" returnSeq=\"no\" returnVaries=\"no\" isSchema=\"no\" isDatatype=\"no\" isSpecial=\"no\"/></example></p><p xmlns:e=\"http://www.w3.org/1999/XSL/Spec/ElementSyntax\">This function is <termref def=\"dt-deterministic\">deterministic</termref>, <termref def=\"dt-context-independent\">context-independent</termref>,  and <termref def=\"dt-focus-independent\">focus-independent</termref>. </p><p xmlns:e=\"http://www.w3.org/1999/XSL/Spec/ElementSyntax\">This function returns the <code>xs:double</code> value whose lexical representation is\n             3.141592653589793e0</p><p xmlns:e=\"http://www.w3.org/1999/XSL/Spec/ElementSyntax\">The expression <code>2*math:pi()</code> returns <code>6.283185307179586e0</code>.</p><p xmlns:e=\"http://www.w3.org/1999/XSL/Spec/ElementSyntax\">The expression <code>60 * (math:pi() div 180)</code> converts an angle of 60 degrees\n                to radians. </p></div>\n", "summary" : "<p>  Returns an approximation to the mathematical constant  π .</p>", "annotation_str" : "", "annotations" : [  ], "updating" : false, "parameters" : [  ], "returns" : { "type" : "xs:double", "description" : "" }, "errors" : [  ] }, { "isDocumented" : true, "arity" : 2, "name" : "pow", "qname" : "math:pow", "signature" : "($x as xs:double?, $y as numeric) as xs:double? external", "description" : " <div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"><p xmlns:e=\"http://www.w3.org/1999/XSL/Spec/ElementSyntax\">Returns the result of raising the first argument to the power of the\n             second.</p><p xmlns:e=\"http://www.w3.org/1999/XSL/Spec/ElementSyntax\"><example role=\"signature\"><proto name=\"pow\" return-type=\"xs:double?\" isOp=\"no\" prefix=\"math\" returnEmptyOk=\"no\" returnSeq=\"no\" returnVaries=\"no\" isSchema=\"no\" isDatatype=\"no\" isSpecial=\"no\"><arg name=\"x\" type=\"xs:double?\"/><arg name=\"y\" type=\"numeric\"/></proto></example></p><p xmlns:e=\"http://www.w3.org/1999/XSL/Spec/ElementSyntax\">This function is <termref def=\"dt-deterministic\">deterministic</termref>, <termref def=\"dt-context-independent\">context-independent</termref>,  and <termref def=\"dt-focus-independent\">focus-independent</termref>. </p><p xmlns:e=\"http://www.w3.org/1999/XSL/Spec/ElementSyntax\">If <code>$x</code> is the empty sequence, the function returns the empty sequence.</p><p xmlns:e=\"http://www.w3.org/1999/XSL/Spec/ElementSyntax\">If <code>$y</code> is an instance of <code>xs:integer</code>, the result is\n                <code>$x</code> raised to the power of <code>$y</code> as defined in the <bibref ref=\"ieee754-2008\"/> specification of the <code>pown</code> function applied to a\n             64-bit binary floating point value and an integer.</p><p xmlns:e=\"http://www.w3.org/1999/XSL/Spec/ElementSyntax\">Otherwise <code>$y</code> is converted to an <code>xs:double</code> by numeric\n             promotion, and the result is the value of <code>$x</code> raised to the power of\n                <code>$y</code> as defined in the <bibref ref=\"ieee754-2008\"/> specification of the\n                <code>pow</code> function applied to two 64-bit binary floating point values.</p><p xmlns:e=\"http://www.w3.org/1999/XSL/Spec/ElementSyntax\">The treatment of the <code>divideByZero</code> and <code>invalidOperation</code>\n             exceptions is defined in <specref ref=\"op.numeric\"/>. Some of the consequences are\n             illustrated in the examples below.</p></div>\n", "summary" : "<p>  Returns the result of raising the first argument to the power of the\n             second.</p>", "annotation_str" : "", "annotations" : [  ], "updating" : false, "parameters" : [ { "name" : "x", "type" : "xs:double", "occurrence" : "?", "description" : "" }, { "name" : "y", "type" : "numeric", "occurrence" : null, "description" : "" } ], "returns" : { "type" : "xs:double?", "description" : "" }, "errors" : [  ] }, { "isDocumented" : true, "arity" : 1, "name" : "sin", "qname" : "math:sin", "signature" : "($theta as xs:double?) as xs:double? external", "description" : " <div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"><p xmlns:e=\"http://www.w3.org/1999/XSL/Spec/ElementSyntax\">Returns the sine of the argument, expressed in radians.</p><p xmlns:e=\"http://www.w3.org/1999/XSL/Spec/ElementSyntax\"><example role=\"signature\"><proto name=\"sin\" return-type=\"xs:double?\" isOp=\"no\" prefix=\"math\" returnEmptyOk=\"no\" returnSeq=\"no\" returnVaries=\"no\" isSchema=\"no\" isDatatype=\"no\" isSpecial=\"no\"><arg name=\"θ\" type=\"xs:double?\"/></proto></example></p><p xmlns:e=\"http://www.w3.org/1999/XSL/Spec/ElementSyntax\">This function is <termref def=\"dt-deterministic\">deterministic</termref>, <termref def=\"dt-context-independent\">context-independent</termref>,  and <termref def=\"dt-focus-independent\">focus-independent</termref>. </p><p xmlns:e=\"http://www.w3.org/1999/XSL/Spec/ElementSyntax\">If <code>$</code><var>θ</var> is the empty sequence, the function returns the empty\n             sequence.</p><p xmlns:e=\"http://www.w3.org/1999/XSL/Spec/ElementSyntax\" diff=\"chg\" at=\"G\">Otherwise the result is the sine of <code>$</code><var>θ</var>,\n             treated as an angle in radians, as defined in the <bibref ref=\"ieee754-2008\"/>\n             specification of the <code>sin</code> function applied to 64-bit binary floating point\n             values.</p><p xmlns:e=\"http://www.w3.org/1999/XSL/Spec/ElementSyntax\">The treatment of the <code>invalidOperation</code> and <code>underflow</code> exceptions\n             is defined in <specref ref=\"op.numeric\"/>. </p><p xmlns:e=\"http://www.w3.org/1999/XSL/Spec/ElementSyntax\">If <code>$</code><var>θ</var> is positive or negative zero, the result is\n                <code>$</code><var>θ</var>.</p><p xmlns:e=\"http://www.w3.org/1999/XSL/Spec/ElementSyntax\">If <code>$</code><var>θ</var> is positive or negative infinity, or <code>NaN</code>,\n             then the result is <code>NaN</code>.</p><p xmlns:e=\"http://www.w3.org/1999/XSL/Spec/ElementSyntax\">Otherwise the result is always in the range -1.0e0 to +1.0e0</p></div>\n", "summary" : "<p>  Returns the sine of the argument, expressed in radians.</p>", "annotation_str" : "", "annotations" : [  ], "updating" : false, "parameters" : [ { "name" : "theta", "type" : "xs:double", "occurrence" : "?", "description" : "" } ], "returns" : { "type" : "xs:double?", "description" : "" }, "errors" : [  ] }, { "isDocumented" : true, "arity" : 1, "name" : "sqrt", "qname" : "math:sqrt", "signature" : "($arg as xs:double?) as xs:double? external", "description" : " <div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"><p xmlns:e=\"http://www.w3.org/1999/XSL/Spec/ElementSyntax\">Returns the non-negative square root of the argument.</p><p xmlns:e=\"http://www.w3.org/1999/XSL/Spec/ElementSyntax\"><example role=\"signature\"><proto name=\"sqrt\" return-type=\"xs:double?\" isOp=\"no\" prefix=\"math\" returnEmptyOk=\"no\" returnSeq=\"no\" returnVaries=\"no\" isSchema=\"no\" isDatatype=\"no\" isSpecial=\"no\"><arg name=\"arg\" type=\"xs:double?\"/></proto></example></p><p xmlns:e=\"http://www.w3.org/1999/XSL/Spec/ElementSyntax\">This function is <termref def=\"dt-deterministic\">deterministic</termref>, <termref def=\"dt-context-independent\">context-independent</termref>,  and <termref def=\"dt-focus-independent\">focus-independent</termref>. </p><p xmlns:e=\"http://www.w3.org/1999/XSL/Spec/ElementSyntax\">If <code>$arg</code> is the empty sequence, the function returns the empty sequence.</p><p xmlns:e=\"http://www.w3.org/1999/XSL/Spec/ElementSyntax\" diff=\"chg\" at=\"G\">Otherwise the result is the mathematical non-negative square root of\n                <code>$arg</code> as defined in the <bibref ref=\"ieee754-2008\"/> specification of the\n                <code>squareRoot</code> function applied to 64-bit binary floating point values.</p><p xmlns:e=\"http://www.w3.org/1999/XSL/Spec/ElementSyntax\">The treatment of the <code>invalidOperation</code> exception is defined in <specref ref=\"op.numeric\"/>. The effect is that if the argument is less than zero, the result\n             is <code>NaN</code>.</p><p xmlns:e=\"http://www.w3.org/1999/XSL/Spec/ElementSyntax\">If <code>$arg</code> is positive or negative zero, positive infinity, or\n                <code>NaN</code>, then the result is <code>$arg</code>. (Negative zero is the only\n             case where the result can have negative sign)</p></div>\n", "summary" : "<p>  Returns the non-negative square root of the argument.</p>", "annotation_str" : "", "annotations" : [  ], "updating" : false, "parameters" : [ { "name" : "arg", "type" : "xs:double", "occurrence" : "?", "description" : "" } ], "returns" : { "type" : "xs:double?", "description" : "" }, "errors" : [  ] }, { "isDocumented" : true, "arity" : 1, "name" : "tan", "qname" : "math:tan", "signature" : "($theta as xs:double?) as xs:double? external", "description" : " <div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"><p xmlns:e=\"http://www.w3.org/1999/XSL/Spec/ElementSyntax\">Returns the tangent of the argument, expressed in radians.</p><p xmlns:e=\"http://www.w3.org/1999/XSL/Spec/ElementSyntax\"><example role=\"signature\"><proto name=\"tan\" return-type=\"xs:double?\" isOp=\"no\" prefix=\"math\" returnEmptyOk=\"no\" returnSeq=\"no\" returnVaries=\"no\" isSchema=\"no\" isDatatype=\"no\" isSpecial=\"no\"><arg name=\"θ\" type=\"xs:double?\"/></proto></example></p><p xmlns:e=\"http://www.w3.org/1999/XSL/Spec/ElementSyntax\">This function is <termref def=\"dt-deterministic\">deterministic</termref>, <termref def=\"dt-context-independent\">context-independent</termref>,  and <termref def=\"dt-focus-independent\">focus-independent</termref>. </p><p xmlns:e=\"http://www.w3.org/1999/XSL/Spec/ElementSyntax\">If <code>$</code><var>θ</var> is the empty sequence, the function returns the empty\n             sequence.</p><p xmlns:e=\"http://www.w3.org/1999/XSL/Spec/ElementSyntax\" diff=\"chg\" at=\"G\">Otherwise the result is the tangent of <code>$</code><var>θ</var>,\n             treated as an angle in radians, as defined in the <bibref ref=\"ieee754-2008\"/>\n             specification of the <code>tan</code> function applied to 64-bit binary floating point\n             values.</p><p xmlns:e=\"http://www.w3.org/1999/XSL/Spec/ElementSyntax\">The treatment of the <code>invalidOperation</code> and <code>underflow</code> exceptions\n             is defined in <specref ref=\"op.numeric\"/>. </p><p xmlns:e=\"http://www.w3.org/1999/XSL/Spec/ElementSyntax\">If <code>$</code><var>θ</var> is positive or negative infinity, or <code>NaN</code>,\n             then the result is <code>NaN</code>.</p></div>\n", "summary" : "<p>  Returns the tangent of the argument, expressed in radians.</p>", "annotation_str" : "", "annotations" : [  ], "updating" : false, "parameters" : [ { "name" : "theta", "type" : "xs:double", "occurrence" : "?", "description" : "" } ], "returns" : { "type" : "xs:double?", "description" : "" }, "errors" : [  ] } ], "variables" : [  ] }, "http://www.zorba-xquery.com/modules/oauth/client" : { "ns" : "http://www.zorba-xquery.com/modules/oauth/client", "description" : " This module provides the functions necessary to acquire access to the personal\n resources of a user through the open standard called\n <a xmlns:xqdoc=\"http://www.xqdoc.org/1.0\" href=\"http://oauth.net/\" target=\"_blank\">OAuth</a>.\n The application/mashup creator does not need to know the\n specifics of <a xmlns:xqdoc=\"http://www.xqdoc.org/1.0\" href=\"http://oauth.net/\" target=\"_blank\">OAuth</a> to use this module.\n", "sees" : [ "<xqdoc:see xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"><a href=\"http://oauth.net/\" target=\"_blank\">OAuth Website</a></xqdoc:see>" ], "authors" : [ "<xqdoc:author xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">Stephanie Russell</xqdoc:author>", "<xqdoc:author xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"><a href=\"mailto:william.candillon@28msec.com\">William Candillon</a></xqdoc:author>" ], "version" : null, "encoding" : "utf-8", "namespaces" : [ { "uri" : "http://zorba.io/annotations", "prefix" : "an" }, { "uri" : "http://zorba.io/modules/base64", "prefix" : "base64" }, { "uri" : "http://zorba.io/features", "prefix" : "f" }, { "uri" : "http://zorba.io/modules/hmac", "prefix" : "hmac" }, { "uri" : "http://expath.org/ns/http-client", "prefix" : "http" }, { "uri" : "http://expath.org/ns/http-client", "prefix" : "http-client" }, { "uri" : "http://www.zorba-xquery.com/modules/oauth/client", "prefix" : "oauth" }, { "uri" : "http://www.zorba-xquery.com/modules/oauth/error", "prefix" : "oerr" }, { "uri" : "http://zorba.io/options/features", "prefix" : "op" }, { "uri" : "http://www.zorba-xquery.com/schemas/oauth/parameters", "prefix" : "p" }, { "uri" : "http://zorba.io/modules/random", "prefix" : "ra" }, { "uri" : "http://www.zorba-xquery.com/schemas/oauth/service-provider", "prefix" : "sp" }, { "uri" : "http://zorba.io/options/versioning", "prefix" : "ver" } ], "functions" : [ { "isDocumented" : true, "arity" : 2, "name" : "access-token", "qname" : "oauth:access-token", "signature" : "($service-provider as schema-element(sp:service-provider), $parameters as schema-element(p:parameters)) as schema-element(p:parameters)", "description" : " This function allows the client to obtain a set of token credentials from the service provider by making an authenticated HTTP request to the Token Request endpoint.\n This function is provided for convenience.\n", "summary" : "<p> This function allows the client to obtain a set of token credentials from the service provider by making an authenticated HTTP request to the Token Request endpoint.</p>", "annotation_str" : " %an:sequential", "annotations" : [ { "prefix" : "an", "ns" : "http://zorba.io/annotations", "name" : "sequential", "value" : "" } ], "updating" : false, "parameters" : [ { "name" : "service-provider", "type" : "schema-element(sp:service-provider)", "occurrence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> Contains service provider information</div>" }, { "name" : "parameters", "type" : "schema-element(p:parameters)", "occurrence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> parameters</div>" } ], "returns" : { "type" : "schema-element(p:parameters)", "description" : "token credentials correctly parsed as parameter elements, or an error if http response status is not 200 OK <pre xmlns:xqdoc=\"http://www.xqdoc.org/1.0\" class=\"ace-static\" ace-mode=\"xquery\"> let $service-provider := oauth:service-provider(...) let $parameters := oauth:parameters(\"oauth_token\", \"#\") let $parameters := oauth:add-parameter($parameters, \"oauth_token_secret\", \"#\") let $tokens := oauth:access-token($service-provider, $parameters) ... </pre>" }, "errors" : [  ] }, { "isDocumented" : true, "arity" : 3, "name" : "add-parameter", "qname" : "oauth:add-parameter", "signature" : "($parameters as schema-element(p:parameters)?, $name as xs:string, $value as xs:string) as schema-element(p:parameters)", "description" : " Adds an OAuth parameter to an OAuth Parameters instance.\n Instances of OAuth parameters are used to\n contain value/pair data such as <em xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">oauth_token</em>\n and <em xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">oauth_token_secret</em>.\n For instance the following code snippet:\n <pre xmlns:xqdoc=\"http://www.xqdoc.org/1.0\" class=\"ace-static\" ace-mode=\"xquery\">\n  let $params := oauth:parameters(\"oauth_token\", \"#\")\n  let $params := oauth:add-parameter($params, \"oauth_token_secret\", \"#\")\n  return $params\n </pre>\n Returns the following XML schema instance:\n <pre xmlns:xqdoc=\"http://www.xqdoc.org/1.0\" class=\"ace-static\" ace-mode=\"xquery\">\n <p:parameters xmlns:p=\"http://www.zorba-xquery.com/schemas/oauth/parameters\">\n   <p:parameter name=\"oauth_token\" value=\"#\"/>\n   <p:parameter name=\"oauth_token_secret\" value=\"#\"/>\n </p:parameters>\n </pre>\n", "summary" : "<p> Adds an OAuth parameter to an OAuth Parameters instance.</p>", "annotation_str" : "", "annotations" : [  ], "updating" : false, "parameters" : [ { "name" : "parameters", "type" : "schema-element(p:parameters)", "occurrence" : "?", "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> parameters</div>" }, { "name" : "name", "type" : "xs:string", "occurrence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> parameter name</div>" }, { "name" : "value", "type" : "xs:string", "occurrence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> parameter value</div>" } ], "returns" : { "type" : "schema-element(p:parameters)", "description" : "instance of the OAuth parameters XML schema." }, "errors" : [  ] }, { "isDocumented" : true, "arity" : 2, "name" : "parameter", "qname" : "oauth:parameter", "signature" : "($params as schema-element(p:parameters), $string as xs:string) as xs:string", "description" : " This function returns the string value of the parameters whose key matches a $string input.\n", "summary" : "<p> This function returns the string value of the parameters whose key matches a $string input.</p>", "annotation_str" : "", "annotations" : [  ], "updating" : false, "parameters" : [ { "name" : "params", "type" : "schema-element(p:parameters)", "occurrence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> element parameters</div>" }, { "name" : "string", "type" : "xs:string", "occurrence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> string as the \"key\" name</div>" } ], "returns" : { "type" : "xs:string", "description" : "string value of the parameter with key $string <pre xmlns:xqdoc=\"http://www.xqdoc.org/1.0\" class=\"ace-static\" ace-mode=\"xquery\"> let $params := oauth:parameters(\"oauth_token\", \"token\") let $params := oauth:add-parameter($params, \"oauth_token_secret\", \"secret\") let $token-secret := oauth:parameter($params, \"oauth_token_secret\") return $token-secret </pre>" }, "errors" : [  ] }, { "isDocumented" : true, "arity" : 2, "name" : "parameters", "qname" : "oauth:parameters", "signature" : "($name as xs:string, $value as xs:string) as element(p:parameters)", "description" : " Create an OAuth Parameters instance.\n Instances of OAuth parameters are used to\n contain value/pair data such as <em xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">oauth_token</em>\n and <em xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">oauth_token_secret</em>.\n For instance the following code snippet:\n <pre xmlns:xqdoc=\"http://www.xqdoc.org/1.0\" class=\"ace-static\" ace-mode=\"xquery\">\n  oauth:parameters(\"oauth_token\", \"#\")\n </pre>\n Returns the following XML schema instance:\n <pre xmlns:xqdoc=\"http://www.xqdoc.org/1.0\" class=\"ace-static\" ace-mode=\"xml\">\n <p:parameters xmlns:p=\"http://www.zorba-xquery.com/schemas/oauth/parameters\">\n   <p:parameter name=\"oauth_token\" value=\"#\"/>\n </p:parameters>\n </pre>\n", "summary" : "<p> Create an OAuth Parameters instance.</p>", "annotation_str" : "", "annotations" : [  ], "updating" : false, "parameters" : [ { "name" : "name", "type" : "xs:string", "occurrence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> parameter name</div>" }, { "name" : "value", "type" : "xs:string", "occurrence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> parameter value</div>" } ], "returns" : { "type" : "element(p:parameters)", "description" : "instance of the OAuth parameters XML schema." }, "errors" : [  ] }, { "isDocumented" : true, "arity" : 3, "name" : "protected-resource", "qname" : "oauth:protected-resource", "signature" : "($protected-resource as schema-element(http:request), $service-provider as schema-element(sp:service-provider), $parameters as schema-element(p:parameters)) as item()*", "description" : " This function allows the client access to the protected resources of the user.\n This function is provided for convenience.\n", "summary" : "<p> This function allows the client access to the protected resources of the user.</p>", "annotation_str" : " %an:sequential", "annotations" : [ { "prefix" : "an", "ns" : "http://zorba.io/annotations", "name" : "sequential", "value" : "" } ], "updating" : false, "parameters" : [ { "name" : "protected-resource", "type" : "schema-element(http:request)", "occurrence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> (Not schema-validated) http:request element with http method and href.</div>" }, { "name" : "service-provider", "type" : "schema-element(sp:service-provider)", "occurrence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> Information about the service provider</div>" }, { "name" : "parameters", "type" : "schema-element(p:parameters)", "occurrence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> parameters</div>" } ], "returns" : { "type" : "item()*", "description" : "protected resources parsed as parameter elements, or an error if http response status is not 200 OK <pre xmlns:xqdoc=\"http://www.xqdoc.org/1.0\" class=\"ace-static\" ace-mode=\"xquery\"> let $tokens := oauth:parameters(\"oauth_token\", \"#\") let $tokens := oauth:add-parameter($tokens, \"oauth_token_secret\", \"#\") let $service-provider := oauth:service-provider(...) let $request := validate { <request xmlns=\"http://expath.org/ns/http-client\" href=\"http://twitter.com/account/verify_credentials.xml\" method=\"GET\"/> } return oauth:protected-resource($request, $service-provider, $tokens) </pre>" }, "errors" : [  ] }, { "isDocumented" : true, "arity" : 1, "name" : "request-token", "qname" : "oauth:request-token", "signature" : "($service-provider as schema-element(sp:service-provider)) as schema-element(p:parameters)", "description" : " This function allows the client to obtain a set of temporary credentials from the service provider by making an authenticated HTTP request to the Temporary Credential Request endpoint.\n This function is provided for convenience for <a xmlns:xqdoc=\"http://www.xqdoc.org/1.0\" href=\"#request-token-2\">request-token#2</a>.\n Invoking this function is equivalent to:\n <pre xmlns:xqdoc=\"http://www.xqdoc.org/1.0\" class=\"ace-static\" ace-mode=\"xquery\">\n oauth:request-token($service-provider, ())\n </pre>\n", "summary" : "<p> This function allows the client to obtain a set of temporary credentials from the service provider by making an authenticated HTTP request to the Temporary Credential Request endpoint.</p>", "annotation_str" : " %an:sequential", "annotations" : [ { "prefix" : "an", "ns" : "http://zorba.io/annotations", "name" : "sequential", "value" : "" } ], "updating" : false, "parameters" : [ { "name" : "service-provider", "type" : "schema-element(sp:service-provider)", "occurrence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> Information about the service provider</div>" } ], "returns" : { "type" : "schema-element(p:parameters)", "description" : "temporary credentials correctly parsed as parameter elements, or an error if http response status is not 200 OK" }, "errors" : [  ] }, { "isDocumented" : true, "arity" : 2, "name" : "request-token", "qname" : "oauth:request-token", "signature" : "($service-provider as schema-element(sp:service-provider), $parameters as schema-element(p:parameters)?) as schema-element(p:parameters)", "description" : " This function allows the client to obtain a set of temporary credentials from the service provider by making an authenticated HTTP request to the Temporary Credential Request endpoint.\n This function is provided for convenience.\n", "summary" : "<p> This function allows the client to obtain a set of temporary credentials from the service provider by making an authenticated HTTP request to the Temporary Credential Request endpoint.</p>", "annotation_str" : " %an:sequential", "annotations" : [ { "prefix" : "an", "ns" : "http://zorba.io/annotations", "name" : "sequential", "value" : "" } ], "updating" : false, "parameters" : [ { "name" : "service-provider", "type" : "schema-element(sp:service-provider)", "occurrence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> Information about the service provider</div>" }, { "name" : "parameters", "type" : "schema-element(p:parameters)", "occurrence" : "?", "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> Additionnal parameters to the request</div>" } ], "returns" : { "type" : "schema-element(p:parameters)", "description" : "temporary credentials correctly parsed as parameter elements, or an error if http response status is not 200 OK <pre xmlns:xqdoc=\"http://www.xqdoc.org/1.0\" class=\"ace-static\" ace-mode=\"xquery\"> let $twitter-config := oauth:service-provider(...) let $additional-parameter := oauth:parameters(\"foo\", \"bar\") let $tokens := oauth:request-token($twitter-config, $additional-parameter) let $token := oauth:parameter($tokens, \"oauth_token\") let $token-secret := oauth:parameter($tokens, \"oauth_token_secret\") ... </pre>" }, "errors" : [  ] }, { "isDocumented" : true, "arity" : 10, "name" : "service-provider", "qname" : "oauth:service-provider", "signature" : "($consumer-key as xs:string, $consumer-secret as xs:string, $signature-method as xs:string, $realm as xs:string, $authorize-url as xs:string, $request-token-method as xs:string, $request-token-url as xs:string, $request-token-callback-url as xs:string, $access-token-method as xs:string, $access-token-url as xs:string) as schema-element(sp:service-provider)", "description" : " Utility function to build a service provider object.\n This object contains the information required by the\n OAuth client to interact with an OAuth service provider.\n For instance the following expression:\n <pre xmlns:xqdoc=\"http://www.xqdoc.org/1.0\" class=\"ace-static\" ace-mode=\"xquery\">\n let $consumer-key     := \"#\"\n let $consumer-secret  := \"#\"\n let $signature-method := \"HMAC-SHA1\"\n let $realm            := \"twitter.com\"\n let $authorize-url    := \"http://api.twitter.com/oauth/authorize\"\n let $request-token-method := \"POST\"\n let $request-token-url := \"https://twitter.com/oauth/request_token\"\n let $request-token-callback-url := \"https://twitter.com/oauth/request_token\"\n let $access-token-method := \"POST\"\n let $access-token-url := \"https://api.twitter.com/oauth/access_token\"\n return oauth:service-provider(\n   $consumer-key, $consumer-secret, $signature-method,\n   $realm, $authorize-url, $request-token-method,\n   $request-token-url, $request-token-callback-url,\n   $access-token-method, $access-token-url\n )\n </pre>\n Will return the following XML schema instance:\n <pre xmlns:xqdoc=\"http://www.xqdoc.org/1.0\" class=\"ace-static\" ace-mode=\"xml\">\n <sp:service-provider xmlns:sp=\"http://www.zorba-xquery.com/schemas/oauth/service-provider\" consumer-key=\"#\" consumer-secret=\"#\" signature-method=\"HMAC-SHA1\" realm=\"twitter.com\" authorize-url=\"http://api.twitter.com/oauth/authorize\">\n   <sp:request-token method=\"POST\" href=\"https://twitter.com/oauth/request_token\" callback-url=\"https://twitter.com/oauth/request_token\"/>\n   <sp:access-token method=\"POST\" href=\"https://api.twitter.com/oauth/access_token\"/>\n </sp:service-provider>\n </pre>\n", "summary" : "<p> Utility function to build a service provider object.</p>", "annotation_str" : "", "annotations" : [  ], "updating" : false, "parameters" : [ { "name" : "consumer-key", "type" : "xs:string", "occurrence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> Client Identifier, also known as the consumer-key</div>" }, { "name" : "consumer-secret", "type" : "xs:string", "occurrence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> Client Shared-Secret, also known as the consumer-secret</div>" }, { "name" : "signature-method", "type" : "xs:string", "occurrence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> Method with which the signing key is signed (typically HMAC-SHA1)</div>" }, { "name" : "realm", "type" : "xs:string", "occurrence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> Realm that defines the protection space</div>" }, { "name" : "authorize-url", "type" : "xs:string", "occurrence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> authorize-url</div>" }, { "name" : "request-token-method", "type" : "xs:string", "occurrence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> request-token-method</div>" }, { "name" : "request-token-url", "type" : "xs:string", "occurrence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> request-token-url</div>" }, { "name" : "request-token-callback-url", "type" : "xs:string", "occurrence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> request-token-callback-url</div>" }, { "name" : "access-token-method", "type" : "xs:string", "occurrence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> access-token-method</div>" }, { "name" : "access-token-url", "type" : "xs:string", "occurrence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> access-token-url</div>" } ], "returns" : { "type" : "schema-element(sp:service-provider)", "description" : "instance of the OAuth service provider XML schema." }, "errors" : [  ] } ], "variables" : [  ] }, "http://www.28msec.com/modules/http/util/multipart" : { "ns" : "http://www.28msec.com/modules/http/util/multipart", "description" : " This module provides utility functions to help dealing with the\n content of multipart requests.\n In their implementation, all the functions use the multipart\n related functions of the request module (e.g. parts() or text-part()).\n", "sees" : [  ], "authors" : [ "<xqdoc:author xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">28msec</xqdoc:author>" ], "version" : null, "encoding" : "utf-8", "namespaces" : [ { "uri" : "http://www.28msec.com/modules/http/util/multipart", "prefix" : "multipart" }, { "uri" : "http://www.28msec.com/modules/http/request", "prefix" : "req" }, { "uri" : "http://zorba.io/options/versioning", "prefix" : "ver" } ], "functions" : [ { "isDocumented" : true, "arity" : 1, "name" : "binary-content", "qname" : "multipart:binary-content", "signature" : "($name as xs:string) as xs:base64Binary*", "description" : " Returns the contents of the parts/files in the multipart requests with\n the given part name as xs:base64Binary.\n", "summary" : "<p> Returns the contents of the parts/files in the multipart requests with\n the given part name as xs:base64Binary.</p>", "annotation_str" : "", "annotations" : [  ], "updating" : false, "parameters" : [ { "name" : "name", "type" : "xs:string", "occurrence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> the name of the requested part.</div>" } ], "returns" : { "type" : "xs:base64Binary*", "description" : "the said content or the empty sequence if no part with the given name exists." }, "errors" : [ "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">request:non-multipart if the current request does not contain multipart content</xqdoc:error>", "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">request:invalid-multipart if the multipart content is invalid (e.g. the boundary is missing)</xqdoc:error>" ] }, { "isDocumented" : true, "arity" : 1, "name" : "binary-file", "qname" : "multipart:binary-file", "signature" : "($filename as xs:string) as xs:base64Binary*", "description" : " Returns the contents of the part/file in the multipart requests with\n the given filename as xs:base64Binary.\n Please note that the file is identified by the filename (and not the\n name of the part) that is contained in the Content-Disposition header\n of the part.\n", "summary" : "<p> Returns the contents of the part/file in the multipart requests with\n the given filename as xs:base64Binary.</p>", "annotation_str" : "", "annotations" : [  ], "updating" : false, "parameters" : [ { "name" : "filename", "type" : "xs:string", "occurrence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> the name of the requested file.</div>" } ], "returns" : { "type" : "xs:base64Binary*", "description" : "the said content or the empty sequence if no part with the given filename exists." }, "errors" : [ "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">request:non-multipart if the current request does not contain multipart content</xqdoc:error>", "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">request:invalid-multipart if the multipart content is invalid (e.g. the boundary is missing)</xqdoc:error>" ] }, { "isDocumented" : true, "arity" : 1, "name" : "content-length", "qname" : "multipart:content-length", "signature" : "($name as xs:string) as xs:integer*", "description" : " Returns the content length of the parts/files in the multipart requests with\n the given part name as xs:integer.\n", "summary" : "<p> Returns the content length of the parts/files in the multipart requests with\n the given part name as xs:integer.</p>", "annotation_str" : "", "annotations" : [  ], "updating" : false, "parameters" : [ { "name" : "name", "type" : "xs:string", "occurrence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> the name of the requested part.</div>" } ], "returns" : { "type" : "xs:integer*", "description" : "The content-length in bytes of the parts/files or the empty sequence if the part does not exist" }, "errors" : [ "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">request:non-multipart if the current request does not contain multipart content</xqdoc:error>", "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">request:invalid-multipart if the multipart content is invalid (e.g. the boundary is missing)</xqdoc:error>" ] }, { "isDocumented" : true, "arity" : 1, "name" : "content-type", "qname" : "multipart:content-type", "signature" : "($name as xs:string) as xs:string*", "description" : " Returns the content type of the parts/files in the multipart requests with\n the given part name as xs:string.\n", "summary" : "<p> Returns the content type of the parts/files in the multipart requests with\n the given part name as xs:string.</p>", "annotation_str" : "", "annotations" : [  ], "updating" : false, "parameters" : [ { "name" : "name", "type" : "xs:string", "occurrence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> the name of the requested part.</div>" } ], "returns" : { "type" : "xs:string*", "description" : "The content-types of the parts/files or the empty sequence if the part does not exist" }, "errors" : [ "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">request:non-multipart if the current request does not contain multipart content</xqdoc:error>", "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">request:invalid-multipart if the multipart content is invalid (e.g. the boundary is missing)</xqdoc:error>" ] }, { "isDocumented" : true, "arity" : 1, "name" : "filename", "qname" : "multipart:filename", "signature" : "($name as xs:string) as xs:string*", "description" : " Returns the filenames of the parts/files in the multipart requests with\n the given part name as xs:string.\n", "summary" : "<p> Returns the filenames of the parts/files in the multipart requests with\n the given part name as xs:string.</p>", "annotation_str" : "", "annotations" : [  ], "updating" : false, "parameters" : [ { "name" : "name", "type" : "xs:string", "occurrence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> the name of the requested part.</div>" } ], "returns" : { "type" : "xs:string*", "description" : "The filename of the parts/files or the empty sequence if the part does not exist" }, "errors" : [ "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">request:non-multipart if the current request does not contain multipart content</xqdoc:error>", "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">request:invalid-multipart if the multipart content is invalid (e.g. the boundary is missing)</xqdoc:error>" ] }, { "isDocumented" : true, "arity" : 0, "name" : "filenames", "qname" : "multipart:filenames", "signature" : "() as xs:string*", "description" : " Returns the filenames of all the parts contained in the multipart\n content of the given request.\n", "summary" : "<p> Returns the filenames of all the parts contained in the multipart\n content of the given request.</p>", "annotation_str" : "", "annotations" : [  ], "updating" : false, "parameters" : [  ], "returns" : { "type" : "xs:string*", "description" : "the said filenames" }, "errors" : [ "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">request:non-multipart if the current request does not contain multipart content</xqdoc:error>", "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">request:invalid-multipart if the multipart content is invalid (e.g. the boundary is missing)</xqdoc:error>" ] }, { "isDocumented" : true, "arity" : 0, "name" : "names", "qname" : "multipart:names", "signature" : "() as xs:string*", "description" : " Returns the names of all the parts contained in the multipart\n content of the given request.\n", "summary" : "<p> Returns the names of all the parts contained in the multipart\n content of the given request.</p>", "annotation_str" : "", "annotations" : [  ], "updating" : false, "parameters" : [  ], "returns" : { "type" : "xs:string*", "description" : "the said names" }, "errors" : [ "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">request:non-multipart if the current request does not contain multipart content</xqdoc:error>", "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">request:invalid-multipart if the multipart content is invalid (e.g. the boundary is missing)</xqdoc:error>" ] }, { "isDocumented" : true, "arity" : 1, "name" : "part", "qname" : "multipart:part", "signature" : "($name as xs:string) as element(req:part)*", "description" : " Returns the <tt xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">req:part</tt> element among all the parts contained\n in the multipart requests with the given name.\n", "summary" : "<p> Returns the  req:part  element among all the parts contained\n in the multipart requests with the given name.</p>", "annotation_str" : "", "annotations" : [  ], "updating" : false, "parameters" : [ { "name" : "name", "type" : "xs:string", "occurrence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> the name of the requested part.</div>" } ], "returns" : { "type" : "element(req:part)*", "description" : "the said part elements or the empty sequence if no part with the given name exists." }, "errors" : [ "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">request:non-multipart if the current request does not contain multipart content</xqdoc:error>", "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">request:invalid-multipart if the multipart content is invalid (e.g. the boundary is missing)</xqdoc:error>" ] }, { "isDocumented" : true, "arity" : 1, "name" : "text-content", "qname" : "multipart:text-content", "signature" : "($name as xs:string) as xs:string*", "description" : " Returns the contents of the parts/files in the multipart requests with\n the given part name as a string.\n It is assumed that the character set of the file is UTF-8.\n", "summary" : "<p> Returns the contents of the parts/files in the multipart requests with\n the given part name as a string.</p>", "annotation_str" : "", "annotations" : [  ], "updating" : false, "parameters" : [ { "name" : "name", "type" : "xs:string", "occurrence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> the name of the requested part.</div>" } ], "returns" : { "type" : "xs:string*", "description" : "the said content or the empty sequence if no part with the given filename exists." }, "errors" : [ "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">request:no-text-content if the value of the part cannot be treated as text</xqdoc:error>", "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">request:non-multipart if the current request does not contain multipart content</xqdoc:error>", "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">request:invalid-multipart if the multipart content is invalid (e.g. the boundary is missing)</xqdoc:error>" ] }, { "isDocumented" : true, "arity" : 1, "name" : "text-file", "qname" : "multipart:text-file", "signature" : "($filename as xs:string) as xs:string*", "description" : " Returns the contents of the part/file in the multipart requests with\n the given filename as a string.\n It is assumed that the character set of the file is UTF-8.\n Please note that the file is identified by the filename (and not the\n name of the part) that is contained in the Content-Disposition header\n of the part.\n", "summary" : "<p> Returns the contents of the part/file in the multipart requests with\n the given filename as a string.</p>", "annotation_str" : "", "annotations" : [  ], "updating" : false, "parameters" : [ { "name" : "filename", "type" : "xs:string", "occurrence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> the name of the requested file.</div>" } ], "returns" : { "type" : "xs:string*", "description" : "the said content or the empty sequence if no part with the given filename exists." }, "errors" : [ "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">request:no-text-content if the value of the part cannot be treated as text</xqdoc:error>", "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">request:non-multipart if the current request does not contain multipart content</xqdoc:error>", "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">request:invalid-multipart if the multipart content is invalid (e.g. the boundary is missing)</xqdoc:error>" ] } ], "variables" : [  ] }, "http://zorba.io/modules/excel/statistical-zorba" : { "ns" : "http://zorba.io/modules/excel/statistical-zorba", "description" : " This module implements some Excel 2003 statistical functions\n that cannot be implemented with standard XQuery functions.\n It uses Zorba specific functions.\n", "sees" : [ "<xqdoc:see xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">http://office.microsoft.com/en-us/excel/CH062528311033.aspx</xqdoc:see>" ], "authors" : [ "<xqdoc:author xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">Daniel Turcanu</xqdoc:author>" ], "version" : null, "encoding" : "utf-8", "namespaces" : [ { "uri" : "http://zorba.io/modules/excel/statistical-zorba", "prefix" : "excel" }, { "uri" : "http://zorba.io/modules/excel/errors", "prefix" : "excel-err" }, { "uri" : "http://zorba.io/modules/excel/math", "prefix" : "excel-math" }, { "uri" : "http://zorba.io/modules/excel/statistical", "prefix" : "excel-statistical" }, { "uri" : "http://www.w3.org/2005/xpath-functions/math", "prefix" : "math" }, { "uri" : "http://zorba.io/options/versioning", "prefix" : "ver" } ], "functions" : [ { "isDocumented" : true, "arity" : 1, "name" : "stdev", "qname" : "excel:stdev", "signature" : "($numbers as xs:anyAtomicType+) as xs:anyAtomicType", "description" : " Estimates standard deviation based on a sample.\n The standard deviation is a measure of how widely values are dispersed\n   from the average value (the mean).\n It is computed with formula:\n sqrt( sum((x-average_x)^2) / (n-1) )    = sqrt ( VAR(numbers) )\n", "summary" : "<p> Estimates standard deviation based on a sample.</p>", "annotation_str" : "", "annotations" : [  ], "updating" : false, "parameters" : [ { "name" : "numbers", "type" : "xs:anyAtomicType", "occurrence" : "+", "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> the sequence of numbers or values castable to numeric The sequence can be of any length, from 1 up.</div>" } ], "returns" : { "type" : "xs:anyAtomicType", "description" : "the standard deviation, as numeric type" }, "errors" : [ "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">excel-err:Value if the parameters cannot be casted to numeric type</xqdoc:error>" ] }, { "isDocumented" : true, "arity" : 1, "name" : "stdeva", "qname" : "excel:stdeva", "signature" : "($numbers as xs:anyAtomicType+) as xs:anyAtomicType", "description" : " Estimates standard deviation based on a sample.\n The standard deviation is a measure of how widely values are dispersed\n   from the average value (the mean).\n It is computed with formula:\n sqrt( sum((x-average_x)^2) / (n-1) )    = sqrt ( VARA(numbers) )\n", "summary" : "<p> Estimates standard deviation based on a sample.</p>", "annotation_str" : "", "annotations" : [  ], "updating" : false, "parameters" : [ { "name" : "numbers", "type" : "xs:anyAtomicType", "occurrence" : "+", "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> the sequence of numbers or values castable to numeric The sequence can be of any length, from 1 up.</div>" } ], "returns" : { "type" : "xs:anyAtomicType", "description" : "the standard deviation, as numeric type" }, "errors" : [ "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">excel-err:Value if the parameters cannot be casted to numeric type</xqdoc:error>" ] }, { "isDocumented" : true, "arity" : 1, "name" : "stdevp", "qname" : "excel:stdevp", "signature" : "($numbers as xs:anyAtomicType+) as xs:anyAtomicType", "description" : " Calculates standard deviation based on the entire population given as arguments.\n The standard deviation is a measure of how widely values are dispersed from\n   the average value (the mean).\n It is computed with formula:\n sqrt( sum((x-average_x)^2) / n )    = sqrt ( VARP(numbers) )\n", "summary" : "<p> Calculates standard deviation based on the entire population given as arguments.</p>", "annotation_str" : "", "annotations" : [  ], "updating" : false, "parameters" : [ { "name" : "numbers", "type" : "xs:anyAtomicType", "occurrence" : "+", "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> the sequence of numbers or values castable to numeric The sequence can be of any length, from 1 up.</div>" } ], "returns" : { "type" : "xs:anyAtomicType", "description" : "the standard deviation, as numeric type" }, "errors" : [ "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">excel-err:Value if the parameters cannot be casted to numeric type</xqdoc:error>" ] }, { "isDocumented" : true, "arity" : 1, "name" : "stdevpa", "qname" : "excel:stdevpa", "signature" : "($numbers as xs:anyAtomicType+) as xs:anyAtomicType", "description" : " Calculates standard deviation based on the entire population given as arguments.\n The standard deviation is a measure of how widely values are dispersed from\n   the average value (the mean).\n It is computed with formula:\n sqrt( sum((x-average_x)^2) / n )    = sqrt ( VARPA(numbers) )\n", "summary" : "<p> Calculates standard deviation based on the entire population given as arguments.</p>", "annotation_str" : "", "annotations" : [  ], "updating" : false, "parameters" : [ { "name" : "numbers", "type" : "xs:anyAtomicType", "occurrence" : "+", "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> the sequence of numbers or values castable to numeric The sequence can be of any length, from 1 up.</div>" } ], "returns" : { "type" : "xs:anyAtomicType", "description" : "the standard deviation, as numeric type" }, "errors" : [ "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">excel-err:Value if the parameters cannot be casted to numeric type</xqdoc:error>" ] }, { "isDocumented" : true, "arity" : 2, "name" : "subtotal", "qname" : "excel:subtotal", "signature" : "($function_num as xs:integer, $numbers as xs:anyAtomicType*) as xs:anyAtomicType", "description" : " Moved from math module.\n Returns a subtotal in a sequence of numbers.\n The function applied is given by $function_num.\n", "summary" : "<p> Moved from math module.</p>", "annotation_str" : "", "annotations" : [  ], "updating" : false, "parameters" : [ { "name" : "function_num", "type" : "xs:integer", "occurrence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> <dl>defines the function to be applied on sequence values. The possible values are: <dt>1 or 101</dt> <dd> AVERAGE</dd> <dt>2 or 102</dt> <dd> COUNT</dd> <dt>3 or 103</dt> <dd> COUNTA</dd> <dt>4 or 104</dt> <dd> MAX</dd> <dt>5 or 105</dt> <dd> MIN</dd> <dt>6 or 106</dt> <dd> PRODUCT</dd> <dt>7 or 107</dt> <dd> STDEV</dd> <dt>8 or 108</dt> <dd> STDEVP</dd> <dt>9 or 109</dt> <dd> SUM</dd> <dt>10 or 110</dt> <dd> VAR</dd> <dt>11 or 111</dt> <dd> VARP</dd></dl> In this implementation there is no difference between x and 10x.<p/></div>" }, { "name" : "numbers", "type" : "xs:anyAtomicType", "occurrence" : "*", "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> the sequence of numbers or values castable to numeric. The sequence can be of any length.</div>" } ], "returns" : { "type" : "xs:anyAtomicType", "description" : "The function result, as numeric type" }, "errors" : [ "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">depends on the function called</xqdoc:error>", "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">excel-err:Num if $function_num is not a value between 1 .. 11 or 101 .. 111</xqdoc:error>" ] } ], "variables" : [  ] }, "http://www.28msec.com/modules/debug" : { "ns" : "http://www.28msec.com/modules/debug", "description" : " This module contains internal debug functions.\n", "sees" : [  ], "authors" : [ "<xqdoc:author xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">Federico Cavalieri</xqdoc:author>" ], "version" : null, "encoding" : "utf-8", "namespaces" : [ { "uri" : "http://zorba.io/annotations", "prefix" : "an" }, { "uri" : "http://www.28msec.com/modules/debug", "prefix" : "debug" }, { "uri" : "http://zorba.io/options/versioning", "prefix" : "ver" } ], "functions" : [ { "isDocumented" : true, "arity" : 0, "name" : "non-seeakable-streamable-string", "qname" : "debug:non-seeakable-streamable-string", "signature" : "() as string external", "description" : " Returns a non seekable streamable string\n", "summary" : "<p> Returns a non seekable streamable string\n</p>", "annotation_str" : " %an:deterministic", "annotations" : [ { "prefix" : "an", "ns" : "http://zorba.io/annotations", "name" : "deterministic", "value" : "" } ], "updating" : false, "parameters" : [  ], "returns" : { "type" : "string", "description" : "a non seekable streamable string" }, "errors" : [  ] }, { "isDocumented" : true, "arity" : 1, "name" : "test-01-cache", "qname" : "debug:test-01-cache", "signature" : "($arg as xs:integer) as item()* external", "description" : " Equivalent to:\n declare %an:cache function local:test-01-cache($x as xs:integer)\n {\n  if ($x &lt; 10)\n  then $x * $x\n  else if ($x &lt; 20)\n  then ()\n  else ($x, \" == \", $x * $x)\n };\n", "summary" : "<p> Equivalent to:\n declare %an:cache function local:test-01-cache($x as xs:integer)\n {\n  if ($x &lt; 10)\n  then $x * $x\n  else if ($x &lt; 20)\n  then ()\n  else ($x, \" == \", $x * $x)\n };\n</p>", "annotation_str" : " %an:cache", "annotations" : [ { "prefix" : "an", "ns" : "http://zorba.io/annotations", "name" : "cache", "value" : "" } ], "updating" : false, "parameters" : [ { "name" : "arg", "type" : "xs:integer", "occurrence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> as described above</div>" } ], "returns" : { "type" : "item()*", "description" : "as described above" }, "errors" : [  ] }, { "isDocumented" : true, "arity" : 1, "name" : "test-01-sd", "qname" : "debug:test-01-sd", "signature" : "($arg as xs:integer) as item()* external", "description" : " Equivalent to:\n declare %an:strictlydeterministic function local:test-01-sd($x as xs:integer)\n {\n  if ($x &lt; 10)\n  then $x * $x\n  else if ($x &lt; 20)\n  then ()\n  else ($x, \" == \", $x * $x)\n };\n", "summary" : "<p> Equivalent to:\n declare %an:strictlydeterministic function local:test-01-sd($x as xs:integer)\n {\n  if ($x &lt; 10)\n  then $x * $x\n  else if ($x &lt; 20)\n  then ()\n  else ($x, \" == \", $x * $x)\n };\n</p>", "annotation_str" : " %an:strictlydeterministic", "annotations" : [ { "prefix" : "an", "ns" : "http://zorba.io/annotations", "name" : "strictlydeterministic", "value" : "" } ], "updating" : false, "parameters" : [ { "name" : "arg", "type" : "xs:integer", "occurrence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> as described above</div>" } ], "returns" : { "type" : "item()*", "description" : "as described above" }, "errors" : [  ] }, { "isDocumented" : true, "arity" : 1, "name" : "test-02-cache", "qname" : "debug:test-02-cache", "signature" : "($arg) as item()* external", "description" : " Equivalent to:\n declare %an:cache function local:test-02-cache($arg)\n {\n   serialize($arg),\n   uuid:uuid()\n };\n", "summary" : "<p> Equivalent to:\n declare %an:cache function local:test-02-cache($arg)\n {\n   serialize($arg),\n   uuid:uuid()\n };\n</p>", "annotation_str" : " %an:cache", "annotations" : [ { "prefix" : "an", "ns" : "http://zorba.io/annotations", "name" : "cache", "value" : "" } ], "updating" : false, "parameters" : [ { "name" : "arg", "type" : null, "occurrence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> as described above</div>" } ], "returns" : { "type" : "item()*", "description" : "as described above" }, "errors" : [  ] }, { "isDocumented" : true, "arity" : 1, "name" : "test-02-sd", "qname" : "debug:test-02-sd", "signature" : "($arg) as item()* external", "description" : " Equivalent to:\n declare %an:strictlydeterministic function local:test-02-sd($arg)\n {\n   serialize($arg),\n   uuid:uuid()\n };\n", "summary" : "<p> Equivalent to:\n declare %an:strictlydeterministic function local:test-02-sd($arg)\n {\n   serialize($arg),\n   uuid:uuid()\n };\n</p>", "annotation_str" : " %an:strictlydeterministic", "annotations" : [ { "prefix" : "an", "ns" : "http://zorba.io/annotations", "name" : "strictlydeterministic", "value" : "" } ], "updating" : false, "parameters" : [ { "name" : "arg", "type" : null, "occurrence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> as described above</div>" } ], "returns" : { "type" : "item()*", "description" : "as described above" }, "errors" : [  ] }, { "isDocumented" : true, "arity" : 0, "name" : "test-03-cache", "qname" : "debug:test-03-cache", "signature" : "() as item()* external", "description" : " Equivalent to:\n declare %an:cache function local:test-03-cache()\n {\n   { \"a\" : 1 },\n   [1],\n   &lt;a/&gt;,\n   1\n };\n", "summary" : "<p> Equivalent to:\n declare %an:cache function local:test-03-cache()\n {\n   { \"a\" : 1 },\n   [1],\n   &lt;a/&gt;,\n   1\n };\n</p>", "annotation_str" : " %an:cache", "annotations" : [ { "prefix" : "an", "ns" : "http://zorba.io/annotations", "name" : "cache", "value" : "" } ], "updating" : false, "parameters" : [  ], "returns" : { "type" : "item()*", "description" : "as described above" }, "errors" : [  ] }, { "isDocumented" : true, "arity" : 0, "name" : "test-03-sd", "qname" : "debug:test-03-sd", "signature" : "() as item()* external", "description" : " Equivalent to:\n declare %an:strictlydeterministic function local:test-03-sd()\n {\n   { \"a\" : 1 },\n   [1],\n   &lt;a/&gt;,\n   1\n };\n", "summary" : "<p> Equivalent to:\n declare %an:strictlydeterministic function local:test-03-sd()\n {\n   { \"a\" : 1 },\n   [1],\n   &lt;a/&gt;,\n   1\n };\n</p>", "annotation_str" : " %an:strictlydeterministic", "annotations" : [ { "prefix" : "an", "ns" : "http://zorba.io/annotations", "name" : "strictlydeterministic", "value" : "" } ], "updating" : false, "parameters" : [  ], "returns" : { "type" : "item()*", "description" : "as described above" }, "errors" : [  ] }, { "isDocumented" : true, "arity" : 2, "name" : "test-04-cache", "qname" : "debug:test-04-cache", "signature" : "($x, $y) as item()* external", "description" : " Equivalent to:\n declare %an:cache function local:test-04-cache($x, $y)\n {\n   debug:non-seeakable-streamable-string(),\n   {\"key\" : debug:non-seeakable-streamable-string()},\n   [debug:non-seeakable-streamable-string()],\n   &lt;a&gt;{debug:non-seeakable-streamable-string()}&lt;/a&gt;\n   serialize($x),\n   serialize($y)\n };\n", "summary" : "<p> Equivalent to:\n declare %an:cache function local:test-04-cache($x, $y)\n {\n   debug:non-seeakable-streamable-string(),\n   {\"key\" : debug:non-seeakable-streamable-string()},\n   [debug:non-seeakable-streamable-string()],\n   &lt;a&gt;{debug:non-seeakable-streamable-string()}&lt;/a&gt;\n   serialize($x),\n   serialize($y)\n };\n</p>", "annotation_str" : " %an:cache", "annotations" : [ { "prefix" : "an", "ns" : "http://zorba.io/annotations", "name" : "cache", "value" : "" } ], "updating" : false, "parameters" : [ { "name" : "x", "type" : null, "occurrence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> as described above</div>" }, { "name" : "y", "type" : null, "occurrence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> as described above</div>" } ], "returns" : { "type" : "item()*", "description" : "as described above" }, "errors" : [  ] }, { "isDocumented" : true, "arity" : 2, "name" : "test-04-sd", "qname" : "debug:test-04-sd", "signature" : "($x, $y) as item()* external", "description" : " Equivalent to:\n declare %an:strictlydeterministic function local:test-04-sd($x, $y)\n {\n   debug:non-seeakable-streamable-string(),\n   {\"key\" : debug:non-seeakable-streamable-string()},\n   [debug:non-seeakable-streamable-string()],\n   &lt;a&gt;{debug:non-seeakable-streamable-string()}&lt;/a&gt;\n   serialize($x),\n   serialize($y)\n };\n", "summary" : "<p> Equivalent to:\n declare %an:strictlydeterministic function local:test-04-sd($x, $y)\n {\n   debug:non-seeakable-streamable-string(),\n   {\"key\" : debug:non-seeakable-streamable-string()},\n   [debug:non-seeakable-streamable-string()],\n   &lt;a&gt;{debug:non-seeakable-streamable-string()}&lt;/a&gt;\n   serialize($x),\n   serialize($y)\n };\n</p>", "annotation_str" : " %an:strictlydeterministic", "annotations" : [ { "prefix" : "an", "ns" : "http://zorba.io/annotations", "name" : "strictlydeterministic", "value" : "" } ], "updating" : false, "parameters" : [ { "name" : "x", "type" : null, "occurrence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> as described above</div>" }, { "name" : "y", "type" : null, "occurrence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> as described above</div>" } ], "returns" : { "type" : "item()*", "description" : "as described above" }, "errors" : [  ] }, { "isDocumented" : true, "arity" : 2, "name" : "test-05-cache", "qname" : "debug:test-05-cache", "signature" : "($x as xs:boolean, $y) as item()* external", "description" : " Equivalent to:\n declare %an:cache function local:test-05-cache($x as xs:boolean, $y)\n {\n   if ($x)\n   then $y\n   else $x\n };\n", "summary" : "<p> Equivalent to:\n declare %an:cache function local:test-05-cache($x as xs:boolean, $y)\n {\n   if ($x)\n   then $y\n   else $x\n };\n</p>", "annotation_str" : " %an:cache", "annotations" : [ { "prefix" : "an", "ns" : "http://zorba.io/annotations", "name" : "cache", "value" : "" } ], "updating" : false, "parameters" : [ { "name" : "x", "type" : "xs:boolean", "occurrence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> as described above</div>" }, { "name" : "y", "type" : null, "occurrence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> as described above</div>" } ], "returns" : { "type" : "item()*", "description" : "as described above" }, "errors" : [  ] }, { "isDocumented" : true, "arity" : 2, "name" : "test-05-sd", "qname" : "debug:test-05-sd", "signature" : "($x as xs:boolean, $y) as item()* external", "description" : " Equivalent to:\n declare %an:strictlydeterministic function local:test-05-sd($x as xs:boolean, $y)\n {\n   if ($x)\n   then $y\n   else $x\n };\n", "summary" : "<p> Equivalent to:\n declare %an:strictlydeterministic function local:test-05-sd($x as xs:boolean, $y)\n {\n   if ($x)\n   then $y\n   else $x\n };\n</p>", "annotation_str" : " %an:strictlydeterministic", "annotations" : [ { "prefix" : "an", "ns" : "http://zorba.io/annotations", "name" : "strictlydeterministic", "value" : "" } ], "updating" : false, "parameters" : [ { "name" : "x", "type" : "xs:boolean", "occurrence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> as described above</div>" }, { "name" : "y", "type" : null, "occurrence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> as described above</div>" } ], "returns" : { "type" : "item()*", "description" : "as described above" }, "errors" : [  ] }, { "isDocumented" : true, "arity" : 0, "name" : "uuid", "qname" : "debug:uuid", "signature" : "() as string external", "description" : " This function is not deterministic despite the annotation\n", "summary" : "<p> This function is not deterministic despite the annotation\n</p>", "annotation_str" : " %an:deterministic", "annotations" : [ { "prefix" : "an", "ns" : "http://zorba.io/annotations", "name" : "deterministic", "value" : "" } ], "updating" : false, "parameters" : [  ], "returns" : { "type" : "string", "description" : "a uuid" }, "errors" : [  ] } ], "variables" : [  ] }, "http://zorba.io/modules/json-xml" : { "ns" : "http://zorba.io/modules/json-xml", "description" : " Using this module, you can parse JSON data into XML, manipulate it like any\n other XML data using XQuery, and serialize the result back as JSON.<p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"/>\n There are many ways to represent JSON data in XML, some loss-less (\"round\n tripable\") and some lossy (\"one way\").  Loss-less representations preserve\n the JSON data types <i xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">boolean</i>, <i xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">number</i>, and <i xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">null</i>; lossy\n representations convert all data to strings.\n <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"/>\n For a loss-less representation, this module implements that proposed by\n <a xmlns:xqdoc=\"http://www.xqdoc.org/1.0\" href=\"http://john.snelson.org.uk/parsing-json-into-xquery\">John Snelson</a>.\n For example:\n <pre xmlns:xqdoc=\"http://www.xqdoc.org/1.0\" class=\"ace-static\" ace-mode=\"java\">\n   {\n     \"firstName\" : \"John\",\n     \"lastName\" : \"Smith\",\n     \"address\" : {\n       \"streetAddress\" : \"21 2nd Street\",\n       \"city\" : \"New York\",\n       \"state\" : \"NY\",\n       \"postalCode\" : 10021\n     },\n     \"phoneNumbers\" : [ \"212 732-1234\", \"646 123-4567\" ]\n   }\n </pre>\n would be represented as:\n <pre xmlns:xqdoc=\"http://www.xqdoc.org/1.0\" class=\"ace-static\" ace-mode=\"xquery\">\n   &lt;json type=\"object\"&gt;\n     &lt;pair name=\"firstName\" type=\"string\"&gt;John&lt;/pair&gt;\n     &lt;pair name=\"lastName\" type=\"string\"&gt;Smith&lt;/pair&gt;\n     &lt;pair name=\"address\" type=\"object\"&gt;\n       &lt;pair name=\"streetAddress\" type=\"string\"&gt;21 2nd Street&lt;/pair&gt;\n       &lt;pair name=\"city\" type=\"string\"&gt;New York&lt;/pair&gt;\n       &lt;pair name=\"state\" type=\"string\"&gt;NY&lt;/pair&gt;\n       &lt;pair name=\"postalCode\" type=\"number\"&gt;10021&lt;/pair&gt;\n     &lt;/pair&gt;\n     &lt;pair name=\"phoneNumbers\" type=\"array\"&gt;\n       &lt;item type=\"string\"&gt;212 732-1234&lt;/item&gt;\n       &lt;item type=\"string\"&gt;646 123-4567&lt;/item&gt;\n     &lt;/pair&gt;\n   &lt;/json&gt;\n </pre>\n For a lossy representation, this module implements\n <a xmlns:xqdoc=\"http://www.xqdoc.org/1.0\" href=\"http://jsonml.org/\">JsonML</a> (the array form).\n For example:\n <pre xmlns:xqdoc=\"http://www.xqdoc.org/1.0\" class=\"ace-static\" ace-mode=\"java\">\n   [ \"person\",\n     { \"created\" : \"2006-11-11T19:23\",\n       \"modified\" : \"2006-12-31T23:59\" },\n     [ \"firstName\", \"Robert\" ],\n     [ \"lastName\", \"Smith\" ],\n     [ \"address\",\n       { \"type\" : \"home\" },\n       [ \"street\", \"12345 Sixth Ave\" ],\n       [ \"city\", \"Anytown\" ],\n       [ \"state\", \"CA\" ],\n       [ \"postalCode\", \"98765-4321\" ]\n     ]\n   ]\n </pre>\n would be represented as:\n <pre xmlns:xqdoc=\"http://www.xqdoc.org/1.0\" class=\"ace-static\" ace-mode=\"xquery\">\n   &lt;person created=\"2006-11-11T19:23\" modified=\"2006-12-31T23:59\"&gt;\n     &lt;firstName&gt;Robert&lt;/firstName&gt;\n     &lt;lastName&gt;Smith&lt;/lastName&gt;\n     &lt;address type=\"home\"&gt;\n       &lt;street&gt;12345 Sixth Ave&lt;/street&gt;\n       &lt;city&gt;Anytown&lt;/city&gt;\n       &lt;state&gt;CA&lt;/state&gt;\n       &lt;postalCode&gt;98765-4321&lt;/postalCode&gt;\n     &lt;/address&gt;\n   &lt;/person&gt;\n </pre>\n", "sees" : [  ], "authors" : [ "<xqdoc:author xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">Paul J. Lucas</xqdoc:author>" ], "version" : null, "encoding" : "utf-8", "namespaces" : [ { "uri" : "http://www.w3.org/2005/xqt-errors", "prefix" : "err" }, { "uri" : "http://zorba.io/modules/json-xml", "prefix" : "jx" }, { "uri" : "http://zorba.io/options/versioning", "prefix" : "ver" }, { "uri" : "http://zorba.io/errors", "prefix" : "zerr" } ], "functions" : [ { "isDocumented" : true, "arity" : 1, "name" : "json-to-xml", "qname" : "jx:json-to-xml", "signature" : "($json as json-item()?) as element(*,xs:untyped)?", "description" : " Converts JSON data into an XDM instance using the Snelson representation\n described above.<p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"/>\n", "summary" : "<p> Converts JSON data into an XDM instance using the Snelson representation\n described above.</p>", "annotation_str" : "", "annotations" : [  ], "updating" : false, "parameters" : [ { "name" : "json", "type" : "json-item()", "occurrence" : "?", "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> The JSON data.</div>" } ], "returns" : { "type" : "element(*,xs:untyped)?", "description" : "said XDM instance." }, "errors" : [  ] }, { "isDocumented" : true, "arity" : 2, "name" : "json-to-xml", "qname" : "jx:json-to-xml", "signature" : "($json as json-item()?, $options as object()) as element(*,xs:untyped)?", "description" : " Converts JSON data into an XDM instance using one of the representations\n described above.<p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"/>\n", "summary" : "<p> Converts JSON data into an XDM instance using one of the representations\n described above.</p>", "annotation_str" : "", "annotations" : [  ], "updating" : false, "parameters" : [ { "name" : "json", "type" : "json-item()", "occurrence" : "?", "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> The JSON data.</div>" }, { "name" : "options", "type" : "object()", "occurrence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> The JSON conversion options, for example: <pre> { \"json-format\" : \"JsonML-array\" } </pre></div>" } ], "returns" : { "type" : "element(*,xs:untyped)?", "description" : "said XDM instance." }, "errors" : [  ] }, { "isDocumented" : true, "arity" : 1, "name" : "xml-to-json", "qname" : "jx:xml-to-json", "signature" : "($xml as item()*) as json-item()*", "description" : " Converts XML data into a JSON item using the Snelson representation\n described above.<p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"/>\n", "summary" : "<p> Converts XML data into a JSON item using the Snelson representation\n described above.</p>", "annotation_str" : "", "annotations" : [  ], "updating" : false, "parameters" : [ { "name" : "xml", "type" : "item()", "occurrence" : "*", "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> The XML data to convert.</div>" } ], "returns" : { "type" : "json-item()*", "description" : "said JSON items." }, "errors" : [ "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">zerr:ZJSE0001 if $xml is not a document or element node.</xqdoc:error>", "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">zerr:ZJSE0002 if $xml contains an element that is missing a required attribute.</xqdoc:error>", "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">zerr:ZJSE0003 if $xml contains an attribute having an illegal value.</xqdoc:error>", "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">zerr:ZJSE0004 if $xml contains an illegal element. type.</xqdoc:error>", "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">zerr:ZJSE0007 if $xml contains an element that is missing a required value.</xqdoc:error>", "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">zerr:ZJSE0008 if $xml contains an illegal value for a JSON type.</xqdoc:error>" ] }, { "isDocumented" : true, "arity" : 2, "name" : "xml-to-json", "qname" : "jx:xml-to-json", "signature" : "($xml as item()*, $options as object()) as json-item()*", "description" : " Converts XML data into a JSON item using one of the respresentations\n described above.<p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"/>\n", "summary" : "<p> Converts XML data into a JSON item using one of the respresentations\n described above.</p>", "annotation_str" : "", "annotations" : [  ], "updating" : false, "parameters" : [ { "name" : "xml", "type" : "item()", "occurrence" : "*", "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> The XML data to convert.</div>" }, { "name" : "options", "type" : "object()", "occurrence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> The conversion options, for example: <pre> { \"json-format\" : \"JsonML-array\" } </pre></div>" } ], "returns" : { "type" : "json-item()*", "description" : "said JSON items." }, "errors" : [ "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">zerr:ZJSE0001 if $xml is not a document or element node.</xqdoc:error>", "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">zerr:ZJSE0002 if $xml contains an element that is missing a required attribute.</xqdoc:error>", "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">zerr:ZJSE0003 if $xml contains an attribute having an illegal value.</xqdoc:error>", "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">zerr:ZJSE0004 if $xml contains an illegal element. type.</xqdoc:error>", "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">zerr:ZJSE0007 if $xml contains an element that is missing a required value.</xqdoc:error>", "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">zerr:ZJSE0008 if $xml contains an illegal value for a JSON type.</xqdoc:error>" ] } ], "variables" : [  ] }, "http://www.zorba-xquery.com/modules/image/manipulation" : { "ns" : "http://www.zorba-xquery.com/modules/image/manipulation", "description" : " This module provides functions to handle image manipulations like resizing, zooming,\n special effects etc.\n <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">The errors raised by functions of this module have the namespace\n <tt>http://www.zorba-xquery.com/modules/image/error</tt> (associated with prefix ierr).</p>\n", "sees" : [  ], "authors" : [ "<xqdoc:author xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">Daniel Thomas</xqdoc:author>" ], "version" : null, "encoding" : "utf-8", "namespaces" : [ { "uri" : "http://www.w3.org/2005/xqt-errors", "prefix" : "err" }, { "uri" : "http://www.zorba-xquery.com/modules/image/error", "prefix" : "ierr" }, { "uri" : "http://www.zorba-xquery.com/modules/image/image", "prefix" : "image" }, { "uri" : "http://www.zorba-xquery.com/modules/image/manipulation", "prefix" : "man" }, { "uri" : "http://zorba.io/options/versioning", "prefix" : "ver" } ], "functions" : [ { "isDocumented" : true, "arity" : 2, "name" : "add-noise", "qname" : "man:add-noise", "signature" : "($image as xs:base64Binary, $noise-type as xs:string) as xs:base64Binary", "description" : " Add noise to an image.\n Allowed noise types are:\n <ul xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">\n  <li>UniformNoise</li>\n  <li>GaussianNoise</li>\n  <li>MultiplicativeGaussianNoise</li>\n  <li>ImpulseNoise</li>\n  <li>LaplaceianNoise</li>\n  <li>PoissonNoise</li>\n </ul>\n", "summary" : "<p> Add noise to an image.</p>", "annotation_str" : "", "annotations" : [  ], "updating" : false, "parameters" : [ { "name" : "image", "type" : "xs:base64Binary", "occurrence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> the source image</div>" }, { "name" : "noise-type", "type" : "xs:string", "occurrence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> specifies the type of noise to add</div>" } ], "returns" : { "type" : "xs:base64Binary", "description" : "A copy of $image with added noise" }, "errors" : [ "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">ierr:IM001 passed image is invalid</xqdoc:error>", "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">err:FORG0001 unsupported noise type</xqdoc:error>" ] }, { "isDocumented" : true, "arity" : 3, "name" : "blur", "qname" : "man:blur", "signature" : "($image as xs:base64Binary, $radius as xs:int, $sigma as xs:int) as xs:base64Binary external", "description" : " Blur an image.\n", "summary" : "<p> Blur an image.</p>", "annotation_str" : "", "annotations" : [  ], "updating" : false, "parameters" : [ { "name" : "image", "type" : "xs:base64Binary", "occurrence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> the source image</div>" }, { "name" : "radius", "type" : "xs:int", "occurrence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> is the radius of the Gaussian in pixels.</div>" }, { "name" : "sigma", "type" : "xs:int", "occurrence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> is the standard deviation of the Laplacian in pixels.</div>" } ], "returns" : { "type" : "xs:base64Binary", "description" : "A blured copy of $image" }, "errors" : [ "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">ierr:IM001 passed image is invalid</xqdoc:error>" ] }, { "isDocumented" : true, "arity" : 3, "name" : "charcoal", "qname" : "man:charcoal", "signature" : "($image as xs:base64Binary, $radius as xs:double, $sigma as xs:double) as xs:base64Binary external", "description" : " Apply a charcoal effect to the image (looks like a charcoal sketch).\n", "summary" : "<p> Apply a charcoal effect to the image (looks like a charcoal sketch).</p>", "annotation_str" : "", "annotations" : [  ], "updating" : false, "parameters" : [ { "name" : "image", "type" : "xs:base64Binary", "occurrence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> the source image</div>" }, { "name" : "radius", "type" : "xs:double", "occurrence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> radius of the Gaussian in pixels</div>" }, { "name" : "sigma", "type" : "xs:double", "occurrence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> standard deviation of the Laplacian in pixels</div>" } ], "returns" : { "type" : "xs:base64Binary", "description" : "A charcoaled copy of $image" }, "errors" : [ "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">ierr:IM001 passed image is invalid</xqdoc:error>" ] }, { "isDocumented" : true, "arity" : 3, "name" : "chop", "qname" : "man:chop", "signature" : "($image as xs:base64Binary, $upper-left-x as xs:unsignedInt, $upper-left-y as xs:unsignedInt) as xs:base64Binary external", "description" : " Copy a part of a source image as new image.\n The copied part is all right of $upper-left-x and below $upper-left-y.\n", "summary" : "<p> Copy a part of a source image as new image.</p>", "annotation_str" : "", "annotations" : [  ], "updating" : false, "parameters" : [ { "name" : "image", "type" : "xs:base64Binary", "occurrence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> source image</div>" }, { "name" : "upper-left-x", "type" : "xs:unsignedInt", "occurrence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> x position of the upper left corner of the part to copy</div>" }, { "name" : "upper-left-y", "type" : "xs:unsignedInt", "occurrence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> y position of the upper left corner of the part to copy</div>" } ], "returns" : { "type" : "xs:base64Binary", "description" : "A new image copied from a part of source image" }, "errors" : [ "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">ierr:IM001 passed image is invalid</xqdoc:error>" ] }, { "isDocumented" : true, "arity" : 2, "name" : "contrast", "qname" : "man:contrast", "signature" : "($image as xs:base64Binary, $sharpen as xs:double) as xs:base64Binary external", "description" : " Contrast an image (enhances image intensity differences) by a given value.\n", "summary" : "<p> Contrast an image (enhances image intensity differences) by a given value.</p>", "annotation_str" : "", "annotations" : [  ], "updating" : false, "parameters" : [ { "name" : "image", "type" : "xs:base64Binary", "occurrence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> the source image</div>" }, { "name" : "sharpen", "type" : "xs:double", "occurrence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> defines how much the image is contrasted.</div>" } ], "returns" : { "type" : "xs:base64Binary", "description" : "A contrasted copy of $image" }, "errors" : [ "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">ierr:IM001 passed image is invalid</xqdoc:error>" ] }, { "isDocumented" : true, "arity" : 3, "name" : "crop", "qname" : "man:crop", "signature" : "($image as xs:base64Binary, $lower-right-x as xs:unsignedInt, $lower-right-y as xs:unsignedInt) as xs:base64Binary external", "description" : " Copy a part of a source image as new image.\n The copied part is all left of $lower-right-x and above $lower-right-y.\n", "summary" : "<p> Copy a part of a source image as new image.</p>", "annotation_str" : "", "annotations" : [  ], "updating" : false, "parameters" : [ { "name" : "image", "type" : "xs:base64Binary", "occurrence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> source image</div>" }, { "name" : "lower-right-x", "type" : "xs:unsignedInt", "occurrence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> x position of the lower right corner of the part to copy</div>" }, { "name" : "lower-right-y", "type" : "xs:unsignedInt", "occurrence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> y position of the lower right corner of the part to copy</div>" } ], "returns" : { "type" : "xs:base64Binary", "description" : "A new image copied from a part of source image" }, "errors" : [ "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">ierr:IM001 passed image is invalid</xqdoc:error>" ] }, { "isDocumented" : true, "arity" : 1, "name" : "despeckle", "qname" : "man:despeckle", "signature" : "($image as xs:base64Binary) as xs:base64Binary external", "description" : " Despeckle an image.\n", "summary" : "<p> Despeckle an image.</p>", "annotation_str" : "", "annotations" : [  ], "updating" : false, "parameters" : [ { "name" : "image", "type" : "xs:base64Binary", "occurrence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> the source image</div>" } ], "returns" : { "type" : "xs:base64Binary", "description" : "A despeckled copy of $image" }, "errors" : [ "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">ierr:IM001 passed image is invalid</xqdoc:error>" ] }, { "isDocumented" : true, "arity" : 2, "name" : "edge", "qname" : "man:edge", "signature" : "($image as xs:base64Binary, $radius as xs:unsignedInt) as xs:base64Binary external", "description" : " Highlight edges in an image.\n", "summary" : "<p> Highlight edges in an image.</p>", "annotation_str" : "", "annotations" : [  ], "updating" : false, "parameters" : [ { "name" : "image", "type" : "xs:base64Binary", "occurrence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> the source image</div>" }, { "name" : "radius", "type" : "xs:unsignedInt", "occurrence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> radius of the pixel neighborhood (0 for automatic selection)</div>" } ], "returns" : { "type" : "xs:base64Binary", "description" : "An edged copy of $image" }, "errors" : [ "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">ierr:IM001 passed image is invalid</xqdoc:error>" ] }, { "isDocumented" : true, "arity" : 3, "name" : "emboss", "qname" : "man:emboss", "signature" : "($image as xs:base64Binary, $radius as xs:double, $sigma as xs:double) as xs:base64Binary external", "description" : " Emboss an images (highlights edges with 3D effect).\n", "summary" : "<p> Emboss an images (highlights edges with 3D effect).</p>", "annotation_str" : "", "annotations" : [  ], "updating" : false, "parameters" : [ { "name" : "image", "type" : "xs:base64Binary", "occurrence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> the source image</div>" }, { "name" : "radius", "type" : "xs:double", "occurrence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> radius of the Gaussian in pixels</div>" }, { "name" : "sigma", "type" : "xs:double", "occurrence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> standard deviation of the Laplacian in pixels</div>" } ], "returns" : { "type" : "xs:base64Binary", "description" : "An embossed copy of $image" }, "errors" : [ "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">ierr:IM001 passed image is invalid</xqdoc:error>" ] }, { "isDocumented" : true, "arity" : 1, "name" : "enhance", "qname" : "man:enhance", "signature" : "($image as xs:base64Binary) as xs:base64Binary external", "description" : " Enhance an images (minimizes noise).\n", "summary" : "<p> Enhance an images (minimizes noise).</p>", "annotation_str" : "", "annotations" : [  ], "updating" : false, "parameters" : [ { "name" : "image", "type" : "xs:base64Binary", "occurrence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> the source image</div>" } ], "returns" : { "type" : "xs:base64Binary", "description" : "An enhanced copy of $image." }, "errors" : [ "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">ierr:IM001 passed image is invalid</xqdoc:error>" ] }, { "isDocumented" : true, "arity" : 1, "name" : "equalize", "qname" : "man:equalize", "signature" : "($image as xs:base64Binary) as xs:base64Binary external", "description" : " Equalize an images (histogramm equalization).\n", "summary" : "<p> Equalize an images (histogramm equalization).</p>", "annotation_str" : "", "annotations" : [  ], "updating" : false, "parameters" : [ { "name" : "image", "type" : "xs:base64Binary", "occurrence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> the source image</div>" } ], "returns" : { "type" : "xs:base64Binary", "description" : "An equalized copy of $image." }, "errors" : [ "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">ierr:IM001 passed image is invalid</xqdoc:error>" ] }, { "isDocumented" : true, "arity" : 1, "name" : "erase", "qname" : "man:erase", "signature" : "($image as xs:base64Binary) as xs:base64Binary external", "description" : " Set all pixels of the image to the current backround color.\n In most cases, this will result in all pixels to be set to white.\n", "summary" : "<p> Set all pixels of the image to the current backround color.</p>", "annotation_str" : "", "annotations" : [  ], "updating" : false, "parameters" : [ { "name" : "image", "type" : "xs:base64Binary", "occurrence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> image to erase</div>" } ], "returns" : { "type" : "xs:base64Binary", "description" : "A copy of image with all pixels set to the current background color" }, "errors" : [ "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">ierr:IM001 passed image is invalid</xqdoc:error>" ] }, { "isDocumented" : true, "arity" : 1, "name" : "flip", "qname" : "man:flip", "signature" : "($image as xs:base64Binary) as xs:base64Binary external", "description" : " Flip an image (vertical rotation).\n", "summary" : "<p> Flip an image (vertical rotation).</p>", "annotation_str" : "", "annotations" : [  ], "updating" : false, "parameters" : [ { "name" : "image", "type" : "xs:base64Binary", "occurrence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> source image</div>" } ], "returns" : { "type" : "xs:base64Binary", "description" : "A vertically rotated copy of $image" }, "errors" : [ "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">ierr:IM001 passed image is invalid</xqdoc:error>" ] }, { "isDocumented" : true, "arity" : 1, "name" : "flop", "qname" : "man:flop", "signature" : "($image as xs:base64Binary) as xs:base64Binary external", "description" : " Flop an image (horizontal rotation).\n", "summary" : "<p> Flop an image (horizontal rotation).</p>", "annotation_str" : "", "annotations" : [  ], "updating" : false, "parameters" : [ { "name" : "image", "type" : "xs:base64Binary", "occurrence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> source image</div>" } ], "returns" : { "type" : "xs:base64Binary", "description" : "A horizontally rotated copy of $image" }, "errors" : [ "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">ierr:IM001 passed image is invalid</xqdoc:error>" ] }, { "isDocumented" : true, "arity" : 2, "name" : "gamma", "qname" : "man:gamma", "signature" : "($image as xs:base64Binary, $gamma-value as xs:double) as xs:base64Binary external", "description" : " Gamma correct an image.\n Gamma values less than zero will erase the image.\n", "summary" : "<p> Gamma correct an image.</p>", "annotation_str" : "", "annotations" : [  ], "updating" : false, "parameters" : [ { "name" : "image", "type" : "xs:base64Binary", "occurrence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> the source image</div>" }, { "name" : "gamma-value", "type" : "xs:double", "occurrence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> value for which to gamma correct the image</div>" } ], "returns" : { "type" : "xs:base64Binary", "description" : "A gamma corrected copy of $image" }, "errors" : [ "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">ierr:IM001 passed image is invalid</xqdoc:error>" ] }, { "isDocumented" : true, "arity" : 4, "name" : "gamma", "qname" : "man:gamma", "signature" : "($image as xs:base64Binary, $gamma-red as xs:double, $gamma-green as xs:double, $gamma-blue as xs:double) as xs:base64Binary external", "description" : " Gamma correct an image for every color channel seperately.\n Gamma values less than zero for any color will erase the corresponding color.\n", "summary" : "<p> Gamma correct an image for every color channel seperately.</p>", "annotation_str" : "", "annotations" : [  ], "updating" : false, "parameters" : [ { "name" : "image", "type" : "xs:base64Binary", "occurrence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> the source image</div>" }, { "name" : "gamma-red", "type" : "xs:double", "occurrence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> value to gamma correct the red channel of the image</div>" }, { "name" : "gamma-green", "type" : "xs:double", "occurrence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> value to gamma correct the green channel of the image</div>" }, { "name" : "gamma-blue", "type" : "xs:double", "occurrence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> value to gamma correct the blue channel of the image</div>" } ], "returns" : { "type" : "xs:base64Binary", "description" : "A gamma corrected copy of $image" }, "errors" : [ "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">ierr:IM001 passed image is invalid</xqdoc:error>" ] }, { "isDocumented" : true, "arity" : 2, "name" : "implode", "qname" : "man:implode", "signature" : "($image as xs:base64Binary, $factor as xs:double) as xs:base64Binary external", "description" : " Apply an implode effect to an image (a sort of special effect).\n", "summary" : "<p> Apply an implode effect to an image (a sort of special effect).</p>", "annotation_str" : "", "annotations" : [  ], "updating" : false, "parameters" : [ { "name" : "image", "type" : "xs:base64Binary", "occurrence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> the source image</div>" }, { "name" : "factor", "type" : "xs:double", "occurrence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> factor to implode to</div>" } ], "returns" : { "type" : "xs:base64Binary", "description" : "An imploded copy of $image." }, "errors" : [ "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">ierr:IM001 passed image is invalid</xqdoc:error>" ] }, { "isDocumented" : true, "arity" : 2, "name" : "oil-paint", "qname" : "man:oil-paint", "signature" : "($image as xs:base64Binary, $radius as xs:double) as xs:base64Binary external", "description" : " Apply an oil paint effect to an image (makes the image look as if it was\n an oil paint).\n", "summary" : "<p> Apply an oil paint effect to an image (makes the image look as if it was\n an oil paint).</p>", "annotation_str" : "", "annotations" : [  ], "updating" : false, "parameters" : [ { "name" : "image", "type" : "xs:base64Binary", "occurrence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> the source image</div>" }, { "name" : "radius", "type" : "xs:double", "occurrence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> radius with which to oil paint</div>" } ], "returns" : { "type" : "xs:base64Binary", "description" : "A oil-painted copy of $image" }, "errors" : [ "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">ierr:IM001 passed image is invalid</xqdoc:error>" ] }, { "isDocumented" : true, "arity" : 5, "name" : "overlay", "qname" : "man:overlay", "signature" : "($image as xs:base64Binary, $overlay-image as xs:base64Binary, $overlay-upper-left-x as xs:unsignedInt, $overlay-upper-left-y as xs:unsignedInt, $operator as xs:string) as xs:base64Binary", "description" : " Overlay $image with $overlay-image at the specfied position.\n The $operator defines the details of the overlay and can have one of the\n following values:\n <ul xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">\n   <li>OverCompositeOp: The result is the union of the two image shapes\n       with the overlay image obscuring image in the region of overlap.</li>\n   <li>InCompositeOp: The result is a simple overlay image cut by the shape\n       of image. None of the image data of image is included in the result.</li>\n   <li>OutCompositeOp: The resulting image is the overlay image with the shape\n       of image cut out.</li>\n   <li>AtopCompositeOp: The result is the same shape as image, with overlay\n       image obscuring image there the image shapes overlap. Note that this\n       differs from OverCompositeOp because the portion of composite image\n       outside of image's shape does not appear in the result.</li>\n   <li>XorCompositeOp: The result is the image data from both overlay image\n       and image that is outside the overlap region. The overlap region will\n       be blank.</li>\n   <li>PlusCompositeOp: The result is just the sum of the image data of both\n       images. Output values are cropped to 255 (no overflow). This operation\n       is independent of the matte channels.</li>\n   <li>MinusCompositeOp: The result of overlay image - image, with overflow\n       cropped to zero. The matte chanel is ignored (set to 255, full\n       coverage).</li>\n   <li>AddCompositeOp: The result of overlay image + image, with overflow\n       wrapping around (mod 256).</li>\n   <li>SubtractCompositeOp: The result of overlay image - image, with underflow\n       wrapping around (mod 256). The add and subtract operators can be used to\n       perform reverible transformations.</li>\n   <li>DifferenceCompositeOp: The result of abs(overlay image - image). This is\n       useful for comparing two very similar images.</li>\n   <li>BumpmapCompositeOp: The result image shaded by overlay image.</li>\n </ul>\n", "summary" : "<p> Overlay $image with $overlay-image at the specfied position.</p>", "annotation_str" : "", "annotations" : [  ], "updating" : false, "parameters" : [ { "name" : "image", "type" : "xs:base64Binary", "occurrence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> base image</div>" }, { "name" : "overlay-image", "type" : "xs:base64Binary", "occurrence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> image to overlay.</div>" }, { "name" : "overlay-upper-left-x", "type" : "xs:unsignedInt", "occurrence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> horizontal position within $image where the left upper edge of the $overlay-image is placed</div>" }, { "name" : "overlay-upper-left-y", "type" : "xs:unsignedInt", "occurrence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> vertical position within $image where the left upper edge of the $overlay-image is placed</div>" }, { "name" : "operator", "type" : "xs:string", "occurrence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> defines how the overlay image should be overlayed (see details in operator listing above)</div>" } ], "returns" : { "type" : "xs:base64Binary", "description" : "A new image consisting of $image overlayed with $overlay-image." }, "errors" : [ "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">ierr:IM001 passed image is invalid</xqdoc:error>", "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">err:FORG0001 unsupported operator</xqdoc:error>" ] }, { "isDocumented" : true, "arity" : 2, "name" : "reduce-noise", "qname" : "man:reduce-noise", "signature" : "($image as xs:base64Binary, $order as xs:double) as xs:base64Binary external", "description" : " Reduce noise of an image using a noise peak elemination filter.\n", "summary" : "<p> Reduce noise of an image using a noise peak elemination filter.</p>", "annotation_str" : "", "annotations" : [  ], "updating" : false, "parameters" : [ { "name" : "image", "type" : "xs:base64Binary", "occurrence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> the source image</div>" }, { "name" : "order", "type" : "xs:double", "occurrence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> defines how much the noise is reduced</div>" } ], "returns" : { "type" : "xs:base64Binary", "description" : "A copy of $image with reduced noise" }, "errors" : [ "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">ierr:IM001 passed image is invalid</xqdoc:error>" ] }, { "isDocumented" : true, "arity" : 3, "name" : "resize", "qname" : "man:resize", "signature" : "($image as xs:base64Binary, $width as xs:unsignedInt, $height as xs:unsignedInt) as xs:base64Binary external", "description" : " Get a copy of the passed image with changed width and height (without\n zooming the image's content).\n To change the size of the actual contents of an image, use the zoom function.\n More in detail: If the new dimensions are greater than the current dimensions\n the new image will have the passed image in the upper left corner and the rest\n will be filled with the current background color.\n If the passed dimensions are less than the current dimensions, the new image\n will contain the specified rectangle of the passed image beginning at the upper\n left corner.\n", "summary" : "<p> Get a copy of the passed image with changed width and height (without\n zooming the image's content).</p>", "annotation_str" : "", "annotations" : [  ], "updating" : false, "parameters" : [ { "name" : "image", "type" : "xs:base64Binary", "occurrence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> image to resize</div>" }, { "name" : "width", "type" : "xs:unsignedInt", "occurrence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> new width</div>" }, { "name" : "height", "type" : "xs:unsignedInt", "occurrence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> new height</div>" } ], "returns" : { "type" : "xs:base64Binary", "description" : "resized copy of the source image" }, "errors" : [ "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">ierr:IM001 passed image is invalid.</xqdoc:error>" ] }, { "isDocumented" : true, "arity" : 2, "name" : "rotate", "qname" : "man:rotate", "signature" : "($image as xs:base64Binary, $angle as xs:int) as xs:base64Binary external", "description" : " Get a new image as rotated copy of a passed source image (rotated by -360 to\n 360 degrees).\n The image is enlarged if this is required for containing the rotated image,\n but never shrunk even if the rotation would make a smaller image possible.\n", "summary" : "<p> Get a new image as rotated copy of a passed source image (rotated by -360 to\n 360 degrees).</p>", "annotation_str" : "", "annotations" : [  ], "updating" : false, "parameters" : [ { "name" : "image", "type" : "xs:base64Binary", "occurrence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> source image.</div>" }, { "name" : "angle", "type" : "xs:int", "occurrence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> between -360 to 360 degrees. Other values will be adjusted by modulo 360</div>" } ], "returns" : { "type" : "xs:base64Binary", "description" : "A rotated copy of $image" }, "errors" : [ "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">ierr:IM001 passed image is invalid</xqdoc:error>" ] }, { "isDocumented" : true, "arity" : 2, "name" : "solarize", "qname" : "man:solarize", "signature" : "($image as xs:base64Binary, $factor as xs:double) as xs:base64Binary external", "description" : " Apply a solarize effect to the image (similar to the effect seen when\n exposing a photographic film to light during the development process).\n", "summary" : "<p> Apply a solarize effect to the image (similar to the effect seen when\n exposing a photographic film to light during the development process).</p>", "annotation_str" : "", "annotations" : [  ], "updating" : false, "parameters" : [ { "name" : "image", "type" : "xs:base64Binary", "occurrence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> the source image</div>" }, { "name" : "factor", "type" : "xs:double", "occurrence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> strength of the solarization (0 to 65535; 65535=100%)</div>" } ], "returns" : { "type" : "xs:base64Binary", "description" : "A solarized copy of $image." }, "errors" : [ "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">ierr:IM001 passed image is invalid</xqdoc:error>" ] }, { "isDocumented" : true, "arity" : 2, "name" : "stereo", "qname" : "man:stereo", "signature" : "($left-image as xs:base64Binary, $right-image as xs:base64Binary) as xs:base64Binary external", "description" : " Make two passed images appear as stereo image when viewed with red-blue glasses.\n Both images should be same but from a slightly different angle for this to work.\n Both images should have the same size, if not, the size of the left image will\n be taken.\n", "summary" : "<p> Make two passed images appear as stereo image when viewed with red-blue glasses.</p>", "annotation_str" : "", "annotations" : [  ], "updating" : false, "parameters" : [ { "name" : "left-image", "type" : "xs:base64Binary", "occurrence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> left image for the stereo image.</div>" }, { "name" : "right-image", "type" : "xs:base64Binary", "occurrence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> right image for the stereo image.</div>" } ], "returns" : { "type" : "xs:base64Binary", "description" : "A new image as combined stereo image of both source images" }, "errors" : [ "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">ierr:IM001 one of the passed images is invalid</xqdoc:error>" ] }, { "isDocumented" : true, "arity" : 5, "name" : "sub-image", "qname" : "man:sub-image", "signature" : "($image as xs:base64Binary, $left-upper-x as xs:unsignedInt, $left-upper-y as xs:unsignedInt, $width as xs:unsignedInt, $height as xs:unsignedInt) as xs:base64Binary external", "description" : " Copy a part of the source image specified by a rectangle.\n If the passed parameters for the sub-image specify a rectangle that isn't\n entirely within the source image only the area that lies within the image\n boundaries will be returned.\n", "summary" : "<p> Copy a part of the source image specified by a rectangle.</p>", "annotation_str" : "", "annotations" : [  ], "updating" : false, "parameters" : [ { "name" : "image", "type" : "xs:base64Binary", "occurrence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> the image from which to extract a sub-image</div>" }, { "name" : "left-upper-x", "type" : "xs:unsignedInt", "occurrence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> is the x value of the upper left corner of the rectangle to cut out</div>" }, { "name" : "left-upper-y", "type" : "xs:unsignedInt", "occurrence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> is the y value of the upper left corner of the rectangle to cut out.</div>" }, { "name" : "width", "type" : "xs:unsignedInt", "occurrence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> width of the rectangle to cut out</div>" }, { "name" : "height", "type" : "xs:unsignedInt", "occurrence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> height of the rectangle to cut out</div>" } ], "returns" : { "type" : "xs:base64Binary", "description" : "A new image containing parts of the source image" }, "errors" : [ "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">ierr:IM001 passed image is invalid</xqdoc:error>" ] }, { "isDocumented" : true, "arity" : 2, "name" : "swirl", "qname" : "man:swirl", "signature" : "($image as xs:base64Binary, $degree as xs:double) as xs:base64Binary external", "description" : " Swirl an image (image pixels are rotated by degree).\n", "summary" : "<p> Swirl an image (image pixels are rotated by degree).</p>", "annotation_str" : "", "annotations" : [  ], "updating" : false, "parameters" : [ { "name" : "image", "type" : "xs:base64Binary", "occurrence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> the source image</div>" }, { "name" : "degree", "type" : "xs:double", "occurrence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> degree to swirl image pixels</div>" } ], "returns" : { "type" : "xs:base64Binary", "description" : "A swirled copy of $image" }, "errors" : [ "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">ierr:IM001 passed image is invalid</xqdoc:error>" ] }, { "isDocumented" : true, "arity" : 2, "name" : "transparent", "qname" : "man:transparent", "signature" : "($image as xs:base64Binary, $color as xs:string) as xs:base64Binary", "description" : " Make all pixels of the specfied color transparent.\n This works correctly only with image types supporting transparency\n (e.g GIF or PNG).\n", "summary" : "<p> Make all pixels of the specfied color transparent.</p>", "annotation_str" : "", "annotations" : [  ], "updating" : false, "parameters" : [ { "name" : "image", "type" : "xs:base64Binary", "occurrence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> the source image</div>" }, { "name" : "color", "type" : "xs:string", "occurrence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> color to make transparent (e.g. '#FFFFFF')</div>" } ], "returns" : { "type" : "xs:base64Binary", "description" : "A copy of $image with the specified color made transparent." }, "errors" : [ "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">ierr:IM001 passed image is invalid</xqdoc:error>", "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">err:FORG0001 unsupported color</xqdoc:error>" ] }, { "isDocumented" : true, "arity" : 1, "name" : "trim", "qname" : "man:trim", "signature" : "($image as xs:base64Binary) as xs:base64Binary external", "description" : " Trim edges of the image's background color from the image.\n", "summary" : "<p> Trim edges of the image's background color from the image.</p>", "annotation_str" : "", "annotations" : [  ], "updating" : false, "parameters" : [ { "name" : "image", "type" : "xs:base64Binary", "occurrence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> the source image</div>" } ], "returns" : { "type" : "xs:base64Binary", "description" : "A trimmed copy of $image" }, "errors" : [ "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">ierr:IM001 passed image is invalid</xqdoc:error>" ] }, { "isDocumented" : true, "arity" : 2, "name" : "watermark", "qname" : "man:watermark", "signature" : "($image as xs:base64Binary, $watermark as xs:base64Binary) as xs:base64Binary external", "description" : " Add a $watermark image to $image.\n", "summary" : "<p> Add a $watermark image to $image.</p>", "annotation_str" : "", "annotations" : [  ], "updating" : false, "parameters" : [ { "name" : "image", "type" : "xs:base64Binary", "occurrence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> the source image</div>" }, { "name" : "watermark", "type" : "xs:base64Binary", "occurrence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> the watermark image</div>" } ], "returns" : { "type" : "xs:base64Binary", "description" : "A watermarked copy of $image" }, "errors" : [ "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">ierr:IM001 one of the passed images is invalid</xqdoc:error>" ] }, { "isDocumented" : true, "arity" : 2, "name" : "zoom-by-height", "qname" : "man:zoom-by-height", "signature" : "($image as xs:base64Binary, $height as xs:unsignedInt) as xs:base64Binary external", "description" : " Zoom the passed image to a given new height while keeping the ratio between\n width and height.\n So, the width is scaled accordingly.\n Important note: this function does not change the size information stored\n in the image (e.g. basic:width will not show a different value).\n", "summary" : "<p> Zoom the passed image to a given new height while keeping the ratio between\n width and height.</p>", "annotation_str" : "", "annotations" : [  ], "updating" : false, "parameters" : [ { "name" : "image", "type" : "xs:base64Binary", "occurrence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> image to resize</div>" }, { "name" : "height", "type" : "xs:unsignedInt", "occurrence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> new height for the image in pixels</div>" } ], "returns" : { "type" : "xs:base64Binary", "description" : "A copy of $image with given $height and width adjusted accordingly" }, "errors" : [ "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">ierr:IM001 passed image is invalid</xqdoc:error>" ] }, { "isDocumented" : true, "arity" : 2, "name" : "zoom-by-width", "qname" : "man:zoom-by-width", "signature" : "($image as xs:base64Binary, $width as xs:unsignedInt) as xs:base64Binary external", "description" : " Zoom the passed image to a given new width while keeping the ratio between\n width and height.\n So, the height is scaled accordingly.\n Important note: this function does not change the size information stored\n in the image (e.g. basic:width will not show a different value).\n", "summary" : "<p> Zoom the passed image to a given new width while keeping the ratio between\n width and height.</p>", "annotation_str" : "", "annotations" : [  ], "updating" : false, "parameters" : [ { "name" : "image", "type" : "xs:base64Binary", "occurrence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> image to resize</div>" }, { "name" : "width", "type" : "xs:unsignedInt", "occurrence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> new width for the image in pixels</div>" } ], "returns" : { "type" : "xs:base64Binary", "description" : "A copy of $image with given $width and height changed accordingly" }, "errors" : [ "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">ierr:IM001 passed image is invalid</xqdoc:error>" ] }, { "isDocumented" : true, "arity" : 2, "name" : "zoom", "qname" : "man:zoom", "signature" : "($image as xs:base64Binary, $ratio as xs:double) as xs:base64Binary external", "description" : " Zoom the passed image by the specified factor while keeping the ratio between\n width and height.\n A ratio of less than 1 will make the image smaller.\n A ratio of less or equal than 0 will not effect the image.\n Important note: this function does not change the size information stored in the\n image (e.g. basic:width will not show a different value).\n", "summary" : "<p> Zoom the passed image by the specified factor while keeping the ratio between\n width and height.</p>", "annotation_str" : "", "annotations" : [  ], "updating" : false, "parameters" : [ { "name" : "image", "type" : "xs:base64Binary", "occurrence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> image to resize</div>" }, { "name" : "ratio", "type" : "xs:double", "occurrence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> ratio to zoom width and height by</div>" } ], "returns" : { "type" : "xs:base64Binary", "description" : "A copy of $image with resized content" }, "errors" : [ "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">ierr:IM001 passed image is invalid</xqdoc:error>" ] } ], "variables" : [  ] }, "http://zorba.io/modules/http-client-wrapper" : { "ns" : "http://zorba.io/modules/http-client-wrapper", "description" : " <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">This module provides conversion functions between the\n XML Expath http-client request and response formats and the\n JSON http-client request and response formats used by the\n <code>http://zorba.io/modules/http-client</code> module.\n </p>\n <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">This module is reserved for internal use by the\n <code>http://www.zorba-xquery.com/modules/http-client</code> and the\n <code>http://expath.org/ns/http-client</code> modules.\n This module may be removed at any time. Method signature and\n semantics may change.\n </p>\n", "sees" : [  ], "authors" : [ "<xqdoc:author xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">Federico Cavalieri</xqdoc:author>" ], "version" : null, "encoding" : "utf-8", "namespaces" : [ { "uri" : "http://zorba.io/annotations", "prefix" : "an" }, { "uri" : "http://www.w3.org/2005/xqt-errors", "prefix" : "err" }, { "uri" : "http://expath.org/ns/error", "prefix" : "error" }, { "uri" : "http://expath.org/ns/http-client", "prefix" : "http-schema" }, { "uri" : "http://zorba.io/modules/http-client-wrapper", "prefix" : "http-wrapper" }, { "uri" : "http://jsoniq.org/functions", "prefix" : "jn" }, { "uri" : "http://zorba.io/modules/http-client", "prefix" : "json-http" }, { "uri" : "http://jsoniq.org/function-library", "prefix" : "libjn" }, { "uri" : "http://www.w3.org/2010/xslt-xquery-serialization", "prefix" : "ser" }, { "uri" : "http://zorba.io/options/versioning", "prefix" : "ver" } ], "functions" : [ { "isDocumented" : true, "arity" : 3, "name" : "http-nondeterministic-request", "qname" : "http-wrapper:http-nondeterministic-request", "signature" : "($request as element(*)?, $href as xs:string?, $bodies as item()*) as item()+", "description" : " <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">This function sends an HTTP request and returns the corresponding response.\n This function is declared non-deterministic and should only be used to issue\n requests which do not change the state of the server.</p>\n <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">Its inputs, outputs, and behavior are identical to the\n <a href=\"http://expath.org/spec/http-client\">EXPath http-client</a>'s\n send-request() function (except that HTML responses are not tidied\n into XML - see <a href=\"#expath_relation\">the note above</a>). It\n is provided here for use in Zorba installations that do not have\n the EXPath module available. If you have the option of using the\n EXPath module instead of this function, please do so, as it will\n allow your application to be more interoperable between different\n XQuery engines.</p>\n <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">Full documentation of the $request parameter can be found in\n <a href=\"http://expath.org/spec/http-client#d2e183\">the EXPath\n specification</a>.</p>\n", "summary" : "<p>  This function sends an HTTP request and returns the corresponding response.</p>", "annotation_str" : " %an:nondeterministic", "annotations" : [ { "prefix" : "an", "ns" : "http://zorba.io/annotations", "name" : "nondeterministic", "value" : "" } ], "updating" : false, "parameters" : [ { "name" : "request", "type" : "element(*)", "occurrence" : "?", "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> Contains the various parameters of the request (see above).</div>" }, { "name" : "href", "type" : "xs:string", "occurrence" : "?", "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> The URL to which the request will be made (see <a href=\"#url_string\">note</a> above). If this parameter is specified, it will override the \"href\" attribute of $request.</div>" }, { "name" : "bodies", "type" : "item()", "occurrence" : "*", "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> is the request body content, for HTTP methods that can contain a body in the request (i.e. POST and PUT). It is an error if this param is not the empty sequence for methods</div>" } ], "returns" : { "type" : "item()+", "description" : "<a xmlns:xqdoc=\"http://www.xqdoc.org/1.0\" href=\"#standard_return\">standard http-client return type</a>." }, "errors" : [ "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">error:HC001 An HTTP error occurred.</xqdoc:error>", "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">error:HC002 Error parsing the response content as XML.</xqdoc:error>", "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">error:HC003 With a multipart response, the override-media-type must be either a multipart media type or application/octet-stream.</xqdoc:error>", "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">error:HC004 The src attribute on the body element is mutually exclusive with all other attribute (except the media-type).</xqdoc:error>", "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">error:HC005 The input request element is not valid.</xqdoc:error>", "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">error:HC006 A timeout occurred waiting for the response.</xqdoc:error>", "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">error:HCV02 Trying to follow a redirect of a POST, PUT, or DELETE request</xqdoc:error>" ] }, { "isDocumented" : true, "arity" : 3, "name" : "http-sequential-request", "qname" : "http-wrapper:http-sequential-request", "signature" : "($request as element(*)?, $href as xs:string?, $bodies as item()*) as item()+", "description" : " <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">This function sends an HTTP request and returns the corresponding response.\n This function is declared sequential and can be used to issue\n requests which change the state of the server.</p>\n <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">Its inputs, outputs, and behavior are identical to the\n <a href=\"http://expath.org/spec/http-client\">EXPath http-client</a>'s\n send-request() function (except that HTML responses are not tidied\n into XML - see <a href=\"#expath_relation\">the note above</a>). It\n is provided here for use in Zorba installations that do not have\n the EXPath module available. If you have the option of using the\n EXPath module instead of this function, please do so, as it will\n allow your application to be more interoperable between different\n XQuery engines.</p>\n <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">Full documentation of the $request parameter can be found in\n <a href=\"http://expath.org/spec/http-client#d2e183\">the EXPath\n specification</a>.</p>\n", "summary" : "<p>  This function sends an HTTP request and returns the corresponding response.</p>", "annotation_str" : " %an:sequential", "annotations" : [ { "prefix" : "an", "ns" : "http://zorba.io/annotations", "name" : "sequential", "value" : "" } ], "updating" : false, "parameters" : [ { "name" : "request", "type" : "element(*)", "occurrence" : "?", "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> Contains the various parameters of the request (see above).</div>" }, { "name" : "href", "type" : "xs:string", "occurrence" : "?", "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> The URL to which the request will be made (see <a href=\"#url_string\">note</a> above). If this parameter is specified, it will override the \"href\" attribute of $request.</div>" }, { "name" : "bodies", "type" : "item()", "occurrence" : "*", "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> is the request body content, for HTTP methods that can contain a body in the request (i.e. POST and PUT). It is an error if this param is not the empty sequence for methods</div>" } ], "returns" : { "type" : "item()+", "description" : "<a xmlns:xqdoc=\"http://www.xqdoc.org/1.0\" href=\"#standard_return\">standard http-client return type</a>." }, "errors" : [ "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">error:HC001 An HTTP error occurred.</xqdoc:error>", "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">error:HC002 Error parsing the response content as XML.</xqdoc:error>", "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">error:HC003 With a multipart response, the override-media-type must be either a multipart media type or application/octet-stream.</xqdoc:error>", "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">error:HC004 The src attribute on the body element is mutually exclusive with all other attribute (except the media-type).</xqdoc:error>", "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">error:HC005 The input request element is not valid.</xqdoc:error>", "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">error:HC006 A timeout occurred waiting for the response.</xqdoc:error>", "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">error:HCV02 Trying to follow a redirect of a POST, PUT, or DELETE request</xqdoc:error>" ] } ], "variables" : [  ] }, "http://www.28msec.com/modules/cloudsearch" : { "ns" : "http://www.28msec.com/modules/cloudsearch", "description" : " <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">This module offers functionality to search, add, update and remove documents in\n an Amazon CloudSearch domain.</p>\n <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">For each functionality two methods are provided\n <ul>\n  <li>one which accepts a single $options parameter. In this case the default\n      credentials for the \"CloudSearch\" category will be used to determine the\n      CloudSearch endpoint to use.</li>\n  <li>one which accepts both an $endpoint and an $options parameter.\n      In this case, if the $endpoint parameter is of type string, it will be\n      interpreted as the name of a credentials in the \"CloudSearch\" category.\n      Otherwise, if the $endpoint parameter is of type anyURI, it will be\n      interpreted as the endpoint URI.</li>\n </ul>\n </p>\n <h2 xmlns:xqdoc=\"http://www.xqdoc.org/1.0\" id=\"determinism\">Important Notice Regarding Function Determinism</h2>\n <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">The search functions (<a href=\"?anchor=search-1\">search#1</a> and\n <a href=\"?anchor=search-2\">search#2</a>) are declared deterministic, which means that\n their results could be cached when invoked multiple times with the same arguments\n in the same query execution.</p>\n <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">To not use cached results you can use two alternative search functions\n (<a href=\"?anchor=search-nondeterministic-1\">search-nondeterministic#1</a> and\n <a href=\"?anchor=search-nondeterministic-2\">search-nondeterministic#2</a>), which have\n been declared as being non deterministic.</p>\n <h2 xmlns:xqdoc=\"http://www.xqdoc.org/1.0\" id=\"search-options\">Search options</h2>\n <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">The search settings are specified by means of an object whose form\n is described in the following. The two most important fields are the\n \"q\" and \"bq\" fields. At least one of them must be specified. If the \"bq\"\n field is specified in conjunction with the \"q\" parameter, the values\n are joined with a top-level AND.\n <ul>\n   <li>bq: one or more match expressions that define a Boolean search. Multiple\n       expressions are joined with a top-level AND.\n       <p>Type: string</p>\n   </li>\n   <li>q: the string to search for. You use the q parameter to perform simple text\n       searches. This searches the default search field for the specified text.\n       <p>Type: string</p>\n   </li>\n </ul>\n </p>\n <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">Additional documentation on the format of the query and boolean query strings can\n be found at:\n <a href=\"http://docs.aws.amazon.com/cloudsearch/latest/developerguide/Search.Requests.html#Search.MatchSetExpression\">\n Expression Syntax for Boolean Queries</a>.</p>\n <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">The following additional optional parameters can be specified.\n <ul>\n   <li>facet: a comma-separated list of the fields for which you want to compute facets.\n       The specified fields must be numeric fields or defined as facet enabled in the\n       domain configuration.\n       <p>Type: string</p>\n   </li>\n   <li>facet-<i>FIELD</i>-constraints: the field values (facet constraints) that\n       you want to count for a particular field. FIELD is the name of the field.\n       Constraints are specified as a comma-separated list of ranges or\n       single-quoted strings. If you don't specify facet constraints, counts\n       are computed for all field values.\n       <p>Type: string</p>\n   </li>\n   <li>facet-<i>FIELD</i>-sort: how you want to sort facet values for a\n       particular field. FIELD is the name of the field. There are four sorting options:\n       <ul>\n         <li>alpha: Sort the facet values alphabetically (in ascending order).</li>\n         <li>count: Sort the facet values by their counts (in descending order).</li>\n         <li>max: Sort the facet values according to the maximum values in the specified\n             field. This option is specified as <code>max(FIELD)</code>. By default, the\n             facet values are sorted in ascending order. To sort in descending order,\n             prefix the sort option with - (minus): <code>-max(FIELD)</code>.\n         </li>\n         <li>sum: Sort the facet values according to the sum of the values in the\n             specified field (in ascending order). This option is specified as\n             <code>sum(FIELD)</code>.\n         </li>\n       </ul>\n   </li>\n   <li>facet-<i>FIELD</i>-top-n: set the maximum number of facet constraints to\n       be included for the specified field in the search results. By default,\n       the results include counts for the top 40 constraints.\n        <p>Type: integer</p>\n   </li>\n   <li>no-cache: if false, a cached result can be returned. If true, a revalidation of the\n        results is forced. Default is false.\n        <p>Type: boolean</p>\n   </li>\n   <li>rank: a comma-separated list of fields or rank expressions to use for ranking. A\n        maximum of 10 fields and rank expressions can be specified. You can use any uint\n        field to rank results numerically. Any result-enabled text or literal field can be\n        used to rank results alphabetically. To rank results by relevance, you can specify\n        the name of a custom rank expression or text_relevance. Hits are ordered according\n        to the specified rank field(s). By default, hits are ranked in ascending order.\n        <p>You can prefix a field name with a minus (-) to rank in descending order. If no\n        rank parameter is specified, it defaults to <code>rank=-text_relevance</code>, which\n        lists results according to their text_relevance scores with the highest-scoring\n        documents first.</p>\n       <p>Type: string</p>\n   </li>\n   <li>rank-<i>RANKNAME</i>: define a rank expression that can be used with the\n       rank parameter. You can also specify the new rank expression as a return\n       field and use it to set thresholds for the search results with the\n       t-<i>FIELD</i> parameter. For more information about constructing\n       rank expressions, see\n       <a href=\"http://docs.aws.amazon.com/cloudsearch/latest/developerguide/tuneranking.html\">\n       Customizing Result Ranking with Amazon CloudSearch</a>.\n       <p>Type: string</p>\n   </li>\n   <li>return-fields: the document fields to include in the response. Up to 2 KB\n       of data can be returned from a text field. If the field contents exceed\n       2 KB, only the first 2 KB is included in the results. Specified as a\n       comma-separated list of field names. If no return-fields are specified,\n       only the document ids of the hits are returned.\n       <p>Type: string</p>\n   </li>\n   <li>size: the maximum number of search hits to return. The default is 10.\n       <p>Type: integer</p>\n   </li>\n   <li>start: the offset of the first search hit you want to return. The default is 0\n       (the first hit).\n       <p>Type: integer</p>\n   </li>\n   <li>t-<i>FIELD</i>: restrict the match set used in subsequent post-processing\n       steps according to the specified rank expression. Only hits that have a\n       score within the specified range are included. Ranges are specified as\n       described in\n       <a href=\"http://docs.aws.amazon.com/cloudsearch/latest/developerguide/Search.Requests.html#Search.MatchSetExpression\">\n       Expression Syntax for Boolean Queries</a>.\n       <p>Type: integer</p>\n   </li>\n </ul>\n For additional details on the search parameters you can refer to the\n <a href=\"http://docs.aws.amazon.com/cloudsearch/latest/developerguide/Search.Requests.html\">\n Amazon CloudSearch search requests documentation</a>.</p>\n <h2 xmlns:xqdoc=\"http://www.xqdoc.org/1.0\" id=\"search-results\">Search Results</h2>\n <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">The format of the returned object is the following:\n <pre>\n {\n   \"rank\" : \"-text_relevance\",\n   \"match-expr\" : \"(label 'star wars')\",\n   \"hits\" :\n   {\n     \"found\" : 2,\n     \"start\" : 0,\n     \"hit\" :\n     [\n       {\n         \"id\" : \"tt1185834\",\n         \"data\" :\n         {\n           \"actor\" : [\"Abercrombie, Ian\",\"Baker, Dee\",\"Burton, Corey\"],\n           \"title\" : [\"Star Wars: The Clone Wars\"]\n         }\n       },\n       {\n         \"id\" :\"tt0121766\",\n         \"data\" :\n         {\n           \"actor\" : [\"Bai, Ling\",\"Bryant, Gene\",\"Castle-Hughes, Keisha\"],\n           \"title\" : [\"Star Wars: Episode III - Revenge of the Sith\"]\n         }\n       }\n     ]\n   },\n   \"info\" :\n   {\n     \"rid\" : \"b7c167f6c2da6d93531b9a7b314ad030b3a74803b4b7797edb905ba5a6a08\",\n     \"time-ms\" : 2,\n     \"cpu-time-ms\" : 0\n   }\n }\n </pre>\n </p>\n <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">The returned object fields have the following meaning:\n <ul>\n   <li>match-expr: Shows the match expression constructed from the search\n       parameters.</li>\n   <li>hits: Contains hit statistics (found, start) and a hit array that lists\n       the document ids and data for each hit.</li>\n   <li>found: The total number of hits that match the search request after\n       Amazon CloudSearch finished processing the match set.</li>\n   <li>start: The index of the first hit returned in this response.</li>\n   <li>hit: An array that lists the document ids and data for each hit.</li>\n   <li>id: The unique identifier for a document.</li>\n   <li>data: A list of returned fields.</li>\n   <li>facets: Contains facet information and facet counts.</li>\n   <li><i>FacetFieldName</i>: A field for which facets were calculated.</li>\n   <li>constraints: An array of the facet values and counts.</li>\n   <li>value: The facet value being counted.</li>\n   <li>count: The number of hits that contain the facet value in <i>FacetFieldName</i>.\n       </li>\n   <li>info: Contains information about the request processing.</li>\n   <li>rank: Lists the fields that were used to rank the search hits.</li>\n   <li>rid: The encrypted Resource ID.</li>\n   <li>time-ms: How long it took to process the search request in milliseconds.\n       </li>\n   <li>cpu-time-ms: The CPU time required to process the search request in\n       milliseconds.</li>\n   <li>messages: Contains any error messages returned by the search service.\n       The severity, code, and message properties are included for each item.</li>\n   <li>severity: The severity of the message. It is always warning, which indicates\n       a problem with the query string that did not prevent the request from being\n       processed.</li>\n   <li>code: The error code. The search service returns the following error codes:\n     <ul>\n       <li>CS-InvalidFieldOrRankAliasInRankParameter: the specified ranking field\n           could not be found.</li>\n       <li>CS-RankExpressionParseError: one of the specified rank expressions could\n           not be parsed. No query-time rank expressions will be used. </li>\n       <li>CS-RankExpressionValidationError: one of the specified rank expressions\n           could not be validated. No query-time rank expressions will be used.</li>\n       <li>CS-UndefinedField: an unknown field was specified in the match\n           expression.</li>\n       <li>CS-UnknownFieldInMatchExpression: a field specified in the bq parameter\n           could not be found.</li>\n       <li>CS-WildcardTermLimit: more than 2000 terms matched the wildcard in the\n           search request. The number of terms matched was limited to 2000.</li>\n     </ul>\n   </li>\n   <li>message: A description of the error that was returned by the search service.</li>\n </ul>\n </p>\n", "sees" : [  ], "authors" : [ "<xqdoc:author xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">Federico Cavalieri</xqdoc:author>" ], "version" : null, "encoding" : "utf-8", "namespaces" : [ { "uri" : "http://zorba.io/annotations", "prefix" : "an" }, { "uri" : "http://www.28msec.com/modules/cloudsearch", "prefix" : "cloudsearch" }, { "uri" : "http://www.28msec.com/modules/credentials", "prefix" : "credentials" }, { "uri" : "http://zorba.io/modules/http-client", "prefix" : "http" } ], "functions" : [ { "isDocumented" : true, "arity" : 1, "name" : "add-document", "qname" : "cloudsearch:add-document", "signature" : "($options as object()) as object()", "description" : " <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">Adds or replaces a document in the default Amazon CloudSearch domain.</p>\n <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">An add operation is applied only if a document with the same id is not\n present or if the version number specified in the operation is greater than\n the existing document's version number.</p>\n <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">The document to add or replace is specified through an object with\n the following form:\n <pre>\n {\n   \"id\" : \"tt0484562\",\n   \"version\" : 1,\n   \"lang\" : \"en\",\n   \"fields\" :\n   {\n     \"title\" : \"The Seeker: The Dark Is Rising\",\n     \"genre\" : [\"Adventure\",\"Drama\",\"Fantasy\",\"Thriller\"]\n   }\n }\n </pre>\n </p>\n <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">Specifically, the fields in the request object have the following meaning:\n <ul>\n   <li>id: An alphanumeric string. Allowed characters are: a-z, 0-9, and _.\n       Document IDs cannot begin with an underscore. The max length is 128\n       characters.</li>\n   <li>version: Any non-negative number less than 2^32.</li>\n   <li>lang: An ISO-639-1 two-letter language code.</li>\n   <li>fields: An object containing one or more fields. Each field specifies\n       a field within the document being added. Field names must begin with a\n       lowercase letter and can contain the following characters: a-z, 0-9,\n       and _. Field names must be at least 3 and no more than 64 characters.\n       The names \"body\", \"docid\", and \"text_relevance\" are reserved names and\n       cannot be used as field names. To specify multiple values for a field,\n       you can specify an array of values instead of a single value.</li>\n </ul>\n </p>\n <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">The returned object lists all warnings that were generated.\n <pre>\n {\n   \"status\" : \"success\",\n   \"warning\" :\n   [\n     {\"message\" : \"Warning message.\"}\n   ]\n }\n </pre>\n </p>\n <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">Specifically, the fields in the response object have the following meaning:\n <ul>\n   <li>status: the result status, always \"success\". In case an error occurred\n       processing the request, an error is raised.</li>\n   <li>warning: provides information about warnings generated during parsing\n       or validation. The field is not present if no warning were generated.</li>\n </ul>\n </p>\n <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">Example, specifying endpoint URI:\n <pre>\n cloudsearch:add-document(\n anyURI(\"http://doc-movies-h2pc7ftfnsdlqh6pqqawbftrhu.us-east-1.cloudsearch.amazonaws.com\"),\n {\n   \"id\" : \"tt0484562\",\n   \"version\" : 1,\n   \"lang\" : \"en\",\n   \"fields\" :\n   {\n     \"title\" : \"The Seeker: The Dark Is Rising\",\n     \"genre\" : [\"Adventure\",\"Drama\",\"Fantasy\",\"Thriller\"]\n   }\n });\n </pre>\n </p>\n <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">Example, using stored credentials:\n <pre>\n cloudsearch:add-document(\"movies\",\n {\n   \"id\" : \"tt0484562\",\n   \"version\" : 1,\n   \"lang\" : \"en\",\n   \"fields\" :\n   {\n     \"title\" : \"The Seeker: The Dark Is Rising\",\n     \"genre\" : [\"Adventure\",\"Drama\",\"Fantasy\",\"Thriller\"]\n   }\n });\n </pre>\n </p>\n", "summary" : "<p>  Adds or replaces a document in the default Amazon CloudSearch domain.</p>", "annotation_str" : " %an:sequential", "annotations" : [ { "prefix" : "an", "ns" : "http://zorba.io/annotations", "name" : "sequential", "value" : "" } ], "updating" : false, "parameters" : [ { "name" : "options", "type" : "object()", "occurrence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> An object specifying the request options</div>" } ], "returns" : { "type" : "object()", "description" : "The request response" }, "errors" : [ "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">cloudsearch:ENDPOINT if the default credentials endpoint is invalid or not present</xqdoc:error>", "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">cloudsearch:AUTHORIZATION if the request was unauthorized</xqdoc:error>", "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">cloudsearch:HTTP if an HTTP error has occurred</xqdoc:error>", "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">cloudsearch:REQUEST if the request is malformed</xqdoc:error>", "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">cloudsearch:RESOURCES if the server storage or bandwidth resources are insufficient to execute the request</xqdoc:error>", "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">cloudsearch:INTERNAL if an internal server error occurred</xqdoc:error>", "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">cloudsearch:RESPONSE if the CloudSearch response cannot be parsed</xqdoc:error>" ] }, { "isDocumented" : true, "arity" : 2, "name" : "add-document", "qname" : "cloudsearch:add-document", "signature" : "($endpoint as atomic, $options as object()) as object()", "description" : " <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">Adds or replaces a document in the specified Amazon CloudSearch domain.</p>\n <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">An add operation is applied only if a document with the same id is not\n present or if the version number specified in the operation is greater than\n the existing document's version number.</p>\n <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">The document to add or replace is specified through an object with\n the following form:\n <pre>\n {\n   \"id\" : \"tt0484562\",\n   \"version\" : 1,\n   \"lang\" : \"en\",\n   \"fields\" :\n   {\n     \"title\" : \"The Seeker: The Dark Is Rising\",\n     \"genre\" : [\"Adventure\",\"Drama\",\"Fantasy\",\"Thriller\"]\n   }\n }\n </pre>\n </p>\n <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">Specifically, the fields in the request object have the following meaning:\n <ul>\n   <li>id: An alphanumeric string. Allowed characters are: a-z, 0-9, and _.\n       Document IDs cannot begin with an underscore. The max length is 128\n       characters.</li>\n   <li>version: Any non-negative number less than 2^32.</li>\n   <li>lang: An ISO-639-1 two-letter language code.</li>\n   <li>fields: An object containing one or more fields. Each field specifies\n       a field within the document being added. Field names must begin with a\n       lowercase letter and can contain the following characters: a-z, 0-9,\n       and _. Field names must be at least 3 and no more than 64 characters.\n       The names \"body\", \"docid\", and \"text_relevance\" are reserved names and\n       cannot be used as field names. To specify multiple values for a field,\n       you can specify an array of values instead of a single value.</li>\n </ul>\n </p>\n <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">The returned object lists all warnings that were generated.\n <pre>\n {\n   \"status\" : \"success\",\n   \"warning\" :\n   [\n     {\"message\" : \"Warning message.\"}\n   ]\n }\n </pre>\n </p>\n <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">Specifically, the fields in the response object have the following meaning:\n <ul>\n   <li>status: the result status, always \"success\". In case an error occurred\n       processing the request, an error is raised.</li>\n   <li>warning: provides information about warnings generated during parsing\n       or validation. The field is not present if no warning were generated.</li>\n </ul>\n </p>\n <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">Example, specifying endpoint URI:\n <pre>\n cloudsearch:add-document(\n anyURI(\"http://doc-movies-h2pc7ftfnsdlqh6pqqawbftrhu.us-east-1.cloudsearch.amazonaws.com\"),\n {\n   \"id\" : \"tt0484562\",\n   \"version\" : 1,\n   \"lang\" : \"en\",\n   \"fields\" :\n   {\n     \"title\" : \"The Seeker: The Dark Is Rising\",\n     \"genre\" : [\"Adventure\",\"Drama\",\"Fantasy\",\"Thriller\"]\n   }\n });\n </pre>\n </p>\n <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">Example, using stored credentials:\n <pre>\n cloudsearch:add-document(\"movies\",\n {\n   \"id\" : \"tt0484562\",\n   \"version\" : 1,\n   \"lang\" : \"en\",\n   \"fields\" :\n   {\n     \"title\" : \"The Seeker: The Dark Is Rising\",\n     \"genre\" : [\"Adventure\",\"Drama\",\"Fantasy\",\"Thriller\"]\n   }\n });\n </pre>\n </p>\n", "summary" : "<p>  Adds or replaces a document in the specified Amazon CloudSearch domain.</p>", "annotation_str" : " %an:sequential", "annotations" : [ { "prefix" : "an", "ns" : "http://zorba.io/annotations", "name" : "sequential", "value" : "" } ], "updating" : false, "parameters" : [ { "name" : "endpoint", "type" : "atomic", "occurrence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> The endpoint URI or the name of a stored CloudSearch credentials</div>" }, { "name" : "options", "type" : "object()", "occurrence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> An object specifying the request options</div>" } ], "returns" : { "type" : "object()", "description" : "The request response" }, "errors" : [ "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">cloudsearch:ENDPOINT if the specified endpoint is invalid</xqdoc:error>", "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">cloudsearch:AUTHORIZATION if the request was unauthorized</xqdoc:error>", "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">cloudsearch:HTTP if an HTTP error has occurred</xqdoc:error>", "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">cloudsearch:REQUEST if the request is malformed</xqdoc:error>", "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">cloudsearch:RESOURCES if the server storage or bandwidth resources are insufficient to execute the request</xqdoc:error>", "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">cloudsearch:INTERNAL if an internal server error occurred</xqdoc:error>", "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">cloudsearch:RESPONSE if the CloudSearch response cannot be parsed</xqdoc:error>" ] }, { "isDocumented" : true, "arity" : 1, "name" : "batch-document", "qname" : "cloudsearch:batch-document", "signature" : "($options as array()) as object()", "description" : " <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">Adds, replaces or removes one or more documents from the default Amazon\n CloudSearch domain.</p>\n <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">An add or delete operation is only applied to an existing document if the\n version number specified in the operation is greater than the existing document\n version number.\n If multiple add or delete operations for the same document are specified, the\n operation with the highest version number is applied. If multiple operations in\n a batch specify the same document and version number, the document service\n arbitrarily picks which one to apply.</p>\n <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">The documents to add, replace or delete can be specified through an array with\n the following form:\n <pre>\n [\n   {\n     \"type\" : \"add\",\n     \"id\" :   \"tt0484562\",\n     \"version\" : 1,\n     \"lang\" : \"en\",\n     \"fields\" :\n     {\n       \"title\" : \"The Seeker: The Dark Is Rising\",\n       \"genre\" : [\"Adventure\",\"Drama\",\"Fantasy\",\"Thriller\"],\n     }\n   },\n   {\n     \"type\" : \"delete\",\n     \"id\" :   \"tt0484575\",\n     \"version\" : 2\n   }\n ]\n </pre>\n </p>\n <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">Specifically, the fields in the request array have the following meaning:\n <ul>\n   <li>type: The operation type, \"add\" or \"delete\".</li>\n   <li>id: An alphanumeric string. Allowed characters are: a-z, 0-9, and _.\n       Document IDs cannot begin with an underscore. The max length is 128\n       characters.</li>\n   <li>version: Any non-negative number less than 2^32.</li>\n   <li>lang: An ISO-639-1 two-letter language code.</li>\n   <li>fields: An object containing one or more fields. Each field specifies\n       a field within the document being added. Field names must begin with a\n       lowercase letter and can contain the following characters: a-z, 0-9,\n       and _. Field names must be at least 3 and no more than 64 characters.\n       The names \"body\", \"docid\", and \"text_relevance\" are reserved names and\n       cannot be used as field names. To specify multiple values for a field,\n       you can specify an array of values instead of a single value.</li>\n </ul>\n </p>\n <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">The response body lists any warning that was generated.\n <pre>\n {\n   \"status\" : \"success\",\n   \"adds\" : 1,\n   \"deletes: 1,\n   \"warning\" :\n   [\n     {\"message\" : \"Warning message.\"}\n   ]\n }\n </pre>\n </p>\n <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">Specifically, the fields in the response object have the following meaning:\n <ul>\n   <li>status: the result status, which is either success or error.</li>\n   <li>adds: the number of add document operations that were performed.</li>\n   <li>deletes: the number of delete document operations that were performed.</li>\n   <li>warning: provides information about a warning generated during parsing\n       or validation. The field is not present if no warning was generated.</li>\n </ul>\n </p>\n <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">Example, using specified endpoint URI:\n <pre>\n cloudsearch:batch-document(\n anyURI(\"http://doc-movies-h2pc7ftfnsdlqh6pqqawbftrhu.us-east-1.cloudsearch.amazonaws.com\"),\n [\n   {\n     \"type\" : \"add\",\n     \"id\" :   \"tt0484562\",\n     \"version\" : 1,\n     \"lang\" : \"en\",\n     \"fields\" :\n     {\n       \"title\" : \"The Seeker: The Dark Is Rising\",\n       \"genre\" : [\"Adventure\",\"Drama\",\"Fantasy\",\"Thriller\"],\n     }\n   },\n   {\n     \"type\" : \"delete\",\n     \"id\" :   \"tt0484575\",\n     \"version\" : 2\n   }\n ]);\n </pre>\n </p>\n <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">Example, using specified endpoint URI:\n <pre>\n cloudsearch:batch-document(\"movies\",\n [\n   {\n     \"type\" : \"add\",\n     \"id\" :   \"tt0484562\",\n     \"version\" : 1,\n     \"lang\" : \"en\",\n     \"fields\" :\n     {\n       \"title\" : \"The Seeker: The Dark Is Rising\",\n       \"genre\" : [\"Adventure\",\"Drama\",\"Fantasy\",\"Thriller\"],\n     }\n   },\n   {\n     \"type\" : \"delete\",\n     \"id\" :   \"tt0484575\",\n     \"version\" : 2\n   }\n ]);\n </pre>\n </p>\n", "summary" : "<p>  Adds, replaces or removes one or more documents from the default Amazon\n CloudSearch domain.</p>", "annotation_str" : " %an:sequential", "annotations" : [ { "prefix" : "an", "ns" : "http://zorba.io/annotations", "name" : "sequential", "value" : "" } ], "updating" : false, "parameters" : [ { "name" : "options", "type" : "array()", "occurrence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> An object specifying the request options</div>" } ], "returns" : { "type" : "object()", "description" : "The request response" }, "errors" : [ "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">cloudsearch:ENDPOINT if the default credentials endpoint is invalid or not present</xqdoc:error>", "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">cloudsearch:AUTHORIZATION if the request was unauthorized</xqdoc:error>", "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">cloudsearch:HTTP if an HTTP error has occurred</xqdoc:error>", "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">cloudsearch:REQUEST if the request is malformed</xqdoc:error>", "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">cloudsearch:RESOURCES if the server storage or bandwidth resources are insufficient to execute the request</xqdoc:error>", "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">cloudsearch:INTERNAL if an internal server error occurred</xqdoc:error>", "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">cloudsearch:RESPONSE if the CloudSearch response cannot be parsed</xqdoc:error>" ] }, { "isDocumented" : true, "arity" : 2, "name" : "batch-document", "qname" : "cloudsearch:batch-document", "signature" : "($endpoint as atomic, $options as array()) as object()", "description" : " <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">Adds, replaces or removes one or more documents from the specified Amazon\n CloudSearch domain.</p>\n <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">An add or delete operation is only applied to an existing document if the\n version number specified in the operation is greater than the existing document\n version number.\n If multiple add or delete operations for the same document are specified, the\n operation with the highest version number is applied. If multiple operations in\n a batch specify the same document and version number, the document service\n arbitrarily picks which one to apply.</p>\n <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">The documents to add, replace or delete can be specified through an array with\n the following form:\n <pre>\n [\n   {\n     \"type\" : \"add\",\n     \"id\" :   \"tt0484562\",\n     \"version\" : 1,\n     \"lang\" : \"en\",\n     \"fields\" :\n     {\n       \"title\" : \"The Seeker: The Dark Is Rising\",\n       \"genre\" : [\"Adventure\",\"Drama\",\"Fantasy\",\"Thriller\"],\n     }\n   },\n   {\n     \"type\" : \"delete\",\n     \"id\" :   \"tt0484575\",\n     \"version\" : 2\n   }\n ]\n </pre>\n </p>\n <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">Specifically, the fields in the request array have the following meaning:\n <ul>\n   <li>type: The operation type, \"add\" or \"delete\".</li>\n   <li>id: An alphanumeric string. Allowed characters are: a-z, 0-9, and _.\n       Document IDs cannot begin with an underscore. The max length is 128\n       characters.</li>\n   <li>version: Any non-negative number less than 2^32.</li>\n   <li>lang: An ISO-639-1 two-letter language code.</li>\n   <li>fields: An object containing one or more fields. Each field specifies\n       a field within the document being added. Field names must begin with a\n       lowercase letter and can contain the following characters: a-z, 0-9,\n       and _. Field names must be at least 3 and no more than 64 characters.\n       The names \"body\", \"docid\", and \"text_relevance\" are reserved names and\n       cannot be used as field names. To specify multiple values for a field,\n       you can specify an array of values instead of a single value.</li>\n </ul>\n </p>\n <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">The response body lists any warning that was generated.\n <pre>\n {\n   \"status\" : \"success\",\n   \"adds\" : 1,\n   \"deletes: 1,\n   \"warning\" :\n   [\n     {\"message\" : \"Warning message.\"}\n   ]\n }\n </pre>\n </p>\n <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">Specifically, the fields in the response object have the following meaning:\n <ul>\n   <li>status: the result status, which is either success or error.</li>\n   <li>adds: the number of add document operations that were performed.</li>\n   <li>deletes: the number of delete document operations that were performed.</li>\n   <li>warning: provides information about a warning generated during parsing\n       or validation. The field is not present if no warning was generated.</li>\n </ul>\n </p>\n <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">Example, using specified endpoint URI:\n <pre>\n cloudsearch:batch-document(\n anyURI(\"http://doc-movies-h2pc7ftfnsdlqh6pqqawbftrhu.us-east-1.cloudsearch.amazonaws.com\"),\n [\n   {\n     \"type\" : \"add\",\n     \"id\" :   \"tt0484562\",\n     \"version\" : 1,\n     \"lang\" : \"en\",\n     \"fields\" :\n     {\n       \"title\" : \"The Seeker: The Dark Is Rising\",\n       \"genre\" : [\"Adventure\",\"Drama\",\"Fantasy\",\"Thriller\"],\n     }\n   },\n   {\n     \"type\" : \"delete\",\n     \"id\" :   \"tt0484575\",\n     \"version\" : 2\n   }\n ]);\n </pre>\n </p>\n <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">Example, using specified endpoint URI:\n <pre>\n cloudsearch:batch-document(\"movies\",\n [\n   {\n     \"type\" : \"add\",\n     \"id\" :   \"tt0484562\",\n     \"version\" : 1,\n     \"lang\" : \"en\",\n     \"fields\" :\n     {\n       \"title\" : \"The Seeker: The Dark Is Rising\",\n       \"genre\" : [\"Adventure\",\"Drama\",\"Fantasy\",\"Thriller\"],\n     }\n   },\n   {\n     \"type\" : \"delete\",\n     \"id\" :   \"tt0484575\",\n     \"version\" : 2\n   }\n ]);\n </pre>\n </p>\n", "summary" : "<p>  Adds, replaces or removes one or more documents from the specified Amazon\n CloudSearch domain.</p>", "annotation_str" : " %an:sequential", "annotations" : [ { "prefix" : "an", "ns" : "http://zorba.io/annotations", "name" : "sequential", "value" : "" } ], "updating" : false, "parameters" : [ { "name" : "endpoint", "type" : "atomic", "occurrence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> The endpoint URI or the name of a stored CloudSearch credentials</div>" }, { "name" : "options", "type" : "array()", "occurrence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> An object specifying the request options</div>" } ], "returns" : { "type" : "object()", "description" : "The request response" }, "errors" : [ "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">cloudsearch:ENDPOINT if the specified endpoint is invalid</xqdoc:error>", "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">cloudsearch:AUTHORIZATION if the request was unauthorized</xqdoc:error>", "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">cloudsearch:HTTP if an HTTP error has occurred</xqdoc:error>", "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">cloudsearch:REQUEST if the request is malformed</xqdoc:error>", "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">cloudsearch:RESOURCES if the server storage or bandwidth resources are insufficient to execute the request</xqdoc:error>", "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">cloudsearch:INTERNAL if an internal server error occurred</xqdoc:error>", "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">cloudsearch:RESPONSE if the CloudSearch response cannot be parsed</xqdoc:error>" ] }, { "isDocumented" : true, "arity" : 1, "name" : "delete-document", "qname" : "cloudsearch:delete-document", "signature" : "($options as object()) as object()", "description" : " <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">Deletes a document from the default Amazon CloudSearch domain.</p>\n <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">A delete operation is only applied to an existing document if the\n version number specified in the operation is greater than the existing\n document's version number.</p>\n <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">The document to remove is specified through an object with the\n following form:\n <pre>\n {\n   \"id\" : \"tt0484562\",\n   \"version\" : 2\n }\n </pre>\n </p>\n <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">Specifically, the fields in the request object have the following meaning:\n <ul>\n   <li>id: An alphanumeric string. Allowed characters are: a-z, 0-9, and _.\n       Document IDs cannot begin with an underscore. The max length is 128\n       characters.</li>\n   <li>version: Any non-negative number less than 2^32.</li>\n </ul>\n </p>\n <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">The response body lists any warning that was generated.\n <pre>\n {\n   \"status\" : \"success\",\n   \"warning\" :\n   [\n     {\"message\" : \"Warning message.\"}\n   ]\n }\n </pre>\n </p>\n <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">Specifically, the fields in the response object have the following meaning:\n <ul>\n   <li>status: the result status, always \"success\". In case of errors an error is\n       raised.</li>\n   <li>warning: provides information about a warning generated during parsing or\n       validation. The field is not present if no warning was generated.</li>\n </ul>\n </p>\n <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">Example, using specified endpoint URI:\n <pre>\n cloudsearch:delete-document(\n anyURI(\"http://doc-movies-h2pc7ftfnsdlqh6pqqawbftrhu.us-east-1.cloudsearch.amazonaws.com\"),\n {\n   \"id\" : \"tt0484562\",\n   \"version\" : 2\n });\n </pre>\n </p>\n <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">Example, using specified stored endpoing:\n <pre>\n cloudsearch:delete-document(\"movies\",\n {\n   \"id\" : \"tt0484562\",\n   \"version\" : 2\n });\n </pre>\n </p>\n", "summary" : "<p>  Deletes a document from the default Amazon CloudSearch domain.</p>", "annotation_str" : " %an:sequential", "annotations" : [ { "prefix" : "an", "ns" : "http://zorba.io/annotations", "name" : "sequential", "value" : "" } ], "updating" : false, "parameters" : [ { "name" : "options", "type" : "object()", "occurrence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> An object specifying the request options</div>" } ], "returns" : { "type" : "object()", "description" : "The request response" }, "errors" : [ "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">cloudsearch:ENDPOINT if the default credentials endpoint is invalid or not present</xqdoc:error>", "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">cloudsearch:AUTHORIZATION if the request was unauthorized</xqdoc:error>", "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">cloudsearch:HTTP if an HTTP error has occurred</xqdoc:error>", "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">cloudsearch:REQUEST if the request is malformed</xqdoc:error>", "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">cloudsearch:RESOURCES if the server storage or bandwidth resources are insufficient to execute the request</xqdoc:error>", "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">cloudsearch:INTERNAL if an internal server error occurred</xqdoc:error>", "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">cloudsearch:RESPONSE if the CloudSearch response cannot be parsed</xqdoc:error>" ] }, { "isDocumented" : true, "arity" : 2, "name" : "delete-document", "qname" : "cloudsearch:delete-document", "signature" : "($endpoint as atomic, $options as object()) as object()", "description" : " <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">Deletes a document from the specified Amazon CloudSearch domain.</p>\n <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">A delete operation is only applied to an existing document if the\n version number specified in the operation is greater than the existing\n document's version number.</p>\n <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">The document to remove is specified through an object with the\n following form:\n <pre>\n {\n   \"id\" : \"tt0484562\",\n   \"version\" : 2\n }\n </pre>\n </p>\n <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">Specifically, the fields in the request object have the following meaning:\n <ul>\n   <li>id: An alphanumeric string. Allowed characters are: a-z, 0-9, and _.\n       Document IDs cannot begin with an underscore. The max length is 128\n       characters.</li>\n   <li>version: Any non-negative number less than 2^32.</li>\n </ul>\n </p>\n <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">The response body lists any warning that was generated.\n <pre>\n {\n   \"status\" : \"success\",\n   \"warning\" :\n   [\n     {\"message\" : \"Warning message.\"}\n   ]\n }\n </pre>\n </p>\n <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">Specifically, the fields in the response object have the following meaning:\n <ul>\n   <li>status: the result status, always \"success\". In case of errors an error is\n       raised.</li>\n   <li>warning: provides information about a warning generated during parsing or\n       validation. The field is not present if no warning was generated.</li>\n </ul>\n </p>\n <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">Example, using specified endpoint URI:\n <pre>\n cloudsearch:delete-document(\n anyURI(\"http://doc-movies-h2pc7ftfnsdlqh6pqqawbftrhu.us-east-1.cloudsearch.amazonaws.com\"),\n {\n   \"id\" : \"tt0484562\",\n   \"version\" : 2\n });\n </pre>\n </p>\n <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">Example, using specified stored endpoing:\n <pre>\n cloudsearch:delete-document(\"movies\",\n {\n   \"id\" : \"tt0484562\",\n   \"version\" : 2\n });\n </pre>\n </p>\n", "summary" : "<p>  Deletes a document from the specified Amazon CloudSearch domain.</p>", "annotation_str" : " %an:sequential", "annotations" : [ { "prefix" : "an", "ns" : "http://zorba.io/annotations", "name" : "sequential", "value" : "" } ], "updating" : false, "parameters" : [ { "name" : "endpoint", "type" : "atomic", "occurrence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> The endpoint URI or the name of a stored CloudSearch credentials</div>" }, { "name" : "options", "type" : "object()", "occurrence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> An object specifying the request options</div>" } ], "returns" : { "type" : "object()", "description" : "The request response" }, "errors" : [ "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">cloudsearch:ENDPOINT if the specified endpoint is invalid</xqdoc:error>", "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">cloudsearch:AUTHORIZATION if the request was unauthorized</xqdoc:error>", "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">cloudsearch:HTTP if an HTTP error has occurred</xqdoc:error>", "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">cloudsearch:REQUEST if the request is malformed</xqdoc:error>", "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">cloudsearch:RESOURCES if the server storage or bandwidth resources are insufficient to execute the request</xqdoc:error>", "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">cloudsearch:INTERNAL if an internal server error occurred</xqdoc:error>", "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">cloudsearch:RESPONSE if the CloudSearch response cannot be parsed</xqdoc:error>" ] }, { "isDocumented" : true, "arity" : 1, "name" : "search-nondeterministic", "qname" : "cloudsearch:search-nondeterministic", "signature" : "($options as object()) as object()", "description" : " <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">Searches the documents in the default Amazon CloudSearch domain.</p>\n <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">This function has the same semantics as <a href=\"#search-1\">search#1</a>,\n but is declared as being non deterministic and thus should only be used when\n result caching is not desired.</p>\n", "summary" : "<p>  Searches the documents in the default Amazon CloudSearch domain.</p>", "annotation_str" : " %an:nondeterministic", "annotations" : [ { "prefix" : "an", "ns" : "http://zorba.io/annotations", "name" : "nondeterministic", "value" : "" } ], "updating" : false, "parameters" : [ { "name" : "options", "type" : "object()", "occurrence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> The <a href=\"#search-options\">search options</a> object</div>" } ], "returns" : { "type" : "object()", "description" : "The <a xmlns:xqdoc=\"http://www.xqdoc.org/1.0\" href=\"#search-results\">search results</a> object" }, "errors" : [ "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">cloudsearch:ENDPOINT if the default credentials endpoint is invalid or not present</xqdoc:error>", "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">cloudsearch:AUTHORIZATION if the request was unauthorized</xqdoc:error>", "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">cloudsearch:HTTP if an HTTP error has occurred</xqdoc:error>", "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">cloudsearch:REQUEST if the request is malformed</xqdoc:error>", "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">cloudsearch:INTERNAL if an internal server error occurred</xqdoc:error>", "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">cloudsearch:RESPONSE if the CloudSearch response cannot be parsed</xqdoc:error>" ] }, { "isDocumented" : true, "arity" : 2, "name" : "search-nondeterministic", "qname" : "cloudsearch:search-nondeterministic", "signature" : "($endpoint as atomic, $options as object()) as object()", "description" : " <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">Searches the documents in the specified Amazon CloudSearch domain.</p>\n <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">This function has the same semantics as <a href=\"#search-2\">search#2</a>,\n but is declared as being non deterministic and thus should only be used when\n result caching is not desired.</p>\n", "summary" : "<p>  Searches the documents in the specified Amazon CloudSearch domain.</p>", "annotation_str" : " %an:nondeterministic", "annotations" : [ { "prefix" : "an", "ns" : "http://zorba.io/annotations", "name" : "nondeterministic", "value" : "" } ], "updating" : false, "parameters" : [ { "name" : "endpoint", "type" : "atomic", "occurrence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> The endpoint URI or the name of a stored CloudSearch credentials</div>" }, { "name" : "options", "type" : "object()", "occurrence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> The <a href=\"search-options\">search options</a> object</div>" } ], "returns" : { "type" : "object()", "description" : "The <a xmlns:xqdoc=\"http://www.xqdoc.org/1.0\" href=\"search-results\">search results</a> object" }, "errors" : [ "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">cloudsearch:ENDPOINT if the specified endpoint is invalid</xqdoc:error>", "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">cloudsearch:AUTHORIZATION if the request was unauthorized</xqdoc:error>", "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">cloudsearch:HTTP if an HTTP error has occurred</xqdoc:error>", "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">cloudsearch:REQUEST if the request is malformed</xqdoc:error>", "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">cloudsearch:INTERNAL if an internal server error occurred</xqdoc:error>", "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">cloudsearch:RESPONSE if the CloudSearch response cannot be parsed</xqdoc:error>" ] }, { "isDocumented" : true, "arity" : 1, "name" : "search", "qname" : "cloudsearch:search", "signature" : "($options as object()) as object()", "description" : " <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">Searches the documents in the default Amazon CloudSearch domain.</p>\n <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">This function is declared as deterministic and should be used whenever result\n caching is acceptable.</p>\n <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">The format of the <a href=\"search-options\">search options</a> object and\n of the <a href=\"search-results\">search results</a> object is documented in\n the module introduction.</p>\n <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">Example:\n <pre>\n cloudsearch:search({\"q\" : \"star+wars\", \"return-fields\" : \"title\"})\n </pre>\n </p>\n <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">Example returned object:\n <pre>\n {\n   \"rank\" : \"-text_relevance\",\n   \"match-expr\" : \"(label 'star wars')\",\n   \"hits\" :\n   {\n     \"found\" : 2,\n     \"start\" : 0,\n     \"hit\" :\n     [\n       {\n         \"id\" : \"tt1185834\",\n         \"data\" :\n         {\n           \"actor\" : [\"Abercrombie, Ian\",\"Baker, Dee\",\"Burton, Corey\"],\n           \"title\" : [\"Star Wars: The Clone Wars\"]\n         }\n       },\n       {\n         \"id\" :\"tt0121766\",\n         \"data\" :\n         {\n           \"actor\" : [\"Bai, Ling\",\"Bryant, Gene\",\"Castle-Hughes, Keisha\"],\n           \"title\" : [\"Star Wars: Episode III - Revenge of the Sith\"]\n         }\n       }\n     ]\n   },\n   \"info\" :\n   {\n     \"rid\" : \"b7c167f6c2da6d93531b9a7b314ad030b3a74803b4b7797edb905ba5a6a08\",\n     \"time-ms\" : 2,\n     \"cpu-time-ms\" : 0\n   }\n }\n </pre>\n </p>\n", "summary" : "<p>  Searches the documents in the default Amazon CloudSearch domain.</p>", "annotation_str" : "", "annotations" : [  ], "updating" : false, "parameters" : [ { "name" : "options", "type" : "object()", "occurrence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> The <a href=\"search-options\">search options</a> object</div>" } ], "returns" : { "type" : "object()", "description" : "The <a xmlns:xqdoc=\"http://www.xqdoc.org/1.0\" href=\"search-results\">search results</a> object" }, "errors" : [ "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">cloudsearch:ENDPOINT if the default credentials endpoint is invalid or not present</xqdoc:error>", "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">cloudsearch:AUTHORIZATION if the request was unauthorized</xqdoc:error>", "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">cloudsearch:HTTP if an HTTP error has occurred</xqdoc:error>", "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">cloudsearch:REQUEST if the request is malformed</xqdoc:error>", "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">cloudsearch:INTERNAL if an internal server error occurred</xqdoc:error>", "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">cloudsearch:RESPONSE if the CloudSearch response cannot be parsed</xqdoc:error>" ] }, { "isDocumented" : true, "arity" : 2, "name" : "search", "qname" : "cloudsearch:search", "signature" : "($endpoint as atomic, $options as object()) as object()", "description" : " <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">Searches the documents in the specified Amazon CloudSearch domain.</p>\n <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">This function is declared as deterministic and should be used whenever result\n caching is acceptable.</p>\n <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">The format of the <a href=\"search-options\">search options</a> object and\n of the <a href=\"search-results\">search results</a> object is documented in\n the module introduction.</p>\n <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">The following examples performs a simple text search for all documents\n containing both the word \"star\" and \"trek\" and returns the matching document\n title field.</p>\n <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">Example, using specified endpoint URI:\n <pre>\n cloudsearch:search(\n anyURI(\"http://doc-movies-h2pc7ftfnsdlqh6pqqawbftrhu.us-east-1.cloudsearch.amazonaws.com\"),\n {\"q\" : \"star+wars\", \"return-fields\" : \"title\"})\n </pre>\n </p>\n <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">Example, using a stored endpoint:\n <pre>\n cloudsearch:search(\"movies\",\n {\"q\" : \"star+wars\", \"return-fields\" : \"title\"})\n </pre>\n </p>\n", "summary" : "<p>  Searches the documents in the specified Amazon CloudSearch domain.</p>", "annotation_str" : "", "annotations" : [  ], "updating" : false, "parameters" : [ { "name" : "endpoint", "type" : "atomic", "occurrence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> The endpoint URI or the name of a stored CloudSearch credentials</div>" }, { "name" : "options", "type" : "object()", "occurrence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> The <a href=\"search-options\">search options</a> object</div>" } ], "returns" : { "type" : "object()", "description" : "The <a xmlns:xqdoc=\"http://www.xqdoc.org/1.0\" href=\"search-results\">search results</a> object" }, "errors" : [ "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">cloudsearch:ENDPOINT if the specified endpoint is invalid</xqdoc:error>", "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">cloudsearch:AUTHORIZATION if the request was unauthorized</xqdoc:error>", "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">cloudsearch:HTTP if an HTTP error has occurred</xqdoc:error>", "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">cloudsearch:REQUEST if the request is malformed</xqdoc:error>", "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">cloudsearch:INTERNAL if an internal server error occurred</xqdoc:error>", "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">cloudsearch:RESPONSE if the CloudSearch response cannot be parsed</xqdoc:error>" ] } ], "variables" : [  ] }, "http://zorba.io/modules/store/static/indexes/ddl" : { "ns" : "http://zorba.io/modules/store/static/indexes/ddl", "description" : " This modules defines a set of functions for managing indexes that are\n declared in the prolog of a module.\n <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"/>\n This module is part of\n <a xmlns:xqdoc=\"http://www.xqdoc.org/1.0\" href=\"../zorba/xqddf.html\">Zorba's XQuery Data Definition Facility</a>.\n All the indexes managed by this module have to be pre-declared in the prolog\n of a module.\n Please refer to the\n <a xmlns:xqdoc=\"http://www.xqdoc.org/1.0\" href=\"../zorba/data_lifecycle.html\">general documentation</a>\n for more information and examples.\n", "sees" : [ "<xqdoc:see xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"><a href=\"../zorba/data_lifecycle.html\">Data Lifecycle</a></xqdoc:see>", "<xqdoc:see xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"><a href=\"../zorba/xqddf.html\">XQuery Data Definition Facility</a></xqdoc:see>", "<xqdoc:see xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">http://zorba.io/modules/store/static/indexes/dml</xqdoc:see>", "<xqdoc:see xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">http://zorba.io/modules/store/static/collections/dml</xqdoc:see>", "<xqdoc:see xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">http://zorba.io/modules/store/static/collections/ddl</xqdoc:see>", "<xqdoc:see xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">http://zorba.io/modules/store/static/integrity-constraints/ddl</xqdoc:see>", "<xqdoc:see xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">http://zorba.io/modules/store/static/integrity-constraints/dml</xqdoc:see>", "<xqdoc:see xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">http://zorba.io/errors</xqdoc:see>" ], "authors" : [ "<xqdoc:author xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">Nicolae Brinza, Matthias Brantner, David Graf, Till Westmann, Markos Zaharioudakis</xqdoc:author>" ], "version" : null, "encoding" : "utf-8", "namespaces" : [ { "uri" : "http://zorba.io/modules/store/static/indexes/ddl", "prefix" : "iddl" }, { "uri" : "http://zorba.io/options/versioning", "prefix" : "ver" }, { "uri" : "http://zorba.io/errors", "prefix" : "zerr" } ], "functions" : [ { "isDocumented" : true, "arity" : 0, "name" : "available-indexes", "qname" : "iddl:available-indexes", "signature" : "() as xs:QName* external", "description" : " Gets the available indexes.\n", "summary" : "<p> Gets the available indexes.</p>", "annotation_str" : "", "annotations" : [  ], "updating" : false, "parameters" : [  ], "returns" : { "type" : "xs:QName*", "description" : "A sequence of QNames, one for each available index, or an empty sequence if none are." }, "errors" : [  ] }, { "isDocumented" : true, "arity" : 1, "name" : "create", "qname" : "iddl:create", "signature" : "($name as xs:QName) external", "description" : " Creates an index.\n", "summary" : "<p> Creates an index.</p>", "annotation_str" : "", "annotations" : [  ], "updating" : true, "parameters" : [ { "name" : "name", "type" : "xs:QName", "occurrence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> The name of the index to create.</div>" } ], "returns" : { "type" : null, "description" : "An empty XDM instance and a pending update list that, once applied, creates the index with the given name." }, "errors" : [ "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">zerr:ZDDY0021 if <code>$name</code> is not equal to the name of any resource in the statically known indexes.</xqdoc:error>", "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">zerr:ZDDY0022 if an index with <code>$name</code> already exists.</xqdoc:error>" ] }, { "isDocumented" : true, "arity" : 0, "name" : "declared-indexes", "qname" : "iddl:declared-indexes", "signature" : "() as xs:QName* external", "description" : " Gets a sequence of QNames representing the indexes that have been declared\n in the prolog of the static context.\n", "summary" : "<p> Gets a sequence of QNames representing the indexes that have been declared\n in the prolog of the static context.</p>", "annotation_str" : "", "annotations" : [  ], "updating" : false, "parameters" : [  ], "returns" : { "type" : "xs:QName*", "description" : "A sequence of QNames, one for each created collection, or an emtpy sequence." }, "errors" : [  ] }, { "isDocumented" : true, "arity" : 1, "name" : "delete", "qname" : "iddl:delete", "signature" : "($name as xs:QName) external", "description" : " Deletes an index.\n", "summary" : "<p> Deletes an index.</p>", "annotation_str" : "", "annotations" : [  ], "updating" : true, "parameters" : [ { "name" : "name", "type" : "xs:QName", "occurrence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> The name of the index to delete.</div>" } ], "returns" : { "type" : null, "description" : "An empty XDM instance and a pending update list that, once applied, deletes the index with the given name." }, "errors" : [ "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">zerr:ZDDY0009 if the index does not exist.</xqdoc:error>" ] }, { "isDocumented" : true, "arity" : 1, "name" : "is-available-index", "qname" : "iddl:is-available-index", "signature" : "($name as xs:QName) as xs:boolean external", "description" : " Gets whether an index exists.\n", "summary" : "<p> Gets whether an index exists.</p>", "annotation_str" : "", "annotations" : [  ], "updating" : false, "parameters" : [ { "name" : "name", "type" : "xs:QName", "occurrence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> The name of the index that is being checked.</div>" } ], "returns" : { "type" : "xs:boolean", "description" : "true if the index is available; false otherwise." }, "errors" : [  ] }, { "isDocumented" : true, "arity" : 1, "name" : "is-declared-index", "qname" : "iddl:is-declared-index", "signature" : "($name as xs:QName) as xs:boolean external", "description" : " Gets whether an index has been declared in the prolog of the static context.\n", "summary" : "<p> Gets whether an index has been declared in the prolog of the static context.</p>", "annotation_str" : "", "annotations" : [  ], "updating" : false, "parameters" : [ { "name" : "name", "type" : "xs:QName", "occurrence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> The name of the index that is being checked.</div>" } ], "returns" : { "type" : "xs:boolean", "description" : "true if the index was declared; false otherwise." }, "errors" : [  ] } ], "variables" : [  ] }, "http://zorba.io/modules/excel/datetime" : { "ns" : "http://zorba.io/modules/excel/datetime", "description" : " This is a library module offering the same set of functions\n defined by Microsoft Excel.\n", "sees" : [ "<xqdoc:see xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"><a href=\"http://office.microsoft.com/en-us/excel/CH062528231033.aspx\" target=\"_blank\">Excel Documentation: Datetime Functions</a></xqdoc:see>" ], "authors" : [ "<xqdoc:author xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">Sorin Nasoi</xqdoc:author>" ], "version" : null, "encoding" : "utf-8", "namespaces" : [ { "uri" : "http://zorba.io/modules/excel/datetime", "prefix" : "excel-datetime" }, { "uri" : "http://zorba.io/modules/excel/errors", "prefix" : "excel-err" }, { "uri" : "http://zorba.io/modules/excel/text", "prefix" : "excel-text" }, { "uri" : "http://zorba.io/options/versioning", "prefix" : "ver" } ], "functions" : [ { "isDocumented" : true, "arity" : 3, "name" : "date", "qname" : "excel-datetime:date", "signature" : "($year as xs:integer, $month as xs:integer, $day as xs:integer) as xs:date?", "description" : " Constructs a date given the hours, months and days.\n", "summary" : "<p> Constructs a date given the hours, months and days.</p>", "annotation_str" : "", "annotations" : [  ], "updating" : false, "parameters" : [ { "name" : "year", "type" : "xs:integer", "occurrence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> the year</div>" }, { "name" : "month", "type" : "xs:integer", "occurrence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> the month</div>" }, { "name" : "day", "type" : "xs:integer", "occurrence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> the day</div>" } ], "returns" : { "type" : "xs:date?", "description" : "A date given the hours, months and days" }, "errors" : [  ] }, { "isDocumented" : true, "arity" : 1, "name" : "day", "qname" : "excel-datetime:day", "signature" : "($date as xs:date) as xs:integer?", "description" : " Returns the day of a $date, represented by a serial number.\n", "summary" : "<p> Returns the day of a $date, represented by a serial number.</p>", "annotation_str" : "", "annotations" : [  ], "updating" : false, "parameters" : [ { "name" : "date", "type" : "xs:date", "occurrence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> the date.</div>" } ], "returns" : { "type" : "xs:integer?", "description" : "The day of a $date, represented by a serial number. The day is given as an integer ranging from 1 to 31." }, "errors" : [  ] }, { "isDocumented" : true, "arity" : 2, "name" : "days360", "qname" : "excel-datetime:days360", "signature" : "($start_date as xs:date, $end_date as xs:date) as xs:integer", "description" : " Returns the number of days between two dates based on a 360-day year.\n", "summary" : "<p> Returns the number of days between two dates based on a 360-day year.</p>", "annotation_str" : "", "annotations" : [  ], "updating" : false, "parameters" : [ { "name" : "start_date", "type" : "xs:date", "occurrence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> the start date.</div>" }, { "name" : "end_date", "type" : "xs:date", "occurrence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> the end date.</div>" } ], "returns" : { "type" : "xs:integer", "description" : "The number of days between two dates based on a 360-day year (twelve 30-day months), which is used in some accounting calculations.<p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"/> Use this function to help compute payments if your accounting system is based on twelve 30-day months.<p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"/> The metod used is U.S. (NASD). If the starting date is the last day of a month, it becomes equal to the 30th of the same month. <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"/> If the ending date is the last day of a month and the starting date is earlier than the 30th of a month, the ending date becomes equal to the 1st of the next month; otherwise the ending date becomes equal to the 30th of the same month." }, "errors" : [  ] }, { "isDocumented" : true, "arity" : 3, "name" : "days360", "qname" : "excel-datetime:days360", "signature" : "($start_date as xs:date, $end_date as xs:date, $method as xs:boolean) as xs:integer", "description" : " Returns the number of days between two dates based on a 360-day year.\n", "summary" : "<p> Returns the number of days between two dates based on a 360-day year.</p>", "annotation_str" : "", "annotations" : [  ], "updating" : false, "parameters" : [ { "name" : "start_date", "type" : "xs:date", "occurrence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> the start date.</div>" }, { "name" : "end_date", "type" : "xs:date", "occurrence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> the end date.</div>" }, { "name" : "method", "type" : "xs:boolean", "occurrence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> if false then US/NASD Method is used, otherwise the European Method is used.</div>" } ], "returns" : { "type" : "xs:integer", "description" : "The number of days between two dates based on a 360-day year (twelve 30-day months), which is used in some accounting calculations. Use this function to help compute payments if your accounting system is based on twelve 30-day months. <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"/> The European Method (30E/360)<p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"/> - If either date A or B falls on the 31st of the month, that date will be changed to the 30th;<p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"/> - Where date B falls on the last day of February, the actual date B will be used.<p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"/> The US/NASD Method (30US/360)<p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"/> - If both date A and B fall on the last day of February, then date B will be changed to the 30th.<p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"/> - If date A falls on the 31st of a month or last day of February, then date A will be changed to the 30th.<p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"/> - If date A falls on the 30th of a month after applying (2) above and date B falls on the 31st of a month, then date B will be changed to the 30th." }, "errors" : [  ] }, { "isDocumented" : true, "arity" : 1, "name" : "hour", "qname" : "excel-datetime:hour", "signature" : "($time as xs:time) as xs:integer?", "description" : " Returns the hour of a time value.\n", "summary" : "<p> Returns the hour of a time value.</p>", "annotation_str" : "", "annotations" : [  ], "updating" : false, "parameters" : [ { "name" : "time", "type" : "xs:time", "occurrence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> the time.</div>" } ], "returns" : { "type" : "xs:integer?", "description" : "The hour of a time value. The hour is as an integer, ranging from 0 (12:00 A.M.) to 23 (11:00 P.M.)." }, "errors" : [  ] }, { "isDocumented" : true, "arity" : 1, "name" : "minute", "qname" : "excel-datetime:minute", "signature" : "($time as xs:time) as xs:integer?", "description" : " Returns the minutes of a time value.\n", "summary" : "<p> Returns the minutes of a time value.</p>", "annotation_str" : "", "annotations" : [  ], "updating" : false, "parameters" : [ { "name" : "time", "type" : "xs:time", "occurrence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> the time.</div>" } ], "returns" : { "type" : "xs:integer?", "description" : "The minutes of a time value. The minute is given as an integer, ranging from 0 to 59." }, "errors" : [  ] }, { "isDocumented" : true, "arity" : 1, "name" : "month", "qname" : "excel-datetime:month", "signature" : "($date as xs:date) as xs:integer?", "description" : " Returns the month of a $date.\n", "summary" : "<p> Returns the month of a $date.</p>", "annotation_str" : "", "annotations" : [  ], "updating" : false, "parameters" : [ { "name" : "date", "type" : "xs:date", "occurrence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> the date.</div>" } ], "returns" : { "type" : "xs:integer?", "description" : "the month of a $date. The month is given as an integer, ranging from 1 (January) to 12 (December)." }, "errors" : [  ] }, { "isDocumented" : true, "arity" : 2, "name" : "networkdays", "qname" : "excel-datetime:networkdays", "signature" : "($start_date as xs:date, $end_date as xs:date) as xs:integer*", "description" : " Returns the number of whole working days between $start_date and $end_date.\n", "summary" : "<p> Returns the number of whole working days between $start_date and $end_date.</p>", "annotation_str" : "", "annotations" : [  ], "updating" : false, "parameters" : [ { "name" : "start_date", "type" : "xs:date", "occurrence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> the start date.</div>" }, { "name" : "end_date", "type" : "xs:date", "occurrence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> the end date.</div>" } ], "returns" : { "type" : "xs:integer*", "description" : "The number of whole working days between start_date and end_date.<p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"/> Working days exclude weekends and any dates identified in holidays.<p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"/> Use NETWORKDAYS to calculate employee benefits that accrue based on the number of days worked during a specific term." }, "errors" : [  ] }, { "isDocumented" : true, "arity" : 3, "name" : "networkdays", "qname" : "excel-datetime:networkdays", "signature" : "($start_date as xs:date, $end_date as xs:date, $holidays as xs:date*) as xs:integer*", "description" : " Returns the number of whole working days between $start_date and $end_date.\n", "summary" : "<p> Returns the number of whole working days between $start_date and $end_date.</p>", "annotation_str" : "", "annotations" : [  ], "updating" : false, "parameters" : [ { "name" : "start_date", "type" : "xs:date", "occurrence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> the start date.</div>" }, { "name" : "end_date", "type" : "xs:date", "occurrence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> the end date.</div>" }, { "name" : "holidays", "type" : "xs:date", "occurrence" : "*", "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> one or more dates to exclude from the working calendar, such as state and federal holidays and floating holidays.</div>" } ], "returns" : { "type" : "xs:integer*", "description" : "The number of whole working days between start_date and end_date.<p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"/> Working days exclude weekends and any dates identified in holidays.<p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"/> Use NETWORKDAYS to calculate employee benefits that accrue based on the number of days worked during a specific term." }, "errors" : [  ] }, { "isDocumented" : true, "arity" : 0, "name" : "now", "qname" : "excel-datetime:now", "signature" : "() as xs:dateTime?", "description" : " Returns the current date and time.\n", "summary" : "<p> Returns the current date and time.</p>", "annotation_str" : "", "annotations" : [  ], "updating" : false, "parameters" : [  ], "returns" : { "type" : "xs:dateTime?", "description" : "The current date and time." }, "errors" : [  ] }, { "isDocumented" : true, "arity" : 1, "name" : "second", "qname" : "excel-datetime:second", "signature" : "($time as xs:time) as xs:decimal?", "description" : " Returns the seconds of a $time value.\n", "summary" : "<p> Returns the seconds of a $time value.</p>", "annotation_str" : "", "annotations" : [  ], "updating" : false, "parameters" : [ { "name" : "time", "type" : "xs:time", "occurrence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> the time.</div>" } ], "returns" : { "type" : "xs:decimal?", "description" : "The seconds of a $time value. The second is given as an integer in the range 0 (zero) to 59." }, "errors" : [  ] }, { "isDocumented" : true, "arity" : 3, "name" : "time", "qname" : "excel-datetime:time", "signature" : "($hour as xs:integer, $minute as xs:integer, $second as xs:integer) as xs:time?", "description" : " Constructs a time given the hours, minutes and seconds.\n", "summary" : "<p> Constructs a time given the hours, minutes and seconds.</p>", "annotation_str" : "", "annotations" : [  ], "updating" : false, "parameters" : [ { "name" : "hour", "type" : "xs:integer", "occurrence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> the hour.</div>" }, { "name" : "minute", "type" : "xs:integer", "occurrence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> the minute.</div>" }, { "name" : "second", "type" : "xs:integer", "occurrence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> the second.</div>" } ], "returns" : { "type" : "xs:time?", "description" : "A time given the hours, minutes and seconds." }, "errors" : [  ] }, { "isDocumented" : true, "arity" : 0, "name" : "today", "qname" : "excel-datetime:today", "signature" : "() as xs:date?", "description" : " Returns the current date.\n", "summary" : "<p> Returns the current date.</p>", "annotation_str" : "", "annotations" : [  ], "updating" : false, "parameters" : [  ], "returns" : { "type" : "xs:date?", "description" : "The current date." }, "errors" : [  ] }, { "isDocumented" : true, "arity" : 1, "name" : "weekday", "qname" : "excel-datetime:weekday", "signature" : "($date as xs:date) as xs:integer?", "description" : " Returns the day of the week corresponding to a $date.\n", "summary" : "<p> Returns the day of the week corresponding to a $date.</p>", "annotation_str" : "", "annotations" : [  ], "updating" : false, "parameters" : [ { "name" : "date", "type" : "xs:date", "occurrence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> the date.</div>" } ], "returns" : { "type" : "xs:integer?", "description" : "The day of the week corresponding to a $date. The day is given as an integer, ranging from 1 (Sunday) to 7 (Saturday)." }, "errors" : [  ] }, { "isDocumented" : true, "arity" : 2, "name" : "weekday", "qname" : "excel-datetime:weekday", "signature" : "($date as xs:date, $return_type as xs:integer) as xs:integer?", "description" : " Returns the day of the week corresponding to a $date depending on $return_type.\n", "summary" : "<p> Returns the day of the week corresponding to a $date depending on $return_type.</p>", "annotation_str" : "", "annotations" : [  ], "updating" : false, "parameters" : [ { "name" : "date", "type" : "xs:date", "occurrence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> the date.</div>" }, { "name" : "return_type", "type" : "xs:integer", "occurrence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> 1 for Numbers 1 (Sunday) through 7 (Saturday). 2 for Numbers 1 (Monday) through 7 (Sunday). 3 for Numbers 0 (Monday) through 6 (Sunday).</div>" } ], "returns" : { "type" : "xs:integer?", "description" : "The day of the week corresponding to a $date depending on $return_type." }, "errors" : [ "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">excel-err:Value if $return_type is outside the range [1,3].</xqdoc:error>" ] }, { "isDocumented" : true, "arity" : 1, "name" : "year", "qname" : "excel-datetime:year", "signature" : "($date as xs:date) as xs:integer?", "description" : " Returns the year corresponding to a date.\n", "summary" : "<p> Returns the year corresponding to a date.</p>", "annotation_str" : "", "annotations" : [  ], "updating" : false, "parameters" : [ { "name" : "date", "type" : "xs:date", "occurrence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> the date.</div>" } ], "returns" : { "type" : "xs:integer?", "description" : "The year corresponding to a date." }, "errors" : [  ] } ], "variables" : [  ] }, "http://xbrl.io/modules/bizql/profiles/sec/filings" : { "ns" : "http://xbrl.io/modules/bizql/profiles/sec/filings", "description" : " <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">This module provides functionality for querying financial reports (filings)\n submitted to the SEC.</p>\n <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">SEC Filings are nothing else than XBRL archives. For XBRL-generic requests on archives,\n use the generic archives module.</p>\n <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">With this module, you can access a number of properties of an SEC filing, such as\n its document type. You can also retrieve an SEC filing given an SEC company (or its CIK).</p>\n <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">You can also access SEC filings statistics (the number of SEC Networks, of SEC Axes, etc).</p>\n", "sees" : [  ], "authors" : [ "<xqdoc:author xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">Charles Hoffman</xqdoc:author>", "<xqdoc:author xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">Matthias Brantner</xqdoc:author>", "<xqdoc:author xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">Dennis Knochenwefel</xqdoc:author>", "<xqdoc:author xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">Ghislain Fourny</xqdoc:author>" ], "version" : null, "encoding" : "utf-8", "namespaces" : [ { "uri" : "http://xbrl.io/modules/bizql/archives", "prefix" : "archives" }, { "uri" : "http://xbrl.io/modules/bizql/profiles/sec/companies", "prefix" : "companies" }, { "uri" : "http://www.28msec.com/modules/credentials", "prefix" : "credentials" }, { "uri" : "http://zorba.io/modules/datetime", "prefix" : "datetime" }, { "uri" : "http://xbrl.io/modules/bizql/facts", "prefix" : "facts" }, { "uri" : "http://xbrl.io/modules/bizql/profiles/sec/filings", "prefix" : "filings" }, { "uri" : "http://www.28msec.com/modules/mongodb", "prefix" : "mongo" }, { "uri" : "http://xbrl.io/modules/bizql/profiles/sec/core", "prefix" : "sec" }, { "uri" : "http://zorba.io/options/versioning", "prefix" : "ver" } ], "functions" : [ { "isDocumented" : true, "arity" : 1, "name" : "acceptance-dateTimes", "qname" : "filings:acceptance-dateTimes", "signature" : "($filings-or-ids as item()*) as dateTime*", "description" : " <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">Retrieves the acceptance date of filings.</p>\n", "summary" : "<p>  Retrieves the acceptance date of filings.</p>", "annotation_str" : "", "annotations" : [  ], "updating" : false, "parameters" : [ { "name" : "filings-or-ids", "type" : "item()", "occurrence" : "*", "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> a sequence of filings or their IDs.</div>" } ], "returns" : { "type" : "dateTime*", "description" : "the acceptance dateTimes." }, "errors" : [  ] }, { "isDocumented" : true, "arity" : 1, "name" : "document-types", "qname" : "filings:document-types", "signature" : "($filings-or-ids as item()*) as string?", "description" : " <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">Retrieves the document type of the filings.</p>\n", "summary" : "<p>  Retrieves the document type of the filings.</p>", "annotation_str" : "", "annotations" : [  ], "updating" : false, "parameters" : [ { "name" : "filings-or-ids", "type" : "item()", "occurrence" : "*", "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> a sequence of filings or their ids.</div>" } ], "returns" : { "type" : "string?", "description" : "the document types (10-K, 10-Q)." }, "errors" : [  ] }, { "isDocumented" : true, "arity" : 1, "name" : "filing-dates", "qname" : "filings:filing-dates", "signature" : "($filings-or-ids as item()*) as date*", "description" : " <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">Retrieves the submission date of filings.</p>\n", "summary" : "<p>  Retrieves the submission date of filings.</p>", "annotation_str" : "", "annotations" : [  ], "updating" : false, "parameters" : [ { "name" : "filings-or-ids", "type" : "item()", "occurrence" : "*", "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> a sequence of filings or their IDs.</div>" } ], "returns" : { "type" : "date*", "description" : "the submission dates." }, "errors" : [  ] }, { "isDocumented" : true, "arity" : 1, "name" : "filings-for-companies", "qname" : "filings:filings-for-companies", "signature" : "($companies-or-ciks as item()*) as object()*", "description" : " <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">Return all filings submitted by the supplied companies.</p>\n", "summary" : "<p>  Return all filings submitted by the supplied companies.</p>", "annotation_str" : "", "annotations" : [  ], "updating" : false, "parameters" : [ { "name" : "companies-or-ciks", "type" : "item()", "occurrence" : "*", "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> arbitrary number of company objects or CIKs.</div>" } ], "returns" : { "type" : "object()*", "description" : "all filings submitted by these companies." }, "errors" : [  ] }, { "isDocumented" : true, "arity" : 1, "name" : "generators", "qname" : "filings:generators", "signature" : "($filings-or-ids as item()*) as string*", "description" : " <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">Retrieves the generators of filings.</p>\n", "summary" : "<p>  Retrieves the generators of filings.</p>", "annotation_str" : "", "annotations" : [  ], "updating" : false, "parameters" : [ { "name" : "filings-or-ids", "type" : "item()", "occurrence" : "*", "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> a sequence of filings or their IDs.</div>" } ], "returns" : { "type" : "string*", "description" : "the generators used." }, "errors" : [  ] }, { "isDocumented" : true, "arity" : 1, "name" : "num-abstracts", "qname" : "filings:num-abstracts", "signature" : "($filings-or-ids) as integer*", "description" : " Return the number of (distinct) abstracts in each of the given filings.\n", "summary" : "<p> Return the number of (distinct) abstracts in each of the given filings.</p>", "annotation_str" : "", "annotations" : [  ], "updating" : false, "parameters" : [ { "name" : "filings-or-ids", "type" : null, "occurrence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> list of filings or IDs</div>" } ], "returns" : { "type" : "integer*", "description" : "the said number of abstracts" }, "errors" : [  ] }, { "isDocumented" : true, "arity" : 1, "name" : "num-axes", "qname" : "filings:num-axes", "signature" : "($filings-or-ids) as integer*", "description" : " Return the number of (distinct) axes in each of the given filings.\n", "summary" : "<p> Return the number of (distinct) axes in each of the given filings.</p>", "annotation_str" : "", "annotations" : [  ], "updating" : false, "parameters" : [ { "name" : "filings-or-ids", "type" : null, "occurrence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> list of filings or IDs</div>" } ], "returns" : { "type" : "integer*", "description" : "the said number of axes" }, "errors" : [  ] }, { "isDocumented" : true, "arity" : 1, "name" : "num-concepts", "qname" : "filings:num-concepts", "signature" : "($filings-or-ids) as integer*", "description" : " Return the number of (distinct) concepts in each of the given filings.\n", "summary" : "<p> Return the number of (distinct) concepts in each of the given filings.</p>", "annotation_str" : "", "annotations" : [  ], "updating" : false, "parameters" : [ { "name" : "filings-or-ids", "type" : null, "occurrence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> list of filings or IDs</div>" } ], "returns" : { "type" : "integer*", "description" : "the said number of concepts" }, "errors" : [  ] }, { "isDocumented" : true, "arity" : 1, "name" : "num-extension-abstracts", "qname" : "filings:num-extension-abstracts", "signature" : "($filings-or-ids) as integer*", "description" : " Return the number of extension abstracts in each of the given filings.\n", "summary" : "<p> Return the number of extension abstracts in each of the given filings.</p>", "annotation_str" : "", "annotations" : [  ], "updating" : false, "parameters" : [ { "name" : "filings-or-ids", "type" : null, "occurrence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> list of filings or IDs</div>" } ], "returns" : { "type" : "integer*", "description" : "the said number of abstracts" }, "errors" : [  ] }, { "isDocumented" : true, "arity" : 1, "name" : "num-extension-concepts", "qname" : "filings:num-extension-concepts", "signature" : "($filings-or-ids) as integer*", "description" : " Return the number of extension concepts in each of the given filings.\n", "summary" : "<p> Return the number of extension concepts in each of the given filings.</p>", "annotation_str" : "", "annotations" : [  ], "updating" : false, "parameters" : [ { "name" : "filings-or-ids", "type" : null, "occurrence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> list of filings or IDs</div>" } ], "returns" : { "type" : "integer*", "description" : "the said number of concepts" }, "errors" : [  ] }, { "isDocumented" : true, "arity" : 1, "name" : "num-extension-facts", "qname" : "filings:num-extension-facts", "signature" : "($filings-or-ids) as integer*", "description" : " Return the number of extension facts in each of the given filings.\n", "summary" : "<p> Return the number of extension facts in each of the given filings.</p>", "annotation_str" : "", "annotations" : [  ], "updating" : false, "parameters" : [ { "name" : "filings-or-ids", "type" : null, "occurrence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> list of filings or IDs</div>" } ], "returns" : { "type" : "integer*", "description" : "the said number of facts" }, "errors" : [  ] }, { "isDocumented" : true, "arity" : 1, "name" : "num-facts", "qname" : "filings:num-facts", "signature" : "($filings-or-ids) as integer*", "description" : " Return the number of facts in each of the given filings.\n", "summary" : "<p> Return the number of facts in each of the given filings.</p>", "annotation_str" : "", "annotations" : [  ], "updating" : false, "parameters" : [ { "name" : "filings-or-ids", "type" : null, "occurrence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> list of filings or IDs</div>" } ], "returns" : { "type" : "integer*", "description" : "the said number of facts" }, "errors" : [  ] }, { "isDocumented" : true, "arity" : 1, "name" : "num-footnotes", "qname" : "filings:num-footnotes", "signature" : "($filings-or-ids) as integer*", "description" : " Return the number of footnotes in each of the given filings.\n", "summary" : "<p> Return the number of footnotes in each of the given filings.</p>", "annotation_str" : "", "annotations" : [  ], "updating" : false, "parameters" : [ { "name" : "filings-or-ids", "type" : null, "occurrence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> list of filings or IDs</div>" } ], "returns" : { "type" : "integer*", "description" : "the said number of facts" }, "errors" : [  ] }, { "isDocumented" : true, "arity" : 1, "name" : "num-line-items", "qname" : "filings:num-line-items", "signature" : "($filings-or-ids) as integer*", "description" : " Return the number of (distinct) line items in each of the given filings.\n", "summary" : "<p> Return the number of (distinct) line items in each of the given filings.</p>", "annotation_str" : "", "annotations" : [  ], "updating" : false, "parameters" : [ { "name" : "filings-or-ids", "type" : null, "occurrence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> list of filings or IDs</div>" } ], "returns" : { "type" : "integer*", "description" : "the said number of line items" }, "errors" : [  ] }, { "isDocumented" : true, "arity" : 1, "name" : "num-members", "qname" : "filings:num-members", "signature" : "($filings-or-ids) as integer*", "description" : " Return the number of (distinct) members in each of the given filings.\n", "summary" : "<p> Return the number of (distinct) members in each of the given filings.</p>", "annotation_str" : "", "annotations" : [  ], "updating" : false, "parameters" : [ { "name" : "filings-or-ids", "type" : null, "occurrence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> list of filings or IDs</div>" } ], "returns" : { "type" : "integer*", "description" : "the said number of members" }, "errors" : [  ] }, { "isDocumented" : true, "arity" : 1, "name" : "num-networks", "qname" : "filings:num-networks", "signature" : "($filings-or-ids) as integer*", "description" : " Return the number of networks in each of the given filings.\n", "summary" : "<p> Return the number of networks in each of the given filings.</p>", "annotation_str" : "", "annotations" : [  ], "updating" : false, "parameters" : [ { "name" : "filings-or-ids", "type" : null, "occurrence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> list of filings or IDs</div>" } ], "returns" : { "type" : "integer*", "description" : "the said number of networks" }, "errors" : [  ] }, { "isDocumented" : true, "arity" : 1, "name" : "num-report-elements", "qname" : "filings:num-report-elements", "signature" : "($filings-or-ids) as integer*", "description" : " Return the number of (distinct) report elements in each of the given filings.\n", "summary" : "<p> Return the number of (distinct) report elements in each of the given filings.</p>", "annotation_str" : "", "annotations" : [  ], "updating" : false, "parameters" : [ { "name" : "filings-or-ids", "type" : null, "occurrence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> list of filings or IDs</div>" } ], "returns" : { "type" : "integer*", "description" : "the said number of report elements" }, "errors" : [  ] }, { "isDocumented" : true, "arity" : 1, "name" : "num-tables", "qname" : "filings:num-tables", "signature" : "($filings-or-ids) as integer*", "description" : " Return the number of tables in each of the given filings.\n", "summary" : "<p> Return the number of tables in each of the given filings.</p>", "annotation_str" : "", "annotations" : [  ], "updating" : false, "parameters" : [ { "name" : "filings-or-ids", "type" : null, "occurrence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> list of filings or IDs</div>" } ], "returns" : { "type" : "integer*", "description" : "the said number of tables" }, "errors" : [  ] } ], "variables" : [  ] }, "http://zorba.io/modules/string" : { "ns" : "http://zorba.io/modules/string", "description" : " <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">This module provides string related functions.</p>\n <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">Mostly, the functions in this module provide primitives\n to work with streamable strings. For example, it allows to\n check whether a given string is streamable or seekable.</p>\n", "sees" : [  ], "authors" : [ "<xqdoc:author xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">Matthias Brantner</xqdoc:author>" ], "version" : null, "encoding" : "utf-8", "namespaces" : [ { "uri" : "http://zorba.io/modules/string", "prefix" : "string" }, { "uri" : "http://zorba.io/options/versioning", "prefix" : "ver" } ], "functions" : [ { "isDocumented" : true, "arity" : 2, "name" : "analyze-string", "qname" : "string:analyze-string", "signature" : "($input as xs:string?, $pattern as xs:string) as array()", "description" : " Analyzes a string using a regular expression, returning sequence of JSON\n objects that identify which parts of the input string matched or failed to\n match the regular expression; and in the case of matched substrings, which\n substrings matched each capturing group in the regular expression.\n <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"/>\n This function behaves like\n <a xmlns:xqdoc=\"http://www.xqdoc.org/1.0\" href=\"http://www.w3.org/TR/xpath-functions-30/#func-analyze-string\"><code>fn:analyze-string</code></a>\n but returns a JSON array rather than an XML element.\n", "summary" : "<p> Analyzes a string using a regular expression, returning sequence of JSON\n objects that identify which parts of the input string matched or failed to\n match the regular expression; and in the case of matched substrings, which\n substrings matched each capturing group in the regular expression.</p>", "annotation_str" : "", "annotations" : [  ], "updating" : false, "parameters" : [ { "name" : "input", "type" : "xs:string", "occurrence" : "?", "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> The string to analyze. If the empty sequence, the function behaves as if <code>$input</code> were a zero-length string.</div>" }, { "name" : "pattern", "type" : "xs:string", "occurrence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> The regular expression.</div>" } ], "returns" : { "type" : "array()", "description" : "a JSON array of objects where each object contains a single key/value pair. Each key is either <code xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">match</code> or <code xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">non-match</code>. For <code xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">non-match</code>, the value is a string that is the part of <code xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">$input</code> that did not match; for <code xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">match</code>, the value is either a string that is the part of <code xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">$input</code> that matched (when <code xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">$pattern</code> contains no capturing groups) or an array containing values for both capturing groups and other matches. <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"/> Capturing group matches are themselves arrays where the first element is the group number (1-based) and subsequent elements are either a string that is the part of <code xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">$input</code> that matched or sub-arrays for nested capturing groups." }, "errors" : [  ] }, { "isDocumented" : true, "arity" : 3, "name" : "analyze-string", "qname" : "string:analyze-string", "signature" : "($input as xs:string?, $pattern as xs:string, $flags as xs:string) as array() external", "description" : " Analyzes a string using a regular expression, returning sequence of JSON\n objects that identify which parts of the input string matched or failed to\n match the regular expression; and in the case of matched substrings, which\n substrings matched each capturing group in the regular expression.\n <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"/>\n This function behaves like\n <a xmlns:xqdoc=\"http://www.xqdoc.org/1.0\" href=\"http://www.w3.org/TR/xpath-functions-30/#func-analyze-string\"><code>fn:analyze-string</code></a>\n but returns a JSON array rather than an XML element.\n", "summary" : "<p> Analyzes a string using a regular expression, returning sequence of JSON\n objects that identify which parts of the input string matched or failed to\n match the regular expression; and in the case of matched substrings, which\n substrings matched each capturing group in the regular expression.</p>", "annotation_str" : "", "annotations" : [  ], "updating" : false, "parameters" : [ { "name" : "input", "type" : "xs:string", "occurrence" : "?", "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> The string to analyze. If the empty sequence, the function behaves as if <code>$input</code> were a zero-length string.</div>" }, { "name" : "pattern", "type" : "xs:string", "occurrence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> The regular expression.</div>" }, { "name" : "flags", "type" : "xs:string", "occurrence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> The  argument is interpreted in the same way as for the <a href=\"http://www.w3.org/TR/xpath-functions-30/#func-matches\"><code>fn:matches</code></a> function.</div>" } ], "returns" : { "type" : "array()", "description" : "a JSON array of objects where each object contains a single key/value pair. Each key is either <code xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">match</code> or <code xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">non-match</code>. For <code xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">non-match</code>, the value is a string that is the part of <code xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">$input</code> that did not match; for <code xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">match</code>, the value is either a string that is the part of <code xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">$input</code> that matched (when <code xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">$pattern</code> contains no capturing groups) or an array containing values for both capturing groups and other matches. <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"/> Capturing group matches are themselves arrays where the first element is the group number (1-based) and subsequent elements are either a string that is the part of <code xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">$input</code> that matched or sub-arrays for nested capturing groups." }, "errors" : [  ] }, { "isDocumented" : true, "arity" : 1, "name" : "is-seekable", "qname" : "string:is-seekable", "signature" : "($s as string) as boolean external", "description" : " <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">This function checks whether a given string item is a\n seekable stream string.</p>\n <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">For example, a seekable streamable string is returned by the\n file module.</p>\n", "summary" : "<p>  This function checks whether a given string item is a\n seekable stream string.</p>", "annotation_str" : "", "annotations" : [  ], "updating" : false, "parameters" : [ { "name" : "s", "type" : "string", "occurrence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> the string to check</div>" } ], "returns" : { "type" : "boolean", "description" : "true if the given item is a seekable stream string or false otherwise." }, "errors" : [  ] }, { "isDocumented" : true, "arity" : 1, "name" : "is-streamable", "qname" : "string:is-streamable", "signature" : "($s as string) as boolean external", "description" : " <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">This function checks whether a given string item is implemented by a\n streamable string.</p>\n <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">A streamable string is produced by some functions of a module.\n It's an optimized implementation of an string to handle arbitrary\n sized data. The drawback is that its value can only be consumed once.\n That is, only one function can access the value of a streamable string\n item.</p>\n", "summary" : "<p>  This function checks whether a given string item is implemented by a\n streamable string.</p>", "annotation_str" : "", "annotations" : [  ], "updating" : false, "parameters" : [ { "name" : "s", "type" : "string", "occurrence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> the string to check</div>" } ], "returns" : { "type" : "boolean", "description" : "true if the given item is implemented using a streamable string or false otherwise." }, "errors" : [  ] }, { "isDocumented" : true, "arity" : 1, "name" : "materialize", "qname" : "string:materialize", "signature" : "($s as string) as string external", "description" : " <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">This function materializes a streamable string.</p>\n <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">The drawback of a streamable (non-seekable) string is that\n its value can only be consumed once. That is, only one function\n can access the value of a streamable string item.</p>\n <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">In order to remedy this situation, this function can be used to\n convert a streamable string into its non-streamable counterpart. As a\n result, the string returned by this function has the same value as its\n input but is materialized and, hence, can be consumed multiple times.</p>\n", "summary" : "<p>  This function materializes a streamable string.</p>", "annotation_str" : "", "annotations" : [  ], "updating" : false, "parameters" : [ { "name" : "s", "type" : "string", "occurrence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> the streamable string item to materialize</div>" } ], "returns" : { "type" : "string", "description" : "a materialized string of its input or the input if the input item was not a streamable string." }, "errors" : [  ] }, { "isDocumented" : true, "arity" : 2, "name" : "split", "qname" : "string:split", "signature" : "($s as string, $separator as string) as string* external", "description" : " <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">Returns a sequence of strings constructed by splitting the input wherever\n the given separator is found.</p>\n <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">The function is different from tokenize. It doesn't allow\n the separator to be a regular expression. This restriction allows for more\n performant implementation. Specifically, the function processes\n streamable strings as input in a streamable way which is particularly useful\n to tokenize huge strings.</p>\n", "summary" : "<p>  Returns a sequence of strings constructed by splitting the input wherever\n the given separator is found.</p>", "annotation_str" : "", "annotations" : [  ], "updating" : false, "parameters" : [ { "name" : "s", "type" : "string", "occurrence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> the input string to split</div>" }, { "name" : "separator", "type" : "string", "occurrence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> the separator used for splitting the input string $s</div>" } ], "returns" : { "type" : "string*", "description" : "a sequence of strings constructed by splitting the input" }, "errors" : [  ] } ], "variables" : [  ] }, "http://www.28msec.com/modules/store" : { "ns" : "http://www.28msec.com/modules/store", "description" : " This module provides functions to perform MongoDB query operations\n (i.e. find and aggregate) on the database associated with the\n project.\n <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">The module is always imported so you don't need to import it explicitly.\n Also, you don't need to fully qualify the function if you want to invoke it.</p>\n", "sees" : [  ], "authors" : [ "<xqdoc:author xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">28msec</xqdoc:author>" ], "version" : null, "encoding" : "utf-8", "namespaces" : [ { "uri" : "http://zorba.io/annotations", "prefix" : "an" }, { "uri" : "http://www.28msec.com/modules/mongodb/types", "prefix" : "mongo" }, { "uri" : "http://www.28msec.com/modules/store", "prefix" : "store" }, { "uri" : "http://zorba.io/options/versioning", "prefix" : "ver" } ], "functions" : [ { "isDocumented" : true, "arity" : 2, "name" : "aggregate", "qname" : "store:aggregate", "signature" : "($collection as string, $pipeline as array()) as object() external", "description" : " Performs a MongoDB aggregation framework job on the given collection.\n The <em xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">$pipeline</em> parameter needs to specify a valid aggregation\n framework pipeline. For example,\n <pre xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">\n  [\n    { $project : {\n       author : 1,\n       tags : 1,\n    } },\n    { $unwind : \"$tags\" },\n    { $group : {\n       _id : { tags : \"$tags\" },\n       authors : { $addToSet : \"$author\" }\n    } }\n ]\n </pre>\n The function returns the result as one object. The object contains\n the field named \"ok\" with value 0 if the execution failed or 1 if\n it succeeded. If it succeeded, the result is contained as an array\n in the result field. Otherwise, the errmsg field contains the description\n of the error. For exampl,e\n <pre xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">\n {\n   \"result\" : [ ... ],\n   \"ok\" : 1\n }\n </pre>\n", "summary" : "<p> Performs a MongoDB aggregation framework job on the given collection.</p>", "annotation_str" : "", "annotations" : [  ], "updating" : false, "parameters" : [ { "name" : "collection", "type" : "string", "occurrence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> the name of the collection to execute the job on</div>" }, { "name" : "pipeline", "type" : "array()", "occurrence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> the specification of the pipeline to execute</div>" } ], "returns" : { "type" : "object()", "description" : "an object with the result or the error message." }, "errors" : [  ] }, { "isDocumented" : false, "arity" : 1, "name" : "clear-if", "qname" : "store:clear-if", "signature" : "($cond as boolean) as integer", "description" : "", "summary" : "", "annotation_str" : " %an:sequential", "annotations" : [ { "prefix" : "an", "ns" : "http://zorba.io/annotations", "name" : "sequential", "value" : "" } ], "updating" : false, "parameters" : [ { "name" : "cond", "type" : "boolean", "occurrence" : null, "description" : "" } ], "returns" : { "type" : "integer", "description" : "" }, "errors" : [  ] }, { "isDocumented" : false, "arity" : 0, "name" : "clear", "qname" : "store:clear", "signature" : "() as integer external", "description" : "", "summary" : "", "annotation_str" : " %an:sequential", "annotations" : [ { "prefix" : "an", "ns" : "http://zorba.io/annotations", "name" : "sequential", "value" : "" } ], "updating" : false, "parameters" : [  ], "returns" : { "type" : "integer", "description" : "" }, "errors" : [  ] }, { "isDocumented" : false, "arity" : 1, "name" : "collection-chunk-specs", "qname" : "store:collection-chunk-specs", "signature" : "($name as string) as object()*", "description" : "", "summary" : "", "annotation_str" : "", "annotations" : [  ], "updating" : false, "parameters" : [ { "name" : "name", "type" : "string", "occurrence" : null, "description" : "" } ], "returns" : { "type" : "object()*", "description" : "" }, "errors" : [  ] }, { "isDocumented" : false, "arity" : 2, "name" : "collection-chunk-specs", "qname" : "store:collection-chunk-specs", "signature" : "($name as string, $chunk-size as integer) as object()* external", "description" : "", "summary" : "", "annotation_str" : "", "annotations" : [  ], "updating" : false, "parameters" : [ { "name" : "name", "type" : "string", "occurrence" : null, "description" : "" }, { "name" : "chunk-size", "type" : "integer", "occurrence" : null, "description" : "" } ], "returns" : { "type" : "object()*", "description" : "" }, "errors" : [  ] }, { "isDocumented" : false, "arity" : 2, "name" : "collection-chunk", "qname" : "store:collection-chunk", "signature" : "($name as string, $chunk as object()) as item()* external", "description" : "", "summary" : "", "annotation_str" : "", "annotations" : [  ], "updating" : false, "parameters" : [ { "name" : "name", "type" : "string", "occurrence" : null, "description" : "" }, { "name" : "chunk", "type" : "object()", "occurrence" : null, "description" : "" } ], "returns" : { "type" : "item()*", "description" : "" }, "errors" : [  ] }, { "isDocumented" : true, "arity" : 2, "name" : "find", "qname" : "store:find", "signature" : "($coll as string, $query as object()) as object()*", "description" : " Performs a MongoDB query operation on the given collection and\n returns all matches.\n", "summary" : "<p> Performs a MongoDB query operation on the given collection and\n returns all matches.</p>", "annotation_str" : "", "annotations" : [  ], "updating" : false, "parameters" : [ { "name" : "coll", "type" : "string", "occurrence" : null, "description" : "" }, { "name" : "query", "type" : "object()", "occurrence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> the query operation to perform</div>" } ], "returns" : { "type" : "object()*", "description" : "all matches returned by the given query operation" }, "errors" : [ "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">zerr:ZSTR0009 if the given collection does not exist</xqdoc:error>" ] }, { "isDocumented" : true, "arity" : 3, "name" : "find", "qname" : "store:find", "signature" : "($coll as string, $query as object(), $options as object()) as object()* external", "description" : " Performs a MongoDB query operation on the given collection and\n returns all matches.\n Available options:\n <ul xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">\n   <li>to-return: the maximum number of objects to return (0 = unlimited)</li>\n   <li>to-skip: start with the n-th object</li>\n   <li>batch-size: the number of objects to return in one batch</li>\n   <li>slave-ok: allow this query to be run against a replica secondary</li>\n   <li>await-data: the server will block for some extra time before returning,\n   waiting for more data to return</li>\n   <li>partial-results: return partial results if some shards are down instead\n   of returning an error</li>\n </ul>\n", "summary" : "<p> Performs a MongoDB query operation on the given collection and\n returns all matches.</p>", "annotation_str" : "", "annotations" : [  ], "updating" : false, "parameters" : [ { "name" : "coll", "type" : "string", "occurrence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> the name of the collection</div>" }, { "name" : "query", "type" : "object()", "occurrence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> the query operation to perform</div>" }, { "name" : "options", "type" : "object()", "occurrence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> the options for this operation</div>" } ], "returns" : { "type" : "object()*", "description" : "all matches returned by the given query operation" }, "errors" : [ "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">zerr:ZSTR0009 if the given collection does not exist</xqdoc:error>" ] }, { "isDocumented" : false, "arity" : 1, "name" : "flush-if", "qname" : "store:flush-if", "signature" : "($cond as boolean) as empty-sequence()", "description" : "", "summary" : "", "annotation_str" : " %an:sequential", "annotations" : [ { "prefix" : "an", "ns" : "http://zorba.io/annotations", "name" : "sequential", "value" : "" } ], "updating" : false, "parameters" : [ { "name" : "cond", "type" : "boolean", "occurrence" : null, "description" : "" } ], "returns" : { "type" : "empty-sequence()", "description" : "" }, "errors" : [  ] }, { "isDocumented" : false, "arity" : 0, "name" : "flush", "qname" : "store:flush", "signature" : "() as empty-sequence() external", "description" : "", "summary" : "", "annotation_str" : " %an:sequential", "annotations" : [ { "prefix" : "an", "ns" : "http://zorba.io/annotations", "name" : "sequential", "value" : "" } ], "updating" : false, "parameters" : [  ], "returns" : { "type" : "empty-sequence()", "description" : "" }, "errors" : [  ] } ], "variables" : [  ] }, "http://zorba.io/modules/hash" : { "ns" : "http://zorba.io/modules/hash", "description" : " This module provides functions that perform different hash operations.\n For example, they compute MD5 and various SHA functions on either\n strings or binary. The result is the base64 encoded value of the hash.\n", "sees" : [  ], "authors" : [ "<xqdoc:author xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">Gabriel Petrovay, Markus Pilman, Matthias Brantner</xqdoc:author>" ], "version" : null, "encoding" : "utf-8", "namespaces" : [ { "uri" : "http://zorba.io/modules/hash", "prefix" : "hash" }, { "uri" : "http://zorba.io/options/versioning", "prefix" : "ver" } ], "functions" : [ { "isDocumented" : true, "arity" : 2, "name" : "hash-binary", "qname" : "hash:hash-binary", "signature" : "($value as xs:base64Binary, $alg as xs:string) as xs:base64Binary external", "description" : " This function computes a hash value of the binary form of the given\n base64Binary item, i.e. the item is base64-decoded before hashing.\n", "summary" : "<p> This function computes a hash value of the binary form of the given\n base64Binary item, i.</p>", "annotation_str" : "", "annotations" : [  ], "updating" : false, "parameters" : [ { "name" : "value", "type" : "xs:base64Binary", "occurrence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> The binary item to be hashed.</div>" }, { "name" : "alg", "type" : "xs:string", "occurrence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> The algorithm to use for this hashing operation. Supported algorithms are \"md5\", \"sha1\", and \"sha256\".</div>" } ], "returns" : { "type" : "xs:base64Binary", "description" : "The hash as xs:base64Binary of the provided binary" }, "errors" : [ "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">hash:UNSUPPORTED-ALGORITHM if the given hash algorithm is not supported</xqdoc:error>" ] }, { "isDocumented" : true, "arity" : 2, "name" : "hash", "qname" : "hash:hash", "signature" : "($value as xs:string, $alg as xs:string) as xs:base64Binary external", "description" : " This function computes a hash value of the string provided as parameter.\n The function expects the hash algorithm to be used as parameter.\n", "summary" : "<p> This function computes a hash value of the string provided as parameter.</p>", "annotation_str" : "", "annotations" : [  ], "updating" : false, "parameters" : [ { "name" : "value", "type" : "xs:string", "occurrence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> The string to be hashed.</div>" }, { "name" : "alg", "type" : "xs:string", "occurrence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> The algorithm to use for this hashing operation. Supported algorithms are \"md5\", \"sha1\", and \"sha256\".</div>" } ], "returns" : { "type" : "xs:base64Binary", "description" : "The hash as xs:base64binary of the provided string" }, "errors" : [ "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">hash:UNSUPPORTED-ALGORITHM if the given hash algorithm is not supported</xqdoc:error>" ] }, { "isDocumented" : true, "arity" : 1, "name" : "md5-binary", "qname" : "hash:md5-binary", "signature" : "($value as xs:base64Binary) as xs:base64Binary", "description" : " This function computes the MD5 hash value of the binary form of the given\n base64Binary item, i.e. the item is base64-decoded before hashing.\n", "summary" : "<p> This function computes the MD5 hash value of the binary form of the given\n base64Binary item, i.</p>", "annotation_str" : "", "annotations" : [  ], "updating" : false, "parameters" : [ { "name" : "value", "type" : "xs:base64Binary", "occurrence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> The binary item to hash.</div>" } ], "returns" : { "type" : "xs:base64Binary", "description" : "The MD5 hash of the provided binary." }, "errors" : [  ] }, { "isDocumented" : true, "arity" : 1, "name" : "md5", "qname" : "hash:md5", "signature" : "($value as xs:string) as xs:base64Binary", "description" : " Computes the MD5 hash of the string provided as parameter.\n", "summary" : "<p> Computes the MD5 hash of the string provided as parameter.</p>", "annotation_str" : "", "annotations" : [  ], "updating" : false, "parameters" : [ { "name" : "value", "type" : "xs:string", "occurrence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> The string to hash</div>" } ], "returns" : { "type" : "xs:base64Binary", "description" : "The MD5 hash as xs:base64Binary" }, "errors" : [  ] }, { "isDocumented" : true, "arity" : 1, "name" : "sha1-binary", "qname" : "hash:sha1-binary", "signature" : "($value as xs:base64Binary) as xs:base64Binary", "description" : " This function computes the SHA1 hash value of the binary form of the given\n base64Binary item, i.e. the item is base64-decoded before hashing.\n", "summary" : "<p> This function computes the SHA1 hash value of the binary form of the given\n base64Binary item, i.</p>", "annotation_str" : "", "annotations" : [  ], "updating" : false, "parameters" : [ { "name" : "value", "type" : "xs:base64Binary", "occurrence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> The binary item to hash.</div>" } ], "returns" : { "type" : "xs:base64Binary", "description" : "The base64 encoded SHA1 hash of the provided binary." }, "errors" : [  ] }, { "isDocumented" : true, "arity" : 1, "name" : "sha1", "qname" : "hash:sha1", "signature" : "($value as xs:string) as xs:base64Binary", "description" : " Computes the SHA1 hash of the string provided as parameter.\n", "summary" : "<p> Computes the SHA1 hash of the string provided as parameter.</p>", "annotation_str" : "", "annotations" : [  ], "updating" : false, "parameters" : [ { "name" : "value", "type" : "xs:string", "occurrence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> The string to hash.</div>" } ], "returns" : { "type" : "xs:base64Binary", "description" : "The SHA1 hash as xs:base64Binary" }, "errors" : [  ] } ], "variables" : [  ] }, "http://zorba.io/modules/xsl-fo" : { "ns" : "http://zorba.io/modules/xsl-fo", "description" : " This module converts <a xmlns:xqdoc=\"http://www.xqdoc.org/1.0\" href=\"http://www.w3schools.com/xslfo/default.asp\">XSL-FO</a> documents\n to various formats such as PDF, EPS, PCL, AFP, Text, PNG, Postscript, RTF, and TIFF.\n For instance, the following example converts a simple XSL-FO document to PDF:\n <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"/>\n <pre xmlns:xqdoc=\"http://www.xqdoc.org/1.0\" class=\"ace-static\" ace-mode=\"xquery\">import module namespace fop = \"http://zorba.io/modules/xsl-fo\";\n import module namespace file = \"http://expath.org/ns/file\";\n declare namespace fo = \"http://www.w3.org/1999/XSL/Format\";\n let $xsl-fo := &lt;fo:root xmlns:fo=\"http://www.w3.org/1999/XSL/Format\"&gt;\n   &lt;fo:layout-master-set&gt;\n     &lt;fo:simple-page-master master-name=\"my-page\"&gt;\n       &lt;fo:region-body margin=\"1in\"/&gt;\n     &lt;/fo:simple-page-master&gt;\n   &lt;/fo:layout-master-set&gt;\n   &lt;fo:page-sequence master-reference=\"my-page\"&gt;\n     &lt;fo:flow flow-name=\"xsl-region-body\"&gt;\n       &lt;fo:block&gt;Hello, world!&lt;/fo:block&gt;\n     &lt;/fo:flow&gt;\n   &lt;/fo:page-sequence&gt;\n  &lt;/fo:root&gt;\n let $pdf := fop:generator($fop:PDF, $xsl-fo)\n return file:write-binary(\"simple.pdf\", $pdf)</pre>\n <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"/>\n This module uses Apache-FOP to generate content from an XSL-FO document.\n See <a xmlns:xqdoc=\"http://www.xqdoc.org/1.0\" href=\"http://xmlgraphics.apache.org/fop/\">the Apache FOP documentation</a> for further information.\n <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"/>\n <b xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">Note for Windows users</b>: On Windows, this module won't work out of the box, since\n this module uses Java. But the Java VM dll is not in the system path by default. To make\n this module work, you need to add the directory where the jvm.dll is located to the\n system path. This dll is located at JRE_DIR\\bin\\client. On a standard installation, this would\n be something a path like \"C:\\Program Files\\Java\\jre6\\bin\\client\".\n", "sees" : [ "<xqdoc:see xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">http://xmlgraphics.apache.org/fop/</xqdoc:see>" ], "authors" : [ "<xqdoc:author xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">Markus Pilman</xqdoc:author>" ], "version" : null, "encoding" : "utf-8", "namespaces" : [ { "uri" : "http://www.w3.org/2005/xqt-errors", "prefix" : "err" }, { "uri" : "http://www.zorba-xquery.com/modules/util-jvm", "prefix" : "util-jvm" }, { "uri" : "http://zorba.io/options/versioning", "prefix" : "ver" }, { "uri" : "http://zorba.io/modules/xsl-fo", "prefix" : "xsl-fo" } ], "functions" : [ { "isDocumented" : true, "arity" : 2, "name" : "generator", "qname" : "xsl-fo:generator", "signature" : "($output-format as xs:string, $xsl-fo-document as node()) as xs:base64Binary", "description" : " The generator function takes an XSL-FO document as input and generates output\n in the format given as input.\n The output format can be given as a MIME type - for example \"application/pdf\"\n - or one of the predefined variables can be used - like $xsl-fo:PDF. Please\n refer to the Apache FOP documentation for\n <a xmlns:xqdoc=\"http://www.xqdoc.org/1.0\" href=\"http://xmlgraphics.apache.org/fop/0.95/output.html\">supported output formats</a>.\n Apache FOP does not support 100% of the XSL-FO standard.\n Please consult the <a xmlns:xqdoc=\"http://www.xqdoc.org/1.0\" href=\"http://xmlgraphics.apache.org/fop/\">official\n documentation for further information</a>.\n This function tries to find the needed Java libraries itself.<p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"/>\n On a Mac OS X computer, it should be sufficient to install Apache FOP via Mac\n Ports.<p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"/>\n On Ubuntu it should be sufficient to install the fop packages via apt-get.<p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"/>\n On Windows, the classpath needs to be set manually using\n <a xmlns:xqdoc=\"http://www.xqdoc.org/1.0\" href=\"#generator#3\">generator#3</a>.<p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"/>\n This function tries to find the jar files via environment variables. The user can set the\n variable FOP_HOME to the root directory of an Apache FOP distribution. If you have all\n JAR files in the same directory, you can set the environment variable FOP_LIB_DIR to this\n directory.\n", "summary" : "<p> The generator function takes an XSL-FO document as input and generates output\n in the format given as input.</p>", "annotation_str" : "", "annotations" : [  ], "updating" : false, "parameters" : [ { "name" : "output-format", "type" : "xs:string", "occurrence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> The mime of the output format, to tell Apache FOP which kind of document it should create.</div>" }, { "name" : "xsl-fo-document", "type" : "node()", "occurrence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> The XSL-FO document from which the output should be generated.</div>" } ], "returns" : { "type" : "xs:base64Binary", "description" : "The generated output document." }, "errors" : [ "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">xsl-fo:JVM-NOT-STARTED If zorba was unable to start the JVM.</xqdoc:error>", "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">xsl-fo:JAVA-EXCEPTION If Apache FOP throws an exception - i.e. if the input format is not correct/supported.</xqdoc:error>", "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">xsl-fo:JAR-NOT-FOUND If a needed Java library could not be found.</xqdoc:error>" ] } ], "variables" : [ { "name" : "xsl-fo:AFP", "type" : "xs:string", "description" : " The mime type of IBMs AFP format (application/x-afp).\n" }, { "name" : "xsl-fo:EPS", "type" : "xs:string", "description" : " The mime type of the EPS format (application/postscript).\n" }, { "name" : "xsl-fo:PCL", "type" : "xs:string", "description" : " The mime type of the PCL format (application/x-pcl).\n" }, { "name" : "xsl-fo:PDF", "type" : "xs:string", "description" : " The mime type of the PDF format (application/pdf).\n" }, { "name" : "xsl-fo:PLAIN_TEXT", "type" : "xs:string", "description" : " The mime type for plain text files (text/plain).\n" }, { "name" : "xsl-fo:PNG", "type" : "xs:string", "description" : " The mime type of the PNG format (image/png).\n" }, { "name" : "xsl-fo:POSTSCRIPT", "type" : "xs:string", "description" : " The mime type of the postscript format (application/postscript).\n" }, { "name" : "xsl-fo:RTF", "type" : "xs:string", "description" : " The mime type of the RTF format (application/rtf).\n" }, { "name" : "xsl-fo:TIFF", "type" : "xs:string", "description" : " The mime type of TIFF format (application/tiff).\n" } ] }, "http://zorba.io/warnings" : { "ns" : "http://zorba.io/warnings", "description" : " This module contains one variable declaration for each diagnostic of the\n http://zorba.io/warnings namespace.\n The variables serves as documentation for the errors but can also\n be used in the code. For example, one useful scenario is to compare\n an error caught in the catch clause of a try-catch expression with one of\n the variables.\n", "sees" : [  ], "authors" : [ "<xqdoc:author xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">Carlos Lopez</xqdoc:author>" ], "version" : null, "encoding" : "utf-8", "namespaces" : [ { "uri" : "http://zorba.io/warnings", "prefix" : "zwarn" } ], "functions" : [  ], "variables" : [ { "name" : "zwarn:NS", "type" : "item()*", "description" : "" }, { "name" : "zwarn:ZWST0002", "type" : "xs:QName", "description" : " This warning is reported if the declaration of a function, variable,\n collection, or index contains an annotation that is not in the\n http://zorba.io/annotations namespace and Zorba doesn't know how to\n handle.\n" }, { "name" : "zwarn:ZWST0003", "type" : "item()*", "description" : "" }, { "name" : "zwarn:ZWST0004", "type" : "item()*", "description" : "" }, { "name" : "zwarn:ZWST0005", "type" : "xs:QName", "description" : " This warning is raised if the user explicitly enables caching\n of function results (using the %an:cache or %an:strictlydeterministic\n annotation) but the function cannot be cached.\n For %an:cache this happens if the function is updating or variadic.\n For %an:strictlydeterministic this happens if the function is updating,\n variadic or sequential.\n" }, { "name" : "zwarn:ZWST0006", "type" : "xs:QName", "description" : " This warning is raised if the user explicitly enables caching\n of function results (using the %an:cache annotation) and the function\n is annotated as sequential or nondeterministic.\n" }, { "name" : "zwarn:ZWST0007", "type" : "item()*", "description" : "" }, { "name" : "zwarn:ZWST0008", "type" : "item()*", "description" : "" }, { "name" : "zwarn:ZWST0009", "type" : "xs:QName", "description" : " This warning is enabled when the \"common-language\" option is employed. It will raise warnings\n for language features that are not supported by both XQuery and JSONiq grammars.\n" } ] }, "http://www.28msec.com/modules/sparql" : { "ns" : "http://www.28msec.com/modules/sparql", "description" : " This module contains functions to interact with a SPARQL endpoint.\n Requests to an endpoint are made using HTTP.\n Specifically, this module allows SELECT, ASK, CONSTRUCT and DESCRIBE queries. Additionally, it also allows for UPDATE statements.\n Various result formats are supported (e.g. XML, JSON, CSV)\n <h2 xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">Configuration</h2>\n For this module you may use a preconfigured default or named datasource of the SPARQL category.\n You can also provide a configuration object directly.\n <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">As config parameter you can either pass a string that will be interpreted as a SPARQL endpoint datasource name or\n  an object with the following properties:\n <ul>\n  <li><tt>href</tt>: The URL of the SPARQL endpoint to use. Required.</li>\n  <li><tt>auth_method</tt>: The HTTP authentication method to use.</li>\n  <li><tt>username</tt>: The username to use for HTTP authentication.</li>\n  <li><tt>password</tt>: The password to use for HTTP authentication.</li>\n </ul>\n </p>\n <h2 xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">Options</h2>\n <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">The options object that can be passed to plenty of the functions in this module. It may have the following properties:\n <ul>\n   <li><tt>default-graph-uri</tt>: A string or an array of strings with the graph URIs to be used by the query.</li>\n   <li><tt>named-graph-uri</tt>: A string or an array of strings with the named graph URIs to be used by the query.</li>\n   <li><tt>using-graph-uri</tt>: A string or an array of strings with the graph URIs to be used by an update statement.</li>\n   <li><tt>using-named-graph-uri</tt>: A string or an array of strings with the named graph URIs to be used by an update statement.</li>\n   <li><tt>method</tt>: The request method to be used. Available method values are $sparql:METHOD-GET, $sparql:METHOD-POST-URLENCODED or $sparql:METHOD-POST-SPARQL.</li>\n   <li><tt>format</tt> : The result format to request. Possible format values are $sparql:FORMAT-XML, $sparql:FORMAT-JSON, $sparql:FORMAT-CSV, $sparql:FORMAT-TSV, $sparql:FORMAT-ANY. For CONSTRUCT or DESCRIBE queries $sparql:FORMAT-RDF is available.</li>\n   <li><tt>parameters</tt>: Many SPARQL endpoints support additional parameters which are not part of the SPARQL endpoint specification. They can be provided here.</li>\n   <li><tt>http-headers</tt>: object that will be used as the headers property for the requests made by the http-client.</li>\n   <li><tt>http-options</tt>: object that will be used as the options property for the requests made by the http-client.</li>\n  </ul>\n <p>All those properties are optional.</p>\n </p>\n", "sees" : [  ], "authors" : [ "<xqdoc:author xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">Alexander.Kreutz@28msec.com</xqdoc:author>" ], "version" : null, "encoding" : "utf-8", "namespaces" : [ { "uri" : "", "prefix" : "an" }, { "uri" : "http://www.28msec.com/modules/credentials", "prefix" : "credentials" }, { "uri" : "http://zorba.io/modules/http-client", "prefix" : "http-client" }, { "uri" : "http://www.w3.org/1999/02/22-rdf-syntax-ns#", "prefix" : "rdf" }, { "uri" : "http://www.w3.org/2005/sparql-results#", "prefix" : "s" }, { "uri" : "http://www.28msec.com/modules/sparql", "prefix" : "sparql" }, { "uri" : "http://zorba.io/options/versioning", "prefix" : "ver" } ], "functions" : [ { "isDocumented" : true, "arity" : 1, "name" : "ask", "qname" : "sparql:ask", "signature" : "($query as string) as xs:boolean", "description" : " <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">\n This function sends a SPARQL ASK query to an endpoint and returns the result as boolean value.\n The default datasource for SPARQL will be used.\n </p>\n", "summary" : "<p>  \n This function sends a SPARQL ASK query to an endpoint and returns the result as boolean value.</p>", "annotation_str" : "", "annotations" : [  ], "updating" : false, "parameters" : [ { "name" : "query", "type" : "string", "occurrence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> A SPARQL ASK query as string.</div>" } ], "returns" : { "type" : "xs:boolean", "description" : "The boolean ASK query result." }, "errors" : [  ] }, { "isDocumented" : true, "arity" : 2, "name" : "ask", "qname" : "sparql:ask", "signature" : "($query as string, $options as object()?) as xs:boolean", "description" : " <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">\n This function sends a SPARQL ASK query to an endpoint and returns the result as boolean value.\n The default datasource for SPARQL will be used.\n </p>\n <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">\n   <ul>\n    <li>The <tt>default-graph-uri</tt> and <tt>named-graph-uri</tt> properties of the options object may be used to pass default graph URIs or named graph URIs to the endpoint.</li>\n    <li>The <tt>method</tt> property of the options object may be used to set the request method to be used. GET will be used as default.</li>\n    <li>The <tt>format</tt> property of the options object may be used to request a specific result format. However this function will try to extract only the boolean answer from the result.</li>\n   </ul>\n </p>\n", "summary" : "<p>  \n This function sends a SPARQL ASK query to an endpoint and returns the result as boolean value.</p>", "annotation_str" : "", "annotations" : [  ], "updating" : false, "parameters" : [ { "name" : "query", "type" : "string", "occurrence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> A SPARQL ASK query as string.</div>" }, { "name" : "options", "type" : "object()", "occurrence" : "?", "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> An optional options object as described in the module description.</div>" } ], "returns" : { "type" : "xs:boolean", "description" : "The boolean ASK query result." }, "errors" : [  ] }, { "isDocumented" : true, "arity" : 3, "name" : "ask", "qname" : "sparql:ask", "signature" : "($config as item()?, $query as string, $options as object()?) as xs:boolean", "description" : " <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">\n This function sends a SPARQL ASK query to an endpoint and returns the result as boolean value.\n </p>\n <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">\n   <ul>\n    <li>The <tt>default-graph-uri</tt> and <tt>named-graph-uri</tt> properties of the options object may be used to pass default graph URIs or named graph URIs to the endpoint.</li>\n    <li>The <tt>method</tt> property of the options object may be used to set the request method to be used. GET will be used as default.</li>\n    <li>The <tt>format</tt> property of the options object may be used to request a specific result format. However this function will try to extract only the boolean answer from the result.</li>\n   </ul>\n </p>\n", "summary" : "<p>  \n This function sends a SPARQL ASK query to an endpoint and returns the result as boolean value.</p>", "annotation_str" : "", "annotations" : [  ], "updating" : false, "parameters" : [ { "name" : "config", "type" : "item()", "occurrence" : "?", "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> The name of the credentials to use as string or a config object as described in the module description.</div>" }, { "name" : "query", "type" : "string", "occurrence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> A SPARQL ASK query as string.</div>" }, { "name" : "options", "type" : "object()", "occurrence" : "?", "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> An optional options object as described in the module description.</div>" } ], "returns" : { "type" : "xs:boolean", "description" : "The boolean ASK query result." }, "errors" : [ "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">sparql:INVALID-RESPONSE-TYPE if the response format cannot be handled by this function</xqdoc:error>", "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">sparql:ERROR if any http or endpoint error occurs</xqdoc:error>", "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">sparql:INVALID-PARAMETER invalid option specification</xqdoc:error>", "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">sparql:CREDENTIALS-NOT-FOUND credential information not found</xqdoc:error>", "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">sparql:CREDENTIALS-INVALID credential information not valid</xqdoc:error>" ] }, { "isDocumented" : true, "arity" : 1, "name" : "query-json", "qname" : "sparql:query-json", "signature" : "($query as string) as object()", "description" : " <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">\n This function sends a SPARQL SELECT or ASK query to an endpoint and returns the query response as SPARQL JSON format object.\n If the endpoint fails to deliver SPARQL JSON result format this function will try to convert the results to JSON if possible.\n The default datasource for SPARQL will be used.\n </p>\n <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">Link to the specification of the result format at W3C: <a href=\"http://www.w3.org/TR/sparql11-results-json\" target=\"_blank\">SPARQL 1.1 Query Results JSON Format</a></p>\n", "summary" : "<p>  \n This function sends a SPARQL SELECT or ASK query to an endpoint and returns the query response as SPARQL JSON format object.</p>", "annotation_str" : "", "annotations" : [  ], "updating" : false, "parameters" : [ { "name" : "query", "type" : "string", "occurrence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> A SPARQL SELECT or ASK query as string.</div>" } ], "returns" : { "type" : "object()", "description" : "The query result in SPARQL JSON format." }, "errors" : [  ] }, { "isDocumented" : true, "arity" : 2, "name" : "query-json", "qname" : "sparql:query-json", "signature" : "($query as string, $options as object()?) as object()", "description" : " <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">\n This function sends a SPARQL SELECT or ASK query to an endpoint and returns the query response as SPARQL JSON format object.\n If the endpoint fails to deliver SPARQL JSON result format this function will try to convert the results to JSON if possible.\n The default datasource for SPARQL will be used.\n </p>\n <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">Link to the specification of the result format at W3C: <a href=\"http://www.w3.org/TR/sparql11-results-json\" target=\"_blank\">SPARQL 1.1 Query Results JSON Format</a></p>\n <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">\n   <ul>\n    <li>The <tt>default-graph-uri</tt> and <tt>named-graph-uri</tt> properties of the options object may be used to pass default graph URIs or named graph URIs to the endpoint.</li>\n    <li>The <tt>method</tt> property of the options object may be used to set the request method to be used. GET will be used as default.</li>\n    <li>The <tt>format</tt> property of the options object will be ignored. \"application/sparql-results+json\" will be requested as result format. </li>\n   </ul>\n </p>\n", "summary" : "<p>  \n This function sends a SPARQL SELECT or ASK query to an endpoint and returns the query response as SPARQL JSON format object.</p>", "annotation_str" : "", "annotations" : [  ], "updating" : false, "parameters" : [ { "name" : "query", "type" : "string", "occurrence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> A SPARQL SELECT or ASK query as string.</div>" }, { "name" : "options", "type" : "object()", "occurrence" : "?", "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> An optional options object as described in the module description.</div>" } ], "returns" : { "type" : "object()", "description" : "The query result in SPARQL JSON format." }, "errors" : [  ] }, { "isDocumented" : true, "arity" : 3, "name" : "query-json", "qname" : "sparql:query-json", "signature" : "($config as item()?, $query as string, $options as object()?) as object()", "description" : " <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">\n This function sends a SPARQL SELECT or ASK query to an endpoint and returns the query response as SPARQL JSON format object.\n If the endpoint fails to deliver SPARQL JSON result format this function will try to convert the results to JSON if possible.\n </p>\n <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">Link to the specification of the result format at W3C: <a href=\"http://www.w3.org/TR/sparql11-results-json\" target=\"_blank\">SPARQL 1.1 Query Results JSON Format</a></p>\n <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">\n   <ul>\n    <li>The <tt>default-graph-uri</tt> and <tt>named-graph-uri</tt> properties of the options object may be used to pass default graph URIs or named graph URIs to the endpoint.</li>\n    <li>The <tt>method</tt> property of the options object may be used to set the request method to be used. GET will be used as default.</li>\n    <li>The <tt>format</tt> property of the options object will be ignored. \"application/sparql-results+json\" will be requested as result format. </li>\n   </ul>\n </p>\n", "summary" : "<p>  \n This function sends a SPARQL SELECT or ASK query to an endpoint and returns the query response as SPARQL JSON format object.</p>", "annotation_str" : "", "annotations" : [  ], "updating" : false, "parameters" : [ { "name" : "config", "type" : "item()", "occurrence" : "?", "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> The name of the credentials to use as string or a config object as described in the module description.</div>" }, { "name" : "query", "type" : "string", "occurrence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> A SPARQL SELECT or ASK query as string.</div>" }, { "name" : "options", "type" : "object()", "occurrence" : "?", "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> An optional options object as described in the module description.</div>" } ], "returns" : { "type" : "object()", "description" : "The query result in SPARQL JSON format." }, "errors" : [ "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">sparql:INVALID-RESPONSE-TYPE if the response format cannot be handled by this function</xqdoc:error>", "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">sparql:ERROR if any http or endpoint error occurs</xqdoc:error>", "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">sparql:INVALID-PARAMETER invalid option specification</xqdoc:error>", "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">sparql:CREDENTIALS-NOT-FOUND credential information not found</xqdoc:error>", "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">sparql:CREDENTIALS-INVALID credential information not valid</xqdoc:error>" ] }, { "isDocumented" : true, "arity" : 1, "name" : "query-rdf", "qname" : "sparql:query-rdf", "signature" : "($query as string) as element(rdf:RDF)", "description" : " <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">\n This function sends a SPARQL CONSTRUCT or DESCRIBE query to an endpoint and returns the query response as RDF.\n The default datasource for SPARQL will be used.\n </p>\n <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">Link to the specification of the result format at W3C: <a href=\"http://www.w3.org/TR/rdf-syntax-grammar\" target=\"_blank\">RDF/XML Syntax Specification</a></p>\n", "summary" : "<p>  \n This function sends a SPARQL CONSTRUCT or DESCRIBE query to an endpoint and returns the query response as RDF.</p>", "annotation_str" : "", "annotations" : [  ], "updating" : false, "parameters" : [ { "name" : "query", "type" : "string", "occurrence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> A SPARQL CONSTRUCT or DESCRIBE query as string.</div>" } ], "returns" : { "type" : "element(rdf:RDF)", "description" : "The query result as RDF XML element." }, "errors" : [  ] }, { "isDocumented" : true, "arity" : 2, "name" : "query-rdf", "qname" : "sparql:query-rdf", "signature" : "($query as string, $options as object()?) as element(rdf:RDF)", "description" : " <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">\n This function sends a SPARQL CONSTRUCT or DESCRIBE query to an endpoint and returns the query response as RDF.\n The default datasource for SPARQL will be used.\n </p>\n <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">Link to the specification of the result format at W3C: <a href=\"http://www.w3.org/TR/rdf-syntax-grammar\" target=\"_blank\">RDF/XML Syntax Specification</a></p>\n <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">\n   <ul>\n    <li>The <tt>default-graph-uri</tt> and <tt>named-graph-uri</tt> properties of the options object may be used to pass default graph URIs or named graph URIs to the endpoint.</li>\n    <li>The <tt>method</tt> property of the options object may be used to set the request method to be used. GET will be used as default.</li>\n    <li>The <tt>format</tt> property of the options object will be ignored. \"application/rdf+xml\" will be requested as result format. </li>\n   </ul>\n </p>\n", "summary" : "<p>  \n This function sends a SPARQL CONSTRUCT or DESCRIBE query to an endpoint and returns the query response as RDF.</p>", "annotation_str" : "", "annotations" : [  ], "updating" : false, "parameters" : [ { "name" : "query", "type" : "string", "occurrence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> A SPARQL CONSTRUCT or DESCRIBE query as string.</div>" }, { "name" : "options", "type" : "object()", "occurrence" : "?", "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> An optional options object as described in the module description.</div>" } ], "returns" : { "type" : "element(rdf:RDF)", "description" : "The query result as RDF XML element." }, "errors" : [  ] }, { "isDocumented" : true, "arity" : 3, "name" : "query-rdf", "qname" : "sparql:query-rdf", "signature" : "($config as item()?, $query as string, $options as object()?) as element(rdf:RDF)", "description" : " <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">\n This function sends a SPARQL CONSTRUCT or DESCRIBE query to an endpoint and returns the query response as RDF.\n </p>\n <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">Link to the specification of the result format at W3C: <a href=\"http://www.w3.org/TR/rdf-syntax-grammar\" target=\"_blank\">RDF/XML Syntax Specification</a></p>\n <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">\n   <ul>\n    <li>The <tt>default-graph-uri</tt> and <tt>named-graph-uri</tt> properties of the options object may be used to pass default graph URIs or named graph URIs to the endpoint.</li>\n    <li>The <tt>method</tt> property of the options object may be used to set the request method to be used. GET will be used as default.</li>\n    <li>The <tt>format</tt> property of the options object will be ignored. \"application/rdf+xml\" will be requested as result format. </li>\n   </ul>\n </p>\n", "summary" : "<p>  \n This function sends a SPARQL CONSTRUCT or DESCRIBE query to an endpoint and returns the query response as RDF.</p>", "annotation_str" : "", "annotations" : [  ], "updating" : false, "parameters" : [ { "name" : "config", "type" : "item()", "occurrence" : "?", "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> The name of the credentials to use as string or a config object as described in the module description.</div>" }, { "name" : "query", "type" : "string", "occurrence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> A SPARQL CONSTRUCT or DESCRIBE query as string.</div>" }, { "name" : "options", "type" : "object()", "occurrence" : "?", "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> An optional options object as described in the module description.</div>" } ], "returns" : { "type" : "element(rdf:RDF)", "description" : "The query result as RDF XML element." }, "errors" : [ "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">sparql:INVALID-RESPONSE-TYPE if the response format cannot be handled by this function</xqdoc:error>", "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">sparql:ERROR if any http or endpoint error occurs</xqdoc:error>", "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">sparql:INVALID-PARAMETER invalid option specification</xqdoc:error>", "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">sparql:CREDENTIALS-NOT-FOUND credential information not found</xqdoc:error>", "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">sparql:CREDENTIALS-INVALID credential information not valid</xqdoc:error>" ] }, { "isDocumented" : true, "arity" : 1, "name" : "query-xml", "qname" : "sparql:query-xml", "signature" : "($query as string) as element(s:sparql)", "description" : " <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">\n This function sends a SPARQL SELECT or ASK query to an endpoint and returns the query response as SPARQL XML format element.\n If the endpoint fails to deliver SPARQL XML result format this function will try to convert the results to XML if possible.\n The default datasource for SPARQL will be used.\n </p>\n <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">Link to the specification of the result format at W3C: <a href=\"http://www.w3.org/TR/rdf-sparql-XMLres/\" target=\"_blank\">SPARQL Query Results XML Format</a></p>\n", "summary" : "<p>  \n This function sends a SPARQL SELECT or ASK query to an endpoint and returns the query response as SPARQL XML format element.</p>", "annotation_str" : "", "annotations" : [  ], "updating" : false, "parameters" : [ { "name" : "query", "type" : "string", "occurrence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> A SPARQL SELECT or ASK query as string.</div>" } ], "returns" : { "type" : "element(s:sparql)", "description" : "The query result in SPARQL XML format." }, "errors" : [  ] }, { "isDocumented" : true, "arity" : 2, "name" : "query-xml", "qname" : "sparql:query-xml", "signature" : "($query as string, $options as object()?) as element(s:sparql)", "description" : " <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">\n This function sends a SPARQL SELECT or ASK query to an endpoint and returns the query response as SPARQL XML format element.\n If the endpoint fails to deliver SPARQL XML result format this function will try to convert the results to XML if possible.\n The default datasource for SPARQL will be used.\n </p>\n <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">Link to the specification of the result format at W3C: <a href=\"http://www.w3.org/TR/rdf-sparql-XMLres/\" target=\"_blank\">SPARQL Query Results XML Format</a></p>\n <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">\n   <ul>\n    <li>The <tt>default-graph-uri</tt> and <tt>named-graph-uri</tt> properties of the options object may be used to pass default graph URIs or named graph URIs to the endpoint.</li>\n    <li>The <tt>method</tt> property of the options object may be used to set the request method to be used. GET will be used as default.</li>\n    <li>The <tt>format</tt> property of the options object will be ignored. \"application/sparql-results+xml\" will be requested as result format. </li>\n   </ul>\n </p>\n", "summary" : "<p>  \n This function sends a SPARQL SELECT or ASK query to an endpoint and returns the query response as SPARQL XML format element.</p>", "annotation_str" : "", "annotations" : [  ], "updating" : false, "parameters" : [ { "name" : "query", "type" : "string", "occurrence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> A SPARQL SELECT or ASK query as string.</div>" }, { "name" : "options", "type" : "object()", "occurrence" : "?", "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> An optional options object as described in the module description.</div>" } ], "returns" : { "type" : "element(s:sparql)", "description" : "The query result in SPARQL XML format." }, "errors" : [  ] }, { "isDocumented" : true, "arity" : 3, "name" : "query-xml", "qname" : "sparql:query-xml", "signature" : "($config as item()?, $query as string, $options as object()?) as element(s:sparql)", "description" : " <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">\n This function sends a SPARQL SELECT or ASK query to an endpoint and returns the query response as SPARQL XML format element.\n If the endpoint fails to deliver SPARQL XML result format this function will try to convert the results to XML if possible.\n </p>\n <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">Link to the specification of the result format at W3C: <a href=\"http://www.w3.org/TR/rdf-sparql-XMLres/\" target=\"_blank\">SPARQL Query Results XML Format</a></p>\n <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">\n   <ul>\n    <li>The <tt>default-graph-uri</tt> and <tt>named-graph-uri</tt> properties of the options object may be used to pass default graph URIs or named graph URIs to the endpoint.</li>\n    <li>The <tt>method</tt> property of the options object may be used to set the request method to be used. GET will be used as default.</li>\n    <li>The <tt>format</tt> property of the options object will be ignored. \"application/sparql-results+xml\" will be requested as result format. </li>\n   </ul>\n </p>\n", "summary" : "<p>  \n This function sends a SPARQL SELECT or ASK query to an endpoint and returns the query response as SPARQL XML format element.</p>", "annotation_str" : "", "annotations" : [  ], "updating" : false, "parameters" : [ { "name" : "config", "type" : "item()", "occurrence" : "?", "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> The name of the credentials to use as string or a config object as described in the module description.</div>" }, { "name" : "query", "type" : "string", "occurrence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> A SPARQL SELECT or ASK query as string.</div>" }, { "name" : "options", "type" : "object()", "occurrence" : "?", "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> An optional options object as described in the module description.</div>" } ], "returns" : { "type" : "element(s:sparql)", "description" : "The query result in SPARQL XML format." }, "errors" : [ "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">sparql:INVALID-RESPONSE-TYPE if the response format cannot be handled by this function</xqdoc:error>", "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">sparql:ERROR if any http or endpoint error occurs</xqdoc:error>", "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">sparql:INVALID-PARAMETER invalid option specification</xqdoc:error>", "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">sparql:CREDENTIALS-NOT-FOUND credential information not found</xqdoc:error>", "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">sparql:CREDENTIALS-INVALID credential information not valid</xqdoc:error>" ] }, { "isDocumented" : true, "arity" : 1, "name" : "query", "qname" : "sparql:query", "signature" : "($query as string) as object()", "description" : " <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">\n This function sends a SPARQL query to an endpoint and directly returns the corresponding HTTP response.\n The default datasource for SPARQL will be used.\n </p>\n", "summary" : "<p>  \n This function sends a SPARQL query to an endpoint and directly returns the corresponding HTTP response.</p>", "annotation_str" : "", "annotations" : [  ], "updating" : false, "parameters" : [ { "name" : "query", "type" : "string", "occurrence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> A SPARQL query as string. May be any kind of query but not an update.</div>" } ], "returns" : { "type" : "object()", "description" : "The endpoints response. This function returns the plain response object from the http-client." }, "errors" : [  ] }, { "isDocumented" : true, "arity" : 2, "name" : "query", "qname" : "sparql:query", "signature" : "($query as string, $options as object()?) as object()", "description" : " <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">\n This function sends a SPARQL query to an endpoint and directly returns the corresponding HTTP response.\n The default datasource for SPARQL will be used.\n </p>\n <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">\n   <ul>\n    <li>The <tt>default-graph-uri</tt> and <tt>named-graph-uri</tt> properties of the options object may be used to pass default graph URIs or named graph URIs to the endpoint.</li>\n    <li>The <tt>method</tt> property of the options object may be used to set the request method to be used. GET will be used as default.</li>\n    <li>The <tt>format</tt> property of the options object may be used to request a specific result format. XML will be used as default. However, note that this function does not interpret the result.</li>\n   </ul>\n </p>\n", "summary" : "<p>  \n This function sends a SPARQL query to an endpoint and directly returns the corresponding HTTP response.</p>", "annotation_str" : "", "annotations" : [  ], "updating" : false, "parameters" : [ { "name" : "query", "type" : "string", "occurrence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> A SPARQL query as string. May be any kind of query but not an update.</div>" }, { "name" : "options", "type" : "object()", "occurrence" : "?", "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> An optional options object as described in the module description.</div>" } ], "returns" : { "type" : "object()", "description" : "The endpoints response. This function returns the plain response object from the http-client." }, "errors" : [  ] }, { "isDocumented" : true, "arity" : 3, "name" : "query", "qname" : "sparql:query", "signature" : "($config as item()?, $query as string, $options as object()?) as object()", "description" : " <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">\n This function sends a SPARQL query to an endpoint and directly returns the corresponding HTTP response.\n </p>\n <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">\n   <ul>\n    <li>The <tt>default-graph-uri</tt> and <tt>named-graph-uri</tt> properties of the options object may be used to pass default graph URIs or named graph URIs to the endpoint.</li>\n    <li>The <tt>method</tt> property of the options object may be used to set the request method to be used. GET will be used as default.</li>\n    <li>The <tt>format</tt> property of the options object may be used to request a specific result format. XML will be used as default. However, note that this function does not interpret the result.</li>\n   </ul>\n </p>\n", "summary" : "<p>  \n This function sends a SPARQL query to an endpoint and directly returns the corresponding HTTP response.</p>", "annotation_str" : "", "annotations" : [  ], "updating" : false, "parameters" : [ { "name" : "config", "type" : "item()", "occurrence" : "?", "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> The name of the credentials to use as string or a config object as described in the module description.</div>" }, { "name" : "query", "type" : "string", "occurrence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> A SPARQL query as string. May be any kind of query but not an update.</div>" }, { "name" : "options", "type" : "object()", "occurrence" : "?", "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> An optional options object as described in the module description.</div>" } ], "returns" : { "type" : "object()", "description" : "The endpoints response. This function returns the plain response object from the http-client." }, "errors" : [ "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">sparql:INVALID-PARAMETER invalid option specification</xqdoc:error>", "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">sparql:CREDENTIALS-NOT-FOUND credential information not found</xqdoc:error>", "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">sparql:CREDENTIALS-INVALID credential information not valid</xqdoc:error>" ] }, { "isDocumented" : true, "arity" : 1, "name" : "update", "qname" : "sparql:update", "signature" : "($update-statement as string) as object()", "description" : " <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">\n This function sends a SPARQL update statement to an endpoint and directly returns the corresponding HTTP response.\n The default datasource for SPARQL will be used.\n </p>\n", "summary" : "<p>  \n This function sends a SPARQL update statement to an endpoint and directly returns the corresponding HTTP response.</p>", "annotation_str" : " %an:sequential", "annotations" : [ { "prefix" : "an", "ns" : "", "name" : "sequential", "value" : "" } ], "updating" : false, "parameters" : [ { "name" : "update-statement", "type" : "string", "occurrence" : null, "description" : "" } ], "returns" : { "type" : "object()", "description" : "The endpoints response. This function returns the plain response object from the http-client." }, "errors" : [  ] }, { "isDocumented" : true, "arity" : 2, "name" : "update", "qname" : "sparql:update", "signature" : "($update-statement as string, $options as object()?) as object()", "description" : " <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">\n This function sends a SPARQL update statement to an endpoint and directly returns the corresponding HTTP response.\n The default datasource for SPARQL will be used.\n </p>\n <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">\n   <ul>\n    <li>The <tt>using-graph-uri</tt> and <tt>using-named-graph-uri</tt> properties of the options object may be used to pass graph URIs or named graph URIs to the endpoint.</li>\n    <li>The <tt>method</tt> property of the options object may be used to set the request method to be used. POST-URLENCODED will be used as default.</li>\n    <li>The <tt>format</tt> property of the options object may be used to request a specific result format. XML will be used as default. However, note that this function does not interpret the result.</li>\n   </ul>\n </p>\n", "summary" : "<p>  \n This function sends a SPARQL update statement to an endpoint and directly returns the corresponding HTTP response.</p>", "annotation_str" : " %an:sequential", "annotations" : [ { "prefix" : "an", "ns" : "", "name" : "sequential", "value" : "" } ], "updating" : false, "parameters" : [ { "name" : "update-statement", "type" : "string", "occurrence" : null, "description" : "" }, { "name" : "options", "type" : "object()", "occurrence" : "?", "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> An optional options object as described in the module description.</div>" } ], "returns" : { "type" : "object()", "description" : "The endpoints response. This function returns the plain response object from the http-client." }, "errors" : [  ] }, { "isDocumented" : true, "arity" : 3, "name" : "update", "qname" : "sparql:update", "signature" : "($config as item()?, $update-statement as string, $options as object()?) as object()", "description" : " <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">\n This function sends a SPARQL update statement to an endpoint and directly returns the corresponding HTTP response.\n </p>\n <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">\n   <ul>\n    <li>The <tt>using-graph-uri</tt> and <tt>using-named-graph-uri</tt> properties of the options object may be used to pass graph URIs or named graph URIs to the endpoint.</li>\n    <li>The <tt>method</tt> property of the options object may be used to set the request method to be used. POST-URLENCODED will be used as default.</li>\n    <li>The <tt>format</tt> property of the options object may be used to request a specific result format. XML will be used as default. However, note that this function does not interpret the result.</li>\n   </ul>\n </p>\n", "summary" : "<p>  \n This function sends a SPARQL update statement to an endpoint and directly returns the corresponding HTTP response.</p>", "annotation_str" : " %an:sequential", "annotations" : [ { "prefix" : "an", "ns" : "", "name" : "sequential", "value" : "" } ], "updating" : false, "parameters" : [ { "name" : "config", "type" : "item()", "occurrence" : "?", "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> The name of the credentials to use as string or a config object as described in the module description.</div>" }, { "name" : "update-statement", "type" : "string", "occurrence" : null, "description" : "" }, { "name" : "options", "type" : "object()", "occurrence" : "?", "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> An optional options object as described in the module description.</div>" } ], "returns" : { "type" : "object()", "description" : "The endpoints response. This function returns the plain response object from the http-client." }, "errors" : [ "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">sparql:INVALID-PARAMETER invalid option specification</xqdoc:error>", "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">sparql:CREDENTIALS-NOT-FOUND credential information not found</xqdoc:error>", "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">sparql:CREDENTIALS-INVALID credential information not valid</xqdoc:error>" ] } ], "variables" : [ { "name" : "sparql:CREDENTIALS-CATEGORY", "type" : "string", "description" : " This variable represents the category of the datasource.\n" }, { "name" : "sparql:METHOD-GET", "type" : "string", "description" : " This variable represents the request method using HTTP GET requests. May be used for the <tt xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">method</tt> property of the options object.\n" }, { "name" : "sparql:METHOD-POST-URLENCODED", "type" : "string", "description" : " This variable represents the request method using HTTP POST with URL-encoded parameters. May be used for the <tt xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">method</tt> property of the options object.\n" }, { "name" : "sparql:METHOD-POST-SPARQL", "type" : "string", "description" : " This variable represents the request method using HTTP POST with the application/sparql-query content type. May be used for the <tt xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">method</tt> property of the options object.\n" }, { "name" : "sparql:FORMAT-XML", "type" : "string", "description" : " This variable represents the SPARQL XML result format.May be used for the <tt xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">format</tt> property of the options object.\n" }, { "name" : "sparql:FORMAT-JSON", "type" : "string", "description" : " This variable represents the SPARQL JSON result format.May be used for the <tt xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">format</tt> property of the options object.\n" }, { "name" : "sparql:FORMAT-RDF", "type" : "string", "description" : " This variable represents the RDF+XML result format.May be used for the <tt xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">format</tt> property of the options object.\n" }, { "name" : "sparql:FORMAT-CSV", "type" : "string", "description" : " This variable represents the CSV result format.May be used for the <tt xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">format</tt> property of the options object.\n" }, { "name" : "sparql:FORMAT-TSV", "type" : "string", "description" : " This variable represents the TSV result format.May be used for the <tt xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">format</tt> property of the options object.\n" }, { "name" : "sparql:FORMAT-ANY", "type" : "string", "description" : " This variable represents any result format. May be used for the <tt xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">format</tt> property of the options object to not specify a requested format.\n" } ] }, "http://api.28.io/dispatcher" : { "ns" : "http://api.28.io/dispatcher", "description" : "", "sees" : [  ], "authors" : [  ], "version" : null, "encoding" : null, "namespaces" : [ { "uri" : "", "prefix" : "an" }, { "uri" : "http://api.28.io/browserview", "prefix" : "browserview" }, { "uri" : "http://api.28.io/csvview", "prefix" : "csvview" }, { "uri" : "http://api.28.io/dispatcher", "prefix" : "dispatcher" }, { "uri" : "http://api.28.io/functions", "prefix" : "functions" }, { "uri" : "http://api.28.io/model", "prefix" : "model" }, { "uri" : "http://zorba.io/modules/xml", "prefix" : "parse-xml" }, { "uri" : "http://www.zorba-xquery.com/schemas/pul", "prefix" : "pul" }, { "uri" : "http://www.28msec.com/modules/http/request", "prefix" : "req" }, { "uri" : "http://www.28msec.com/modules/http/response", "prefix" : "response" }, { "uri" : "http://www.zorba-xquery.com/schemas/xdm", "prefix" : "xdm" }, { "uri" : "http://api.28.io/xdmview", "prefix" : "xdmview" } ], "functions" : [ { "isDocumented" : true, "arity" : 0, "name" : "restapi", "qname" : "dispatcher:restapi", "signature" : "()", "description" : " Main function for the collection browser. May be called from a handler function.\n Uses the call URL to determine which page needs to be returned.\n The URL for the initial page needs to end with /index\n", "summary" : "<p> Main function for the collection browser.</p>", "annotation_str" : " %an:sequential", "annotations" : [ { "prefix" : "an", "ns" : "", "name" : "sequential", "value" : "" } ], "updating" : false, "parameters" : [  ], "returns" : { "type" : null, "description" : "the requested page of the collection browser" }, "errors" : [  ] } ], "variables" : [  ] }, "http://zorba.io/modules/store/static/collections/ddl" : { "ns" : "http://zorba.io/modules/store/static/collections/ddl", "description" : " This modules defines a set of functions for managing collections that are\n declared in the prolog of a module.\n For example, it provides functions to create, delete, or introspect\n collections.\n <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"/>\n This module is part of <a xmlns:xqdoc=\"http://www.xqdoc.org/1.0\" href=\"../zorba/xqddf.html\">Zorba's XQuery Data\n Definition Facility</a>. All the collections managed by this module\n have to be pre-declared in the prolog of a module. Please refer to the\n <a xmlns:xqdoc=\"http://www.xqdoc.org/1.0\" href=\"../zorba/data_lifecycle.html\">general documentation</a>\n for more information and examples.\n", "sees" : [ "<xqdoc:see xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"><a href=\"../zorba/data_lifecycle.html\">Data Lifecycle</a></xqdoc:see>", "<xqdoc:see xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"><a href=\"../zorba/xqddf.html\">XQuery Data Definition Facility</a></xqdoc:see>", "<xqdoc:see xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">http://zorba.io/modules/store/static/collections/dml</xqdoc:see>", "<xqdoc:see xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">http://zorba.io/modules/store/static/indexes/ddl</xqdoc:see>", "<xqdoc:see xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">http://zorba.io/modules/store/static/indexes/dml</xqdoc:see>", "<xqdoc:see xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">http://zorba.io/modules/store/static/integrity-constraints/ddl</xqdoc:see>", "<xqdoc:see xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">http://zorba.io/modules/store/static/integrity-constraints/dml</xqdoc:see>", "<xqdoc:see xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">http://zorba.io/errors</xqdoc:see>" ], "authors" : [ "<xqdoc:author xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">Nicolae Brinza, Matthias Brantner, David Graf, Till Westmann, Markos Zaharioudakis</xqdoc:author>" ], "version" : null, "encoding" : "utf-8", "namespaces" : [ { "uri" : "http://zorba.io/modules/store/static/collections/ddl", "prefix" : "cddl" }, { "uri" : "http://zorba.io/options/versioning", "prefix" : "ver" }, { "uri" : "http://zorba.io/errors", "prefix" : "zerr" } ], "functions" : [ { "isDocumented" : true, "arity" : 0, "name" : "available-collections", "qname" : "cddl:available-collections", "signature" : "() as xs:QName* external", "description" : " Gets the QNames of the collections that have been statically declared and\n are available, if any.\n", "summary" : "<p> Gets the QNames of the collections that have been statically declared and\n are available, if any.</p>", "annotation_str" : "", "annotations" : [  ], "updating" : false, "parameters" : [  ], "returns" : { "type" : "xs:QName*", "description" : "A sequence comprising one QName for each statically declared and available collection or an emtpy sequence if no such collections are available." }, "errors" : [  ] }, { "isDocumented" : true, "arity" : 1, "name" : "create", "qname" : "cddl:create", "signature" : "($name as xs:QName) external", "description" : " Creates a collection.\n", "summary" : "<p> Creates a collection.</p>", "annotation_str" : "", "annotations" : [  ], "updating" : true, "parameters" : [ { "name" : "name", "type" : "xs:QName", "occurrence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> The of the collection to create.</div>" } ], "returns" : { "type" : null, "description" : "An empty XDM instance and a pending update list that, once applied, creates a collection with the given name." }, "errors" : [ "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">zerr:ZDDY0001 if <code>$name</code> is not equal to any of the declared collections in the static context.</xqdoc:error>", "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">zerr:ZDDY0002 if a collection with <code>$name</code> already exists.</xqdoc:error>" ] }, { "isDocumented" : true, "arity" : 2, "name" : "create", "qname" : "cddl:create", "signature" : "($name as xs:QName, $content as item()*) external", "description" : " Creates a collection and adds the given sequence as content to the new\n collection.\n", "summary" : "<p> Creates a collection and adds the given sequence as content to the new\n collection.</p>", "annotation_str" : "", "annotations" : [  ], "updating" : true, "parameters" : [ { "name" : "name", "type" : "xs:QName", "occurrence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> The name of the collection to create.</div>" }, { "name" : "content", "type" : "item()", "occurrence" : "*", "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> The sequences of items (nodes or JSON items) to be added to the new collection.</div>" } ], "returns" : { "type" : null, "description" : "An empty XDM instance and a pending update list that, once applied, creates a collection with the given name and inserts the given items into it." }, "errors" : [ "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">zerr:ZDDY0001 if <code>$name</code> is not equal to any of the declared collections in the static context.</xqdoc:error>", "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">zerr:ZDDY0002 if a collection with <code>$name</code> already exists.</xqdoc:error>", "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">zerr:ZDTY0001 if <code>$content</code> does not match the expected type declared by the collection according to the rules for SequenceType Matching.</xqdoc:error>" ] }, { "isDocumented" : true, "arity" : 0, "name" : "declared-collections", "qname" : "cddl:declared-collections", "signature" : "() as xs:QName* external", "description" : " Gets the collections that have been declared in the prolog of the static\n context.\n", "summary" : "<p> Gets the collections that have been declared in the prolog of the static\n context.</p>", "annotation_str" : "", "annotations" : [  ], "updating" : false, "parameters" : [  ], "returns" : { "type" : "xs:QName*", "description" : "A sequence of QNames, one for each collection created in the static context, or an emtpy sequence." }, "errors" : [  ] }, { "isDocumented" : true, "arity" : 1, "name" : "delete", "qname" : "cddl:delete", "signature" : "($name as xs:QName) external", "description" : " Deletes a collection.\n", "summary" : "<p> Deletes a collection.</p>", "annotation_str" : "", "annotations" : [  ], "updating" : true, "parameters" : [ { "name" : "name", "type" : "xs:QName", "occurrence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> The collection to delete.</div>" } ], "returns" : { "type" : null, "description" : "An empty XDM instance and a pending update list that, once applied, deletes the collection with the given name." }, "errors" : [ "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">zerr:ZDDY0001 if <code>$name</code> is not equal to any of the declared collections in the static context.</xqdoc:error>", "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">zerr:ZDDY0003 if the collection identified by <code>$name</code> is not available.</xqdoc:error>", "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">zerr:ZDDY0013 if the domain or key expression of any of the available indexes access the collection having <code>$name</code>.</xqdoc:error>", "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">zerr:ZDDY0015 if any of the in-scope variables references an item that belongs to the collection having <code>$name</code></xqdoc:error>" ] }, { "isDocumented" : true, "arity" : 1, "name" : "is-available-collection", "qname" : "cddl:is-available-collection", "signature" : "($name as xs:QName) as xs:boolean external", "description" : " Gets whether a collection is statically declared and available.\n", "summary" : "<p> Gets whether a collection is statically declared and available.</p>", "annotation_str" : "", "annotations" : [  ], "updating" : false, "parameters" : [ { "name" : "name", "type" : "xs:QName", "occurrence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> The name of the collection to check.</div>" } ], "returns" : { "type" : "xs:boolean", "description" : "true if the collection was statically declared and is available; false otherwise." }, "errors" : [  ] }, { "isDocumented" : true, "arity" : 1, "name" : "is-declared-collection", "qname" : "cddl:is-declared-collection", "signature" : "($name as xs:QName) as xs:boolean external", "description" : " Gers whether a collection was declared in the prolog of the static context.\n", "summary" : "<p> Gers whether a collection was declared in the prolog of the static context.</p>", "annotation_str" : "", "annotations" : [  ], "updating" : false, "parameters" : [ { "name" : "name", "type" : "xs:QName", "occurrence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> The name of the collection to check.</div>" } ], "returns" : { "type" : "xs:boolean", "description" : "true if the collection was declared; false otherwise." }, "errors" : [  ] } ], "variables" : [  ] }, "http://www.28msec.com/modules/math" : { "ns" : "http://www.28msec.com/modules/math", "description" : " The functions in this module perform trigonometric and other mathematical\n calculations on double values.\n For a more detailed description of the semantics of each function, please\n refer to <a xmlns:xqdoc=\"http://www.xqdoc.org/1.0\" href=\"http://www.w3.org/TR/xpath-functions-30/#trigonometry\">\n Trigonometric and exponential functions</a>.\n", "sees" : [  ], "authors" : [  ], "version" : null, "encoding" : "utf-8", "namespaces" : [ { "uri" : "http://www.w3.org/2005/xpath-functions/math", "prefix" : "fnmath" }, { "uri" : "http://www.28msec.com/modules/math", "prefix" : "math" }, { "uri" : "http://zorba.io/options/versioning", "prefix" : "ver" } ], "functions" : [ { "isDocumented" : true, "arity" : 1, "name" : "acos", "qname" : "math:acos", "signature" : "($arg as double?) as double?", "description" : " Returns the arc cosine of the argument, the result being in the range zero to +π radians.\n", "summary" : "<p> Returns the arc cosine of the argument, the result being in the range zero to +π radians.</p>", "annotation_str" : "", "annotations" : [  ], "updating" : false, "parameters" : [ { "name" : "arg", "type" : "double", "occurrence" : "?", "description" : "" } ], "returns" : { "type" : "double?", "description" : "" }, "errors" : [  ] }, { "isDocumented" : true, "arity" : 1, "name" : "asin", "qname" : "math:asin", "signature" : "($arg as double?) as double?", "description" : " Returns the arc sine of the argument, the result being in the range -π/2 to +π/2 radians.\n", "summary" : "<p> Returns the arc sine of the argument, the result being in the range -π/2 to +π/2 radians.</p>", "annotation_str" : "", "annotations" : [  ], "updating" : false, "parameters" : [ { "name" : "arg", "type" : "double", "occurrence" : "?", "description" : "" } ], "returns" : { "type" : "double?", "description" : "" }, "errors" : [  ] }, { "isDocumented" : true, "arity" : 1, "name" : "atan", "qname" : "math:atan", "signature" : "($arg as double?) as double?", "description" : " Returns the arc tangent of the argument, the result being in the range -π/2 to +π/2 radians.\n", "summary" : "<p> Returns the arc tangent of the argument, the result being in the range -π/2 to +π/2 radians.</p>", "annotation_str" : "", "annotations" : [  ], "updating" : false, "parameters" : [ { "name" : "arg", "type" : "double", "occurrence" : "?", "description" : "" } ], "returns" : { "type" : "double?", "description" : "" }, "errors" : [  ] }, { "isDocumented" : true, "arity" : 2, "name" : "atan2", "qname" : "math:atan2", "signature" : "($y as double, $x as double) as double", "description" : " Returns the angle in radians subtended at the origin by the point on a plane with\n coordinates (x, y) and the positive x-axis, the result being in the range -π to +π.\n", "summary" : "<p> Returns the angle in radians subtended at the origin by the point on a plane with\n coordinates (x, y) and the positive x-axis, the result being in the range -π to +π.</p>", "annotation_str" : "", "annotations" : [  ], "updating" : false, "parameters" : [ { "name" : "y", "type" : "double", "occurrence" : null, "description" : "" }, { "name" : "x", "type" : "double", "occurrence" : null, "description" : "" } ], "returns" : { "type" : "double", "description" : "" }, "errors" : [  ] }, { "isDocumented" : true, "arity" : 1, "name" : "cos", "qname" : "math:cos", "signature" : "($theta as double?) as double?", "description" : " Returns the cosine of the argument, expressed in radians.\n", "summary" : "<p> Returns the cosine of the argument, expressed in radians.</p>", "annotation_str" : "", "annotations" : [  ], "updating" : false, "parameters" : [ { "name" : "theta", "type" : "double", "occurrence" : "?", "description" : "" } ], "returns" : { "type" : "double?", "description" : "" }, "errors" : [  ] }, { "isDocumented" : true, "arity" : 1, "name" : "exp", "qname" : "math:exp", "signature" : "($arg as double?) as double?", "description" : " Returns the value of ex.\n", "summary" : "<p> Returns the value of ex.</p>", "annotation_str" : "", "annotations" : [  ], "updating" : false, "parameters" : [ { "name" : "arg", "type" : "double", "occurrence" : "?", "description" : "" } ], "returns" : { "type" : "double?", "description" : "" }, "errors" : [  ] }, { "isDocumented" : true, "arity" : 1, "name" : "exp10", "qname" : "math:exp10", "signature" : "($arg as double?) as double?", "description" : " Returns the value of 10x.\n", "summary" : "<p> Returns the value of 10x.</p>", "annotation_str" : "", "annotations" : [  ], "updating" : false, "parameters" : [ { "name" : "arg", "type" : "double", "occurrence" : "?", "description" : "" } ], "returns" : { "type" : "double?", "description" : "" }, "errors" : [  ] }, { "isDocumented" : true, "arity" : 1, "name" : "log", "qname" : "math:log", "signature" : "($arg as double?) as double?", "description" : " Returns the natural logarithm of the argument.\n", "summary" : "<p> Returns the natural logarithm of the argument.</p>", "annotation_str" : "", "annotations" : [  ], "updating" : false, "parameters" : [ { "name" : "arg", "type" : "double", "occurrence" : "?", "description" : "" } ], "returns" : { "type" : "double?", "description" : "" }, "errors" : [  ] }, { "isDocumented" : true, "arity" : 1, "name" : "log10", "qname" : "math:log10", "signature" : "($arg as double?) as double?", "description" : " Returns the base-ten logarithm of the argument.\n", "summary" : "<p> Returns the base-ten logarithm of the argument.</p>", "annotation_str" : "", "annotations" : [  ], "updating" : false, "parameters" : [ { "name" : "arg", "type" : "double", "occurrence" : "?", "description" : "" } ], "returns" : { "type" : "double?", "description" : "" }, "errors" : [  ] }, { "isDocumented" : true, "arity" : 0, "name" : "pi", "qname" : "math:pi", "signature" : "() as double", "description" : " Returns an approximation to the mathematical constant π.\n", "summary" : "<p> Returns an approximation to the mathematical constant π.</p>", "annotation_str" : "", "annotations" : [  ], "updating" : false, "parameters" : [  ], "returns" : { "type" : "double", "description" : "" }, "errors" : [  ] }, { "isDocumented" : true, "arity" : 2, "name" : "pow", "qname" : "math:pow", "signature" : "($x as double?, $y) as double?", "description" : " Returns the result of raising the first argument to the power of the second.\n", "summary" : "<p> Returns the result of raising the first argument to the power of the second.</p>", "annotation_str" : "", "annotations" : [  ], "updating" : false, "parameters" : [ { "name" : "x", "type" : "double", "occurrence" : "?", "description" : "" }, { "name" : "y", "type" : null, "occurrence" : null, "description" : "" } ], "returns" : { "type" : "double?", "description" : "" }, "errors" : [  ] }, { "isDocumented" : true, "arity" : 1, "name" : "sin", "qname" : "math:sin", "signature" : "($theta as double?) as double?", "description" : " Returns the sine of the argument, expressed in radians.\n", "summary" : "<p> Returns the sine of the argument, expressed in radians.</p>", "annotation_str" : "", "annotations" : [  ], "updating" : false, "parameters" : [ { "name" : "theta", "type" : "double", "occurrence" : "?", "description" : "" } ], "returns" : { "type" : "double?", "description" : "" }, "errors" : [  ] }, { "isDocumented" : true, "arity" : 1, "name" : "sqrt", "qname" : "math:sqrt", "signature" : "($arg as double?) as double?", "description" : " Returns the non-negative square root of the argument.\n", "summary" : "<p> Returns the non-negative square root of the argument.</p>", "annotation_str" : "", "annotations" : [  ], "updating" : false, "parameters" : [ { "name" : "arg", "type" : "double", "occurrence" : "?", "description" : "" } ], "returns" : { "type" : "double?", "description" : "" }, "errors" : [  ] }, { "isDocumented" : true, "arity" : 1, "name" : "tan", "qname" : "math:tan", "signature" : "($theta as double?) as double?", "description" : " Returns the tangent of the argument, expressed in radians.\n", "summary" : "<p> Returns the tangent of the argument, expressed in radians.</p>", "annotation_str" : "", "annotations" : [  ], "updating" : false, "parameters" : [ { "name" : "theta", "type" : "double", "occurrence" : "?", "description" : "" } ], "returns" : { "type" : "double?", "description" : "" }, "errors" : [  ] } ], "variables" : [  ] }, "http://zorba.io/modules/data-cleaning/normalization" : { "ns" : "http://zorba.io/modules/data-cleaning/normalization", "description" : " <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">This library module provides data normalization functions for processing calendar dates,\n temporal values, currency values, units of measurement, location names and postal addresses.\n These functions are particularly useful for converting different data representations into cannonical formats.</p>\n <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">The logic contained in this module is not specific to any particular XQuery implementation.</p>\n", "sees" : [  ], "authors" : [ "<xqdoc:author xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">Bruno Martins and Diogo Simões</xqdoc:author>" ], "version" : null, "encoding" : "utf-8", "namespaces" : [ { "uri" : "http://zorba.io/annotations", "prefix" : "an" }, { "uri" : "http://www.zorba-xquery.com/modules/http-client", "prefix" : "http" }, { "uri" : "http://zorba.io/modules/data-cleaning/normalization", "prefix" : "normalization" }, { "uri" : "http://zorba.io/options/versioning", "prefix" : "ver" } ], "functions" : [ { "isDocumented" : true, "arity" : 1, "name" : "normalize-address", "qname" : "normalization:normalize-address", "signature" : "($addr as xs:string*) as xs:string*", "description" : " <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">Uses an address normalization Web service to convert a postal address given as input into a\n cannonical representation format.</p>\n", "summary" : "<p>  Uses an address normalization Web service to convert a postal address given as input into a\n cannonical representation format.</p>", "annotation_str" : " %an:nondeterministic", "annotations" : [ { "prefix" : "an", "ns" : "http://zorba.io/annotations", "name" : "nondeterministic", "value" : "" } ], "updating" : false, "parameters" : [ { "name" : "addr", "type" : "xs:string", "occurrence" : "*", "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> A sequence of strings encoding an address, where each string in the sequence corresponds to a different component (e.g., street, city, country, etc.) of the address.</div>" } ], "returns" : { "type" : "xs:string*", "description" : "A sequence of strings with the address encoded in a cannonical format, where each string in the sequence corresponds to a different component (e.g., street, city, country, etc.) of the address." }, "errors" : [  ] }, { "isDocumented" : true, "arity" : 1, "name" : "normalize-phone", "qname" : "normalization:normalize-phone", "signature" : "($addr as xs:string*) as xs:string*", "description" : " <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">Uses an phone number normalization Web service to convert a phone number given as input into a\n cannonical representation.</p>\n", "summary" : "<p>  Uses an phone number normalization Web service to convert a phone number given as input into a\n cannonical representation.</p>", "annotation_str" : "", "annotations" : [  ], "updating" : false, "parameters" : [ { "name" : "addr", "type" : "xs:string", "occurrence" : "*", "description" : "" } ], "returns" : { "type" : "xs:string*", "description" : "A strings with the phone number encoded in a cannonical format. <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"/> <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"><b> Attention : This function is still not implemented. </b></p>" }, "errors" : [  ] }, { "isDocumented" : true, "arity" : 2, "name" : "to-date", "qname" : "normalization:to-date", "signature" : "($sd as xs:string, $format as xs:string?) as xs:string", "description" : " <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">Converts a given string representation of a date value into a date representation valid according\n to the corresponding XML Schema type.</p>\n", "summary" : "<p>  Converts a given string representation of a date value into a date representation valid according\n to the corresponding XML Schema type.</p>", "annotation_str" : "", "annotations" : [  ], "updating" : false, "parameters" : [ { "name" : "sd", "type" : "xs:string", "occurrence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> The string representation for the date</div>" }, { "name" : "format", "type" : "xs:string", "occurrence" : "?", "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> An optional parameter denoting the format used to represent the date in the string, according to a sequence of conversion specifications. In the format string, a conversion specification is introduced by '%', usually followed by a single letter or 'O' or 'E' and then a single letter. Any character in the format string that is not part of a conversion specification is interpreted literally, and the string '%%' gives '%'. The supported conversion specifications are as follows: <pre> '%b' Abbreviated month name in the current locale. '%B' Full month name in the current locale. '%d' Day of the month as decimal number (01-31). '%m' Month as decimal number (01-12). '%x' Date, locale-specific. '%y' Year without century (00-99). '%Y' Year with century. '%C' Century (00-99): the integer part of the year divided by 100. '%D' Locale-specific date format such as '%m/%d/%y'. '%e' Day of the month as decimal number (1-31), with a leading pace for a single-digit number. '%F' Equivalent to %Y-%m-%d (the ISO 8601 date format). '%h' Equivalent to '%b'. </pre></div>" } ], "returns" : { "type" : "xs:string", "description" : "The date value resulting from the conversion." }, "errors" : [  ] }, { "isDocumented" : true, "arity" : 2, "name" : "to-dateTime", "qname" : "normalization:to-dateTime", "signature" : "($sd as xs:string, $format as xs:string?) as xs:string", "description" : " <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">Converts a given string representation of a dateTime value into a dateTime representation\n valid according to the corresponding XML Schema type.</p>\n", "summary" : "<p>  Converts a given string representation of a dateTime value into a dateTime representation\n valid according to the corresponding XML Schema type.</p>", "annotation_str" : "", "annotations" : [  ], "updating" : false, "parameters" : [ { "name" : "sd", "type" : "xs:string", "occurrence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> The string representation for the dateTime.</div>" }, { "name" : "format", "type" : "xs:string", "occurrence" : "?", "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> An optional parameter denoting the format used to represent the dateTime in the string, according to a sequence of conversion specifications. In the format string, a conversion specification is introduced by '%', usually followed by a single letter or 'O' or 'E' and then a single letter. Any character in the format string that is not part of a conversion specification is interpreted literally, and the string '%%' gives '%'. The supported conversion specifications are as follows: <p/> <pre class=\"ace-static\"> '%b' Abbreviated month name in the current locale. '%B' Full month name in the current locale. '%c' Date and time, locale-specific. '%C' Century (00-99): the integer part of the year divided by 100. '%d' Day of the month as decimal number (01-31). '%H' Hours as decimal number (00-23). '%I' Hours as decimal number (01-12). '%j' Day of year as decimal number (001-366). '%m' Month as decimal number (01-12). '%M' Minute as decimal number (00-59). '%p' AM/PM indicator in the locale. Used in conjunction with '%I' and *not* with '%H'. '%S' Second as decimal number (00-61), allowing for up to two leap-seconds. '%x' Date, locale-specific. '%X' Time, locale-specific. '%y' Year without century (00-99). '%Y' Year with century. '%z' Offset from Greenwich, so '-0900' is 9 hours west of Greenwich. '%Z' Time zone as a character string. '%D' Locale-specific date format such as '%m/%d/%y': ISO C99 says it should be that exact format. '%e' Day of the month as decimal number (1-31), with a leading pace for a single-digit number. '%F' Equivalent to %Y-%m-%d (the ISO 8601 date format). '%g' The last two digits of the week-based year (see '%V'). '%G' The week-based year (see '%V') as a decimal number. '%h' Equivalent to '%b'. '%k' The 24-hour clock time with single digits preceded by a blank. '%l' The 12-hour clock time with single digits preceded by a blank. '%r' The 12-hour clock time (using the locale's AM or PM). '%R' Equivalent to '%H:%M'. '%T' Equivalent to '%H:%M:%S'. </pre></div>" } ], "returns" : { "type" : "xs:string", "description" : "The dateTime value resulting from the conversion." }, "errors" : [ "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">normalization:NOTSUPPORTED if the dateTime type is not known to the service.</xqdoc:error>" ] }, { "isDocumented" : true, "arity" : 2, "name" : "to-time", "qname" : "normalization:to-time", "signature" : "($sd as xs:string, $format as xs:string?) as xs:string?", "description" : " <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">Converts a given string representation of a time value into a time representation valid according to\n the corresponding XML Schema type.</p>\n", "summary" : "<p>  Converts a given string representation of a time value into a time representation valid according to\n the corresponding XML Schema type.</p>", "annotation_str" : "", "annotations" : [  ], "updating" : false, "parameters" : [ { "name" : "sd", "type" : "xs:string", "occurrence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> The string representation for the time.</div>" }, { "name" : "format", "type" : "xs:string", "occurrence" : "?", "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> An optional parameter denoting the format used to represent the time in the string, according to a sequence of conversion specifications. In the format string, a conversion specification is introduced by '%', usually followed by a single letter or 'O' or 'E' and then a single letter. Any character in the format string that is not part of a conversion specification is interpreted literally, and the string '%%' gives '%'. The supported conversion specifications are as follows: <p/> <pre class=\"ace-static\"> '%H' Hours as decimal number (00-23). '%I' Hours as decimal number (01-12). '%M' Minute as decimal number (00-59). '%p' AM/PM indicator in the locale. Used in conjunction with '%I' and *not* with '%H'. '%S' Second as decimal number (00-61), allowing for up to two leap-seconds. '%X' Time, locale-specific. '%z' Offset from Greenwich, so '-0900' is 9 hours west of Greenwich. '%Z' Time zone as a character string. '%k' The 24-hour clock time with single digits preceded by a blank. '%l' The 12-hour clock time with single digits preceded by a blank. '%r' The 12-hour clock time (using the locale's AM or PM). '%R' Equivalent to '%H:%M'. '%T' Equivalent to '%H:%M:%S'. </pre></div>" } ], "returns" : { "type" : "xs:string?", "description" : "The time value resulting from the conversion." }, "errors" : [ "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">normalization:NOTSUPPORTED if the date type is not known to the service.</xqdoc:error>" ] } ], "variables" : [  ] }, "http://zorba.io/modules/excel/engineering" : { "ns" : "http://zorba.io/modules/excel/engineering", "description" : "  This is a library module offering the same set of functions\n defined by Microsoft Excel, under Engineering Functions.\n", "sees" : [ "<xqdoc:see xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"><a href=\"http://office.microsoft.com/en-us/excel/CH062528241033.aspx\" target=\"_blank\">Excel Documentation: Engineering Functions</a></xqdoc:see>" ], "authors" : [ "<xqdoc:author xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">Sorin Nasoi</xqdoc:author>" ], "version" : null, "encoding" : "utf-8", "namespaces" : [ { "uri" : "http://zorba.io/modules/excel/engineering", "prefix" : "excel-engineering" }, { "uri" : "http://zorba.io/modules/excel/errors", "prefix" : "excel-err" }, { "uri" : "http://zorba.io/modules/excel/math", "prefix" : "excel-math" }, { "uri" : "http://zorba.io/modules/excel/text", "prefix" : "excel-text" }, { "uri" : "http://zorba.io/options/versioning", "prefix" : "ver" } ], "functions" : [ { "isDocumented" : true, "arity" : 1, "name" : "bin2dec", "qname" : "excel-engineering:bin2dec", "signature" : "($arg as xs:anyAtomicType) as xs:integer", "description" : " Converts a binary number to decimal.\n", "summary" : "<p> Converts a binary number to decimal.</p>", "annotation_str" : "", "annotations" : [  ], "updating" : false, "parameters" : [ { "name" : "arg", "type" : "xs:anyAtomicType", "occurrence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> the number.</div>" } ], "returns" : { "type" : "xs:integer", "description" : "A decimal representation of a number given it's binary representation." }, "errors" : [ "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">excel-err:Value if provided value for $arg is not a binary representation of a number.</xqdoc:error>", "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">excel-err:Value if provided value for $arg contains more than 10 characters.</xqdoc:error>" ] }, { "isDocumented" : true, "arity" : 1, "name" : "bin2hex", "qname" : "excel-engineering:bin2hex", "signature" : "($arg as xs:anyAtomicType) as xs:string", "description" : " Converts a binary number to hexadecimal.\n", "summary" : "<p> Converts a binary number to hexadecimal.</p>", "annotation_str" : "", "annotations" : [  ], "updating" : false, "parameters" : [ { "name" : "arg", "type" : "xs:anyAtomicType", "occurrence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> the number.</div>" } ], "returns" : { "type" : "xs:string", "description" : "A hexadecimal representation of a number given it's binary representation." }, "errors" : [ "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">excel-err:Value if provided value for $arg is not a binary representation of a number.</xqdoc:error>", "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">excel-err:Value if provided value for $arg contains more than 10 characters.</xqdoc:error>" ] }, { "isDocumented" : true, "arity" : 2, "name" : "bin2hex", "qname" : "excel-engineering:bin2hex", "signature" : "($arg as xs:anyAtomicType, $places as xs:anyAtomicType) as xs:string", "description" : " Converts a binary number to hexadecimal.\n", "summary" : "<p> Converts a binary number to hexadecimal.</p>", "annotation_str" : "", "annotations" : [  ], "updating" : false, "parameters" : [ { "name" : "arg", "type" : "xs:anyAtomicType", "occurrence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> the number.</div>" }, { "name" : "places", "type" : "xs:anyAtomicType", "occurrence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> is the number of characters to use. Places is useful for padding the return value with leading 0s (zeros).</div>" } ], "returns" : { "type" : "xs:string", "description" : "A hexadecimal representation of a number given it's binary representation." }, "errors" : [ "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">excel-err:Value if provided value for $arg is not a binary representation of a number.</xqdoc:error>", "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">excel-err:Value if provided value for $arg contains more than 10 characters.</xqdoc:error>", "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">excel-err:Value if provided value for $places is not numeric.</xqdoc:error>", "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">excel-err:Num if provided value for $places is zero or negative.</xqdoc:error>", "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">excel-err:Num if provided value for $places is too small.</xqdoc:error>" ] }, { "isDocumented" : true, "arity" : 1, "name" : "bin2oct", "qname" : "excel-engineering:bin2oct", "signature" : "($arg as xs:anyAtomicType) as xs:string", "description" : " Converts a binary number to octal.\n", "summary" : "<p> Converts a binary number to octal.</p>", "annotation_str" : "", "annotations" : [  ], "updating" : false, "parameters" : [ { "name" : "arg", "type" : "xs:anyAtomicType", "occurrence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> the number.</div>" } ], "returns" : { "type" : "xs:string", "description" : "A octal representation of a number given it's binary representation." }, "errors" : [ "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">excel-err:Value if provided value for $arg is not a binary representation of a number.</xqdoc:error>", "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">excel-err:Value if provided value for $arg contains more than 10 characters.</xqdoc:error>" ] }, { "isDocumented" : true, "arity" : 2, "name" : "bin2oct", "qname" : "excel-engineering:bin2oct", "signature" : "($arg as xs:anyAtomicType, $places as xs:anyAtomicType) as xs:string", "description" : " Converts a binary number to octal.\n", "summary" : "<p> Converts a binary number to octal.</p>", "annotation_str" : "", "annotations" : [  ], "updating" : false, "parameters" : [ { "name" : "arg", "type" : "xs:anyAtomicType", "occurrence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> the number.</div>" }, { "name" : "places", "type" : "xs:anyAtomicType", "occurrence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> is the number of characters to use. Places is useful for padding the return value with leading 0s (zeros).</div>" } ], "returns" : { "type" : "xs:string", "description" : "A octal representation of a number given it's binary representation." }, "errors" : [ "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">excel-err:Value if provided value for $arg is not a binary representation of a number.</xqdoc:error>", "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">excel-err:Value if provided value for $arg contains more than 10 characters.</xqdoc:error>", "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">excel-err:Value if provided value for $places is not numeric.</xqdoc:error>", "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">excel-err:Num if provided value for $places is zero or negative.</xqdoc:error>", "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">excel-err:Num if provided value for $places is too small.</xqdoc:error>" ] }, { "isDocumented" : true, "arity" : 1, "name" : "dec2bin", "qname" : "excel-engineering:dec2bin", "signature" : "($arg as xs:anyAtomicType) as xs:string", "description" : " Converts a decimal number to binary.\n", "summary" : "<p> Converts a decimal number to binary.</p>", "annotation_str" : "", "annotations" : [  ], "updating" : false, "parameters" : [ { "name" : "arg", "type" : "xs:anyAtomicType", "occurrence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> the number.</div>" } ], "returns" : { "type" : "xs:string", "description" : "A binary representation of a number given it's decimal representation." }, "errors" : [ "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">excel-err:Value if provided value for $arg is not numeric.</xqdoc:error>", "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">excel-err:Num if provided value for $arg is smaller than -512 or bigger than 511.</xqdoc:error>" ] }, { "isDocumented" : true, "arity" : 2, "name" : "dec2bin", "qname" : "excel-engineering:dec2bin", "signature" : "($arg as xs:anyAtomicType, $places as xs:anyAtomicType) as xs:string", "description" : " Converts a decimal number to binary.\n", "summary" : "<p> Converts a decimal number to binary.</p>", "annotation_str" : "", "annotations" : [  ], "updating" : false, "parameters" : [ { "name" : "arg", "type" : "xs:anyAtomicType", "occurrence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> the number.</div>" }, { "name" : "places", "type" : "xs:anyAtomicType", "occurrence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> is the number of characters to use. Places is useful for padding the return value with leading 0s (zeros).</div>" } ], "returns" : { "type" : "xs:string", "description" : "A binary representation of a number given it's decimal representation." }, "errors" : [ "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">excel-err:Value if provided value for $arg is not numeric.</xqdoc:error>", "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">excel-err:Value if provided value for $places is not numeric.</xqdoc:error>", "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">excel-err:Num if provided value for $places is zero or negative.</xqdoc:error>", "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">excel-err:Num if provided value for $places is too small.</xqdoc:error>", "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">excel-err:Num if provided value for $arg is smaller than -512 or bigger than 511.</xqdoc:error>" ] }, { "isDocumented" : true, "arity" : 1, "name" : "dec2hex", "qname" : "excel-engineering:dec2hex", "signature" : "($arg as xs:anyAtomicType) as xs:string", "description" : " Converts a decimal number to hexadecimal.\n", "summary" : "<p> Converts a decimal number to hexadecimal.</p>", "annotation_str" : "", "annotations" : [  ], "updating" : false, "parameters" : [ { "name" : "arg", "type" : "xs:anyAtomicType", "occurrence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> the number.</div>" } ], "returns" : { "type" : "xs:string", "description" : "A hexadecimal representation of a number given it's decimal representation." }, "errors" : [ "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">excel-err:Value if provided value for $arg is not numeric.</xqdoc:error>", "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">excel-err:Num if provided value for $arg is smaller than -549755813888 or bigger than 549755813887</xqdoc:error>" ] }, { "isDocumented" : true, "arity" : 2, "name" : "dec2hex", "qname" : "excel-engineering:dec2hex", "signature" : "($arg as xs:anyAtomicType, $places as xs:anyAtomicType) as xs:string", "description" : " Converts a decimal number to hexadecimal.\n", "summary" : "<p> Converts a decimal number to hexadecimal.</p>", "annotation_str" : "", "annotations" : [  ], "updating" : false, "parameters" : [ { "name" : "arg", "type" : "xs:anyAtomicType", "occurrence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> the number.</div>" }, { "name" : "places", "type" : "xs:anyAtomicType", "occurrence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> is the number of characters to use. Places is useful for padding the return value with leading 0s (zeros).</div>" } ], "returns" : { "type" : "xs:string", "description" : "A hexadecimal representation of a number given it's decimal representation." }, "errors" : [ "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">excel-err:Value if provided value for $arg is not numeric.</xqdoc:error>", "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">excel-err:Value if provided value for $places is not numeric.</xqdoc:error>", "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">excel-err:Num if provided value for $places is zero or negative.</xqdoc:error>", "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">excel-err:Num if provided value for $places is too small.</xqdoc:error>", "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">excel-err:Num if provided value for $arg is smaller than -549755813888 or bigger than 549755813887.</xqdoc:error>" ] }, { "isDocumented" : true, "arity" : 1, "name" : "dec2oct", "qname" : "excel-engineering:dec2oct", "signature" : "($arg as xs:anyAtomicType) as xs:string", "description" : " Converts a decimal number to octal.\n", "summary" : "<p> Converts a decimal number to octal.</p>", "annotation_str" : "", "annotations" : [  ], "updating" : false, "parameters" : [ { "name" : "arg", "type" : "xs:anyAtomicType", "occurrence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> the number.</div>" } ], "returns" : { "type" : "xs:string", "description" : "An octal representation of a number given it's decimal representation." }, "errors" : [ "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">excel-err:Value if provided value for $arg is not numeric.</xqdoc:error>", "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">excel-err:Num if provided value for $arg is smaller than -536870912 or bigger than 536870911.</xqdoc:error>" ] }, { "isDocumented" : true, "arity" : 2, "name" : "dec2oct", "qname" : "excel-engineering:dec2oct", "signature" : "($arg as xs:anyAtomicType, $places as xs:anyAtomicType) as xs:string", "description" : " Converts a decimal number to octal.\n", "summary" : "<p> Converts a decimal number to octal.</p>", "annotation_str" : "", "annotations" : [  ], "updating" : false, "parameters" : [ { "name" : "arg", "type" : "xs:anyAtomicType", "occurrence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> the number</div>" }, { "name" : "places", "type" : "xs:anyAtomicType", "occurrence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> is the number of characters to use. Places is useful for padding the return value with leading 0s (zeros).</div>" } ], "returns" : { "type" : "xs:string", "description" : "An octal representation of a number given it's decimal representation." }, "errors" : [ "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">excel-err:Value if provided value for $arg is not numeric</xqdoc:error>", "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">excel-err:Value if provided value for $places is not numeric</xqdoc:error>", "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">excel-err:Num if provided value for $places is zero or negative</xqdoc:error>", "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">excel-err:Num if provided value for $places is too small</xqdoc:error>", "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">excel-err:Num if provided value for $arg is smaller than -536870912 or bigger than 536870911</xqdoc:error>" ] }, { "isDocumented" : true, "arity" : 1, "name" : "hex2bin", "qname" : "excel-engineering:hex2bin", "signature" : "($arg as xs:anyAtomicType) as xs:string", "description" : " Converts a hexadecimal number to binary.\n", "summary" : "<p> Converts a hexadecimal number to binary.</p>", "annotation_str" : "", "annotations" : [  ], "updating" : false, "parameters" : [ { "name" : "arg", "type" : "xs:anyAtomicType", "occurrence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> the number.</div>" } ], "returns" : { "type" : "xs:string", "description" : "A binary representation of a number given it's hexadecimal representation." }, "errors" : [ "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">excel-err:Value if provided value for $arg is not a hexadecimal representation of a number.</xqdoc:error>", "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">excel-err:Value if provided value for $arg contains more than 10 characters.</xqdoc:error>" ] }, { "isDocumented" : true, "arity" : 2, "name" : "hex2bin", "qname" : "excel-engineering:hex2bin", "signature" : "($arg as xs:anyAtomicType, $places as xs:anyAtomicType) as xs:string", "description" : " Converts a hexadecimal number to binary.\n", "summary" : "<p> Converts a hexadecimal number to binary.</p>", "annotation_str" : "", "annotations" : [  ], "updating" : false, "parameters" : [ { "name" : "arg", "type" : "xs:anyAtomicType", "occurrence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> the number.</div>" }, { "name" : "places", "type" : "xs:anyAtomicType", "occurrence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> is the number of characters to use. Places is useful for padding the return value with leading 0s (zeros).</div>" } ], "returns" : { "type" : "xs:string", "description" : "A binary representation of a number given it's hexadecimal representation." }, "errors" : [ "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">excel-err:Value if provided value for $arg is not a hexadecimal representation of a number.</xqdoc:error>", "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">excel-err:Value if provided value for $arg contains more than 10 characters.</xqdoc:error>", "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">excel-err:Value if provided value for $places is not numeric.</xqdoc:error>", "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">excel-err:Num if provided value for $places is zero or negative.</xqdoc:error>", "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">excel-err:Num if provided value for $places is too small.</xqdoc:error>" ] }, { "isDocumented" : true, "arity" : 1, "name" : "hex2dec", "qname" : "excel-engineering:hex2dec", "signature" : "($arg as xs:string) as xs:integer", "description" : " Converts a hexadecimal number to decimal.\n", "summary" : "<p> Converts a hexadecimal number to decimal.</p>", "annotation_str" : "", "annotations" : [  ], "updating" : false, "parameters" : [ { "name" : "arg", "type" : "xs:string", "occurrence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> the number.</div>" } ], "returns" : { "type" : "xs:integer", "description" : "A decimal representation of a number given it's hexadecimal representation." }, "errors" : [ "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">excel-err:Value if provided value for $arg is not a hexadecimal representation of a number.</xqdoc:error>", "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">excel-err:Value if provided value for $arg contains more than 10 characters.</xqdoc:error>" ] }, { "isDocumented" : true, "arity" : 1, "name" : "hex2oct", "qname" : "excel-engineering:hex2oct", "signature" : "($arg as xs:anyAtomicType) as xs:string", "description" : " Converts a hexadecimal number to octal.\n", "summary" : "<p> Converts a hexadecimal number to octal.</p>", "annotation_str" : "", "annotations" : [  ], "updating" : false, "parameters" : [ { "name" : "arg", "type" : "xs:anyAtomicType", "occurrence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> the number.</div>" } ], "returns" : { "type" : "xs:string", "description" : "A octal representation of a number given it's hexadecimal representation." }, "errors" : [ "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">excel-err:Value if provided value for $arg is not a hexadecimal representation of a number.</xqdoc:error>", "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">excel-err:Value if provided value for $arg contains more than 10 characters.</xqdoc:error>" ] }, { "isDocumented" : true, "arity" : 2, "name" : "hex2oct", "qname" : "excel-engineering:hex2oct", "signature" : "($arg as xs:anyAtomicType, $places as xs:anyAtomicType) as xs:string", "description" : " Converts a hexadecimal number to octal.\n", "summary" : "<p> Converts a hexadecimal number to octal.</p>", "annotation_str" : "", "annotations" : [  ], "updating" : false, "parameters" : [ { "name" : "arg", "type" : "xs:anyAtomicType", "occurrence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> the number.</div>" }, { "name" : "places", "type" : "xs:anyAtomicType", "occurrence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> is the number of characters to use. Places is useful for padding the return value with leading 0s (zeros).</div>" } ], "returns" : { "type" : "xs:string", "description" : "A octal representation of a number given it's hexadecimal representation." }, "errors" : [ "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">excel-err:Value if provided value for $arg is not a hexadecimal representation of a number.</xqdoc:error>", "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">excel-err:Value if provided value for $arg contains more than 10 characters.</xqdoc:error>", "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">excel-err:Value if provided value for $places is not numeric.</xqdoc:error>", "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">excel-err:Num if provided value for $places is zero or negative.</xqdoc:error>", "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">excel-err:Num if provided value for $places is too small.</xqdoc:error>" ] }, { "isDocumented" : true, "arity" : 1, "name" : "oct2bin", "qname" : "excel-engineering:oct2bin", "signature" : "($arg as xs:anyAtomicType) as xs:string", "description" : " Converts an octal number to binary.\n", "summary" : "<p> Converts an octal number to binary.</p>", "annotation_str" : "", "annotations" : [  ], "updating" : false, "parameters" : [ { "name" : "arg", "type" : "xs:anyAtomicType", "occurrence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> the number.</div>" } ], "returns" : { "type" : "xs:string", "description" : "A binary representation of a number given it's octal representation." }, "errors" : [ "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">excel-err:Value if provided value for $arg is not an octal representation of a number.</xqdoc:error>", "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">excel-err:Value if provided value for $arg contains more than 10 characters.</xqdoc:error>" ] }, { "isDocumented" : true, "arity" : 2, "name" : "oct2bin", "qname" : "excel-engineering:oct2bin", "signature" : "($arg as xs:anyAtomicType, $places as xs:anyAtomicType) as xs:string", "description" : " Converts an octal number to binary.\n", "summary" : "<p> Converts an octal number to binary.</p>", "annotation_str" : "", "annotations" : [  ], "updating" : false, "parameters" : [ { "name" : "arg", "type" : "xs:anyAtomicType", "occurrence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> the number.</div>" }, { "name" : "places", "type" : "xs:anyAtomicType", "occurrence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> is the number of characters to use. Places is useful for padding the return value with leading 0s (zeros).</div>" } ], "returns" : { "type" : "xs:string", "description" : "A binary representation of a number given it's octal representation." }, "errors" : [ "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">excel-err:Value if provided value for $arg is not an octal representation of a number.</xqdoc:error>", "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">excel-err:Value if provided value for $arg contains more than 10 characters.</xqdoc:error>", "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">excel-err:Value if provided value for $places is not numeric.</xqdoc:error>", "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">excel-err:Num if provided value for $places is zero or negative.</xqdoc:error>", "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">excel-err:Num if provided value for $places is too small.</xqdoc:error>" ] }, { "isDocumented" : true, "arity" : 1, "name" : "oct2dec", "qname" : "excel-engineering:oct2dec", "signature" : "($arg as xs:anyAtomicType) as xs:integer", "description" : " Converts an octal number to decimal.\n", "summary" : "<p> Converts an octal number to decimal.</p>", "annotation_str" : "", "annotations" : [  ], "updating" : false, "parameters" : [ { "name" : "arg", "type" : "xs:anyAtomicType", "occurrence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> the number.</div>" } ], "returns" : { "type" : "xs:integer", "description" : "A decimal representation of a number given it's octal representation." }, "errors" : [ "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">excel-err:Value if provided value for $arg is not an octal representation of a number.</xqdoc:error>", "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">excel-err:Value if provided value for $arg contains more than 10 characters.</xqdoc:error>" ] }, { "isDocumented" : true, "arity" : 1, "name" : "oct2hex", "qname" : "excel-engineering:oct2hex", "signature" : "($arg as xs:anyAtomicType) as xs:string", "description" : " Converts an octal number to hexadecimal.\n", "summary" : "<p> Converts an octal number to hexadecimal.</p>", "annotation_str" : "", "annotations" : [  ], "updating" : false, "parameters" : [ { "name" : "arg", "type" : "xs:anyAtomicType", "occurrence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> the number.</div>" } ], "returns" : { "type" : "xs:string", "description" : "A hexadecimal representation of a number given it's octal representation." }, "errors" : [ "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">excel-err:Value if provided value for $arg is not an octal representation of a number.</xqdoc:error>", "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">excel-err:Value if provided value for $arg contains more than 10 characters.</xqdoc:error>" ] }, { "isDocumented" : true, "arity" : 2, "name" : "oct2hex", "qname" : "excel-engineering:oct2hex", "signature" : "($arg as xs:anyAtomicType, $places as xs:anyAtomicType) as xs:string", "description" : " Converts an octal number to hexadecimal.\n", "summary" : "<p> Converts an octal number to hexadecimal.</p>", "annotation_str" : "", "annotations" : [  ], "updating" : false, "parameters" : [ { "name" : "arg", "type" : "xs:anyAtomicType", "occurrence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> the number.</div>" }, { "name" : "places", "type" : "xs:anyAtomicType", "occurrence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> is the number of characters to use. Places is useful for padding the return value with leading 0s (zeros).</div>" } ], "returns" : { "type" : "xs:string", "description" : "A hexadecimal representation of a number given it's octal representation." }, "errors" : [ "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">excel-err:Value if provided value for $arg is not an octal representation of a number.</xqdoc:error>", "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">excel-err:Value if provided value for $arg contains more than 10 characters.</xqdoc:error>", "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">excel-err:Value if provided value for $places is not numeric.</xqdoc:error>", "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">excel-err:Num if provided value for $places is zero or negative.</xqdoc:error>", "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">excel-err:Num if provided value for $places is too small.</xqdoc:error>" ] } ], "variables" : [  ] }, "http://www.zorba-xquery.com/modules/util-jvm" : { "ns" : "http://www.zorba-xquery.com/modules/util-jvm", "description" : " This module provides common functionality for modules that use java\n implementations.\n <br xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"/>\n <br xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"/>\n Modules using java implementations must import this module\n to specify the dependency.\n <br xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"/>\n <br xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"/>\n <b xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">Note:</b> Since this module has a Java library dependency a JVM is required\n to be installed on the system. For Windows: jvm.dll is required on the system\n path (usually located in \"C:\\Program Files\\Java\\jre\\bin\\client\").\n", "sees" : [  ], "authors" : [ "<xqdoc:author xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">Cezar Andrei</xqdoc:author>" ], "version" : null, "encoding" : "utf-8", "namespaces" : [ { "uri" : "http://www.zorba-xquery.com/modules/util-jvm", "prefix" : "util-jvm" }, { "uri" : "http://zorba.io/options/versioning", "prefix" : "ver" } ], "functions" : [  ], "variables" : [  ] }, "http://www.28msec.com/modules/asynchronous-jobs" : { "ns" : "http://www.28msec.com/modules/asynchronous-jobs", "description" : " <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">This module provides functionality for executing asynchronous jobs.\n There are three kinds of jobs: (1) a job for executing a (public or private)\n query of your project, (2) a job for mapping an input\n collection into an output collection, and (3) a job for shuffling the items\n of an input collection to several output collections.\n Map and Shuffle jobs are mostly used within\n the parallelism framework and are not meant to be created directly.</p>\n <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">Jobs that have been scheduled for execution can be referred to by\n an opaque identifier being returned by the corresponding scheduling\n function (e.g. job:execute or job:map). Specifically,\n the job's identifier can be used to retrieve the status of a job\n (e.g. job:status) or the names of its input and output collections.</p>\n", "sees" : [  ], "authors" : [ "<xqdoc:author xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">Ghislain Fourny</xqdoc:author>", "<xqdoc:author xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">Julien Ribon</xqdoc:author>", "<xqdoc:author xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">Matthias Brantner</xqdoc:author>" ], "version" : null, "encoding" : "utf-8", "namespaces" : [ { "uri" : "", "prefix" : "an" }, { "uri" : "http://zorba.io/modules/base64", "prefix" : "base64" }, { "uri" : "http://zorba.io/modules/fetch", "prefix" : "fetch" }, { "uri" : "http://www.zorba-xquery.com/modules/http-client", "prefix" : "http-client" }, { "uri" : "http://www.28msec.com/modules/asynchronous-jobs", "prefix" : "job" }, { "uri" : "http://www.28msec.com/modules/project", "prefix" : "project" }, { "uri" : "http://zorba.io/modules/random", "prefix" : "rand" }, { "uri" : "http://www.28msec.com/modules/http/request", "prefix" : "request" }, { "uri" : "http://www.28msec.com/modules/store", "prefix" : "store" } ], "functions" : [ { "isDocumented" : true, "arity" : 2, "name" : "build-map-shuffle", "qname" : "job:build-map-shuffle", "signature" : "($input-collection as xs:string, $options as object()?) as object()", "description" : " <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">Builds an object describing an asynchronous job (map or shuffle).</p>\n <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">This object can then be sent to the scheduler.</p>\n <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">The $options parameter allows for the specification of properties for\n the shuffle job. Allowed options are:\n <ul>\n   <li><tt>kind</tt>: the kind of job (\"map\" or \"shuffle\").</li>\n   <li><tt>map-function</tt> (map jobs only): a function with any signature\n   (item()* to item()*),\n   and that is used to map the input collection to the output collection.</li>\n   <li><tt>shuffle-function</tt> (shuffle jobs only): a function taking an item\n   and returning an integer.\n   It is used to select the output collection to which each item is sent.</li>\n   <li><tt>output-collection as string</tt> (map jobs only): the name of the collection in\n     which the output of the executed query is stored. If not specified,\n     the result of the query will be stored in a collection withing the\n     MongoDB database associated with the project. The name of the\n     collection is randomly generated and starts with <tt>_28.temporary</tt>\n   </li>\n   <li><tt>output-collections as array</tt> (shuffle jobs only): an array with the names of the collections in\n     which the items of the input collections are shuffled. Compulsory.\n   </li>\n   <li><tt>chunk-info as object</tt>: an object containing the specification of a chunk\n     of the input collection. The shuffling will only occur on this chunk.\n     If not specified, the entire input collection will be mapped.\n   </li>\n   <li><tt>allow-streaming as boolean</tt> (map jobs only): a boolean indicating if calling the map function can\n     be distributed over partitions of the input collection. If false, the map function will\n     be called only once on the entire input collection. This might result\n     in a cache overflow if the number of items is too big. If true,\n     the input will be arbitrarily partitioned and the map function will be called for each\n     partition. The size of a partition is chosen in order to be smaller than the cache size.\n     The default is false.\n   </li>\n   <li><tt>dependencies as array</tt>: an array containing the ids of all asynchronous jobs that must\n     be completed before this job starts. This job will be hold pending until all these dependencies\n     are completed.\n   </li>\n </ul>\n </p>\n", "summary" : "<p>  Builds an object describing an asynchronous job (map or shuffle).</p>", "annotation_str" : " %an:sequential", "annotations" : [ { "prefix" : "an", "ns" : "", "name" : "sequential", "value" : "" } ], "updating" : false, "parameters" : [ { "name" : "input-collection", "type" : "xs:string", "occurrence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> The name of the collection that the job processes.</div>" }, { "name" : "options", "type" : "object()", "occurrence" : "?", "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> An object specifying above options for the asynchronous job.</div>" } ], "returns" : { "type" : "object()", "description" : "the id of the scheduled job, which can be used to pull for the status and results." }, "errors" : [ "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">err:XPTY0004 if the type of a supplied option is incorrect.</xqdoc:error>", "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">job:JBDY0005 if the supplied function does not have a name.</xqdoc:error>", "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">job:JBDY0006 if the supplied function is in the local namespace.</xqdoc:error>", "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">job:JBDY0008 if the supplied input collection is not available.</xqdoc:error>" ] }, { "isDocumented" : true, "arity" : 1, "name" : "error", "qname" : "job:error", "signature" : "($id as xs:string) as object()?", "description" : " <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">Returns the error object output by an asynchronous job, in case of a failed job.</p>\n", "summary" : "<p>  Returns the error object output by an asynchronous job, in case of a failed job.</p>", "annotation_str" : " %an:nondeterministic", "annotations" : [ { "prefix" : "an", "ns" : "", "name" : "nondeterministic", "value" : "" } ], "updating" : false, "parameters" : [ { "name" : "id", "type" : "xs:string", "occurrence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> the id of the asynchronous job to query.</div>" } ], "returns" : { "type" : "object()?", "description" : "the error object output by the corresponding asynchronous job." }, "errors" : [  ] }, { "isDocumented" : true, "arity" : 1, "name" : "execute", "qname" : "job:execute", "signature" : "($query as xs:string) as xs:string", "description" : " <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">Schedules an asynchronous job executing the given (public or private)\n query from your project.</p>\n <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">The result of the query will be stored in a collection withing the\n MongoDB database associated with the project. The name of the collection\n is randomly generated and starts with <tt>_28.temporary</tt>.</p>\n", "summary" : "<p>  Schedules an asynchronous job executing the given (public or private)\n query from your project.</p>", "annotation_str" : " %an:sequential", "annotations" : [ { "prefix" : "an", "ns" : "", "name" : "sequential", "value" : "" } ], "updating" : false, "parameters" : [ { "name" : "query", "type" : "xs:string", "occurrence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> The path of the query to execute, which must begin with /public or /private. (examples: /public/query.xq, /private/query.jq).</div>" } ], "returns" : { "type" : "xs:string", "description" : "The id of the scheduled job." }, "errors" : [ "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">job:JBDY0003 if the supplied query path does not begin with /public or /private.</xqdoc:error>", "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">job:JBDY0004 if the supplied query path cannot be resolved.</xqdoc:error>" ] }, { "isDocumented" : true, "arity" : 2, "name" : "execute", "qname" : "job:execute", "signature" : "($query as xs:string, $options as object()?) as xs:string", "description" : " <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">Schedules an asynchronous job executing the given (public or private)\n query from your project.</p>\n <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">The $options parameter allows for the specification of properties for\n the asynchronously executed job. Allowed options are:\n <ul>\n   <li><tt>output-collection as string</tt>: the name of the collection in\n     which the output of the executed query is stored. If not specified,\n     the result of the query will be stored in a collection withing the\n     MongoDB database associated with the project. The name of the\n     collection is randomly generated and starts with <tt>_28.temporary</tt>\n   </li>\n </ul>\n </p>\n", "summary" : "<p>  Schedules an asynchronous job executing the given (public or private)\n query from your project.</p>", "annotation_str" : " %an:sequential", "annotations" : [ { "prefix" : "an", "ns" : "", "name" : "sequential", "value" : "" } ], "updating" : false, "parameters" : [ { "name" : "query", "type" : "xs:string", "occurrence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> The path of the query to execute, which must begin with /public or /private. (examples: /public/query.xq, /private/query.jq).</div>" }, { "name" : "options", "type" : "object()", "occurrence" : "?", "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> An object specifying above options for the asynchronous job.</div>" } ], "returns" : { "type" : "xs:string", "description" : "The id of the scheduled job." }, "errors" : [ "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">err:XPTY0004 if the type of a supplied option is incorrect.</xqdoc:error>", "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">job:JBDY0003 if the supplied query path does not begin with /public or /private.</xqdoc:error>", "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">job:JBDY0004 if the supplied query path cannot be resolved.</xqdoc:error>" ] }, { "isDocumented" : true, "arity" : 1, "name" : "function", "qname" : "job:function", "signature" : "($id as xs:string) as xs:string?", "description" : " <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">Returns the name of the map or shuffle function used by an asynchronous job.</p>\n", "summary" : "<p>  Returns the name of the map or shuffle function used by an asynchronous job.</p>", "annotation_str" : " %an:nondeterministic", "annotations" : [ { "prefix" : "an", "ns" : "", "name" : "nondeterministic", "value" : "" } ], "updating" : false, "parameters" : [ { "name" : "id", "type" : "xs:string", "occurrence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> the id of the asynchronous job to query.</div>" } ], "returns" : { "type" : "xs:string?", "description" : "the name of the map or shuffle function of the corresponding asynchronous job." }, "errors" : [  ] }, { "isDocumented" : true, "arity" : 1, "name" : "get", "qname" : "job:get", "signature" : "($id as xs:string) as object()*", "description" : " <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">Returns the asynchronous job associated with the supplied asynchronous job id,\n or the asynchronous jobs associated with the supplied parallel job id.</p>\n <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">This function is internal and should only be used by the parallelism module.</p>\n", "summary" : "<p>  Returns the asynchronous job associated with the supplied asynchronous job id,\n or the asynchronous jobs associated with the supplied parallel job id.</p>", "annotation_str" : " %an:nondeterministic", "annotations" : [ { "prefix" : "an", "ns" : "", "name" : "nondeterministic", "value" : "" } ], "updating" : false, "parameters" : [ { "name" : "id", "type" : "xs:string", "occurrence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> the id of the asynchronous or parallel job to query.</div>" } ], "returns" : { "type" : "object()*", "description" : "the objects describing the asynchronous jobs." }, "errors" : [  ] }, { "isDocumented" : true, "arity" : 1, "name" : "input-collection", "qname" : "job:input-collection", "signature" : "($id as xs:string) as xs:string?", "description" : " <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">Returns the name of the input collection of a mapping asynchronous job.</p>\n", "summary" : "<p>  Returns the name of the input collection of a mapping asynchronous job.</p>", "annotation_str" : " %an:nondeterministic", "annotations" : [ { "prefix" : "an", "ns" : "", "name" : "nondeterministic", "value" : "" } ], "updating" : false, "parameters" : [ { "name" : "id", "type" : "xs:string", "occurrence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> the id of the asynchronous job to query.</div>" } ], "returns" : { "type" : "xs:string?", "description" : "the name of the input collection of the corresponding asynchronous job." }, "errors" : [  ] }, { "isDocumented" : true, "arity" : 0, "name" : "jobs", "qname" : "job:jobs", "signature" : "() as object()*", "description" : " <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">Returns the ids of all jobs created by this project.</p>\n", "summary" : "<p>  Returns the ids of all jobs created by this project.</p>", "annotation_str" : " %an:nondeterministic", "annotations" : [ { "prefix" : "an", "ns" : "", "name" : "nondeterministic", "value" : "" } ], "updating" : false, "parameters" : [  ], "returns" : { "type" : "object()*", "description" : "the sequence of the ids of all jobs created so far." }, "errors" : [  ] }, { "isDocumented" : true, "arity" : 1, "name" : "kind", "qname" : "job:kind", "signature" : "($id as xs:string) as xs:string?", "description" : " <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">Returns the kind of the asynchronous job.</p>\n", "summary" : "<p>  Returns the kind of the asynchronous job.</p>", "annotation_str" : " %an:nondeterministic", "annotations" : [ { "prefix" : "an", "ns" : "", "name" : "nondeterministic", "value" : "" } ], "updating" : false, "parameters" : [ { "name" : "id", "type" : "xs:string", "occurrence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> the id of the asynchronous job to query.</div>" } ], "returns" : { "type" : "xs:string?", "description" : "the kind of the asynchronous job." }, "errors" : [  ] }, { "isDocumented" : true, "arity" : 2, "name" : "map", "qname" : "job:map", "signature" : "($input-collection as xs:string, $map-function as function (item()*) as item()*) as xs:string", "description" : " <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">Schedules an asynchronous job mapping the input collection\n to an output collection with the specified function.</p>\n <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">The name of the output collection is randomly generated and\n starts with <tt>_28.temporary</tt>.</p>\n", "summary" : "<p>  Schedules an asynchronous job mapping the input collection\n to an output collection with the specified function.</p>", "annotation_str" : " %an:sequential", "annotations" : [ { "prefix" : "an", "ns" : "", "name" : "sequential", "value" : "" } ], "updating" : false, "parameters" : [ { "name" : "input-collection", "type" : "xs:string", "occurrence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> The name of the collection that the job processes.</div>" }, { "name" : "map-function", "type" : "function (item()*) as item()*", "occurrence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> The function which is run on the input collection's contents.</div>" } ], "returns" : { "type" : "xs:string", "description" : "The id of the scheduled job, which can be used to pull for the status and results." }, "errors" : [ "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">job:JBDY0005 if the supplied function does not have a name.</xqdoc:error>", "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">job:JBDY0006 if the supplied function is in the local namespace.</xqdoc:error>", "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">job:JBDY0008 if the supplied input collection does not exist.</xqdoc:error>" ] }, { "isDocumented" : true, "arity" : 3, "name" : "map", "qname" : "job:map", "signature" : "($input-collection as xs:string, $map-function as function (item()*) as item()*, $options as object()?) as xs:string", "description" : " <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">Schedules an asynchronous job mapping the input collection\n to an output collection with the specified function.</p>\n <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">The $options parameter allows for the specification of properties for\n the map job. Allowed options are:\n <ul>\n   <li><tt>output-collection as string</tt>: the name of the collection in\n     which the output of the executed query is stored. If not specified,\n     the result of the query will be stored in a collection withing the\n     MongoDB database associated with the project. The name of the\n     collection is randomly generated and starts with <tt>_28.temporary</tt>\n   </li>\n   <li><tt>chunk-info as object</tt>: an object containing the specification of a chunk\n     of the input collection. The mapping will only occur on this chunk.\n     If not specified, the entire input collection will be mapped.\n   </li>\n   <li><tt>allow-streaming as boolean</tt>: a boolean indicating if calling the map function can\n     be distributed over partitions of the input collection. If false, the map function will\n     be called only once on the entire input collection. This might result\n     in a cache overflow if the number of items is too big. If true,\n     the input will be arbitrarily partitioned and the map function will be called for each\n     partition. The size of a partition is chosen in order to be smaller than the cache size.\n     The default is false.\n   </li>\n   <li><tt>dependencies as array</tt>: an array containing the ids of all asynchronous jobs that must\n     be completed before this job starts. This job will be hold pending until all these dependencies\n     are completed.\n   </li>\n </ul>\n </p>\n", "summary" : "<p>  Schedules an asynchronous job mapping the input collection\n to an output collection with the specified function.</p>", "annotation_str" : " %an:sequential", "annotations" : [ { "prefix" : "an", "ns" : "", "name" : "sequential", "value" : "" } ], "updating" : false, "parameters" : [ { "name" : "input-collection", "type" : "xs:string", "occurrence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> The name of the collection that the job processes.</div>" }, { "name" : "map-function", "type" : "function (item()*) as item()*", "occurrence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> The function which is run on the collection's contents.</div>" }, { "name" : "options", "type" : "object()", "occurrence" : "?", "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> An object specifying above options for the asynchronous job.</div>" } ], "returns" : { "type" : "xs:string", "description" : "the id of the scheduled job, which can be used to pull for the status and results." }, "errors" : [ "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">err:XPTY0004 if the type of a supplied option is incorrect.</xqdoc:error>", "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">job:JBDY0005 if the supplied function does not have a name.</xqdoc:error>", "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">job:JBDY0006 if the supplied function is in the local namespace.</xqdoc:error>", "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">job:JBDY0008 if the supplied input collection does not exist.</xqdoc:error>" ] }, { "isDocumented" : true, "arity" : 1, "name" : "output-collection", "qname" : "job:output-collection", "signature" : "($id as xs:string) as xs:string?", "description" : " <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">Returns the name of the output collection of a mapping or executing asynchronous job.</p>\n", "summary" : "<p>  Returns the name of the output collection of a mapping or executing asynchronous job.</p>", "annotation_str" : " %an:nondeterministic", "annotations" : [ { "prefix" : "an", "ns" : "", "name" : "nondeterministic", "value" : "" } ], "updating" : false, "parameters" : [ { "name" : "id", "type" : "xs:string", "occurrence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> the id of the asynchronous job to query.</div>" } ], "returns" : { "type" : "xs:string?", "description" : "the name of the output collection of the corresponding asynchronous job." }, "errors" : [  ] }, { "isDocumented" : true, "arity" : 1, "name" : "output-collections", "qname" : "job:output-collections", "signature" : "($id as xs:string) as xs:string*", "description" : " Returns the name of the output collections of a shuffle asynchronous job.\n", "summary" : "<p> Returns the name of the output collections of a shuffle asynchronous job.</p>", "annotation_str" : " %an:nondeterministic", "annotations" : [ { "prefix" : "an", "ns" : "", "name" : "nondeterministic", "value" : "" } ], "updating" : false, "parameters" : [ { "name" : "id", "type" : "xs:string", "occurrence" : null, "description" : "" } ], "returns" : { "type" : "xs:string*", "description" : "the name of the output collections of the corresponding asynchronous job." }, "errors" : [  ] }, { "isDocumented" : true, "arity" : 1, "name" : "properties", "qname" : "job:properties", "signature" : "($id as xs:string) as object()", "description" : " <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">Returns the properties of an asynchronous job as an object with the following\n fields:</p>\n <ul xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">\n  <li><tt>accessed</tt>: the time at which the job was last accessed.</li>\n  <li><tt>completed</tt>: the time at which the job was completed.</li>\n  <li><tt>created</tt>: the time at which the job was created.</li>\n  <li><tt>lock-acquired</tt>: the time at which a processing lock was taken on the job.</li>\n  <li><tt>status</tt>: the status of the job. One of <tt>pending</tt>, <tt>in progress</tt>,\n  <tt>completed</tt>, <tt>failed</tt>, <tt>timed out</tt>.</li>\n  <li><tt>error</tt>: An object containing error information in case of failure.</li>\n </ul>\n", "summary" : "<p>  Returns the properties of an asynchronous job as an object with the following\n fields: \n  \n   accessed : the time at which the job was last accessed.</p>", "annotation_str" : " %an:nondeterministic", "annotations" : [ { "prefix" : "an", "ns" : "", "name" : "nondeterministic", "value" : "" } ], "updating" : false, "parameters" : [ { "name" : "id", "type" : "xs:string", "occurrence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> the id of the asynchronous job to query.</div>" } ], "returns" : { "type" : "object()", "description" : "the time at which the corresponding asynchronous job was last accessed." }, "errors" : [  ] }, { "isDocumented" : true, "arity" : 1, "name" : "query-name", "qname" : "job:query-name", "signature" : "($id as xs:string) as xs:string?", "description" : " <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">Returns the name of the query executed by an executing asynchronous job.</p>\n", "summary" : "<p>  Returns the name of the query executed by an executing asynchronous job.</p>", "annotation_str" : " %an:nondeterministic", "annotations" : [ { "prefix" : "an", "ns" : "", "name" : "nondeterministic", "value" : "" } ], "updating" : false, "parameters" : [ { "name" : "id", "type" : "xs:string", "occurrence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> the id of the asynchronous job to query.</div>" } ], "returns" : { "type" : "xs:string?", "description" : "the name of the query executed by the corresponding asynchronous job." }, "errors" : [  ] }, { "isDocumented" : true, "arity" : 1, "name" : "schedule", "qname" : "job:schedule", "signature" : "($jobs as object()*) as object()*", "description" : " <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">Sends jobs to the job queue.</p>\n <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">This function is internal and should only be used by this and the parallelism module.</p>\n", "summary" : "<p>  Sends jobs to the job queue.</p>", "annotation_str" : " %an:sequential", "annotations" : [ { "prefix" : "an", "ns" : "", "name" : "sequential", "value" : "" } ], "updating" : false, "parameters" : [ { "name" : "jobs", "type" : "object()", "occurrence" : "*", "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> The job to send, as generated by job:build-map-shuffle().</div>" } ], "returns" : { "type" : "object()*", "description" : "Objects containing the new ids." }, "errors" : [  ] }, { "isDocumented" : true, "arity" : 3, "name" : "shuffle", "qname" : "job:shuffle", "signature" : "($input-collection as xs:string, $shuffle-function as function (item()) as xs:integer, $options as object()?) as xs:string", "description" : " <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">Schedules an asynchronous job shuffling the items of the input collections to output collections\n using the specified shuffle function.</p>\n <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">The $options parameter allows for the specification of properties for\n the shuffle job. Allowed options are:\n <ul>\n   <li><tt>output-collections as array</tt>: an array with the names of the collections in\n     which the items of the input collections are shuffled. Compulsory.\n   </li>\n   <li><tt>chunk-info as object</tt>: an object containing the specification of a chunk\n     of the input collection. The shuffling will only occur on this chunk.\n     If not specified, the entire input collection will be mapped.\n   </li>\n   <li><tt>dependencies as array</tt>: an array containing the ids of all asynchronous jobs that must\n     be completed before this job starts. This job will be hold pending until all these dependencies\n     are completed.\n   </li>\n </ul>\n </p>\n", "summary" : "<p>  Schedules an asynchronous job shuffling the items of the input collections to output collections\n using the specified shuffle function.</p>", "annotation_str" : " %an:sequential", "annotations" : [ { "prefix" : "an", "ns" : "", "name" : "sequential", "value" : "" } ], "updating" : false, "parameters" : [ { "name" : "input-collection", "type" : "xs:string", "occurrence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> The name of the collection that the job processes.</div>" }, { "name" : "shuffle-function", "type" : "function (item()) as xs:integer", "occurrence" : null, "description" : "" }, { "name" : "options", "type" : "object()", "occurrence" : "?", "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> An object specifying above options for the asynchronous job.</div>" } ], "returns" : { "type" : "xs:string", "description" : "the id of the scheduled job, which can be used to pull for the status and results." }, "errors" : [ "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">err:XPTY0004 if the type of a supplied option is incorrect.</xqdoc:error>", "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">job:JBDY0005 if the supplied function does not have a name.</xqdoc:error>", "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">job:JBDY0006 if the supplied function is in the local namespace.</xqdoc:error>", "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">job:JBDY0008 if the supplied input collection does not exist.</xqdoc:error>" ] } ], "variables" : [  ] }, "http://www.28msec.com/modules/datetime" : { "ns" : "http://www.28msec.com/modules/datetime", "description" : " This modules contains function that operate on items of type date, time,\n dateTime, and duration.\n <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">The module is always imported so you don't need to import it explicitly.\n Also, you don't need to fully qualify a function to invoke it.</p>\n", "sees" : [  ], "authors" : [  ], "version" : null, "encoding" : "utf-8", "namespaces" : [ { "uri" : "http://www.28msec.com/modules/datetime", "prefix" : "datetime" }, { "uri" : "http://zorba.io/options/versioning", "prefix" : "ver" } ], "functions" : [ { "isDocumented" : true, "arity" : 1, "name" : "adjust-date-to-timezone", "qname" : "datetime:adjust-date-to-timezone", "signature" : "($arg as date?) as date?", "description" : " Adjusts a date value to the implicit timezone.\n", "summary" : "<p> Adjusts a date value to the implicit timezone.</p>", "annotation_str" : "", "annotations" : [  ], "updating" : false, "parameters" : [ { "name" : "arg", "type" : "date", "occurrence" : "?", "description" : "" } ], "returns" : { "type" : "date?", "description" : "the date in the implicit timezone that contains the starting instant of the supplied date. For a detailed description of the semantics of this function, please see <a xmlns:xqdoc=\"http://www.xqdoc.org/1.0\" href=\"http://www.w3.org/TR/xpath-functions-30/#func-adjust-date-to-timezone\">adjust-date-to-timezone</a>." }, "errors" : [  ] }, { "isDocumented" : true, "arity" : 2, "name" : "adjust-date-to-timezone", "qname" : "datetime:adjust-date-to-timezone", "signature" : "($arg as date?, $timezone as dayTimeDuration?) as date?", "description" : " Adjusts a date value to a specific timezone, or to no timezone at all.\n", "summary" : "<p> Adjusts a date value to a specific timezone, or to no timezone at all.</p>", "annotation_str" : "", "annotations" : [  ], "updating" : false, "parameters" : [ { "name" : "arg", "type" : "date", "occurrence" : "?", "description" : "" }, { "name" : "timezone", "type" : "dayTimeDuration", "occurrence" : "?", "description" : "" } ], "returns" : { "type" : "date?", "description" : "the date in the target timezone that contains the starting instant of the supplied date. <ul xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> <li><code>adjust-date-to-timezone(date(\"2002-03-07\"), dayTimeDuration(\"-PT10H\"))</code> returns <code>date(\"2002-03-06-10:00\")</code>.</li> <li><code>adjust-date-to-timezone(date(\"2002-03-07-07:00\"), ())</code> returns <code>date(\"2002-03-07\")</code>.</li> </ul> For a detailed description of the semantics of this function, please see <a xmlns:xqdoc=\"http://www.xqdoc.org/1.0\" href=\"http://www.w3.org/TR/xpath-functions-30/#func-adjust-date-to-timezone\">adjust-date-to-timezone</a>" }, "errors" : [  ] }, { "isDocumented" : true, "arity" : 1, "name" : "adjust-dateTime-to-timezone", "qname" : "datetime:adjust-dateTime-to-timezone", "signature" : "($arg as dateTime?) as dateTime", "description" : " Adjusts a dateTime value to the implicit timezone.\n", "summary" : "<p> Adjusts a dateTime value to the implicit timezone.</p>", "annotation_str" : "", "annotations" : [  ], "updating" : false, "parameters" : [ { "name" : "arg", "type" : "dateTime", "occurrence" : "?", "description" : "" } ], "returns" : { "type" : "dateTime", "description" : "the dateTime in the implicit timezone. For a detailed description of the semantics of this function, please see <a xmlns:xqdoc=\"http://www.xqdoc.org/1.0\" href=\"http://www.w3.org/TR/xpath-functions-30/#func-adjust-dateTime-to-timezone\">adjust-dateTime-to-timezone</a>" }, "errors" : [  ] }, { "isDocumented" : true, "arity" : 2, "name" : "adjust-dateTime-to-timezone", "qname" : "datetime:adjust-dateTime-to-timezone", "signature" : "($arg as dateTime?, $timezone as dayTimeDuration?) as dateTime", "description" : " Adjusts a dateTime value to the specified timezone, or to no timezone at all.\n", "summary" : "<p> Adjusts a dateTime value to the specified timezone, or to no timezone at all.</p>", "annotation_str" : "", "annotations" : [  ], "updating" : false, "parameters" : [ { "name" : "arg", "type" : "dateTime", "occurrence" : "?", "description" : "" }, { "name" : "timezone", "type" : "dayTimeDuration", "occurrence" : "?", "description" : "" } ], "returns" : { "type" : "dateTime", "description" : "the dateTime in the specified timezone. <ul xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> <li><code>adjust-dateTime-to-timezone(dateTime('2002-03-07T10:00:00-07:00'), dayTimeDuration(\"-PT10H\"))</code> returns <code>dateTime('2002-03-07T07:00:00-10:00')</code>.</li> <li><code>adjust-dateTime-to-timezone(dateTime('2002-03-07T10:00:00'), ())</code> returns <code>dateTime('2002-03-07T10:00:00')</code>.</li> </ul> For a detailed description of the semantics of this function, please see <a xmlns:xqdoc=\"http://www.xqdoc.org/1.0\" href=\"http://www.w3.org/TR/xpath-functions-30/#func-adjust-dateTime-to-timezone\">adjust-dateTime-to-timezone</a>" }, "errors" : [  ] }, { "isDocumented" : true, "arity" : 1, "name" : "adjust-time-to-timezone", "qname" : "datetime:adjust-time-to-timezone", "signature" : "($arg as time?) as time?", "description" : " Adjusts a time value to an implicit timezone.\n", "summary" : "<p> Adjusts a time value to an implicit timezone.</p>", "annotation_str" : "", "annotations" : [  ], "updating" : false, "parameters" : [ { "name" : "arg", "type" : "time", "occurrence" : "?", "description" : "" } ], "returns" : { "type" : "time?", "description" : "the time in the implicit timezone. For a detailed description of the semantics of this function, please see <a xmlns:xqdoc=\"http://www.xqdoc.org/1.0\" href=\"http://www.w3.org/TR/xpath-functions-30/#func-adjust-time-to-timezone\">adjust-time-to-timezone</a>" }, "errors" : [  ] }, { "isDocumented" : true, "arity" : 2, "name" : "adjust-time-to-timezone", "qname" : "datetime:adjust-time-to-timezone", "signature" : "($arg as time?, $timezone as dayTimeDuration?) as time?", "description" : " Adjusts a time value to a specific timezone, or to no timezone at all.\n", "summary" : "<p> Adjusts a time value to a specific timezone, or to no timezone at all.</p>", "annotation_str" : "", "annotations" : [  ], "updating" : false, "parameters" : [ { "name" : "arg", "type" : "time", "occurrence" : "?", "description" : "" }, { "name" : "timezone", "type" : "dayTimeDuration", "occurrence" : "?", "description" : "" } ], "returns" : { "type" : "time?", "description" : "the time in the specified timezone. <ul xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> <li><code>adjust-time-to-timezone(time(\"10:00:00\"), dayTimeDuration(\"-PT10H\"))</code> returns <code>time(\"07:00:00-10:00\")</code>.</li> <li><code>adjust-time-to-timezone(time(\"10:00:00-07:00\"), ())</code> returns <code>time(\"10:00:00\")</code>.</li> </ul> For a detailed description of the semantics of this function, please see <a xmlns:xqdoc=\"http://www.xqdoc.org/1.0\" href=\"http://www.w3.org/TR/xpath-functions-30/#func-adjust-time-to-timezone\">adjust-time-to-timezone</a>" }, "errors" : [  ] }, { "isDocumented" : true, "arity" : 0, "name" : "current-date", "qname" : "datetime:current-date", "signature" : "() as date external", "description" : " Returns the current date.\n For a detailed description of the semantics of this function, please see\n <a xmlns:xqdoc=\"http://www.xqdoc.org/1.0\" href=\"http://www.w3.org/TR/xpath-functions-30/#func-current-date\">current-date</a>\n", "summary" : "<p> Returns the current date.</p>", "annotation_str" : "", "annotations" : [  ], "updating" : false, "parameters" : [  ], "returns" : { "type" : "date", "description" : "" }, "errors" : [  ] }, { "isDocumented" : true, "arity" : 0, "name" : "current-dateTime", "qname" : "datetime:current-dateTime", "signature" : "() as dateTimeStamp external", "description" : " Returns the current dateTime.\n For a detailed description of the semantics of this function, please see\n <a xmlns:xqdoc=\"http://www.xqdoc.org/1.0\" href=\"http://www.w3.org/TR/xpath-functions-30/#func-current-dateTime\">current-dateTime</a>\n", "summary" : "<p> Returns the current dateTime.</p>", "annotation_str" : "", "annotations" : [  ], "updating" : false, "parameters" : [  ], "returns" : { "type" : "dateTimeStamp", "description" : "" }, "errors" : [  ] }, { "isDocumented" : true, "arity" : 0, "name" : "current-time", "qname" : "datetime:current-time", "signature" : "() as time external", "description" : " Returns the current time.\n For a detailed description of the semantics of this function, please see\n <a xmlns:xqdoc=\"http://www.xqdoc.org/1.0\" href=\"http://www.w3.org/TR/xpath-functions-30/#func-current-time\">current-time</a>\n", "summary" : "<p> Returns the current time.</p>", "annotation_str" : "", "annotations" : [  ], "updating" : false, "parameters" : [  ], "returns" : { "type" : "time", "description" : "" }, "errors" : [  ] }, { "isDocumented" : true, "arity" : 2, "name" : "dateTime", "qname" : "datetime:dateTime", "signature" : "($arg1 as date?, $arg2 as time?) as dateTime?", "description" : " Returns a dateTime value created by combining a date and a time.\n", "summary" : "<p> Returns a dateTime value created by combining a date and a time.</p>", "annotation_str" : "", "annotations" : [  ], "updating" : false, "parameters" : [ { "name" : "arg1", "type" : "date", "occurrence" : "?", "description" : "" }, { "name" : "arg2", "type" : "time", "occurrence" : "?", "description" : "" } ], "returns" : { "type" : "dateTime?", "description" : "the dateTime value created by combinding the given date and time. <ul xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> <li><code>dateTime(date(\"1999-12-31\"), time(\"12:00:00\"))</code> returns <code>dateTime(\"1999-12-31T12:00:00\")</code>.</li> </ul> For a detailed description of the semantics of this function, please see <a xmlns:xqdoc=\"http://www.xqdoc.org/1.0\" href=\"http://www.w3.org/TR/xpath-functions-30/#func-dateTime\">dateTime</a>" }, "errors" : [  ] }, { "isDocumented" : true, "arity" : 1, "name" : "day-from-date", "qname" : "datetime:day-from-date", "signature" : "($arg as date?) as integer?", "description" : " Returns the day component of a date.\n", "summary" : "<p> Returns the day component of a date.</p>", "annotation_str" : "", "annotations" : [  ], "updating" : false, "parameters" : [ { "name" : "arg", "type" : "date", "occurrence" : "?", "description" : "" } ], "returns" : { "type" : "integer?", "description" : "the day component of the given date. <ul xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> <li><code>day-from-date(date(\"1999-05-31-05:00\"))</code> returns <code>31</code>.</li> </ul> For a detailed description of the semantics of this function, please see <a xmlns:xqdoc=\"http://www.xqdoc.org/1.0\" href=\"http://www.w3.org/TR/xpath-functions-30/#func-day-from-date\">day-from-date</a>" }, "errors" : [  ] }, { "isDocumented" : true, "arity" : 1, "name" : "day-from-dateTime", "qname" : "datetime:day-from-dateTime", "signature" : "($arg as dateTime?) as integer?", "description" : " Returns the day component of a dateTime.\n", "summary" : "<p> Returns the day component of a dateTime.</p>", "annotation_str" : "", "annotations" : [  ], "updating" : false, "parameters" : [ { "name" : "arg", "type" : "dateTime", "occurrence" : "?", "description" : "" } ], "returns" : { "type" : "integer?", "description" : "the day component of the given dateTime. <ul xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> <li><code>day-from-dateTime(dateTime(\"1999-12-31T20:00:00-05:00\"))</code> returns <code>31</code>.</li> </ul> For a detailed description of the semantics of this function, please see <a xmlns:xqdoc=\"http://www.xqdoc.org/1.0\" href=\"http://www.w3.org/TR/xpath-functions-30/#func-day-from-dateTime\">day-from-dateTime</a>" }, "errors" : [  ] }, { "isDocumented" : true, "arity" : 1, "name" : "days-from-duration", "qname" : "datetime:days-from-duration", "signature" : "($arg as duration?) as integer?", "description" : " Returns the number of days in a duration.\n", "summary" : "<p> Returns the number of days in a duration.</p>", "annotation_str" : "", "annotations" : [  ], "updating" : false, "parameters" : [ { "name" : "arg", "type" : "duration", "occurrence" : "?", "description" : "" } ], "returns" : { "type" : "integer?", "description" : "the number of days in the given duration. <ul xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> <li><code>days-from-duration(dayTimeDuration(\"P3DT55H\"))</code> returns <code>5</code>.</li> </ul> For a detailed description of the semantics of this function, please see <a xmlns:xqdoc=\"http://www.xqdoc.org/1.0\" href=\"http://www.w3.org/TR/xpath-functions-30/#func-days-from-duration\">days-from-duration</a>" }, "errors" : [  ] }, { "isDocumented" : true, "arity" : 2, "name" : "format-date", "qname" : "datetime:format-date", "signature" : "($value as date?, $picture as string) as string?", "description" : " Returns a string containing a date value formatted for display.\n", "summary" : "<p> Returns a string containing a date value formatted for display.</p>", "annotation_str" : "", "annotations" : [  ], "updating" : false, "parameters" : [ { "name" : "value", "type" : "date", "occurrence" : "?", "description" : "" }, { "name" : "picture", "type" : "string", "occurrence" : null, "description" : "" } ], "returns" : { "type" : "string?", "description" : "the string formatted according to the given picture. The following examples assume <code xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">let $d := date(\"2002-12-31\")</code> and the Gregorian calendar as the default calendar. <ul xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> <li><code>format-date($d, \"[Y0001]-[M01]-[D01]\")</code> returns <code>2002-12-31</code>.</li> <li><code>format-date($d, \"[D1] [MI] [Y]\")</code> returns <code>31 XII 2002</code>.</li> </ul> For a detailed description of the semantics of this function, please see <a xmlns:xqdoc=\"http://www.xqdoc.org/1.0\" href=\"http://www.w3.org/TR/xpath-functions-30/#func-format-date\">format-date</a>" }, "errors" : [  ] }, { "isDocumented" : true, "arity" : 5, "name" : "format-date", "qname" : "datetime:format-date", "signature" : "($value as date?, $picture as string, $language as string?, $calendar as string?, $place as string?) as string?", "description" : " Returns a string containing a date value formatted for display.\n", "summary" : "<p> Returns a string containing a date value formatted for display.</p>", "annotation_str" : "", "annotations" : [  ], "updating" : false, "parameters" : [ { "name" : "value", "type" : "date", "occurrence" : "?", "description" : "" }, { "name" : "picture", "type" : "string", "occurrence" : null, "description" : "" }, { "name" : "language", "type" : "string", "occurrence" : "?", "description" : "" }, { "name" : "calendar", "type" : "string", "occurrence" : "?", "description" : "" }, { "name" : "place", "type" : "string", "occurrence" : "?", "description" : "" } ], "returns" : { "type" : "string?", "description" : "the string formatted according to the given picture. The following examples assume <code xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">let $d := date(\"2002-12-31\")</code> and the Gregorian calendar as the default calendar. <ul xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> <li><code>format-date($d, \"[YWw]\", \"en\", (), ())</code> returns <code>Two Thousand and Three</code>.</li> <li><code>format-date($d, \"[D] [MNn], [Y]\", \"de\", (), ())</code> returns <code>31 Dezember, 2002</code>.</li> <li><code>format-date($d, \"[D\\u0E51] [Mn] [Y\\u0E51]\", \"th\", \"BE\", ())</code> returns <code>๓๑ ธันวาคม ๒๐๐๒</code>.</li> </ul> For a detailed description of the semantics of this function, please see <a xmlns:xqdoc=\"http://www.xqdoc.org/1.0\" href=\"http://www.w3.org/TR/xpath-functions-30/#func-format-date\">format-date</a>" }, "errors" : [  ] }, { "isDocumented" : true, "arity" : 2, "name" : "format-dateTime", "qname" : "datetime:format-dateTime", "signature" : "($value as dateTime?, $picture as string) as string?", "description" : " Returns a string containing a dateTime value formatted for display.\n", "summary" : "<p> Returns a string containing a dateTime value formatted for display.</p>", "annotation_str" : "", "annotations" : [  ], "updating" : false, "parameters" : [ { "name" : "value", "type" : "dateTime", "occurrence" : "?", "description" : "" }, { "name" : "picture", "type" : "string", "occurrence" : null, "description" : "" } ], "returns" : { "type" : "string?", "description" : "the string formatted according to the given picture. The following examples assume <code xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">let $dt := dateTime(\"2002-12-31T15:58:45\")</code> and the Gregorian calendar as the default calendar. <ul xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> <li><code>format-dateTime($dt, \"[h].[m01][Pn] on [FNn], [D1o] [MNn]\")</code> returns <code>3.58pm on Tuesday, 31st December</code>.</li> <li><code>format-dateTime($dt, \"[M01]/[D01]/[Y0001] at [H01]:[m01]:[s01]\")</code> returns <code>12/31/2002 at 15:58:45</code>.</li> </ul> For a detailed description of the semantics of this function, please see <a xmlns:xqdoc=\"http://www.xqdoc.org/1.0\" href=\"http://www.w3.org/TR/xpath-functions-30/#func-format-dateTime\">format-dateTime</a>" }, "errors" : [  ] }, { "isDocumented" : true, "arity" : 5, "name" : "format-dateTime", "qname" : "datetime:format-dateTime", "signature" : "($value as dateTime?, $picture as string, $language as string?, $calendar as string?, $place as string?) as string?", "description" : " Returns a string containing a dateTime value formatted for display.\n", "summary" : "<p> Returns a string containing a dateTime value formatted for display.</p>", "annotation_str" : "", "annotations" : [  ], "updating" : false, "parameters" : [ { "name" : "value", "type" : "dateTime", "occurrence" : "?", "description" : "" }, { "name" : "picture", "type" : "string", "occurrence" : null, "description" : "" }, { "name" : "language", "type" : "string", "occurrence" : "?", "description" : "" }, { "name" : "calendar", "type" : "string", "occurrence" : "?", "description" : "" }, { "name" : "place", "type" : "string", "occurrence" : "?", "description" : "" } ], "returns" : { "type" : "string?", "description" : "the string formatted according to the given picture. For a detailed description of the semantics of this function, please see <a xmlns:xqdoc=\"http://www.xqdoc.org/1.0\" href=\"http://www.w3.org/TR/xpath-functions-30/#func-format-dateTime\">format-dateTime</a>" }, "errors" : [  ] }, { "isDocumented" : true, "arity" : 1, "name" : "hours-from-dateTime", "qname" : "datetime:hours-from-dateTime", "signature" : "($arg as dateTime?) as integer?", "description" : " Returns the hours component of a dateTime.\n", "summary" : "<p> Returns the hours component of a dateTime.</p>", "annotation_str" : "", "annotations" : [  ], "updating" : false, "parameters" : [ { "name" : "arg", "type" : "dateTime", "occurrence" : "?", "description" : "" } ], "returns" : { "type" : "integer?", "description" : "the hours component of the given dateTime. <ul xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> <li><code>hours-from-dateTime(dateTime(\"1999-12-31T21:20:00-05:00\"))</code> returns <code>21</code>.</li> <li><code>hours-from-dateTime(adjust-dateTime-to-timezone(dateTime(\"1999-12-31T21:20:00-05:00\"), dayTimeDuration(\"PT0S\")))</code> returns <code>2</code>.</li> </ul> For a detailed description of the semantics of this function, please see <a xmlns:xqdoc=\"http://www.xqdoc.org/1.0\" href=\"http://www.w3.org/TR/xpath-functions-30/#func-hours-from-time\">hours-from-dateTime</a>" }, "errors" : [  ] }, { "isDocumented" : true, "arity" : 1, "name" : "hours-from-duration", "qname" : "datetime:hours-from-duration", "signature" : "($arg as duration?) as integer?", "description" : " Returns the number of hours in a duration.\n", "summary" : "<p> Returns the number of hours in a duration.</p>", "annotation_str" : "", "annotations" : [  ], "updating" : false, "parameters" : [ { "name" : "arg", "type" : "duration", "occurrence" : "?", "description" : "" } ], "returns" : { "type" : "integer?", "description" : "the number of hours in the given duration. <ul xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> <li><code>hours-from-duration(dayTimeDuration(\"P3DT10H\"))</code> returns <code>10</code>.</li> <li><code>hours-from-duration(dayTimeDuration(\"-P3DT10H\"))</code> returns <code>-10</code>.</li> </ul> For a detailed description of the semantics of this function, please see <a xmlns:xqdoc=\"http://www.xqdoc.org/1.0\" href=\"http://www.w3.org/TR/xpath-functions-30/#func-hours-from-duration\">hours-from-duration</a>" }, "errors" : [  ] }, { "isDocumented" : true, "arity" : 1, "name" : "hours-from-time", "qname" : "datetime:hours-from-time", "signature" : "($arg as time?) as integer?", "description" : " Returns the hours component of a time.\n", "summary" : "<p> Returns the hours component of a time.</p>", "annotation_str" : "", "annotations" : [  ], "updating" : false, "parameters" : [ { "name" : "arg", "type" : "time", "occurrence" : "?", "description" : "" } ], "returns" : { "type" : "integer?", "description" : "the hours component of the given time. <ul xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> <li><code>hours-from-time(time(\"11:23:00\"))</code> returns <code>11</code>.</li> <li><code>hours-from-time(time(\"24:00:00\"))</code> returns <code>0</code>.</li> <li><code>hours-from-time(adjust-time-to-timezone(time(\"01:23:00+05:00\"), dayTimeDuration(\"PT0S\")))</code> returns <code>20</code>.</li> </ul> For a detailed description of the semantics of this function, please see <a xmlns:xqdoc=\"http://www.xqdoc.org/1.0\" href=\"http://www.w3.org/TR/xpath-functions-30/#func-hours-from-time\">hours-from-time</a>" }, "errors" : [  ] }, { "isDocumented" : true, "arity" : 0, "name" : "implicit-timezone", "qname" : "datetime:implicit-timezone", "signature" : "() as dayTimeDuration", "description" : " Returns the value of the implicit timezone property set in the platform.\n", "summary" : "<p> Returns the value of the implicit timezone property set in the platform.</p>", "annotation_str" : "", "annotations" : [  ], "updating" : false, "parameters" : [  ], "returns" : { "type" : "dayTimeDuration", "description" : "the implicit timezone property. For a detailed description of the semantics of this function, please see <a xmlns:xqdoc=\"http://www.xqdoc.org/1.0\" href=\"http://www.w3.org/TR/xpath-functions-30/#func-implicit-timezone\">implicit-timezone</a>" }, "errors" : [  ] }, { "isDocumented" : true, "arity" : 1, "name" : "minutes-from-dateTime", "qname" : "datetime:minutes-from-dateTime", "signature" : "($arg as dateTime?) as integer?", "description" : " Returns the minute component of a dateTime.\n", "summary" : "<p> Returns the minute component of a dateTime.</p>", "annotation_str" : "", "annotations" : [  ], "updating" : false, "parameters" : [ { "name" : "arg", "type" : "dateTime", "occurrence" : "?", "description" : "" } ], "returns" : { "type" : "integer?", "description" : "the minute component of the given dateTime. <ul xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> <li><code>minutes-from-dateTime(dateTime(\"1999-05-31T13:20:00-05:00\"))</code> returns <code>20</code>.</li> </ul> For a detailed description of the semantics of this function, please see <a xmlns:xqdoc=\"http://www.xqdoc.org/1.0\" href=\"http://www.w3.org/TR/xpath-functions-30/#func-minutes-from-dateTime\">minutes-from-dateTime</a>" }, "errors" : [  ] }, { "isDocumented" : true, "arity" : 1, "name" : "minutes-from-duration", "qname" : "datetime:minutes-from-duration", "signature" : "($arg as duration?) as integer?", "description" : " Returns the number of minutes in a duration.\n", "summary" : "<p> Returns the number of minutes in a duration.</p>", "annotation_str" : "", "annotations" : [  ], "updating" : false, "parameters" : [ { "name" : "arg", "type" : "duration", "occurrence" : "?", "description" : "" } ], "returns" : { "type" : "integer?", "description" : "the number of minutes of the given duration. <ul xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> <li><code>minutes-from-duration(dayTimeDuration(\"P3DT10H\"))</code> returns <code>0</code>.</li> <li><code>minutes-from-duration(dayTimeDuration(\"-P5DT12H30M\"))</code> returns <code>-30</code>.</li> </ul> For a detailed description of the semantics of this function, please see <a xmlns:xqdoc=\"http://www.xqdoc.org/1.0\" href=\"http://www.w3.org/TR/xpath-functions-30/#func-minutes-from-duration\">minutes-from-duration</a>" }, "errors" : [  ] }, { "isDocumented" : true, "arity" : 1, "name" : "minutes-from-time", "qname" : "datetime:minutes-from-time", "signature" : "($arg as time?) as integer?", "description" : " Returns the minutes component of a time.\n", "summary" : "<p> Returns the minutes component of a time.</p>", "annotation_str" : "", "annotations" : [  ], "updating" : false, "parameters" : [ { "name" : "arg", "type" : "time", "occurrence" : "?", "description" : "" } ], "returns" : { "type" : "integer?", "description" : "the minutes component of the given time. <ul xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> <li><code>minutes-from-time(time(\"13:00:00Z\"))</code> returns <code>0</code>.</li> </ul> For a detailed description of the semantics of this function, please see <a xmlns:xqdoc=\"http://www.xqdoc.org/1.0\" href=\"http://www.w3.org/TR/xpath-functions-30/#func-minutes-from-time\">minutes-from-time</a>" }, "errors" : [  ] }, { "isDocumented" : true, "arity" : 1, "name" : "month-from-date", "qname" : "datetime:month-from-date", "signature" : "($arg as date?) as integer?", "description" : " Returns the month component of a date.\n", "summary" : "<p> Returns the month component of a date.</p>", "annotation_str" : "", "annotations" : [  ], "updating" : false, "parameters" : [ { "name" : "arg", "type" : "date", "occurrence" : "?", "description" : "" } ], "returns" : { "type" : "integer?", "description" : "the month component of the given date. <ul xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> <li><code>month-from-date(date(\"1999-05-31-05:00\"))</code> returns <code>5</code>.</li> <li><code>month-from-date(date(\"2000-01-01+05:00\"))</code> returns <code>1</code>.</li> </ul> For a detailed description of the semantics of this function, please see <a xmlns:xqdoc=\"http://www.xqdoc.org/1.0\" href=\"http://www.w3.org/TR/xpath-functions-30/#func-month-from-date\">month-from-date</a>" }, "errors" : [  ] }, { "isDocumented" : true, "arity" : 1, "name" : "month-from-dateTime", "qname" : "datetime:month-from-dateTime", "signature" : "($arg as dateTime?) as integer?", "description" : " Returns the month component of a dateTime.\n", "summary" : "<p> Returns the month component of a dateTime.</p>", "annotation_str" : "", "annotations" : [  ], "updating" : false, "parameters" : [ { "name" : "arg", "type" : "dateTime", "occurrence" : "?", "description" : "" } ], "returns" : { "type" : "integer?", "description" : "the month component of the given dateTime. <ul xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> <li><code>month-from-dateTime(dateTime(\"1999-05-31T21:20:00-05:00\"))</code> returns <code>5</code>.</li> <li><code>month-from-dateTime(dateTime(\"2000-01-01T11:05:00+05:00\"))</code> returns <code>1</code>.</li> </ul> For a detailed description of the semantics of this function, please see <a xmlns:xqdoc=\"http://www.xqdoc.org/1.0\" href=\"http://www.w3.org/TR/xpath-functions-30/#func-month-from-dateTime\">month-from-dateTime</a>" }, "errors" : [  ] }, { "isDocumented" : true, "arity" : 1, "name" : "months-from-duration", "qname" : "datetime:months-from-duration", "signature" : "($arg as duration?) as integer?", "description" : " Returns the number of months in a duration.\n", "summary" : "<p> Returns the number of months in a duration.</p>", "annotation_str" : "", "annotations" : [  ], "updating" : false, "parameters" : [ { "name" : "arg", "type" : "duration", "occurrence" : "?", "description" : "" } ], "returns" : { "type" : "integer?", "description" : "the number of months in the given duration. <ul xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> <li><code>months-from-duration(yearMonthDuration(\"P20Y15M\"))</code> returns <code>3</code>.</li> <li><code>months-from-duration(yearMonthDuration(\"-P20Y18M\"))</code> returns <code>6</code>.</li> </ul> For a detailed description of the semantics of this function, please see <a xmlns:xqdoc=\"http://www.xqdoc.org/1.0\" href=\"http://www.w3.org/TR/xpath-functions-30/#func-months-from-duration\">months-from-duration</a>" }, "errors" : [  ] }, { "isDocumented" : true, "arity" : 1, "name" : "seconds-from-dateTime", "qname" : "datetime:seconds-from-dateTime", "signature" : "($arg as dateTime?) as decimal?", "description" : " Returns the seconds component of a dateTime.\n", "summary" : "<p> Returns the seconds component of a dateTime.</p>", "annotation_str" : "", "annotations" : [  ], "updating" : false, "parameters" : [ { "name" : "arg", "type" : "dateTime", "occurrence" : "?", "description" : "" } ], "returns" : { "type" : "decimal?", "description" : "the seconds component of the given dateTime. <ul xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> <li><code>seconds-from-dateTime(dateTime(\"1999-05-31T13:20:00-05:00\"))</code> returns <code>0</code>.</li> </ul> For a detailed description of the semantics of this function, please see <a xmlns:xqdoc=\"http://www.xqdoc.org/1.0\" href=\"http://www.w3.org/TR/xpath-functions-30/#func-seconds-from-dateTime\">seconds-from-dateTime</a>" }, "errors" : [  ] }, { "isDocumented" : true, "arity" : 1, "name" : "seconds-from-duration", "qname" : "datetime:seconds-from-duration", "signature" : "($arg as duration?) as decimal?", "description" : " Returns the number of seconds in a duration.\n", "summary" : "<p> Returns the number of seconds in a duration.</p>", "annotation_str" : "", "annotations" : [  ], "updating" : false, "parameters" : [ { "name" : "arg", "type" : "duration", "occurrence" : "?", "description" : "" } ], "returns" : { "type" : "decimal?", "description" : "the number of seconds in the given duration. <ul xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> <li><code>seconds-from-duration(dayTimeDuration(\"P3DT10H12.5S\"))</code> returns <code>12.5</code>.</li> <li><code>seconds-from-duration(dayTimeDuration(\"-PT256S\"))</code> returns <code>-16.0</code>.</li> </ul> For a detailed description of the semantics of this function, please see <a xmlns:xqdoc=\"http://www.xqdoc.org/1.0\" href=\"http://www.w3.org/TR/xpath-functions-30/#func-seconds-from-duration\">seconds-from-duration</a>" }, "errors" : [  ] }, { "isDocumented" : true, "arity" : 1, "name" : "seconds-from-time", "qname" : "datetime:seconds-from-time", "signature" : "($arg as time?) as decimal?", "description" : " Returns the seconds component of a time.\n", "summary" : "<p> Returns the seconds component of a time.</p>", "annotation_str" : "", "annotations" : [  ], "updating" : false, "parameters" : [ { "name" : "arg", "type" : "time", "occurrence" : "?", "description" : "" } ], "returns" : { "type" : "decimal?", "description" : "the seconds component of the given time. <ul xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> <li><code>seconds-from-time(time(\"13:20:10.5\"))</code> returns <code>10.5</code>.</li> </ul> For a detailed description of the semantics of this function, please see <a xmlns:xqdoc=\"http://www.xqdoc.org/1.0\" href=\"http://www.w3.org/TR/xpath-functions-30/#func-seconds-from-time\">seconds-from-time</a>" }, "errors" : [  ] }, { "isDocumented" : true, "arity" : 1, "name" : "timezone-from-date", "qname" : "datetime:timezone-from-date", "signature" : "($arg as date?) as dayTimeDuration?", "description" : " Returns the timezone component of a date.\n", "summary" : "<p> Returns the timezone component of a date.</p>", "annotation_str" : "", "annotations" : [  ], "updating" : false, "parameters" : [ { "name" : "arg", "type" : "date", "occurrence" : "?", "description" : "" } ], "returns" : { "type" : "dayTimeDuration?", "description" : "the timezone component of the given date. <ul xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> <li><code>timezone-from-date(date(\"1999-05-31-05:00\"))</code> returns <code>dayTimeDuration(\"-PT5H\")</code>.</li> <li><code>timezone-from-date(date(\"2000-06-12Z\"))</code> returns <code>dayTimeDuration(\"PT0S\")</code>.</li> </ul> For a detailed description of the semantics of this function, please see <a xmlns:xqdoc=\"http://www.xqdoc.org/1.0\" href=\"http://www.w3.org/TR/xpath-functions-30/#func-timezone-from-date\">timezone-from-date</a>" }, "errors" : [  ] }, { "isDocumented" : true, "arity" : 1, "name" : "timezone-from-dateTime", "qname" : "datetime:timezone-from-dateTime", "signature" : "($arg as dateTime?) as dayTimeDuration?", "description" : " Returns the timezone component of a dateTime.\n", "summary" : "<p> Returns the timezone component of a dateTime.</p>", "annotation_str" : "", "annotations" : [  ], "updating" : false, "parameters" : [ { "name" : "arg", "type" : "dateTime", "occurrence" : "?", "description" : "" } ], "returns" : { "type" : "dayTimeDuration?", "description" : "the timezone component of the given dateTime. <ul xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> <li><code>timezone-from-dateTime(dateTime(\"1999-05-31T13:20:00-05:00\"))</code> returns <code>dayTimeDuration(\"-PT5H\")</code>.</li> <li><code>timezone-from-dateTime(dateTime(\"2000-06-12T13:20:00Z\"))</code> returns <code>dayTimeDuration(\"PT0S\")</code>.</li> </ul> For a detailed description of the semantics of this function, please see <a xmlns:xqdoc=\"http://www.xqdoc.org/1.0\" href=\"http://www.w3.org/TR/xpath-functions-30/#func-timezone-from-dateTime\">timezone-from-dateTime</a>" }, "errors" : [  ] }, { "isDocumented" : true, "arity" : 1, "name" : "timezone-from-time", "qname" : "datetime:timezone-from-time", "signature" : "($arg as time?) as dayTimeDuration?", "description" : " Returns the timezone component of a time.\n", "summary" : "<p> Returns the timezone component of a time.</p>", "annotation_str" : "", "annotations" : [  ], "updating" : false, "parameters" : [ { "name" : "arg", "type" : "time", "occurrence" : "?", "description" : "" } ], "returns" : { "type" : "dayTimeDuration?", "description" : "the timezone component of the given time. <ul xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> <li><code>timezone-from-time(time(\"13:20:00-05:00\"))</code> returns <code>dayTimeDuration(\"-PT5H\")</code>.</li> <li><code>timezone-from-time(time(\"13:20:00\"))</code> returns <code>()</code>.</li> </ul> For a detailed description of the semantics of this function, please see <a xmlns:xqdoc=\"http://www.xqdoc.org/1.0\" href=\"http://www.w3.org/TR/xpath-functions-30/#func-timezone-from-time\">timezone-from-time</a>" }, "errors" : [  ] }, { "isDocumented" : true, "arity" : 1, "name" : "year-from-date", "qname" : "datetime:year-from-date", "signature" : "($arg as date?) as integer?", "description" : " Returns the year component of a date.\n", "summary" : "<p> Returns the year component of a date.</p>", "annotation_str" : "", "annotations" : [  ], "updating" : false, "parameters" : [ { "name" : "arg", "type" : "date", "occurrence" : "?", "description" : "" } ], "returns" : { "type" : "integer?", "description" : "the year component of the given date. <ul xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> <li><code>year-from-date(date(\"2000-01-01+05:00\"))</code> returns <code>2000</code>.</li> </ul> For a detailed description of the semantics of this function, please see <a xmlns:xqdoc=\"http://www.xqdoc.org/1.0\" href=\"http://www.w3.org/TR/xpath-functions-30/#func-year-from-date\">year-from-date</a>" }, "errors" : [  ] }, { "isDocumented" : true, "arity" : 1, "name" : "year-from-dateTime", "qname" : "datetime:year-from-dateTime", "signature" : "($arg as dateTime?) as integer?", "description" : " Returns the year component of a dateTime.\n", "summary" : "<p> Returns the year component of a dateTime.</p>", "annotation_str" : "", "annotations" : [  ], "updating" : false, "parameters" : [ { "name" : "arg", "type" : "dateTime", "occurrence" : "?", "description" : "" } ], "returns" : { "type" : "integer?", "description" : "the year component of the given dateTime. <ul xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> <li><code>year-from-dateTime(dateTime(\"1999-05-31T13:20:00-05:00\"))</code> returns <code>1999</code>.</li> <li><code>year-from-dateTime(dateTime(\"1999-12-31T24:00:00\"))</code> returns <code>2000</code>.</li> </ul> For a detailed description of the semantics of this function, please see <a xmlns:xqdoc=\"http://www.xqdoc.org/1.0\" href=\"http://www.w3.org/TR/xpath-functions-30/#func-year-from-dateTime\">year-from-dateTime</a>" }, "errors" : [  ] }, { "isDocumented" : true, "arity" : 1, "name" : "years-from-duration", "qname" : "datetime:years-from-duration", "signature" : "($arg as duration?) as integer?", "description" : " Returns the number of years in a duration.\n", "summary" : "<p> Returns the number of years in a duration.</p>", "annotation_str" : "", "annotations" : [  ], "updating" : false, "parameters" : [ { "name" : "arg", "type" : "duration", "occurrence" : "?", "description" : "" } ], "returns" : { "type" : "integer?", "description" : "the number of years in the given duration. <ul xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> <li><code>years-from-duration(yearMonthDuration(\"P20Y15M\"))</code> returns <code>21</code>.</li> <li><code>years-from-duration(yearMonthDuration(\"-P15M\"))</code> returns <code>-1</code>.</li> </ul> For a detailed description of the semantics of this function, please see <a xmlns:xqdoc=\"http://www.xqdoc.org/1.0\" href=\"http://www.w3.org/TR/xpath-functions-30/#func-years-from-duration\">years-from-duration</a>" }, "errors" : [  ] } ], "variables" : [  ] }, "http://api.28.io/jdbc" : { "ns" : "http://api.28.io/jdbc", "description" : "", "sees" : [  ], "authors" : [  ], "version" : null, "encoding" : null, "namespaces" : [ { "uri" : "", "prefix" : "an" }, { "uri" : "http://api.28.io/jdbc", "prefix" : "api" }, { "uri" : "http://www.28msec.com/modules/jdbc", "prefix" : "jdbc" }, { "uri" : "http://www.28msec.com/modules/http/request", "prefix" : "req" }, { "uri" : "http://www.28msec.com/modules/http/response", "prefix" : "res" }, { "uri" : "http://www.28msec.com/modules/store", "prefix" : "store" }, { "uri" : "http://zorba.io/errors", "prefix" : "zerr" } ], "functions" : [ { "isDocumented" : false, "arity" : 0, "name" : "dispatch", "qname" : "api:dispatch", "signature" : "()", "description" : "", "summary" : "", "annotation_str" : " %an:sequential", "annotations" : [ { "prefix" : "an", "ns" : "", "name" : "sequential", "value" : "" } ], "updating" : false, "parameters" : [  ], "returns" : { "type" : null, "description" : "" }, "errors" : [  ] }, { "isDocumented" : false, "arity" : 0, "name" : "import", "qname" : "api:import", "signature" : "()", "description" : "", "summary" : "", "annotation_str" : " %an:sequential", "annotations" : [ { "prefix" : "an", "ns" : "", "name" : "sequential", "value" : "" } ], "updating" : false, "parameters" : [  ], "returns" : { "type" : null, "description" : "" }, "errors" : [  ] }, { "isDocumented" : false, "arity" : 0, "name" : "tables", "qname" : "api:tables", "signature" : "()", "description" : "", "summary" : "", "annotation_str" : " %an:sequential", "annotations" : [ { "prefix" : "an", "ns" : "", "name" : "sequential", "value" : "" } ], "updating" : false, "parameters" : [  ], "returns" : { "type" : null, "description" : "" }, "errors" : [  ] } ], "variables" : [  ] }, "http://zorba.io/modules/excel/information" : { "ns" : "http://zorba.io/modules/excel/information", "description" : " This is a library module offering the same set of functions\n defined by Microsoft Excel, under Information Functions.\n", "sees" : [ "<xqdoc:see xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"><a href=\"http://office.microsoft.com/en-us/excel/CH062528261033.aspx\" target=\"_blank\">Excel Documentation: Information Functions</a></xqdoc:see>" ], "authors" : [ "<xqdoc:author xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">Sorin Nasoi</xqdoc:author>" ], "version" : null, "encoding" : "utf-8", "namespaces" : [ { "uri" : "http://zorba.io/modules/excel/errors", "prefix" : "excel-err" }, { "uri" : "http://zorba.io/modules/excel/information", "prefix" : "excel-information" }, { "uri" : "http://zorba.io/modules/excel/math", "prefix" : "excel-math" }, { "uri" : "http://zorba.io/options/versioning", "prefix" : "ver" } ], "functions" : [ { "isDocumented" : true, "arity" : 1, "name" : "is-blank", "qname" : "excel-information:is-blank", "signature" : "($value as xs:anyAtomicType?) as xs:boolean", "description" : " Test if the passed argument is empty of not.\n", "summary" : "<p> Test if the passed argument is empty of not.</p>", "annotation_str" : "", "annotations" : [  ], "updating" : false, "parameters" : [ { "name" : "value", "type" : "xs:anyAtomicType", "occurrence" : "?", "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> the value.</div>" } ], "returns" : { "type" : "xs:boolean", "description" : "If the value of $arg is the empty sequence, the function returns true, otherwise the function returns false." }, "errors" : [  ] }, { "isDocumented" : true, "arity" : 1, "name" : "is-even", "qname" : "excel-information:is-even", "signature" : "($value as xs:anyAtomicType?) as xs:boolean", "description" : " Test is a number is even.\n", "summary" : "<p> Test is a number is even.</p>", "annotation_str" : "", "annotations" : [  ], "updating" : false, "parameters" : [ { "name" : "value", "type" : "xs:anyAtomicType", "occurrence" : "?", "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> the value.</div>" } ], "returns" : { "type" : "xs:boolean", "description" : "TRUE if number is even, FALSE if number is odd." }, "errors" : [ "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">excel-err:Value if provided value is not a number.</xqdoc:error>" ] }, { "isDocumented" : true, "arity" : 1, "name" : "is-odd", "qname" : "excel-information:is-odd", "signature" : "($value as xs:anyAtomicType?) as xs:boolean", "description" : " Test is a number is odd.\n", "summary" : "<p> Test is a number is odd.</p>", "annotation_str" : "", "annotations" : [  ], "updating" : false, "parameters" : [ { "name" : "value", "type" : "xs:anyAtomicType", "occurrence" : "?", "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> the value.</div>" } ], "returns" : { "type" : "xs:boolean", "description" : "TRUE if number is odd, FALSE if number is even." }, "errors" : [ "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">excel-err:Value if provided value is not a number.</xqdoc:error>" ] }, { "isDocumented" : true, "arity" : 1, "name" : "islogical", "qname" : "excel-information:islogical", "signature" : "($value as xs:anyAtomicType?) as xs:boolean", "description" : " Tests if the passed $value is a logical value.\n", "summary" : "<p> Tests if the passed $value is a logical value.</p>", "annotation_str" : "", "annotations" : [  ], "updating" : false, "parameters" : [ { "name" : "value", "type" : "xs:anyAtomicType", "occurrence" : "?", "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> the value.</div>" } ], "returns" : { "type" : "xs:boolean", "description" : "TRUE if $value refers to a logical value." }, "errors" : [  ] }, { "isDocumented" : true, "arity" : 1, "name" : "isnumber", "qname" : "excel-information:isnumber", "signature" : "($value as xs:anyAtomicType?) as xs:boolean", "description" : " Tests if the passed $value is a number.\n", "summary" : "<p> Tests if the passed $value is a number.</p>", "annotation_str" : "", "annotations" : [  ], "updating" : false, "parameters" : [ { "name" : "value", "type" : "xs:anyAtomicType", "occurrence" : "?", "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> the value.</div>" } ], "returns" : { "type" : "xs:boolean", "description" : "TRUE if $value refers to a number." }, "errors" : [  ] }, { "isDocumented" : true, "arity" : 1, "name" : "istext", "qname" : "excel-information:istext", "signature" : "($value as xs:anyAtomicType?) as xs:boolean", "description" : " Tests if the passed $value is a string.\n", "summary" : "<p> Tests if the passed $value is a string.</p>", "annotation_str" : "", "annotations" : [  ], "updating" : false, "parameters" : [ { "name" : "value", "type" : "xs:anyAtomicType", "occurrence" : "?", "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> the value.</div>" } ], "returns" : { "type" : "xs:boolean", "description" : "TRUE if $value refers to text." }, "errors" : [  ] }, { "isDocumented" : true, "arity" : 1, "name" : "n", "qname" : "excel-information:n", "signature" : "($value as xs:anyAtomicType?) as xs:anyAtomicType", "description" : " Converts a $value to a number.\n", "summary" : "<p> Converts a $value to a number.</p>", "annotation_str" : "", "annotations" : [  ], "updating" : false, "parameters" : [ { "name" : "value", "type" : "xs:anyAtomicType", "occurrence" : "?", "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> the value.</div>" } ], "returns" : { "type" : "xs:anyAtomicType", "description" : "A $value converted to a number." }, "errors" : [  ] }, { "isDocumented" : true, "arity" : 0, "name" : "na", "qname" : "excel-information:na", "signature" : "() as xs:anyAtomicType", "description" : " Raises the error value #N/A.\n", "summary" : "<p> Raises the error value #N/A.</p>", "annotation_str" : "", "annotations" : [  ], "updating" : false, "parameters" : [  ], "returns" : { "type" : "xs:anyAtomicType", "description" : "The error value #N/A. #N/A is the error value that means \"no value is available.\"" }, "errors" : [ "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">excel-err:NA the purpose of this function is to raise this error</xqdoc:error>" ] } ], "variables" : [  ] }, "http://www.zorba-xquery.com/modules/image/animation" : { "ns" : "http://www.zorba-xquery.com/modules/image/animation", "description" : " This module provides functions to create animated GIF images.\n", "sees" : [  ], "authors" : [ "<xqdoc:author xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">Daniel Thomas</xqdoc:author>" ], "version" : null, "encoding" : "utf-8", "namespaces" : [ { "uri" : "http://www.zorba-xquery.com/modules/image/animation", "prefix" : "anim" }, { "uri" : "http://www.zorba-xquery.com/modules/image/error", "prefix" : "ierr" }, { "uri" : "http://zorba.io/options/versioning", "prefix" : "ver" } ], "functions" : [ { "isDocumented" : true, "arity" : 3, "name" : "create-animated-gif", "qname" : "anim:create-animated-gif", "signature" : "($images as xs:base64Binary+, $delay as xs:unsignedInt, $iterations as xs:unsignedInt) as xs:base64Binary external", "description" : " Creates an animated GIF image.\n The resulting animated GIF shows the passed images consecutively.\n It has the same width and height as the first passed image.\n", "summary" : "<p> Creates an animated GIF image.</p>", "annotation_str" : "", "annotations" : [  ], "updating" : false, "parameters" : [ { "name" : "images", "type" : "xs:base64Binary", "occurrence" : "+", "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> the image sequence</div>" }, { "name" : "delay", "type" : "xs:unsignedInt", "occurrence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> the hundredths of seconds an image is shown</div>" }, { "name" : "iterations", "type" : "xs:unsignedInt", "occurrence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> the amount of times all images are shown. 0 for infinite.</div>" } ], "returns" : { "type" : "xs:base64Binary", "description" : "the animated GIF" }, "errors" : [ "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">ierr:IM001 one of the passed images is invalid.</xqdoc:error>" ] }, { "isDocumented" : true, "arity" : 4, "name" : "create-morphed-gif", "qname" : "anim:create-morphed-gif", "signature" : "($images as xs:base64Binary+, $delay as xs:unsignedInt, $iterations as xs:unsignedInt, $nr-of-morph-images as xs:unsignedInt) as xs:base64Binary external", "description" : " Creates an animated GIF image with morph effect.\n The resulting animated GIF shows the passed images consecutively with morph effect between the changes.\n It has the same width and height as the first passed image.\n", "summary" : "<p> Creates an animated GIF image with morph effect.</p>", "annotation_str" : "", "annotations" : [  ], "updating" : false, "parameters" : [ { "name" : "images", "type" : "xs:base64Binary", "occurrence" : "+", "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> the image sequence</div>" }, { "name" : "delay", "type" : "xs:unsignedInt", "occurrence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> the hundredths of seconds an image is shown</div>" }, { "name" : "iterations", "type" : "xs:unsignedInt", "occurrence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> the amount of times all images are shown. 0 for infinite.</div>" }, { "name" : "nr-of-morph-images", "type" : "xs:unsignedInt", "occurrence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> the number of additionally added images to create the morph effect between two passed images.</div>" } ], "returns" : { "type" : "xs:base64Binary", "description" : "the animated GIF" }, "errors" : [ "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">ierr:IM001 one of the passed images is invalid.</xqdoc:error>" ] } ], "variables" : [  ] }, "http://28.io/modules/error" : { "ns" : "http://28.io/modules/error", "description" : " <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">Applications written with Sausalito use this default error module\n if an error happens inside a Sausalito project.</p>\n <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">An error can occur during the run time of a Sausalito project on one\n of the following cases:</p>\n <ol xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">\n   <li>If the XQuery code raises a dynamic error that is not caught in a\n     try-catch block.</li>\n   <li>If the given XQuery program is syntactically incorrect or contains\n     other static errors.</li>\n   <li>If an explicit call to fn:error() was made and the error is not\n     caught in a try-catch block.</li>\n   <li>If a request is made to a module or a function which does\n     not exist.</li>\n   <li>If any other unexpected error happens during the processing of\n     the request.</li>\n </ol>\n", "sees" : [  ], "authors" : [ "<xqdoc:author xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">28msec</xqdoc:author>" ], "version" : null, "encoding" : "utf-8", "namespaces" : [ { "uri" : "http://zorba.io/annotations", "prefix" : "an" }, { "uri" : "http://28.io/modules/error", "prefix" : "err" }, { "uri" : "http://www.28msec.com/modules/http/request", "prefix" : "request" }, { "uri" : "http://www.28msec.com/modules/http/response", "prefix" : "resp" }, { "uri" : "http://zorba.io/options/versioning", "prefix" : "ver" } ], "functions" : [ { "isDocumented" : true, "arity" : 4, "name" : "handle", "qname" : "err:handle", "signature" : "($code as xs:QName, $description as xs:string?, $value as item()*, $stack) as item()*", "description" : " <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">This is the default function that is called if an error happens.\n The default can be overridden by adding an error.xq library module\n into the Sausalito project. This module needs to declare a function\n with the same signature as the err:handle function in this module.</p>\n <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">The value returned by this function is sent to the client. If the\n default is overridden, the implementation is free to define all\n parameters of the response (e.g. set the corresponding HTTP status\n code or an arbitrary header).</p>\n <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">If the default is used, the status code is 500 if the $code QName\n is not equal to one of the status code QNames declared in HTTP module.\n Otherwise, the corresponding status code is set.</p>\n", "summary" : "<p>  This is the default function that is called if an error happens.</p>", "annotation_str" : " %an:sequential", "annotations" : [ { "prefix" : "an", "ns" : "http://zorba.io/annotations", "name" : "sequential", "value" : "" } ], "updating" : false, "parameters" : [ { "name" : "code", "type" : "xs:QName", "occurrence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> the error code that triggered the problem as a QName</div>" }, { "name" : "description", "type" : "xs:string", "occurrence" : "?", "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> a description of the error</div>" }, { "name" : "value", "type" : "item()", "occurrence" : "*", "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> a potentially empty list of items that were involved in causing the error</div>" }, { "name" : "stack", "type" : null, "occurrence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> the stacktrace leading to the error as an element. For example, <tt> &lt;stack&gt; &lt;call ns=\"http://www.example.com/\" localName=\"my-function\" arity=\"3\"/&gt; &lt;/stack&gt; </tt></div>" } ], "returns" : { "type" : "item()*", "description" : "content of the response message" }, "errors" : [  ] } ], "variables" : [  ] }, "http://www.zorba-xquery.com/modules/internal-debug" : { "ns" : "http://www.zorba-xquery.com/modules/internal-debug", "description" : " This internal module provides functions for testing error handling and\n internal function caching.\n", "sees" : [  ], "authors" : [ "<xqdoc:author xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">Federico Cavalieri</xqdoc:author>" ], "version" : null, "encoding" : "utf-8", "namespaces" : [ { "uri" : "http://www.zorba-xquery.com/modules/internal-debug", "prefix" : "debug" }, { "uri" : "http://zorba.io/options/versioning", "prefix" : "ver" } ], "functions" : [ { "isDocumented" : true, "arity" : 0, "name" : "cpp-error", "qname" : "debug:cpp-error", "signature" : "() as empty-sequence() external", "description" : " Raises a c++ exception.\n", "summary" : "<p> Raises a c++ exception.</p>", "annotation_str" : "", "annotations" : [  ], "updating" : false, "parameters" : [  ], "returns" : { "type" : "empty-sequence()", "description" : "empty sequence" }, "errors" : [  ] }, { "isDocumented" : true, "arity" : 0, "name" : "cpp-exit", "qname" : "debug:cpp-exit", "signature" : "() as empty-sequence() external", "description" : " C++ exit is invoked.\n", "summary" : "<p> C++ exit is invoked.</p>", "annotation_str" : "", "annotations" : [  ], "updating" : false, "parameters" : [  ], "returns" : { "type" : "empty-sequence()", "description" : "empty sequence" }, "errors" : [  ] }, { "isDocumented" : true, "arity" : 0, "name" : "user-error-no-location", "qname" : "debug:user-error-no-location", "signature" : "() as empty-sequence() external", "description" : " Raises a user error without query location.\n", "summary" : "<p> Raises a user error without query location.</p>", "annotation_str" : "", "annotations" : [  ], "updating" : false, "parameters" : [  ], "returns" : { "type" : "empty-sequence()", "description" : "empty sequence" }, "errors" : [  ] }, { "isDocumented" : true, "arity" : 0, "name" : "user-error", "qname" : "debug:user-error", "signature" : "() as empty-sequence() external", "description" : " Raises a user error.\n", "summary" : "<p> Raises a user error.</p>", "annotation_str" : "", "annotations" : [  ], "updating" : false, "parameters" : [  ], "returns" : { "type" : "empty-sequence()", "description" : "empty sequence" }, "errors" : [  ] }, { "isDocumented" : true, "arity" : 0, "name" : "zorba-error", "qname" : "debug:zorba-error", "signature" : "() as empty-sequence() external", "description" : " Raises a zorba error.\n", "summary" : "<p> Raises a zorba error.</p>", "annotation_str" : "", "annotations" : [  ], "updating" : false, "parameters" : [  ], "returns" : { "type" : "empty-sequence()", "description" : "empty sequence" }, "errors" : [  ] } ], "variables" : [  ] }, "http://zorba.io/modules/reflection" : { "ns" : "http://zorba.io/modules/reflection", "description" : " This module provides functions to dynamically invoke functions or main modules,\n respectively. Each of the functions (invoke or eval) come in four variants depending\n whether the expression being invoked is simple, nondeterministic, updating,\n or sequential.\n", "sees" : [  ], "authors" : [ "<xqdoc:author xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">Nicolae Brinza</xqdoc:author>" ], "version" : null, "encoding" : "utf-8", "namespaces" : [ { "uri" : "http://zorba.io/annotations", "prefix" : "an" }, { "uri" : "http://www.w3.org/2005/xqt-errors", "prefix" : "err" }, { "uri" : "http://zorba.io/modules/reflection", "prefix" : "reflection" }, { "uri" : "http://zorba.io/options/versioning", "prefix" : "ver" } ], "functions" : [ { "isDocumented" : true, "arity" : 1, "name" : "eval-n", "qname" : "reflection:eval-n", "signature" : "($query as xs:string) as item()* external", "description" : " See documentation of reflection:eval() except the main module that is to\n be executed may be nondeterministc.\n", "summary" : "<p> See documentation of reflection:eval() except the main module that is to\n be executed may be nondeterministc.</p>", "annotation_str" : " %an:nondeterministic", "annotations" : [ { "prefix" : "an", "ns" : "http://zorba.io/annotations", "name" : "nondeterministic", "value" : "" } ], "updating" : false, "parameters" : [ { "name" : "query", "type" : "xs:string", "occurrence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> the query string to be evaluated</div>" } ], "returns" : { "type" : "item()*", "description" : "the result of evaluating the query" }, "errors" : [ "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">whatever error the evaluated XQuery may return</xqdoc:error>", "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">err:XQST0031 If the XQuery version of the inner program is greater than the version of the outer program.</xqdoc:error>" ] }, { "isDocumented" : true, "arity" : 1, "name" : "eval-s", "qname" : "reflection:eval-s", "signature" : "($query as xs:string) as item()* external", "description" : " See documentation of reflection:eval() except the main module that is to\n be executed may be sequential, i.e. may have side-effects.\n", "summary" : "<p> See documentation of reflection:eval() except the main module that is to\n be executed may be sequential, i.</p>", "annotation_str" : " %an:sequential", "annotations" : [ { "prefix" : "an", "ns" : "http://zorba.io/annotations", "name" : "sequential", "value" : "" } ], "updating" : false, "parameters" : [ { "name" : "query", "type" : "xs:string", "occurrence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> the query string to be evaluated</div>" } ], "returns" : { "type" : "item()*", "description" : "the result of evaluating the query (the result is not supposed to contain any PUL)." }, "errors" : [ "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">whatever error the evaluated XQuery may return</xqdoc:error>", "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">err:XQST0031 If the XQuery version of the inner program is greater than the version of the outer program.</xqdoc:error>" ] }, { "isDocumented" : true, "arity" : 1, "name" : "eval-u", "qname" : "reflection:eval-u", "signature" : "($query as xs:string) external", "description" : " See documentation of reflection:eval() except the main module that is to\n be executed may be updating, i.e. return a pending update list.\n", "summary" : "<p> See documentation of reflection:eval() except the main module that is to\n be executed may be updating, i.</p>", "annotation_str" : " %an:nondeterministic", "annotations" : [ { "prefix" : "an", "ns" : "http://zorba.io/annotations", "name" : "nondeterministic", "value" : "" } ], "updating" : true, "parameters" : [ { "name" : "query", "type" : "xs:string", "occurrence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> the query string to be evaluated</div>" } ], "returns" : { "type" : null, "description" : "the PUL resulting from evaluating the query" }, "errors" : [ "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">whatever error the evaluated XQuery may return</xqdoc:error>", "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">err:XQST0031 If the XQuery version of the inner program is greater than the version of the outer program.</xqdoc:error>" ] }, { "isDocumented" : true, "arity" : 1, "name" : "eval", "qname" : "reflection:eval", "signature" : "($query as xs:string) as item()* external", "description" : " The purpose of this function is to (dynamically) execute an XQuery program\n from inside another XQuery program.<p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"/>\n The XQuery program that invokes the\n eval function will be referred to as the \"outer\" program and the XQuery\n program that is executed by the eval invocation will be referred to as\n the \"inner\" program. The function is given as a string argument.\n Typically, the outer program constructs this string dynamically,\n e.g., based on data extracted from documents and/or the values of\n external variables. The eval function treats this string as\n an XQuery main module. That is, it parses the string, compiles the\n resulting parse tree, executes the resulting execution plan, and finally\n returns the result or error (if any) to the outer program.<p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"/>\n The given XQuery program needs to be a valid according to XQuery's\n MainModule production (see <a xmlns:xqdoc=\"http://www.xqdoc.org/1.0\" href=\"http://www.w3.org/TR/xquery/#doc-xquery-MainModule\">\n http://www.w3.org/TR/xquery/#doc-xquery-MainModule</a>. Please note\n that the inner pogram must at least have the XQuery version of the\n outer program [err:XQST0031].<p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"/>\n The inner program \"inherits\" the static and dynamic context of the outer\n program. Specifically, evaluation of the inner program is done in static and\n dynamic contextes that are initialized as copies of the static and dynamic\n contextes of the outer program at the place where the eval invocation appears\n at. This means that, for example, all variables that are in-scope at the place\n where the eval function is invoked from, are also in-scope inside the inner\n program and can be referenced there without having to be re-declared. On the other\n hand, declarations that appear in the prolog of the inner main module or are\n imported by the inner main module from library modules, hide their corresponding\n inherited declarations. For example, if the inner main module declares\n a variable or function with the same name as an inherited variable or function,\n the inner variable/function hides the inherited one.<p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"/>\n If the inner program declares an external variable with the same name as an\n inherited variable, the value of the inherited variable is used to initialize\n the inner external variable. If, however, an inner external variable has no\n default initializer and no corresponding inherited variable, it will remain\n uninitialized, causing the inner program to raise an error when executed.\n", "summary" : "<p> The purpose of this function is to (dynamically) execute an XQuery program\n from inside another XQuery program.</p>", "annotation_str" : "", "annotations" : [  ], "updating" : false, "parameters" : [ { "name" : "query", "type" : "xs:string", "occurrence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> the query string to be evaluated</div>" } ], "returns" : { "type" : "item()*", "description" : "the result of evaluating the query" }, "errors" : [ "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">whatever error the evaluated XQuery may return.</xqdoc:error>", "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">err:XQST0031 If the XQuery version of the inner program is greater than the version of the outer program.</xqdoc:error>" ] }, { "isDocumented" : true, "arity" : 1, "name" : "invoke-n", "qname" : "reflection:invoke-n", "signature" : "($name as xs:QName) as item()* external", "description" : " See documentation for reflection:invoke except the function that\n is to be invoked may be nondeterministic.\n", "summary" : "<p> See documentation for reflection:invoke except the function that\n is to be invoked may be nondeterministic.</p>", "annotation_str" : " %an:nondeterministic %an:variadic", "annotations" : [ { "prefix" : "an", "ns" : "http://zorba.io/annotations", "name" : "nondeterministic", "value" : "" }, { "prefix" : "an", "ns" : "http://zorba.io/annotations", "name" : "variadic", "value" : "" } ], "updating" : true, "parameters" : [ { "name" : "name", "type" : "xs:QName", "occurrence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> the QName of the function that is to be invoked</div>" } ], "returns" : { "type" : "item()*", "description" : "the result that is returned by the invoked function" }, "errors" : [ "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">whatever error the invoked function may return</xqdoc:error>" ] }, { "isDocumented" : true, "arity" : 1, "name" : "invoke-s", "qname" : "reflection:invoke-s", "signature" : "($name as xs:QName) as item()* external", "description" : " See documentation for reflection:invoke except the function that\n is to be invoked may be sequential, i.e. may have side-effects.\n", "summary" : "<p> See documentation for reflection:invoke except the function that\n is to be invoked may be sequential, i.</p>", "annotation_str" : " %an:variadic %an:sequential", "annotations" : [ { "prefix" : "an", "ns" : "http://zorba.io/annotations", "name" : "variadic", "value" : "" }, { "prefix" : "an", "ns" : "http://zorba.io/annotations", "name" : "sequential", "value" : "" } ], "updating" : false, "parameters" : [ { "name" : "name", "type" : "xs:QName", "occurrence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> the QName of the function that is to be invoked</div>" } ], "returns" : { "type" : "item()*", "description" : "the result that is returned by the invoked function" }, "errors" : [ "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">whatever error the invoked function may return</xqdoc:error>" ] }, { "isDocumented" : true, "arity" : 1, "name" : "invoke-u", "qname" : "reflection:invoke-u", "signature" : "($name as xs:QName) external", "description" : " See documentation for reflection:invoke-n except the function that\n is to be invoked may be updating, i.e. return a pending update list.\n", "summary" : "<p> See documentation for reflection:invoke-n except the function that\n is to be invoked may be updating, i.</p>", "annotation_str" : " %an:nondeterministic %an:variadic", "annotations" : [ { "prefix" : "an", "ns" : "http://zorba.io/annotations", "name" : "nondeterministic", "value" : "" }, { "prefix" : "an", "ns" : "http://zorba.io/annotations", "name" : "variadic", "value" : "" } ], "updating" : true, "parameters" : [ { "name" : "name", "type" : "xs:QName", "occurrence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> the QName of the function that is to be invoked</div>" } ], "returns" : { "type" : null, "description" : "the result that is returned by the invoked function" }, "errors" : [ "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">whatever error the invoked function may return</xqdoc:error>" ] }, { "isDocumented" : true, "arity" : 1, "name" : "invoke", "qname" : "reflection:invoke", "signature" : "($name as xs:QName) as item()* external", "description" : " The invoke function allows to dynamically call a function given its QName\n and parameters.<p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"/>\n It is possible to invoke a function whose name is not known\n at compilation time -- it can be computed, passed through an external\n variable, taken from a file, etc. The first parameter must always be a\n QName identifying a known function.<p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"/>\n The function is declared with the %an:variadic annotation. Hence, it allows\n for an arbitrary number of parameters. All of these parameters (except the\n first one) will be passed to the function that is called.\n <br xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"/>\n Example usage : <pre xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> reflection:invoke ( xs:QName(\"fn:max\"), (1,2,3) ) </pre>\n <br xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"/>\n Returns <pre xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> 3 </pre>.\n", "summary" : "<p> The invoke function allows to dynamically call a function given its QName\n and parameters.</p>", "annotation_str" : " %an:variadic", "annotations" : [ { "prefix" : "an", "ns" : "http://zorba.io/annotations", "name" : "variadic", "value" : "" } ], "updating" : false, "parameters" : [ { "name" : "name", "type" : "xs:QName", "occurrence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> the QName of the function that is to be invoked</div>" } ], "returns" : { "type" : "item()*", "description" : "the result that is returned by the invoked function" }, "errors" : [ "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">whatever error the invoked function may return</xqdoc:error>" ] } ], "variables" : [  ] }, "http://zorba.io/modules/hmac" : { "ns" : "http://zorba.io/modules/hmac", "description" : " This module provides functions that perform HMAC\n (hash-based message authentication code) operations.\n For example, they calculate message codes involving hash functions such\n as MD5 and various SHA variants. The result is the base64 encoded value\n of the hash. A hash may be used to verify the data integrity and\n the authenticity of a message.\n", "sees" : [  ], "authors" : [ "<xqdoc:author xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">William Candillon, Matthias Brantner</xqdoc:author>" ], "version" : null, "encoding" : "utf-8", "namespaces" : [ { "uri" : "http://zorba.io/modules/hmac", "prefix" : "hmac" }, { "uri" : "http://zorba.io/options/versioning", "prefix" : "ver" } ], "functions" : [ { "isDocumented" : true, "arity" : 3, "name" : "compute-binary", "qname" : "hmac:compute-binary", "signature" : "($message as xs:base64Binary, $secret-key as xs:string, $hash-algo as xs:string) as xs:base64Binary external", "description" : " Calculate the HMAC for the given message and secret-key involving\n an custom hash function. Before calculating the code, the given\n base64-encoded message is base64-decoded.\n", "summary" : "<p> Calculate the HMAC for the given message and secret-key involving\n an custom hash function.</p>", "annotation_str" : "", "annotations" : [  ], "updating" : false, "parameters" : [ { "name" : "message", "type" : "xs:base64Binary", "occurrence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> the message to be authenticated</div>" }, { "name" : "secret-key", "type" : "xs:string", "occurrence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> the secret key used for calculating the authentication</div>" }, { "name" : "hash-algo", "type" : "xs:string", "occurrence" : null, "description" : "" } ], "returns" : { "type" : "xs:base64Binary", "description" : "the base64 encoded message authentication code" }, "errors" : [ "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">hash:UNSUPPORTED-ALGORITHM if the given hash algorithm is not supported</xqdoc:error>" ] }, { "isDocumented" : true, "arity" : 3, "name" : "compute", "qname" : "hmac:compute", "signature" : "($message as xs:string, $secret-key as xs:string, $alg as xs:string) as xs:base64Binary external", "description" : " Calculate the HMAC for the given message and secret-key involving\n an custom hash function.\n", "summary" : "<p> Calculate the HMAC for the given message and secret-key involving\n an custom hash function.</p>", "annotation_str" : "", "annotations" : [  ], "updating" : false, "parameters" : [ { "name" : "message", "type" : "xs:string", "occurrence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> the message to be authenticated</div>" }, { "name" : "secret-key", "type" : "xs:string", "occurrence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> the secret key used for calculating the authentication</div>" }, { "name" : "alg", "type" : "xs:string", "occurrence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> The algorithm to use for the hashing operation. Supported algorithms are \"md5\", \"sha1\", and \"sha256\".</div>" } ], "returns" : { "type" : "xs:base64Binary", "description" : "the base64 encoded message authentication code" }, "errors" : [ "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">hash:UNSUPPORTED-ALGORITHM if the given hash algorithm is not supported</xqdoc:error>" ] }, { "isDocumented" : true, "arity" : 2, "name" : "md5-binary", "qname" : "hmac:md5-binary", "signature" : "($message as xs:base64Binary, $secret-key as xs:string) as xs:base64Binary", "description" : " Calculate the HMAC for the given message and secret-key involving\n the MD5 hash function. Before calculating the code, the given\n base64-encoded message is base64-decoded.\n", "summary" : "<p> Calculate the HMAC for the given message and secret-key involving\n the MD5 hash function.</p>", "annotation_str" : "", "annotations" : [  ], "updating" : false, "parameters" : [ { "name" : "message", "type" : "xs:base64Binary", "occurrence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> the message to be authenticated</div>" }, { "name" : "secret-key", "type" : "xs:string", "occurrence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> the secret key used for calculating the authentication</div>" } ], "returns" : { "type" : "xs:base64Binary", "description" : "the base64 encoded message authentication code" }, "errors" : [  ] }, { "isDocumented" : true, "arity" : 2, "name" : "md5", "qname" : "hmac:md5", "signature" : "($message as xs:string, $secret-key as xs:string) as xs:base64Binary", "description" : " Calculate the HMAC for the given message and secret-key involving\n the MD5 hash function.\n", "summary" : "<p> Calculate the HMAC for the given message and secret-key involving\n the MD5 hash function.</p>", "annotation_str" : "", "annotations" : [  ], "updating" : false, "parameters" : [ { "name" : "message", "type" : "xs:string", "occurrence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> the message to be authenticated</div>" }, { "name" : "secret-key", "type" : "xs:string", "occurrence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> the secret key used for calculating the authentication</div>" } ], "returns" : { "type" : "xs:base64Binary", "description" : "the base64 encoded message authentication code" }, "errors" : [  ] }, { "isDocumented" : true, "arity" : 2, "name" : "sha1-binary", "qname" : "hmac:sha1-binary", "signature" : "($message as xs:base64Binary, $secret-key as xs:string) as xs:base64Binary", "description" : " Calculate the HMAC for the given message and secret-key involving\n the SHA1 hash function. Before calculating the code, the given\n base64-encoded message is base64-decoded.\n", "summary" : "<p> Calculate the HMAC for the given message and secret-key involving\n the SHA1 hash function.</p>", "annotation_str" : "", "annotations" : [  ], "updating" : false, "parameters" : [ { "name" : "message", "type" : "xs:base64Binary", "occurrence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> the message to be authenticated</div>" }, { "name" : "secret-key", "type" : "xs:string", "occurrence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> the secret key used for calculating the authentication</div>" } ], "returns" : { "type" : "xs:base64Binary", "description" : "the base64 encoded message authentication code" }, "errors" : [  ] }, { "isDocumented" : true, "arity" : 2, "name" : "sha1", "qname" : "hmac:sha1", "signature" : "($message as xs:string, $secret-key as xs:string) as xs:base64Binary", "description" : " Calculate the HMAC for the given message and secret-key involving\n the SHA1 hash function.\n", "summary" : "<p> Calculate the HMAC for the given message and secret-key involving\n the SHA1 hash function.</p>", "annotation_str" : "", "annotations" : [  ], "updating" : false, "parameters" : [ { "name" : "message", "type" : "xs:string", "occurrence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> the message to be authenticated</div>" }, { "name" : "secret-key", "type" : "xs:string", "occurrence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> the secret key used for calculating the authentication</div>" } ], "returns" : { "type" : "xs:base64Binary", "description" : "the base64 encoded message authentication code" }, "errors" : [  ] } ], "variables" : [  ] }, "http://www.28msec.com/modules/sleep" : { "ns" : "http://www.28msec.com/modules/sleep", "description" : " This module provides a function to put the currently executing request\n to sleep.\n", "sees" : [  ], "authors" : [ "<xqdoc:author xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">28msec</xqdoc:author>" ], "version" : null, "encoding" : "utf-8", "namespaces" : [ { "uri" : "http://zorba.io/annotations", "prefix" : "an" }, { "uri" : "http://www.28msec.com/modules/sleep", "prefix" : "sleep" }, { "uri" : "http://zorba.io/options/versioning", "prefix" : "ver" } ], "functions" : [ { "isDocumented" : true, "arity" : 1, "name" : "millis", "qname" : "sleep:millis", "signature" : "($millis as xs:integer) as empty-sequence() external", "description" : " Puts the currently executing request to sleep.\n This function is mainly useful in development e.g. to simulate the\n effects of long-running tasks wrt. the concurrent execution of\n requests.\n Here the function is used to simulate a request that runs for 1 second\n <pre xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">\n declare $acquired := lock:try-acquire(\"my-lock\");\n if ($acquired)\n   sleep:millis(1000);\n else\n   fn:error(xs:QName(\"...\"), \"failed to acquire lock\");\n </pre>\n", "summary" : "<p> Puts the currently executing request to sleep.</p>", "annotation_str" : " %an:sequential", "annotations" : [ { "prefix" : "an", "ns" : "http://zorba.io/annotations", "name" : "sequential", "value" : "" } ], "updating" : false, "parameters" : [ { "name" : "millis", "type" : "xs:integer", "occurrence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> the number of milliseconds to sleep</div>" } ], "returns" : { "type" : "empty-sequence()", "description" : "the function is sequential and returns the empty sequence" }, "errors" : [  ] } ], "variables" : [  ] }, "http://www.28msec.com/modules/cloudant" : { "ns" : "http://www.28msec.com/modules/cloudant", "description" : " <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">This module provides functionality for creating, reading, updating,\n deleting and searching data in <a href=\"https://cloudant.com/\">Cloudant</a>\n databases.</p>\n <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">Before issuing a request to Cloudant it is mandatory to create\n a new connection through one of the <code>connect</code> functions.\n These functions return a connection identifier which needs to be used\n to access data in Cloudant through the other functions.</p>\n <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">In these functions Cloudant databases will be identified through\n their names. By default, the functions will assume that the database is owned by\n the user for which the given connection has been created.\n To specify a different database owner, most functions accept an\n <code>$options</code> parameter that allows a <code>database-owner</code>\n option to specify a different database owner for a single request.\n Moreover, when connecting, it is possible to specify the default\n database owner using the <code>connect#3</code> function.</p>\n <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">Additional information on the Cloudant APIs can be found\n <a href=\"https://cloudant.com/for-developers/\">on the Cloudant website</a>.</p>\n <h2 xmlns:xqdoc=\"http://www.xqdoc.org/1.0\" id=\"determinism\">Important Notice Regarding Function Determinism</h2>\n <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">The non side-effecting functions:\n <ul>\n   <li><a href=\"?anchor=list-databases-1\">list-databases#1</a></li>\n   <li><a href=\"?anchor=list-databases-2\">list-databases#2</a></li>\n   <li><a href=\"?anchor=database-info-2\">database-info#2</a></li>\n   <li><a href=\"?anchor=database-info-3\">database-info#3</a></li>\n   <li><a href=\"?anchor=all-documents-2\">all-documents#2</a></li>\n   <li><a href=\"?anchor=all-documents-3\">all-documents#3</a></li>\n   <li><a href=\"?anchor=multiple-documents-3\">multiple-documents#3</a></li>\n   <li><a href=\"?anchor=multiple-documents-4\">multiple-documents#4</a></li>\n   <li><a href=\"?anchor=document-3\">document#3</a></li>\n   <li><a href=\"?anchor=document-4\">document#4</a></li>\n   <li><a href=\"?anchor=document-info-3\">document-info#3</a></li>\n   <li><a href=\"?anchor=document-info-4\">document-info#4</a></li>\n   <li><a href=\"?anchor=attachment-4\">attachment#4</a></li>\n   <li><a href=\"?anchor=attachment-5\">attachment#5</a></li>\n   <li><a href=\"?anchor=all-view-documents-4\">all-view-documents#4</a></li>\n   <li><a href=\"?anchor=all-view-documents-5\">all-view-documents#5</a></li>\n   <li><a href=\"?anchor=multiple-view-documents-5\">multiple-view-documents#5</a></li>\n   <li><a href=\"?anchor=multiple-view-documents-6\">multiple-view-documents#6</a></li>\n   <li><a href=\"?anchor=lucene-query-5\">lucene-query#5</a></li>\n   <li><a href=\"?anchor=lucene-query-6\">lucene-query#6</a></li>\n </ul>\n are declared deterministic, which means that their results could be cached\n when invoked multiple times with the same arguments in the same query execution.</p>\n <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">To not use cached results you can use the following alternative functions:\n <ul>\n   <li><a href=\"?anchor=list-databases-nondeterministic-1\">list-databases-nondeterministic#1</a></li>\n   <li><a href=\"?anchor=list-databases-nondeterministic-2\">list-databases-nondeterministic#2</a></li>\n   <li><a href=\"?anchor=database-info-nondeterministic-2\">database-info-nondeterministic#2</a></li>\n   <li><a href=\"?anchor=database-info-nondeterministic-3\">database-info-nondeterministic#3</a></li>\n   <li><a href=\"?anchor=all-documents-nondeterministic-2\">all-documents-nondeterministic#2</a></li>\n   <li><a href=\"?anchor=all-documents-nondeterministic-3\">all-documents-nondeterministic#3</a></li>\n   <li><a href=\"?anchor=multiple-documents-nondeterministic-3\">multiple-documents-nondeterministic#3</a></li>\n   <li><a href=\"?anchor=multiple-documents-nondeterministic-4\">multiple-documents-nondeterministic#4</a></li>\n   <li><a href=\"?anchor=document-nondeterministic-3\">document-nondeterministic#3</a></li>\n   <li><a href=\"?anchor=document-nondeterministic-4\">document-nondeterministic#4</a></li>\n   <li><a href=\"?anchor=document-info-nondeterministic-3\">document-info-nondeterministic#3</a></li>\n   <li><a href=\"?anchor=document-info-nondeterministic-4\">document-info-nondeterministic#4</a></li>\n   <li><a href=\"?anchor=attachment-nondeterministic-4\">attachment-nondeterministic#4</a></li>\n   <li><a href=\"?anchor=attachment-nondeterministic-5\">attachment-nondeterministic#5</a></li>\n   <li><a href=\"?anchor=all-view-documents-nondeterministic-4\">all-view-documents-nondeterministic#4</a></li>\n   <li><a href=\"?anchor=all-view-documents-nondeterministic-5\">all-view-documents-nondeterministic#5</a></li>\n   <li><a href=\"?anchor=multiple-view-documents-nondeterministic-5\">multiple-view-documents-nondeterministic#5</a></li>\n   <li><a href=\"?anchor=multiple-view-documents-nondeterministic-6\">multiple-view-documents-nondeterministic#6</a></li>\n   <li><a href=\"?anchor=lucene-query-nondeterministic-5\">lucene-query-nondeterministic#5</a></li>\n   <li><a href=\"?anchor=lucene-query-nondeterministic-6\">lucene-query-nondeterministic#6</a></li>\n </ul>\n which have been declared as being non deterministic.</p>\n", "sees" : [  ], "authors" : [ "<xqdoc:author xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">Federico Cavalieri</xqdoc:author>" ], "version" : null, "encoding" : "utf-8", "namespaces" : [ { "uri" : "http://zorba.io/annotations", "prefix" : "an" }, { "uri" : "http://www.28msec.com/modules/cloudant", "prefix" : "cloudant" }, { "uri" : "http://www.28msec.com/modules/credentials", "prefix" : "credentials" }, { "uri" : "http://www.w3.org/2005/xqt-errors", "prefix" : "err" }, { "uri" : "http://zorba.io/modules/http-client", "prefix" : "http" }, { "uri" : "http://www.28msec.com/modules/maps", "prefix" : "map" }, { "uri" : "http://zorba.io/modules/random", "prefix" : "random" }, { "uri" : "http://www.zorba-xquery.com/options/versioning", "prefix" : "ver" } ], "functions" : [ { "isDocumented" : true, "arity" : 2, "name" : "all-documents-nondeterministic", "qname" : "cloudant:all-documents-nondeterministic", "signature" : "($connection as anyURI, $database as string) as object()", "description" : " <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">Lists all the documents in a given database.</p>\n <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">This function has the same semantics as\n <a href=\"#all-documents-2\">all-documents#2</a>,\n but is declared as being non deterministic and thus should only be used when\n result caching is not desired.</p>\n", "summary" : "<p>  Lists all the documents in a given database.</p>", "annotation_str" : " %an:nondeterministic", "annotations" : [ { "prefix" : "an", "ns" : "http://zorba.io/annotations", "name" : "nondeterministic", "value" : "" } ], "updating" : false, "parameters" : [ { "name" : "connection", "type" : "anyURI", "occurrence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> A connection identifier</div>" }, { "name" : "database", "type" : "string", "occurrence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> A database name</div>" } ], "returns" : { "type" : "object()", "description" : "An object listing the documents in the specified database" }, "errors" : [ "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">cloudant:AUTHORIZATION Authorization error</xqdoc:error>", "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">cloudant:HTTP An HTTP error occurred when issuing the request</xqdoc:error>", "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">cloudant:RESPONSE An error occurred parsing the server response</xqdoc:error>", "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">cloudant:CONNECTION The specified connection does not exist</xqdoc:error>", "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">cloudant:INTERNAL Cloudant internal error</xqdoc:error>" ] }, { "isDocumented" : true, "arity" : 3, "name" : "all-documents-nondeterministic", "qname" : "cloudant:all-documents-nondeterministic", "signature" : "($connection as anyURI, $database as string, $options as object()) as object()", "description" : " <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">Lists all the documents in a given database.</p>\n <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">This function has the same semantics as\n <a href=\"#all-documents-3\">all-documents#3</a>,\n but is declared as being non deterministic and thus should only be used when\n result caching is not desired.</p>\n", "summary" : "<p>  Lists all the documents in a given database.</p>", "annotation_str" : " %an:nondeterministic", "annotations" : [ { "prefix" : "an", "ns" : "http://zorba.io/annotations", "name" : "nondeterministic", "value" : "" } ], "updating" : false, "parameters" : [ { "name" : "connection", "type" : "anyURI", "occurrence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> A connection identifier</div>" }, { "name" : "database", "type" : "string", "occurrence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> A database name</div>" }, { "name" : "options", "type" : "object()", "occurrence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> An object specifying additional request options</div>" } ], "returns" : { "type" : "object()", "description" : "An object listing the documents in the specified database" }, "errors" : [ "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">cloudant:AUTHORIZATION Authorization error</xqdoc:error>", "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">cloudant:HTTP An HTTP error occurred when issuing the request</xqdoc:error>", "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">cloudant:RESPONSE An error occurred parsing the server response</xqdoc:error>", "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">cloudant:CONNECTION The specified connection does not exist</xqdoc:error>", "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">cloudant:INTERNAL Cloudant internal error</xqdoc:error>", "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">cloudant:OPTIONS Malformed options object</xqdoc:error>" ] }, { "isDocumented" : true, "arity" : 2, "name" : "all-documents", "qname" : "cloudant:all-documents", "signature" : "($connection as anyURI, $database as string) as object()", "description" : " <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">Lists all the documents in a given database.</p>\n <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">This function is declared as deterministic and should be used whenever result\n caching is acceptable.</p>\n <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">The information is returned as a JSON structure containing meta information\n about the return structure, and the list of documents each with its ID, revision\n and key. The key is generated from the document ID.</p>\n <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">For example,\n <pre>cloudant:all-documents($connection, \"db\")</pre>.\n </p>\n <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">An object with the following format is returned:\n <pre>\n {\n   \"total_rows\":3,\n   \"offset\":0,\n   \"rows\":[\n   {\n     \"id\":\"5a049246-179f-42ad-87ac-8f080426c17c\",\n     \"key\":\"5a049246-179f-42ad-87ac-8f080426c17c\",\n     \"value\":\n     {\n       \"rev\":\"2-9d5401898196997853b5ac4163857a29\"\n     }\n   },\n   {\n     \"id\":\"96f898f0-f6ff-4a9b-aac4-503992f31b01\",\n     \"key\":\"96f898f0-f6ff-4a9b-aac4-503992f31b01\",\n     \"value\":\n     {\n       \"rev\":\"2-ff7b85665c4c297838963c80ecf481a3\"\n      }\n   },\n   {\n     \"id\":\"d1f61e66-7708-4da6-aa05-7cbc33b44b7e\",\n     \"key\":\"d1f61e66-7708-4da6-aa05-7cbc33b44b7e\",\n     \"value\":\n     {\n       \"rev\":\"2-cbdef49ef3ddc127eff86350844a6108\"\n     }\n   }]\n }\n </pre>\n </p>\n <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">The fields have the following meaning:\n <ul>\n  <li>offset: offset where the document list started.</li>\n  <li>rows: array of document objects, each containing id, key and revision number.</li>\n  <li>total_rows: number of documents in the database.</li>\n  <li>update_seq: current update sequence database.</li>\n </ul>\n </p>\n", "summary" : "<p>  Lists all the documents in a given database.</p>", "annotation_str" : "", "annotations" : [  ], "updating" : false, "parameters" : [ { "name" : "connection", "type" : "anyURI", "occurrence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> A connection identifier</div>" }, { "name" : "database", "type" : "string", "occurrence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> A database name</div>" } ], "returns" : { "type" : "object()", "description" : "An object listing the documents in the specified database" }, "errors" : [ "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">cloudant:AUTHORIZATION Authorization error</xqdoc:error>", "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">cloudant:HTTP An HTTP error occurred when issuing the request</xqdoc:error>", "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">cloudant:RESPONSE An error occurred parsing the server response</xqdoc:error>", "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">cloudant:CONNECTION The specified connection does not exist</xqdoc:error>", "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">cloudant:INTERNAL Cloudant internal error</xqdoc:error>" ] }, { "isDocumented" : true, "arity" : 3, "name" : "all-documents", "qname" : "cloudant:all-documents", "signature" : "($connection as anyURI, $database as string, $options as object()) as object()", "description" : " <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">Lists all the documents in a given database.</p>\n <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">This function is declared as deterministic and should be used whenever result\n caching is acceptable.</p>\n <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">The information is returned as a JSON structure containing meta information\n about the return structure, and the list of documents each with its ID, revision\n and key. The key is generated from the document ID.</p>\n <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">This function allows to specify an additional options object.\n The following options are supported:\n <ul>\n   <li>descending: return the documents in descending by key order (boolean,\n   default: false).</li>\n   <li>endkey: stop returning records when the specified key is reached (string).</li>\n   <li>endkey_docid: stop returning records when the specified document ID is\n   reached (string).</li>\n   <li>group: group the results using the reduce function to a group or single\n   row (boolean, default: false).</li>\n   <li>group_level: specify the group level to be used (numeric).</li>\n   <li>include_docs: include the full content of the documents in the return\n   (boolean, default: false).</li>\n   <li>inclusive_end: specifies whether the specified end key should be included\n   in the result (boolean, default: true).</li>\n   <li>key: return only documents that match the specified key (string).</li>\n   <li>limit: limit the number of the returned documents to the specified number\n   (numeric).</li>\n   <li>reduce: use the reduction function (boolean, default: true).</li>\n   <li>skip: skip this number of records before starting to return the results\n   (numeric, default: 0).</li>\n   <li>stale: allow the results from a stale view to be used (string, allowed\n   value: \"ok\").</li>\n   <li>startkey: start returning records when the specified key is reached (string).</li>\n   <li>startkey_docid: start returning records when the specified document ID\n   is reached (string).</li>\n   <li>database-owner: specifies the database owner (string, default: connection\n   user).</li>\n </ul>\n </p>\n <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">For example,\n <pre>cloudant:all-documents($connection, \"db\", {\"database-owner\": \"username\"})</pre>.\n </p>\n <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">An object with the following format is returned:\n <pre>\n {\n   \"total_rows\":3,\n   \"offset\":0,\n   \"rows\":[\n   {\n     \"id\":\"5a049246-179f-42ad-87ac-8f080426c17c\",\n     \"key\":\"5a049246-179f-42ad-87ac-8f080426c17c\",\n     \"value\":\n     {\n       \"rev\":\"2-9d5401898196997853b5ac4163857a29\"\n     }\n   },\n   {\n     \"id\":\"96f898f0-f6ff-4a9b-aac4-503992f31b01\",\n     \"key\":\"96f898f0-f6ff-4a9b-aac4-503992f31b01\",\n     \"value\":\n     {\n       \"rev\":\"2-ff7b85665c4c297838963c80ecf481a3\"\n      }\n   },\n   {\n     \"id\":\"d1f61e66-7708-4da6-aa05-7cbc33b44b7e\",\n     \"key\":\"d1f61e66-7708-4da6-aa05-7cbc33b44b7e\",\n     \"value\":\n     {\n       \"rev\":\"2-cbdef49ef3ddc127eff86350844a6108\"\n     }\n   }]\n }\n </pre>\n </p>\n <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">The fields have the following meaning:\n <ul>\n  <li>offset: offset where the document list started.</li>\n  <li>rows: array of document objects, each containing id, key and revision number.</li>\n  <li>total_rows: number of documents in the database.</li>\n  <li>update_seq: current update sequence database.</li>\n </ul>\n </p>\n", "summary" : "<p>  Lists all the documents in a given database.</p>", "annotation_str" : "", "annotations" : [  ], "updating" : false, "parameters" : [ { "name" : "connection", "type" : "anyURI", "occurrence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> A connection identifier</div>" }, { "name" : "database", "type" : "string", "occurrence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> A database name</div>" }, { "name" : "options", "type" : "object()", "occurrence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> An object specifying additional request options</div>" } ], "returns" : { "type" : "object()", "description" : "An object listing the documents in the specified database" }, "errors" : [ "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">cloudant:AUTHORIZATION Authorization error</xqdoc:error>", "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">cloudant:HTTP An HTTP error occurred when issuing the request</xqdoc:error>", "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">cloudant:RESPONSE An error occurred parsing the server response</xqdoc:error>", "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">cloudant:CONNECTION The specified connection does not exist</xqdoc:error>", "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">cloudant:INTERNAL Cloudant internal error</xqdoc:error>", "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">cloudant:OPTIONS Malformed options object</xqdoc:error>" ] }, { "isDocumented" : true, "arity" : 4, "name" : "all-view-documents-nondeterministic", "qname" : "cloudant:all-view-documents-nondeterministic", "signature" : "($connection as anyURI, $database as string, $design-document as string, $view as string) as object()", "description" : " <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">Returns a JSON object describing all the documents in a given view.</p>\n <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">This function has the same semantics as\n <a href=\"#all-view-documents-4\">all-view-documents#4</a>,\n but is declared as being non deterministic and thus should only be used when\n result caching is not desired.</p>\n", "summary" : "<p>  Returns a JSON object describing all the documents in a given view.</p>", "annotation_str" : " %an:nondeterministic", "annotations" : [ { "prefix" : "an", "ns" : "http://zorba.io/annotations", "name" : "nondeterministic", "value" : "" } ], "updating" : false, "parameters" : [ { "name" : "connection", "type" : "anyURI", "occurrence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> A connection identifier</div>" }, { "name" : "database", "type" : "string", "occurrence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> A database name</div>" }, { "name" : "design-document", "type" : "string", "occurrence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> A design document name</div>" }, { "name" : "view", "type" : "string", "occurrence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> A view name</div>" } ], "returns" : { "type" : "object()", "description" : "An object listing all documents in the specified view" }, "errors" : [ "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">cloudant:AUTHORIZATION Authorization error</xqdoc:error>", "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">cloudant:HTTP An HTTP error occurred when issuing the request</xqdoc:error>", "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">cloudant:RESPONSE An error occurred parsing the server response</xqdoc:error>", "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">cloudant:CONNECTION The specified connection does not exist</xqdoc:error>", "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">cloudant:INTERNAL Cloudant internal error</xqdoc:error>" ] }, { "isDocumented" : true, "arity" : 5, "name" : "all-view-documents-nondeterministic", "qname" : "cloudant:all-view-documents-nondeterministic", "signature" : "($connection as anyURI, $database as string, $design-document as string, $view as string, $options as object()) as object()", "description" : " <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">Returns a JSON object describing all the documents in a given view.</p>\n <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">This function has the same semantics as\n <a href=\"#all-view-documents-5\">all-view-documents#5</a>,\n but is declared as being non deterministic and thus should only be used when\n result caching is not desired.</p>\n", "summary" : "<p>  Returns a JSON object describing all the documents in a given view.</p>", "annotation_str" : " %an:nondeterministic", "annotations" : [ { "prefix" : "an", "ns" : "http://zorba.io/annotations", "name" : "nondeterministic", "value" : "" } ], "updating" : false, "parameters" : [ { "name" : "connection", "type" : "anyURI", "occurrence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> A connection identifier</div>" }, { "name" : "database", "type" : "string", "occurrence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> A database name</div>" }, { "name" : "design-document", "type" : "string", "occurrence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> A design document name</div>" }, { "name" : "view", "type" : "string", "occurrence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> A view name</div>" }, { "name" : "options", "type" : "object()", "occurrence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> An object specifying additional request options</div>" } ], "returns" : { "type" : "object()", "description" : "An object listing all documents in the specified view" }, "errors" : [ "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">cloudant:AUTHORIZATION Authorization error</xqdoc:error>", "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">cloudant:HTTP An HTTP error occurred when issuing the request</xqdoc:error>", "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">cloudant:RESPONSE An error occurred parsing the server response</xqdoc:error>", "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">cloudant:CONNECTION The specified connection does not exist</xqdoc:error>", "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">cloudant:INTERNAL Cloudant internal error</xqdoc:error>", "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">cloudant:OPTIONS Malformed options object</xqdoc:error>" ] }, { "isDocumented" : true, "arity" : 4, "name" : "all-view-documents", "qname" : "cloudant:all-view-documents", "signature" : "($connection as anyURI, $database as string, $design-document as string, $view as string) as object()", "description" : " <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">Returns a JSON object describing all the documents in a given view.</p>\n <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">This function is declared as deterministic and should be used whenever result\n caching is acceptable.</p>\n <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">The information is returned as a JSON structure containing meta information\n about the return structure, and the list of documents each with its ID, revision\n and key. The key is generated from the document ID.</p>\n <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">For example,\n <pre>cloudant:all-view-documents($connection, \"db\", \"recipes\", \"by_title\")</pre>.\n </p>\n <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">An object with the following format is returned:\n <pre>\n {\n   \"offset\" : 0,\n   \"rows\" :\n   [\n     {\n       \"id\" : \"3-tiersalmonspinachandavocadoterrine\",\n       \"key\" : \"3-tier salmon, spinach and avocado terrine\",\n       \"value\" : [\"3-tier salmon, spinach and avocado terrine\"]\n     },\n     {\n       \"id\" : \"Aberffrawcake\",\n       \"key\" : \"Aberffraw cake\",\n       \"value\" : [\"Aberffraw cake\"]\n     },\n     {\n       \"id\" : \"Adukiandorangecasserole-microwave\",\n       \"key\" : \"Aduki and orange casserole - microwave\",\n       \"value\" : [\"Aduki and orange casserole - microwave\"]\n     }\n   ],\n   \"total_rows\" : 3\n }\n </pre>\n </p>\n <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">The fields have the following meaning:\n <ul>\n  <li>offset: offset where the document list started.</li>\n  <li>rows: array of document objects, each containing id, key and revision number.</li>\n  <li>total_rows: number of documents in the database.</li>\n </ul>\n </p>\n", "summary" : "<p>  Returns a JSON object describing all the documents in a given view.</p>", "annotation_str" : "", "annotations" : [  ], "updating" : false, "parameters" : [ { "name" : "connection", "type" : "anyURI", "occurrence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> A connection identifier</div>" }, { "name" : "database", "type" : "string", "occurrence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> A database name</div>" }, { "name" : "design-document", "type" : "string", "occurrence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> A design document name</div>" }, { "name" : "view", "type" : "string", "occurrence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> A view name</div>" } ], "returns" : { "type" : "object()", "description" : "An object listing all documents in the specified view" }, "errors" : [ "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">cloudant:AUTHORIZATION Authorization error</xqdoc:error>", "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">cloudant:HTTP An HTTP error occurred when issuing the request</xqdoc:error>", "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">cloudant:RESPONSE An error occurred parsing the server response</xqdoc:error>", "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">cloudant:CONNECTION The specified connection does not exist</xqdoc:error>", "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">cloudant:INTERNAL Cloudant internal error</xqdoc:error>" ] }, { "isDocumented" : true, "arity" : 5, "name" : "all-view-documents", "qname" : "cloudant:all-view-documents", "signature" : "($connection as anyURI, $database as string, $design-document as string, $view as string, $options as object()) as object()", "description" : " <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">Returns a JSON object describing all the documents in a given view.</p>\n <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">This function is declared as deterministic and should be used whenever result\n caching is acceptable.</p>\n <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">The information is returned as a JSON structure containing meta information\n about the return structure, and the list of documents each with its ID, revision\n and key. The key is generated from the document ID.</p>\n <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">This function allows to specify an additional options object.\n The following options are supported:\n <ul>\n   <li>descending: return the documents in descending by key order (boolean,\n   default: false)</li>\n   <li>endkey: stop returning records when the specified key is reached (string)</li>\n   <li>endkey_docid: stop returning records when the specified document ID is\n   reached (string)</li>\n   <li>group: group the results using the reduce function to a group or single\n   row (boolean, default: false)</li>\n   <li>group_level: specify the group level to be used (numeric)</li>\n   <li>include_docs: include the full content of the documents in the return\n   (boolean, default: false)</li>\n   <li>inclusive_end: specifies whether the specified end key should be included\n   in the result (boolean, default: true)</li>\n   <li>key: return only documents that match the specified key (string)</li>\n   <li>limit: limit the number of the returned documents to the specified number\n   (numeric)</li>\n   <li>reduce: use the reduction function (boolean, default: true)</li>\n   <li>skip: skip this number of records before starting to return the results\n   (numeric, default: 0)</li>\n   <li>stale: allow the results from a stale view to be used (string, allowed\n   value: \"ok\")</li>\n   <li>startkey: start returning records when the specified key is reached\n   (string)</li>\n   <li>startkey_docid: start returning records when the specified document ID\n   is reached (string)</li>\n   <li>database-owner: specifies the database owner (string, default:\n   connection user).</li>\n </ul>\n </p>\n <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">For example,\n <pre>cloudant:all-view-documents($connection, \"db\", \"recipes\", \"by_title\",\n   {\"database-owner\" : \"username\"})</pre>.\n </p>\n <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">An object with the following format is returned:\n <pre>\n {\n   \"offset\" : 0,\n   \"rows\" :\n   [\n     {\n       \"id\" : \"3-tiersalmonspinachandavocadoterrine\",\n       \"key\" : \"3-tier salmon, spinach and avocado terrine\",\n       \"value\" : [\"3-tier salmon, spinach and avocado terrine\"]\n     },\n     {\n       \"id\" : \"Aberffrawcake\",\n       \"key\" : \"Aberffraw cake\",\n       \"value\" : [\"Aberffraw cake\"]\n     },\n     {\n       \"id\" : \"Adukiandorangecasserole-microwave\",\n       \"key\" : \"Aduki and orange casserole - microwave\",\n       \"value\" : [\"Aduki and orange casserole - microwave\"]\n     }\n   ],\n   \"total_rows\" : 3\n }\n </pre>\n </p>\n <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">The fields have the following meaning:\n <ul>\n  <li>offset: offset where the document list started.</li>\n  <li>rows: array of document objects, each containing id, key and revision\n  number.</li>\n  <li>total_rows: number of documents in the database.</li>\n </ul>\n </p>\n", "summary" : "<p>  Returns a JSON object describing all the documents in a given view.</p>", "annotation_str" : "", "annotations" : [  ], "updating" : false, "parameters" : [ { "name" : "connection", "type" : "anyURI", "occurrence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> A connection identifier</div>" }, { "name" : "database", "type" : "string", "occurrence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> A database name</div>" }, { "name" : "design-document", "type" : "string", "occurrence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> A design document name</div>" }, { "name" : "view", "type" : "string", "occurrence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> A view name</div>" }, { "name" : "options", "type" : "object()", "occurrence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> An object specifying additional request options</div>" } ], "returns" : { "type" : "object()", "description" : "An object listing all documents in the specified view" }, "errors" : [ "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">cloudant:AUTHORIZATION Authorization error</xqdoc:error>", "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">cloudant:HTTP An HTTP error occurred when issuing the request</xqdoc:error>", "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">cloudant:RESPONSE An error occurred parsing the server response</xqdoc:error>", "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">cloudant:CONNECTION The specified connection does not exist</xqdoc:error>", "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">cloudant:INTERNAL Cloudant internal error</xqdoc:error>", "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">cloudant:OPTIONS Malformed options object</xqdoc:error>" ] }, { "isDocumented" : true, "arity" : 4, "name" : "attachment-nondeterministic", "qname" : "cloudant:attachment-nondeterministic", "signature" : "($connection as anyURI, $database as string, $document-id as string, $attachment-name as string) as object()", "description" : " <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">Retrieves the specified document attachment.</p>\n <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">This function has the same semantics as\n <a href=\"#attachment-4\">attachment#4</a>,\n but is declared as being non deterministic and thus should only be used when\n result caching is not desired.</p>\n", "summary" : "<p>  Retrieves the specified document attachment.</p>", "annotation_str" : " %an:nondeterministic", "annotations" : [ { "prefix" : "an", "ns" : "http://zorba.io/annotations", "name" : "nondeterministic", "value" : "" } ], "updating" : false, "parameters" : [ { "name" : "connection", "type" : "anyURI", "occurrence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> A connection identifier</div>" }, { "name" : "database", "type" : "string", "occurrence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> A database name</div>" }, { "name" : "document-id", "type" : "string", "occurrence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> A document identifier</div>" }, { "name" : "attachment-name", "type" : "string", "occurrence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> An attchment name</div>" } ], "returns" : { "type" : "object()", "description" : "The specified document attachment" }, "errors" : [ "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">cloudant:AUTHORIZATION Authorization error</xqdoc:error>", "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">cloudant:DATABASE-NAME Invalid database name</xqdoc:error>", "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">cloudant:HTTP An HTTP error occurred when issuing the request</xqdoc:error>", "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">cloudant:RESPONSE An error occurred parsing the server response</xqdoc:error>", "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">cloudant:CONNECTION The specified connection does not exist</xqdoc:error>", "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">cloudant:INTERNAL Cloudant internal error</xqdoc:error>" ] }, { "isDocumented" : true, "arity" : 5, "name" : "attachment-nondeterministic", "qname" : "cloudant:attachment-nondeterministic", "signature" : "($connection as anyURI, $database as string, $document-id as string, $attachment-name as string, $options as object()) as object()", "description" : " <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">Retrieves the specified document attachment.</p>\n <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">This function has the same semantics as <a href=\"#attachment-5\">attachment#5</a>,\n but is declared as being non deterministic and thus should only be used when\n result caching is not desired.</p>\n", "summary" : "<p>  Retrieves the specified document attachment.</p>", "annotation_str" : " %an:nondeterministic", "annotations" : [ { "prefix" : "an", "ns" : "http://zorba.io/annotations", "name" : "nondeterministic", "value" : "" } ], "updating" : false, "parameters" : [ { "name" : "connection", "type" : "anyURI", "occurrence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> A connection identifier</div>" }, { "name" : "database", "type" : "string", "occurrence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> A database name</div>" }, { "name" : "document-id", "type" : "string", "occurrence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> A document identifier</div>" }, { "name" : "attachment-name", "type" : "string", "occurrence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> An attchment name</div>" }, { "name" : "options", "type" : "object()", "occurrence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> An object specifying additional request options</div>" } ], "returns" : { "type" : "object()", "description" : "The specified document attachment" }, "errors" : [ "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">cloudant:AUTHORIZATION Authorization error</xqdoc:error>", "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">cloudant:DATABASE-NAME Invalid database name</xqdoc:error>", "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">cloudant:ATTACHMENT-NOT-EXISTS Attachment does not exists</xqdoc:error>", "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">cloudant:HTTP An HTTP error occurred when issuing the request</xqdoc:error>", "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">cloudant:RESPONSE An error occurred parsing the server response</xqdoc:error>", "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">cloudant:CONNECTION The specified connection does not exist</xqdoc:error>", "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">cloudant:INTERNAL Cloudant internal error</xqdoc:error>", "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">cloudant:OPTIONS Malformed options object</xqdoc:error>" ] }, { "isDocumented" : true, "arity" : 4, "name" : "attachment", "qname" : "cloudant:attachment", "signature" : "($connection as anyURI, $database as string, $document-id as string, $attachment-name as string) as object()", "description" : " <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">Retrieves the specified document attachment.</p>\n <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">This function is declared as deterministic and should be used whenever result\n caching is acceptable.</p>\n <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">For example,\n <pre>cloudant:attachment($connection, \"db\", \"DocID\", \"Attachment\")</pre>.\n </p>\n <h4 xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">Retrieving a design document attachment.</h4>\n <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">To retrieve a design document attachment the document id must\n start with <code>_design/</code>.</p>\n <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">For example,\n <pre>cloudant:attachment($connection, \"db\", \"_design/DocID\", \"Attachment\")</pre>.\n </p>\n <h4 xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">Return value</h4>\n <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">The returned object reports the media-type of the attachment as\n it was specified when the attachment was submitted to the database and\n its raw content.\n The format of the returned object is the following:\n <pre>\n {\n   \"media-type\": \"text/plain\",\n   \"content\" : \"Hello World\"\n }\n </pre>\n </p>\n <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">The type of the content field is determined by the media-type returned by the\n server. If the media-type indicates that the body content is textual,\n then the content has type string, base64Binary otherwise.\n Specifically, the body content is considered textual only if the MIME-type specified in\n the media-type is one of:\n <ul>\n   <li>\"application/json\"</li>\n   <li>\"application/x-javascript\"</li>\n   <li>\"application/xml\"</li>\n   <li>\"application/xml-external-parsed-entity\"</li>\n </ul>\n or if the MIME-type starts with \"text/\" or ends with \"+xml\".</p>\n", "summary" : "<p>  Retrieves the specified document attachment.</p>", "annotation_str" : "", "annotations" : [  ], "updating" : false, "parameters" : [ { "name" : "connection", "type" : "anyURI", "occurrence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> A connection identifier</div>" }, { "name" : "database", "type" : "string", "occurrence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> A database name</div>" }, { "name" : "document-id", "type" : "string", "occurrence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> A document identifier</div>" }, { "name" : "attachment-name", "type" : "string", "occurrence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> An attchment name</div>" } ], "returns" : { "type" : "object()", "description" : "The specified document attachment" }, "errors" : [ "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">cloudant:AUTHORIZATION Authorization error</xqdoc:error>", "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">cloudant:DATABASE-NAME Invalid database name</xqdoc:error>", "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">cloudant:HTTP An HTTP error occurred when issuing the request</xqdoc:error>", "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">cloudant:RESPONSE An error occurred parsing the server response</xqdoc:error>", "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">cloudant:CONNECTION The specified connection does not exist</xqdoc:error>", "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">cloudant:INTERNAL Cloudant internal error</xqdoc:error>" ] }, { "isDocumented" : true, "arity" : 5, "name" : "attachment", "qname" : "cloudant:attachment", "signature" : "($connection as anyURI, $database as string, $document-id as string, $attachment-name as string, $options as object()) as object()", "description" : " <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">Retrieves the specified document attachment.</p>\n <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">This function is declared as deterministic and should be used whenever result\n caching is acceptable.</p>\n <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">This function allows to specify an additional options object.\n The following options are supported:\n <ul>\n   <li>database-owner: specifies the database owner (string, default: connection user).</li>\n </ul>\n </p>\n <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">For example,\n <pre>cloudant:attachment($connection, \"db\", \"DocID\", \"Attachment\",\n   {\"database-owner\": \"username\"})</pre>.\n </p>\n <h4 xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">Retrieving a design document attachment.</h4>\n <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">To retrieve a design document attachment the document id must\n start with <code>_design/</code>.</p>\n <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">For example,\n <pre>cloudant:attachment($connection, \"db\", \"_design/DocID\", \"Attachment\",\n   {\"database-owner\": \"username\"})</pre>.\n </p>\n <h4 xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">Return value</h4>\n <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">The returned object reports the media-type of the attachment as\n it was specified when the attachment was submitted to the database and\n its raw content.\n The format of the returned object is the following:\n <pre>\n {\n   \"media-type\": \"text/plain\",\n   \"content\" : \"Hello World\"\n }\n </pre>\n </p>\n <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">The type of the content field is determined by the media-type returned by the\n server. If the media-type indicates that the body content is textual,\n then the content has type string, base64Binary otherwise.\n Specifically, the body content is considered textual only if the MIME-type specified in\n the media-type is one of:\n <ul>\n   <li>\"application/json\"</li>\n   <li>\"application/x-javascript\"</li>\n   <li>\"application/xml\"</li>\n   <li>\"application/xml-external-parsed-entity\"</li>\n </ul>\n or if the MIME-type starts with \"text/\" or ends with \"+xml\".</p>\n", "summary" : "<p>  Retrieves the specified document attachment.</p>", "annotation_str" : "", "annotations" : [  ], "updating" : false, "parameters" : [ { "name" : "connection", "type" : "anyURI", "occurrence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> A connection identifier</div>" }, { "name" : "database", "type" : "string", "occurrence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> A database name</div>" }, { "name" : "document-id", "type" : "string", "occurrence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> A document identifier</div>" }, { "name" : "attachment-name", "type" : "string", "occurrence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> An attchment name</div>" }, { "name" : "options", "type" : "object()", "occurrence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> An object specifying additional request options</div>" } ], "returns" : { "type" : "object()", "description" : "The specified document attachment" }, "errors" : [ "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">cloudant:AUTHORIZATION Authorization error</xqdoc:error>", "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">cloudant:DATABASE-NAME Invalid database name</xqdoc:error>", "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">cloudant:ATTACHMENT-NOT-EXISTS Attachment does not exists</xqdoc:error>", "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">cloudant:HTTP An HTTP error occurred when issuing the request</xqdoc:error>", "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">cloudant:RESPONSE An error occurred parsing the server response</xqdoc:error>", "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">cloudant:CONNECTION The specified connection does not exist</xqdoc:error>", "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">cloudant:INTERNAL Cloudant internal error</xqdoc:error>", "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">cloudant:OPTIONS Malformed options object</xqdoc:error>" ] }, { "isDocumented" : true, "arity" : 3, "name" : "bulk-crud", "qname" : "cloudant:bulk-crud", "signature" : "($connection as anyURI, $database as string, $documents as object()*) as array()", "description" : " <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">Creates, updates or deletes multiple documents with a single request.</p>\n <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">When creating new documents the document ID is optional. For updating\n existing documents, you must provide the document ID, revision information,\n and new document values. To delete existing documents, you must provide the\n document ID, revision information and add a field <code>_deleted</code> having\n value <code>true</code>.\n </p>\n <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">For example,\n <pre>cloudant:bulk-crud($connection, \"db\",\n (\n   {\n     \"name\":\"Nicholas\",\n     \"age\":45,\n     \"gender\":\"male\",\n   },\n   {\n     \"name\":\"Taylor\",\n     \"age\":50,\n     \"gender\":\"male\",\n     \"_id\":\"5a049246-179f-42ad-87ac-8f080426c17c\",\n   },\n   {\n     \"name\":\"Owen\",\n     \"age\":51,\n     \"gender\":\"male\",\n     \"_id\":\"d1f61e66-7708-4da6-aa05-7cbc33b44b7e\",\n     \"_rev\":\"2-f29c836d0bedc4b4b95cfaa6d99e95df\",\n   },\n   {\n     \"_id\":\"b675e932-9bb6-4fc9-b889-50238ac3512b\",\n     \"_rev\":\"2-abd3942fdab3515bfed224abed2451feb\",\n     \"_deleted\": true\n   }\n ))\n </pre>\n requires to insert the first document with a system-generated identifier, to\n insert the second one with a user-specified identifier, to update the third\n one and, finally,to delete the last one.\n </p>\n <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">\n The JSON returned by the_bulk_docs operation consists of an array\n of JSON structures, one for each submitted document.\n The returned JSON structure should be examined to ensure that all of\n the documents submitted in the original request were successfully added\n to the database. When no errors are raised, the revision of the new\n document is reported for all documents.\n </p>\n <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">\n <pre>\n [{\n    \"id\":\"96f898f0-f6ff-4a9b-aac4-503992f31b01\",\n    \"rev\":\"2-ff7b85665c4c297838963c80ecf481a3\"\n  },\n  {\n    \"id\":\"5a049246-179f-42ad-87ac-8f080426c17c\",\n    \"rev\":\"2-9d5401898196997853b5ac4163857a29\"\n  },\n  {\n    \"id\":\"d1f61e66-7708-4da6-aa05-7cbc33b44b7e\",\n    \"rev\":\"2-cbdef49ef3ddc127eff86350844a6108\"\n  },\n  {\n    \"id\": \"b675e932-9bb6-4fc9-b889-50238ac3512b\",\n    \"rev\":\"2-12356bafb1232167befabb32127823943d\"\n  }]\n </pre>\n </p>\n <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">Cloudant will only guarantee that some of the documents will be\n saved when you send the request. The response will contain the list of\n documents successfully inserted or updated during the process.\n In the event of a crash, some of the documents may have been successfully\n saved, and some will have been lost.\n The response structure will indicate whether the document was updated by\n supplying the <code>rev</code> parameter indicating a new document revision\n was created. If the update failed, then you will get an error of type\n <code>conflict</code>.</p>\n <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">For example:\n <pre>\n [\n   {\n     \"id\":\"FishStew\",\n     \"error\":\"conflict\",\n     \"reason\":\"Document update conflict.\"\n   },\n   {\n     \"id\":\"LambStew\",\n     \"error\":\"conflict\",\n     \"reason\":\"Document update conflict.\"\n   },\n   {\n     \"id\":\"7f7638c86173eb440b8890839ff35433\",\n     \"error\":\"conflict\",\n     \"reason\":\"Document update conflict.\"\n   }\n ]\n </pre>\n In this case no new revision has been created and you will need to submit\n the document update with the correct revision tag, to update the document.\n </p>\n <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">The exact structure of each document in the returned array is:\n <ul>\n   <li>id: the document ID</li>\n   <li>rev: the new document revision, if a new revision was created</li>\n   <li>error: the error type, if an error was raised</li>\n   <li>reason: a description of the raised error, if an error was raised</li>\n </ul>\n </p>\n <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">The error type can either be conflict or forbidden. The first type means that\n the document as submitted is in conflict. The new revision has not been created\n and you will need to re-submit the document to the database. Entries with forbidden\n error type indicate that the validation routine applied to the document during submission\n has returned an error.</p>\n", "summary" : "<p>  Creates, updates or deletes multiple documents with a single request.</p>", "annotation_str" : " %an:sequential", "annotations" : [ { "prefix" : "an", "ns" : "http://zorba.io/annotations", "name" : "sequential", "value" : "" } ], "updating" : false, "parameters" : [ { "name" : "connection", "type" : "anyURI", "occurrence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> A connection identifier</div>" }, { "name" : "database", "type" : "string", "occurrence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> A database name</div>" }, { "name" : "documents", "type" : "object()", "occurrence" : "*", "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> An sequence of documents</div>" } ], "returns" : { "type" : "array()", "description" : "An object describing the performed operations" }, "errors" : [ "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">cloudant:AUTHORIZATION Authorization error</xqdoc:error>", "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">cloudant:HTTP An HTTP error occurred when issuing the request</xqdoc:error>", "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">cloudant:RESPONSE An error occurred parsing the server response</xqdoc:error>", "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">cloudant:CONNECTION The specified connection does not exist</xqdoc:error>", "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">cloudant:INTERNAL Cloudant internal error</xqdoc:error>" ] }, { "isDocumented" : true, "arity" : 4, "name" : "bulk-crud", "qname" : "cloudant:bulk-crud", "signature" : "($connection as anyURI, $database as string, $documents as object()*, $options as object()) as array()", "description" : " <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">Creates, updates or deletes multiple documents with a single request.</p>\n <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">When creating new documents the document ID is optional. For updating\n existing documents, you must provide the document ID, revision information,\n and new document values. To delete existing documents, you must provide the\n document ID, revision information and add a field <code>_deleted</code> having\n value <code>true</code>.\n </p>\n <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">This function allows to specify an additional options object.\n The following options are supported:\n <ul>\n   <li>all_or_nothing: sets the database commit mode to use all-or-nothing\n   semantics (boolean, default: false).</li>\n   <li>database-owner: specifies the database owner (string, default: connection\n   user).</li>\n </ul>\n </p>\n <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">For example,\n <pre>cloudant:bulk-crud($connection, \"db\",\n (\n   {\n     \"name\":\"Nicholas\",\n     \"age\":45,\n     \"gender\":\"male\",\n   },\n   {\n     \"name\":\"Taylor\",\n     \"age\":50,\n     \"gender\":\"male\",\n     \"_id\":\"5a049246-179f-42ad-87ac-8f080426c17c\",\n   },\n   {\n     \"name\":\"Owen\",\n     \"age\":51,\n     \"gender\":\"male\",\n     \"_id\":\"d1f61e66-7708-4da6-aa05-7cbc33b44b7e\",\n     \"_rev\":\"2-f29c836d0bedc4b4b95cfaa6d99e95df\",\n   },\n   {\n     \"_id\":\"b675e932-9bb6-4fc9-b889-50238ac3512b\",\n     \"_rev\":\"2-abd3942fdab3515bfed224abed2451feb\",\n     \"_deleted\": true\n   }\n ),{\"database-owner\": \"username\"})\n </pre>\n requires to insert the first document with a system-generated identifier, to\n insert the second one with a user-specified identifier, to update the third\n one and, finally, to delete the last one.\n </p>\n <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">\n The JSON returned by the_bulk_docs operation consists of an array\n of JSON structures, one for each document in the original submission.\n The returned JSON structure should be examined to ensure that all of\n the documents submitted in the original request were successfully added\n to the database. When no errors are raised, the revision of the new\n document is reported for all documents.\n </p>\n <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">\n <pre>\n [{\n    \"id\":\"96f898f0-f6ff-4a9b-aac4-503992f31b01\",\n    \"rev\":\"2-ff7b85665c4c297838963c80ecf481a3\"\n  },\n  {\n    \"id\":\"5a049246-179f-42ad-87ac-8f080426c17c\",\n    \"rev\":\"2-9d5401898196997853b5ac4163857a29\"\n  },\n  {\n    \"id\":\"d1f61e66-7708-4da6-aa05-7cbc33b44b7e\",\n    \"rev\":\"2-cbdef49ef3ddc127eff86350844a6108\"\n  },\n  {\n    \"id\": \"b675e932-9bb6-4fc9-b889-50238ac3512b\",\n    \"rev\":\"2-12356bafb1232167befabb32127823943d\"\n  }]\n </pre>\n </p>\n <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">Cloudant will only guarantee that some of the documents will be\n saved when you send the request. The response will contain the list of\n documents successfully inserted or updated during the process.\n In the event of a crash, some of the documents may have been successfully\n saved, and some will have been lost.\n The response structure will indicate whether the document was updated by\n supplying the <code>rev</code> parameter indicating a new document revision\n was created. If the update failed, then you will get an error of type\n <code>conflict</code>.</p>\n <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">For example:\n <pre>\n [\n   {\n     \"id\":\"FishStew\",\n     \"error\":\"conflict\",\n     \"reason\":\"Document update conflict.\"\n   },\n   {\n     \"id\":\"LambStew\",\n     \"error\":\"conflict\",\n     \"reason\":\"Document update conflict.\"\n   },\n   {\n     \"id\":\"7f7638c86173eb440b8890839ff35433\",\n     \"error\":\"conflict\",\n     \"reason\":\"Document update conflict.\"\n   }\n ]\n </pre>\n In this case no new revision has been created and you will need to submit\n the document update with the correct revision tag, to update the document.\n </p>\n <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">The exact structure of each document in the returned array is:\n <ul>\n   <li>id: the document ID</li>\n   <li>rev: the new document revision, if a new revision was created</li>\n   <li>error: the error type, if an error was raised</li>\n   <li>reason: a description of the raised error, if an error was raised</li>\n </ul>\n </p>\n <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">The error type can either be conflict or forbidden. The first type means that\n the document as submitted is in conflict. The new revision has not been created\n and you will need to re-submit the document to the database. Entries with forbidden\n error type indicate that the validation routine applied to the document during submission\n has returned an error.</p>\n", "summary" : "<p>  Creates, updates or deletes multiple documents with a single request.</p>", "annotation_str" : " %an:sequential", "annotations" : [ { "prefix" : "an", "ns" : "http://zorba.io/annotations", "name" : "sequential", "value" : "" } ], "updating" : false, "parameters" : [ { "name" : "connection", "type" : "anyURI", "occurrence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> A connection identifier</div>" }, { "name" : "database", "type" : "string", "occurrence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> A database name</div>" }, { "name" : "documents", "type" : "object()", "occurrence" : "*", "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> An sequence of documents</div>" }, { "name" : "options", "type" : "object()", "occurrence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> An object specifying additional request options</div>" } ], "returns" : { "type" : "array()", "description" : "An object describing the performed operations" }, "errors" : [ "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">cloudant:AUTHORIZATION Authorization error</xqdoc:error>", "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">cloudant:HTTP An HTTP error occurred when issuing the request</xqdoc:error>", "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">cloudant:RESPONSE An error occurred parsing the server response</xqdoc:error>", "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">cloudant:CONNECTION The specified connection does not exist</xqdoc:error>", "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">cloudant:INTERNAL Cloudant internal error</xqdoc:error>", "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">cloudant:OPTIONS Malformed options object</xqdoc:error>" ] }, { "isDocumented" : true, "arity" : 2, "name" : "commit-changes", "qname" : "cloudant:commit-changes", "signature" : "($connection as anyURI, $database as string) as object()", "description" : " <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">Commits any recent changes to the specified database to disk.</p>\n <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">For example,\n <pre>cloudant:commit-changes($connection, \"db\")</pre>.\n </p>\n <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">An object with the following format is returned:\n <pre>\n {\n   \"ok\" : true,\n   \"instance_start_time\" : \"0\"\n }\n </pre>\n </p>\n", "summary" : "<p>  Commits any recent changes to the specified database to disk.</p>", "annotation_str" : " %an:sequential", "annotations" : [ { "prefix" : "an", "ns" : "http://zorba.io/annotations", "name" : "sequential", "value" : "" } ], "updating" : false, "parameters" : [ { "name" : "connection", "type" : "anyURI", "occurrence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> A connection identifier</div>" }, { "name" : "database", "type" : "string", "occurrence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> A database name</div>" } ], "returns" : { "type" : "object()", "description" : "An object reporting the instance start time" }, "errors" : [ "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">cloudant:AUTHORIZATION Authorization error</xqdoc:error>", "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">cloudant:DATABASE-NOT-EXISTS The specified database does not exists</xqdoc:error>", "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">cloudant:HTTP An HTTP error occurred when issuing the request</xqdoc:error>", "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">cloudant:RESPONSE An error occurred parsing the server response</xqdoc:error>", "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">cloudant:CONNECTION The specified connection does not exist</xqdoc:error>", "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">cloudant:INTERNAL Cloudant internal error</xqdoc:error>" ] }, { "isDocumented" : true, "arity" : 3, "name" : "commit-changes", "qname" : "cloudant:commit-changes", "signature" : "($connection as anyURI, $database as string, $options as object()) as object()", "description" : " <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">Commits any recent changes to the specified database to disk.</p>\n <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">This function allows to specify an additional options object.\n The following options are supported:\n <ul>\n   <li>database-owner: specifies the database owner (string, default: connection\n   user).</li>\n </ul>\n </p>\n <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">For example,\n <pre>\n cloudant:commit-changes($connection, \"db\", {\"database-owner\": \"username\"})\n </pre>.\n </p>\n <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">An object with the following format is returned:\n <pre>\n {\n   \"ok\" : true,\n   \"instance_start_time\" : \"0\"\n }\n </pre>\n </p>\n", "summary" : "<p>  Commits any recent changes to the specified database to disk.</p>", "annotation_str" : " %an:sequential", "annotations" : [ { "prefix" : "an", "ns" : "http://zorba.io/annotations", "name" : "sequential", "value" : "" } ], "updating" : false, "parameters" : [ { "name" : "connection", "type" : "anyURI", "occurrence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> A connection identifier</div>" }, { "name" : "database", "type" : "string", "occurrence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> A database name</div>" }, { "name" : "options", "type" : "object()", "occurrence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> An object specifying additional request options</div>" } ], "returns" : { "type" : "object()", "description" : "An object reporting the instance start time" }, "errors" : [ "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">cloudant:AUTHORIZATION Authorization error</xqdoc:error>", "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">cloudant:DATABASE-NOT-EXISTS The specified database does not exists</xqdoc:error>", "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">cloudant:HTTP An HTTP error occurred when issuing the request</xqdoc:error>", "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">cloudant:RESPONSE An error occurred parsing the server response</xqdoc:error>", "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">cloudant:CONNECTION The specified connection does not exist</xqdoc:error>", "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">cloudant:INTERNAL Cloudant internal error</xqdoc:error>", "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">cloudant:OPTIONS Malformed options object</xqdoc:error>" ] }, { "isDocumented" : true, "arity" : 0, "name" : "connect", "qname" : "cloudant:connect", "signature" : "() as anyURI", "description" : " <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">Opens a connection to Cloudant using the default credentials.</p>\n <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">The function returns an opaque URI that can represents the connection.\n This URI has to be passed to other functions of this module that require\n a <code>$connection</code> parameter as a first argument.</p>\n <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">This function requires to specify an options object.\n The following options are supported:\n <ul>\n   <li>username: the username used for connecting (string, mandatory).</li>\n   <li>password: the password used for connecting (string, mandatory).</li>\n   <li>default-database-owner: the default database owner which will be\n       used when calling the other module functions (string).</li>\n </ul>\n </p>\n <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">For example,\n <pre>cloudant:connect()</pre>.\n </p>\n", "summary" : "<p>  Opens a connection to Cloudant using the default credentials.</p>", "annotation_str" : " %an:sequential", "annotations" : [ { "prefix" : "an", "ns" : "http://zorba.io/annotations", "name" : "sequential", "value" : "" } ], "updating" : false, "parameters" : [  ], "returns" : { "type" : "anyURI", "description" : "An identifier that represents the connection to the server" }, "errors" : [ "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">cloudant:CREDENTIALS Missing or invalid credentials</xqdoc:error>", "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">cloudant:AUTHORIZATION Authentication error</xqdoc:error>", "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">cloudant:HTTP An HTTP error occurred when issuing the request</xqdoc:error>", "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">cloudant:INTERNAL Cloudant internal error</xqdoc:error>" ] }, { "isDocumented" : true, "arity" : 1, "name" : "connect", "qname" : "cloudant:connect", "signature" : "($credentials as item()) as anyURI", "description" : " <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">Opens a connection to Cloudant using the specified credentials.</p>\n <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">The function returns an opaque URI that can represents the connection.\n This URI has to be passed to other functions of this module that require\n a <code>$connection</code> parameter as a first argument.</p>\n <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">The $credentials parameter is used to specify the connection information.\n If a string is used, then the function will interpret it as the name of\n a credential in the Cloudant category.\n If an object is used, then the function will open a connection using it.\n The object structure is the following:\n <ul>\n   <li>username: the username used for connecting (string, mandatory).</li>\n   <li>password: the password used for connecting (string, mandatory).</li>\n   <li>default-database-owner: the default database owner which will be\n       used when calling the other module functions (string, optional).</li>\n </ul>\n </p>\n <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">For example, using stored credential:\n <pre>cloudant:connect(\"credentials-name\")</pre>\n For example, specifying the connection information:\n <pre>cloudant:connect(\n   {\n     \"username\": \"user\",\n     \"password: \"pass\",\n     \"owner\": \"another-user\"\n   })</pre>.\n </p>\n", "summary" : "<p>  Opens a connection to Cloudant using the specified credentials.</p>", "annotation_str" : " %an:sequential", "annotations" : [ { "prefix" : "an", "ns" : "http://zorba.io/annotations", "name" : "sequential", "value" : "" } ], "updating" : false, "parameters" : [ { "name" : "credentials", "type" : "item()", "occurrence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> The connection specification</div>" } ], "returns" : { "type" : "anyURI", "description" : "An identifier that represents the connection to the server" }, "errors" : [ "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">cloudant:AUTHORIZATION Authentication error</xqdoc:error>", "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">cloudant:HTTP An HTTP error occurred when issuing the request</xqdoc:error>", "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">cloudant:INTERNAL Cloudant internal error</xqdoc:error>", "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">cloudant:CREDENTIALS Missing or malformed credentials</xqdoc:error>" ] }, { "isDocumented" : true, "arity" : 2, "name" : "create-database", "qname" : "cloudant:create-database", "signature" : "($connection as anyURI, $database as string) as empty-sequence()", "description" : " <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">Creates a new database.</p>\n <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">The database name must be composed of one or more of the following\n characters:\n <ul>\n  <li>Lowercase characters (a-z).</li>\n  <li>Digits (0-9).</li>\n  <li>Any of the characters: _,$,(,),+,- and /.</li>\n </ul>\n </p>\n <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">For example,\n <pre>cloudant:create-database($connection, \"db\")</pre>.\n </p>\n", "summary" : "<p>  Creates a new database.</p>", "annotation_str" : " %an:sequential", "annotations" : [ { "prefix" : "an", "ns" : "http://zorba.io/annotations", "name" : "sequential", "value" : "" } ], "updating" : false, "parameters" : [ { "name" : "connection", "type" : "anyURI", "occurrence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> A connection identifier</div>" }, { "name" : "database", "type" : "string", "occurrence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> A database name</div>" } ], "returns" : { "type" : "empty-sequence()", "description" : "Empty sequence" }, "errors" : [ "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">cloudant:AUTHORIZATION Authorization error</xqdoc:error>", "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">cloudant:DATABASE-NAME Invalid database name</xqdoc:error>", "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">cloudant:DATABASE-EXISTS Database already exists</xqdoc:error>", "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">cloudant:HTTP An HTTP error occurred when issuing the request</xqdoc:error>", "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">cloudant:CONNECTION The specified connection does not exist</xqdoc:error>", "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">cloudant:INTERNAL Cloudant internal error</xqdoc:error>" ] }, { "isDocumented" : true, "arity" : 3, "name" : "create-document", "qname" : "cloudant:create-document", "signature" : "($connection as anyURI, $database as string, $document as object()) as object()", "description" : " <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">Creates a new document in the specified database.</p>\n <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">Creates a new document in the specified database,\n using the supplied JSON document structure. If the JSON\n structure includes the _id field, then the document will\n be created with the specified document ID. If the _id\n field is not specified, a new unique ID will be generated.</p>\n <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">You can include one or more attachments with a given document\n by incorporating the attachment information within the JSON of\n the document. This provides a simpler alternative to loading\n documents with attachments than making a separate call.\n To do so add you can add the <code>_attachments</code> object\n field to the document. It can have one ore more fields, each\n defining a different attachment.\n The name of the field is the name of the attachment.\n Its value is an object containing the following fields:\n <ul>\n  <li>content_type: MIME Content type string</li>\n  <li>data: File attachment content, Base64 encoded</li>\n </ul>\n </p>\n <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">For example,\n <pre>cloudant:create-document($connection, \"db\",\n   {\n     \"_id\" : \"FishStew\",\n     \"servings\" : 4,\n     \"subtitle\" : \"Delicious with fresh bread\",\n     \"title\" : \"Fish Stew\"\n     \"_attachments\" : {\n       \"styling.css\" : {\n       \"content-type\" : \"text/css\",\n       \"data\" : \"cCB7IGZvbnQtc2l6ZTogMTJwdDsgfQo=\"\n       }\n     }\n   })\n </pre>\n creates a document with an attachment named <code>styling.css</code>.\n </p>\n <h4 xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">Creating a design document</h4>\n <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">To create a design document the <code>_id</code> field must be present and must\n start with <code>_design/</code>.</p>\n <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">For example, the following expression creates a design document\n <pre>cloudant:create-document($connection, \"db\",\n   {\n     \"_id\": \"_design/DesDocID\",\n     \"views\": {\n       \"view1\": {\n       \"map\":\"function(doc){emit(doc.field, 1)}\",\n       \"reduce\": \"function(key, value, rereduce){return sum(values)}\"\n       }\n     },\n     \"indexes\": {\n       \"mysearch\" : {\n         \"analyzer\": {\"name\": \"portuguese\", \"stopwords\":[\"foo\", \"bar, \"baz\"]},\n         \"index\": \"function(doc){ ... }\"\n       },\n     }\n   }, {\"database-owner\": \"username\"})\n </pre>.\n </p>\n <h4 xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">Return value</h4>\n <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">The returned JSON object will report the new document revision\n and has the following form:\n <pre>\n {\n   \"id\":\"64575eef70ab90a2b8d55fc09e00440d\",\n   \"ok\":true,\n   \"rev\":\"1-9c65296036141e575d32ba9c034dd3ee\"\n }\n </pre>\n </p>\n", "summary" : "<p>  Creates a new document in the specified database.</p>", "annotation_str" : " %an:sequential", "annotations" : [ { "prefix" : "an", "ns" : "http://zorba.io/annotations", "name" : "sequential", "value" : "" } ], "updating" : false, "parameters" : [ { "name" : "connection", "type" : "anyURI", "occurrence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> A connection identifier</div>" }, { "name" : "database", "type" : "string", "occurrence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> A database name</div>" }, { "name" : "document", "type" : "object()", "occurrence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> A document</div>" } ], "returns" : { "type" : "object()", "description" : "An object which contains the document id and revision" }, "errors" : [ "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">cloudant:AUTHORIZATION Authorization error</xqdoc:error>", "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">cloudant:DATABASE-NAME Invalid database name</xqdoc:error>", "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">cloudant:DOCUMENT Document creation conflict</xqdoc:error>", "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">cloudant:HTTP An HTTP error occurred when issuing the request</xqdoc:error>", "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">cloudant:RESPONSE An error occurred parsing the server response</xqdoc:error>", "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">cloudant:CONNECTION The specified connection does not exist</xqdoc:error>", "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">cloudant:INTERNAL Cloudant internal error</xqdoc:error>" ] }, { "isDocumented" : true, "arity" : 4, "name" : "create-document", "qname" : "cloudant:create-document", "signature" : "($connection as anyURI, $database as string, $document as object(), $options as object()) as object()", "description" : " <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">Creates a new document in the specified database</p>\n <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">Creates a new document in the specified database,\n using the supplied JSON document structure. If the JSON\n structure includes the _id field, then the document will\n be created with the specified document ID. If the _id\n field is not specified, a new unique ID will be generated.</p>\n <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">You can include one or more attachments with a given document\n by incorporating the attachment information within the JSON of\n the document. This provides a simpler alternative to loading\n documents with attachments than making a separate call.\n To do so add you can add the <code>_attachments</code> object\n field to the document. It can have one ore more fields, each\n defining a different attachment.\n The name of the field is the name of the attachment.\n Its value is an object containing the following fields:\n <ul>\n  <li>content_type: MIME Content type string</li>\n  <li>data: File attachment content, Base64 encoded</li>\n </ul>\n </p>\n <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">For example,\n <pre>cloudant:create-document($connection, \"db\",\n   {\n     \"_id\" : \"FishStew\",\n     \"servings\" : 4,\n     \"subtitle\" : \"Delicious with fresh bread\",\n     \"title\" : \"Fish Stew\"\n     \"_attachments\" : {\n       \"styling.css\" : {\n       \"content-type\" : \"text/css\",\n       \"data\" : \"cCB7IGZvbnQtc2l6ZTogMTJwdDsgfQo=\"\n       }\n     }\n   }, {\"database-owner\": \"username\"})\n </pre>\n creates a document with an attachment named <code>styling.css</code>.\n </p>\n <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">This function allows to specify an additional options object.\n The following options are supported:\n <ul>\n   <li>batch: requires batch mode for insertions (string, allowed value: \"ok\")</li>\n   <li>database-owner: specifies the database owner (string, default: connection user).</li>\n </ul>\n </p>\n <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">You can write documents to the database at a higher rate\n by using the batch option. This collects document writes\n together in memory (on a user-by-user basis) before they are\n committed to disk. This increases the risk of the documents\n not being stored in the event of a failure, since the documents\n are not written to disk immediately.</p>\n <h4 xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">Creating a design document</h4>\n <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">To create a design document the <code>_id</code> field must be present and must\n start with <code>_design/</code>.</p>\n <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">For example, the following expression creates a design document\n <pre>cloudant:create-document($connection, \"db\",\n   {\n     \"_id\": \"_design/DesDocID\",\n     \"views\": {\n       \"view1\": {\n       \"map\":\"function(doc){emit(doc.field, 1)}\",\n       \"reduce\": \"function(key, value, rereduce){return sum(values)}\"\n       }\n     },\n     \"indexes\": {\n       \"mysearch\" : {\n         \"analyzer\": {\"name\": \"portuguese\", \"stopwords\":[\"foo\", \"bar, \"baz\"]},\n         \"index\": \"function(doc){ ... }\"\n       },\n     }\n   }, {\"database-owner\": \"username\"})\n </pre>.\n </p>\n <h4 xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">Return value</h4>\n <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">The returned JSON object will report the new document revision\n and has the following form:\n <pre>\n {\n   \"id\":\"64575eef70ab90a2b8d55fc09e00440d\",\n   \"ok\":true,\n   \"rev\":\"1-9c65296036141e575d32ba9c034dd3ee\"\n }\n </pre>\n </p>\n", "summary" : "<p>  Creates a new document in the specified database \n  Creates a new document in the specified database,\n using the supplied JSON document structure.</p>", "annotation_str" : " %an:sequential", "annotations" : [ { "prefix" : "an", "ns" : "http://zorba.io/annotations", "name" : "sequential", "value" : "" } ], "updating" : false, "parameters" : [ { "name" : "connection", "type" : "anyURI", "occurrence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> A connection identifier</div>" }, { "name" : "database", "type" : "string", "occurrence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> A database name</div>" }, { "name" : "document", "type" : "object()", "occurrence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> A document</div>" }, { "name" : "options", "type" : "object()", "occurrence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> An object specifying additional request options</div>" } ], "returns" : { "type" : "object()", "description" : "An object which contains the document id and revision" }, "errors" : [ "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">cloudant:AUTHORIZATION Authorization error</xqdoc:error>", "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">cloudant:DATABASE-NAME Invalid database name</xqdoc:error>", "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">cloudant:DOCUMENT Document creation conflict</xqdoc:error>", "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">cloudant:HTTP An HTTP error occurred when issuing the request</xqdoc:error>", "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">cloudant:RESPONSE An error occurred parsing the server response</xqdoc:error>", "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">cloudant:CONNECTION The specified connection does not exist</xqdoc:error>", "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">cloudant:INTERNAL Cloudant internal error</xqdoc:error>", "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">cloudant:OPTIONS Malformed options object</xqdoc:error>" ] }, { "isDocumented" : true, "arity" : 7, "name" : "create-or-update-attachment", "qname" : "cloudant:create-or-update-attachment", "signature" : "($connection as anyURI, $database as string, $document-id as string, $document-rev as string, $attachment-name as string, $media-type as string, $attachment as atomic) as object()", "description" : " <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">Creates or updates a document attachment.</p>\n <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">The latest document revision must be specified.</p>\n <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">For example,\n <pre>cloudant:create-or-update-attachment($connection, \"db\", \"FishStew\",\n   \"8-7c4740b4dcf26683e941d6641c00c39d\", \"AttachmentName\", \"text/plain\",\n   \"AttachmentContent\")</pre>.\n </p>\n <h4 xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">Creating or updating a design document attachment.</h4>\n <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">To create or update a design document attachment the document id must\n start with <code>_design/</code>.</p>\n <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">For example,\n <pre>cloudant:create-or-update-attachment($connection, \"db\", \"_design/DesDocId\",\n   \"8-7c4740b4dcf26683e941d6641c00c39d\", \"AttachmentName\", \"text/plain\",\n   \"AttachmentContent\")</pre>.\n </p>\n <h4 xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">Return value</h4>\n <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">The returned object reports the document id and its new\n revision, as follows:\n <pre>\n {\n   \"id\":\"FishStew\",\n   \"ok\":true,\n   \"rev\":\"9-247bb19a41bfd9bfdaf5ee6e2e05be74\"\n }\n </pre>\n </p>\n", "summary" : "<p>  Creates or updates a document attachment.</p>", "annotation_str" : " %an:sequential", "annotations" : [ { "prefix" : "an", "ns" : "http://zorba.io/annotations", "name" : "sequential", "value" : "" } ], "updating" : false, "parameters" : [ { "name" : "connection", "type" : "anyURI", "occurrence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> A connection identifier</div>" }, { "name" : "database", "type" : "string", "occurrence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> A database name</div>" }, { "name" : "document-id", "type" : "string", "occurrence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> A document identifier</div>" }, { "name" : "document-rev", "type" : "string", "occurrence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> A document revision</div>" }, { "name" : "attachment-name", "type" : "string", "occurrence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> The name of the attachment</div>" }, { "name" : "media-type", "type" : "string", "occurrence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> The media-type of the attachment</div>" }, { "name" : "attachment", "type" : "atomic", "occurrence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">-name The name of the attachment</div>" } ], "returns" : { "type" : "object()", "description" : "An object containing the document id and its new revision" }, "errors" : [ "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">cloudant:AUTHORIZATION Authorization error</xqdoc:error>", "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">cloudant:DATABASE-NAME Invalid database name</xqdoc:error>", "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">cloudant:HTTP An HTTP error occurred when issuing the request</xqdoc:error>", "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">cloudant:RESPONSE An error occurred parsing the server response</xqdoc:error>", "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">cloudant:CONNECTION The specified connection does not exist</xqdoc:error>", "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">cloudant:ATTACHMENT-TYPE Attachment type must be string, base64Binary or hexBinary</xqdoc:error>", "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">cloudant:INTERNAL Cloudant internal error</xqdoc:error>" ] }, { "isDocumented" : true, "arity" : 8, "name" : "create-or-update-attachment", "qname" : "cloudant:create-or-update-attachment", "signature" : "($connection as anyURI, $database as string, $document-id as string, $document-rev as string, $attachment-name as string, $media-type as string, $attachment as atomic, $options as object()) as object()", "description" : " <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">Creates or updates a document attachment.</p>\n <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">The latest document revision must be specified.</p>\n <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">This function allows to specify an additional options object.\n The following options are supported:\n <ul>\n   <li>database-owner: specifies the database owner (string, default: connection user).</li>\n </ul>\n </p>\n <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">For example,\n <pre>cloudant:create-or-update-attachment($connection, \"db\", \"FishStew\",\n   \"8-7c4740b4dcf26683e941d6641c00c39d\", \"AttachmentName\", \"text/plain\",\n   \"AttachmentContent\", {\"database-owner\": \"username\"})</pre>.\n </p>\n <h4 xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">Creating or updating a design document attachment.</h4>\n <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">To create or update a design document attachment the document id must\n start with <code>_design/</code>.</p>\n <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">For example,\n <pre>cloudant:create-or-update-attachment($connection, \"db\", \"_design/DesDocId\",\n   \"8-7c4740b4dcf26683e941d6641c00c39d\", \"AttachmentName\", \"text/plain\",\n   \"AttachmentContent\", {\"database-owner\": \"username\"})</pre>.\n </p>\n <h4 xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">Return value</h4>\n <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">The returned object reports the document id and its new\n revision, as follows:\n <pre>\n {\n   \"id\":\"FishStew\",\n   \"ok\":true,\n   \"rev\":\"9-247bb19a41bfd9bfdaf5ee6e2e05be74\"\n }\n </pre>\n </p>\n", "summary" : "<p>  Creates or updates a document attachment.</p>", "annotation_str" : " %an:sequential", "annotations" : [ { "prefix" : "an", "ns" : "http://zorba.io/annotations", "name" : "sequential", "value" : "" } ], "updating" : false, "parameters" : [ { "name" : "connection", "type" : "anyURI", "occurrence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> A connection identifier</div>" }, { "name" : "database", "type" : "string", "occurrence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> A database name</div>" }, { "name" : "document-id", "type" : "string", "occurrence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> A document identifier</div>" }, { "name" : "document-rev", "type" : "string", "occurrence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> A document revision</div>" }, { "name" : "attachment-name", "type" : "string", "occurrence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> The name of the attachment</div>" }, { "name" : "media-type", "type" : "string", "occurrence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> The media-type of the attachment</div>" }, { "name" : "attachment", "type" : "atomic", "occurrence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">-name The name of the attachment</div>" }, { "name" : "options", "type" : "object()", "occurrence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> An object specifying additional request options</div>" } ], "returns" : { "type" : "object()", "description" : "An object containing the document id and its new revision" }, "errors" : [ "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">cloudant:AUTHORIZATION Authorization error</xqdoc:error>", "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">cloudant:DATABASE-NAME Invalid database name</xqdoc:error>", "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">cloudant:HTTP An HTTP error occurred when issuing the request</xqdoc:error>", "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">cloudant:RESPONSE An error occurred parsing the server response</xqdoc:error>", "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">cloudant:CONNECTION The specified connection does not exist</xqdoc:error>", "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">cloudant:ATTACHMENT-TYPE Attachment type must be string, base64Binary or hexBinary</xqdoc:error>", "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">cloudant:INTERNAL Cloudant internal error</xqdoc:error>", "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">cloudant:OPTIONS Malformed options object</xqdoc:error>" ] }, { "isDocumented" : true, "arity" : 3, "name" : "create-or-update-document", "qname" : "cloudant:create-or-update-document", "signature" : "($connection as anyURI, $database as string, $document as object()) as object()", "description" : " <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">Creates or updates a document.</p>\n <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">When creating a new document, the <code>_id</code> field must\n be specified.</p>\n <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">For example,\n <pre>cloudant:create-or-update-document($connection, \"db\",\n   {\n     \"name\":\"Hannah\",\n     \"age\":120,\n     \"gender\":\"female\",\n     \"_id\":\"DocID\"\n   })</pre>.\n </p>\n <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">When updating a document, the <code>_id</code> and the\n <code>_rev</code> field, which contains the last document revision,\n must be specified.</p>\n <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">For example,\n <pre>cloudant:create-or-update-document($connection, \"db\",\n   {\n     \"name\":\"Hannah\",\n     \"age\":40,\n     \"gender\":\"female\",\n     \"_id\":\"DocID\",\n     \"_rev\":\"1-764b9b11845fd0b73cfa0e61acc74ecf\"\n   })</pre>.\n </p>\n <h4 xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">Creating or updating a design document</h4>\n <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">To create or update a design document the document id must\n start with <code>_design/</code>.</p>\n <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">For example, the following expression creates a design document\n <pre>cloudant:create-or-update-document($connection, \"db\",\n   {\n     \"_id\": \"_design/DesDocID\",\n     \"views\": {\n       \"view1\": {\n       \"map\":\"function(doc){emit(doc.field, 1)}\",\n       \"reduce\": \"function(key, value, rereduce){return sum(values)}\"\n       }\n     },\n     \"indexes\": {\n       \"mysearch\" : {\n         \"analyzer\": {\"name\": \"portuguese\", \"stopwords\":[\"foo\", \"bar, \"baz\"]},\n         \"index\": \"function(doc){ ... }\"\n       },\n     }\n   })\n </pre>.\n </p>\n <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">For example, the following expression updates a design document\n <pre>cloudant:create-or-update-document($connection, \"db\",\n   {\n     \"_id\": \"_design/DesDocID\",\n     \"_rev\": \"2-f29c836d0bedc4b4b95cfaa6d99e95df\",\n     \"views\": {\n       \"view1\": {\n       \"map\":\"function(doc){emit(doc.field, 1)}\",\n       \"reduce\": \"function(key, value, rereduce){return sum(values)}\"\n       }\n     },\n     \"indexes\": {\n       \"mysearch\" : {\n         \"analyzer\": {\"name\": \"portuguese\", \"stopwords\":[\"foo\", \"bar, \"baz\"]},\n         \"index\": \"function(doc){ ... }\"\n       },\n     }\n   })\n </pre>.</p>\n <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">\n The meaning of the fields in the design document is the following:\n <ul>\n   <li>_id: document ID</li>\n   <li>_rev: document revision</li>\n   <li>views: object defining the views. Each field defines a different view.\n       The field name is the name of the view and has the following content:\n     <ul>\n       <li>map: view map function</li>\n       <li>reduce: view reduce function (optional)</li>\n     </ul>\n   </li>\n   <li>indexes: object defining the view indexes. Each field defines a different index.\n       The field name is the name of the index and has the following content:\n     <ul>\n       <li>analyzer: Name of the analyzer to be used or an object with the\n       following fields:\n         <ul>\n           <li>name: Name of the analyzer</li>\n           <li>stopwords: An array of stop words. Stop words are words that\n           should not be indexed.</li>\n         </ul>\n       </li>\n       <li>index: Function that handles the indexing</li>\n     </ul>\n   </li>\n </ul>\n </p>\n <h4 xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">Return value</h4>\n <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">The format of the returned object is the following and contains\n the document id and revision.\n <pre>\n {\n   \"ok\":true,\n   \"id\":\"DocID\",\n   \"rev\":\"1-764b9b11845fd0b73cfa0e61acc74ecf\"\n }\n </pre>\n </p>\n", "summary" : "<p>  Creates or updates a document.</p>", "annotation_str" : " %an:sequential", "annotations" : [ { "prefix" : "an", "ns" : "http://zorba.io/annotations", "name" : "sequential", "value" : "" } ], "updating" : false, "parameters" : [ { "name" : "connection", "type" : "anyURI", "occurrence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> A connection identifier</div>" }, { "name" : "database", "type" : "string", "occurrence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> A database name</div>" }, { "name" : "document", "type" : "object()", "occurrence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> A document</div>" } ], "returns" : { "type" : "object()", "description" : "An object which specifies the document id and its new revision" }, "errors" : [ "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">cloudant:AUTHORIZATION Authorization error</xqdoc:error>", "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">cloudant:DATABASE-NAME Invalid database name</xqdoc:error>", "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">cloudant:HTTP An HTTP error occurred when issuing the request</xqdoc:error>", "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">cloudant:RESPONSE An error occurred parsing the server response</xqdoc:error>", "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">cloudant:CONNECTION The specified connection does not exist</xqdoc:error>", "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">cloudant:DOCUMENT-MALFORMED Malformed document object</xqdoc:error>", "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">cloudant:INTERNAL Cloudant internal error</xqdoc:error>" ] }, { "isDocumented" : true, "arity" : 4, "name" : "create-or-update-document", "qname" : "cloudant:create-or-update-document", "signature" : "($connection as anyURI, $database as string, $document as object(), $options as object()) as object()", "description" : " <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">Creates or updates a document.</p>\n <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">When creating a new document, the <code>_id</code> field must\n be specified.</p>\n <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">For example,\n <pre>cloudant:create-or-update-document($connection, \"db\", \"DocID\",\n   {\n     \"name\":\"Hannah\",\n     \"age\":120,\n     \"gender\":\"female\",\n     \"_id\":\"DocID\"\n   }, {\"database-owner\": \"username\"})</pre>.\n </p>\n <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">When updating a document, the <code>_id</code> and the\n <code>_rev</code> field, which contains the last document revision,\n must be specified.</p>\n <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">For example,\n <pre>cloudant:create-or-update-document($connection, \"db\", \"DocID\",\n   {\n     \"name\":\"Hannah\",\n     \"age\":40,\n     \"gender\":\"female\",\n     \"_id\":\"DocID\",\n     \"_rev\":\"1-764b9b11845fd0b73cfa0e61acc74ecf\"\n   }, {\"database-owner\": \"username\"})</pre>.\n </p>\n <h4 xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">Creating or updating a design document</h4>\n <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">To create or update a design document the document id must\n start with <code>_design/</code>.</p>\n <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">For example, the following expression creates a design document\n <pre>cloudant:create-or-update-document($connection, \"db\",\n   {\n     \"_id\": \"_design/DesDocID\",\n     \"views\": {\n       \"view1\": {\n       \"map\":\"function(doc){emit(doc.field, 1)}\",\n       \"reduce\": \"function(key, value, rereduce){return sum(values)}\"\n       }\n     },\n     \"indexes\": {\n       \"mysearch\" : {\n         \"analyzer\": {\"name\": \"portuguese\", \"stopwords\":[\"foo\", \"bar, \"baz\"]},\n         \"index\": \"function(doc){ ... }\"\n       },\n     }\n   }, {\"database-owner\": \"username\"})\n </pre>.\n </p>\n <pre xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">cloudant:create-or-update-document($connection, \"db\",\n   {\n     \"_id\": \"_design/DesDocID\",\n     \"_rev\": \"2-f29c836d0bedc4b4b95cfaa6d99e95df\",\n     \"views\": {\n       \"view1\": {\n       \"map\":\"function(doc){emit(doc.field, 1)}\",\n       \"reduce\": \"function(key, value, rereduce){return sum(values)}\"\n       }\n     },\n     \"indexes\": {\n       \"mysearch\" : {\n         \"analyzer\": {\"name\": \"portuguese\", \"stopwords\":[\"foo\", \"bar, \"baz\"]},\n         \"index\": \"function(doc){ ... }\"\n       },\n     }\n   }, {\"database-owner\": \"username\"})\n </pre>.\n <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">\n The meaning of the fields in the design document is the following:\n <ul>\n   <li>_id: document ID</li>\n   <li>_rev: document revision</li>\n   <li>views: object defining the views. Each field defines a different view.\n       The field name is the name of the view and has the following content:\n     <ul>\n       <li>map: view map function</li>\n       <li>reduce: view reduce function (optional)</li>\n     </ul>\n   </li>\n   <li>indexes: object defining the view indexes. Each field defines a different index.\n       The field name is the name of the index and has the following content:\n     <ul>\n       <li>analyzer: Name of the analyzer to be used or an object with the\n       following fields:\n         <ul>\n           <li>name: Name of the analyzer</li>\n           <li>stopwords: An array of stop words. Stop words are words that\n           should not be indexed.</li>\n         </ul>\n       </li>\n       <li>index: Function that handles the indexing</li>\n     </ul>\n   </li>\n </ul>\n </p>\n <h4 xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">Return value</h4>\n <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">The format of the returned object is the following and contains\n the document id and revision.\n <pre>\n {\n   \"ok\":true,\n   \"id\":\"DocID\",\n   \"rev\":\"1-764b9b11845fd0b73cfa0e61acc74ecf\"\n }\n </pre>\n </p>\n", "summary" : "<p>  Creates or updates a document.</p>", "annotation_str" : " %an:sequential", "annotations" : [ { "prefix" : "an", "ns" : "http://zorba.io/annotations", "name" : "sequential", "value" : "" } ], "updating" : false, "parameters" : [ { "name" : "connection", "type" : "anyURI", "occurrence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> A connection identifier</div>" }, { "name" : "database", "type" : "string", "occurrence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> A database name</div>" }, { "name" : "document", "type" : "object()", "occurrence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> A document</div>" }, { "name" : "options", "type" : "object()", "occurrence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> An object specifying additional request options</div>" } ], "returns" : { "type" : "object()", "description" : "An object which specifies the document id and its new revision" }, "errors" : [ "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">cloudant:AUTHORIZATION Authorization error</xqdoc:error>", "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">cloudant:DATABASE-NAME Invalid database name</xqdoc:error>", "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">cloudant:HTTP An HTTP error occurred when issuing the request</xqdoc:error>", "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">cloudant:RESPONSE An error occurred parsing the server response</xqdoc:error>", "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">cloudant:CONNECTION The specified connection does not exist</xqdoc:error>", "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">cloudant:DOCUMENT-MALFORMED Malformed document object</xqdoc:error>", "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">cloudant:OPTIONS Malformed options object</xqdoc:error>", "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">cloudant:INTERNAL Cloudant internal error</xqdoc:error>" ] }, { "isDocumented" : true, "arity" : 2, "name" : "database-info-nondeterministic", "qname" : "cloudant:database-info-nondeterministic", "signature" : "($connection as anyURI, $database as string) as object()", "description" : " <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">Returns information about a database.</p>\n <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">This function has the same semantics as <a href=\"#database-info-2\">database-info#2</a>,\n but is declared as being non deterministic and thus should only be used when\n result caching is not desired.</p>\n", "summary" : "<p>  Returns information about a database.</p>", "annotation_str" : " %an:nondeterministic", "annotations" : [ { "prefix" : "an", "ns" : "http://zorba.io/annotations", "name" : "nondeterministic", "value" : "" } ], "updating" : false, "parameters" : [ { "name" : "connection", "type" : "anyURI", "occurrence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> A connection identifier</div>" }, { "name" : "database", "type" : "string", "occurrence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> A database name</div>" } ], "returns" : { "type" : "object()", "description" : "An object describing the specified database" }, "errors" : [ "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">cloudant:AUTHORIZATION Authorization error</xqdoc:error>", "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">cloudant:HTTP An HTTP error occurred when issuing the request</xqdoc:error>", "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">cloudant:RESPONSE An error occurred parsing the server response</xqdoc:error>", "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">cloudant:CONNECTION The specified connection does not exist</xqdoc:error>", "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">cloudant:INTERNAL Cloudant internal error</xqdoc:error>" ] }, { "isDocumented" : true, "arity" : 3, "name" : "database-info-nondeterministic", "qname" : "cloudant:database-info-nondeterministic", "signature" : "($connection as anyURI, $database as string, $options as object()) as object()", "description" : " <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">Returns information about a database.</p>\n <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">This function has the same semantics as\n <a href=\"#database-info-3\">database-info#3</a>,\n but is declared as being non deterministic and thus should only be used when\n result caching is not desired.</p>\n", "summary" : "<p>  Returns information about a database.</p>", "annotation_str" : " %an:nondeterministic", "annotations" : [ { "prefix" : "an", "ns" : "http://zorba.io/annotations", "name" : "nondeterministic", "value" : "" } ], "updating" : false, "parameters" : [ { "name" : "connection", "type" : "anyURI", "occurrence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> A connection identifier</div>" }, { "name" : "database", "type" : "string", "occurrence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> a database name</div>" }, { "name" : "options", "type" : "object()", "occurrence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> An object specifying additional request options</div>" } ], "returns" : { "type" : "object()", "description" : "An object describing the specified database" }, "errors" : [ "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">cloudant:AUTHORIZATION Authorization error</xqdoc:error>", "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">cloudant:HTTP An HTTP error occurred when issuing the request</xqdoc:error>", "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">cloudant:RESPONSE An error occurred parsing the server response</xqdoc:error>", "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">cloudant:CONNECTION The specified connection does not exist</xqdoc:error>", "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">cloudant:INTERNAL Cloudant internal error</xqdoc:error>", "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">cloudant:OPTIONS Malformed options object</xqdoc:error>" ] }, { "isDocumented" : true, "arity" : 2, "name" : "database-info", "qname" : "cloudant:database-info", "signature" : "($connection as anyURI, $database as string) as object()", "description" : " <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">Returns information about a database.</p>\n <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">This function is declared as deterministic and should be used whenever result\n caching is acceptable.</p>\n <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">For example,\n <pre>cloudant:database-info($connection, \"db\")</pre>.\n </p>\n <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">An object with the following format is returned:\n <pre>\n {\n   \"update_seq\": \"0-g1AAAADneJzLYWBg...\",\n   \"db_name\": \"db\",\n   \"purge_seq\": 0,\n   \"other\": {\n     \"data_size\": 0\n   },\n   \"doc_del_count\": 0,\n   \"doc_count\": 0,\n   \"disk_size\": 316,\n   \"disk_format_version\": 5,\n   \"compact_running\": false,\n   \"instance_start_time\": \"0\"\n }\n </pre>\n </p>\n <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">The fields have the following meaning:\n <ul>\n  <li>compact_running: set to true if the database compaction routine is\n  operating on this database.</li>\n  <li>db_name: the name of the database.</li>\n  <li>disk_format_version: the version of the physical format used for the data\n  when it is stored on disk.</li>\n  <li>disk_size: size in bytes of the data as stored on the disk. Views indexes\n  are not included in the calculation.</li>\n  <li>doc_count: a count of the documents in the specified database.</li>\n  <li>doc_del_count: number of deleted documents.</li>\n  <li>instance_start_time: always 0.</li>\n  <li>purge_seq: the number of purge operations on the database.</li>\n  <li>update_seq: the current number of updates to the database.</li>\n  <li>other: JSON object containing a data_size field.</li>\n </ul>\n </p>\n", "summary" : "<p>  Returns information about a database.</p>", "annotation_str" : "", "annotations" : [  ], "updating" : false, "parameters" : [ { "name" : "connection", "type" : "anyURI", "occurrence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> A connection identifier</div>" }, { "name" : "database", "type" : "string", "occurrence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> A database name</div>" } ], "returns" : { "type" : "object()", "description" : "An object describing the specified database" }, "errors" : [ "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">cloudant:AUTHORIZATION Authorization error</xqdoc:error>", "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">cloudant:HTTP An HTTP error occurred when issuing the request</xqdoc:error>", "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">cloudant:RESPONSE An error occurred parsing the server response</xqdoc:error>", "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">cloudant:CONNECTION The specified connection does not exist</xqdoc:error>", "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">cloudant:INTERNAL Cloudant internal error</xqdoc:error>" ] }, { "isDocumented" : true, "arity" : 3, "name" : "database-info", "qname" : "cloudant:database-info", "signature" : "($connection as anyURI, $database as string, $options as object()) as object()", "description" : " <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">Returns information about a database.</p>\n <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">This function is declared as deterministic and should be used whenever result\n caching is acceptable.</p>\n <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">This function allows to specify an additional options object.\n The following options are supported:\n <ul>\n   <li>database-owner: specifies the database owner (string, default: connection user).</li>\n </ul>\n </p>\n <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">For example,\n <pre>cloudant:database-info($connection, \"db\", {\"database-owner\": \"username\"})</pre>.\n </p>\n <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">An object with the following format is returned:\n <pre>\n {\n   \"update_seq\": \"0-g1AAAADneJzLYWBg...\",\n   \"db_name\": \"db\",\n   \"purge_seq\": 0,\n   \"other\": {\n     \"data_size\": 0\n   },\n   \"doc_del_count\": 0,\n   \"doc_count\": 0,\n   \"disk_size\": 316,\n   \"disk_format_version\": 5,\n   \"compact_running\": false,\n   \"instance_start_time\": \"0\"\n }\n </pre>\n </p>\n <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">The fields have the following meaning:\n <ul>\n  <li>compact_running: set to true if the database compaction routine is\n  operating on this database.</li>\n  <li>db_name: the name of the database.</li>\n  <li>disk_format_version: the version of the physical format used for the data\n  when it is stored on disk.</li>\n  <li>disk_size: size in bytes of the data as stored on the disk. Views indexes\n  are not included in the calculation.</li>\n  <li>doc_count: a count of the documents in the specified database.</li>\n  <li>doc_del_count: number of deleted documents.</li>\n  <li>instance_start_time: always 0.</li>\n  <li>purge_seq: the number of purge operations on the database.</li>\n  <li>update_seq: the current number of updates to the database.</li>\n  <li>other: JSON object containing a data_size field.</li>\n </ul>\n </p>\n", "summary" : "<p>  Returns information about a database.</p>", "annotation_str" : "", "annotations" : [  ], "updating" : false, "parameters" : [ { "name" : "connection", "type" : "anyURI", "occurrence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> A connection identifier</div>" }, { "name" : "database", "type" : "string", "occurrence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> a database name</div>" }, { "name" : "options", "type" : "object()", "occurrence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> An object specifying additional request options</div>" } ], "returns" : { "type" : "object()", "description" : "An object describing the specified database" }, "errors" : [ "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">cloudant:AUTHORIZATION Authorization error</xqdoc:error>", "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">cloudant:HTTP An HTTP error occurred when issuing the request</xqdoc:error>", "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">cloudant:RESPONSE An error occurred parsing the server response</xqdoc:error>", "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">cloudant:CONNECTION The specified connection does not exist</xqdoc:error>", "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">cloudant:INTERNAL Cloudant internal error</xqdoc:error>", "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">cloudant:OPTIONS Malformed options object</xqdoc:error>" ] }, { "isDocumented" : true, "arity" : 5, "name" : "delete-attachment", "qname" : "cloudant:delete-attachment", "signature" : "($connection as anyURI, $database as string, $document-id as string, $document-rev as string, $attachment-name as string) as object()", "description" : " <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">Deletes the specified attachment.</p>\n <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">The latest document revision must be specified.</p>\n <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">For example,\n <pre>cloudant:delete-attachment($connection, \"db\", \"FishStew\",\n   \"8-7c4740b4dcf26683e941d6641c00c39d\", \"AttachmentName\")</pre>.\n </p>\n <h4 xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">Deleting a design document attachment.</h4>\n <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">To delete a design document attachment the document id must\n start with <code>_design/</code>.</p>\n <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">For example,\n <pre>cloudant:delete-attachment($connection, \"db\", \"_design/DesDocId\",\n   \"8-7c4740b4dcf26683e941d6641c00c39d\",\n   \"AttachmentName\", \"text/plain\", \"AttachmentContent\")</pre>.\n </p>\n <h4 xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">Return value</h4>\n <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">The returned object reports the document id and its new\n revision, as follows:\n <pre>\n {\n   \"id\":\"FishStew\",\n   \"ok\":true,\n   \"rev\":\"9-247bb19a41bfd9bfdaf5ee6e2e05be74\"\n }\n </pre>\n </p>\n", "summary" : "<p>  Deletes the specified attachment.</p>", "annotation_str" : " %an:sequential", "annotations" : [ { "prefix" : "an", "ns" : "http://zorba.io/annotations", "name" : "sequential", "value" : "" } ], "updating" : false, "parameters" : [ { "name" : "connection", "type" : "anyURI", "occurrence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> A connection identifier</div>" }, { "name" : "database", "type" : "string", "occurrence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> A database name</div>" }, { "name" : "document-id", "type" : "string", "occurrence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> A document identifier</div>" }, { "name" : "document-rev", "type" : "string", "occurrence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> A document revision</div>" }, { "name" : "attachment-name", "type" : "string", "occurrence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> The name of the attachment</div>" } ], "returns" : { "type" : "object()", "description" : "An object containing the document id and its new revision" }, "errors" : [ "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">cloudant:AUTHORIZATION Authorization error</xqdoc:error>", "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">cloudant:DATABASE-NAME Invalid database name</xqdoc:error>", "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">cloudant:ATTACHMENT-NOT-EXISTS Attachment does not exists</xqdoc:error>", "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">cloudant:HTTP An HTTP error occurred when issuing the request</xqdoc:error>", "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">cloudant:RESPONSE An error occurred parsing the server response</xqdoc:error>", "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">cloudant:CONNECTION The specified connection does not exist</xqdoc:error>", "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">cloudant:ATTACHMENT-TYPE Attachment type must be string, base64Binary or hexBinary</xqdoc:error>", "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">cloudant:INTERNAL Cloudant internal error</xqdoc:error>" ] }, { "isDocumented" : true, "arity" : 6, "name" : "delete-attachment", "qname" : "cloudant:delete-attachment", "signature" : "($connection as anyURI, $database as string, $document-id as string, $document-rev as string, $attachment-name as string, $options as object()) as object()", "description" : " <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">Deletes the specified attachment.</p>\n <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">The latest document revision must be specified.</p>\n <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">This function allows to specify an additional options object.\n The following options are supported:\n <ul>\n   <li>database-owner: specifies the database owner (string, default: connection user).</li>\n </ul>\n </p>\n <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">For example,\n <pre>cloudant:delete-attachment($connection, \"db\", \"FishStew\",\n \"8-7c4740b4dcf26683e941d6641c00c39d\", \"AttachmentName\",\n {\"database-owner\": \"username\"})</pre>.\n </p>\n <h4 xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">Deleting a design document attachment.</h4>\n <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">To delete a design document attachment the document id must\n start with <code>_design/</code>.</p>\n <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">For example,\n <pre>cloudant:delete-attachment($connection, \"db\", \"_design/DesDocId\",\n   \"8-7c4740b4dcf26683e941d6641c00c39d\", \"AttachmentName\", \"text/plain\",\n   \"AttachmentContent\", {\"database-owner\": \"username\"})</pre>.\n </p>\n <h4 xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">Return value</h4>\n <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">The returned object reports the document id and its new\n revision, as follows:\n <pre>\n {\n   \"id\":\"FishStew\",\n   \"ok\":true,\n   \"rev\":\"9-247bb19a41bfd9bfdaf5ee6e2e05be74\"\n }\n </pre>\n </p>\n", "summary" : "<p>  Deletes the specified attachment.</p>", "annotation_str" : " %an:sequential", "annotations" : [ { "prefix" : "an", "ns" : "http://zorba.io/annotations", "name" : "sequential", "value" : "" } ], "updating" : false, "parameters" : [ { "name" : "connection", "type" : "anyURI", "occurrence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> A connection identifier</div>" }, { "name" : "database", "type" : "string", "occurrence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> A database name</div>" }, { "name" : "document-id", "type" : "string", "occurrence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> A document identifier</div>" }, { "name" : "document-rev", "type" : "string", "occurrence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> A document revision</div>" }, { "name" : "attachment-name", "type" : "string", "occurrence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> The name of the attachment</div>" }, { "name" : "options", "type" : "object()", "occurrence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> An object specifying additional request options</div>" } ], "returns" : { "type" : "object()", "description" : "An object containing the document id and its new revision" }, "errors" : [ "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">cloudant:AUTHORIZATION Authorization error</xqdoc:error>", "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">cloudant:DATABASE-NAME Invalid database name</xqdoc:error>", "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">cloudant:ATTACHMENT-NOT-EXISTS Attachment does not exists</xqdoc:error>", "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">cloudant:HTTP An HTTP error occurred when issuing the request</xqdoc:error>", "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">cloudant:RESPONSE An error occurred parsing the server response</xqdoc:error>", "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">cloudant:CONNECTION The specified connection does not exist</xqdoc:error>", "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">cloudant:ATTACHMENT-TYPE Attachment type must be string, base64Binary or hexBinary</xqdoc:error>", "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">cloudant:INTERNAL Cloudant internal error</xqdoc:error>", "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">cloudant:OPTIONS Malformed options object</xqdoc:error>" ] }, { "isDocumented" : true, "arity" : 2, "name" : "delete-database", "qname" : "cloudant:delete-database", "signature" : "($connection as anyURI, $database as string) as empty-sequence()", "description" : " <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">Deletes a database and all the documents and attachments contained in it.</p>\n <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">The database name must be composed of one or more of the following characters:\n <ul>\n  <li>Lowercase characters (a-z).</li>\n  <li>Digits (0-9).</li>\n  <li>Any of the characters: _,$,(,),+,- and /.</li>\n </ul>\n </p>\n <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">For example,\n <pre>cloudant:delete-database($connection, \"db\")</pre>.\n </p>\n", "summary" : "<p>  Deletes a database and all the documents and attachments contained in it.</p>", "annotation_str" : " %an:sequential", "annotations" : [ { "prefix" : "an", "ns" : "http://zorba.io/annotations", "name" : "sequential", "value" : "" } ], "updating" : false, "parameters" : [ { "name" : "connection", "type" : "anyURI", "occurrence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> A connection identifier</div>" }, { "name" : "database", "type" : "string", "occurrence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> A database name</div>" } ], "returns" : { "type" : "empty-sequence()", "description" : "Empty sequence" }, "errors" : [ "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">cloudant:AUTHORIZATION Authorization error</xqdoc:error>", "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">cloudant:DATABASE-NAME Invalid database name</xqdoc:error>", "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">cloudant:DATABASE-NOT-EXISTS Database does not exist</xqdoc:error>", "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">cloudant:HTTP An HTTP error occurred when issuing the request</xqdoc:error>", "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">cloudant:CONNECTION The specified connection does not exist</xqdoc:error>", "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">cloudant:INTERNAL Cloudant internal error</xqdoc:error>" ] }, { "isDocumented" : true, "arity" : 4, "name" : "delete-document", "qname" : "cloudant:delete-document", "signature" : "($connection as anyURI, $database as string, $document-id as string, $document-rev as string) as object()", "description" : " <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">Deletes the specified document from a database.</p>\n <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">The latest document revision must be specified.</p>\n <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">For example,\n <pre>\n cloudant:delete-document($connection, \"db\", \"DocID\", \"3-7c4740b4dcf26683e941d6641c00c39d\")\n </pre>.\n </p>\n <h4 xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">Deleting a design document</h4>\n <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">To delete a design document the document id must\n start with <code>_design/</code>.</p>\n <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">For example,\n <pre>\n cloudant:delete-document($connection, \"db\", \"_design/DesDocID\", \"3-7c4740b4dcf26683e941d6641c00c39d\")\n </pre>.\n </p>\n <h4 xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">Return value</h4>\n <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">The returned object reports the document id and its\n new revision, as follows:\n <pre>\n {\n   \"id\":\"DocID\",\n   \"ok\":true,\n   \"rev\":\"4-2719fd41187c60762ff584761b714cfb\"\n }\n </pre>\n </p>\n", "summary" : "<p>  Deletes the specified document from a database.</p>", "annotation_str" : " %an:sequential", "annotations" : [ { "prefix" : "an", "ns" : "http://zorba.io/annotations", "name" : "sequential", "value" : "" } ], "updating" : false, "parameters" : [ { "name" : "connection", "type" : "anyURI", "occurrence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> A connection identifier</div>" }, { "name" : "database", "type" : "string", "occurrence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> A database name</div>" }, { "name" : "document-id", "type" : "string", "occurrence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> A document identifier</div>" }, { "name" : "document-rev", "type" : "string", "occurrence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> A document revision</div>" } ], "returns" : { "type" : "object()", "description" : "An object which specifies the document id and its new revision" }, "errors" : [ "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">cloudant:AUTHORIZATION Authorization error</xqdoc:error>", "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">cloudant:DATABASE-NAME Invalid database name</xqdoc:error>", "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">cloudant:REVISION Specified revision is missing, invalid or not the latest.</xqdoc:error>", "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">cloudant:HTTP An HTTP error occurred when issuing the request</xqdoc:error>", "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">cloudant:RESPONSE An error occurred parsing the server response</xqdoc:error>", "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">cloudant:CONNECTION The specified connection does not exist</xqdoc:error>", "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">cloudant:INTERNAL Cloudant internal error</xqdoc:error>" ] }, { "isDocumented" : true, "arity" : 5, "name" : "delete-document", "qname" : "cloudant:delete-document", "signature" : "($connection as anyURI, $database as string, $document-id as string, $document-rev as string, $options as object()) as object()", "description" : " <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">Deletes the specified document from a database.</p>\n <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">The latest document revision must be specified.</p>\n <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">This function allows to specify an additional options object.\n The following options are supported:\n <ul>\n   <li>database-owner: specifies the database owner (string, default: connection user).</li>\n </ul>\n </p>\n <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">For example,\n <pre>\n cloudant:delete-document($connection, \"db\", \"DocID\", \"3-7c4740b4dcf26683e941d6641c00c39d\",\n   {\"database-owner\": \"username\"})\n </pre>.\n </p>\n <h4 xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">Deleting a design document</h4>\n <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">To delete a design document the document id must\n start with <code>_design/</code>.</p>\n <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">For example,\n <pre>\n cloudant:delete-document($connection, \"db\", \"_design/DesDocID\", \"3-7c4740b4dcf26683e941d6641c00c39d\",\n   {\"database-owner\": \"username\"})\n </pre>.\n </p>\n <h4 xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">Return value</h4>\n <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">The returned object reports the document id and its\n new revision, as follows:\n <pre>\n {\n   \"id\":\"DocID\",\n   \"ok\":true,\n   \"rev\":\"4-2719fd41187c60762ff584761b714cfb\"\n }\n </pre>\n </p>\n", "summary" : "<p>  Deletes the specified document from a database.</p>", "annotation_str" : " %an:sequential", "annotations" : [ { "prefix" : "an", "ns" : "http://zorba.io/annotations", "name" : "sequential", "value" : "" } ], "updating" : false, "parameters" : [ { "name" : "connection", "type" : "anyURI", "occurrence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> A connection identifier</div>" }, { "name" : "database", "type" : "string", "occurrence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> A database name</div>" }, { "name" : "document-id", "type" : "string", "occurrence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> A document identifier</div>" }, { "name" : "document-rev", "type" : "string", "occurrence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> A document revision</div>" }, { "name" : "options", "type" : "object()", "occurrence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> An object specifying additional request options</div>" } ], "returns" : { "type" : "object()", "description" : "An object which specifies the document id and its new revision" }, "errors" : [ "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">cloudant:AUTHORIZATION Authorization error</xqdoc:error>", "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">cloudant:DATABASE-NAME Invalid database name</xqdoc:error>", "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">cloudant:REVISION Specified revision is missing, invalid or not the latest.</xqdoc:error>", "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">cloudant:HTTP An HTTP error occurred when issuing the request</xqdoc:error>", "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">cloudant:RESPONSE An error occurred parsing the server response</xqdoc:error>", "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">cloudant:CONNECTION The specified connection does not exist</xqdoc:error>", "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">cloudant:INTERNAL Cloudant internal error</xqdoc:error>", "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">cloudant:OPTIONS Malformed options object</xqdoc:error>" ] }, { "isDocumented" : true, "arity" : 3, "name" : "document-info-nondeterministic", "qname" : "cloudant:document-info-nondeterministic", "signature" : "($connection as anyURI, $database as string, $document-id as string) as object()", "description" : " <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">Returns the latest revision and size for a given document.</p>\n <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">This function has the same semantics as\n <a href=\"#document-info-3\">document-info#3</a>,\n but is declared as being non deterministic and thus should only be used when\n result caching is not desired.</p>\n", "summary" : "<p>  Returns the latest revision and size for a given document.</p>", "annotation_str" : " %an:nondeterministic", "annotations" : [ { "prefix" : "an", "ns" : "http://zorba.io/annotations", "name" : "nondeterministic", "value" : "" } ], "updating" : false, "parameters" : [ { "name" : "connection", "type" : "anyURI", "occurrence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> A connection identifier</div>" }, { "name" : "database", "type" : "string", "occurrence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> A database name</div>" }, { "name" : "document-id", "type" : "string", "occurrence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> A document identifier</div>" } ], "returns" : { "type" : "object()", "description" : "An object specifying the document id, revision and size" }, "errors" : [ "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">cloudant:AUTHORIZATION Authorization error</xqdoc:error>", "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">cloudant:DOCUMENT The specified document or revision cannot be found</xqdoc:error>", "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">cloudant:HTTP An HTTP error occurred when issuing the request</xqdoc:error>", "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">cloudant:RESPONSE An error occurred parsing the server response</xqdoc:error>", "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">cloudant:CONNECTION The specified connection does not exist</xqdoc:error>", "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">cloudant:INTERNAL Cloudant internal error</xqdoc:error>" ] }, { "isDocumented" : true, "arity" : 4, "name" : "document-info-nondeterministic", "qname" : "cloudant:document-info-nondeterministic", "signature" : "($connection as anyURI, $database as string, $document-id as string, $options as object()) as object()", "description" : " <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">Returns the latest revision and size for a given document.</p>\n <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">This function has the same semantics as\n <a href=\"#document-info-4\">document-info#4</a>,\n but is declared as being non deterministic and thus should only be used when\n result caching is not desired.</p>\n", "summary" : "<p>  Returns the latest revision and size for a given document.</p>", "annotation_str" : " %an:nondeterministic", "annotations" : [ { "prefix" : "an", "ns" : "http://zorba.io/annotations", "name" : "nondeterministic", "value" : "" } ], "updating" : false, "parameters" : [ { "name" : "connection", "type" : "anyURI", "occurrence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> A connection identifier</div>" }, { "name" : "database", "type" : "string", "occurrence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> A database name</div>" }, { "name" : "document-id", "type" : "string", "occurrence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> A document identifier</div>" }, { "name" : "options", "type" : "object()", "occurrence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> An object specifying additional request options</div>" } ], "returns" : { "type" : "object()", "description" : "An object specifying the document id, revision and size" }, "errors" : [ "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">cloudant:AUTHORIZATION Authorization error</xqdoc:error>", "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">cloudant:DOCUMENT The specified document or revision cannot be found</xqdoc:error>", "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">cloudant:HTTP An HTTP error occurred when issuing the request</xqdoc:error>", "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">cloudant:RESPONSE An error occurred parsing the server response</xqdoc:error>", "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">cloudant:CONNECTION The specified connection does not exist</xqdoc:error>", "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">cloudant:INTERNAL Cloudant internal error</xqdoc:error>", "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">cloudant:OPTIONS Malformed options object</xqdoc:error>" ] }, { "isDocumented" : true, "arity" : 3, "name" : "document-info", "qname" : "cloudant:document-info", "signature" : "($connection as anyURI, $database as string, $document-id as string) as object()", "description" : " <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">Returns the latest revision and size for a given document.</p>\n <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">This function is declared as deterministic and should be used whenever result\n caching is acceptable.</p>\n <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">For example,\n <pre>cloudant:document-info($connection, \"db\", \"DocID\")</pre>.\n </p>\n <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">The format of the returned object is the following and contains\n the document id, latest revision and size.\n <pre>\n {\n   \"ok\": true,\n   \"id\": \"DocID\",\n   \"rev\": \"1-764b9b11845fd0b73cfa0e61acc74ecf\",\n   \"size\": 500\n }\n </pre>\n </p>\n <h4 xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">Returning the latest revision and size for a given design document</h4>\n <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">To return the latest revision and size of a design document the document\n id must start with\n <code>_design/</code>.</p>\n <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">For example,\n <pre>cloudant:document-info($connection, \"db\", \"_design/DesDocID\")</pre>.\n </p>\n", "summary" : "<p>  Returns the latest revision and size for a given document.</p>", "annotation_str" : "", "annotations" : [  ], "updating" : false, "parameters" : [ { "name" : "connection", "type" : "anyURI", "occurrence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> A connection identifier</div>" }, { "name" : "database", "type" : "string", "occurrence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> A database name</div>" }, { "name" : "document-id", "type" : "string", "occurrence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> A document identifier</div>" } ], "returns" : { "type" : "object()", "description" : "An object specifying the document id, revision and size" }, "errors" : [ "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">cloudant:AUTHORIZATION Authorization error</xqdoc:error>", "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">cloudant:DOCUMENT The specified document or revision cannot be found</xqdoc:error>", "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">cloudant:HTTP An HTTP error occurred when issuing the request</xqdoc:error>", "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">cloudant:RESPONSE An error occurred parsing the server response</xqdoc:error>", "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">cloudant:CONNECTION The specified connection does not exist</xqdoc:error>", "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">cloudant:INTERNAL Cloudant internal error</xqdoc:error>" ] }, { "isDocumented" : true, "arity" : 4, "name" : "document-info", "qname" : "cloudant:document-info", "signature" : "($connection as anyURI, $database as string, $document-id as string, $options as object()) as object()", "description" : " <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">Returns the latest revision and size for a given document.</p>\n <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">This function is declared as deterministic and should be used whenever result\n caching is acceptable.</p>\n <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">This function allows to specify an additional options object.\n The following options are supported:\n <ul>\n   <li>database-owner: specifies the database owner (string, default: connection user).</li>\n </ul>\n </p>\n <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">For example,\n <pre>\n cloudant:document-info($connection, \"db\", \"DocID\", {\"database-owner\": \"username\"})\n </pre>.\n </p>\n <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">The format of the returned object is the following and contains\n the document id, latest revision and size.\n <pre>\n {\n   \"ok\": true,\n   \"id\": \"DocID\",\n   \"rev\": \"1-764b9b11845fd0b73cfa0e61acc74ecf\",\n   \"size\": 500\n }\n </pre>\n </p>\n <h4 xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">Returning the latest revision and size for a given design document</h4>\n <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">To return the latest revision and size of a design document the document\n id must start with <code>_design/</code>.</p>\n <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">For example,\n <pre>\n cloudant:document-info($connection, \"db\", \"_design/DesDocID\", {\"database-owner\": \"username\"})\n </pre>.\n </p>\n", "summary" : "<p>  Returns the latest revision and size for a given document.</p>", "annotation_str" : "", "annotations" : [  ], "updating" : false, "parameters" : [ { "name" : "connection", "type" : "anyURI", "occurrence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> A connection identifier</div>" }, { "name" : "database", "type" : "string", "occurrence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> A database name</div>" }, { "name" : "document-id", "type" : "string", "occurrence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> A document identifier</div>" }, { "name" : "options", "type" : "object()", "occurrence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> An object specifying additional request options</div>" } ], "returns" : { "type" : "object()", "description" : "An object specifying the document id, revision and size" }, "errors" : [ "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">cloudant:AUTHORIZATION Authorization error</xqdoc:error>", "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">cloudant:DOCUMENT The specified document or revision cannot be found</xqdoc:error>", "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">cloudant:HTTP An HTTP error occurred when issuing the request</xqdoc:error>", "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">cloudant:RESPONSE An error occurred parsing the server response</xqdoc:error>", "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">cloudant:CONNECTION The specified connection does not exist</xqdoc:error>", "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">cloudant:INTERNAL Cloudant internal error</xqdoc:error>", "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">cloudant:OPTIONS Malformed options object</xqdoc:error>" ] }, { "isDocumented" : true, "arity" : 3, "name" : "document-nondeterministic", "qname" : "cloudant:document-nondeterministic", "signature" : "($connection as anyURI, $database as string, $document-id as string) as object()", "description" : " <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">Retrieves a document from the specified database.</p>\n <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">This function has the same semantics as <a href=\"#document-3\">document#3</a>,\n but is declared as being non deterministic and thus should only be used when\n result caching is not desired.</p>\n", "summary" : "<p>  Retrieves a document from the specified database.</p>", "annotation_str" : " %an:nondeterministic", "annotations" : [ { "prefix" : "an", "ns" : "http://zorba.io/annotations", "name" : "nondeterministic", "value" : "" } ], "updating" : false, "parameters" : [ { "name" : "connection", "type" : "anyURI", "occurrence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> A connection identifier</div>" }, { "name" : "database", "type" : "string", "occurrence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> A database name</div>" }, { "name" : "document-id", "type" : "string", "occurrence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> A document identifier</div>" } ], "returns" : { "type" : "object()", "description" : "The specified document" }, "errors" : [ "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">cloudant:AUTHORIZATION Authorization error</xqdoc:error>", "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">cloudant:DATABASE-NAME Invalid database name</xqdoc:error>", "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">cloudant:DOCUMENT The specified document or revision cannot be found</xqdoc:error>", "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">cloudant:HTTP An HTTP error occurred when issuing the request</xqdoc:error>", "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">cloudant:RESPONSE An error occurred parsing the server response</xqdoc:error>", "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">cloudant:CONNECTION The specified connection does not exist</xqdoc:error>", "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">cloudant:INTERNAL Cloudant internal error</xqdoc:error>" ] }, { "isDocumented" : true, "arity" : 4, "name" : "document-nondeterministic", "qname" : "cloudant:document-nondeterministic", "signature" : "($connection as anyURI, $database as string, $document-id as string, $options as object()) as object()", "description" : " <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">Retrieves a document from the specified database</p>\n <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">This function has the same semantics as <a href=\"#document-4\">document#4</a>,\n but is declared as being non deterministic and thus should only be used when\n result caching is not desired.</p>\n", "summary" : "<p>  Retrieves a document from the specified database \n  This function has the same semantics as  document#4 ,\n but is declared as being non deterministic and thus should only be used when\n result caching is not desired.</p>", "annotation_str" : " %an:nondeterministic", "annotations" : [ { "prefix" : "an", "ns" : "http://zorba.io/annotations", "name" : "nondeterministic", "value" : "" } ], "updating" : false, "parameters" : [ { "name" : "connection", "type" : "anyURI", "occurrence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> A connection identifier</div>" }, { "name" : "database", "type" : "string", "occurrence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> A database name</div>" }, { "name" : "document-id", "type" : "string", "occurrence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> A document identifier</div>" }, { "name" : "options", "type" : "object()", "occurrence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> An object specifying additional request options</div>" } ], "returns" : { "type" : "object()", "description" : "The specified document" }, "errors" : [ "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">cloudant:AUTHORIZATION Authorization error</xqdoc:error>", "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">cloudant:DATABASE-NAME Invalid database name</xqdoc:error>", "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">cloudant:DOCUMENT The specified document or revision cannot be found</xqdoc:error>", "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">cloudant:HTTP An HTTP error occurred when issuing the request</xqdoc:error>", "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">cloudant:RESPONSE An error occurred parsing the server response</xqdoc:error>", "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">cloudant:CONNECTION The specified connection does not exist</xqdoc:error>", "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">cloudant:INTERNAL Cloudant internal error</xqdoc:error>", "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">cloudant:OPTIONS Malformed options object</xqdoc:error>" ] }, { "isDocumented" : true, "arity" : 3, "name" : "document", "qname" : "cloudant:document", "signature" : "($connection as anyURI, $database as string, $document-id as string) as object()", "description" : " <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">Retrieves a document from the specified database.</p>\n <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">This function is declared as deterministic and should be used whenever result\n caching is acceptable.</p>\n <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">The latest revision of the document will be returned.</p>\n <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">If the document includes attachments, then the\n returned structure will contain a summary of the\n attachments associated with the document, but not the\n attachment data itself.</p>\n <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">For example,\n <pre>cloudant:document($connection, \"db\", \"DocID\")</pre>.\n </p>\n <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">The returned JSON object will contain the document\n and has the following format:\n <pre>\n {\n   \"_id\": \"DocID\",\n   \"_rev\": \"2-f29c836d0bedc4b4b95cfaa6d99e95df\",\n   \"name\": \"Anna\",\n   \"age\": 89,\n   \"gender\": \"female\",\n   \"_attachments\": {\n     \"my attachment\": {\n       \"content_type\": \"application/json; charset=UTF-8\",\n       \"revpos\": 2,\n       \"digest\": \"md5-37IZysiyWLRWx31J/1WQHw==\",\n       \"length\": 12,\n       \"stub\": true\n       }\n     }\n   }\n </pre>\n </p>\n <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">\n The meaning of the fields in the returned object is the following:\n <ul>\n   <li>_id: document ID</li>\n   <li>_rev: document revision</li>\n   <li>attachments: document attachments (optional), each field denotes the name\n       of a different attachment\n     <ul>\n       <li>content_type: attachment MIME Content type string</li>\n       <li>length: attachment length in bytes</li>\n       <li>revpos: revision where this attachment exists</li>\n       <li>digest: MD5 checksum of the attachment</li>\n       <li>stub: indicates whether the attachment is a stub</li>\n    </ul>\n  </li>\n </ul>\n </p>\n <h4 xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">Retrieving a design document from the specified database</h4>\n <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">To retrieve a design document the document id must start with\n <code>_design/</code>.</p>\n <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">For example,\n <pre>cloudant:document($connection, \"db\", \"_design/DesDocID\")</pre>.\n </p>\n <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">A JSON object with the following format is returned:\n <pre>\n {\n  \"_id\": \"_design/DesDocID\",\n   \"views\": {\n     \"view1\": {\n       \"map\":\"function(doc){emit(doc.field, 1)}\",\n       \"reduce\": \"function(key, value, rereduce){return sum(values)}\"\n     }\n   },\n   \"indexes\": {\n     \"mysearch\" : {\n       \"analyzer\": {\"name\": \"portuguese\", \"stopwords\":[\"foo\", \"bar, \"baz\"]},\n       \"index\": \"function(doc){ ... }\"\n     },\n   }\n }\n </pre>\n </p>\n <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">\n The meaning of the fields in the returned object is the following:\n <ul>\n   <li>_id: document ID</li>\n   <li>_rev: document revision</li>\n   <li>views: object defining the views. Each field defines a different view.\n       The field name is the name of the view and has the following content:\n     <ul>\n       <li>map: view map function</li>\n       <li>reduce: view reduce function (optional)</li>\n     </ul>\n   </li>\n   <li>indexes: object defining the view indexes. Each field defines a different index.\n       The field name is the name of the index and has the following content:\n     <ul>\n       <li>analyzer: Name of the analyzer to be used or an object with the\n       following fields:\n         <ul>\n           <li>name: Name of the analyzer</li>\n           <li>stopwords: An array of stop words. Stop words are words that\n           should not be indexed.</li>\n         </ul>\n       </li>\n       <li>index: Function that handles the indexing</li>\n     </ul>\n   </li>\n </ul>\n </p>\n", "summary" : "<p>  Retrieves a document from the specified database.</p>", "annotation_str" : "", "annotations" : [  ], "updating" : false, "parameters" : [ { "name" : "connection", "type" : "anyURI", "occurrence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> A connection identifier</div>" }, { "name" : "database", "type" : "string", "occurrence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> A database name</div>" }, { "name" : "document-id", "type" : "string", "occurrence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> A document identifier</div>" } ], "returns" : { "type" : "object()", "description" : "The specified document" }, "errors" : [ "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">cloudant:AUTHORIZATION Authorization error</xqdoc:error>", "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">cloudant:DATABASE-NAME Invalid database name</xqdoc:error>", "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">cloudant:DOCUMENT The specified document or revision cannot be found</xqdoc:error>", "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">cloudant:HTTP An HTTP error occurred when issuing the request</xqdoc:error>", "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">cloudant:RESPONSE An error occurred parsing the server response</xqdoc:error>", "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">cloudant:CONNECTION The specified connection does not exist</xqdoc:error>", "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">cloudant:INTERNAL Cloudant internal error</xqdoc:error>" ] }, { "isDocumented" : true, "arity" : 4, "name" : "document", "qname" : "cloudant:document", "signature" : "($connection as anyURI, $database as string, $document-id as string, $options as object()) as object()", "description" : " <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">Retrieves a document from the specified database</p>\n <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">This function is declared as deterministic and should be used whenever result\n caching is acceptable.</p>\n <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">Unless you request a specific revision, the latest\n revision of the document will always be returned.</p>\n <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">This function allows to specify an additional options object.\n The following options are supported:\n <ul>\n   <li>conflict: returns the conflict tree for the document (boolean)</li>\n   <li>rev: specifies the revision to return (string)</li>\n   <li>revs: return a list of the revisions for the document (boolean)</li>\n   <li>revs_info: return a list of detailed revision information for the document\n   (boolean, allowed value: true)</li>\n   <li>database-owner: specifies the database owner (string, default: connection user).</li>\n </ul>\n </p>\n <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">If the document includes attachments, then the\n returned structure will contain a summary of the\n attachments associated with the document, but not the\n attachment data itself.</p>\n <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">For example,\n <pre>\n cloudant:document($connection, \"db\", \"DocID\", {\"database-owner\": \"username\"})\n </pre>.\n </p>\n <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">The returned JSON object will contain the document\n and has the following format:\n <pre>\n {\n   \"_id\": \"DocID\",\n   \"_rev\": \"2-f29c836d0bedc4b4b95cfaa6d99e95df\",\n   \"name\": \"Anna\",\n   \"age\": 89,\n   \"gender\": \"female\",\n   \"_attachments\": {\n     \"my attachment\": {\n       \"content_type\": \"application/json; charset=UTF-8\",\n       \"revpos\": 2,\n       \"digest\": \"md5-37IZysiyWLRWx31J/1WQHw==\",\n       \"length\": 12,\n       \"stub\": true\n       }\n     }\n   }\n </pre>\n </p>\n <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">\n The meaning of the fields in the returned object is the following:\n <ul>\n   <li>_id: document ID</li>\n   <li>_rev: document revision</li>\n   <li>attachments: document attachments (optional), each field denotes the name\n       of a different attachment:\n   <ul>\n     <li>content_type: attachment MIME Content type string</li>\n     <li>length: attachment length in bytes</li>\n     <li>revpos: revision where this attachment exists</li>\n     <li>digest: MD5 checksum of the attachment</li>\n     <li>stub: indicates whether the attachment is a stub</li>\n  </ul>\n  </li>\n </ul>\n </p>\n <h4 xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">Retrieving a design document from the specified database</h4>\n <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">To retrieve a design document the document id must start with\n <code>_design/</code>.</p>\n <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">For example,\n <pre>cloudant:document($connection, \"db\", \"_design/DesDocID\", {\"database-owner\": \"username\"})</pre>.\n </p>\n <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">A JSON object with the following format is returned:\n <pre>\n {\n  \"_id\": \"_design/DesDocID\",\n  \"_rev\": \"2-f29c836d0bedc4b4b95cfaa6d99e95df\",\n   \"views\": {\n     \"view1\": {\n       \"map\":\"function(doc){emit(doc.field, 1)}\",\n       \"reduce\": \"function(key, value, rereduce){return sum(values)}\"\n     }\n   },\n   \"indexes\": {\n     \"mysearch\" : {\n       \"analyzer\": {\"name\": \"portuguese\", \"stopwords\":[\"foo\", \"bar, \"baz\"]},\n       \"index\": \"function(doc){ ... }\"\n     },\n   }\n }\n </pre>\n </p>\n <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">\n The meaning of the fields in the returned object is the following:\n <ul>\n   <li>_id: document ID</li>\n   <li>_rev: document revision</li>\n   <li>views: object defining the views. Each field defines a different view.\n       The field name is the name of the view and has the following content:\n     <ul>\n       <li>map: view map function</li>\n       <li>reduce: view reduce function (optional)</li>\n     </ul>\n   </li>\n   <li>indexes: object defining the view indexes. Each field defines a different index.\n       The field name is the name of the index and has the following content:\n     <ul>\n       <li>analyzer: Name of the analyzer to be used or an object with the\n       following fields:\n         <ul>\n           <li>name: Name of the analyzer</li>\n           <li>stopwords: An array of stop words. Stop words are words that\n           should not be indexed.</li>\n         </ul>\n       </li>\n       <li>index: Function that handles the indexing</li>\n     </ul>\n   </li>\n </ul>\n </p>\n <h4 xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">Getting a List of Revisions</h4>\n <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">You can obtain a list of the revisions for a given document\n by the revs option.</p>\n <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">For example,\n <pre>cloudant:document($connection, \"db\", \"DocID\", {\"revs\": true})</pre>.\n </p>\n <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">The returned JSON object includes the original document and\n a <code>_revisions</code> structure that includes the revision\n information:\n <pre>\n {\n   \"servings\":4,\n   \"subtitle\":\"Delicious with a green salad\",\n   \"_id\":\"FishStew\",\n   \"title\":\"Irish Fish Stew\",\n   \"_revisions\":\n   {\n     \"ids\": [\n       \"a1a9b39ee3cc39181b796a69cb48521c\",\n       \"7c4740b4dcf26683e941d6641c00c39d\",\n       \"9c65296036141e575d32ba9c034dd3ee\"\n      ],\n     \"start\":3\n  },\n  \"_rev\":\"3-a1a9b39ee3cc39181b796a69cb48521c\"\n }\n </pre>\n </p>\n <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">The meaning of the additional fields is the following:\n <ul>\n   <li>_revisions: document revisions</li>\n   <li>_ids: array of valid revision IDs, in reverse order (latest first)</li>\n   <li>start: prefix number for the latest revision</li>\n </ul>\n </p>\n <h4 xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">Obtaining an Extended Revision History</h4>\n <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">You can get additional information about the revisions for a given document\n with the <code>revs_info</code> option.</p>\n <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">For example,\n <pre>cloudant:document($connection, \"db\", \"DocID\", {\"revs_info\": true})</pre>.\n </p>\n <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">This returns extended revision information, including the availability and status\n of each revision:\n <pre>\n {\n   \"servings\":4,\n   \"subtitle\":\"Delicious with a green salad\",\n   \"_id\":\"FishStew\",\n   \"_revs_info\":[\n     {\n       \"status\":\"available\",\n       \"rev\":\"3-a1a9b39ee3cc39181b796a69cb48521c\"\n     },\n     {\n       \"status\":\"available\",\n       \"rev\":\"2-7c4740b4dcf26683e941d6641c00c39d\"\n     },\n     {\n       \"status\":\"available\",\n       \"rev\":\"1-9c65296036141e575d32ba9c034dd3ee\"\n     }\n   ],\n   \"title\":\"Irish Fish Stew\",\n   \"_rev\":\"3-a1a9b39ee3cc39181b796a69cb48521c\"\n }\n </pre>\n </p>\n <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">The meaning of the additional fields is the following:\n <ul>\n   <li>_revs_info: document extended revision info</li>\n   <li>rev: revision ID</li>\n   <li>status: revision status</li>\n </ul>\n </p>\n", "summary" : "<p>  Retrieves a document from the specified database \n  This function is declared as deterministic and should be used whenever result\n caching is acceptable.</p>", "annotation_str" : "", "annotations" : [  ], "updating" : false, "parameters" : [ { "name" : "connection", "type" : "anyURI", "occurrence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> A connection identifier</div>" }, { "name" : "database", "type" : "string", "occurrence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> A database name</div>" }, { "name" : "document-id", "type" : "string", "occurrence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> A document identifier</div>" }, { "name" : "options", "type" : "object()", "occurrence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> An object specifying additional request options</div>" } ], "returns" : { "type" : "object()", "description" : "The specified document" }, "errors" : [ "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">cloudant:AUTHORIZATION Authorization error</xqdoc:error>", "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">cloudant:DATABASE-NAME Invalid database name</xqdoc:error>", "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">cloudant:DOCUMENT The specified document or revision cannot be found</xqdoc:error>", "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">cloudant:HTTP An HTTP error occurred when issuing the request</xqdoc:error>", "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">cloudant:RESPONSE An error occurred parsing the server response</xqdoc:error>", "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">cloudant:CONNECTION The specified connection does not exist</xqdoc:error>", "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">cloudant:INTERNAL Cloudant internal error</xqdoc:error>", "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">cloudant:OPTIONS Malformed options object</xqdoc:error>" ] }, { "isDocumented" : true, "arity" : 1, "name" : "list-databases-nondeterministic", "qname" : "cloudant:list-databases-nondeterministic", "signature" : "($connection as anyURI) as array()", "description" : " <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">Returns an array containing the names of all the user's databases.</p>\n <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">This function has the same semantics as\n <a href=\"#list-databases-1\">list-databases#1</a>,\n but is declared as being non deterministic and thus should only be used when\n result caching is not desired.</p>\n", "summary" : "<p>  Returns an array containing the names of all the user's databases.</p>", "annotation_str" : " %an:nondeterministic", "annotations" : [ { "prefix" : "an", "ns" : "http://zorba.io/annotations", "name" : "nondeterministic", "value" : "" } ], "updating" : false, "parameters" : [ { "name" : "connection", "type" : "anyURI", "occurrence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> A connection identifier</div>" } ], "returns" : { "type" : "array()", "description" : "An array of all the database names" }, "errors" : [ "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">cloudant:AUTHORIZATION Authorization error</xqdoc:error>", "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">cloudant:HTTP An HTTP error occurred when issuing the request</xqdoc:error>", "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">cloudant:RESPONSE An error occurred parsing the server response</xqdoc:error>", "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">cloudant:CONNECTION The specified connection does not exist</xqdoc:error>", "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">cloudant:INTERNAL Cloudant internal error</xqdoc:error>" ] }, { "isDocumented" : true, "arity" : 2, "name" : "list-databases-nondeterministic", "qname" : "cloudant:list-databases-nondeterministic", "signature" : "($connection as anyURI, $options as object()) as array()", "description" : " <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">Returns an array containing the names of all the user's databases.</p>\n <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">This function has the same semantics as\n <a href=\"#list-databases-2\">list-databases#2</a>,\n but is declared as being non deterministic and thus should only be used when\n result caching is not desired.</p>\n", "summary" : "<p>  Returns an array containing the names of all the user's databases.</p>", "annotation_str" : " %an:nondeterministic", "annotations" : [ { "prefix" : "an", "ns" : "http://zorba.io/annotations", "name" : "nondeterministic", "value" : "" } ], "updating" : false, "parameters" : [ { "name" : "connection", "type" : "anyURI", "occurrence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> A connection identifier</div>" }, { "name" : "options", "type" : "object()", "occurrence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> An object specifying additional request options</div>" } ], "returns" : { "type" : "array()", "description" : "An array of all the databases names" }, "errors" : [ "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">cloudant:AUTHORIZATION Authorization error</xqdoc:error>", "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">cloudant:HTTP An HTTP error occurred when issuing the request</xqdoc:error>", "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">cloudant:RESPONSE An error occurred parsing the server response</xqdoc:error>", "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">cloudant:CONNECTION The specified connection does not exist</xqdoc:error>", "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">cloudant:INTERNAL Cloudant internal error</xqdoc:error>", "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">cloudant:OPTIONS Malformed options object</xqdoc:error>" ] }, { "isDocumented" : true, "arity" : 1, "name" : "list-databases", "qname" : "cloudant:list-databases", "signature" : "($connection as anyURI) as array()", "description" : " <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">Returns an array containing the names of all the user's databases.</p>\n <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">This function is declared as deterministic and should be used whenever result\n caching is acceptable.</p>\n <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">For example,\n <pre>cloudant:list-databases($connection)</pre>.\n </p>\n", "summary" : "<p>  Returns an array containing the names of all the user's databases.</p>", "annotation_str" : "", "annotations" : [  ], "updating" : false, "parameters" : [ { "name" : "connection", "type" : "anyURI", "occurrence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> A connection identifier</div>" } ], "returns" : { "type" : "array()", "description" : "An array of all the database names" }, "errors" : [ "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">cloudant:AUTHORIZATION Authorization error</xqdoc:error>", "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">cloudant:HTTP An HTTP error occurred when issuing the request</xqdoc:error>", "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">cloudant:RESPONSE An error occurred parsing the server response</xqdoc:error>", "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">cloudant:CONNECTION The specified connection does not exist</xqdoc:error>", "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">cloudant:INTERNAL Cloudant internal error</xqdoc:error>" ] }, { "isDocumented" : true, "arity" : 2, "name" : "list-databases", "qname" : "cloudant:list-databases", "signature" : "($connection as anyURI, $options as object()) as array()", "description" : " <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">Returns an array containing the names of all the user's databases.</p>\n <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">This function is declared as deterministic and should be used whenever result\n caching is acceptable.</p>\n <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">This function allows to specify an additional options object.\n The following options are supported:\n <ul>\n   <li>database-owner: specifies the database owner (string, default: connection user).</li>\n </ul>\n </p>\n <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">For example,\n <pre>cloudant:list-databases($connection, {\"database-owner\" : \"username\"})</pre>.\n </p>\n", "summary" : "<p>  Returns an array containing the names of all the user's databases.</p>", "annotation_str" : "", "annotations" : [  ], "updating" : false, "parameters" : [ { "name" : "connection", "type" : "anyURI", "occurrence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> A connection identifier</div>" }, { "name" : "options", "type" : "object()", "occurrence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> An object specifying additional request options</div>" } ], "returns" : { "type" : "array()", "description" : "An array of all the databases names" }, "errors" : [ "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">cloudant:AUTHORIZATION Authorization error</xqdoc:error>", "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">cloudant:HTTP An HTTP error occurred when issuing the request</xqdoc:error>", "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">cloudant:RESPONSE An error occurred parsing the server response</xqdoc:error>", "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">cloudant:CONNECTION The specified connection does not exist</xqdoc:error>", "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">cloudant:INTERNAL Cloudant internal error</xqdoc:error>", "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">cloudant:OPTIONS Malformed options object</xqdoc:error>" ] }, { "isDocumented" : true, "arity" : 5, "name" : "lucene-query-nondeterministic", "qname" : "cloudant:lucene-query-nondeterministic", "signature" : "($connection as anyURI, $database as string, $design-document as string, $index as string, $query as string) as object()", "description" : " <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">Executes a Lucene query against a view and returns the query result.</p>\n <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">This function has the same semantics as\n <a href=\"#lucene-query-5\">lucene-query#5</a>,\n but is declared as being non deterministic and thus should only be used when\n result caching is not desired.</p>\n", "summary" : "<p>  Executes a Lucene query against a view and returns the query result.</p>", "annotation_str" : " %an:nondeterministic", "annotations" : [ { "prefix" : "an", "ns" : "http://zorba.io/annotations", "name" : "nondeterministic", "value" : "" } ], "updating" : false, "parameters" : [ { "name" : "connection", "type" : "anyURI", "occurrence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> A connection identifier</div>" }, { "name" : "database", "type" : "string", "occurrence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> A database name</div>" }, { "name" : "design-document", "type" : "string", "occurrence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> A design document name</div>" }, { "name" : "index", "type" : "string", "occurrence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> An index name</div>" }, { "name" : "query", "type" : "string", "occurrence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> A Lucene query</div>" } ], "returns" : { "type" : "object()", "description" : "The Lucene query results" }, "errors" : [ "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">cloudant:AUTHORIZATION Authorization error</xqdoc:error>", "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">cloudant:HTTP An HTTP error occurred when issuing the request</xqdoc:error>", "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">cloudant:RESPONSE An error occurred parsing the server response</xqdoc:error>", "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">cloudant:CONNECTION The specified connection does not exist</xqdoc:error>", "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">cloudant:INTERNAL Cloudant internal error</xqdoc:error>" ] }, { "isDocumented" : true, "arity" : 6, "name" : "lucene-query-nondeterministic", "qname" : "cloudant:lucene-query-nondeterministic", "signature" : "($connection as anyURI, $database as string, $design-document as string, $index as string, $query as string, $options as object()) as object()", "description" : " <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">Executes a Lucene query against a view and returns the query result.</p>\n <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">This function has the same semantics as <a href=\"#lucene-query-6\">lucene-query#6</a>,\n but is declared as being non deterministic and thus should only be used when\n result caching is not desired.</p>\n", "summary" : "<p>  Executes a Lucene query against a view and returns the query result.</p>", "annotation_str" : " %an:nondeterministic", "annotations" : [ { "prefix" : "an", "ns" : "http://zorba.io/annotations", "name" : "nondeterministic", "value" : "" } ], "updating" : false, "parameters" : [ { "name" : "connection", "type" : "anyURI", "occurrence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> A connection identifier</div>" }, { "name" : "database", "type" : "string", "occurrence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> A database name</div>" }, { "name" : "design-document", "type" : "string", "occurrence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> A design document name</div>" }, { "name" : "index", "type" : "string", "occurrence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> An index name</div>" }, { "name" : "query", "type" : "string", "occurrence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> A Lucene query</div>" }, { "name" : "options", "type" : "object()", "occurrence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> An object specifying additional request options</div>" } ], "returns" : { "type" : "object()", "description" : "The Lucene query results" }, "errors" : [ "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">cloudant:AUTHORIZATION Authorization error</xqdoc:error>", "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">cloudant:HTTP An HTTP error occurred when issuing the request</xqdoc:error>", "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">cloudant:RESPONSE An error occurred parsing the server response</xqdoc:error>", "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">cloudant:CONNECTION The specified connection does not exist</xqdoc:error>", "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">cloudant:INTERNAL Cloudant internal error</xqdoc:error>", "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">cloudant:OPTIONS Malformed options object</xqdoc:error>" ] }, { "isDocumented" : true, "arity" : 5, "name" : "lucene-query", "qname" : "cloudant:lucene-query", "signature" : "($connection as anyURI, $database as string, $design-document as string, $index as string, $query as string) as object()", "description" : " <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">Executes a Lucene query against a view and returns the query result.</p>\n <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">This function is declared as deterministic and should be used whenever result\n caching is acceptable.</p>\n <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">This method searches for documents whose index fields match the Lucene query.\n Which fields of a document are indexed and how is determined by the index functions\n in the design document.</p>\n <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">The information is returned as a JSON structure containing meta information\n about the return structure, and the list of documents each with its ID, revision\n and key. The key is generated from the document ID.</p>\n <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">For example,\n <pre>cloudant:lucene-query($connection, \"db\", \"designdoc\", \"view\", \"a*\")</pre>.\n </p>\n <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">An object with the following format is returned:\n <pre>\n {\n   \"total_rows\": 3,\n   \"bookmark\": \"g1AAAACWeJzLYWBgYMpgTmFQSElKzi9KdUhJMtbLTS3KLElMT9VLzskvTUnMK9HLSy3JAalMcgCSSfX____PAvPdQHwQSGTIIt6UPBaQlgNA6j_CJPsPcJOyANNEKzY\",\n   \"rows\":\n   [\n     {\n       \"id\": \"dd828eb4-c3f1-470f-aeff-c375ef70e4ad\",\n       \"order\": [0.0, 1],\n       \"fields\":\n       {\n         \"default\": \"aa\",\n         \"foo\": 0.0\n       }\n     },\n     {\n       \"id\": \"ea522cf1-eb8e-4477-aa92-d1fa459bb216\",\n       \"order\": [1.0, 0],\n       \"fields\":\n       {\n         \"default\": \"ab\",\n         \"foo\": 1.0\n       }\n     },\n     {\n       \"id\": \"c838baed-d573-43ea-9c34-621cf0f13301\",\n       \"order\": [2.0, 0],\n       \"fields\":\n       {\n         \"default\": \"ac\",\n         \"foo\": 2.0\n       }\n     }\n   ]\n }\n </pre>\n </p>\n <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">The fields have the following meaning:\n <ul>\n  <li>total_rows: number of results returned.</li>\n  <li>bookmark: string to be submitted in the next query to page through results.\n      If this response contained no results, the bookmark will be the same as the\n      one used to obtain this response.</li>\n  <li>rows: array of document objects, each document contains the following fields:\n    <ul>\n      <li>order: specifies the order with regard to the indexed fields.</li>\n      <li>fields: Object containing other search indexes.</li>\n    </ul>\n  </li>\n </ul>\n </p>\n", "summary" : "<p>  Executes a Lucene query against a view and returns the query result.</p>", "annotation_str" : "", "annotations" : [  ], "updating" : false, "parameters" : [ { "name" : "connection", "type" : "anyURI", "occurrence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> A connection identifier</div>" }, { "name" : "database", "type" : "string", "occurrence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> A database name</div>" }, { "name" : "design-document", "type" : "string", "occurrence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> A design document name</div>" }, { "name" : "index", "type" : "string", "occurrence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> An index name</div>" }, { "name" : "query", "type" : "string", "occurrence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> A Lucene query</div>" } ], "returns" : { "type" : "object()", "description" : "The Lucene query results" }, "errors" : [ "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">cloudant:AUTHORIZATION Authorization error</xqdoc:error>", "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">cloudant:HTTP An HTTP error occurred when issuing the request</xqdoc:error>", "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">cloudant:RESPONSE An error occurred parsing the server response</xqdoc:error>", "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">cloudant:CONNECTION The specified connection does not exist</xqdoc:error>", "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">cloudant:INTERNAL Cloudant internal error</xqdoc:error>" ] }, { "isDocumented" : true, "arity" : 6, "name" : "lucene-query", "qname" : "cloudant:lucene-query", "signature" : "($connection as anyURI, $database as string, $design-document as string, $index as string, $query as string, $options as object()) as object()", "description" : " <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">Executes a Lucene query against a view and returns the query result.</p>\n <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">This function is declared as deterministic and should be used whenever result\n caching is acceptable.</p>\n <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">This method searches for documents whose index fields match the Lucene query.\n Which fields of a document are indexed and how is determined by the index functions\n in the design document.</p>\n <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">This function allows to specify an additional options object.\n The following options are supported:\n <ul>\n   <li>bookmark: A bookmark that was received from a previous search. This\n   allows you to page through the results. If there are no more results after\n   the bookmark, you will get a response with an empty rows array and the\n   same bookmark. That way you can determine that you have reached the end\n   of the result list (string).</li>\n   <li>stale: allow the results from a stale view to be used (string, allowed\n   value: \"ok\").</li>\n   <li>limit: limit the number of the returned documents to the specified\n   number (numeric).</li>\n   <li>include_docs: include the full content of the documents in the return\n   (boolean, default: false).</li>\n   <li>sort: specifies the sort order of the results. A JSON string of the\n   form <code>\"fieldname&lt;type&gt;\"</code> or <code>-fieldname&lt;type&gt;</code>\n   for descending order, where fieldname is the name of a string or number field\n   and type is either number or string. The type part is optional and defaults\n   to number. Some examples are <code>\"foo\"</code>, <code>\"-foo\"</code>,\n   <code>\"bar&lt;string&gt;\"</code>, <code>\"-foo&lt;number&gt;\"</code>. String\n   fields used for sorting must not be analyzed fields. The field(s) used for\n   sorting must be indexed by the same indexer used for the search query.\n   Alternatively, a JSON array of such strings is allowed.</li>\n </ul>\n </p>\n <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">The information is returned as a JSON structure containing meta information\n about the return structure, and the list of documents each with its ID, revision\n and key. The key is generated from the document ID.</p>\n <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">For example,\n <pre>cloudant:lucene-query($connection, \"db\", \"designdoc\", \"view\", \"a*\",\n {\"database-owner\": \"username\"})</pre>.\n </p>\n <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">An object with the following format is returned:\n <pre>\n {\n   \"total_rows\": 3,\n   \"bookmark\": \"g1AAAACWeJzLYWBgYMpgTmFQSElKzi9KdUhJMtbLTS3KLElMT9VLzskvTUnMK9HLSy3JAalMcgCSSfX____PAvPdQHwQSGTIIt6UPBaQlgNA6j_CJPsPcJOyANNEKzY\",\n   \"rows\":\n   [\n     {\n       \"id\": \"dd828eb4-c3f1-470f-aeff-c375ef70e4ad\",\n       \"order\": [0.0, 1],\n       \"fields\":\n       {\n         \"default\": \"aa\",\n         \"foo\": 0.0\n       }\n     },\n     {\n       \"id\": \"ea522cf1-eb8e-4477-aa92-d1fa459bb216\",\n       \"order\": [1.0, 0],\n       \"fields\":\n       {\n         \"default\": \"ab\",\n         \"foo\": 1.0\n       }\n     },\n     {\n       \"id\": \"c838baed-d573-43ea-9c34-621cf0f13301\",\n       \"order\": [2.0, 0],\n       \"fields\":\n       {\n         \"default\": \"ac\",\n         \"foo\": 2.0\n       }\n     }\n   ]\n }\n </pre>\n </p>\n <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">The fields have the following meaning:\n <ul>\n  <li>total_rows: number of results returned.</li>\n  <li>bookmark: string to be submitted in the next query to page through results.\n      If this response contained no results, the bookmark will be the same as the\n      one used to obtain this response.</li>\n  <li>rows: array of document objects, each document contains the following fields:\n    <ul>\n      <li>order: specifies the order with regard to the indexed fields.</li>\n      <li>fields: Object containing other search indexes.</li>\n    </ul>\n  </li>\n </ul>\n </p>\n", "summary" : "<p>  Executes a Lucene query against a view and returns the query result.</p>", "annotation_str" : "", "annotations" : [  ], "updating" : false, "parameters" : [ { "name" : "connection", "type" : "anyURI", "occurrence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> A connection identifier</div>" }, { "name" : "database", "type" : "string", "occurrence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> A database name</div>" }, { "name" : "design-document", "type" : "string", "occurrence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> A design document name</div>" }, { "name" : "index", "type" : "string", "occurrence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> An index name</div>" }, { "name" : "query", "type" : "string", "occurrence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> A Lucene query</div>" }, { "name" : "options", "type" : "object()", "occurrence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> An object specifying additional request options</div>" } ], "returns" : { "type" : "object()", "description" : "The Lucene query results" }, "errors" : [ "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">cloudant:AUTHORIZATION Authorization error</xqdoc:error>", "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">cloudant:HTTP An HTTP error occurred when issuing the request</xqdoc:error>", "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">cloudant:RESPONSE An error occurred parsing the server response</xqdoc:error>", "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">cloudant:CONNECTION The specified connection does not exist</xqdoc:error>", "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">cloudant:INTERNAL Cloudant internal error</xqdoc:error>", "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">cloudant:OPTIONS Malformed options object</xqdoc:error>" ] }, { "isDocumented" : true, "arity" : 3, "name" : "multiple-documents-nondeterministic", "qname" : "cloudant:multiple-documents-nondeterministic", "signature" : "($connection as anyURI, $database as string, $keys as string*) as object()", "description" : " <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">List the specified documents in a given database.</p>\n <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">This function has the same semantics as\n <a href=\"#multiple-documents-3\">multiple-documents#3</a>,\n but is declared as being non deterministic and thus should only be used when\n result caching is not desired.</p>\n", "summary" : "<p>  List the specified documents in a given database.</p>", "annotation_str" : " %an:nondeterministic", "annotations" : [ { "prefix" : "an", "ns" : "http://zorba.io/annotations", "name" : "nondeterministic", "value" : "" } ], "updating" : false, "parameters" : [ { "name" : "connection", "type" : "anyURI", "occurrence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> A connection identifier</div>" }, { "name" : "database", "type" : "string", "occurrence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> A database name</div>" }, { "name" : "keys", "type" : "string", "occurrence" : "*", "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> The keys of the documents which must be retrieved</div>" } ], "returns" : { "type" : "object()", "description" : "An object listing the specified documents in the specified database" }, "errors" : [ "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">cloudant:AUTHORIZATION Authorization error</xqdoc:error>", "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">cloudant:HTTP An HTTP error occurred when issuing the request</xqdoc:error>", "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">cloudant:RESPONSE An error occurred parsing the server response</xqdoc:error>", "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">cloudant:CONNECTION The specified connection does not exist</xqdoc:error>", "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">cloudant:INTERNAL Cloudant internal error</xqdoc:error>" ] }, { "isDocumented" : true, "arity" : 4, "name" : "multiple-documents-nondeterministic", "qname" : "cloudant:multiple-documents-nondeterministic", "signature" : "($connection as anyURI, $database as string, $keys as string*, $options as object()) as object()", "description" : " <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">Lists the specified documents in a given database.</p>\n <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">This function has the same semantics as\n <a href=\"#multiple-documents-4\">multiple-documents#4</a>,\n but is declared as being non deterministic and thus should only be used when\n result caching is not desired.</p>\n", "summary" : "<p>  Lists the specified documents in a given database.</p>", "annotation_str" : " %an:nondeterministic", "annotations" : [ { "prefix" : "an", "ns" : "http://zorba.io/annotations", "name" : "nondeterministic", "value" : "" } ], "updating" : false, "parameters" : [ { "name" : "connection", "type" : "anyURI", "occurrence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> A connection identifier</div>" }, { "name" : "database", "type" : "string", "occurrence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> A database name</div>" }, { "name" : "keys", "type" : "string", "occurrence" : "*", "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> The keys of the documents which must be retrieved</div>" }, { "name" : "options", "type" : "object()", "occurrence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> An object specifying additional request options</div>" } ], "returns" : { "type" : "object()", "description" : "An object listing the specified documents in the specified database" }, "errors" : [ "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">cloudant:AUTHORIZATION Authorization error</xqdoc:error>", "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">cloudant:HTTP An HTTP error occurred when issuing the request</xqdoc:error>", "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">cloudant:RESPONSE An error occurred parsing the server response</xqdoc:error>", "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">cloudant:CONNECTION The specified connection does not exist</xqdoc:error>", "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">cloudant:INTERNAL Cloudant internal error</xqdoc:error>", "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">cloudant:OPTIONS Malformed options object</xqdoc:error>" ] }, { "isDocumented" : true, "arity" : 3, "name" : "multiple-documents", "qname" : "cloudant:multiple-documents", "signature" : "($connection as anyURI, $database as string, $keys as string*) as object()", "description" : " <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">List the specified documents in a given database.</p>\n <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">This function is declared as deterministic and should be used whenever result\n caching is acceptable.</p>\n <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">The information is returned as a JSON structure containing meta information\n about the return structure, and the list of documents each with its ID, revision\n and key. The key is generated from the document ID.</p>\n <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">For example,\n <pre>cloudant:multiple-documents($connection, \"db\",\n   (\"5a049246-179f-42ad-87ac-8f080426c17c\",\n    \"d1f61e66-7708-4da6-aa05-7cbc33b44b7e\",\n    \"96f898f0-f6ff-4a9b-aac4-503992f31b01\"))</pre>.\n </p>\n <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">An object with the following format is returned:\n <pre>\n {\n   \"total_rows\":3,\n   \"offset\":0,\n   \"rows\":[\n   {\n     \"id\":\"5a049246-179f-42ad-87ac-8f080426c17c\",\n     \"key\":\"5a049246-179f-42ad-87ac-8f080426c17c\",\n     \"value\":\n     {\n       \"rev\":\"2-9d5401898196997853b5ac4163857a29\"\n     }\n   },\n   {\n     \"id\":\"96f898f0-f6ff-4a9b-aac4-503992f31b01\",\n     \"key\":\"96f898f0-f6ff-4a9b-aac4-503992f31b01\",\n     \"value\":\n     {\n       \"rev\":\"2-ff7b85665c4c297838963c80ecf481a3\"\n      }\n   },\n   {\n     \"id\":\"d1f61e66-7708-4da6-aa05-7cbc33b44b7e\",\n     \"key\":\"d1f61e66-7708-4da6-aa05-7cbc33b44b7e\",\n     \"value\":\n     {\n       \"rev\":\"2-cbdef49ef3ddc127eff86350844a6108\"\n     }\n   }]\n }\n </pre>\n </p>\n <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">The fields have the following meaning:\n <ul>\n  <li>offset: offset where the document list started.</li>\n  <li>rows: array of document objects, each containing id, key and revision number.</li>\n  <li>total_rows: number of documents in the database.</li>\n  <li>update_seq: current update sequence database.</li>\n </ul>\n </p>\n", "summary" : "<p>  List the specified documents in a given database.</p>", "annotation_str" : "", "annotations" : [  ], "updating" : false, "parameters" : [ { "name" : "connection", "type" : "anyURI", "occurrence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> A connection identifier</div>" }, { "name" : "database", "type" : "string", "occurrence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> A database name</div>" }, { "name" : "keys", "type" : "string", "occurrence" : "*", "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> The keys of the documents which must be retrieved</div>" } ], "returns" : { "type" : "object()", "description" : "An object listing the specified documents in the specified database" }, "errors" : [ "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">cloudant:AUTHORIZATION Authorization error</xqdoc:error>", "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">cloudant:HTTP An HTTP error occurred when issuing the request</xqdoc:error>", "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">cloudant:RESPONSE An error occurred parsing the server response</xqdoc:error>", "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">cloudant:CONNECTION The specified connection does not exist</xqdoc:error>", "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">cloudant:INTERNAL Cloudant internal error</xqdoc:error>" ] }, { "isDocumented" : true, "arity" : 4, "name" : "multiple-documents", "qname" : "cloudant:multiple-documents", "signature" : "($connection as anyURI, $database as string, $keys as string*, $options as object()) as object()", "description" : " <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">Lists the specified documents in a given database.</p>\n <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">This function is declared as deterministic and should be used whenever result\n caching is acceptable.</p>\n <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">The information is returned as a JSON structure containing meta information\n about the return structure, and the list of documents each with its ID, revision\n and key. The key is generated from the document ID.</p>\n <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">This function allows to specify an additional options object.\n The following options are supported:\n <ul>\n   <li>descending: return the documents in descending by key order (boolean,\n   default: false).</li>\n   <li>endkey: stop returning records when the specified key is reached (string).</li>\n   <li>endkey_docid: stop returning records when the specified document ID is\n   reached (string).</li>\n   <li>group: group the results using the reduce function to a group or single\n   row (boolean, default: false).</li>\n   <li>group_level: specify the group level to be used (numeric).</li>\n   <li>include_docs: include the full content of the documents in the return\n   (boolean, default: false).</li>\n   <li>inclusive_end: specifies whether the specified end key should be included\n   in the result (boolean, default: true).</li>\n   <li>key: return only documents that match the specified key (string).</li>\n   <li>limit: limit the number of the returned documents to the specified number\n   (numeric).</li>\n   <li>reduce: use the reduction function (boolean, default: true).</li>\n   <li>skip: skip this number of records before starting to return the results\n   (numeric, default: 0).</li>\n   <li>stale: allow the results from a stale view to be used (string, allowed\n   value: \"ok\").</li>\n   <li>startkey: start returning records when the specified key is reached\n   (string).</li>\n   <li>startkey_docid: start returning records when the specified document ID\n   is reached (string).</li>\n   <li>database-owner: specifies the database owner (string, default: connection\n   user).</li>\n </ul>\n </p>\n <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">For example,\n <pre>cloudant:multiple-documents($connection, \"db\",\n   (\"5a049246-179f-42ad-87ac-8f080426c17c\",\n    \"d1f61e66-7708-4da6-aa05-7cbc33b44b7e\",\n    \"96f898f0-f6ff-4a9b-aac4-503992f31b01\"),\n   {\"database-owner\": \"username\"})</pre>.\n </p>\n <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">An object with the following format is returned:\n <pre>\n {\n   \"total_rows\":3,\n   \"offset\":0,\n   \"rows\":[\n   {\n     \"id\":\"5a049246-179f-42ad-87ac-8f080426c17c\",\n     \"key\":\"5a049246-179f-42ad-87ac-8f080426c17c\",\n     \"value\":\n     {\n       \"rev\":\"2-9d5401898196997853b5ac4163857a29\"\n     }\n   },\n   {\n     \"id\":\"96f898f0-f6ff-4a9b-aac4-503992f31b01\",\n     \"key\":\"96f898f0-f6ff-4a9b-aac4-503992f31b01\",\n     \"value\":\n     {\n       \"rev\":\"2-ff7b85665c4c297838963c80ecf481a3\"\n      }\n   },\n   {\n     \"id\":\"d1f61e66-7708-4da6-aa05-7cbc33b44b7e\",\n     \"key\":\"d1f61e66-7708-4da6-aa05-7cbc33b44b7e\",\n     \"value\":\n     {\n       \"rev\":\"2-cbdef49ef3ddc127eff86350844a6108\"\n     }\n   }]\n }\n </pre>\n </p>\n <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">The fields have the following meaning:\n <ul>\n  <li>offset: offset where the document list started.</li>\n  <li>rows: array of document objects, each containing id, key and revision number.</li>\n  <li>total_rows: number of documents in the database.</li>\n  <li>update_seq: current update sequence database.</li>\n </ul>\n </p>\n", "summary" : "<p>  Lists the specified documents in a given database.</p>", "annotation_str" : "", "annotations" : [  ], "updating" : false, "parameters" : [ { "name" : "connection", "type" : "anyURI", "occurrence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> A connection identifier</div>" }, { "name" : "database", "type" : "string", "occurrence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> A database name</div>" }, { "name" : "keys", "type" : "string", "occurrence" : "*", "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> The keys of the documents which must be retrieved</div>" }, { "name" : "options", "type" : "object()", "occurrence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> An object specifying additional request options</div>" } ], "returns" : { "type" : "object()", "description" : "An object listing the specified documents in the specified database" }, "errors" : [ "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">cloudant:AUTHORIZATION Authorization error</xqdoc:error>", "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">cloudant:HTTP An HTTP error occurred when issuing the request</xqdoc:error>", "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">cloudant:RESPONSE An error occurred parsing the server response</xqdoc:error>", "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">cloudant:CONNECTION The specified connection does not exist</xqdoc:error>", "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">cloudant:INTERNAL Cloudant internal error</xqdoc:error>", "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">cloudant:OPTIONS Malformed options object</xqdoc:error>" ] }, { "isDocumented" : true, "arity" : 5, "name" : "multiple-view-documents-nondeterministic", "qname" : "cloudant:multiple-view-documents-nondeterministic", "signature" : "($connection as anyURI, $database as string, $design-document as string, $view as string, $keys as string*) as object()", "description" : " <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">List the specified documents in a given view.</p>\n <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">This function has the same semantics as\n <a href=\"#multiple-view-documents-5\">multiple-view-documents#5</a>,\n but is declared as being non deterministic and thus should only be used when\n result caching is not desired.</p>\n", "summary" : "<p>  List the specified documents in a given view.</p>", "annotation_str" : " %an:nondeterministic", "annotations" : [ { "prefix" : "an", "ns" : "http://zorba.io/annotations", "name" : "nondeterministic", "value" : "" } ], "updating" : false, "parameters" : [ { "name" : "connection", "type" : "anyURI", "occurrence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> A connection identifier</div>" }, { "name" : "database", "type" : "string", "occurrence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> A database name</div>" }, { "name" : "design-document", "type" : "string", "occurrence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> A design document name</div>" }, { "name" : "view", "type" : "string", "occurrence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> A view name</div>" }, { "name" : "keys", "type" : "string", "occurrence" : "*", "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> The keys of the documents which must be retrieved</div>" } ], "returns" : { "type" : "object()", "description" : "An object listing all the specified documents in the specified view" }, "errors" : [ "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">cloudant:AUTHORIZATION Authorization error</xqdoc:error>", "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">cloudant:HTTP An HTTP error occurred when issuing the request</xqdoc:error>", "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">cloudant:RESPONSE An error occurred parsing the server response</xqdoc:error>", "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">cloudant:CONNECTION The specified connection does not exist</xqdoc:error>", "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">cloudant:INTERNAL Cloudant internal error</xqdoc:error>" ] }, { "isDocumented" : true, "arity" : 6, "name" : "multiple-view-documents-nondeterministic", "qname" : "cloudant:multiple-view-documents-nondeterministic", "signature" : "($connection as anyURI, $database as string, $design-document as string, $view as string, $keys as string*, $options as object()) as object()", "description" : " <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">Lists the specified documents in a given view.</p>\n <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">This function has the same semantics as\n <a href=\"#multiple-view-documents-6\">multiple-view-documents#6</a>,\n but is declared as being non deterministic and thus should only be used when\n result caching is not desired.</p>\n", "summary" : "<p>  Lists the specified documents in a given view.</p>", "annotation_str" : " %an:nondeterministic", "annotations" : [ { "prefix" : "an", "ns" : "http://zorba.io/annotations", "name" : "nondeterministic", "value" : "" } ], "updating" : false, "parameters" : [ { "name" : "connection", "type" : "anyURI", "occurrence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> A connection identifier</div>" }, { "name" : "database", "type" : "string", "occurrence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> A database name</div>" }, { "name" : "design-document", "type" : "string", "occurrence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> A design document name</div>" }, { "name" : "view", "type" : "string", "occurrence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> A view name</div>" }, { "name" : "keys", "type" : "string", "occurrence" : "*", "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> The keys of the documents which must be retrieved</div>" }, { "name" : "options", "type" : "object()", "occurrence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> An object specifying additional request options</div>" } ], "returns" : { "type" : "object()", "description" : "An object listing all the specified documents in the specified view" }, "errors" : [ "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">cloudant:AUTHORIZATION Authorization error</xqdoc:error>", "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">cloudant:HTTP An HTTP error occurred when issuing the request</xqdoc:error>", "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">cloudant:RESPONSE An error occurred parsing the server response</xqdoc:error>", "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">cloudant:CONNECTION The specified connection does not exist</xqdoc:error>", "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">cloudant:INTERNAL Cloudant internal error</xqdoc:error>", "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">cloudant:OPTIONS Malformed options object</xqdoc:error>" ] }, { "isDocumented" : true, "arity" : 5, "name" : "multiple-view-documents", "qname" : "cloudant:multiple-view-documents", "signature" : "($connection as anyURI, $database as string, $design-document as string, $view as string, $keys as string*) as object()", "description" : " <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">List the specified documents in a given view.</p>\n <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">This function is declared as deterministic and should be used whenever result\n caching is acceptable.</p>\n <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">The information is returned as a JSON structure containing meta information\n about the return structure, and the list of documents each with its ID, revision\n and key. The key is generated from the document ID.</p>\n <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">For example,\n <pre>cloudant:multiple-view-documents($connection, \"db\", \"recipes\", \"by_ingredient\",\n (\"claret\", \"clear apple juice\"))\n </pre>.\n </p>\n <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">An object with the following format is returned:\n <pre>\n {\n   \"total_rows\" : 26484,\n   \"rows\" : [\n     {\n       \"value\" : [\"Scotch collops\"]],\n       \"id\" : \"Scotchcollops\",\n       \"key\" : \"claret\"\n     },\n     {\n       \"value\" : [\"Stand pie\"],\n       \"id\" : \"Standpie\",\n       \"key\" : \"clear apple juice\"\n     }\n   ],\n   \"offset\" : 6324\n }\n </pre>\n </p>\n <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">The fields have the following meaning:\n <ul>\n  <li>offset: offset where the document list started.</li>\n  <li>rows: array of document objects, each containing id, key and revision\n  number.</li>\n  <li>total_rows: number of documents in the database.</li>\n  <li>update_seq: current update sequence database.</li>\n </ul>\n </p>\n", "summary" : "<p>  List the specified documents in a given view.</p>", "annotation_str" : "", "annotations" : [  ], "updating" : false, "parameters" : [ { "name" : "connection", "type" : "anyURI", "occurrence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> A connection identifier</div>" }, { "name" : "database", "type" : "string", "occurrence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> A database name</div>" }, { "name" : "design-document", "type" : "string", "occurrence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> A design document name</div>" }, { "name" : "view", "type" : "string", "occurrence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> A view name</div>" }, { "name" : "keys", "type" : "string", "occurrence" : "*", "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> The keys of the documents which must be retrieved</div>" } ], "returns" : { "type" : "object()", "description" : "An object listing all the specified documents in the specified view" }, "errors" : [ "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">cloudant:AUTHORIZATION Authorization error</xqdoc:error>", "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">cloudant:HTTP An HTTP error occurred when issuing the request</xqdoc:error>", "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">cloudant:RESPONSE An error occurred parsing the server response</xqdoc:error>", "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">cloudant:CONNECTION The specified connection does not exist</xqdoc:error>", "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">cloudant:INTERNAL Cloudant internal error</xqdoc:error>" ] }, { "isDocumented" : true, "arity" : 6, "name" : "multiple-view-documents", "qname" : "cloudant:multiple-view-documents", "signature" : "($connection as anyURI, $database as string, $design-document as string, $view as string, $keys as string*, $options as object()) as object()", "description" : " <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">Lists the specified documents in a given view.</p>\n <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">This function is declared as deterministic and should be used whenever result\n caching is acceptable.</p>\n <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">The information is returned as a JSON structure containing meta information\n about the return structure, and the list of documents each with its ID, revision\n and key. The key is generated from the document ID.</p>\n <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">This function allows to specify an additional options object.\n The following options are supported:\n <ul>\n   <li>descending: return the documents in descending by key order (boolean,\n   default: false).</li>\n   <li>endkey: stop returning records when the specified key is reached (string).</li>\n   <li>endkey_docid: stop returning records when the specified document ID is\n   reached (string).</li>\n   <li>group: group the results using the reduce function to a group or single\n   row (boolean, default: false).</li>\n   <li>group_level: specify the group level to be used (numeric).</li>\n   <li>include_docs: include the full content of the documents in the return\n   (boolean, default: false).</li>\n   <li>inclusive_end: specifies whether the specified end key should be included\n   in the result (boolean, default: true).</li>\n   <li>key: return only documents that match the specified key (string).</li>\n   <li>limit: limit the number of the returned documents to the specified number\n   (numeric).</li>\n   <li>reduce: use the reduction function (boolean, default: true).</li>\n   <li>skip: skip this number of records before starting to return the results\n   (numeric, default: 0).</li>\n   <li>stale: allow the results from a stale view to be used (string, allowed\n   value: \"ok\").</li>\n   <li>startkey: start returning records when the specified key is reached\n   (string).</li>\n   <li>startkey_docid: start returning records when the specified document ID\n   is reached (string).</li>\n   <li>database-owner: specifies the database owner (string, default: connection\n   user).</li>\n </ul>\n </p>\n <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">For example,\n <pre>cloudant:multiple-view-documents($connection, \"db\", \"recipes\",\n   \"by_ingredient\", (\"claret\", \"clear apple juice\"),\n   {\"database-owner\": \"username\"})\n </pre>.\n </p>\n <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">An object with the following format is returned:\n <pre>\n {\n   \"total_rows\" : 26484,\n   \"rows\" : [\n     {\n       \"value\" : [\"Scotch collops\"]],\n       \"id\" : \"Scotchcollops\",\n       \"key\" : \"claret\"\n     },\n     {\n       \"value\" : [\"Stand pie\"],\n       \"id\" : \"Standpie\",\n       \"key\" : \"clear apple juice\"\n     }\n   ],\n   \"offset\" : 6324\n }\n </pre>\n </p>\n <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">The fields have the following meaning:\n <ul>\n  <li>offset: offset where the document list started.</li>\n  <li>rows: array of document objects, each containing id, key and revision number.</li>\n  <li>total_rows: number of documents in the database.</li>\n  <li>update_seq: current update sequence database.</li>\n </ul>\n </p>\n", "summary" : "<p>  Lists the specified documents in a given view.</p>", "annotation_str" : "", "annotations" : [  ], "updating" : false, "parameters" : [ { "name" : "connection", "type" : "anyURI", "occurrence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> A connection identifier</div>" }, { "name" : "database", "type" : "string", "occurrence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> A database name</div>" }, { "name" : "design-document", "type" : "string", "occurrence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> A design document name</div>" }, { "name" : "view", "type" : "string", "occurrence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> A view name</div>" }, { "name" : "keys", "type" : "string", "occurrence" : "*", "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> The keys of the documents which must be retrieved</div>" }, { "name" : "options", "type" : "object()", "occurrence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> An object specifying additional request options</div>" } ], "returns" : { "type" : "object()", "description" : "An object listing all the specified documents in the specified view" }, "errors" : [ "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">cloudant:AUTHORIZATION Authorization error</xqdoc:error>", "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">cloudant:HTTP An HTTP error occurred when issuing the request</xqdoc:error>", "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">cloudant:RESPONSE An error occurred parsing the server response</xqdoc:error>", "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">cloudant:CONNECTION The specified connection does not exist</xqdoc:error>", "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">cloudant:INTERNAL Cloudant internal error</xqdoc:error>", "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">cloudant:OPTIONS Malformed options object</xqdoc:error>" ] } ], "variables" : [  ] }, "http://api.28.io/exportimport" : { "ns" : "http://api.28.io/exportimport", "description" : "", "sees" : [  ], "authors" : [  ], "version" : null, "encoding" : null, "namespaces" : [ { "uri" : "", "prefix" : "an" }, { "uri" : "http://api.28.io/collections", "prefix" : "cm" }, { "uri" : "http://api.28.io/exportimport", "prefix" : "exportimport" }, { "uri" : "http://zorba.io/modules/fetch", "prefix" : "fetch" }, { "uri" : "http://api.28.io/indices", "prefix" : "in" }, { "uri" : "http://www.28msec.com/modules/maps", "prefix" : "map" }, { "uri" : "http://www.28msec.com/modules/http/request", "prefix" : "req" }, { "uri" : "http://www.28msec.com/modules/http/response", "prefix" : "resp" }, { "uri" : "http://www.28msec.com/modules/store", "prefix" : "store" }, { "uri" : "http://api.28.io/validation", "prefix" : "validate" } ], "functions" : [ { "isDocumented" : false, "arity" : 1, "name" : "create-map", "qname" : "exportimport:create-map", "signature" : "($map as object())", "description" : "", "summary" : "", "annotation_str" : " %an:sequential", "annotations" : [ { "prefix" : "an", "ns" : "", "name" : "sequential", "value" : "" } ], "updating" : false, "parameters" : [ { "name" : "map", "type" : "object()", "occurrence" : null, "description" : "" } ], "returns" : { "type" : null, "description" : "" }, "errors" : [  ] }, { "isDocumented" : false, "arity" : 0, "name" : "export", "qname" : "exportimport:export", "signature" : "()", "description" : "", "summary" : "", "annotation_str" : " %an:sequential", "annotations" : [ { "prefix" : "an", "ns" : "", "name" : "sequential", "value" : "" } ], "updating" : false, "parameters" : [  ], "returns" : { "type" : null, "description" : "" }, "errors" : [  ] }, { "isDocumented" : false, "arity" : 0, "name" : "import", "qname" : "exportimport:import", "signature" : "()", "description" : "", "summary" : "", "annotation_str" : " %an:sequential", "annotations" : [ { "prefix" : "an", "ns" : "", "name" : "sequential", "value" : "" } ], "updating" : false, "parameters" : [  ], "returns" : { "type" : null, "description" : "" }, "errors" : [  ] }, { "isDocumented" : false, "arity" : 2, "name" : "import", "qname" : "exportimport:import", "signature" : "($import as object(), $overwrite as xs:boolean)", "description" : "", "summary" : "", "annotation_str" : " %an:sequential", "annotations" : [ { "prefix" : "an", "ns" : "", "name" : "sequential", "value" : "" } ], "updating" : false, "parameters" : [ { "name" : "import", "type" : "object()", "occurrence" : null, "description" : "" }, { "name" : "overwrite", "type" : "xs:boolean", "occurrence" : null, "description" : "" } ], "returns" : { "type" : null, "description" : "" }, "errors" : [  ] }, { "isDocumented" : false, "arity" : 1, "name" : "is-system-collection", "qname" : "exportimport:is-system-collection", "signature" : "($name as xs:string) as xs:boolean", "description" : "", "summary" : "", "annotation_str" : "", "annotations" : [  ], "updating" : false, "parameters" : [ { "name" : "name", "type" : "xs:string", "occurrence" : null, "description" : "" } ], "returns" : { "type" : "xs:boolean", "description" : "" }, "errors" : [  ] }, { "isDocumented" : false, "arity" : 1, "name" : "validate-map", "qname" : "exportimport:validate-map", "signature" : "($map as object()) as empty-sequence()", "description" : "", "summary" : "", "annotation_str" : " %an:sequential", "annotations" : [ { "prefix" : "an", "ns" : "", "name" : "sequential", "value" : "" } ], "updating" : false, "parameters" : [ { "name" : "map", "type" : "object()", "occurrence" : null, "description" : "" } ], "returns" : { "type" : "empty-sequence()", "description" : "" }, "errors" : [  ] } ], "variables" : [  ] }, "http://jsoniq.org/errors" : { "ns" : "http://jsoniq.org/errors", "description" : " This module contains one variable declaration for each diagnostic of the\n http://jsoniq.org/errors namespace.\n The variables serves as documentation for the errors but can also\n be used in the code. For example, one useful scenario is to compare\n an error caught in the catch clause of a try-catch expression with one of\n the variables.\n", "sees" : [  ], "authors" : [ "<xqdoc:author xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">Carlos Lopez</xqdoc:author>" ], "version" : null, "encoding" : "utf-8", "namespaces" : [ { "uri" : "http://jsoniq.org/errors", "prefix" : "jerr" } ], "functions" : [  ], "variables" : [ { "name" : "jerr:JNSE0013", "type" : "xs:QName", "description" : "It is a dynamic error to serialize an atomic value not\n supported by JSON or a node with the JSON output method and with\n the jsoniq-serialization-extensions serialization parameter\n set to false.\n" }, { "name" : "jerr:JNDY0021", "type" : "xs:QName", "description" : "parser error raised by jn:parse-json\n" }, { "name" : "jerr:JNTY0021", "type" : "xs:QName", "description" : "array or object selector on heterogeneous sequence\n" }, { "name" : "jerr:JNTY0020", "type" : "xs:QName", "description" : "parser error for invalid option type\n" }, { "name" : "jerr:JNTY0024", "type" : "xs:QName", "description" : "objects or arrays don't have a string value\n" }, { "name" : "jerr:JNTY0023", "type" : "xs:QName", "description" : "It is a type error if the prefix is not a string or if the\n serialization parameters are not an element.\n" }, { "name" : "jerr:JNUP0019", "type" : "xs:QName", "description" : "It is a dynamic error if the content expression, in an object insert expression, does not evaluate to a sequence of objects.\n" }, { "name" : "jerr:JNTY0018", "type" : "xs:QName", "description" : "It is a dynamic error if there is not exactly one supplied parameter for an object or array selector.\n" }, { "name" : "jerr:JNUP0017", "type" : "xs:QName", "description" : " It is a dynamic error if the value in a replace expression is not exactly a single item.\n" }, { "name" : "jerr:JNUP0016", "type" : "xs:QName", "description" : "It is a dynamic error if it is attempted to create a replace, delete or rename update primitive with a selector that cannot be resolved against the target array or object.\n" }, { "name" : "jerr:JNSE0022", "type" : "xs:QName", "description" : "It is a dynamic error to serialize a sequence that does\n not exist of exactly one document node with XML, HTML, XHTML, Text.\n" }, { "name" : "jerr:JNSE0014", "type" : "xs:QName", "description" : "It is a dynamic error to serialize a function or a node with the\n JSON output method.\n" }, { "name" : "jerr:NS", "type" : "item()*", "description" : "" }, { "name" : "jerr:JNSE0012", "type" : "xs:QName", "description" : "It is a dynamic error to serialize a sequence of less\n or more than one item with the JSON output method if the\n jsoniq-serialization-multiple-items is set to no.\n" }, { "name" : "jerr:JNTY0011", "type" : "xs:QName", "description" : "It is a type error if the content sequence in a node constructor or in an XQUF insert or replace update expression contains an object or an array.\n" }, { "name" : "jerr:JNUP0010", "type" : "xs:QName", "description" : "It is a dynamic error if a pending update list contains two renaming update primitives on the same object and with the same selector.\n" }, { "name" : "jerr:JNUP0009", "type" : "xs:QName", "description" : "It is a dynamic error if a pending update list contains two replacing update primitives on the same object or array, and with the same selector.\n" }, { "name" : "jerr:JNUP0008", "type" : "xs:QName", "description" : "It is a dynamic error if the target of a deleting or replacing expression is not an array or an object.\n It is a dynamic error if the target of a renaming expression is not an object.\n It is a dynamic error if the target of an appending expression is not an array.\n It is a dynamic error if the target of a position-inserting expression is not an array.\n It is a dynamic error if the target of a non-position-inserting expression is not an object.\n" }, { "name" : "jerr:JNUP0007", "type" : "xs:QName", "description" : "It is a type error if, in an updating expression, an array selector cannot be cast to xs:integer or if an object selector cannot be cast to xs:string.\n" }, { "name" : "jerr:JNUP0006", "type" : "xs:QName", "description" : "It is a dynamic error if upd:applyUpdates causes an object to contain two pairs with the same name.\n" }, { "name" : "jerr:JNUP0005", "type" : "xs:QName", "description" : "It is a dynamic error if a pending update list contains two inserting update primitives on the same object and pair name.\n" }, { "name" : "jerr:JNTY0004", "type" : "xs:QName", "description" : "It is a type error to call fn:data on a sequence containing an array or an object.\n" }, { "name" : "jerr:JNDY0003", "type" : "xs:QName", "description" : "It is a dynamic error if two pairs in an object constructor or in a simple object union have the same name.\n" }, { "name" : "jerr:JNTY0002", "type" : "xs:QName", "description" : "It is a type error if the right-hand-side expression of a pair constructor does not return exactly one item.\n" } ] }, "http://zorba.io/modules/sctx" : { "ns" : "http://zorba.io/modules/sctx", "description" : " This module provides functions that gets components of the static context.\n", "sees" : [ "<xqdoc:see xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">http://www.w3.org/TR/xquery/#id-xq-static-context-components</xqdoc:see>" ], "authors" : [ "<xqdoc:author xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">Nicolae Brinza</xqdoc:author>" ], "version" : null, "encoding" : "utf-8", "namespaces" : [ { "uri" : "http://zorba.io/modules/sctx", "prefix" : "sctx" }, { "uri" : "http://zorba.io/options/versioning", "prefix" : "ver" } ], "functions" : [ { "isDocumented" : true, "arity" : 0, "name" : "base-uri", "qname" : "sctx:base-uri", "signature" : "() as xs:string? external", "description" : " Gets the base URI.\n", "summary" : "<p> Gets the base URI.</p>", "annotation_str" : "", "annotations" : [  ], "updating" : false, "parameters" : [  ], "returns" : { "type" : "xs:string?", "description" : "The base URI." }, "errors" : [  ] }, { "isDocumented" : true, "arity" : 0, "name" : "boundary-space-policy", "qname" : "sctx:boundary-space-policy", "signature" : "() as xs:string external", "description" : " Gets the boundary whitespace policy used by direct element constructors.\n", "summary" : "<p> Gets the boundary whitespace policy used by direct element constructors.</p>", "annotation_str" : "", "annotations" : [  ], "updating" : false, "parameters" : [  ], "returns" : { "type" : "xs:string", "description" : "Either <code xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">preserve</code> or <code xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">strip</code>." }, "errors" : [  ] }, { "isDocumented" : true, "arity" : 0, "name" : "construction-mode", "qname" : "sctx:construction-mode", "signature" : "() as xs:string external", "description" : " Gets the static context construction mode of element and document nodes.\n", "summary" : "<p> Gets the static context construction mode of element and document nodes.</p>", "annotation_str" : "", "annotations" : [  ], "updating" : false, "parameters" : [  ], "returns" : { "type" : "xs:string", "description" : "Either <code xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">preserve</code> or <code xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">strip</code>." }, "errors" : [  ] }, { "isDocumented" : true, "arity" : 0, "name" : "copy-namespaces-mode", "qname" : "sctx:copy-namespaces-mode", "signature" : "() as xs:string+ external", "description" : " Gets the static context components that control the the namespace bindings\n that are assigned when an existing element node is copied\n by an element constructor.\n", "summary" : "<p> Gets the static context components that control the the namespace bindings\n that are assigned when an existing element node is copied\n by an element constructor.</p>", "annotation_str" : "", "annotations" : [  ], "updating" : false, "parameters" : [  ], "returns" : { "type" : "xs:string+", "description" : "A sequence of two strings: the first is either <code xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">preserve</code> or <code xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">no-preserve</code> and the second is either <code xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">inherit</code> or <code xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">no-inherit</code>." }, "errors" : [  ] }, { "isDocumented" : true, "arity" : 0, "name" : "default-collation", "qname" : "sctx:default-collation", "signature" : "() as xs:string external", "description" : " Gets one of statically known collations used by functions and operators\n for comparing and ordering values of type <code xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">xs:string</code>\n or <code xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">xs:anyURI</code> when no explicit collation is specified.\n", "summary" : "<p> Gets one of statically known collations used by functions and operators\n for comparing and ordering values of type  xs:string \n or  xs:anyURI  when no explicit collation is specified.</p>", "annotation_str" : "", "annotations" : [  ], "updating" : false, "parameters" : [  ], "returns" : { "type" : "xs:string", "description" : "The collations that is used by default." }, "errors" : [  ] }, { "isDocumented" : true, "arity" : 0, "name" : "default-collection-type", "qname" : "sctx:default-collection-type", "signature" : "() as xs:string external", "description" : " Gets the statically known default collection type.\n This is the type of the sequence of nodes that would result from calling the\n <code xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">fn:collection</code> function with no arguments.\n", "summary" : "<p> Gets the statically known default collection type.</p>", "annotation_str" : "", "annotations" : [  ], "updating" : false, "parameters" : [  ], "returns" : { "type" : "xs:string", "description" : "The type of the default collection." }, "errors" : [  ] }, { "isDocumented" : true, "arity" : 0, "name" : "default-function-namespace", "qname" : "sctx:default-function-namespace", "signature" : "() as xs:string external", "description" : " Gets the URI of the default function namespace.\n", "summary" : "<p> Gets the URI of the default function namespace.</p>", "annotation_str" : "", "annotations" : [  ], "updating" : false, "parameters" : [  ], "returns" : { "type" : "xs:string", "description" : "The URI of the of the default function namespace." }, "errors" : [  ] }, { "isDocumented" : true, "arity" : 0, "name" : "default-order", "qname" : "sctx:default-order", "signature" : "() as xs:string external", "description" : " Gets the component that controls the processing of empty sequences and NaN\n values as ordering keys in an <code xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">order by</code> clause\n in a FLWOR expression.\n", "summary" : "<p> Gets the component that controls the processing of empty sequences and NaN\n values as ordering keys in an  order by  clause\n in a FLWOR expression.</p>", "annotation_str" : "", "annotations" : [  ], "updating" : false, "parameters" : [  ], "returns" : { "type" : "xs:string", "description" : "Either <code xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">greatest</code> or <code xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">least</code>." }, "errors" : [  ] }, { "isDocumented" : true, "arity" : 2, "name" : "function-annotations", "qname" : "sctx:function-annotations", "signature" : "($name as xs:QName, $arity as xs:integer) as xs:QName* external", "description" : " Gets the list of annotations declared for the given function.\n", "summary" : "<p> Gets the list of annotations declared for the given function.</p>", "annotation_str" : "", "annotations" : [  ], "updating" : false, "parameters" : [ { "name" : "name", "type" : "xs:QName", "occurrence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> The name of the function.</div>" }, { "name" : "arity", "type" : "xs:integer", "occurrence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> The number of arguments the function takes.</div>" } ], "returns" : { "type" : "xs:QName*", "description" : "the list of annotations" }, "errors" : [  ] }, { "isDocumented" : true, "arity" : 1, "name" : "function-arguments-count", "qname" : "sctx:function-arguments-count", "signature" : "($function as xs:QName) as xs:int* external", "description" : " Gets the number of arguments the given XQuery function takes.\n", "summary" : "<p> Gets the number of arguments the given XQuery function takes.</p>", "annotation_str" : "", "annotations" : [  ], "updating" : false, "parameters" : [ { "name" : "function", "type" : "xs:QName", "occurrence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> A QName identifying a function.</div>" } ], "returns" : { "type" : "xs:int*", "description" : "Either a sequence of zero or more integers (one for each overloaded version of the given function) or an empty sequence if the function is not defined." }, "errors" : [  ] }, { "isDocumented" : true, "arity" : 0, "name" : "function-names", "qname" : "sctx:function-names", "signature" : "() as xs:QName* external", "description" : " Gets a sequence containing the QNames of all defined functions\n that are available to be called from within an expression.\n", "summary" : "<p> Gets a sequence containing the QNames of all defined functions\n that are available to be called from within an expression.</p>", "annotation_str" : "", "annotations" : [  ], "updating" : false, "parameters" : [  ], "returns" : { "type" : "xs:QName*", "description" : "A sequence for QNames identifying all functions." }, "errors" : [  ] }, { "isDocumented" : true, "arity" : 0, "name" : "functions", "qname" : "sctx:functions", "signature" : "() as object()* external", "description" : " Gets a sequence of JSON objects containing the name, arity, and annotations\n of all defined functions that are available to be called form within an\n expression.\n", "summary" : "<p> Gets a sequence of JSON objects containing the name, arity, and annotations\n of all defined functions that are available to be called form within an\n expression.</p>", "annotation_str" : "", "annotations" : [  ], "updating" : false, "parameters" : [  ], "returns" : { "type" : "object()*", "description" : "A sequence of objects." }, "errors" : [  ] }, { "isDocumented" : true, "arity" : 0, "name" : "in-scope-attribute-declarations", "qname" : "sctx:in-scope-attribute-declarations", "signature" : "() as xs:QName* external", "description" : " Gets a sequence of QNames identifying declared attributes\n in the imported schemas.\n", "summary" : "<p> Gets a sequence of QNames identifying declared attributes\n in the imported schemas.</p>", "annotation_str" : "", "annotations" : [  ], "updating" : false, "parameters" : [  ], "returns" : { "type" : "xs:QName*", "description" : "A sequence of QNames, one for each attribute." }, "errors" : [  ] }, { "isDocumented" : true, "arity" : 0, "name" : "in-scope-attribute-groups", "qname" : "sctx:in-scope-attribute-groups", "signature" : "() as xs:QName* external", "description" : " Gets a sequence of QNames identifying declared in-scope\n schema attribute groups.\n", "summary" : "<p> Gets a sequence of QNames identifying declared in-scope\n schema attribute groups.</p>", "annotation_str" : "", "annotations" : [  ], "updating" : false, "parameters" : [  ], "returns" : { "type" : "xs:QName*", "description" : "A sequence of QNames, one for each attribute group." }, "errors" : [  ] }, { "isDocumented" : true, "arity" : 0, "name" : "in-scope-element-declarations", "qname" : "sctx:in-scope-element-declarations", "signature" : "() as xs:QName* external", "description" : " Gets a sequence of QNames identifying declared elements\n in the imported schemas.\n", "summary" : "<p> Gets a sequence of QNames identifying declared elements\n in the imported schemas.</p>", "annotation_str" : "", "annotations" : [  ], "updating" : false, "parameters" : [  ], "returns" : { "type" : "xs:QName*", "description" : "A sequence of QNames, one for each declared element." }, "errors" : [  ] }, { "isDocumented" : true, "arity" : 0, "name" : "in-scope-element-groups", "qname" : "sctx:in-scope-element-groups", "signature" : "() as xs:QName* external", "description" : " Gets a sequence of QNames identifying declared in-scope\n schema element groups.\n", "summary" : "<p> Gets a sequence of QNames identifying declared in-scope\n schema element groups.</p>", "annotation_str" : "", "annotations" : [  ], "updating" : false, "parameters" : [  ], "returns" : { "type" : "xs:QName*", "description" : "A sequence of QNames, one for each element group." }, "errors" : [  ] }, { "isDocumented" : true, "arity" : 0, "name" : "in-scope-schema-types", "qname" : "sctx:in-scope-schema-types", "signature" : "() as xs:QName* external", "description" : " Gets a sequence of QNames identifying in-scope schema types\n including all the predefined schema types and all definitions\n found in imported schemas.\n", "summary" : "<p> Gets a sequence of QNames identifying in-scope schema types\n including all the predefined schema types and all definitions\n found in imported schemas.</p>", "annotation_str" : "", "annotations" : [  ], "updating" : false, "parameters" : [  ], "returns" : { "type" : "xs:QName*", "description" : "A sequence of QNames, one for each defined type." }, "errors" : [  ] }, { "isDocumented" : true, "arity" : 0, "name" : "in-scope-variables", "qname" : "sctx:in-scope-variables", "signature" : "() as xs:QName* external", "description" : " Gets a sequence of QNames identifying declared variables\n from the static context.\n", "summary" : "<p> Gets a sequence of QNames identifying declared variables\n from the static context.</p>", "annotation_str" : "", "annotations" : [  ], "updating" : false, "parameters" : [  ], "returns" : { "type" : "xs:QName*", "description" : "A sequence of QNames, one for each variable." }, "errors" : [  ] }, { "isDocumented" : true, "arity" : 1, "name" : "option", "qname" : "sctx:option", "signature" : "($name as xs:QName) as xs:string? external", "description" : " Gets the value of an option that is declared in the prolog of the module.\n", "summary" : "<p> Gets the value of an option that is declared in the prolog of the module.</p>", "annotation_str" : "", "annotations" : [  ], "updating" : false, "parameters" : [ { "name" : "name", "type" : "xs:QName", "occurrence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> the name of the option value to retrieve</div>" } ], "returns" : { "type" : "xs:string?", "description" : "the value of the option if contained in the static context or the empty sequence otherwise." }, "errors" : [  ] }, { "isDocumented" : true, "arity" : 0, "name" : "ordering-mode", "qname" : "sctx:ordering-mode", "signature" : "() as xs:string external", "description" : " Gets the ordering mode that affects the ordering of the result sequences\n returned by certain expressions.\n", "summary" : "<p> Gets the ordering mode that affects the ordering of the result sequences\n returned by certain expressions.</p>", "annotation_str" : "", "annotations" : [  ], "updating" : false, "parameters" : [  ], "returns" : { "type" : "xs:string", "description" : "Either <code xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">ordered</code> or <code xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">unordered</code>." }, "errors" : [  ] }, { "isDocumented" : true, "arity" : 0, "name" : "statically-known-collations", "qname" : "sctx:statically-known-collations", "signature" : "() as xs:anyURI* external", "description" : " Gets a sequence that contains the statically known collations.\n", "summary" : "<p> Gets a sequence that contains the statically known collations.</p>", "annotation_str" : "", "annotations" : [  ], "updating" : false, "parameters" : [  ], "returns" : { "type" : "xs:anyURI*", "description" : "The sequence of collations." }, "errors" : [  ] }, { "isDocumented" : true, "arity" : 1, "name" : "statically-known-document-type", "qname" : "sctx:statically-known-document-type", "signature" : "($document as xs:string) as xs:QName external", "description" : " For the given document, returns the static type of its root node.\n", "summary" : "<p> For the given document, returns the static type of its root node.</p>", "annotation_str" : "", "annotations" : [  ], "updating" : false, "parameters" : [ { "name" : "document", "type" : "xs:string", "occurrence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> A URI of a document.</div>" } ], "returns" : { "type" : "xs:QName", "description" : "The static type of the given document." }, "errors" : [  ] }, { "isDocumented" : true, "arity" : 0, "name" : "statically-known-documents", "qname" : "sctx:statically-known-documents", "signature" : "() as xs:anyURI* external", "description" : " Gets a sequence that contains the URIs of all statically known documents.\n", "summary" : "<p> Gets a sequence that contains the URIs of all statically known documents.</p>", "annotation_str" : "", "annotations" : [  ], "updating" : false, "parameters" : [  ], "returns" : { "type" : "xs:anyURI*", "description" : "The sequence of document URIs." }, "errors" : [  ] }, { "isDocumented" : true, "arity" : 1, "name" : "statically-known-namespace-binding", "qname" : "sctx:statically-known-namespace-binding", "signature" : "($prefix as xs:string) as xs:string? external", "description" : " Gets the bound URI for the given prefix.\n", "summary" : "<p> Gets the bound URI for the given prefix.</p>", "annotation_str" : "", "annotations" : [  ], "updating" : false, "parameters" : [ { "name" : "prefix", "type" : "xs:string", "occurrence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> The prefix of the known namespace for which the bound URI is being requested.</div>" } ], "returns" : { "type" : "xs:string?", "description" : "The URI bound to the prefix is returned, or an empty sequence if the prefix is not known." }, "errors" : [  ] }, { "isDocumented" : true, "arity" : 0, "name" : "statically-known-namespaces", "qname" : "sctx:statically-known-namespaces", "signature" : "() as xs:string* external", "description" : " Gets a list of known statically known namespaces as prefixes\n (fn, xml, xs, xsi, etc).\n", "summary" : "<p> Gets a list of known statically known namespaces as prefixes\n (fn, xml, xs, xsi, etc).</p>", "annotation_str" : "", "annotations" : [  ], "updating" : false, "parameters" : [  ], "returns" : { "type" : "xs:string*", "description" : "A sequence of xs:strings, one for each known namespace prefix." }, "errors" : [  ] }, { "isDocumented" : true, "arity" : 0, "name" : "xpath10-compatibility-mode", "qname" : "sctx:xpath10-compatibility-mode", "signature" : "() as xs:boolean external", "description" : " Gets true or false depending on whether rules for compatibility\n with XPath 1.0 are in effect.\n XQuery set the value of this component to false.\n", "summary" : "<p> Gets true or false depending on whether rules for compatibility\n with XPath 1.</p>", "annotation_str" : "", "annotations" : [  ], "updating" : false, "parameters" : [  ], "returns" : { "type" : "xs:boolean", "description" : "The function should return <code xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">false</code>." }, "errors" : [  ] } ], "variables" : [  ] }, "http://xbrl.io/modules/bizql/profiles/sec/import" : { "ns" : "http://xbrl.io/modules/bizql/profiles/sec/import", "description" : " <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">This module provides functionality for querying XBRL Infosets of financial reports submitted to the SEC.\n </p>\n", "sees" : [  ], "authors" : [ "<xqdoc:author xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">Charles Hoffman</xqdoc:author>", "<xqdoc:author xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">Matthias Brantner</xqdoc:author>", "<xqdoc:author xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">Dennis Knochenwefel</xqdoc:author>", "<xqdoc:author xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">Ghislain Fourny</xqdoc:author>" ], "version" : null, "encoding" : "utf-8", "namespaces" : [ { "uri" : "http://xbrl.io/modules/bizql/archives", "prefix" : "archives" }, { "uri" : "http://www.28msec.com/modules/credentials", "prefix" : "credentials" }, { "uri" : "http://xbrl.io/modules/bizql/entities", "prefix" : "entities" }, { "uri" : "http://xbrl.io/modules/bizql/profiles/sec/import", "prefix" : "imp" }, { "uri" : "http://www.28msec.com/modules/mongodb", "prefix" : "m" }, { "uri" : "http://zorba.io/modules/string", "prefix" : "string" }, { "uri" : "http://zorba.io/options/versioning", "prefix" : "ver" } ], "functions" : [ { "isDocumented" : true, "arity" : 1, "name" : "disclosure-for-network-label", "qname" : "imp:disclosure-for-network-label", "signature" : "($component as object()) as object()", "description" : " <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">\n Compute the disclore for a component's network label.\n </p>\n", "summary" : "<p>  \n Compute the disclore for a component's network label.</p>", "annotation_str" : "", "annotations" : [  ], "updating" : false, "parameters" : [ { "name" : "component", "type" : "object()", "occurrence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> the component</div>" } ], "returns" : { "type" : "object()", "description" : "returns the given component ammended with the disclosure" }, "errors" : [  ] } ], "variables" : [ { "name" : "imp:disclosure-matching", "type" : "object()", "description" : " Declarative description of the disclosure matching heuristics.\n" } ] }, "http://xbrl.io/modules/bizql/profiles/sec/core" : { "ns" : "http://xbrl.io/modules/bizql/profiles/sec/core", "description" : " <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">This module provides functionality for querying XBRL Models of financial reports submitted to the SEC.\n </p>\n <h2 xmlns:xqdoc=\"http://www.xqdoc.org/1.0\" id=\"standard_options\">Standard <code>$options</code> Parameter</h2>\n <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">Most functions in the BizQL package allow an additional <code>$options</code>\n    parameter. The options parameter is a JSON object which is defined in the documentation\n    of the <a href=\"../../facts#standard_options\">facts module</a>.</p>\n <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">In addition to the option fields defined in the\n    <a href=\"../../facts#standard_options\">facts module</a> the following\n    fields can be used in the options of a function in the SEC profile:</p>\n <ul xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">\n <li><b>HideAmendedFacts</b>: if set to true (default behavior) all facts that have been\n     amended are not included in the result.</li>\n <li><b>IncludeImpliedTable</b>: set to true in order to output the implied table if\n     there is no Table (default is false).</li>\n </ul>\n", "sees" : [  ], "authors" : [ "<xqdoc:author xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">Charles Hoffman</xqdoc:author>", "<xqdoc:author xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">Matthias Brantner</xqdoc:author>", "<xqdoc:author xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">Dennis Knochenwefel</xqdoc:author>", "<xqdoc:author xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">Ghislain Fourny</xqdoc:author>" ], "version" : null, "encoding" : "utf-8", "namespaces" : [ { "uri" : "http://xbrl.io/modules/bizql/archives", "prefix" : "archives" }, { "uri" : "http://xbrl.io/modules/bizql/concept-maps", "prefix" : "concept-maps" }, { "uri" : "http://www.28msec.com/modules/credentials", "prefix" : "credentials" }, { "uri" : "http://xbrl.io/modules/bizql/entities", "prefix" : "entities" }, { "uri" : "http://xbrl.io/modules/bizql/facts", "prefix" : "facts" }, { "uri" : "http://xbrl.io/modules/bizql/hypercubes", "prefix" : "hypercubes" }, { "uri" : "http://www.28msec.com/modules/mongodb", "prefix" : "m" }, { "uri" : "http://xbrl.io/modules/bizql/report-schemas", "prefix" : "report-schemas" }, { "uri" : "http://xbrl.io/modules/bizql/profiles/sec/core", "prefix" : "sec" }, { "uri" : "http://zorba.io/modules/string", "prefix" : "string" }, { "uri" : "http://zorba.io/options/versioning", "prefix" : "ver" } ], "functions" : [ { "isDocumented" : true, "arity" : 1, "name" : "edgar-facts-for-archives", "qname" : "sec:edgar-facts-for-archives", "signature" : "($archive_or_ids as item()*) as object()*", "description" : " <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">Return all facts for concepts that are defined by one of the common\n edgar taxonomies. In particular, this function returns facts for concepts\n having one of the following prefixes:</p>\n <ul xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">\n   <li>xbrli</li>\n   <li>link</li>\n   <li>xl</li>\n   <li>xlink</li>\n   <li>xbrldt</li>\n   <li>xbrldi</li>\n   <li>nonnum</li>\n   <li>num</li>\n   <li>ref</li>\n   <li>us-gaap</li>\n   <li>dei</li>\n   <li>us-types</li>\n   <li>invest</li>\n   <li>country</li>\n   <li>currency</li>\n   <li>exch</li>\n   <li>naics</li>\n   <li>sic</li>\n   <li>stpr</li>\n   <li>rr</li>\n   <li>rr-ent</li>\n   <li>rr-cal</li>\n   <li>rr-def</li>\n   <li>rr-pre</li>\n </ul>\n", "summary" : "<p>  Return all facts for concepts that are defined by one of the common\n edgar taxonomies.</p>", "annotation_str" : "", "annotations" : [  ], "updating" : false, "parameters" : [ { "name" : "archive_or_ids", "type" : "item()", "occurrence" : "*", "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> a sequence of archive or archive IDs to filter.</div>" } ], "returns" : { "type" : "object()*", "description" : "all facts having one of the above prefixes." }, "errors" : [  ] }, { "isDocumented" : true, "arity" : 1, "name" : "end-date", "qname" : "sec:end-date", "signature" : "($filing-fact-or-id as item()?) as xs:date?", "description" : " <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">Retrieves the document end date of a filing or a fact.</p>\n", "summary" : "<p>  Retrieves the document end date of a filing or a fact.</p>", "annotation_str" : "", "annotations" : [  ], "updating" : false, "parameters" : [ { "name" : "filing-fact-or-id", "type" : "item()", "occurrence" : "?", "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> a filing, a fact, or its id.</div>" } ], "returns" : { "type" : "xs:date?", "description" : "the document end date (e.g., xs:date(\"2011-04-30\"))." }, "errors" : [  ] }, { "isDocumented" : true, "arity" : 1, "name" : "extension-facts-for-archives", "qname" : "sec:extension-facts-for-archives", "signature" : "($archive_or_ids as item()*) as object()*", "description" : " <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">Return all facts for concepts that are NOT defined by one of the common\n edgar taxonomies. In particular, this function returns facts for concepts\n having none of the prefixes listed under function\n sec:edgar-facts-for-archives.</p>\n", "summary" : "<p>  Return all facts for concepts that are NOT defined by one of the common\n edgar taxonomies.</p>", "annotation_str" : "", "annotations" : [  ], "updating" : false, "parameters" : [ { "name" : "archive_or_ids", "type" : "item()", "occurrence" : "*", "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> a sequence of archive or archive IDs to filter.</div>" } ], "returns" : { "type" : "object()*", "description" : "all facts having none of the common edgar prefixes." }, "errors" : [  ] }, { "isDocumented" : true, "arity" : 2, "name" : "fact-table-for-schema", "qname" : "sec:fact-table-for-schema", "signature" : "($schema as item(), $archives as item()*) as array()", "description" : " <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">Retrieves all facts from the supplied archives, that are relevant to the\n supplied schema, and populates them with the default dimension values\n when missing.</p>\n", "summary" : "<p>  Retrieves all facts from the supplied archives, that are relevant to the\n supplied schema, and populates them with the default dimension values\n when missing.</p>", "annotation_str" : "", "annotations" : [  ], "updating" : false, "parameters" : [ { "name" : "schema", "type" : "item()", "occurrence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> a report schema or its RID.</div>" }, { "name" : "archives", "type" : "item()", "occurrence" : "*", "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> a sequence of archives or their AIDs or $sec:ALL_OF_THEM for no filtering.</div>" } ], "returns" : { "type" : "array()", "description" : "a sequence of facts with populated dimension values." }, "errors" : [  ] }, { "isDocumented" : true, "arity" : 2, "name" : "facts-for-archives-and-concepts", "qname" : "sec:facts-for-archives-and-concepts", "signature" : "($archive_or_ids as item()*, $concepts as item()*) as object()*", "description" : " <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">Retrieves the facts associated with the supplied concepts\n from the supplied archive, that match the fiscal focus of the archive.</p>\n", "summary" : "<p>  Retrieves the facts associated with the supplied concepts\n from the supplied archive, that match the fiscal focus of the archive.</p>", "annotation_str" : "", "annotations" : [  ], "updating" : false, "parameters" : [ { "name" : "archive_or_ids", "type" : "item()", "occurrence" : "*", "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> a sequence of archives or their ids or $sec:ALL_OF_THEM for no filtering.</div>" }, { "name" : "concepts", "type" : "item()", "occurrence" : "*", "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> the concepts or $sec:ALL_OF_THEM for no filtering.</div>" } ], "returns" : { "type" : "object()*", "description" : "the latest facts associated with the supplied concept." }, "errors" : [  ] }, { "isDocumented" : true, "arity" : 3, "name" : "facts-for-archives-and-concepts", "qname" : "sec:facts-for-archives-and-concepts", "signature" : "($archive_or_ids as item()*, $concepts as item()*, $options as object()?) as object()*", "description" : " <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">Retrieves the facts associated with the supplied concepts\n from the supplied archive, that match the fiscal focus of the archive.</p>\n", "summary" : "<p>  Retrieves the facts associated with the supplied concepts\n from the supplied archive, that match the fiscal focus of the archive.</p>", "annotation_str" : "", "annotations" : [  ], "updating" : false, "parameters" : [ { "name" : "archive_or_ids", "type" : "item()", "occurrence" : "*", "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> a sequence of archives or their ids or $sec:ALL_OF_THEM for no filtering.</div>" }, { "name" : "concepts", "type" : "item()", "occurrence" : "*", "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> the concepts or $sec:ALL_OF_THEM for no filtering.</div>" }, { "name" : "options", "type" : "object()", "occurrence" : "?", "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> <a href=\"#standard_options\">standard SEC BizQL options</a>.</div>" } ], "returns" : { "type" : "object()*", "description" : "the latest facts associated with the supplied concept." }, "errors" : [  ] }, { "isDocumented" : true, "arity" : 2, "name" : "facts-for-schema", "qname" : "sec:facts-for-schema", "signature" : "($schema as item(), $archives as item()*) as item()*", "description" : " <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">Retrieves all facts from the supplied archives, that are relevant to the\n supplied schema and to the fiscal focus, and populates\n them with the default dimension values when missing.</p>\n", "summary" : "<p>  Retrieves all facts from the supplied archives, that are relevant to the\n supplied schema and to the fiscal focus, and populates\n them with the default dimension values when missing.</p>", "annotation_str" : "", "annotations" : [  ], "updating" : false, "parameters" : [ { "name" : "schema", "type" : "item()", "occurrence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> a schema.</div>" }, { "name" : "archives", "type" : "item()", "occurrence" : "*", "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> a sequence of archives or their AIDs or $sec:ALL_OF_THEM for no filtering.</div>" } ], "returns" : { "type" : "item()*", "description" : "a sequence of facts with populated dimension values." }, "errors" : [  ] }, { "isDocumented" : true, "arity" : 1, "name" : "hide-amended-facts", "qname" : "sec:hide-amended-facts", "signature" : "($facts as object()*) as object()*", "description" : " <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">Filters a list of facts and returns only the latest amending facts.\n    Accordingly, all amended facts are filtered out.</p>\n", "summary" : "<p>  Filters a list of facts and returns only the latest amending facts.</p>", "annotation_str" : "", "annotations" : [  ], "updating" : false, "parameters" : [ { "name" : "facts", "type" : "object()", "occurrence" : "*", "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> a list of facts.</div>" } ], "returns" : { "type" : "object()*", "description" : "a sequence of facts without amended facts." }, "errors" : [  ] }, { "isDocumented" : true, "arity" : 2, "name" : "populate-schema-with-facts", "qname" : "sec:populate-schema-with-facts", "signature" : "($schema as item(), $archives as item()*) as object()*", "description" : " <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">Populates a concept-tree network with all facts from the supplied archives,\n that are relevant to the\n supplied schema. Default dimension values are added to the facts\n when missing.</p>\n", "summary" : "<p>  Populates a concept-tree network with all facts from the supplied archives,\n that are relevant to the\n supplied schema.</p>", "annotation_str" : "", "annotations" : [  ], "updating" : false, "parameters" : [ { "name" : "schema", "type" : "item()", "occurrence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> a report schema or its RID.</div>" }, { "name" : "archives", "type" : "item()", "occurrence" : "*", "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> a sequence of archives or their AIDs.</div>" } ], "returns" : { "type" : "object()*", "description" : "a sequence of facts with populated dimension values." }, "errors" : [  ] }, { "isDocumented" : true, "arity" : 3, "name" : "populate-schema-with-facts", "qname" : "sec:populate-schema-with-facts", "signature" : "($schema as item(), $archives as item()*, $options as object()?) as object()*", "description" : " <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">Populates a concept-tree network with all facts from the supplied archives,\n that are relevant to the\n supplied schema. Default dimension values are added to the facts\n when missing.</p>\n", "summary" : "<p>  Populates a concept-tree network with all facts from the supplied archives,\n that are relevant to the\n supplied schema.</p>", "annotation_str" : "", "annotations" : [  ], "updating" : false, "parameters" : [ { "name" : "schema", "type" : "item()", "occurrence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> a report schema or its RID.</div>" }, { "name" : "archives", "type" : "item()", "occurrence" : "*", "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> a sequence of archives or their AIDs or $sec:ALL_OF_THEM for no filtering.</div>" }, { "name" : "options", "type" : "object()", "occurrence" : "?", "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> <a href=\"#standard_options\">standard SEC BizQL options</a>.</div>" } ], "returns" : { "type" : "object()*", "description" : "a sequence of facts with populated dimension values." }, "errors" : [  ] } ], "variables" : [ { "name" : "sec:CIK", "type" : "xs:string", "description" : " Scheme for the SEC entity identifiers (i.e. http://www.sec.gov/CIK)\n" }, { "name" : "sec:ALL_OF_THEM", "type" : "boolean", "description" : " Joker value for all archives or all concepts.\n" }, { "name" : "sec:EDGAR_PREFIXES", "type" : "item()*", "description" : " All prefixes pre-declared in SEC's EDGAR.\n" } ] }, "http://zorba.io/modules/excel/logical" : { "ns" : "http://zorba.io/modules/excel/logical", "description" : " This is a library module offering the same set of functions\n defined by Microsoft Excel, under Logical Functions.\n", "sees" : [ "<xqdoc:see xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"><a href=\"http://office.microsoft.com/en-us/excel/CH062528271033.aspx\" target=\"_blank\">Excel Documentation: Logical Functions</a></xqdoc:see>" ], "authors" : [ "<xqdoc:author xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">Sorin Nasoi</xqdoc:author>" ], "version" : null, "encoding" : "utf-8", "namespaces" : [ { "uri" : "http://zorba.io/modules/excel/errors", "prefix" : "excel-err" }, { "uri" : "http://zorba.io/modules/excel/logical", "prefix" : "excel-logical" }, { "uri" : "http://zorba.io/options/versioning", "prefix" : "ver" } ], "functions" : [ { "isDocumented" : true, "arity" : 1, "name" : "and", "qname" : "excel-logical:and", "signature" : "($values as xs:anyAtomicType*) as xs:boolean", "description" : " Returns TRUE if all its arguments are TRUE; FALSE if one or more arguments are FALSE.\n", "summary" : "<p> Returns TRUE if all its arguments are TRUE; FALSE if one or more arguments are FALSE.</p>", "annotation_str" : "", "annotations" : [  ], "updating" : false, "parameters" : [ { "name" : "values", "type" : "xs:anyAtomicType", "occurrence" : "*", "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> the sequence of arguments.</div>" } ], "returns" : { "type" : "xs:boolean", "description" : "TRUE if all its arguments are TRUE; FALSE if one or more arguments are FALSE." }, "errors" : [ "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">excel-err:Value provided sequence is empty.</xqdoc:error>" ] }, { "isDocumented" : true, "arity" : 2, "name" : "and", "qname" : "excel-logical:and", "signature" : "($arg1 as xs:anyAtomicType, $arg2 as xs:anyAtomicType) as xs:boolean", "description" : " Returns TRUE if all its arguments are TRUE; FALSE if one or more arguments are FALSE.\n", "summary" : "<p> Returns TRUE if all its arguments are TRUE; FALSE if one or more arguments are FALSE.</p>", "annotation_str" : "", "annotations" : [  ], "updating" : false, "parameters" : [ { "name" : "arg1", "type" : "xs:anyAtomicType", "occurrence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> the first argument.</div>" }, { "name" : "arg2", "type" : "xs:anyAtomicType", "occurrence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> the second argument.</div>" } ], "returns" : { "type" : "xs:boolean", "description" : "TRUE if all its arguments are TRUE; FALSE if one or more arguments are FALSE." }, "errors" : [  ] }, { "isDocumented" : true, "arity" : 3, "name" : "if", "qname" : "excel-logical:if", "signature" : "($logical_test as xs:boolean, $value_if_true as item()*, $value_if_false as item()*) as item()*", "description" : " Returns one value if a condition you specify evaluates to TRUE and another value if it evaluates to FALSE.\n", "summary" : "<p> Returns one value if a condition you specify evaluates to TRUE and another value if it evaluates to FALSE.</p>", "annotation_str" : "", "annotations" : [  ], "updating" : false, "parameters" : [ { "name" : "logical_test", "type" : "xs:boolean", "occurrence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> is any value or expression that can be evaluated to TRUE or FALSE.</div>" }, { "name" : "value_if_true", "type" : "item()", "occurrence" : "*", "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> the value that is returned if logical_test is TRUE.</div>" }, { "name" : "value_if_false", "type" : "item()", "occurrence" : "*", "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> the value that is returned if logical_test is FALSE.</div>" } ], "returns" : { "type" : "item()*", "description" : "One value if a condition you specify evaluates to TRUE and another value if it evaluates to FALSE." }, "errors" : [  ] }, { "isDocumented" : true, "arity" : 1, "name" : "or", "qname" : "excel-logical:or", "signature" : "($values as xs:anyAtomicType*) as xs:boolean", "description" : " Returns TRUE if any argument is TRUE; FALSE if all arguments are FALSE.\n", "summary" : "<p> Returns TRUE if any argument is TRUE; FALSE if all arguments are FALSE.</p>", "annotation_str" : "", "annotations" : [  ], "updating" : false, "parameters" : [ { "name" : "values", "type" : "xs:anyAtomicType", "occurrence" : "*", "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> the sequence of arguments.</div>" } ], "returns" : { "type" : "xs:boolean", "description" : "TRUE if any argument is TRUE; FALSE if all arguments are FALSE." }, "errors" : [ "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">excel-err:Value provided sequence is empty.</xqdoc:error>" ] }, { "isDocumented" : true, "arity" : 2, "name" : "or", "qname" : "excel-logical:or", "signature" : "($arg1 as xs:anyAtomicType, $arg2 as xs:anyAtomicType) as xs:boolean", "description" : " Returns TRUE if any argument is TRUE; FALSE if all arguments are FALSE.\n", "summary" : "<p> Returns TRUE if any argument is TRUE; FALSE if all arguments are FALSE.</p>", "annotation_str" : "", "annotations" : [  ], "updating" : false, "parameters" : [ { "name" : "arg1", "type" : "xs:anyAtomicType", "occurrence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> the first argument.</div>" }, { "name" : "arg2", "type" : "xs:anyAtomicType", "occurrence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> the second argument.</div>" } ], "returns" : { "type" : "xs:boolean", "description" : "TRUE if any argument is TRUE; FALSE if all arguments are FALSE." }, "errors" : [  ] } ], "variables" : [  ] }, "http://www.28msec.com/modules/sequence" : { "ns" : "http://www.28msec.com/modules/sequence", "description" : " The sequence module allows you to generate consecutive\n application-unique xs:integer ids. This is required e.g. in accounting\n applications as some legislations require consecutive invoice numbers.\n", "sees" : [  ], "authors" : [ "<xqdoc:author xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">28msec</xqdoc:author>" ], "version" : null, "encoding" : "utf-8", "namespaces" : [ { "uri" : "http://zorba.io/annotations", "prefix" : "an" }, { "uri" : "http://zorba.io/modules/store/static/collections/dml", "prefix" : "cdml" }, { "uri" : "http://zorba.io/modules/store/static/indexes/dml", "prefix" : "idml" }, { "uri" : "http://www.28msec.com/modules/lock", "prefix" : "lock" }, { "uri" : "http://www.28msec.com/modules/sequence", "prefix" : "seq" }, { "uri" : "http://www.28msec.com/modules/sleep", "prefix" : "sleep" }, { "uri" : "http://zorba.io/options/versioning", "prefix" : "ver" } ], "functions" : [ { "isDocumented" : true, "arity" : 1, "name" : "id", "qname" : "seq:id", "signature" : "($uri as xs:string) as xs:integer", "description" : " Returns a unique (sequentially incremented) id for the\n uri specified as parameter.\n Here the function is used to create consecutive invoice numbers:\n <pre xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">\n if (order:fulfilled($order-id))\n then\n   {\n     variable $invoice-id := seq:id(\"invoice\");\n     invoice:create($invoice-id, $order-id);\n   }\n else\n   ...\n </pre>\n", "summary" : "<p> Returns a unique (sequentially incremented) id for the\n uri specified as parameter.</p>", "annotation_str" : " %an:sequential", "annotations" : [ { "prefix" : "an", "ns" : "http://zorba.io/annotations", "name" : "sequential", "value" : "" } ], "updating" : false, "parameters" : [ { "name" : "uri", "type" : "xs:string", "occurrence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> The name of the sequence counter as uri.</div>" } ], "returns" : { "type" : "xs:integer", "description" : "A sequentially incremented id." }, "errors" : [  ] }, { "isDocumented" : true, "arity" : 1, "name" : "reset", "qname" : "seq:reset", "signature" : "($uri as xs:string) as empty-sequence()", "description" : " Resets the unique (sequentially incremented) id generation\n for the uri specified as parameter.\n", "summary" : "<p> Resets the unique (sequentially incremented) id generation\n for the uri specified as parameter.</p>", "annotation_str" : " %an:sequential", "annotations" : [ { "prefix" : "an", "ns" : "http://zorba.io/annotations", "name" : "sequential", "value" : "" } ], "updating" : false, "parameters" : [ { "name" : "uri", "type" : "xs:string", "occurrence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> The name of the sequence counter as uri.</div>" } ], "returns" : { "type" : "empty-sequence()", "description" : "empty-sequence()" }, "errors" : [  ] }, { "isDocumented" : true, "arity" : 1, "name" : "value", "qname" : "seq:value", "signature" : "($uri as xs:string) as xs:integer", "description" : " Returns the id for the uri specified as parameter without incrementing it.\n", "summary" : "<p> Returns the id for the uri specified as parameter without incrementing it.</p>", "annotation_str" : " %an:sequential", "annotations" : [ { "prefix" : "an", "ns" : "http://zorba.io/annotations", "name" : "sequential", "value" : "" } ], "updating" : false, "parameters" : [ { "name" : "uri", "type" : "xs:string", "occurrence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> The name of the sequence counter as uri.</div>" } ], "returns" : { "type" : "xs:integer", "description" : "The current value" }, "errors" : [ "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">seq:not-found if no counter with the given $uri was found</xqdoc:error>" ] } ], "variables" : [ { "name" : "seq:counters", "type" : "item()*", "description" : " The QName for the counters collection.\n" }, { "name" : "seq:counters-by-uri", "type" : "item()*", "description" : " The QName for the counters-by-uri collection.\n" } ] }, "http://api.28.io/databrowser" : { "ns" : "http://api.28.io/databrowser", "description" : "", "sees" : [  ], "authors" : [  ], "version" : null, "encoding" : null, "namespaces" : [ { "uri" : "", "prefix" : "an" }, { "uri" : "http://api.28.io/databrowser", "prefix" : "api" }, { "uri" : "http://zorba.io/modules/base64", "prefix" : "base64" }, { "uri" : "http://zorba.io/modules/store/static/collections/dml", "prefix" : "dml" }, { "uri" : "http://www.zorba-xquery.com/extensions", "prefix" : "ext" }, { "uri" : "http://www.functx.com", "prefix" : "functx" }, { "uri" : "http://expath.org/ns/http-client", "prefix" : "http" }, { "uri" : "http://www.zorba-xquery.com/modules/http-client", "prefix" : "http-client" }, { "uri" : "http://zorba.io/modules/xml-options", "prefix" : "opt" }, { "uri" : "http://www.28msec.com/modules/project", "prefix" : "project" }, { "uri" : "http://zorba.io/modules/reflection", "prefix" : "r" }, { "uri" : "http://zorba.io/modules/reference", "prefix" : "ref" }, { "uri" : "http://www.28msec.com/modules/http/request", "prefix" : "req" }, { "uri" : "http://www.28msec.com/modules/http/response", "prefix" : "res" }, { "uri" : "http://zorba.io/modules/xml", "prefix" : "xmlmod" }, { "uri" : "http://zorba.io/errors", "prefix" : "zerr" } ], "functions" : [ { "isDocumented" : false, "arity" : 1, "name" : "collection", "qname" : "api:collection", "signature" : "($name as xs:string)", "description" : "", "summary" : "", "annotation_str" : " %an:sequential", "annotations" : [ { "prefix" : "an", "ns" : "", "name" : "sequential", "value" : "" } ], "updating" : false, "parameters" : [ { "name" : "name", "type" : "xs:string", "occurrence" : null, "description" : "" } ], "returns" : { "type" : null, "description" : "" }, "errors" : [  ] }, { "isDocumented" : false, "arity" : 0, "name" : "delete", "qname" : "api:delete", "signature" : "()", "description" : "", "summary" : "", "annotation_str" : " %an:sequential", "annotations" : [ { "prefix" : "an", "ns" : "", "name" : "sequential", "value" : "" } ], "updating" : false, "parameters" : [  ], "returns" : { "type" : null, "description" : "" }, "errors" : [  ] }, { "isDocumented" : true, "arity" : 0, "name" : "dispatch", "qname" : "api:dispatch", "signature" : "()", "description" : " Data Browser API dispatched.\n Handles API authorization to the portal and dispatching.\n", "summary" : "<p> Data Browser API dispatched.</p>", "annotation_str" : " %an:sequential", "annotations" : [ { "prefix" : "an", "ns" : "", "name" : "sequential", "value" : "" } ], "updating" : false, "parameters" : [  ], "returns" : { "type" : null, "description" : "" }, "errors" : [  ] }, { "isDocumented" : false, "arity" : 0, "name" : "edit", "qname" : "api:edit", "signature" : "()", "description" : "", "summary" : "", "annotation_str" : " %an:sequential", "annotations" : [ { "prefix" : "an", "ns" : "", "name" : "sequential", "value" : "" } ], "updating" : false, "parameters" : [  ], "returns" : { "type" : null, "description" : "" }, "errors" : [  ] }, { "isDocumented" : false, "arity" : 0, "name" : "options", "qname" : "api:options", "signature" : "()", "description" : "", "summary" : "", "annotation_str" : " %an:sequential", "annotations" : [ { "prefix" : "an", "ns" : "", "name" : "sequential", "value" : "" } ], "updating" : false, "parameters" : [  ], "returns" : { "type" : null, "description" : "" }, "errors" : [  ] }, { "isDocumented" : false, "arity" : 1, "name" : "run", "qname" : "api:run", "signature" : "($sequential as xs:boolean) as object()", "description" : "", "summary" : "", "annotation_str" : " %an:sequential", "annotations" : [ { "prefix" : "an", "ns" : "", "name" : "sequential", "value" : "" } ], "updating" : false, "parameters" : [ { "name" : "sequential", "type" : "xs:boolean", "occurrence" : null, "description" : "" } ], "returns" : { "type" : "object()", "description" : "" }, "errors" : [  ] }, { "isDocumented" : false, "arity" : 1, "name" : "serialize", "qname" : "api:serialize", "signature" : "($items as item()*) as object()", "description" : "", "summary" : "", "annotation_str" : "", "annotations" : [  ], "updating" : false, "parameters" : [ { "name" : "items", "type" : "item()", "occurrence" : "*", "description" : "" } ], "returns" : { "type" : "object()", "description" : "" }, "errors" : [  ] }, { "isDocumented" : false, "arity" : 0, "name" : "upload", "qname" : "api:upload", "signature" : "()", "description" : "", "summary" : "", "annotation_str" : " %an:sequential", "annotations" : [ { "prefix" : "an", "ns" : "", "name" : "sequential", "value" : "" } ], "updating" : false, "parameters" : [  ], "returns" : { "type" : null, "description" : "" }, "errors" : [  ] } ], "variables" : [  ] }, "http://xbrl.io/modules/bizql/footnotes" : { "ns" : "http://xbrl.io/modules/bizql/footnotes", "description" : " <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">This module provides functions for retrieving XBRL footnotes\n (see section 4.11 Footnotes of the XBRL 2.1 specification).</p>\n", "sees" : [  ], "authors" : [ "<xqdoc:author xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">Charles Hoffman</xqdoc:author>", "<xqdoc:author xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">Matthias Brantner</xqdoc:author>", "<xqdoc:author xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">Dennis Knochenwefel</xqdoc:author>", "<xqdoc:author xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">Ghislain Fourny</xqdoc:author>" ], "version" : null, "encoding" : "utf-8", "namespaces" : [ { "uri" : "http://xbrl.io/modules/bizql/archives", "prefix" : "archives" }, { "uri" : "http://www.28msec.com/modules/credentials", "prefix" : "credentials" }, { "uri" : "http://xbrl.io/modules/bizql/entities", "prefix" : "entities" }, { "uri" : "http://xbrl.io/modules/bizql/facts", "prefix" : "facts" }, { "uri" : "http://xbrl.io/modules/bizql/footnotes", "prefix" : "footnotes" }, { "uri" : "http://www.28msec.com/modules/mongodb/types", "prefix" : "m" }, { "uri" : "http://www.28msec.com/modules/mongodb", "prefix" : "mongo" }, { "uri" : "http://zorba.io/modules/string", "prefix" : "string" }, { "uri" : "http://zorba.io/options/versioning", "prefix" : "ver" } ], "functions" : [ { "isDocumented" : true, "arity" : 1, "name" : "fnid", "qname" : "footnotes:fnid", "signature" : "($footnote-or-id as item()) as atomic", "description" : " <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">Converts the input to a normalized footnote id (FNID). The input\n can be either an FNID, or a footnote object which contains an _id.</p>\n", "summary" : "<p>  Converts the input to a normalized footnote id (FNID).</p>", "annotation_str" : "", "annotations" : [  ], "updating" : false, "parameters" : [ { "name" : "footnote-or-id", "type" : "item()", "occurrence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> an footnote object or FNID.</div>" } ], "returns" : { "type" : "atomic", "description" : "the normalized FNID." }, "errors" : [ "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">footnotes:INVALID-PARAMETER if the FNID or footnote is not valid.</xqdoc:error>" ] }, { "isDocumented" : true, "arity" : 1, "name" : "footnotes-for-archives", "qname" : "footnotes:footnotes-for-archives", "signature" : "($archive-or-ids as item()*) as object()*", "description" : " <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">Return all footnotes reported within a given archive.</p>\n", "summary" : "<p>  Return all footnotes reported within a given archive.</p>", "annotation_str" : "", "annotations" : [  ], "updating" : false, "parameters" : [ { "name" : "archive-or-ids", "type" : "item()", "occurrence" : "*", "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> a sequence of archives or AIDs to filter.</div>" } ], "returns" : { "type" : "object()*", "description" : "all footnotes reported in these archives." }, "errors" : [  ] }, { "isDocumented" : true, "arity" : 1, "name" : "footnotes-for-facts", "qname" : "footnotes:footnotes-for-facts", "signature" : "($facts-or-ids as item()*) as object()*", "description" : " <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">Return all footnotes associated with the given facts.</p>\n", "summary" : "<p>  Return all footnotes associated with the given facts.</p>", "annotation_str" : "", "annotations" : [  ], "updating" : false, "parameters" : [ { "name" : "facts-or-ids", "type" : "item()", "occurrence" : "*", "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> a sequence of facts or fact IDs to filter</div>" } ], "returns" : { "type" : "object()*", "description" : "all footnotes associated with these facts." }, "errors" : [  ] }, { "isDocumented" : true, "arity" : 2, "name" : "footnotes-for-facts", "qname" : "footnotes:footnotes-for-facts", "signature" : "($facts-or-ids as item()*, $options as object()?) as object()*", "description" : " <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">Return all footnotes associated with the given facts.</p>\n", "summary" : "<p>  Return all footnotes associated with the given facts.</p>", "annotation_str" : "", "annotations" : [  ], "updating" : false, "parameters" : [ { "name" : "facts-or-ids", "type" : "item()", "occurrence" : "*", "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> a sequence of facts or fact IDs to filter</div>" }, { "name" : "options", "type" : "object()", "occurrence" : "?", "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> <a href=\"facts#standard_options\">standard fact retrieving options</a>.</div>" } ], "returns" : { "type" : "object()*", "description" : "all footnotes associated with these facts." }, "errors" : [  ] }, { "isDocumented" : true, "arity" : 1, "name" : "footnotes-search", "qname" : "footnotes:footnotes-search", "signature" : "($search as string) as object()*", "description" : " <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">Return all footnotes that match the given search term.</p>\n", "summary" : "<p>  Return all footnotes that match the given search term.</p>", "annotation_str" : "", "annotations" : [  ], "updating" : false, "parameters" : [ { "name" : "search", "type" : "string", "occurrence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> the search query</div>" } ], "returns" : { "type" : "object()*", "description" : "all footnotes matching the given search query" }, "errors" : [  ] }, { "isDocumented" : true, "arity" : 0, "name" : "footnotes", "qname" : "footnotes:footnotes", "signature" : "() as object()*", "description" : " <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">Return all footnotes.</p>\n", "summary" : "<p>  Return all footnotes.</p>", "annotation_str" : "", "annotations" : [  ], "updating" : false, "parameters" : [  ], "returns" : { "type" : "object()*", "description" : "all footnotes." }, "errors" : [  ] }, { "isDocumented" : true, "arity" : 1, "name" : "footnotes", "qname" : "footnotes:footnotes", "signature" : "($footnote-or-ids as item()*) as object()?", "description" : " <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">Return the footnote with the given FNIDs.</p>\n", "summary" : "<p>  Return the footnote with the given FNIDs.</p>", "annotation_str" : "", "annotations" : [  ], "updating" : false, "parameters" : [ { "name" : "footnote-or-ids", "type" : "item()", "occurrence" : "*", "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> the FNIDs or the footnotes themselves.</div>" } ], "returns" : { "type" : "object()?", "description" : "the footnotes with the given FNIDs the empty sequence if no footnote was found or if the input is an empty sequence." }, "errors" : [  ] } ], "variables" : [ { "name" : "footnotes:col", "type" : "string", "description" : " Name of the collection the footnotes are stored in.\n" }, { "name" : "footnotes:ARCHIVE", "type" : "string", "description" : " Name of the field that points to the archive.\n" }, { "name" : "footnotes:FACTS", "type" : "string", "description" : " Name of the field that points to the facts linked to this footnote.\n" }, { "name" : "footnotes:LANG", "type" : "string", "description" : " Name of the field that holds the language attribute of the footnote.\n" } ] }, "http://zorba.io/modules/store/static/indexes/dml" : { "ns" : "http://zorba.io/modules/store/static/indexes/dml", "description" : " This module defines a set of functions to probe and refresh indexes which are\n declared in the prolog of a module.\n <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"/>\n This module is part of\n <a xmlns:xqdoc=\"http://www.xqdoc.org/1.0\" href=\"../zorba/xqddf.html\">Zorba's XQuery Data Definition Facility</a>.\n All the indexes managed by this module have to be pre-declared in the prolog\n of a library module.\n Please refer to the\n <a xmlns:xqdoc=\"http://www.xqdoc.org/1.0\" href=\"../zorba/data_lifecycle.html\">general documentation</a>\n for more information and examples.\n", "sees" : [ "<xqdoc:see xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"><a href=\"../zorba/data_lifecycle.html\">Data Lifecycle</a></xqdoc:see>", "<xqdoc:see xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"><a href=\"../zorba/xqddf.html\">XQuery Data Definition Facility</a></xqdoc:see>", "<xqdoc:see xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">http://zorba.io/modules/store/static/indexes/ddl</xqdoc:see>", "<xqdoc:see xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">http://zorba.io/modules/store/static/collections/dml</xqdoc:see>", "<xqdoc:see xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">http://zorba.io/modules/store/static/collections/ddl</xqdoc:see>", "<xqdoc:see xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">http://zorba.io/modules/store/static/integrity-constraints/ddl</xqdoc:see>", "<xqdoc:see xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">http://zorba.io/modules/store/static/integrity-constraints/dml</xqdoc:see>", "<xqdoc:see xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">http://zorba.io/errors</xqdoc:see>" ], "authors" : [ "<xqdoc:author xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">Zorba Team</xqdoc:author>" ], "version" : null, "encoding" : "utf-8", "namespaces" : [ { "uri" : "http://zorba.io/annotations", "prefix" : "an" }, { "uri" : "http://zorba.io/modules/store/static/indexes/dml", "prefix" : "idml" }, { "uri" : "http://zorba.io/options/versioning", "prefix" : "ver" }, { "uri" : "http://zorba.io/errors", "prefix" : "zerr" } ], "functions" : [ { "isDocumented" : true, "arity" : 1, "name" : "keys", "qname" : "idml:keys", "signature" : "($name as xs:QName) as node()* external", "description" : " Gets a sequence of all keys contained in the index with the given name.\n Each element has the following structure:\n  <pre xmlns:xqdoc=\"http://www.xqdoc.org/1.0\" class=\"brush: xml;\">\n   &lt;key xmlns=\"http://zorba.io/modules/store/static/indexes/dml\"&gt;\n     &lt;attribute value=\"key1_value\"/&gt;\n     &lt;attribute value=\"key2_value\"/&gt;\n     &lt;attribute value=\"key3_value\"/&gt;\n   &lt;/key&gt;\n  </pre>\n Note that the order of the attribute elements reflects the order of\n the keys in the index specification. Also note that the values in\n these attributes have the type that is declared in the corresponding\n index specification.\n", "summary" : "<p> Gets a sequence of all keys contained in the index with the given name.</p>", "annotation_str" : "", "annotations" : [  ], "updating" : false, "parameters" : [ { "name" : "name", "type" : "xs:QName", "occurrence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> The name of the index to get the keys for.</div>" } ], "returns" : { "type" : "node()*", "description" : "A sequence of elements comprising the keys in the index." }, "errors" : [ "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">zerr:ZDDY0021 if the index was not declared.</xqdoc:error>", "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">zerr:ZDDY0023 if the index does not exist.</xqdoc:error>" ] }, { "isDocumented" : true, "arity" : 2, "name" : "probe-index-point-general", "qname" : "idml:probe-index-point-general", "signature" : "($name as xs:QName, $key as xs:anyAtomicType*) as node()* external", "description" : " Gets from an index the domain nodes associated by general equality with a\n given <em xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">search sequence </em>.\n The search sequence consists of an arbitrary number of <em xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">search keys</em>\n where each search key is an atomic item.\n The function is supported by general indexes only.\n", "summary" : "<p> Gets from an index the domain nodes associated by general equality with a\n given  search sequence  .</p>", "annotation_str" : "", "annotations" : [  ], "updating" : false, "parameters" : [ { "name" : "name", "type" : "xs:QName", "occurrence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> The name of the index to probe.</div>" }, { "name" : "key", "type" : "xs:anyAtomicType", "occurrence" : "*", "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> The search sequence.</div>" } ], "returns" : { "type" : "node()*", "description" : "The set of domain nodes for which the following XQuery expression returns true: <pre xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> $keys = $node/keyExpr </pre> where keyExpr is the expression specified in the keyspec of the index (remember that for general indexes, there can be only one keyspec)." }, "errors" : [ "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">err:XPTY0004 if the search sequence contains a search key whose type does not match the sequence type specified in the keyspec of the index.</xqdoc:error>", "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">zerr:ZDDY0021 if the index with name $name is not declared.</xqdoc:error>", "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">zerr:ZDDY0023 if the index with name $name does not exist.</xqdoc:error>", "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">zerr:ZDDY0029 if the index is not general.</xqdoc:error>" ] }, { "isDocumented" : true, "arity" : 3, "name" : "probe-index-point-value-skip", "qname" : "idml:probe-index-point-value-skip", "signature" : "($name as xs:QName, $skip as xs:integer, $key_i as xs:anyAtomicType?) as node()* external", "description" : " This is an extension of the <code xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">probe-index-point-value()</code> function\n in that it allows index items to be skipped.\n", "summary" : "<p> This is an extension of the  probe-index-point-value()  function\n in that it allows index items to be skipped.</p>", "annotation_str" : " %an:variadic", "annotations" : [ { "prefix" : "an", "ns" : "http://zorba.io/annotations", "name" : "variadic", "value" : "" } ], "updating" : false, "parameters" : [ { "name" : "name", "type" : "xs:QName", "occurrence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> The name of the index to probe.</div>" }, { "name" : "skip", "type" : "xs:integer", "occurrence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> The number of index items to skip.</div>" }, { "name" : "key_i", "type" : "xs:anyAtomicType", "occurrence" : "?", "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> The search keys used to probe the index with. The i-th search key corresponds to the i-th key expression in the index declaration.</div>" } ], "returns" : { "type" : "node()*", "description" : "The set of domain nodes that satisfy the search condition." }, "errors" : [ "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">zerr:ZDDY0021 if the index is not declared.</xqdoc:error>", "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">zerr:ZDDY0023 if the index does not exist.</xqdoc:error>", "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">zerr:ZDDY0025 if the number of search keys passed as arguments is not the same as the number of keys declared for the index.</xqdoc:error>", "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">err:XPTY0004 if a non-empty seach key is given whose type does not match the sequence type specified in the corresponding keyspec.</xqdoc:error>" ] }, { "isDocumented" : true, "arity" : 2, "name" : "probe-index-point-value", "qname" : "idml:probe-index-point-value", "signature" : "($name as xs:QName, $key_i as xs:anyAtomicType?) as node()* external", "description" : " Gets the domain nodes from an index associated by value equality with a\n given <em xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">search tuple</em>.\n <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"/>\n The search tuple consists of a number of <em xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">search keys</em> where each\n search key is either an atomic item or the empty sequence.  The number of\n search keys given must be equal to the number of keys declared for the\n index. Since the number of keys differs from one index to another, this\n function is variadic.\n", "summary" : "<p> Gets the domain nodes from an index associated by value equality with a\n given  search tuple .</p>", "annotation_str" : " %an:variadic", "annotations" : [ { "prefix" : "an", "ns" : "http://zorba.io/annotations", "name" : "variadic", "value" : "" } ], "updating" : false, "parameters" : [ { "name" : "name", "type" : "xs:QName", "occurrence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> The of the index to probe.</div>" }, { "name" : "key_i", "type" : "xs:anyAtomicType", "occurrence" : "?", "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> A search key used to probe the index with. The i-th search key corresponds to the i-th key expression in the index declaration.</div>" } ], "returns" : { "type" : "node()*", "description" : "The set of domain nodes for which the following XQuery expression returns true: <pre xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> $key1 eq $node/keyExpr1 and ... and $keyM eq $node/keyExprM </pre> where <i xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">keyExpr<sub>i</sub></i> is the expression specified in the i-th keyspec of the index." }, "errors" : [ "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">zerr:ZDDY0021 if the index is not declared.</xqdoc:error>", "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">zerr:ZDDY0023 if the index does not exist.</xqdoc:error>", "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">zerr:ZDDY0025 if the number of search keys passed as arguments is not the same as the number of keys declared for the index.</xqdoc:error>", "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">err:XPTY0004 if a non-empty seach key is given whose type does not match the sequence type specified in the corresponding keyspec.</xqdoc:error>" ] }, { "isDocumented" : true, "arity" : 7, "name" : "probe-index-range-general", "qname" : "idml:probe-index-range-general", "signature" : "($name as xs:QName, $lowerBound as xs:anyAtomicType*, $upperBound as xs:anyAtomicType*, $haveLowerBound as xs:boolean, $haveUpperBound as xs:boolean, $lowerBoundIncluded as xs:boolean, $upperBoundIncluded as xs:boolean) as node()* external", "description" : " Gets the domain nodes associated by general order-comparison (operators\n <code xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">&lt;=</code>, <code xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">&lt;</code>, <code xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">&gt;=</code>,\n <code xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">&gt;</code>) with one or two <em xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">search sequences</em>.\n <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"/>\n Each search sequence consists of an arbitrary number of\n <em xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">search keys</em> where each search key is an atomic item.\n This method is supported by general range indexes only.\n Its result is either an error or the set of domain nodes for which the\n following XQuery expression returns true:\n  <pre xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">\n    if ( $haveLowerBound and $haveUpperBound ) then\n      $lowerBoundKeys lop $node/keyExpr and $node/keyExpr uop $upperBoundKeys\n    else if ( $haveLowerBound ) then\n      $lowerBoundKeys lop $node/keyExpr\n    else if ( $haveUpperBound ) then\n      $node/keyExpr uop $upperBoundKeys\n    else\n      fn:true()\n  </pre>\n where <i xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">keyExpr</i> is the expression specified in the keyspec of the\n index, <i xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">lop</i> is either the <code xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">&lt;=</code> or the <code xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">&lt;</code>\n operator depending on whether <code xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">$lowerBoundsIncluded</code> is true or\n false, and <i xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">uop</i> is either the <code xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">&lt;=</code> or the\n <code xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">&lt;</code> operator depending on whether\n <code xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">$upperBoundsIncluded</code> is true or false.\n", "summary" : "<p> Gets the domain nodes associated by general order-comparison (operators\n  &lt;= ,  &lt; ,  &gt;= ,\n  &gt; ) with one or two  search sequences .</p>", "annotation_str" : "", "annotations" : [  ], "updating" : false, "parameters" : [ { "name" : "name", "type" : "xs:QName", "occurrence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> The of the index to probe.</div>" }, { "name" : "lowerBound", "type" : "xs:anyAtomicType", "occurrence" : "*", "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> The lower bound search sequence.</div>" }, { "name" : "upperBound", "type" : "xs:anyAtomicType", "occurrence" : "*", "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> The upper bound search sequence.</div>" }, { "name" : "haveLowerBound", "type" : "xs:boolean", "occurrence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> Whether a lower bound search sequence exists or not.</div>" }, { "name" : "haveUpperBound", "type" : "xs:boolean", "occurrence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> Whether an upper bound search sequence exists or not.</div>" }, { "name" : "lowerBoundIncluded", "type" : "xs:boolean", "occurrence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> Whether to use the <code>&lt;=</code> or the <code>&lt;</code> operator when comparing a search key from <code>$lowerBound</code> with an index key.</div>" }, { "name" : "upperBoundIncluded", "type" : "xs:boolean", "occurrence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> Whether to use the <code>&lt;=</code> or the <code>&lt;</code> operator when comparing an index key with a search key from <code>$upperBound</code>.</div>" } ], "returns" : { "type" : "node()*", "description" : "The set of domain nodes that satisfy the search condition." }, "errors" : [ "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">zerr:ZDDY0021 if the index was not declared.</xqdoc:error>", "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">zerr:ZDDY0023 if the index does not exist.</xqdoc:error>", "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">zerr:ZDDY0030 if the index is not a general range index.</xqdoc:error>", "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">err:XPTY0004 if <code>$haveLowerBound</code> is true and <code>$lowerBoundKeys</code> contains an atomic item whose type does not match the sequence type specified by the index keyspec, or <code>$haveUpperBound</code> is true and <code>$upperBoundKeys</code> contains an atomic item whose type does not match the sequence type specified by the index keyspec.</xqdoc:error>" ] }, { "isDocumented" : true, "arity" : 8, "name" : "probe-index-range-value-skip", "qname" : "idml:probe-index-range-value-skip", "signature" : "($name as xs:QName, $skip as xs:integer, $lowerBound-i as xs:anyAtomicType?, $upperBound-i as xs:anyAtomicType?, $haveLowerBound-i as xs:boolean, $haveUpperBound-i as xs:boolean, $lowerBoundIncluded-i as xs:boolean, $upperBoundIncluded-i as xs:boolean) as node()* external", "description" : " This function is an extension of the <code xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">probe-index-range-value()</code>\n function that index items to be skipped.\n", "summary" : "<p> This function is an extension of the  probe-index-range-value() \n function that index items to be skipped.</p>", "annotation_str" : " %an:variadic", "annotations" : [ { "prefix" : "an", "ns" : "http://zorba.io/annotations", "name" : "variadic", "value" : "" } ], "updating" : false, "parameters" : [ { "name" : "name", "type" : "xs:QName", "occurrence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> The QName of the index to probe</div>" }, { "name" : "skip", "type" : "xs:integer", "occurrence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> The number of index items to skip.</div>" }, { "name" : "lowerBound-i", "type" : "xs:anyAtomicType", "occurrence" : "?", "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> The lower bound in a range of key values.</div>" }, { "name" : "upperBound-i", "type" : "xs:anyAtomicType", "occurrence" : "?", "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> The upper bound in a range of key values.</div>" }, { "name" : "haveLowerBound-i", "type" : "xs:boolean", "occurrence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> If false, then there is no lower bound, or equivalently, the lower bound is -INFINITY. Otherwise, the lower bound is the one given by the <code>$lowerBound-i</code> value.</div>" }, { "name" : "haveUpperBound-i", "type" : "xs:boolean", "occurrence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> If false, then there is no upper bound, or equivalently, the upper bound is +INFINITY. Otherwise, the upper bound is the one given by the <code>$upperBound-i</code> value.</div>" }, { "name" : "lowerBoundIncluded-i", "type" : "xs:boolean", "occurrence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> If false, then the range is open from below, i.e., the lowerBound-i value is not considered part of the range. Otherwise, the range is closed from below, i.e., the <code>$lowerBound-i</code> value is part of the range.</div>" }, { "name" : "upperBoundIncluded-i", "type" : "xs:boolean", "occurrence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> If false, then the range is open from above, i.e., the upperBound-i value is not considered part of the range. Otherwise, the range is closed from above, i.e., the <code>$upperBound-i</code> value is part of the range.</div>" } ], "returns" : { "type" : "node()*", "description" : "The set of domain nodes that satisfy the search condition." }, "errors" : [ "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">zerr:ZDDY0021 if the index with name $name is not declared.</xqdoc:error>", "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">zerr:ZDDY0023 if the index with name $name does not exist.</xqdoc:error>", "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">zerr:ZDDY0025 if the number of rangespecs passed as arguments is zero or greater than the number of keys declared for the index.</xqdoc:error>", "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">zerr:ZDDY0026 if the index is not a range index.</xqdoc:error>", "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">err:XPTY0004 if <code>$haveLowerBound-i</code> is true and <code>$lowerBound-i</code> is an atomic item whose type does not match the sequence type specified by the i<sup>th</sup> keyspec, or <code>$haveUpperBound-i</code> is true and <code>$upperBound-i</code> is an atomic item whose type does not match the sequence type specified by the i<sup>th</sup> keyspec.</xqdoc:error>", "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">zerr:ZDDY0034 if (a) the index is general (in which case there is only one rangespac), (b) the index is untyped, (c) there is both a lower and an upper bound, and (d) if T1 and T2 are the types of the lower and upper bound, neither T1 is a subtype of T2 nor T2 is a subtype of T1.</xqdoc:error>" ] }, { "isDocumented" : true, "arity" : 7, "name" : "probe-index-range-value", "qname" : "idml:probe-index-range-value", "signature" : "($name as xs:QName, $lowerBound-i as xs:anyAtomicType?, $upperBound-i as xs:anyAtomicType?, $haveLowerBound-i as xs:boolean, $haveUpperBound-i as xs:boolean, $lowerBoundIncluded-i as xs:boolean, $upperBoundIncluded-i as xs:boolean) as node()* external", "description" : " Gets the domain nodes associated by value order-comparison (operators\n <code xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">le</code>, <code xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">lt</code>, <code xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">ge</code>, <code xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">gt</code>) with a\n given <em xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">search box</em>.\n <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"/>\n The search box is specified as a number <i xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">M</i> of <em xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">rangespecs</em>\n where each rangespec consists of six values.\n The number <i xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">M</i> must be greater than 0 and less than or equal to the\n number <i xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">N</i> of keyspecs found in the index declaration.\n If <i xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">M</i> &lt; <i xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">N</i>, then the \"missing\" rangespecs are assumed to have\n the following value: [(), (), false, false, false, false].\n As a result, we can assume that <i xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">M</i> = <i xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">N</i>.\n Remember that for general indexes, there can be only one IndexKeySpec and,\n as a result for general indexes, <i xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">M</i> = <i xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">N</i> = 1.\n Since the number of keys differs from one index to another,\n this function is variadic.\n <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"/>\n The i<sup xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">th</sup> rangespec corresponds to the i<sup xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">th</sup> keyspec, and\n specifies a search condition on the key values that are produced by\n evaluating that keyspec for every domain node.\n Specifically, we define the i<sup xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">th</sup> <em xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">rangespec result</em> as the\n set of domain nodes for which the following XQuery expression returns\n true:\n  <pre xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">\n    if ( $haveLowerBound-i and $haveUpperBound-i ) then\n      $lowerBound-i lop $node/keyExpr-i and $node/keyExpr-i uop $upperBound-i\n    else if ( $haveLowerBound-i ) then\n      $lowerBound-i lop $node/keyExpr-i\n    else if ( $haveUpperBound-i ) then\n      $node/keyExpr-i uop $upperBound-i\n    else\n      fn:true()\n  </pre>\n where <i xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">keyExpr-i</i> is the expression specified by the i<sup xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">th</sup>\n keyspec of the index, <i xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">lop</i> is either the <code xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">le</code> or the\n <code xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">lt</code> operator depending on whether\n <code xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">$lowerBoundsIncluded-i</code> is true or false, and <i xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">uop</i> is\n either the <i xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">le</i> or the <i xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">lt</i> operator depending on whether\n <code xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">$upperBoundsIncluded-i</code> is true or false.\n", "summary" : "<p> Gets the domain nodes associated by value order-comparison (operators\n  le ,  lt ,  ge ,  gt ) with a\n given  search box .</p>", "annotation_str" : " %an:variadic", "annotations" : [ { "prefix" : "an", "ns" : "http://zorba.io/annotations", "name" : "variadic", "value" : "" } ], "updating" : false, "parameters" : [ { "name" : "name", "type" : "xs:QName", "occurrence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> The name of the index to probe.</div>" }, { "name" : "lowerBound-i", "type" : "xs:anyAtomicType", "occurrence" : "?", "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> The lower bound in a range of key values.</div>" }, { "name" : "upperBound-i", "type" : "xs:anyAtomicType", "occurrence" : "?", "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> The upper bound in a range of key values.</div>" }, { "name" : "haveLowerBound-i", "type" : "xs:boolean", "occurrence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> If false, then there is no lower bound, or equivalently, the lower bound is -INFINITY. Otherwise, the lower bound is the one given by the <code>$lowerBound-i</code> value.</div>" }, { "name" : "haveUpperBound-i", "type" : "xs:boolean", "occurrence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> If false, then there is no upper bound, or equivalently, the upper bound is +INFINITY. Otherwise, the upper bound is the one given by the <code>$upperBound-i</code> value.</div>" }, { "name" : "lowerBoundIncluded-i", "type" : "xs:boolean", "occurrence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> If false, then the range is open from below, i.e., the <code>$lowerBound-i</code> value is not considered part of the range. Otherwise, the range is closed from below, i.e., the <code>$lowerBound-i</code> value is part of the range.</div>" }, { "name" : "upperBoundIncluded-i", "type" : "xs:boolean", "occurrence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> If false, then the range is open from above, i.e., the <code>$upperBound-i</code> value is not considered part of the range. Otherwise, the range is closed from above, i.e., the <code>$upperBound-i</code> value is part of the range.</div>" } ], "returns" : { "type" : "node()*", "description" : "The intersection of all the rangespec results." }, "errors" : [ "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">zerr:ZDDY0021 if the index is not declared.</xqdoc:error>", "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">zerr:ZDDY0023 if the index does not exist.</xqdoc:error>", "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">zerr:ZDDY0025 if the number of rangespecs passed as arguments is zero or greater than the number of keys declared for the index.</xqdoc:error>", "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">zerr:ZDDY0026 if the index is not a range index.</xqdoc:error>", "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">err:XPTY0004 if <code>$haveLowerBound-i</code> is true and <code>$lowerBound-i</code> is an atomic item whose type does not match the sequence type specified by the i<sup>th</sup> keyspec, or <code>$haveUpperBound-i</code> is true and <code>$upperBound-i</code> is an atomic item whose type does not match the sequence type specified by the i<sup>th</sup> keyspec.</xqdoc:error>", "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">zerr:ZDDY0034 if (a) the index is general (in which case there is only one rangespac), (b) the index is untyped, (c) there is both a lower and an upper bound, and (d) if T1 and T2 are the types of the lower and upper bound, neither T1 is a subtype of T2 nor T2 is a subtype of T1.</xqdoc:error>" ] }, { "isDocumented" : true, "arity" : 1, "name" : "refresh-index", "qname" : "idml:refresh-index", "signature" : "($name as xs:QName) external", "description" : " Updates the index with the given name.  Note that if the maintenance\n property of the index is automatic, this function does nothing.\n", "summary" : "<p> Updates the index with the given name.</p>", "annotation_str" : "", "annotations" : [  ], "updating" : true, "parameters" : [ { "name" : "name", "type" : "xs:QName", "occurrence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> The name of the index to refresh.</div>" } ], "returns" : { "type" : null, "description" : "An empty XDM instance and a pending update list that, when applied, refreshes the contents of the index." }, "errors" : [ "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">zerr:ZDDY0021 if the index is not declared.</xqdoc:error>", "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">zerr:ZDDY0023 if the index does not exist.</xqdoc:error>" ] } ], "variables" : [  ] }, "http://www.28msec.com/modules/full-text" : { "ns" : "http://www.28msec.com/modules/full-text", "description" : " This module provides an API to full-text functions such as tokenization,\n stemming, or stop word detection. The default language is set to english\n for all functions that don't take an explicit language parameter.\n <h2 xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">Notes on stemming</h2>\n The <code xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">stem()</code> functions return the\n <a xmlns:xqdoc=\"http://www.xqdoc.org/1.0\" href=\"http://en.wikipedia.org/wiki/Word_stem\">stem</a>\n of a word.\n On 28.io,\n the stem of a word itself, however, is not guaranteed to be a word.\n It is best to consider a stem as an opaque byte sequence.\n All that is guaranteed about a stem is that,\n for a given word,\n the stem of that word will always be the same byte sequence.\n Hence,\n you sould never compare the result of one of the <code xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">stem()</code>\n functions against a non-stemmed string,\n for example:\n <pre xmlns:xqdoc=\"http://www.xqdoc.org/1.0\" class=\"ace-static\">\n  if ( ft:stem( \"apples\" ) eq \"apple\" )             ** WRONG **\n </pre>\n Instead do:\n <pre xmlns:xqdoc=\"http://www.xqdoc.org/1.0\" class=\"ace-static\">\n  if ( ft:stem( \"apples\" ) eq ft:stem( \"apple\" ) )  ** CORRECT **\n </pre>\n <h2 xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">Notes on the thesaurus</h2>\n 28msec uses the\n <a xmlns:xqdoc=\"http://www.xqdoc.org/1.0\" href=\"http://wordnet.princeton.edu/\">WordNet lexical database</a> version 3.0,\n In WordNet, the number of \"levels\" that two phrases are apart\n are how many hierarchical meanings apart they are.\n For example,\n \"canary\" is 5 levels away from \"vertebrate\"\n (carary &gt; finch &gt; oscine &gt; passerine &gt; bird &gt; vertebrate).\n <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"/>\n When using the WordNet implementation,\n 28msec supports all of the relationships (and their abbreviations)\n specified by\n <a xmlns:xqdoc=\"http://www.xqdoc.org/1.0\" href=\"http://www.iso.org/iso/iso_catalogue/catalogue_tc/catalogue_detail.htm?csnumber=7776\">ISO 2788</a>\n and\n <a xmlns:xqdoc=\"http://www.xqdoc.org/1.0\" href=\"http://www.niso.org/kst/reports/standards?step=2&amp;gid=&amp;project_key=7cc9b583cb5a62e8c15d3099e0bb46bbae9cf38a\">ANSI/NISO Z39.19-2005</a>\n with the exceptions of \"HN\" (history note)\n and \"X SN\" (see scope note for).\n These relationships are:\n  <table xmlns:xqdoc=\"http://www.xqdoc.org/1.0\" class=\"table table-bordered\">\n    <tr>\n      <th>Rel.</th>\n      <th>Meaning</th>\n      <th>WordNet Rel.</th>\n    </tr>\n    <tr>\n      <td>BT</td>\n      <td>broader term</td>\n      <td>hypernym</td>\n    </tr>\n    <tr>\n      <td>BTG</td>\n      <td>broader term generic</td>\n      <td>hypernym</td>\n    </tr>\n    <tr>\n      <td>BTI</td>\n      <td>broader term instance</td>\n      <td>instance hypernym</td>\n    </tr>\n    <tr>\n      <td>BTP</td>\n      <td>broader term partitive</td>\n      <td>part meronym</td>\n    </tr>\n    <tr>\n      <td>NT</td>\n      <td>narrower term</td>\n      <td>hyponym</td>\n    </tr>\n    <tr>\n      <td>NTG</td>\n      <td>narrower term generic</td>\n      <td>hyponym</td>\n    </tr>\n    <tr>\n      <td>NTI</td>\n      <td>narrower term instance</td>\n      <td>instance hyponym</td>\n    </tr>\n    <tr>\n      <td>NTP</td>\n      <td>narrower term partitive</td>\n      <td>part holonym</td>\n    </tr>\n    <tr>\n      <td>RT</td>\n      <td>related term</td>\n      <td>also see</td>\n    </tr>\n    <tr>\n      <td>SN</td>\n      <td>scope note</td>\n      <td>n/a</td>\n    </tr>\n    <tr>\n      <td>TT</td>\n      <td>top term</td>\n      <td>hypernym</td>\n    </tr>\n    <tr>\n      <td>UF</td>\n      <td>non-preferred term</td>\n      <td>n/a</td>\n    </tr>\n    <tr>\n      <td>USE</td>\n      <td>preferred term</td>\n      <td>n/a</td>\n    </tr>\n  </table>\n Note that you can specify relationships\n either by their abbreviation\n or their meaning.\n Relationships are case-insensitive.\n In addition to the\n <a xmlns:xqdoc=\"http://www.xqdoc.org/1.0\" href=\"http://www.iso.org/iso/iso_catalogue/catalogue_tc/catalogue_detail.htm?csnumber=7776\">ISO 2788</a>\n and\n <a xmlns:xqdoc=\"http://www.xqdoc.org/1.0\" href=\"http://www.niso.org/kst/reports/standards?step=2&amp;gid=&amp;project_key=7cc9b583cb5a62e8c15d3099e0bb46bbae9cf38a\">ANSI/NISO Z39.19-2005</a>\n relationships,\n 28msec also supports all of the relationships offered by WordNet.\n These relationships are:\n  <table xmlns:xqdoc=\"http://www.xqdoc.org/1.0\" class=\"ft_rels table table-bordered\">\n    <tr>\n      <th>Relationship</th>\n      <th>Meaning</th>\n    </tr>\n    <tr>\n      <td nowrap=\"nowrap\">also see</td>\n      <td>\n        A word that is related to another,\n        e.g., for \"varnished\" (furniture)\n        one should <em>also see</em> \"finished.\"\n      </td>\n    </tr>\n    <tr>\n      <td>antonym</td>\n      <td>\n        A word opposite in meaning to another,\n        e.g., \"light\" is an <em>antonym</em> for \"heavy.\"\n      </td>\n    </tr>\n    <tr>\n      <td>attribute</td>\n      <td>\n        A noun for which adjectives express values,\n        e.g., \"weight\" is an <em>attribute</em>\n        for which the adjectives \"light\" and \"heavy\"\n        express values.\n      </td>\n    </tr>\n    <tr>\n      <td>cause</td>\n      <td>\n        A verb that causes another,\n        e.g., \"show\" is a <em>cause</em> of \"see.\"\n      </td>\n    </tr>\n    <tr>\n      <td nowrap=\"nowrap\">derivationally related form</td>\n      <td>\n        A word that is derived from a root word,\n        e.g., \"metric\" is a <em>derivationally related form</em> of \"meter.\"\n      </td>\n    </tr>\n    <tr>\n      <td nowrap=\"nowrap\">derived from adjective</td>\n      <td>\n        An adverb that is derived from an adjective,\n        e.g., \"correctly\" is <em>derived from the adjective</em> \"correct.\"\n      </td>\n    </tr>\n    <tr>\n      <td>entailment</td>\n      <td>\n        A verb that presupposes another,\n        e.g., \"snoring\" <em>entails</em> \"sleeping.\"\n      </td>\n    </tr>\n    <tr>\n      <td>hypernym</td>\n      <td>\n        A word with a broad meaning that more specific words fall under,\n        e.g., \"meal\" is a <em>hypernym</em> of \"breakfast.\"\n      </td>\n    </tr>\n    <tr>\n      <td>hyponym</td>\n      <td>\n        A word of more specific meaning than a general term applicable to it,\n        e.g., \"breakfast\" is a <em>hyponym</em> of \"meal.\"\n      </td>\n    </tr>\n    <tr>\n      <td nowrap=\"nowrap\">instance hypernym</td>\n      <td>\n        A word that denotes a category of some specific instance,\n        e.g., \"author\" is an <em>instance hypernym</em> of \"Asimov.\"\n      </td>\n    </tr>\n    <tr>\n      <td nowrap=\"nowrap\">instance hyponym</td>\n      <td>\n        A term that donotes a specific instance of some general category,\n        e.g., \"Asimov\" is an <em>instance hyponym</em> of \"author.\"\n      </td>\n    </tr>\n    <tr>\n      <td nowrap=\"nowrap\">member holonym</td>\n      <td>\n        A word that denotes a collection of individuals,\n        e.g., \"faculty\" is a <em>member holonym</em> of \"professor.\"\n      </td>\n    </tr>\n    <tr>\n      <td nowrap=\"nowrap\">member meronym</td>\n      <td>\n        A word that denotes a member of a larger group,\n        e.g., a \"person\" is a <em>member meronym</em> of a \"crowd.\"\n      </td>\n    </tr>\n    <tr>\n      <td nowrap=\"nowrap\">part holonym</td>\n      <td>\n        A word that denotes a larger whole comprised of some part,\n        e.g., \"car\" is a <em>part holonym</em> of \"engine.\"\n      </td>\n    </tr>\n    <tr>\n      <td nowrap=\"nowrap\">part meronym</td>\n      <td>\n        A word that denotes a part of a larger whole,\n        e.g., an \"engine\" is <em>part meronym</em> of a \"car.\"\n      </td>\n    </tr>\n    <tr>\n      <td nowrap=\"nowrap\">participle of verb</td>\n      <td>\n        An adjective that is the participle of some verb,\n        e.g., \"breaking\" is the <em>participle of the verb</em> \"break.\"\n      </td>\n    </tr>\n    <tr>\n      <td>pertainym</td>\n      <td>\n        An adjective that classifies its noun,\n        e.g., \"musical\" is a <em>pertainym</em> in \"musical instrument.\"\n      </td>\n    </tr>\n    <tr>\n      <td nowrap=\"nowrap\">similar to</td>\n      <td>\n        Similar, though not necessarily interchangeable, adjectives.\n        For example, \"shiny\" is <em>similar to</em> \"bright\",\n        but they have subtle differences.\n      </td>\n    </tr>\n    <tr>\n      <td nowrap=\"nowrap\">substance holonym</td>\n      <td>\n        A word that denotes a larger whole containing some constituent\n        substance, e.g., \"bread\" is a <em>substance holonym</em> of \"flour.\"\n      </td>\n    </tr>\n    <tr>\n      <td nowrap=\"nowrap\">substance meronym</td>\n      <td>\n        A word that denotes a constituant substance of some larger whole,\n        e.g., \"flour\" is a <em>substance meronym</em> of \"bread.\"\n      </td>\n    </tr>\n    <tr>\n      <td nowrap=\"nowrap\">verb group</td>\n      <td>\n        A verb that is a member of a group of similar verbs,\n        e.g., \"live\" is in the <em>verb group</em>\n        of \"dwell\", \"live\", \"inhabit\", etc.\n      </td>\n    </tr>\n  </table>\n", "sees" : [  ], "authors" : [ "<xqdoc:author xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">Paul J. Lucas</xqdoc:author>" ], "version" : null, "encoding" : "utf-8", "namespaces" : [ { "uri" : "http://www.w3.org/2005/xqt-errors", "prefix" : "err" }, { "uri" : "http://www.28msec.com/modules/full-text", "prefix" : "ft" }, { "uri" : "http://zorba.io/options/versioning", "prefix" : "ver" }, { "uri" : "http://zorba.io/errors", "prefix" : "zerr" }, { "uri" : "http://zorba.io/modules/full-text", "prefix" : "zft" } ], "functions" : [ { "isDocumented" : true, "arity" : 1, "name" : "is-stem-lang-supported", "qname" : "ft:is-stem-lang-supported", "signature" : "($lang as language) as boolean", "description" : " Checks whether the given language is supported for stemming.\n", "summary" : "<p> Checks whether the given language is supported for stemming.</p>", "annotation_str" : "", "annotations" : [  ], "updating" : false, "parameters" : [ { "name" : "lang", "type" : "language", "occurrence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> The language to check.</div>" } ], "returns" : { "type" : "boolean", "description" : "<code xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">true</code> only if the language is supported." }, "errors" : [  ] }, { "isDocumented" : true, "arity" : 1, "name" : "is-stop-word-lang-supported", "qname" : "ft:is-stop-word-lang-supported", "signature" : "($lang as language) as boolean", "description" : " Checks whether the given language\n is supported for stop words.\n", "summary" : "<p> Checks whether the given language\n is supported for stop words.</p>", "annotation_str" : "", "annotations" : [  ], "updating" : false, "parameters" : [ { "name" : "lang", "type" : "language", "occurrence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> The language to check.</div>" } ], "returns" : { "type" : "boolean", "description" : "<code xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">true</code> only if the language is supported." }, "errors" : [  ] }, { "isDocumented" : true, "arity" : 1, "name" : "is-stop-word", "qname" : "ft:is-stop-word", "signature" : "($word as string) as boolean", "description" : " Checks whether the given word is a stop-word.\n", "summary" : "<p> Checks whether the given word is a stop-word.</p>", "annotation_str" : "", "annotations" : [  ], "updating" : false, "parameters" : [ { "name" : "word", "type" : "string", "occurrence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> The word to check. The word's language is assumed to be the one returned by <code>ft:current-lang()</code>.</div>" } ], "returns" : { "type" : "boolean", "description" : "<code xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">true</code> only if <code xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">$word</code> is a stop-word." }, "errors" : [ "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">err:FTST0009 if <code>ft:current-lang()</code> is not supported.</xqdoc:error>" ] }, { "isDocumented" : true, "arity" : 2, "name" : "is-stop-word", "qname" : "ft:is-stop-word", "signature" : "($word as string, $lang as language) as boolean", "description" : " Checks whether the given word is a stop-word.\n", "summary" : "<p> Checks whether the given word is a stop-word.</p>", "annotation_str" : "", "annotations" : [  ], "updating" : false, "parameters" : [ { "name" : "word", "type" : "string", "occurrence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> The word to check.</div>" }, { "name" : "lang", "type" : "language", "occurrence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> The language of <code>$word</code>.</div>" } ], "returns" : { "type" : "boolean", "description" : "<code xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">true</code> only if <code xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">$word</code> is a stop-word." }, "errors" : [ "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">err:FTST0009 if <code>$lang</code> is not supported.</xqdoc:error>" ] }, { "isDocumented" : true, "arity" : 1, "name" : "is-thesaurus-lang-supported", "qname" : "ft:is-thesaurus-lang-supported", "signature" : "($lang as language) as boolean", "description" : " Checks whether the given language\n is supported for look-up using the Wordnet thesaurus.\n", "summary" : "<p> Checks whether the given language\n is supported for look-up using the Wordnet thesaurus.</p>", "annotation_str" : "", "annotations" : [  ], "updating" : false, "parameters" : [ { "name" : "lang", "type" : "language", "occurrence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> The language to check.</div>" } ], "returns" : { "type" : "boolean", "description" : "<code xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">true</code> only if the language is supported." }, "errors" : [  ] }, { "isDocumented" : true, "arity" : 1, "name" : "is-tokenizer-lang-supported", "qname" : "ft:is-tokenizer-lang-supported", "signature" : "($lang as language) as boolean", "description" : " Checks whether the given language\n is supported for tokenization.\n", "summary" : "<p> Checks whether the given language\n is supported for tokenization.</p>", "annotation_str" : "", "annotations" : [  ], "updating" : false, "parameters" : [ { "name" : "lang", "type" : "language", "occurrence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> The language to check.</div>" } ], "returns" : { "type" : "boolean", "description" : "<code xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">true</code> only if the language is supported." }, "errors" : [  ] }, { "isDocumented" : true, "arity" : 1, "name" : "stem", "qname" : "ft:stem", "signature" : "($word as string) as string", "description" : " Stems the given word.\n", "summary" : "<p> Stems the given word.</p>", "annotation_str" : "", "annotations" : [  ], "updating" : false, "parameters" : [ { "name" : "word", "type" : "string", "occurrence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> The word to stem. The word's language is assumed to be the one returned by <code>ft:current-lang()</code>.</div>" } ], "returns" : { "type" : "string", "description" : "the stem of <code xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">$word</code>." }, "errors" : [ "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">err:FTST0009 if <code>ft:current-lang()</code> is not supported.</xqdoc:error>" ] }, { "isDocumented" : true, "arity" : 2, "name" : "stem", "qname" : "ft:stem", "signature" : "($word as string, $lang as language) as string", "description" : " Stems the given word.\n", "summary" : "<p> Stems the given word.</p>", "annotation_str" : "", "annotations" : [  ], "updating" : false, "parameters" : [ { "name" : "word", "type" : "string", "occurrence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> The word to stem.</div>" }, { "name" : "lang", "type" : "language", "occurrence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> The language of <code>$word</code>.</div>" } ], "returns" : { "type" : "string", "description" : "the stem of <code xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">$word</code>." }, "errors" : [ "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">err:FTST0009 if <code>$lang</code> is not supported.</xqdoc:error>" ] }, { "isDocumented" : true, "arity" : 1, "name" : "strip-diacritics", "qname" : "ft:strip-diacritics", "signature" : "($string as string) as string", "description" : " Strips all diacritical marks from all characters.\n", "summary" : "<p> Strips all diacritical marks from all characters.</p>", "annotation_str" : "", "annotations" : [  ], "updating" : false, "parameters" : [ { "name" : "string", "type" : "string", "occurrence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> The string to strip diacritical marks from.</div>" } ], "returns" : { "type" : "string", "description" : "<code xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">$string</code> with diacritical marks stripped." }, "errors" : [  ] }, { "isDocumented" : true, "arity" : 1, "name" : "thesaurus-lookup", "qname" : "ft:thesaurus-lookup", "signature" : "($phrase as string) as string*", "description" : " Looks-up the given phrase in the Wordnet thesaurus.\n", "summary" : "<p> Looks-up the given phrase in the Wordnet thesaurus.</p>", "annotation_str" : "", "annotations" : [  ], "updating" : false, "parameters" : [ { "name" : "phrase", "type" : "string", "occurrence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> The phrase to look up.</div>" } ], "returns" : { "type" : "string*", "description" : "the related phrases if <code xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">$phrase</code> is found in the thesaurus or the empty sequence if not." }, "errors" : [ "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">err:FTST0009 if <code>ft:current-lang()</code> is not supported.</xqdoc:error>", "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">zerr:ZXQP8401 if the thesaurus data file's version is not supported by the currently running version of Zorba.</xqdoc:error>", "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">zerr:ZXQP8402 if the thesaurus data file's endianness does not match that of the CPU on which Zorba is currently running.</xqdoc:error>", "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">zerr:ZXQP8403 if there was an error reading the thesaurus data.</xqdoc:error>" ] }, { "isDocumented" : true, "arity" : 2, "name" : "thesaurus-lookup", "qname" : "ft:thesaurus-lookup", "signature" : "($phrase as string, $relationship as string) as string*", "description" : " Looks-up the given phrase in a thesaurus.\n", "summary" : "<p> Looks-up the given phrase in a thesaurus.</p>", "annotation_str" : "", "annotations" : [  ], "updating" : false, "parameters" : [ { "name" : "phrase", "type" : "string", "occurrence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> The phrase to look up.</div>" }, { "name" : "relationship", "type" : "string", "occurrence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> The relationship the results are to have to <code>$phrase</code>.</div>" } ], "returns" : { "type" : "string*", "description" : "the related phrases if <code xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">$phrase</code> is found in the thesaurus or the empty sequence if not." }, "errors" : [ "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">err:FTST0018 if <code>$uri</code> refers to a thesaurus that is not found in the statically known thesauri.</xqdoc:error>", "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">err:FTST0009 if <code>$lang</code> is not supported.</xqdoc:error>", "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">zerr:ZOSE0001 if the thesaurus data file could not be found.</xqdoc:error>", "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">zerr:ZOSE0002 if the thesaurus data file is not a plain file.</xqdoc:error>", "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">zerr:ZXQP8401 if the thesaurus data file's version is not supported by the currently running version of Zorba.</xqdoc:error>", "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">zerr:ZXQP8402 if the thesaurus data file's endianness does not match that of the CPU on which Zorba is currently running.</xqdoc:error>", "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">zerr:ZXQP8403 if there was an error reading the thesaurus data file.</xqdoc:error>" ] }, { "isDocumented" : true, "arity" : 4, "name" : "thesaurus-lookup", "qname" : "ft:thesaurus-lookup", "signature" : "($phrase as string, $relationship as string, $level-least as integer, $level-most as integer) as string*", "description" : " Looks-up the given phrase in a thesaurus.\n", "summary" : "<p> Looks-up the given phrase in a thesaurus.</p>", "annotation_str" : "", "annotations" : [  ], "updating" : false, "parameters" : [ { "name" : "phrase", "type" : "string", "occurrence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> The phrase to look up.</div>" }, { "name" : "relationship", "type" : "string", "occurrence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> The relationship the results are to have to <code>$phrase</code>.</div>" }, { "name" : "level-least", "type" : "integer", "occurrence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> The minimum number of levels within the thesaurus to be traversed.</div>" }, { "name" : "level-most", "type" : "integer", "occurrence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> The maximum number of levels within the thesaurus to be traversed.</div>" } ], "returns" : { "type" : "string*", "description" : "the related phrases if <code xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">$phrase</code> is found in the thesaurus or the empty sequence if not." }, "errors" : [ "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">err:FOCA0003 if either <code>$level-least</code> or <code>$level-most</code> is either negative or too large.</xqdoc:error>", "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">err:FTST0018 if <code>$uri</code> refers to a thesaurus that is not found in the statically known thesauri.</xqdoc:error>", "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">err:FTST0009 if <code>$lang</code> is not supported.</xqdoc:error>", "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">zerr:ZOSE0001 if the thesaurus data file could not be found.</xqdoc:error>", "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">zerr:ZOSE0002 if the thesaurus data file is not a plain file.</xqdoc:error>", "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">zerr:ZXQP8401 if the thesaurus data file's version is not supported by the currently running version of Zorba.</xqdoc:error>", "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">zerr:ZXQP8402 if the thesaurus data file's endianness does not match that of the CPU on which Zorba is currently running.</xqdoc:error>", "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">zerr:ZXQP8403 if there was an error reading the thesaurus data file.</xqdoc:error>" ] }, { "isDocumented" : true, "arity" : 1, "name" : "tokenize", "qname" : "ft:tokenize", "signature" : "($string as string) as string*", "description" : " Tokenizes the given string.\n", "summary" : "<p> Tokenizes the given string.</p>", "annotation_str" : "", "annotations" : [  ], "updating" : false, "parameters" : [ { "name" : "string", "type" : "string", "occurrence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> The string to tokenize. The string's language is assumed to be the one returned by <code>ft:current-lang()</code>.</div>" } ], "returns" : { "type" : "string*", "description" : "a (possibly empty) sequence of tokens." }, "errors" : [ "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">err:FTST0009 if <code>ft:current-lang()</code> is not supported.</xqdoc:error>" ] }, { "isDocumented" : true, "arity" : 2, "name" : "tokenize", "qname" : "ft:tokenize", "signature" : "($string as string, $lang as language) as string*", "description" : " Tokenizes the given string.\n", "summary" : "<p> Tokenizes the given string.</p>", "annotation_str" : "", "annotations" : [  ], "updating" : false, "parameters" : [ { "name" : "string", "type" : "string", "occurrence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> The string to tokenize.</div>" }, { "name" : "lang", "type" : "language", "occurrence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> The language of <code>$string</code>.</div>" } ], "returns" : { "type" : "string*", "description" : "a (possibly empty) sequence of tokens." }, "errors" : [ "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">err:FTST0009 if <code>$lang</code> is not supported.</xqdoc:error>" ] } ], "variables" : [ { "name" : "ft:lang-da", "type" : "language", "description" : " Predeclared constant for the Danish language.\n" }, { "name" : "ft:lang-de", "type" : "language", "description" : " Predeclared constant for the German language.\n" }, { "name" : "ft:lang-en", "type" : "language", "description" : " Predeclared constant for the English language.\n" }, { "name" : "ft:lang-es", "type" : "language", "description" : " Predeclared constant for the Spanish language.\n" }, { "name" : "ft:lang-fi", "type" : "language", "description" : " Predeclared constant for the Finnish language.\n" }, { "name" : "ft:lang-fr", "type" : "language", "description" : " Predeclared constant for the French language.\n" }, { "name" : "ft:lang-hu", "type" : "language", "description" : " Predeclared constant for the Hungarian language.\n" }, { "name" : "ft:lang-it", "type" : "language", "description" : " Predeclared constant for the Italian language.\n" }, { "name" : "ft:lang-nl", "type" : "language", "description" : " Predeclared constant for the Dutch language.\n" }, { "name" : "ft:lang-no", "type" : "language", "description" : " Predeclared constant for the Norwegian language.\n" }, { "name" : "ft:lang-pt", "type" : "language", "description" : " Predeclared constant for the Portuguese language.\n" }, { "name" : "ft:lang-ro", "type" : "language", "description" : " Predeclared constant for the Romanian language.\n" }, { "name" : "ft:lang-ru", "type" : "language", "description" : " Predeclared constant for the Russian language.\n" }, { "name" : "ft:lang-sv", "type" : "language", "description" : " Predeclared constant for the Swedish language.\n" }, { "name" : "ft:lang-tr", "type" : "language", "description" : " Predeclared constant for the Turkish language.\n" } ] }, "http://xbrl.io/modules/bizql/report-schemas" : { "ns" : "http://xbrl.io/modules/bizql/report-schemas", "description" : " <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">This module provides functions for storing, retrieving, and modifying\n report schemas. Report schemas can be used in BizQL queries. They can be\n instantiated generating a business report.</p>\n <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">Report schemas are nothing else than a user-defined component. However,\n one of their hypercubes (the default hypercube), as well as two of their\n networks (presentation, concept-map) are special. A report schema is identified\n with an RID (Report schema ID).</p>\n <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">With this module, you can retrieve facts from an archive according to a report\n schema. You can retrieve them as a (2D) fact table, or populate the presentation\n network of the report schema with them. The concept map network will be used\n by default to map the report schema concepts to reported concepts.</p>\n <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">Report schemas are stored in the collection reportschemas in\n the project's MongoDB database.</p>\n <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">A report schema needs to be a syntactically valid JSound document.</p>\n", "sees" : [  ], "authors" : [ "<xqdoc:author xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">Charles Hoffman</xqdoc:author>", "<xqdoc:author xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">Matthias Brantner</xqdoc:author>", "<xqdoc:author xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">Dennis Knochenwefel</xqdoc:author>", "<xqdoc:author xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">Ghislain Fourny</xqdoc:author>" ], "version" : null, "encoding" : "utf-8", "namespaces" : [ { "uri" : "", "prefix" : "an" }, { "uri" : "http://xbrl.io/modules/bizql/hypercubes", "prefix" : "hypercubes" }, { "uri" : "http://xbrl.io/modules/bizql/networks", "prefix" : "networks" }, { "uri" : "http://xbrl.io/modules/bizql/report-schemas", "prefix" : "report-schemas" }, { "uri" : "http://zorba.io/options/versioning", "prefix" : "ver" } ], "functions" : [ { "isDocumented" : true, "arity" : 1, "name" : "add", "qname" : "report-schemas:add", "signature" : "($report-schema as object()) as empty-sequence()", "description" : " <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">Adds the given report schema to the database.</p>\n", "summary" : "<p>  Adds the given report schema to the database.</p>", "annotation_str" : " %an:sequential", "annotations" : [ { "prefix" : "an", "ns" : "", "name" : "sequential", "value" : "" } ], "updating" : false, "parameters" : [ { "name" : "report-schema", "type" : "object()", "occurrence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> the report schema to add.</div>" } ], "returns" : { "type" : "empty-sequence()", "description" : "the empty sequence." }, "errors" : [ "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">report-schemas:INVALID-SCHEMA if the given report schema object does not contain a name field</xqdoc:error>", "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">report-schemas:EXISTS if a report schema with the given name already exists</xqdoc:error>" ] }, { "isDocumented" : true, "arity" : 1, "name" : "delete", "qname" : "report-schemas:delete", "signature" : "($report-schema-or-id as item()) as empty-sequence()", "description" : " <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">Deletes a report schema from the database.</p>\n", "summary" : "<p>  Deletes a report schema from the database.</p>", "annotation_str" : " %an:sequential", "annotations" : [ { "prefix" : "an", "ns" : "", "name" : "sequential", "value" : "" } ], "updating" : false, "parameters" : [ { "name" : "report-schema-or-id", "type" : "item()", "occurrence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> the report schema to delete or its RID.</div>" } ], "returns" : { "type" : "empty-sequence()", "description" : "the empty sequence." }, "errors" : [ "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">report-schemas:DOES-NOT-EXIST if no report schema with the given RID exists.</xqdoc:error>" ] }, { "isDocumented" : true, "arity" : 2, "name" : "fact-table", "qname" : "report-schemas:fact-table", "signature" : "($schema as item(), $archives as item()*) as array()", "description" : " <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">Retrieves all facts from the supplied archives, that are relevant to the\n supplied schema, and populates them with the default dimension values\n when missing.</p>\n", "summary" : "<p>  Retrieves all facts from the supplied archives, that are relevant to the\n supplied schema, and populates them with the default dimension values\n when missing.</p>", "annotation_str" : "", "annotations" : [  ], "updating" : false, "parameters" : [ { "name" : "schema", "type" : "item()", "occurrence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> a schema or its RID,</div>" }, { "name" : "archives", "type" : "item()", "occurrence" : "*", "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> a sequence of archives or their AIDs.</div>" } ], "returns" : { "type" : "array()", "description" : "a sequence of facts with populated dimension values." }, "errors" : [  ] }, { "isDocumented" : true, "arity" : 3, "name" : "fact-table", "qname" : "report-schemas:fact-table", "signature" : "($schema as item(), $archives as item()*, $options as object()?) as array()", "description" : " <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">Retrieves all facts from the supplied archives, that are relevant to the\n supplied schema, and populates them with the default dimension values\n when missing.</p>\n", "summary" : "<p>  Retrieves all facts from the supplied archives, that are relevant to the\n supplied schema, and populates them with the default dimension values\n when missing.</p>", "annotation_str" : "", "annotations" : [  ], "updating" : false, "parameters" : [ { "name" : "schema", "type" : "item()", "occurrence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> a schema or its RID,</div>" }, { "name" : "archives", "type" : "item()", "occurrence" : "*", "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> a sequence of archives or their AIDs or $report-schemas:ALL_ARCHIVES for no filtering.</div>" }, { "name" : "options", "type" : "object()", "occurrence" : "?", "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> <a href=\"facts#standard_options\">standard fact retrieving options</a>.</div>" } ], "returns" : { "type" : "array()", "description" : "a sequence of facts with populated dimension values." }, "errors" : [  ] }, { "isDocumented" : true, "arity" : 2, "name" : "facts", "qname" : "report-schemas:facts", "signature" : "($schema as item(), $archives as item()*) as object()*", "description" : " <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">Retrieves all facts from the supplied archives, that are relevant to the\n supplied schema, and populates them with the default dimension values\n when missing.</p>\n", "summary" : "<p>  Retrieves all facts from the supplied archives, that are relevant to the\n supplied schema, and populates them with the default dimension values\n when missing.</p>", "annotation_str" : "", "annotations" : [  ], "updating" : false, "parameters" : [ { "name" : "schema", "type" : "item()", "occurrence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> a report schema or its RID,</div>" }, { "name" : "archives", "type" : "item()", "occurrence" : "*", "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> a sequence of archives or their AIDs or $report-schemas:ALL_ARCHIVES for no filtering.</div>" } ], "returns" : { "type" : "object()*", "description" : "a sequence of facts with populated dimension values." }, "errors" : [  ] }, { "isDocumented" : true, "arity" : 3, "name" : "facts", "qname" : "report-schemas:facts", "signature" : "($schema as item(), $archives as item()*, $options as object()?) as object()*", "description" : " <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">Retrieves all facts from the supplied archives, that are relevant to the\n supplied schema, and populates them with the default dimension values\n when missing.</p>\n", "summary" : "<p>  Retrieves all facts from the supplied archives, that are relevant to the\n supplied schema, and populates them with the default dimension values\n when missing.</p>", "annotation_str" : "", "annotations" : [  ], "updating" : false, "parameters" : [ { "name" : "schema", "type" : "item()", "occurrence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> a report schema or its RID,</div>" }, { "name" : "archives", "type" : "item()", "occurrence" : "*", "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> a sequence of archives or their AIDs or $report-schemas:ALL_ARCHIVES for no filtering.</div>" }, { "name" : "options", "type" : "object()", "occurrence" : "?", "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> <a href=\"facts#standard_options\">standard fact retrieving options</a>.</div>" } ], "returns" : { "type" : "object()*", "description" : "a sequence of facts with populated dimension values." }, "errors" : [  ] }, { "isDocumented" : true, "arity" : 2, "name" : "populate-with-facts", "qname" : "report-schemas:populate-with-facts", "signature" : "($schema as item(), $archives as item()*) as object()*", "description" : " <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">Populates a concept-tree network with all facts from the supplied archives,\n that are relevant to the\n supplied schema. Default dimension values are added to the facts\n when missing.</p>\n", "summary" : "<p>  Populates a concept-tree network with all facts from the supplied archives,\n that are relevant to the\n supplied schema.</p>", "annotation_str" : "", "annotations" : [  ], "updating" : false, "parameters" : [ { "name" : "schema", "type" : "item()", "occurrence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">.</div>" }, { "name" : "archives", "type" : "item()", "occurrence" : "*", "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> a sequence of archives or their AIDs or $report-schemas:ALL_ARCHIVES for no filtering.</div>" } ], "returns" : { "type" : "object()*", "description" : "a sequence of facts with populated dimension values." }, "errors" : [  ] }, { "isDocumented" : true, "arity" : 3, "name" : "populate-with-facts", "qname" : "report-schemas:populate-with-facts", "signature" : "($schema as item(), $archives as item()*, $options as object()?) as object()*", "description" : " <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">Populates a concept-tree network with all facts from the supplied archives,\n that are relevant to the\n supplied schema. Default dimension values are added to the facts\n when missing.</p>\n", "summary" : "<p>  Populates a concept-tree network with all facts from the supplied archives,\n that are relevant to the\n supplied schema.</p>", "annotation_str" : "", "annotations" : [  ], "updating" : false, "parameters" : [ { "name" : "schema", "type" : "item()", "occurrence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">.</div>" }, { "name" : "archives", "type" : "item()", "occurrence" : "*", "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> a sequence of archives or their AIDs or $report-schemas:ALL_ARCHIVES for no filtering.</div>" }, { "name" : "options", "type" : "object()", "occurrence" : "?", "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> <a href=\"facts#standard_options\">standard fact retrieving options</a>.</div>" } ], "returns" : { "type" : "object()*", "description" : "a sequence of facts with populated dimension values." }, "errors" : [  ] }, { "isDocumented" : true, "arity" : 0, "name" : "report-schemas", "qname" : "report-schemas:report-schemas", "signature" : "() as object()*", "description" : " <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">Retrieves all report schemas.</p>\n", "summary" : "<p>  Retrieves all report schemas.</p>", "annotation_str" : "", "annotations" : [  ], "updating" : false, "parameters" : [  ], "returns" : { "type" : "object()*", "description" : "all report schemas." }, "errors" : [  ] }, { "isDocumented" : true, "arity" : 1, "name" : "report-schemas", "qname" : "report-schemas:report-schemas", "signature" : "($report-schemas-or-ids as item()*) as object()*", "description" : " <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">Return the report schemas with the given names (RIDs).</p>\n", "summary" : "<p>  Return the report schemas with the given names (RIDs).</p>", "annotation_str" : "", "annotations" : [  ], "updating" : false, "parameters" : [ { "name" : "report-schemas-or-ids", "type" : "item()", "occurrence" : "*", "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> the ids of the report schemas (RIDs) or the report schemas themselves.</div>" } ], "returns" : { "type" : "object()*", "description" : "the report schemas with the given RIDs or the empty sequence if no report schema was found or the input is an empty sequence." }, "errors" : [  ] }, { "isDocumented" : true, "arity" : 1, "name" : "rid", "qname" : "report-schemas:rid", "signature" : "($report-schema-or-id as item()) as atomic", "description" : " <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">Converts the input to a normalized report schema identifier (RID). The input\n can be either a pure RID, or a report schema object which contains an RID.</p>\n", "summary" : "<p>  Converts the input to a normalized report schema identifier (RID).</p>", "annotation_str" : "", "annotations" : [  ], "updating" : false, "parameters" : [ { "name" : "report-schema-or-id", "type" : "item()", "occurrence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> a report schema identifier (RID)) or a report schema object.</div>" } ], "returns" : { "type" : "atomic", "description" : "the normalized RID." }, "errors" : [ "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">report-schemas:INVALID_PARAMETER if the RID or report schema is not valid</xqdoc:error>" ] }, { "isDocumented" : true, "arity" : 1, "name" : "update", "qname" : "report-schemas:update", "signature" : "($report-schema as object()) as empty-sequence()", "description" : " <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">Updates a report schema.</p>\n <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">Replaces a report schema in the database with the given schema.\n The schema to be replaced is identified by the value of the _id\n field of the given schema (RID).</p>\n", "summary" : "<p>  Updates a report schema.</p>", "annotation_str" : " %an:sequential", "annotations" : [ { "prefix" : "an", "ns" : "", "name" : "sequential", "value" : "" } ], "updating" : false, "parameters" : [ { "name" : "report-schema", "type" : "object()", "occurrence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> the new report schema</div>" } ], "returns" : { "type" : "empty-sequence()", "description" : "the empty sequence" }, "errors" : [ "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">report-schemas:DOES-NOT-EXIST if a report schema with the given name does not exist.</xqdoc:error>" ] } ], "variables" : [ { "name" : "report-schemas:col", "type" : "string", "description" : " Name of the collection the report schemas are stored in.\n" }, { "name" : "report-schemas:ALL_ARCHIVES", "type" : "boolean", "description" : " Joker for all archives.\n" } ] }, "http://zorba.io/modules/store/static/integrity-constraints/ddl" : { "ns" : "http://zorba.io/modules/store/static/integrity-constraints/ddl", "description" : " This module defines a set of functions to manage integrity constraints\n that are declared in the prolog of a module.\n For example, it provides functions to activate or deactivate integrity\n constraints.\n <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"/>\n This module is part of\n <a xmlns:xqdoc=\"http://www.xqdoc.org/1.0\" href=\"../zorba/xqddf.html\">Zorba's XQuery Data Definition Facility</a>.\n All the integrity constraints managed by this module have to be pre-declared\n in the prolog of a module.\n Please refer to the\n <a xmlns:xqdoc=\"http://www.xqdoc.org/1.0\" href=\"../zorba/data_lifecycle.html\">general documentation</a>\n for more information and examples.\n", "sees" : [ "<xqdoc:see xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"><a href=\"../zorba/data_lifecycle.html\">Data Lifecycle</a></xqdoc:see>", "<xqdoc:see xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"><a href=\"../zorba/xqddf.html\">XQuery Data Definition Facility</a></xqdoc:see>", "<xqdoc:see xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">http://zorba.io/modules/store/static/collections/dml</xqdoc:see>", "<xqdoc:see xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">http://zorba.io/modules/store/static/collections/ddl</xqdoc:see>", "<xqdoc:see xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">http://zorba.io/modules/store/static/indexes/ddl</xqdoc:see>", "<xqdoc:see xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">http://zorba.io/modules/store/static/indexes/dml</xqdoc:see>", "<xqdoc:see xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">http://zorba.io/modules/store/static/integrity-constraints/dml</xqdoc:see>", "<xqdoc:see xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">http://zorba.io/errors</xqdoc:see>" ], "authors" : [ "<xqdoc:author xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">Nicolae Brinza, Matthias Brantner, David Graf, Till Westmann, Markos Zaharioudakis</xqdoc:author>" ], "version" : null, "encoding" : "utf-8", "namespaces" : [ { "uri" : "http://zorba.io/modules/store/static/integrity-constraints/ddl", "prefix" : "icddl" }, { "uri" : "http://zorba.io/options/versioning", "prefix" : "ver" }, { "uri" : "http://zorba.io/errors", "prefix" : "zerr" } ], "functions" : [ { "isDocumented" : true, "arity" : 1, "name" : "activate", "qname" : "icddl:activate", "signature" : "($name as xs:QName) external", "description" : " Activates an integrity constraint in the dynamic context.\n", "summary" : "<p> Activates an integrity constraint in the dynamic context.</p>", "annotation_str" : "", "annotations" : [  ], "updating" : true, "parameters" : [ { "name" : "name", "type" : "xs:QName", "occurrence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> The name of the integrity constraint to activate.</div>" } ], "returns" : { "type" : null, "description" : "An empty XDM instance and a pending update list that consists of a <code xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">upd:activateIntegrityConstraint($name)</code> update primitive." }, "errors" : [ "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">zerr:ZDDY0031 if the integrity constraint does not exist in the static context.</xqdoc:error>" ] }, { "isDocumented" : true, "arity" : 0, "name" : "activated-integrity-constraints", "qname" : "icddl:activated-integrity-constraints", "signature" : "() as xs:QName* external", "description" : " Gets the integrity constraints that are activated, if any.\n", "summary" : "<p> Gets the integrity constraints that are activated, if any.</p>", "annotation_str" : "", "annotations" : [  ], "updating" : false, "parameters" : [  ], "returns" : { "type" : "xs:QName*", "description" : "A sequence of QNames, one for each activated integrity constraint, or an empty sequence if none." }, "errors" : [  ] }, { "isDocumented" : true, "arity" : 1, "name" : "deactivate", "qname" : "icddl:deactivate", "signature" : "($name as xs:QName) external", "description" : " Deactivates the integrity constraint.\n", "summary" : "<p> Deactivates the integrity constraint.</p>", "annotation_str" : "", "annotations" : [  ], "updating" : true, "parameters" : [ { "name" : "name", "type" : "xs:QName", "occurrence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> The name of the integrity constraint to deactivate.</div>" } ], "returns" : { "type" : null, "description" : "An empty XDM instance and a pending update list that, once applied, deactivates the integrity constraint." }, "errors" : [ "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">zerr:ZDDY0032 if the integrity constraint was not declared in the the static context.</xqdoc:error>", "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">zerr:ZDDY0032 if the integrity constraints is not activated.</xqdoc:error>" ] }, { "isDocumented" : true, "arity" : 0, "name" : "declared-integrity-constraints", "qname" : "icddl:declared-integrity-constraints", "signature" : "() as xs:QName* external", "description" : " Gets the sequence of QNames representing the integrity constraints that have\n been declared in the prolog of the static context.\n", "summary" : "<p> Gets the sequence of QNames representing the integrity constraints that have\n been declared in the prolog of the static context.</p>", "annotation_str" : "", "annotations" : [  ], "updating" : false, "parameters" : [  ], "returns" : { "type" : "xs:QName*", "description" : "A sequence of QNames, one for each created integrity constraints, or an emtpy sequence if none." }, "errors" : [  ] }, { "isDocumented" : true, "arity" : 1, "name" : "is-activated-integrity-constraint", "qname" : "icddl:is-activated-integrity-constraint", "signature" : "($name as xs:QName) as xs:boolean external", "description" : " Gets whether an integrity constraints is activated.\n", "summary" : "<p> Gets whether an integrity constraints is activated.</p>", "annotation_str" : "", "annotations" : [  ], "updating" : false, "parameters" : [ { "name" : "name", "type" : "xs:QName", "occurrence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> The name of the constraint to check.</div>" } ], "returns" : { "type" : "xs:boolean", "description" : "true if the integrity constraint is activated; false otherwise." }, "errors" : [  ] }, { "isDocumented" : true, "arity" : 1, "name" : "is-declared-integrity-constraint", "qname" : "icddl:is-declared-integrity-constraint", "signature" : "($name as xs:QName) as xs:boolean external", "description" : " Gets whether an integrity constraint is declared in the prolog of the static\n context.\n", "summary" : "<p> Gets whether an integrity constraint is declared in the prolog of the static\n context.</p>", "annotation_str" : "", "annotations" : [  ], "updating" : false, "parameters" : [ { "name" : "name", "type" : "xs:QName", "occurrence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> The name of the constraint to check.</div>" } ], "returns" : { "type" : "xs:boolean", "description" : "true if the constraint is declared; false otherwise." }, "errors" : [  ] } ], "variables" : [  ] }, "http://www.functx.com" : { "ns" : "http://www.functx.com", "description" : " --------------------------------\n The FunctX XQuery Function Library\n --------------------------------\n Copyright (C) 2007 Datypic\n This library is free software; you can redistribute it and/or\n modify it under the terms of the GNU Lesser General Public\n License as published by the Free Software Foundation; either\n version 2.1 of the License.\n This library is distributed in the hope that it will be useful,\n but WITHOUT ANY WARRANTY; without even the implied warranty of\n MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n Lesser General Public License for more details.\n You should have received a copy of the GNU Lesser General Public\n License along with this library; if not, write to the Free Software\n Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301  USA\n For more information on the FunctX XQuery library, contact contrib@functx.com.\n", "sees" : [ "<xqdoc:see xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">http://www.xqueryfunctions.com</xqdoc:see>" ], "authors" : [  ], "version" : null, "encoding" : "utf-8", "namespaces" : [ { "uri" : "http://www.functx.com", "prefix" : "functx" } ], "functions" : [ { "isDocumented" : true, "arity" : 3, "name" : "add-attributes", "qname" : "functx:add-attributes", "signature" : "($elements as element(*)*, $attrNames as xs:QName*, $attrValues as xs:anyAtomicType*) as element(*)?", "description" : " Adds attributes to XML elements\n", "summary" : "<p> Adds attributes to XML elements\n</p>", "annotation_str" : "", "annotations" : [  ], "updating" : false, "parameters" : [ { "name" : "elements", "type" : "element(*)", "occurrence" : "*", "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> the element(s) to which you wish to add the attribute</div>" }, { "name" : "attrNames", "type" : "xs:QName", "occurrence" : "*", "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> the name(s) of the attribute(s) to add</div>" }, { "name" : "attrValues", "type" : "xs:anyAtomicType", "occurrence" : "*", "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> the value(s) of the attribute(s) to add</div>" } ], "returns" : { "type" : "element(*)?", "description" : "" }, "errors" : [  ] }, { "isDocumented" : true, "arity" : 2, "name" : "add-months", "qname" : "functx:add-months", "signature" : "($date as xs:anyAtomicType?, $months as xs:integer) as xs:date?", "description" : " Adds months to a date\n", "summary" : "<p> Adds months to a date\n</p>", "annotation_str" : "", "annotations" : [  ], "updating" : false, "parameters" : [ { "name" : "date", "type" : "xs:anyAtomicType", "occurrence" : "?", "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> the date</div>" }, { "name" : "months", "type" : "xs:integer", "occurrence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> the number of months to add</div>" } ], "returns" : { "type" : "xs:date?", "description" : "" }, "errors" : [  ] }, { "isDocumented" : true, "arity" : 3, "name" : "add-or-update-attributes", "qname" : "functx:add-or-update-attributes", "signature" : "($elements as element(*)*, $attrNames as xs:QName*, $attrValues as xs:anyAtomicType*) as element(*)?", "description" : " Adds attributes to XML elements\n", "summary" : "<p> Adds attributes to XML elements\n</p>", "annotation_str" : "", "annotations" : [  ], "updating" : false, "parameters" : [ { "name" : "elements", "type" : "element(*)", "occurrence" : "*", "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> the element(s) to which you wish to add the attribute</div>" }, { "name" : "attrNames", "type" : "xs:QName", "occurrence" : "*", "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> the name(s) of the attribute(s) to add</div>" }, { "name" : "attrValues", "type" : "xs:anyAtomicType", "occurrence" : "*", "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> the value(s) of the attribute(s) to add</div>" } ], "returns" : { "type" : "element(*)?", "description" : "" }, "errors" : [  ] }, { "isDocumented" : true, "arity" : 1, "name" : "all-whitespace", "qname" : "functx:all-whitespace", "signature" : "($arg as xs:string?) as xs:boolean", "description" : " Whether a value is all whitespace or a zero-length string\n", "summary" : "<p> Whether a value is all whitespace or a zero-length string\n</p>", "annotation_str" : "", "annotations" : [  ], "updating" : false, "parameters" : [ { "name" : "arg", "type" : "xs:string", "occurrence" : "?", "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> the string (or node) to test</div>" } ], "returns" : { "type" : "xs:boolean", "description" : "" }, "errors" : [  ] }, { "isDocumented" : true, "arity" : 1, "name" : "are-distinct-values", "qname" : "functx:are-distinct-values", "signature" : "($seq as xs:anyAtomicType*) as xs:boolean", "description" : " Whether all the values in a sequence are distinct\n", "summary" : "<p> Whether all the values in a sequence are distinct\n</p>", "annotation_str" : "", "annotations" : [  ], "updating" : false, "parameters" : [ { "name" : "seq", "type" : "xs:anyAtomicType", "occurrence" : "*", "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> the sequence of values</div>" } ], "returns" : { "type" : "xs:boolean", "description" : "" }, "errors" : [  ] }, { "isDocumented" : true, "arity" : 1, "name" : "atomic-type", "qname" : "functx:atomic-type", "signature" : "($values as xs:anyAtomicType*) as xs:string*", "description" : " The built-in type of an atomic value\n", "summary" : "<p> The built-in type of an atomic value\n</p>", "annotation_str" : "", "annotations" : [  ], "updating" : false, "parameters" : [ { "name" : "values", "type" : "xs:anyAtomicType", "occurrence" : "*", "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> the value(s) whose type you want to determine</div>" } ], "returns" : { "type" : "xs:string*", "description" : "" }, "errors" : [  ] }, { "isDocumented" : true, "arity" : 2, "name" : "avg-empty-is-zero", "qname" : "functx:avg-empty-is-zero", "signature" : "($values as xs:anyAtomicType*, $allNodes as node()*) as xs:double", "description" : " The average, counting \"empty\" values as zero\n", "summary" : "<p> The average, counting \"empty\" values as zero\n</p>", "annotation_str" : "", "annotations" : [  ], "updating" : false, "parameters" : [ { "name" : "values", "type" : "xs:anyAtomicType", "occurrence" : "*", "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> the values to be averaged</div>" }, { "name" : "allNodes", "type" : "node()", "occurrence" : "*", "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> the sequence of all nodes to find the average over</div>" } ], "returns" : { "type" : "xs:double", "description" : "" }, "errors" : [  ] }, { "isDocumented" : true, "arity" : 3, "name" : "between-exclusive", "qname" : "functx:between-exclusive", "signature" : "($value as xs:anyAtomicType?, $minValue as xs:anyAtomicType, $maxValue as xs:anyAtomicType) as xs:boolean", "description" : " Whether a value is between two provided values\n", "summary" : "<p> Whether a value is between two provided values\n</p>", "annotation_str" : "", "annotations" : [  ], "updating" : false, "parameters" : [ { "name" : "value", "type" : "xs:anyAtomicType", "occurrence" : "?", "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> the value to be tested</div>" }, { "name" : "minValue", "type" : "xs:anyAtomicType", "occurrence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> the minimum value</div>" }, { "name" : "maxValue", "type" : "xs:anyAtomicType", "occurrence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> the maximum value</div>" } ], "returns" : { "type" : "xs:boolean", "description" : "" }, "errors" : [  ] }, { "isDocumented" : true, "arity" : 3, "name" : "between-inclusive", "qname" : "functx:between-inclusive", "signature" : "($value as xs:anyAtomicType?, $minValue as xs:anyAtomicType, $maxValue as xs:anyAtomicType) as xs:boolean", "description" : " Whether a value is between two provided values, or equal to one of them\n", "summary" : "<p> Whether a value is between two provided values, or equal to one of them\n</p>", "annotation_str" : "", "annotations" : [  ], "updating" : false, "parameters" : [ { "name" : "value", "type" : "xs:anyAtomicType", "occurrence" : "?", "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> the value to be tested</div>" }, { "name" : "minValue", "type" : "xs:anyAtomicType", "occurrence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> the minimum value</div>" }, { "name" : "maxValue", "type" : "xs:anyAtomicType", "occurrence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> the maximum value</div>" } ], "returns" : { "type" : "xs:boolean", "description" : "" }, "errors" : [  ] }, { "isDocumented" : true, "arity" : 2, "name" : "camel-case-to-words", "qname" : "functx:camel-case-to-words", "signature" : "($arg as xs:string?, $delim as xs:string) as xs:string", "description" : " Turns a camelCase string into space-separated words\n", "summary" : "<p> Turns a camelCase string into space-separated words\n</p>", "annotation_str" : "", "annotations" : [  ], "updating" : false, "parameters" : [ { "name" : "arg", "type" : "xs:string", "occurrence" : "?", "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> the string to modify</div>" }, { "name" : "delim", "type" : "xs:string", "occurrence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> the delimiter for the words (e.g. a space)</div>" } ], "returns" : { "type" : "xs:string", "description" : "" }, "errors" : [  ] }, { "isDocumented" : true, "arity" : 1, "name" : "capitalize-first", "qname" : "functx:capitalize-first", "signature" : "($arg as xs:string?) as xs:string?", "description" : " Capitalizes the first character of a string\n", "summary" : "<p> Capitalizes the first character of a string\n</p>", "annotation_str" : "", "annotations" : [  ], "updating" : false, "parameters" : [ { "name" : "arg", "type" : "xs:string", "occurrence" : "?", "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> the word or phrase to capitalize</div>" } ], "returns" : { "type" : "xs:string?", "description" : "" }, "errors" : [  ] }, { "isDocumented" : true, "arity" : 3, "name" : "change-element-names-deep", "qname" : "functx:change-element-names-deep", "signature" : "($nodes as node()*, $oldNames as xs:QName*, $newNames as xs:QName*) as node()*", "description" : " Changes the names of elements in an XML fragment\n", "summary" : "<p> Changes the names of elements in an XML fragment\n</p>", "annotation_str" : "", "annotations" : [  ], "updating" : false, "parameters" : [ { "name" : "nodes", "type" : "node()", "occurrence" : "*", "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> the element(s) to change</div>" }, { "name" : "oldNames", "type" : "xs:QName", "occurrence" : "*", "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> the sequence of names to change from</div>" }, { "name" : "newNames", "type" : "xs:QName", "occurrence" : "*", "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> the sequence of names to change to</div>" } ], "returns" : { "type" : "node()*", "description" : "" }, "errors" : [  ] }, { "isDocumented" : true, "arity" : 3, "name" : "change-element-ns-deep", "qname" : "functx:change-element-ns-deep", "signature" : "($nodes as node()*, $newns as xs:string, $prefix as xs:string) as node()*", "description" : " Changes the namespace of XML elements and its descendants\n", "summary" : "<p> Changes the namespace of XML elements and its descendants\n</p>", "annotation_str" : "", "annotations" : [  ], "updating" : false, "parameters" : [ { "name" : "nodes", "type" : "node()", "occurrence" : "*", "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> the nodes to change</div>" }, { "name" : "newns", "type" : "xs:string", "occurrence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> the new namespace</div>" }, { "name" : "prefix", "type" : "xs:string", "occurrence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> the prefix to use for the new namespace</div>" } ], "returns" : { "type" : "node()*", "description" : "" }, "errors" : [  ] }, { "isDocumented" : true, "arity" : 3, "name" : "change-element-ns", "qname" : "functx:change-element-ns", "signature" : "($elements as element(*)*, $newns as xs:string, $prefix as xs:string) as element(*)?", "description" : " Changes the namespace of XML elements\n", "summary" : "<p> Changes the namespace of XML elements\n</p>", "annotation_str" : "", "annotations" : [  ], "updating" : false, "parameters" : [ { "name" : "elements", "type" : "element(*)", "occurrence" : "*", "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> the elements to change</div>" }, { "name" : "newns", "type" : "xs:string", "occurrence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> the new namespace</div>" }, { "name" : "prefix", "type" : "xs:string", "occurrence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> the prefix to use for the new namespace</div>" } ], "returns" : { "type" : "element(*)?", "description" : "" }, "errors" : [  ] }, { "isDocumented" : true, "arity" : 1, "name" : "chars", "qname" : "functx:chars", "signature" : "($arg as xs:string?) as xs:string*", "description" : " Converts a string to a sequence of characters\n", "summary" : "<p> Converts a string to a sequence of characters\n</p>", "annotation_str" : "", "annotations" : [  ], "updating" : false, "parameters" : [ { "name" : "arg", "type" : "xs:string", "occurrence" : "?", "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> the string to split</div>" } ], "returns" : { "type" : "xs:string*", "description" : "" }, "errors" : [  ] }, { "isDocumented" : true, "arity" : 2, "name" : "contains-any-of", "qname" : "functx:contains-any-of", "signature" : "($arg as xs:string?, $searchStrings as xs:string*) as xs:boolean", "description" : " Whether a string contains any of a sequence of strings\n", "summary" : "<p> Whether a string contains any of a sequence of strings\n</p>", "annotation_str" : "", "annotations" : [  ], "updating" : false, "parameters" : [ { "name" : "arg", "type" : "xs:string", "occurrence" : "?", "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> the string to test</div>" }, { "name" : "searchStrings", "type" : "xs:string", "occurrence" : "*", "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> the strings to look for</div>" } ], "returns" : { "type" : "xs:boolean", "description" : "" }, "errors" : [  ] }, { "isDocumented" : true, "arity" : 2, "name" : "contains-case-insensitive", "qname" : "functx:contains-case-insensitive", "signature" : "($arg as xs:string?, $substring as xs:string) as xs:boolean?", "description" : " Whether one string contains another, without regard to case\n", "summary" : "<p> Whether one string contains another, without regard to case\n</p>", "annotation_str" : "", "annotations" : [  ], "updating" : false, "parameters" : [ { "name" : "arg", "type" : "xs:string", "occurrence" : "?", "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> the string to search</div>" }, { "name" : "substring", "type" : "xs:string", "occurrence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> the substring to find</div>" } ], "returns" : { "type" : "xs:boolean?", "description" : "" }, "errors" : [  ] }, { "isDocumented" : true, "arity" : 2, "name" : "contains-word", "qname" : "functx:contains-word", "signature" : "($arg as xs:string?, $word as xs:string) as xs:boolean", "description" : " Whether one string contains another, as a separate word\n", "summary" : "<p> Whether one string contains another, as a separate word\n</p>", "annotation_str" : "", "annotations" : [  ], "updating" : false, "parameters" : [ { "name" : "arg", "type" : "xs:string", "occurrence" : "?", "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> the string to search</div>" }, { "name" : "word", "type" : "xs:string", "occurrence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> the word to find</div>" } ], "returns" : { "type" : "xs:boolean", "description" : "" }, "errors" : [  ] }, { "isDocumented" : true, "arity" : 2, "name" : "copy-attributes", "qname" : "functx:copy-attributes", "signature" : "($copyTo as element(*), $copyFrom as element(*)) as element(*)", "description" : " Copies attributes from one element to another\n", "summary" : "<p> Copies attributes from one element to another\n</p>", "annotation_str" : "", "annotations" : [  ], "updating" : false, "parameters" : [ { "name" : "copyTo", "type" : "element(*)", "occurrence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> the element to copy attributes to</div>" }, { "name" : "copyFrom", "type" : "element(*)", "occurrence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> the element to copy attributes from</div>" } ], "returns" : { "type" : "element(*)", "description" : "" }, "errors" : [  ] }, { "isDocumented" : true, "arity" : 3, "name" : "date", "qname" : "functx:date", "signature" : "($year as xs:anyAtomicType, $month as xs:anyAtomicType, $day as xs:anyAtomicType) as xs:date", "description" : " Construct a date from a year, month and day\n", "summary" : "<p> Construct a date from a year, month and day\n</p>", "annotation_str" : "", "annotations" : [  ], "updating" : false, "parameters" : [ { "name" : "year", "type" : "xs:anyAtomicType", "occurrence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> the year</div>" }, { "name" : "month", "type" : "xs:anyAtomicType", "occurrence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> the month</div>" }, { "name" : "day", "type" : "xs:anyAtomicType", "occurrence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> the day</div>" } ], "returns" : { "type" : "xs:date", "description" : "" }, "errors" : [  ] }, { "isDocumented" : true, "arity" : 6, "name" : "dateTime", "qname" : "functx:dateTime", "signature" : "($year as xs:anyAtomicType, $month as xs:anyAtomicType, $day as xs:anyAtomicType, $hour as xs:anyAtomicType, $minute as xs:anyAtomicType, $second as xs:anyAtomicType) as xs:dateTime", "description" : " Construct a date/time from individual components\n", "summary" : "<p> Construct a date/time from individual components\n</p>", "annotation_str" : "", "annotations" : [  ], "updating" : false, "parameters" : [ { "name" : "year", "type" : "xs:anyAtomicType", "occurrence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> the year</div>" }, { "name" : "month", "type" : "xs:anyAtomicType", "occurrence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> the month</div>" }, { "name" : "day", "type" : "xs:anyAtomicType", "occurrence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> the day</div>" }, { "name" : "hour", "type" : "xs:anyAtomicType", "occurrence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> the hour</div>" }, { "name" : "minute", "type" : "xs:anyAtomicType", "occurrence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> the minute</div>" }, { "name" : "second", "type" : "xs:anyAtomicType", "occurrence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> the second</div>" } ], "returns" : { "type" : "xs:dateTime", "description" : "" }, "errors" : [  ] }, { "isDocumented" : true, "arity" : 1, "name" : "day-in-year", "qname" : "functx:day-in-year", "signature" : "($date as xs:anyAtomicType?) as xs:integer?", "description" : " The day of the year (a number between 1 and 366)\n", "summary" : "<p> The day of the year (a number between 1 and 366)\n</p>", "annotation_str" : "", "annotations" : [  ], "updating" : false, "parameters" : [ { "name" : "date", "type" : "xs:anyAtomicType", "occurrence" : "?", "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> the date</div>" } ], "returns" : { "type" : "xs:integer?", "description" : "" }, "errors" : [  ] }, { "isDocumented" : true, "arity" : 1, "name" : "day-of-week-abbrev-en", "qname" : "functx:day-of-week-abbrev-en", "signature" : "($date as xs:anyAtomicType?) as xs:string?", "description" : " The abbreviated day of the week, from a date, in English\n", "summary" : "<p> The abbreviated day of the week, from a date, in English\n</p>", "annotation_str" : "", "annotations" : [  ], "updating" : false, "parameters" : [ { "name" : "date", "type" : "xs:anyAtomicType", "occurrence" : "?", "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> the date</div>" } ], "returns" : { "type" : "xs:string?", "description" : "" }, "errors" : [  ] }, { "isDocumented" : true, "arity" : 1, "name" : "day-of-week-name-en", "qname" : "functx:day-of-week-name-en", "signature" : "($date as xs:anyAtomicType?) as xs:string?", "description" : " The name of the day of the week, from a date, in English\n", "summary" : "<p> The name of the day of the week, from a date, in English\n</p>", "annotation_str" : "", "annotations" : [  ], "updating" : false, "parameters" : [ { "name" : "date", "type" : "xs:anyAtomicType", "occurrence" : "?", "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> the date</div>" } ], "returns" : { "type" : "xs:string?", "description" : "" }, "errors" : [  ] }, { "isDocumented" : true, "arity" : 1, "name" : "day-of-week", "qname" : "functx:day-of-week", "signature" : "($date as xs:anyAtomicType?) as xs:integer?", "description" : " The day of the week, from a date\n", "summary" : "<p> The day of the week, from a date\n</p>", "annotation_str" : "", "annotations" : [  ], "updating" : false, "parameters" : [ { "name" : "date", "type" : "xs:anyAtomicType", "occurrence" : "?", "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> the date</div>" } ], "returns" : { "type" : "xs:integer?", "description" : "" }, "errors" : [  ] }, { "isDocumented" : true, "arity" : 4, "name" : "dayTimeDuration", "qname" : "functx:dayTimeDuration", "signature" : "($days as xs:decimal?, $hours as xs:decimal?, $minutes as xs:decimal?, $seconds as xs:decimal?) as xs:dayTimeDuration", "description" : " Construct a dayTimeDuration from a number of days, hours, etc.\n", "summary" : "<p> Construct a dayTimeDuration from a number of days, hours, etc.</p>", "annotation_str" : "", "annotations" : [  ], "updating" : false, "parameters" : [ { "name" : "days", "type" : "xs:decimal", "occurrence" : "?", "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> the number of days</div>" }, { "name" : "hours", "type" : "xs:decimal", "occurrence" : "?", "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> the number of hours</div>" }, { "name" : "minutes", "type" : "xs:decimal", "occurrence" : "?", "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> the number of minutes</div>" }, { "name" : "seconds", "type" : "xs:decimal", "occurrence" : "?", "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> the number of seconds</div>" } ], "returns" : { "type" : "xs:dayTimeDuration", "description" : "" }, "errors" : [  ] }, { "isDocumented" : true, "arity" : 1, "name" : "days-in-month", "qname" : "functx:days-in-month", "signature" : "($date as xs:anyAtomicType?) as xs:integer?", "description" : " Number of days in the month\n", "summary" : "<p> Number of days in the month\n</p>", "annotation_str" : "", "annotations" : [  ], "updating" : false, "parameters" : [ { "name" : "date", "type" : "xs:anyAtomicType", "occurrence" : "?", "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> the date</div>" } ], "returns" : { "type" : "xs:integer?", "description" : "" }, "errors" : [  ] }, { "isDocumented" : true, "arity" : 1, "name" : "depth-of-node", "qname" : "functx:depth-of-node", "signature" : "($node as node()?) as xs:integer", "description" : " The depth (level) of a node in an XML tree\n", "summary" : "<p> The depth (level) of a node in an XML tree\n</p>", "annotation_str" : "", "annotations" : [  ], "updating" : false, "parameters" : [ { "name" : "node", "type" : "node()", "occurrence" : "?", "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> the node to check</div>" } ], "returns" : { "type" : "xs:integer", "description" : "" }, "errors" : [  ] }, { "isDocumented" : true, "arity" : 1, "name" : "distinct-attribute-names", "qname" : "functx:distinct-attribute-names", "signature" : "($nodes as node()*) as xs:string*", "description" : " The distinct names of all attributes in an XML fragment\n", "summary" : "<p> The distinct names of all attributes in an XML fragment\n</p>", "annotation_str" : "", "annotations" : [  ], "updating" : false, "parameters" : [ { "name" : "nodes", "type" : "node()", "occurrence" : "*", "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> the root to start from</div>" } ], "returns" : { "type" : "xs:string*", "description" : "" }, "errors" : [  ] }, { "isDocumented" : true, "arity" : 1, "name" : "distinct-deep", "qname" : "functx:distinct-deep", "signature" : "($nodes as node()*) as node()*", "description" : " The XML nodes with distinct values, taking into account attributes and descendants\n", "summary" : "<p> The XML nodes with distinct values, taking into account attributes and descendants\n</p>", "annotation_str" : "", "annotations" : [  ], "updating" : false, "parameters" : [ { "name" : "nodes", "type" : "node()", "occurrence" : "*", "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> the sequence of nodes to test</div>" } ], "returns" : { "type" : "node()*", "description" : "" }, "errors" : [  ] }, { "isDocumented" : true, "arity" : 1, "name" : "distinct-element-names", "qname" : "functx:distinct-element-names", "signature" : "($nodes as node()*) as xs:string*", "description" : " The distinct names of all elements in an XML fragment\n", "summary" : "<p> The distinct names of all elements in an XML fragment\n</p>", "annotation_str" : "", "annotations" : [  ], "updating" : false, "parameters" : [ { "name" : "nodes", "type" : "node()", "occurrence" : "*", "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> the root(s) to start from</div>" } ], "returns" : { "type" : "xs:string*", "description" : "" }, "errors" : [  ] }, { "isDocumented" : true, "arity" : 1, "name" : "distinct-element-paths", "qname" : "functx:distinct-element-paths", "signature" : "($nodes as node()*) as xs:string*", "description" : " The distinct paths of all descendant elements in an XML fragment\n", "summary" : "<p> The distinct paths of all descendant elements in an XML fragment\n</p>", "annotation_str" : "", "annotations" : [  ], "updating" : false, "parameters" : [ { "name" : "nodes", "type" : "node()", "occurrence" : "*", "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> the root(s) to start from</div>" } ], "returns" : { "type" : "xs:string*", "description" : "" }, "errors" : [  ] }, { "isDocumented" : true, "arity" : 1, "name" : "distinct-nodes", "qname" : "functx:distinct-nodes", "signature" : "($nodes as node()*) as node()*", "description" : " The distinct XML nodes in a sequence (by node identity)\n", "summary" : "<p> The distinct XML nodes in a sequence (by node identity)\n</p>", "annotation_str" : "", "annotations" : [  ], "updating" : false, "parameters" : [ { "name" : "nodes", "type" : "node()", "occurrence" : "*", "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> the node sequence</div>" } ], "returns" : { "type" : "node()*", "description" : "" }, "errors" : [  ] }, { "isDocumented" : true, "arity" : 1, "name" : "duration-from-timezone", "qname" : "functx:duration-from-timezone", "signature" : "($timezone as xs:string) as xs:dayTimeDuration", "description" : " Converts a timezone like \"-05:00\" or \"Z\" into xs:dayTimeDuration\n", "summary" : "<p> Converts a timezone like \"-05:00\" or \"Z\" into xs:dayTimeDuration\n</p>", "annotation_str" : "", "annotations" : [  ], "updating" : false, "parameters" : [ { "name" : "timezone", "type" : "xs:string", "occurrence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> the time zone, in (+|-)HH:MM format</div>" } ], "returns" : { "type" : "xs:dayTimeDuration", "description" : "" }, "errors" : [  ] }, { "isDocumented" : true, "arity" : 2, "name" : "dynamic-path", "qname" : "functx:dynamic-path", "signature" : "($parent as node(), $path as xs:string) as item()*", "description" : " Dynamically evaluates a simple XPath path\n", "summary" : "<p> Dynamically evaluates a simple XPath path\n</p>", "annotation_str" : "", "annotations" : [  ], "updating" : false, "parameters" : [ { "name" : "parent", "type" : "node()", "occurrence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> the root to start from</div>" }, { "name" : "path", "type" : "xs:string", "occurrence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> the path expression</div>" } ], "returns" : { "type" : "item()*", "description" : "" }, "errors" : [  ] }, { "isDocumented" : true, "arity" : 1, "name" : "escape-for-regex", "qname" : "functx:escape-for-regex", "signature" : "($arg as xs:string?) as xs:string", "description" : " Escapes regex special characters\n", "summary" : "<p> Escapes regex special characters\n</p>", "annotation_str" : "", "annotations" : [  ], "updating" : false, "parameters" : [ { "name" : "arg", "type" : "xs:string", "occurrence" : "?", "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> the string to escape</div>" } ], "returns" : { "type" : "xs:string", "description" : "" }, "errors" : [  ] }, { "isDocumented" : true, "arity" : 2, "name" : "exclusive-or", "qname" : "functx:exclusive-or", "signature" : "($arg1 as xs:boolean?, $arg2 as xs:boolean?) as xs:boolean?", "description" : " Whether one (and only one) of two boolean values is true\n", "summary" : "<p> Whether one (and only one) of two boolean values is true\n</p>", "annotation_str" : "", "annotations" : [  ], "updating" : false, "parameters" : [ { "name" : "arg1", "type" : "xs:boolean", "occurrence" : "?", "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> the first boolean value</div>" }, { "name" : "arg2", "type" : "xs:boolean", "occurrence" : "?", "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> the second boolean value</div>" } ], "returns" : { "type" : "xs:boolean?", "description" : "" }, "errors" : [  ] }, { "isDocumented" : true, "arity" : 1, "name" : "first-day-of-month", "qname" : "functx:first-day-of-month", "signature" : "($date as xs:anyAtomicType?) as xs:date?", "description" : " The first day of the month of a date\n", "summary" : "<p> The first day of the month of a date\n</p>", "annotation_str" : "", "annotations" : [  ], "updating" : false, "parameters" : [ { "name" : "date", "type" : "xs:anyAtomicType", "occurrence" : "?", "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> the date</div>" } ], "returns" : { "type" : "xs:date?", "description" : "" }, "errors" : [  ] }, { "isDocumented" : true, "arity" : 1, "name" : "first-day-of-year", "qname" : "functx:first-day-of-year", "signature" : "($date as xs:anyAtomicType?) as xs:date?", "description" : " The first day of the year of a date\n", "summary" : "<p> The first day of the year of a date\n</p>", "annotation_str" : "", "annotations" : [  ], "updating" : false, "parameters" : [ { "name" : "date", "type" : "xs:anyAtomicType", "occurrence" : "?", "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> the date</div>" } ], "returns" : { "type" : "xs:date?", "description" : "" }, "errors" : [  ] }, { "isDocumented" : true, "arity" : 1, "name" : "first-node", "qname" : "functx:first-node", "signature" : "($nodes as node()*) as node()?", "description" : " The XML node in a sequence that appears first in document order\n", "summary" : "<p> The XML node in a sequence that appears first in document order\n</p>", "annotation_str" : "", "annotations" : [  ], "updating" : false, "parameters" : [ { "name" : "nodes", "type" : "node()", "occurrence" : "*", "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> the sequence of nodes</div>" } ], "returns" : { "type" : "node()?", "description" : "" }, "errors" : [  ] }, { "isDocumented" : true, "arity" : 2, "name" : "follows-not-descendant", "qname" : "functx:follows-not-descendant", "signature" : "($a as node()?, $b as node()?) as xs:boolean", "description" : " Whether an XML node follows another without being its descendant\n", "summary" : "<p> Whether an XML node follows another without being its descendant\n</p>", "annotation_str" : "", "annotations" : [  ], "updating" : false, "parameters" : [ { "name" : "a", "type" : "node()", "occurrence" : "?", "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> the first node</div>" }, { "name" : "b", "type" : "node()", "occurrence" : "?", "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> the second node</div>" } ], "returns" : { "type" : "xs:boolean", "description" : "" }, "errors" : [  ] }, { "isDocumented" : true, "arity" : 1, "name" : "format-as-title-en", "qname" : "functx:format-as-title-en", "signature" : "($titles as xs:string*) as xs:string*", "description" : " Moves title words like \"the\" and \"a\" to the end of strings\n", "summary" : "<p> Moves title words like \"the\" and \"a\" to the end of strings\n</p>", "annotation_str" : "", "annotations" : [  ], "updating" : false, "parameters" : [ { "name" : "titles", "type" : "xs:string", "occurrence" : "*", "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> the titles to format</div>" } ], "returns" : { "type" : "xs:string*", "description" : "" }, "errors" : [  ] }, { "isDocumented" : true, "arity" : 1, "name" : "fragment-from-uri", "qname" : "functx:fragment-from-uri", "signature" : "($uri as xs:string?) as xs:string?", "description" : " Returns the fragment from a URI\n", "summary" : "<p> Returns the fragment from a URI\n</p>", "annotation_str" : "", "annotations" : [  ], "updating" : false, "parameters" : [ { "name" : "uri", "type" : "xs:string", "occurrence" : "?", "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> the URI</div>" } ], "returns" : { "type" : "xs:string?", "description" : "" }, "errors" : [  ] }, { "isDocumented" : true, "arity" : 2, "name" : "get-matches-and-non-matches", "qname" : "functx:get-matches-and-non-matches", "signature" : "($string as xs:string?, $regex as xs:string) as element(*)*", "description" : " Splits a string into matching and non-matching regions\n", "summary" : "<p> Splits a string into matching and non-matching regions\n</p>", "annotation_str" : "", "annotations" : [  ], "updating" : false, "parameters" : [ { "name" : "string", "type" : "xs:string", "occurrence" : "?", "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> the string to split</div>" }, { "name" : "regex", "type" : "xs:string", "occurrence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> the pattern</div>" } ], "returns" : { "type" : "element(*)*", "description" : "" }, "errors" : [  ] }, { "isDocumented" : true, "arity" : 2, "name" : "get-matches", "qname" : "functx:get-matches", "signature" : "($string as xs:string?, $regex as xs:string) as xs:string*", "description" : " Return the matching regions of a string\n", "summary" : "<p> Return the matching regions of a string\n</p>", "annotation_str" : "", "annotations" : [  ], "updating" : false, "parameters" : [ { "name" : "string", "type" : "xs:string", "occurrence" : "?", "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> the string to split</div>" }, { "name" : "regex", "type" : "xs:string", "occurrence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> the pattern</div>" } ], "returns" : { "type" : "xs:string*", "description" : "" }, "errors" : [  ] }, { "isDocumented" : true, "arity" : 1, "name" : "has-element-only-content", "qname" : "functx:has-element-only-content", "signature" : "($element as element(*)) as xs:boolean", "description" : " Whether an element has element-only content\n", "summary" : "<p> Whether an element has element-only content\n</p>", "annotation_str" : "", "annotations" : [  ], "updating" : false, "parameters" : [ { "name" : "element", "type" : "element(*)", "occurrence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> the XML element to test</div>" } ], "returns" : { "type" : "xs:boolean", "description" : "" }, "errors" : [  ] }, { "isDocumented" : true, "arity" : 1, "name" : "has-empty-content", "qname" : "functx:has-empty-content", "signature" : "($element as element(*)) as xs:boolean", "description" : " Whether an element has empty content\n", "summary" : "<p> Whether an element has empty content\n</p>", "annotation_str" : "", "annotations" : [  ], "updating" : false, "parameters" : [ { "name" : "element", "type" : "element(*)", "occurrence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> the XML element to test</div>" } ], "returns" : { "type" : "xs:boolean", "description" : "" }, "errors" : [  ] }, { "isDocumented" : true, "arity" : 1, "name" : "has-mixed-content", "qname" : "functx:has-mixed-content", "signature" : "($element as element(*)) as xs:boolean", "description" : " Whether an element has mixed content\n", "summary" : "<p> Whether an element has mixed content\n</p>", "annotation_str" : "", "annotations" : [  ], "updating" : false, "parameters" : [ { "name" : "element", "type" : "element(*)", "occurrence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> the XML element to test</div>" } ], "returns" : { "type" : "xs:boolean", "description" : "" }, "errors" : [  ] }, { "isDocumented" : true, "arity" : 1, "name" : "has-simple-content", "qname" : "functx:has-simple-content", "signature" : "($element as element(*)) as xs:boolean", "description" : " Whether an element has simple content\n", "summary" : "<p> Whether an element has simple content\n</p>", "annotation_str" : "", "annotations" : [  ], "updating" : false, "parameters" : [ { "name" : "element", "type" : "element(*)", "occurrence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> the XML element to test</div>" } ], "returns" : { "type" : "xs:boolean", "description" : "" }, "errors" : [  ] }, { "isDocumented" : true, "arity" : 1, "name" : "id-from-element", "qname" : "functx:id-from-element", "signature" : "($element as element(*)?) as xs:string?", "description" : " Gets the ID of an XML element\n", "summary" : "<p> Gets the ID of an XML element\n</p>", "annotation_str" : "", "annotations" : [  ], "updating" : false, "parameters" : [ { "name" : "element", "type" : "element(*)", "occurrence" : "?", "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> the element</div>" } ], "returns" : { "type" : "xs:string?", "description" : "" }, "errors" : [  ] }, { "isDocumented" : true, "arity" : 2, "name" : "id-untyped", "qname" : "functx:id-untyped", "signature" : "($node as node()*, $id as xs:anyAtomicType) as element(*)*", "description" : " Gets XML element(s) that have an attribute with a particular value\n", "summary" : "<p> Gets XML element(s) that have an attribute with a particular value\n</p>", "annotation_str" : "", "annotations" : [  ], "updating" : false, "parameters" : [ { "name" : "node", "type" : "node()", "occurrence" : "*", "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> the root node(s) to start from</div>" }, { "name" : "id", "type" : "xs:anyAtomicType", "occurrence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> the \"id\" to find</div>" } ], "returns" : { "type" : "element(*)*", "description" : "" }, "errors" : [  ] }, { "isDocumented" : true, "arity" : 2, "name" : "if-absent", "qname" : "functx:if-absent", "signature" : "($arg as item()*, $value as item()*) as item()*", "description" : " The first argument if it is not empty, otherwise the second argument\n", "summary" : "<p> The first argument if it is not empty, otherwise the second argument\n</p>", "annotation_str" : "", "annotations" : [  ], "updating" : false, "parameters" : [ { "name" : "arg", "type" : "item()", "occurrence" : "*", "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> the item(s) that may be absent</div>" }, { "name" : "value", "type" : "item()", "occurrence" : "*", "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> the item(s) to use if the item is absent</div>" } ], "returns" : { "type" : "item()*", "description" : "" }, "errors" : [  ] }, { "isDocumented" : true, "arity" : 2, "name" : "if-empty", "qname" : "functx:if-empty", "signature" : "($arg as item()?, $value as item()*) as item()*", "description" : " The first argument if it is not blank, otherwise the second argument\n", "summary" : "<p> The first argument if it is not blank, otherwise the second argument\n</p>", "annotation_str" : "", "annotations" : [  ], "updating" : false, "parameters" : [ { "name" : "arg", "type" : "item()", "occurrence" : "?", "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> the node that may be empty</div>" }, { "name" : "value", "type" : "item()", "occurrence" : "*", "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> the item(s) to use if the node is empty</div>" } ], "returns" : { "type" : "item()*", "description" : "" }, "errors" : [  ] }, { "isDocumented" : true, "arity" : 2, "name" : "index-of-deep-equal-node", "qname" : "functx:index-of-deep-equal-node", "signature" : "($nodes as node()*, $nodeToFind as node()) as xs:integer*", "description" : " The position of a node in a sequence, based on contents and attributes\n", "summary" : "<p> The position of a node in a sequence, based on contents and attributes\n</p>", "annotation_str" : "", "annotations" : [  ], "updating" : false, "parameters" : [ { "name" : "nodes", "type" : "node()", "occurrence" : "*", "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> the node sequence</div>" }, { "name" : "nodeToFind", "type" : "node()", "occurrence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> the node to find in the sequence</div>" } ], "returns" : { "type" : "xs:integer*", "description" : "" }, "errors" : [  ] }, { "isDocumented" : true, "arity" : 2, "name" : "index-of-match-first", "qname" : "functx:index-of-match-first", "signature" : "($arg as xs:string?, $pattern as xs:string) as xs:integer?", "description" : " The first position of a matching substring\n", "summary" : "<p> The first position of a matching substring\n</p>", "annotation_str" : "", "annotations" : [  ], "updating" : false, "parameters" : [ { "name" : "arg", "type" : "xs:string", "occurrence" : "?", "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> the string</div>" }, { "name" : "pattern", "type" : "xs:string", "occurrence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> the pattern to match</div>" } ], "returns" : { "type" : "xs:integer?", "description" : "" }, "errors" : [  ] }, { "isDocumented" : true, "arity" : 2, "name" : "index-of-node", "qname" : "functx:index-of-node", "signature" : "($nodes as node()*, $nodeToFind as node()) as xs:integer*", "description" : " The position of a node in a sequence, based on node identity\n", "summary" : "<p> The position of a node in a sequence, based on node identity\n</p>", "annotation_str" : "", "annotations" : [  ], "updating" : false, "parameters" : [ { "name" : "nodes", "type" : "node()", "occurrence" : "*", "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> the node sequence</div>" }, { "name" : "nodeToFind", "type" : "node()", "occurrence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> the node to find in the sequence</div>" } ], "returns" : { "type" : "xs:integer*", "description" : "" }, "errors" : [  ] }, { "isDocumented" : true, "arity" : 2, "name" : "index-of-string-first", "qname" : "functx:index-of-string-first", "signature" : "($arg as xs:string?, $substring as xs:string) as xs:integer?", "description" : " The first position of a substring\n", "summary" : "<p> The first position of a substring\n</p>", "annotation_str" : "", "annotations" : [  ], "updating" : false, "parameters" : [ { "name" : "arg", "type" : "xs:string", "occurrence" : "?", "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> the string</div>" }, { "name" : "substring", "type" : "xs:string", "occurrence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> the substring to find</div>" } ], "returns" : { "type" : "xs:integer?", "description" : "" }, "errors" : [  ] }, { "isDocumented" : true, "arity" : 2, "name" : "index-of-string-last", "qname" : "functx:index-of-string-last", "signature" : "($arg as xs:string?, $substring as xs:string) as xs:integer?", "description" : " The last position of a substring\n", "summary" : "<p> The last position of a substring\n</p>", "annotation_str" : "", "annotations" : [  ], "updating" : false, "parameters" : [ { "name" : "arg", "type" : "xs:string", "occurrence" : "?", "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> the string</div>" }, { "name" : "substring", "type" : "xs:string", "occurrence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> the substring to find</div>" } ], "returns" : { "type" : "xs:integer?", "description" : "" }, "errors" : [  ] }, { "isDocumented" : true, "arity" : 2, "name" : "index-of-string", "qname" : "functx:index-of-string", "signature" : "($arg as xs:string?, $substring as xs:string) as xs:integer*", "description" : " The position(s) of a substring\n", "summary" : "<p> The position(s) of a substring\n</p>", "annotation_str" : "", "annotations" : [  ], "updating" : false, "parameters" : [ { "name" : "arg", "type" : "xs:string", "occurrence" : "?", "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> the string</div>" }, { "name" : "substring", "type" : "xs:string", "occurrence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> the substring to find</div>" } ], "returns" : { "type" : "xs:integer*", "description" : "" }, "errors" : [  ] }, { "isDocumented" : true, "arity" : 3, "name" : "insert-string", "qname" : "functx:insert-string", "signature" : "($originalString as xs:string?, $stringToInsert as xs:string?, $pos as xs:integer) as xs:string", "description" : " Inserts a string at a specified position\n", "summary" : "<p> Inserts a string at a specified position\n</p>", "annotation_str" : "", "annotations" : [  ], "updating" : false, "parameters" : [ { "name" : "originalString", "type" : "xs:string", "occurrence" : "?", "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> the original string to insert into</div>" }, { "name" : "stringToInsert", "type" : "xs:string", "occurrence" : "?", "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> the string to insert</div>" }, { "name" : "pos", "type" : "xs:integer", "occurrence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> the position</div>" } ], "returns" : { "type" : "xs:string", "description" : "" }, "errors" : [  ] }, { "isDocumented" : true, "arity" : 1, "name" : "is-a-number", "qname" : "functx:is-a-number", "signature" : "($value as xs:anyAtomicType?) as xs:boolean", "description" : " Whether a value is numeric\n", "summary" : "<p> Whether a value is numeric\n</p>", "annotation_str" : "", "annotations" : [  ], "updating" : false, "parameters" : [ { "name" : "value", "type" : "xs:anyAtomicType", "occurrence" : "?", "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> the value to test</div>" } ], "returns" : { "type" : "xs:boolean", "description" : "" }, "errors" : [  ] }, { "isDocumented" : true, "arity" : 1, "name" : "is-absolute-uri", "qname" : "functx:is-absolute-uri", "signature" : "($uri as xs:string?) as xs:boolean", "description" : " Whether a URI is absolute\n", "summary" : "<p> Whether a URI is absolute\n</p>", "annotation_str" : "", "annotations" : [  ], "updating" : false, "parameters" : [ { "name" : "uri", "type" : "xs:string", "occurrence" : "?", "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> the URI to test</div>" } ], "returns" : { "type" : "xs:boolean", "description" : "" }, "errors" : [  ] }, { "isDocumented" : true, "arity" : 2, "name" : "is-ancestor", "qname" : "functx:is-ancestor", "signature" : "($node1 as node(), $node2 as node()) as xs:boolean", "description" : " Whether an XML node is an ancestor of another node\n", "summary" : "<p> Whether an XML node is an ancestor of another node\n</p>", "annotation_str" : "", "annotations" : [  ], "updating" : false, "parameters" : [ { "name" : "node1", "type" : "node()", "occurrence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> the first node</div>" }, { "name" : "node2", "type" : "node()", "occurrence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> the second node</div>" } ], "returns" : { "type" : "xs:boolean", "description" : "" }, "errors" : [  ] }, { "isDocumented" : true, "arity" : 2, "name" : "is-descendant", "qname" : "functx:is-descendant", "signature" : "($node1 as node(), $node2 as node()) as xs:boolean", "description" : " Whether an XML node is a descendant of another node\n", "summary" : "<p> Whether an XML node is a descendant of another node\n</p>", "annotation_str" : "", "annotations" : [  ], "updating" : false, "parameters" : [ { "name" : "node1", "type" : "node()", "occurrence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> the first node</div>" }, { "name" : "node2", "type" : "node()", "occurrence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> the second node</div>" } ], "returns" : { "type" : "xs:boolean", "description" : "" }, "errors" : [  ] }, { "isDocumented" : true, "arity" : 1, "name" : "is-leap-year", "qname" : "functx:is-leap-year", "signature" : "($date as xs:anyAtomicType?) as xs:boolean", "description" : " Whether a date falls in a leap year\n", "summary" : "<p> Whether a date falls in a leap year\n</p>", "annotation_str" : "", "annotations" : [  ], "updating" : false, "parameters" : [ { "name" : "date", "type" : "xs:anyAtomicType", "occurrence" : "?", "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> the date or year</div>" } ], "returns" : { "type" : "xs:boolean", "description" : "" }, "errors" : [  ] }, { "isDocumented" : true, "arity" : 2, "name" : "is-node-among-descendants-deep-equal", "qname" : "functx:is-node-among-descendants-deep-equal", "signature" : "($node as node()?, $seq as node()*) as xs:boolean", "description" : " Whether an XML node is among the descendants of a sequence, based on contents and attributes\n", "summary" : "<p> Whether an XML node is among the descendants of a sequence, based on contents and attributes\n</p>", "annotation_str" : "", "annotations" : [  ], "updating" : false, "parameters" : [ { "name" : "node", "type" : "node()", "occurrence" : "?", "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> the node to test</div>" }, { "name" : "seq", "type" : "node()", "occurrence" : "*", "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> the sequence of nodes to search</div>" } ], "returns" : { "type" : "xs:boolean", "description" : "" }, "errors" : [  ] }, { "isDocumented" : true, "arity" : 2, "name" : "is-node-among-descendants", "qname" : "functx:is-node-among-descendants", "signature" : "($node as node()?, $seq as node()*) as xs:boolean", "description" : " Whether an XML node is among the descendants of a sequence, based on node identity\n", "summary" : "<p> Whether an XML node is among the descendants of a sequence, based on node identity\n</p>", "annotation_str" : "", "annotations" : [  ], "updating" : false, "parameters" : [ { "name" : "node", "type" : "node()", "occurrence" : "?", "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> the node to test</div>" }, { "name" : "seq", "type" : "node()", "occurrence" : "*", "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> the sequence of nodes to search</div>" } ], "returns" : { "type" : "xs:boolean", "description" : "" }, "errors" : [  ] }, { "isDocumented" : true, "arity" : 2, "name" : "is-node-in-sequence-deep-equal", "qname" : "functx:is-node-in-sequence-deep-equal", "signature" : "($node as node()?, $seq as node()*) as xs:boolean", "description" : " Whether an XML node is in a sequence, based on contents and attributes\n", "summary" : "<p> Whether an XML node is in a sequence, based on contents and attributes\n</p>", "annotation_str" : "", "annotations" : [  ], "updating" : false, "parameters" : [ { "name" : "node", "type" : "node()", "occurrence" : "?", "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> the node to test</div>" }, { "name" : "seq", "type" : "node()", "occurrence" : "*", "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> the sequence of nodes to search</div>" } ], "returns" : { "type" : "xs:boolean", "description" : "" }, "errors" : [  ] }, { "isDocumented" : true, "arity" : 2, "name" : "is-node-in-sequence", "qname" : "functx:is-node-in-sequence", "signature" : "($node as node()?, $seq as node()*) as xs:boolean", "description" : " Whether an XML node is in a sequence, based on node identity\n", "summary" : "<p> Whether an XML node is in a sequence, based on node identity\n</p>", "annotation_str" : "", "annotations" : [  ], "updating" : false, "parameters" : [ { "name" : "node", "type" : "node()", "occurrence" : "?", "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> the node to test</div>" }, { "name" : "seq", "type" : "node()", "occurrence" : "*", "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> the sequence of nodes to search</div>" } ], "returns" : { "type" : "xs:boolean", "description" : "" }, "errors" : [  ] }, { "isDocumented" : true, "arity" : 2, "name" : "is-value-in-sequence", "qname" : "functx:is-value-in-sequence", "signature" : "($value as xs:anyAtomicType?, $seq as xs:anyAtomicType*) as xs:boolean", "description" : " Whether an atomic value appears in a sequence\n", "summary" : "<p> Whether an atomic value appears in a sequence\n</p>", "annotation_str" : "", "annotations" : [  ], "updating" : false, "parameters" : [ { "name" : "value", "type" : "xs:anyAtomicType", "occurrence" : "?", "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> the atomic value to test</div>" }, { "name" : "seq", "type" : "xs:anyAtomicType", "occurrence" : "*", "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> the sequence of values to search</div>" } ], "returns" : { "type" : "xs:boolean", "description" : "" }, "errors" : [  ] }, { "isDocumented" : true, "arity" : 1, "name" : "last-day-of-month", "qname" : "functx:last-day-of-month", "signature" : "($date as xs:anyAtomicType?) as xs:date?", "description" : " The last day of the month of a date\n", "summary" : "<p> The last day of the month of a date\n</p>", "annotation_str" : "", "annotations" : [  ], "updating" : false, "parameters" : [ { "name" : "date", "type" : "xs:anyAtomicType", "occurrence" : "?", "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> the date</div>" } ], "returns" : { "type" : "xs:date?", "description" : "" }, "errors" : [  ] }, { "isDocumented" : true, "arity" : 1, "name" : "last-day-of-year", "qname" : "functx:last-day-of-year", "signature" : "($date as xs:anyAtomicType?) as xs:date?", "description" : " The last day of the month of a date\n", "summary" : "<p> The last day of the month of a date\n</p>", "annotation_str" : "", "annotations" : [  ], "updating" : false, "parameters" : [ { "name" : "date", "type" : "xs:anyAtomicType", "occurrence" : "?", "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> the date</div>" } ], "returns" : { "type" : "xs:date?", "description" : "" }, "errors" : [  ] }, { "isDocumented" : true, "arity" : 1, "name" : "last-node", "qname" : "functx:last-node", "signature" : "($nodes as node()*) as node()?", "description" : " The XML node in a sequence that is last in document order\n", "summary" : "<p> The XML node in a sequence that is last in document order\n</p>", "annotation_str" : "", "annotations" : [  ], "updating" : false, "parameters" : [ { "name" : "nodes", "type" : "node()", "occurrence" : "*", "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> the sequence of nodes</div>" } ], "returns" : { "type" : "node()?", "description" : "" }, "errors" : [  ] }, { "isDocumented" : true, "arity" : 1, "name" : "leaf-elements", "qname" : "functx:leaf-elements", "signature" : "($root as node()?) as element(*)*", "description" : " All XML elements that don't have any child elements\n", "summary" : "<p> All XML elements that don't have any child elements\n</p>", "annotation_str" : "", "annotations" : [  ], "updating" : false, "parameters" : [ { "name" : "root", "type" : "node()", "occurrence" : "?", "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> the root</div>" } ], "returns" : { "type" : "element(*)*", "description" : "" }, "errors" : [  ] }, { "isDocumented" : true, "arity" : 1, "name" : "left-trim", "qname" : "functx:left-trim", "signature" : "($arg as xs:string?) as xs:string", "description" : " Trims leading whitespace\n", "summary" : "<p> Trims leading whitespace\n</p>", "annotation_str" : "", "annotations" : [  ], "updating" : false, "parameters" : [ { "name" : "arg", "type" : "xs:string", "occurrence" : "?", "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> the string to trim</div>" } ], "returns" : { "type" : "xs:string", "description" : "" }, "errors" : [  ] }, { "isDocumented" : true, "arity" : 1, "name" : "line-count", "qname" : "functx:line-count", "signature" : "($arg as xs:string?) as xs:integer", "description" : " The number of lines\n", "summary" : "<p> The number of lines\n</p>", "annotation_str" : "", "annotations" : [  ], "updating" : false, "parameters" : [ { "name" : "arg", "type" : "xs:string", "occurrence" : "?", "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> the string to test</div>" } ], "returns" : { "type" : "xs:integer", "description" : "" }, "errors" : [  ] }, { "isDocumented" : true, "arity" : 1, "name" : "lines", "qname" : "functx:lines", "signature" : "($arg as xs:string?) as xs:string*", "description" : " Split a string into separate lines\n", "summary" : "<p> Split a string into separate lines\n</p>", "annotation_str" : "", "annotations" : [  ], "updating" : false, "parameters" : [ { "name" : "arg", "type" : "xs:string", "occurrence" : "?", "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> the string to split</div>" } ], "returns" : { "type" : "xs:string*", "description" : "" }, "errors" : [  ] }, { "isDocumented" : true, "arity" : 1, "name" : "max-depth", "qname" : "functx:max-depth", "signature" : "($root as node()?) as xs:integer?", "description" : " The maximum depth of elements in an XML tree\n", "summary" : "<p> The maximum depth of elements in an XML tree\n</p>", "annotation_str" : "", "annotations" : [  ], "updating" : false, "parameters" : [ { "name" : "root", "type" : "node()", "occurrence" : "?", "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> the root to start from</div>" } ], "returns" : { "type" : "xs:integer?", "description" : "" }, "errors" : [  ] }, { "isDocumented" : true, "arity" : 1, "name" : "max-determine-type", "qname" : "functx:max-determine-type", "signature" : "($seq as xs:anyAtomicType*) as xs:anyAtomicType?", "description" : " The maximum value in a sequence, figuring out its type (numeric or string)\n", "summary" : "<p> The maximum value in a sequence, figuring out its type (numeric or string)\n</p>", "annotation_str" : "", "annotations" : [  ], "updating" : false, "parameters" : [ { "name" : "seq", "type" : "xs:anyAtomicType", "occurrence" : "*", "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> the sequence of values to test</div>" } ], "returns" : { "type" : "xs:anyAtomicType?", "description" : "" }, "errors" : [  ] }, { "isDocumented" : true, "arity" : 1, "name" : "max-line-length", "qname" : "functx:max-line-length", "signature" : "($arg as xs:string?) as xs:integer", "description" : " The maximum line length\n", "summary" : "<p> The maximum line length\n</p>", "annotation_str" : "", "annotations" : [  ], "updating" : false, "parameters" : [ { "name" : "arg", "type" : "xs:string", "occurrence" : "?", "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> the string to test</div>" } ], "returns" : { "type" : "xs:integer", "description" : "" }, "errors" : [  ] }, { "isDocumented" : true, "arity" : 1, "name" : "max-node", "qname" : "functx:max-node", "signature" : "($nodes as node()*) as node()*", "description" : " The XML node whose typed value is the maximum\n", "summary" : "<p> The XML node whose typed value is the maximum\n</p>", "annotation_str" : "", "annotations" : [  ], "updating" : false, "parameters" : [ { "name" : "nodes", "type" : "node()", "occurrence" : "*", "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> the sequence of nodes to test</div>" } ], "returns" : { "type" : "node()*", "description" : "" }, "errors" : [  ] }, { "isDocumented" : true, "arity" : 1, "name" : "max-string", "qname" : "functx:max-string", "signature" : "($strings as xs:anyAtomicType*) as xs:string?", "description" : " The maximum of a sequence of values, treating them like strings\n", "summary" : "<p> The maximum of a sequence of values, treating them like strings\n</p>", "annotation_str" : "", "annotations" : [  ], "updating" : false, "parameters" : [ { "name" : "strings", "type" : "xs:anyAtomicType", "occurrence" : "*", "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> the sequence of values</div>" } ], "returns" : { "type" : "xs:string?", "description" : "" }, "errors" : [  ] }, { "isDocumented" : true, "arity" : 1, "name" : "min-determine-type", "qname" : "functx:min-determine-type", "signature" : "($seq as xs:anyAtomicType*) as xs:anyAtomicType?", "description" : " The minimum value in a sequence, figuring out its type (numeric or string)\n", "summary" : "<p> The minimum value in a sequence, figuring out its type (numeric or string)\n</p>", "annotation_str" : "", "annotations" : [  ], "updating" : false, "parameters" : [ { "name" : "seq", "type" : "xs:anyAtomicType", "occurrence" : "*", "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> the sequence of values to test</div>" } ], "returns" : { "type" : "xs:anyAtomicType?", "description" : "" }, "errors" : [  ] }, { "isDocumented" : true, "arity" : 1, "name" : "min-node", "qname" : "functx:min-node", "signature" : "($nodes as node()*) as node()*", "description" : " The XML node whose typed value is the minimum\n", "summary" : "<p> The XML node whose typed value is the minimum\n</p>", "annotation_str" : "", "annotations" : [  ], "updating" : false, "parameters" : [ { "name" : "nodes", "type" : "node()", "occurrence" : "*", "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> the sequence of nodes to test</div>" } ], "returns" : { "type" : "node()*", "description" : "" }, "errors" : [  ] }, { "isDocumented" : true, "arity" : 1, "name" : "min-non-empty-string", "qname" : "functx:min-non-empty-string", "signature" : "($strings as xs:string*) as xs:string?", "description" : " The minimum of a sequence of strings, ignoring \"empty\" values\n", "summary" : "<p> The minimum of a sequence of strings, ignoring \"empty\" values\n</p>", "annotation_str" : "", "annotations" : [  ], "updating" : false, "parameters" : [ { "name" : "strings", "type" : "xs:string", "occurrence" : "*", "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> the sequence of strings to search</div>" } ], "returns" : { "type" : "xs:string?", "description" : "" }, "errors" : [  ] }, { "isDocumented" : true, "arity" : 1, "name" : "min-string", "qname" : "functx:min-string", "signature" : "($strings as xs:anyAtomicType*) as xs:string?", "description" : " The minimum of a sequence of values, treating them like strings\n", "summary" : "<p> The minimum of a sequence of values, treating them like strings\n</p>", "annotation_str" : "", "annotations" : [  ], "updating" : false, "parameters" : [ { "name" : "strings", "type" : "xs:anyAtomicType", "occurrence" : "*", "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> the sequence of strings</div>" } ], "returns" : { "type" : "xs:string?", "description" : "" }, "errors" : [  ] }, { "isDocumented" : true, "arity" : 1, "name" : "mmddyyyy-to-date", "qname" : "functx:mmddyyyy-to-date", "signature" : "($dateString as xs:string?) as xs:date?", "description" : " Converts a string with format MMDDYYYY (with any delimiters) to a date\n", "summary" : "<p> Converts a string with format MMDDYYYY (with any delimiters) to a date\n</p>", "annotation_str" : "", "annotations" : [  ], "updating" : false, "parameters" : [ { "name" : "dateString", "type" : "xs:string", "occurrence" : "?", "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> the MMDDYYYY string</div>" } ], "returns" : { "type" : "xs:date?", "description" : "" }, "errors" : [  ] }, { "isDocumented" : true, "arity" : 1, "name" : "month-abbrev-en", "qname" : "functx:month-abbrev-en", "signature" : "($date as xs:anyAtomicType?) as xs:string?", "description" : " The month of a date as an abbreviated word (Jan, Feb, etc.)\n", "summary" : "<p> The month of a date as an abbreviated word (Jan, Feb, etc.</p>", "annotation_str" : "", "annotations" : [  ], "updating" : false, "parameters" : [ { "name" : "date", "type" : "xs:anyAtomicType", "occurrence" : "?", "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> the date</div>" } ], "returns" : { "type" : "xs:string?", "description" : "" }, "errors" : [  ] }, { "isDocumented" : true, "arity" : 1, "name" : "month-name-en", "qname" : "functx:month-name-en", "signature" : "($date as xs:anyAtomicType?) as xs:string?", "description" : " The month of a date as a word (January, February, etc.)\n", "summary" : "<p> The month of a date as a word (January, February, etc.</p>", "annotation_str" : "", "annotations" : [  ], "updating" : false, "parameters" : [ { "name" : "date", "type" : "xs:anyAtomicType", "occurrence" : "?", "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> the date</div>" } ], "returns" : { "type" : "xs:string?", "description" : "" }, "errors" : [  ] }, { "isDocumented" : true, "arity" : 2, "name" : "name-test", "qname" : "functx:name-test", "signature" : "($testname as xs:string?, $names as xs:string*) as xs:boolean", "description" : " Whether a name matches a list of names or name wildcards\n", "summary" : "<p> Whether a name matches a list of names or name wildcards\n</p>", "annotation_str" : "", "annotations" : [  ], "updating" : false, "parameters" : [ { "name" : "testname", "type" : "xs:string", "occurrence" : "?", "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> the name to test</div>" }, { "name" : "names", "type" : "xs:string", "occurrence" : "*", "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> the list of names or name wildcards</div>" } ], "returns" : { "type" : "xs:boolean", "description" : "" }, "errors" : [  ] }, { "isDocumented" : true, "arity" : 1, "name" : "namespaces-in-use", "qname" : "functx:namespaces-in-use", "signature" : "($root as node()?) as xs:anyURI*", "description" : " A list of namespaces used in element/attribute names in an XML fragment\n", "summary" : "<p> A list of namespaces used in element/attribute names in an XML fragment\n</p>", "annotation_str" : "", "annotations" : [  ], "updating" : false, "parameters" : [ { "name" : "root", "type" : "node()", "occurrence" : "?", "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> the root node to start from</div>" } ], "returns" : { "type" : "xs:anyURI*", "description" : "" }, "errors" : [  ] }, { "isDocumented" : true, "arity" : 1, "name" : "next-day", "qname" : "functx:next-day", "signature" : "($date as xs:anyAtomicType?) as xs:date?", "description" : " The next day\n", "summary" : "<p> The next day\n</p>", "annotation_str" : "", "annotations" : [  ], "updating" : false, "parameters" : [ { "name" : "date", "type" : "xs:anyAtomicType", "occurrence" : "?", "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> the date</div>" } ], "returns" : { "type" : "xs:date?", "description" : "" }, "errors" : [  ] }, { "isDocumented" : true, "arity" : 1, "name" : "node-kind", "qname" : "functx:node-kind", "signature" : "($nodes as node()*) as xs:string*", "description" : " The XML node kind (element, attribute, text, etc.)\n", "summary" : "<p> The XML node kind (element, attribute, text, etc.</p>", "annotation_str" : "", "annotations" : [  ], "updating" : false, "parameters" : [ { "name" : "nodes", "type" : "node()", "occurrence" : "*", "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> the node(s) whose kind you want to determine</div>" } ], "returns" : { "type" : "xs:string*", "description" : "" }, "errors" : [  ] }, { "isDocumented" : true, "arity" : 1, "name" : "non-distinct-values", "qname" : "functx:non-distinct-values", "signature" : "($seq as xs:anyAtomicType*) as xs:anyAtomicType*", "description" : " Returns any values that appear more than once in a sequence\n", "summary" : "<p> Returns any values that appear more than once in a sequence\n</p>", "annotation_str" : "", "annotations" : [  ], "updating" : false, "parameters" : [ { "name" : "seq", "type" : "xs:anyAtomicType", "occurrence" : "*", "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> the sequence of values</div>" } ], "returns" : { "type" : "xs:anyAtomicType*", "description" : "" }, "errors" : [  ] }, { "isDocumented" : true, "arity" : 2, "name" : "number-of-matches", "qname" : "functx:number-of-matches", "signature" : "($arg as xs:string?, $pattern as xs:string) as xs:integer", "description" : " The number of regions that match a pattern\n", "summary" : "<p> The number of regions that match a pattern\n</p>", "annotation_str" : "", "annotations" : [  ], "updating" : false, "parameters" : [ { "name" : "arg", "type" : "xs:string", "occurrence" : "?", "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> the string to test</div>" }, { "name" : "pattern", "type" : "xs:string", "occurrence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> the regular expression</div>" } ], "returns" : { "type" : "xs:integer", "description" : "" }, "errors" : [  ] }, { "isDocumented" : true, "arity" : 1, "name" : "ordinal-number-en", "qname" : "functx:ordinal-number-en", "signature" : "($num as xs:integer?) as xs:string", "description" : " Reformats a number as an ordinal number, e.g. 1st, 2nd, 3rd.\n", "summary" : "<p> Reformats a number as an ordinal number, e.</p>", "annotation_str" : "", "annotations" : [  ], "updating" : false, "parameters" : [ { "name" : "num", "type" : "xs:integer", "occurrence" : "?", "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> the number</div>" } ], "returns" : { "type" : "xs:string", "description" : "" }, "errors" : [  ] }, { "isDocumented" : true, "arity" : 2, "name" : "pad-integer-to-length", "qname" : "functx:pad-integer-to-length", "signature" : "($integerToPad as xs:anyAtomicType?, $length as xs:integer) as xs:string", "description" : " Pads an integer to a desired length by adding leading zeros\n", "summary" : "<p> Pads an integer to a desired length by adding leading zeros\n</p>", "annotation_str" : "", "annotations" : [  ], "updating" : false, "parameters" : [ { "name" : "integerToPad", "type" : "xs:anyAtomicType", "occurrence" : "?", "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> the integer to pad</div>" }, { "name" : "length", "type" : "xs:integer", "occurrence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> the desired length</div>" } ], "returns" : { "type" : "xs:string", "description" : "" }, "errors" : [  ] }, { "isDocumented" : true, "arity" : 3, "name" : "pad-string-to-length", "qname" : "functx:pad-string-to-length", "signature" : "($stringToPad as xs:string?, $padChar as xs:string, $length as xs:integer) as xs:string", "description" : " Pads a string to a desired length\n", "summary" : "<p> Pads a string to a desired length\n</p>", "annotation_str" : "", "annotations" : [  ], "updating" : false, "parameters" : [ { "name" : "stringToPad", "type" : "xs:string", "occurrence" : "?", "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> the string to pad</div>" }, { "name" : "padChar", "type" : "xs:string", "occurrence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> the character(s) to use as padding</div>" }, { "name" : "length", "type" : "xs:integer", "occurrence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> the desired length</div>" } ], "returns" : { "type" : "xs:string", "description" : "" }, "errors" : [  ] }, { "isDocumented" : true, "arity" : 1, "name" : "path-to-node-with-pos", "qname" : "functx:path-to-node-with-pos", "signature" : "($node as node()?) as xs:string", "description" : " A unique path to an XML node (or sequence of nodes)\n", "summary" : "<p> A unique path to an XML node (or sequence of nodes)\n</p>", "annotation_str" : "", "annotations" : [  ], "updating" : false, "parameters" : [ { "name" : "node", "type" : "node()", "occurrence" : "?", "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> the node sequence</div>" } ], "returns" : { "type" : "xs:string", "description" : "" }, "errors" : [  ] }, { "isDocumented" : true, "arity" : 1, "name" : "path-to-node", "qname" : "functx:path-to-node", "signature" : "($nodes as node()*) as xs:string*", "description" : " A path to an XML node (or sequence of nodes)\n", "summary" : "<p> A path to an XML node (or sequence of nodes)\n</p>", "annotation_str" : "", "annotations" : [  ], "updating" : false, "parameters" : [ { "name" : "nodes", "type" : "node()", "occurrence" : "*", "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> the node sequence</div>" } ], "returns" : { "type" : "xs:string*", "description" : "" }, "errors" : [  ] }, { "isDocumented" : true, "arity" : 2, "name" : "precedes-not-ancestor", "qname" : "functx:precedes-not-ancestor", "signature" : "($a as node()?, $b as node()?) as xs:boolean", "description" : " Whether an XML node precedes another without being its ancestor\n", "summary" : "<p> Whether an XML node precedes another without being its ancestor\n</p>", "annotation_str" : "", "annotations" : [  ], "updating" : false, "parameters" : [ { "name" : "a", "type" : "node()", "occurrence" : "?", "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> the first node</div>" }, { "name" : "b", "type" : "node()", "occurrence" : "?", "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> the second node</div>" } ], "returns" : { "type" : "xs:boolean", "description" : "" }, "errors" : [  ] }, { "isDocumented" : true, "arity" : 1, "name" : "previous-day", "qname" : "functx:previous-day", "signature" : "($date as xs:anyAtomicType?) as xs:date?", "description" : " The previous day\n", "summary" : "<p> The previous day\n</p>", "annotation_str" : "", "annotations" : [  ], "updating" : false, "parameters" : [ { "name" : "date", "type" : "xs:anyAtomicType", "occurrence" : "?", "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> the date</div>" } ], "returns" : { "type" : "xs:date?", "description" : "" }, "errors" : [  ] }, { "isDocumented" : true, "arity" : 2, "name" : "remove-attributes-deep", "qname" : "functx:remove-attributes-deep", "signature" : "($nodes as node()*, $names as xs:string*) as node()*", "description" : " Removes attributes from an XML fragment, based on name\n", "summary" : "<p> Removes attributes from an XML fragment, based on name\n</p>", "annotation_str" : "", "annotations" : [  ], "updating" : false, "parameters" : [ { "name" : "nodes", "type" : "node()", "occurrence" : "*", "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> the root(s) to start from</div>" }, { "name" : "names", "type" : "xs:string", "occurrence" : "*", "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> the names of the attributes to remove, or * for all attributes</div>" } ], "returns" : { "type" : "node()*", "description" : "" }, "errors" : [  ] }, { "isDocumented" : true, "arity" : 2, "name" : "remove-attributes", "qname" : "functx:remove-attributes", "signature" : "($elements as element(*)*, $names as xs:string*) as element(*)", "description" : " Removes attributes from an XML element, based on name\n", "summary" : "<p> Removes attributes from an XML element, based on name\n</p>", "annotation_str" : "", "annotations" : [  ], "updating" : false, "parameters" : [ { "name" : "elements", "type" : "element(*)", "occurrence" : "*", "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> the element(s) from which to remove the attributes</div>" }, { "name" : "names", "type" : "xs:string", "occurrence" : "*", "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> the names of the attributes to remove, or * for all attributes</div>" } ], "returns" : { "type" : "element(*)", "description" : "" }, "errors" : [  ] }, { "isDocumented" : true, "arity" : 2, "name" : "remove-elements-deep", "qname" : "functx:remove-elements-deep", "signature" : "($nodes as node()*, $names as xs:string*) as node()*", "description" : " Removes descendant elements from an XML node, based on name\n", "summary" : "<p> Removes descendant elements from an XML node, based on name\n</p>", "annotation_str" : "", "annotations" : [  ], "updating" : false, "parameters" : [ { "name" : "nodes", "type" : "node()", "occurrence" : "*", "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> root(s) to start from</div>" }, { "name" : "names", "type" : "xs:string", "occurrence" : "*", "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> the names of the elements to remove</div>" } ], "returns" : { "type" : "node()*", "description" : "" }, "errors" : [  ] }, { "isDocumented" : true, "arity" : 2, "name" : "remove-elements-not-contents", "qname" : "functx:remove-elements-not-contents", "signature" : "($nodes as node()*, $names as xs:string*) as node()*", "description" : " Removes descendant XML elements but keeps their content\n", "summary" : "<p> Removes descendant XML elements but keeps their content\n</p>", "annotation_str" : "", "annotations" : [  ], "updating" : false, "parameters" : [ { "name" : "nodes", "type" : "node()", "occurrence" : "*", "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> the root(s) to start from</div>" }, { "name" : "names", "type" : "xs:string", "occurrence" : "*", "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> the names of the elements to remove</div>" } ], "returns" : { "type" : "node()*", "description" : "" }, "errors" : [  ] }, { "isDocumented" : true, "arity" : 2, "name" : "remove-elements", "qname" : "functx:remove-elements", "signature" : "($elements as element(*)*, $names as xs:string*) as element(*)*", "description" : " Removes child elements from an XML node, based on name\n", "summary" : "<p> Removes child elements from an XML node, based on name\n</p>", "annotation_str" : "", "annotations" : [  ], "updating" : false, "parameters" : [ { "name" : "elements", "type" : "element(*)", "occurrence" : "*", "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> the element(s) from which you wish to remove the children</div>" }, { "name" : "names", "type" : "xs:string", "occurrence" : "*", "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> the names of the child elements to remove</div>" } ], "returns" : { "type" : "element(*)*", "description" : "" }, "errors" : [  ] }, { "isDocumented" : true, "arity" : 2, "name" : "repeat-string", "qname" : "functx:repeat-string", "signature" : "($stringToRepeat as xs:string?, $count as xs:integer) as xs:string", "description" : " Repeats a string a given number of times\n", "summary" : "<p> Repeats a string a given number of times\n</p>", "annotation_str" : "", "annotations" : [  ], "updating" : false, "parameters" : [ { "name" : "stringToRepeat", "type" : "xs:string", "occurrence" : "?", "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> the string to repeat</div>" }, { "name" : "count", "type" : "xs:integer", "occurrence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> the desired number of copies</div>" } ], "returns" : { "type" : "xs:string", "description" : "" }, "errors" : [  ] }, { "isDocumented" : true, "arity" : 3, "name" : "replace-beginning", "qname" : "functx:replace-beginning", "signature" : "($arg as xs:string?, $pattern as xs:string, $replacement as xs:string) as xs:string", "description" : " Replaces the beginning of a string, up to a matched pattern\n", "summary" : "<p> Replaces the beginning of a string, up to a matched pattern\n</p>", "annotation_str" : "", "annotations" : [  ], "updating" : false, "parameters" : [ { "name" : "arg", "type" : "xs:string", "occurrence" : "?", "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> the entire string to change</div>" }, { "name" : "pattern", "type" : "xs:string", "occurrence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> the pattern of characters to replace up to</div>" }, { "name" : "replacement", "type" : "xs:string", "occurrence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> the replacement string</div>" } ], "returns" : { "type" : "xs:string", "description" : "" }, "errors" : [  ] }, { "isDocumented" : true, "arity" : 2, "name" : "replace-element-values", "qname" : "functx:replace-element-values", "signature" : "($elements as element(*)*, $values as xs:anyAtomicType*) as element(*)*", "description" : " Updates the content of one or more elements\n", "summary" : "<p> Updates the content of one or more elements\n</p>", "annotation_str" : "", "annotations" : [  ], "updating" : false, "parameters" : [ { "name" : "elements", "type" : "element(*)", "occurrence" : "*", "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> the elements whose content you wish to replace</div>" }, { "name" : "values", "type" : "xs:anyAtomicType", "occurrence" : "*", "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> the replacement values</div>" } ], "returns" : { "type" : "element(*)*", "description" : "" }, "errors" : [  ] }, { "isDocumented" : true, "arity" : 3, "name" : "replace-first", "qname" : "functx:replace-first", "signature" : "($arg as xs:string?, $pattern as xs:string, $replacement as xs:string) as xs:string", "description" : " Replaces the first match of a pattern\n", "summary" : "<p> Replaces the first match of a pattern\n</p>", "annotation_str" : "", "annotations" : [  ], "updating" : false, "parameters" : [ { "name" : "arg", "type" : "xs:string", "occurrence" : "?", "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> the entire string to change</div>" }, { "name" : "pattern", "type" : "xs:string", "occurrence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> the pattern of characters to replace</div>" }, { "name" : "replacement", "type" : "xs:string", "occurrence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> the replacement string</div>" } ], "returns" : { "type" : "xs:string", "description" : "" }, "errors" : [  ] }, { "isDocumented" : true, "arity" : 3, "name" : "replace-multi", "qname" : "functx:replace-multi", "signature" : "($arg as xs:string?, $changeFrom as xs:string*, $changeTo as xs:string*) as xs:string?", "description" : " Performs multiple replacements, using pairs of replace parameters\n", "summary" : "<p> Performs multiple replacements, using pairs of replace parameters\n</p>", "annotation_str" : "", "annotations" : [  ], "updating" : false, "parameters" : [ { "name" : "arg", "type" : "xs:string", "occurrence" : "?", "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> the string to manipulate</div>" }, { "name" : "changeFrom", "type" : "xs:string", "occurrence" : "*", "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> the sequence of strings or patterns to change from</div>" }, { "name" : "changeTo", "type" : "xs:string", "occurrence" : "*", "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> the sequence of strings to change to</div>" } ], "returns" : { "type" : "xs:string?", "description" : "" }, "errors" : [  ] }, { "isDocumented" : true, "arity" : 1, "name" : "reverse-string", "qname" : "functx:reverse-string", "signature" : "($arg as xs:string?) as xs:string", "description" : " Reverses the order of characters\n", "summary" : "<p> Reverses the order of characters\n</p>", "annotation_str" : "", "annotations" : [  ], "updating" : false, "parameters" : [ { "name" : "arg", "type" : "xs:string", "occurrence" : "?", "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> the string to reverse</div>" } ], "returns" : { "type" : "xs:string", "description" : "" }, "errors" : [  ] }, { "isDocumented" : true, "arity" : 1, "name" : "right-trim", "qname" : "functx:right-trim", "signature" : "($arg as xs:string?) as xs:string", "description" : " Trims trailing whitespace\n", "summary" : "<p> Trims trailing whitespace\n</p>", "annotation_str" : "", "annotations" : [  ], "updating" : false, "parameters" : [ { "name" : "arg", "type" : "xs:string", "occurrence" : "?", "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> the string to trim</div>" } ], "returns" : { "type" : "xs:string", "description" : "" }, "errors" : [  ] }, { "isDocumented" : true, "arity" : 1, "name" : "scheme-from-uri", "qname" : "functx:scheme-from-uri", "signature" : "($uri as xs:string?) as xs:string?", "description" : " Returns the scheme from a URI\n", "summary" : "<p> Returns the scheme from a URI\n</p>", "annotation_str" : "", "annotations" : [  ], "updating" : false, "parameters" : [ { "name" : "uri", "type" : "xs:string", "occurrence" : "?", "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> the URI</div>" } ], "returns" : { "type" : "xs:string?", "description" : "" }, "errors" : [  ] }, { "isDocumented" : true, "arity" : 2, "name" : "sequence-deep-equal", "qname" : "functx:sequence-deep-equal", "signature" : "($seq1 as item()*, $seq2 as item()*) as xs:boolean", "description" : " Whether two sequences have the same XML node content and/or values\n", "summary" : "<p> Whether two sequences have the same XML node content and/or values\n</p>", "annotation_str" : "", "annotations" : [  ], "updating" : false, "parameters" : [ { "name" : "seq1", "type" : "item()", "occurrence" : "*", "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> the first sequence</div>" }, { "name" : "seq2", "type" : "item()", "occurrence" : "*", "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> the second sequence</div>" } ], "returns" : { "type" : "xs:boolean", "description" : "" }, "errors" : [  ] }, { "isDocumented" : true, "arity" : 2, "name" : "sequence-node-equal-any-order", "qname" : "functx:sequence-node-equal-any-order", "signature" : "($seq1 as node()*, $seq2 as node()*) as xs:boolean", "description" : " Whether two sequences contain the same XML nodes, regardless of order\n", "summary" : "<p> Whether two sequences contain the same XML nodes, regardless of order\n</p>", "annotation_str" : "", "annotations" : [  ], "updating" : false, "parameters" : [ { "name" : "seq1", "type" : "node()", "occurrence" : "*", "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> the first sequence of nodes</div>" }, { "name" : "seq2", "type" : "node()", "occurrence" : "*", "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> the second sequence of nodes</div>" } ], "returns" : { "type" : "xs:boolean", "description" : "" }, "errors" : [  ] }, { "isDocumented" : true, "arity" : 2, "name" : "sequence-node-equal", "qname" : "functx:sequence-node-equal", "signature" : "($seq1 as node()*, $seq2 as node()*) as xs:boolean", "description" : " Whether two sequences contain the same XML nodes, in the same order\n", "summary" : "<p> Whether two sequences contain the same XML nodes, in the same order\n</p>", "annotation_str" : "", "annotations" : [  ], "updating" : false, "parameters" : [ { "name" : "seq1", "type" : "node()", "occurrence" : "*", "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> the first sequence of nodes</div>" }, { "name" : "seq2", "type" : "node()", "occurrence" : "*", "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> the second sequence of nodes</div>" } ], "returns" : { "type" : "xs:boolean", "description" : "" }, "errors" : [  ] }, { "isDocumented" : true, "arity" : 1, "name" : "sequence-type", "qname" : "functx:sequence-type", "signature" : "($items as item()*) as xs:string", "description" : " The sequence type that represents a sequence of nodes or values\n", "summary" : "<p> The sequence type that represents a sequence of nodes or values\n</p>", "annotation_str" : "", "annotations" : [  ], "updating" : false, "parameters" : [ { "name" : "items", "type" : "item()", "occurrence" : "*", "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> the items whose sequence type you want to determine</div>" } ], "returns" : { "type" : "xs:string", "description" : "" }, "errors" : [  ] }, { "isDocumented" : true, "arity" : 1, "name" : "siblings-same-name", "qname" : "functx:siblings-same-name", "signature" : "($element as element(*)?) as element(*)*", "description" : " The siblings of an XML element that have the same name\n", "summary" : "<p> The siblings of an XML element that have the same name\n</p>", "annotation_str" : "", "annotations" : [  ], "updating" : false, "parameters" : [ { "name" : "element", "type" : "element(*)", "occurrence" : "?", "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> the node</div>" } ], "returns" : { "type" : "element(*)*", "description" : "" }, "errors" : [  ] }, { "isDocumented" : true, "arity" : 1, "name" : "siblings", "qname" : "functx:siblings", "signature" : "($node as node()?) as node()*", "description" : " The siblings of an XML node\n", "summary" : "<p> The siblings of an XML node\n</p>", "annotation_str" : "", "annotations" : [  ], "updating" : false, "parameters" : [ { "name" : "node", "type" : "node()", "occurrence" : "?", "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> the node</div>" } ], "returns" : { "type" : "node()*", "description" : "" }, "errors" : [  ] }, { "isDocumented" : true, "arity" : 1, "name" : "sort-as-numeric", "qname" : "functx:sort-as-numeric", "signature" : "($seq as item()*) as item()*", "description" : " Sorts a sequence of numeric values or nodes\n", "summary" : "<p> Sorts a sequence of numeric values or nodes\n</p>", "annotation_str" : "", "annotations" : [  ], "updating" : false, "parameters" : [ { "name" : "seq", "type" : "item()", "occurrence" : "*", "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> the sequence to sort</div>" } ], "returns" : { "type" : "item()*", "description" : "" }, "errors" : [  ] }, { "isDocumented" : true, "arity" : 1, "name" : "sort-case-insensitive", "qname" : "functx:sort-case-insensitive", "signature" : "($seq as item()*) as item()*", "description" : " Sorts a sequence of values or nodes regardless of capitalization\n", "summary" : "<p> Sorts a sequence of values or nodes regardless of capitalization\n</p>", "annotation_str" : "", "annotations" : [  ], "updating" : false, "parameters" : [ { "name" : "seq", "type" : "item()", "occurrence" : "*", "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> the sequence to sort</div>" } ], "returns" : { "type" : "item()*", "description" : "" }, "errors" : [  ] }, { "isDocumented" : true, "arity" : 1, "name" : "sort-document-order", "qname" : "functx:sort-document-order", "signature" : "($seq as node()*) as node()*", "description" : " Sorts a sequence of nodes in document order\n", "summary" : "<p> Sorts a sequence of nodes in document order\n</p>", "annotation_str" : "", "annotations" : [  ], "updating" : false, "parameters" : [ { "name" : "seq", "type" : "node()", "occurrence" : "*", "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> the sequence to sort</div>" } ], "returns" : { "type" : "node()*", "description" : "" }, "errors" : [  ] }, { "isDocumented" : true, "arity" : 1, "name" : "sort", "qname" : "functx:sort", "signature" : "($seq as item()*) as item()*", "description" : " Sorts a sequence of values or nodes\n", "summary" : "<p> Sorts a sequence of values or nodes\n</p>", "annotation_str" : "", "annotations" : [  ], "updating" : false, "parameters" : [ { "name" : "seq", "type" : "item()", "occurrence" : "*", "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> the sequence to sort</div>" } ], "returns" : { "type" : "item()*", "description" : "" }, "errors" : [  ] }, { "isDocumented" : true, "arity" : 2, "name" : "substring-after-if-contains", "qname" : "functx:substring-after-if-contains", "signature" : "($arg as xs:string?, $delim as xs:string) as xs:string?", "description" : " Performs substring-after, returning the entire string if it does not contain the delimiter\n", "summary" : "<p> Performs substring-after, returning the entire string if it does not contain the delimiter\n</p>", "annotation_str" : "", "annotations" : [  ], "updating" : false, "parameters" : [ { "name" : "arg", "type" : "xs:string", "occurrence" : "?", "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> the string to substring</div>" }, { "name" : "delim", "type" : "xs:string", "occurrence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> the delimiter</div>" } ], "returns" : { "type" : "xs:string?", "description" : "" }, "errors" : [  ] }, { "isDocumented" : true, "arity" : 2, "name" : "substring-after-last-match", "qname" : "functx:substring-after-last-match", "signature" : "($arg as xs:string?, $regex as xs:string) as xs:string", "description" : " The substring after the last text that matches a regex\n", "summary" : "<p> The substring after the last text that matches a regex\n</p>", "annotation_str" : "", "annotations" : [  ], "updating" : false, "parameters" : [ { "name" : "arg", "type" : "xs:string", "occurrence" : "?", "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> the string to substring</div>" }, { "name" : "regex", "type" : "xs:string", "occurrence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> the regular expression</div>" } ], "returns" : { "type" : "xs:string", "description" : "" }, "errors" : [  ] }, { "isDocumented" : true, "arity" : 2, "name" : "substring-after-last", "qname" : "functx:substring-after-last", "signature" : "($arg as xs:string?, $delim as xs:string) as xs:string", "description" : " The substring after the last occurrence of a delimiter\n", "summary" : "<p> The substring after the last occurrence of a delimiter\n</p>", "annotation_str" : "", "annotations" : [  ], "updating" : false, "parameters" : [ { "name" : "arg", "type" : "xs:string", "occurrence" : "?", "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> the string to substring</div>" }, { "name" : "delim", "type" : "xs:string", "occurrence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> the delimiter</div>" } ], "returns" : { "type" : "xs:string", "description" : "" }, "errors" : [  ] }, { "isDocumented" : true, "arity" : 2, "name" : "substring-after-match", "qname" : "functx:substring-after-match", "signature" : "($arg as xs:string?, $regex as xs:string) as xs:string?", "description" : " The substring after the first text that matches a regex\n", "summary" : "<p> The substring after the first text that matches a regex\n</p>", "annotation_str" : "", "annotations" : [  ], "updating" : false, "parameters" : [ { "name" : "arg", "type" : "xs:string", "occurrence" : "?", "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> the string to substring</div>" }, { "name" : "regex", "type" : "xs:string", "occurrence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> the regular expression</div>" } ], "returns" : { "type" : "xs:string?", "description" : "" }, "errors" : [  ] }, { "isDocumented" : true, "arity" : 2, "name" : "substring-before-if-contains", "qname" : "functx:substring-before-if-contains", "signature" : "($arg as xs:string?, $delim as xs:string) as xs:string?", "description" : " Performs substring-before, returning the entire string if it does not contain the delimiter\n", "summary" : "<p> Performs substring-before, returning the entire string if it does not contain the delimiter\n</p>", "annotation_str" : "", "annotations" : [  ], "updating" : false, "parameters" : [ { "name" : "arg", "type" : "xs:string", "occurrence" : "?", "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> the string to substring</div>" }, { "name" : "delim", "type" : "xs:string", "occurrence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> the delimiter</div>" } ], "returns" : { "type" : "xs:string?", "description" : "" }, "errors" : [  ] }, { "isDocumented" : true, "arity" : 2, "name" : "substring-before-last-match", "qname" : "functx:substring-before-last-match", "signature" : "($arg as xs:string?, $regex as xs:string) as xs:string?", "description" : " The substring after the first text that matches a regex\n", "summary" : "<p> The substring after the first text that matches a regex\n</p>", "annotation_str" : "", "annotations" : [  ], "updating" : false, "parameters" : [ { "name" : "arg", "type" : "xs:string", "occurrence" : "?", "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> the string to substring</div>" }, { "name" : "regex", "type" : "xs:string", "occurrence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> the regular expression</div>" } ], "returns" : { "type" : "xs:string?", "description" : "" }, "errors" : [  ] }, { "isDocumented" : true, "arity" : 2, "name" : "substring-before-last", "qname" : "functx:substring-before-last", "signature" : "($arg as xs:string?, $delim as xs:string) as xs:string", "description" : " The substring before the last occurrence of a delimiter\n", "summary" : "<p> The substring before the last occurrence of a delimiter\n</p>", "annotation_str" : "", "annotations" : [  ], "updating" : false, "parameters" : [ { "name" : "arg", "type" : "xs:string", "occurrence" : "?", "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> the string to substring</div>" }, { "name" : "delim", "type" : "xs:string", "occurrence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> the delimiter</div>" } ], "returns" : { "type" : "xs:string", "description" : "" }, "errors" : [  ] }, { "isDocumented" : true, "arity" : 2, "name" : "substring-before-match", "qname" : "functx:substring-before-match", "signature" : "($arg as xs:string?, $regex as xs:string) as xs:string", "description" : " The substring before the last text that matches a regex\n", "summary" : "<p> The substring before the last text that matches a regex\n</p>", "annotation_str" : "", "annotations" : [  ], "updating" : false, "parameters" : [ { "name" : "arg", "type" : "xs:string", "occurrence" : "?", "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> the string to substring</div>" }, { "name" : "regex", "type" : "xs:string", "occurrence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> the regular expression</div>" } ], "returns" : { "type" : "xs:string", "description" : "" }, "errors" : [  ] }, { "isDocumented" : true, "arity" : 3, "name" : "time", "qname" : "functx:time", "signature" : "($hour as xs:anyAtomicType, $minute as xs:anyAtomicType, $second as xs:anyAtomicType) as xs:time", "description" : " Construct a time from an hour, minute and second\n", "summary" : "<p> Construct a time from an hour, minute and second\n</p>", "annotation_str" : "", "annotations" : [  ], "updating" : false, "parameters" : [ { "name" : "hour", "type" : "xs:anyAtomicType", "occurrence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> the hour</div>" }, { "name" : "minute", "type" : "xs:anyAtomicType", "occurrence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> the minute</div>" }, { "name" : "second", "type" : "xs:anyAtomicType", "occurrence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> the second</div>" } ], "returns" : { "type" : "xs:time", "description" : "" }, "errors" : [  ] }, { "isDocumented" : true, "arity" : 1, "name" : "timezone-from-duration", "qname" : "functx:timezone-from-duration", "signature" : "($duration as xs:dayTimeDuration) as xs:string", "description" : " Converts an xs:dayTimeDuration into a timezone like \"-05:00\" or \"Z\"\n", "summary" : "<p> Converts an xs:dayTimeDuration into a timezone like \"-05:00\" or \"Z\"\n</p>", "annotation_str" : "", "annotations" : [  ], "updating" : false, "parameters" : [ { "name" : "duration", "type" : "xs:dayTimeDuration", "occurrence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> the duration</div>" } ], "returns" : { "type" : "xs:string", "description" : "" }, "errors" : [  ] }, { "isDocumented" : true, "arity" : 1, "name" : "total-days-from-duration", "qname" : "functx:total-days-from-duration", "signature" : "($duration as xs:dayTimeDuration?) as xs:decimal?", "description" : " The total number of days in a dayTimeDuration\n", "summary" : "<p> The total number of days in a dayTimeDuration\n</p>", "annotation_str" : "", "annotations" : [  ], "updating" : false, "parameters" : [ { "name" : "duration", "type" : "xs:dayTimeDuration", "occurrence" : "?", "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> the duration</div>" } ], "returns" : { "type" : "xs:decimal?", "description" : "" }, "errors" : [  ] }, { "isDocumented" : true, "arity" : 1, "name" : "total-hours-from-duration", "qname" : "functx:total-hours-from-duration", "signature" : "($duration as xs:dayTimeDuration?) as xs:decimal?", "description" : " The total number of hours in a dayTimeDuration\n", "summary" : "<p> The total number of hours in a dayTimeDuration\n</p>", "annotation_str" : "", "annotations" : [  ], "updating" : false, "parameters" : [ { "name" : "duration", "type" : "xs:dayTimeDuration", "occurrence" : "?", "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> the duration</div>" } ], "returns" : { "type" : "xs:decimal?", "description" : "" }, "errors" : [  ] }, { "isDocumented" : true, "arity" : 1, "name" : "total-minutes-from-duration", "qname" : "functx:total-minutes-from-duration", "signature" : "($duration as xs:dayTimeDuration?) as xs:decimal?", "description" : " The total number of minutes in a dayTimeDuration\n", "summary" : "<p> The total number of minutes in a dayTimeDuration\n</p>", "annotation_str" : "", "annotations" : [  ], "updating" : false, "parameters" : [ { "name" : "duration", "type" : "xs:dayTimeDuration", "occurrence" : "?", "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> the duration</div>" } ], "returns" : { "type" : "xs:decimal?", "description" : "" }, "errors" : [  ] }, { "isDocumented" : true, "arity" : 1, "name" : "total-months-from-duration", "qname" : "functx:total-months-from-duration", "signature" : "($duration as xs:yearMonthDuration?) as xs:decimal?", "description" : " The total number of months in a yearMonthDuration\n", "summary" : "<p> The total number of months in a yearMonthDuration\n</p>", "annotation_str" : "", "annotations" : [  ], "updating" : false, "parameters" : [ { "name" : "duration", "type" : "xs:yearMonthDuration", "occurrence" : "?", "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> the duration</div>" } ], "returns" : { "type" : "xs:decimal?", "description" : "" }, "errors" : [  ] }, { "isDocumented" : true, "arity" : 1, "name" : "total-seconds-from-duration", "qname" : "functx:total-seconds-from-duration", "signature" : "($duration as xs:dayTimeDuration?) as xs:decimal?", "description" : " The total number of seconds in a dayTimeDuration\n", "summary" : "<p> The total number of seconds in a dayTimeDuration\n</p>", "annotation_str" : "", "annotations" : [  ], "updating" : false, "parameters" : [ { "name" : "duration", "type" : "xs:dayTimeDuration", "occurrence" : "?", "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> the duration</div>" } ], "returns" : { "type" : "xs:decimal?", "description" : "" }, "errors" : [  ] }, { "isDocumented" : true, "arity" : 1, "name" : "total-years-from-duration", "qname" : "functx:total-years-from-duration", "signature" : "($duration as xs:yearMonthDuration?) as xs:decimal?", "description" : " The total number of years in a yearMonthDuration\n", "summary" : "<p> The total number of years in a yearMonthDuration\n</p>", "annotation_str" : "", "annotations" : [  ], "updating" : false, "parameters" : [ { "name" : "duration", "type" : "xs:yearMonthDuration", "occurrence" : "?", "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> the duration</div>" } ], "returns" : { "type" : "xs:decimal?", "description" : "" }, "errors" : [  ] }, { "isDocumented" : true, "arity" : 1, "name" : "trim", "qname" : "functx:trim", "signature" : "($arg as xs:string?) as xs:string", "description" : " Trims leading and trailing whitespace\n", "summary" : "<p> Trims leading and trailing whitespace\n</p>", "annotation_str" : "", "annotations" : [  ], "updating" : false, "parameters" : [ { "name" : "arg", "type" : "xs:string", "occurrence" : "?", "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> the string to trim</div>" } ], "returns" : { "type" : "xs:string", "description" : "" }, "errors" : [  ] }, { "isDocumented" : true, "arity" : 3, "name" : "update-attributes", "qname" : "functx:update-attributes", "signature" : "($elements as element(*)*, $attrNames as xs:QName*, $attrValues as xs:anyAtomicType*) as element(*)?", "description" : " Updates the attribute value of an XML element\n", "summary" : "<p> Updates the attribute value of an XML element\n</p>", "annotation_str" : "", "annotations" : [  ], "updating" : false, "parameters" : [ { "name" : "elements", "type" : "element(*)", "occurrence" : "*", "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> the element(s) for which you wish to update the attribute</div>" }, { "name" : "attrNames", "type" : "xs:QName", "occurrence" : "*", "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> the name(s) of the attribute(s) to add</div>" }, { "name" : "attrValues", "type" : "xs:anyAtomicType", "occurrence" : "*", "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> the value(s) of the attribute(s) to add</div>" } ], "returns" : { "type" : "element(*)?", "description" : "" }, "errors" : [  ] }, { "isDocumented" : true, "arity" : 2, "name" : "value-except", "qname" : "functx:value-except", "signature" : "($arg1 as xs:anyAtomicType*, $arg2 as xs:anyAtomicType*) as xs:anyAtomicType*", "description" : " The values in one sequence that aren't in another sequence\n", "summary" : "<p> The values in one sequence that aren't in another sequence\n</p>", "annotation_str" : "", "annotations" : [  ], "updating" : false, "parameters" : [ { "name" : "arg1", "type" : "xs:anyAtomicType", "occurrence" : "*", "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> the first sequence</div>" }, { "name" : "arg2", "type" : "xs:anyAtomicType", "occurrence" : "*", "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> the second sequence</div>" } ], "returns" : { "type" : "xs:anyAtomicType*", "description" : "" }, "errors" : [  ] }, { "isDocumented" : true, "arity" : 2, "name" : "value-intersect", "qname" : "functx:value-intersect", "signature" : "($arg1 as xs:anyAtomicType*, $arg2 as xs:anyAtomicType*) as xs:anyAtomicType*", "description" : " The intersection of two sequences of values\n", "summary" : "<p> The intersection of two sequences of values\n</p>", "annotation_str" : "", "annotations" : [  ], "updating" : false, "parameters" : [ { "name" : "arg1", "type" : "xs:anyAtomicType", "occurrence" : "*", "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> the first sequence</div>" }, { "name" : "arg2", "type" : "xs:anyAtomicType", "occurrence" : "*", "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> the second sequence</div>" } ], "returns" : { "type" : "xs:anyAtomicType*", "description" : "" }, "errors" : [  ] }, { "isDocumented" : true, "arity" : 2, "name" : "value-union", "qname" : "functx:value-union", "signature" : "($arg1 as xs:anyAtomicType*, $arg2 as xs:anyAtomicType*) as xs:anyAtomicType*", "description" : " The union of two sequences of values\n", "summary" : "<p> The union of two sequences of values\n</p>", "annotation_str" : "", "annotations" : [  ], "updating" : false, "parameters" : [ { "name" : "arg1", "type" : "xs:anyAtomicType", "occurrence" : "*", "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> the first sequence</div>" }, { "name" : "arg2", "type" : "xs:anyAtomicType", "occurrence" : "*", "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> the second sequence</div>" } ], "returns" : { "type" : "xs:anyAtomicType*", "description" : "" }, "errors" : [  ] }, { "isDocumented" : true, "arity" : 1, "name" : "word-count", "qname" : "functx:word-count", "signature" : "($arg as xs:string?) as xs:integer", "description" : " The number of words\n", "summary" : "<p> The number of words\n</p>", "annotation_str" : "", "annotations" : [  ], "updating" : false, "parameters" : [ { "name" : "arg", "type" : "xs:string", "occurrence" : "?", "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> the string to measure</div>" } ], "returns" : { "type" : "xs:integer", "description" : "" }, "errors" : [  ] }, { "isDocumented" : true, "arity" : 1, "name" : "words-to-camel-case", "qname" : "functx:words-to-camel-case", "signature" : "($arg as xs:string?) as xs:string", "description" : " Turns a string of words into camelCase\n", "summary" : "<p> Turns a string of words into camelCase\n</p>", "annotation_str" : "", "annotations" : [  ], "updating" : false, "parameters" : [ { "name" : "arg", "type" : "xs:string", "occurrence" : "?", "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> the string to modify</div>" } ], "returns" : { "type" : "xs:string", "description" : "" }, "errors" : [  ] }, { "isDocumented" : true, "arity" : 2, "name" : "wrap-values-in-elements", "qname" : "functx:wrap-values-in-elements", "signature" : "($values as xs:anyAtomicType*, $elementName as xs:QName) as element(*)*", "description" : " Wraps a sequence of atomic values in XML elements\n", "summary" : "<p> Wraps a sequence of atomic values in XML elements\n</p>", "annotation_str" : "", "annotations" : [  ], "updating" : false, "parameters" : [ { "name" : "values", "type" : "xs:anyAtomicType", "occurrence" : "*", "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> the values to wrap in elements</div>" }, { "name" : "elementName", "type" : "xs:QName", "occurrence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> the name of the elements to construct</div>" } ], "returns" : { "type" : "element(*)*", "description" : "" }, "errors" : [  ] }, { "isDocumented" : true, "arity" : 2, "name" : "yearMonthDuration", "qname" : "functx:yearMonthDuration", "signature" : "($years as xs:decimal?, $months as xs:integer?) as xs:yearMonthDuration", "description" : " Construct a yearMonthDuration from a number of years and months\n", "summary" : "<p> Construct a yearMonthDuration from a number of years and months\n</p>", "annotation_str" : "", "annotations" : [  ], "updating" : false, "parameters" : [ { "name" : "years", "type" : "xs:decimal", "occurrence" : "?", "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> the number of years</div>" }, { "name" : "months", "type" : "xs:integer", "occurrence" : "?", "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> the number of months</div>" } ], "returns" : { "type" : "xs:yearMonthDuration", "description" : "" }, "errors" : [  ] } ], "variables" : [  ] }, "http://zorba.io/modules/zorba-query" : { "ns" : "http://zorba.io/modules/zorba-query", "description" : " This module contains functions to compile and evaluate queries\n written in either JSONiq or XQuery. Also, it contains function that\n allow to parameterize the static or dynamic evaluation phase.\n", "sees" : [  ], "authors" : [ "<xqdoc:author xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">Juan Zacarias</xqdoc:author>" ], "version" : null, "encoding" : "utf-8", "namespaces" : [ { "uri" : "http://zorba.io/annotations", "prefix" : "an" }, { "uri" : "http://zorba.io/features", "prefix" : "f" }, { "uri" : "http://zorba.io/options/features", "prefix" : "op" }, { "uri" : "http://zorba.io/options/versioning", "prefix" : "ver" }, { "uri" : "http://zorba.io/modules/zorba-query", "prefix" : "zq" } ], "functions" : [ { "isDocumented" : true, "arity" : 2, "name" : "bind-context-item", "qname" : "zq:bind-context-item", "signature" : "($query-key as xs:anyURI, $dot as item()) as empty-sequence() external", "description" : " <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">This function binds the context-item of the prepared query\n identified by the given key to the $dot argument.</p>\n", "summary" : "<p>  This function binds the context-item of the prepared query\n identified by the given key to the $dot argument.</p>", "annotation_str" : " %an:sequential", "annotations" : [ { "prefix" : "an", "ns" : "http://zorba.io/annotations", "name" : "sequential", "value" : "" } ], "updating" : false, "parameters" : [ { "name" : "query-key", "type" : "xs:anyURI", "occurrence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> the identifier for a compiled query</div>" }, { "name" : "dot", "type" : "item()", "occurrence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> the context item to bind</div>" } ], "returns" : { "type" : "empty-sequence()", "description" : "the function has side effects and returns the empty sequence." }, "errors" : [ "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">zq:NO_QUERY_MATCH if no query with the given identifier was prepared.</xqdoc:error>" ] }, { "isDocumented" : true, "arity" : 3, "name" : "bind-variable", "qname" : "zq:bind-variable", "signature" : "($query-key as xs:anyURI, $var as xs:QName, $value as item()*) as empty-sequence() external", "description" : " <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">This function binds the variable with name $name of\n the prepared query identified by $query-key to the given sequence.</p>\n", "summary" : "<p>  This function binds the variable with name $name of\n the prepared query identified by $query-key to the given sequence.</p>", "annotation_str" : " %an:sequential", "annotations" : [ { "prefix" : "an", "ns" : "http://zorba.io/annotations", "name" : "sequential", "value" : "" } ], "updating" : false, "parameters" : [ { "name" : "query-key", "type" : "xs:anyURI", "occurrence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> the identifier for a compiled query</div>" }, { "name" : "var", "type" : "xs:QName", "occurrence" : null, "description" : "" }, { "name" : "value", "type" : "item()", "occurrence" : "*", "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> the sequence to which the external variable $name should be bound</div>" } ], "returns" : { "type" : "empty-sequence()", "description" : "the function has side effects and returns the empty sequence." }, "errors" : [ "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">zq:NO_QUERY_MATCH if no query with the given identifier was prepared.</xqdoc:error>", "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">zq:UNDECLARED_VARIABLE if the given variable is not declared in the query.</xqdoc:error>" ] }, { "isDocumented" : true, "arity" : 1, "name" : "delete-query", "qname" : "zq:delete-query", "signature" : "($query-key as xs:anyURI) as empty-sequence() external", "description" : " <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">Deletes the prepared query associated with the given identifier.</p>\n <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">After the query is deleted, the corresponding identifier should\n not be used as argument to any of the functions of this module.</p>\n", "summary" : "<p>  Deletes the prepared query associated with the given identifier.</p>", "annotation_str" : " %an:sequential", "annotations" : [ { "prefix" : "an", "ns" : "http://zorba.io/annotations", "name" : "sequential", "value" : "" } ], "updating" : false, "parameters" : [ { "name" : "query-key", "type" : "xs:anyURI", "occurrence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> the identifier for a compiled query</div>" } ], "returns" : { "type" : "empty-sequence()", "description" : "the function has side effects and returns the empty sequence." }, "errors" : [ "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">zq:NO_QUERY_MATCH if no query with the given identifier was prepared.</xqdoc:error>" ] }, { "isDocumented" : true, "arity" : 1, "name" : "evaluate-sequential", "qname" : "zq:evaluate-sequential", "signature" : "($query-key as xs:string) as item()* external", "description" : " <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">Evaluates the given prepared query and returns the result\n of the evaluation. The query must be sequential.</p>\n", "summary" : "<p>  Evaluates the given prepared query and returns the result\n of the evaluation.</p>", "annotation_str" : " %an:sequential", "annotations" : [ { "prefix" : "an", "ns" : "http://zorba.io/annotations", "name" : "sequential", "value" : "" } ], "updating" : false, "parameters" : [ { "name" : "query-key", "type" : "xs:string", "occurrence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> the identifier for a compiled query</div>" } ], "returns" : { "type" : "item()*", "description" : "the result of evaluating the query." }, "errors" : [ "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">zq:NO_QUERY_MATCH if no query with the given identifier was prepared.</xqdoc:error>", "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">zq:QUERY_NOT_SEQUENTIAL if the query is not sequential.</xqdoc:error>", "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">zq:QUERY_IS_UPDATING if the query is an updating query.</xqdoc:error>", "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">any dynamic error that is raised by evaluating the given query.</xqdoc:error>" ] }, { "isDocumented" : true, "arity" : 1, "name" : "evaluate-updating", "qname" : "zq:evaluate-updating", "signature" : "($query-key as xs:anyURI) external", "description" : " <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">Evaluates the given prepared query and applies the updates\n computed by this query. The query must be an updating query.</p>\n", "summary" : "<p>  Evaluates the given prepared query and applies the updates\n computed by this query.</p>", "annotation_str" : "", "annotations" : [  ], "updating" : true, "parameters" : [ { "name" : "query-key", "type" : "xs:anyURI", "occurrence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> the identifier for a compiled query</div>" } ], "returns" : { "type" : null, "description" : "the function has side effects because it applies the updates of the query. It returns the empty sequence." }, "errors" : [ "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">zq:NO_QUERY_MATCH if no query with the given identifier was prepared.</xqdoc:error>", "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">zq:QUERY_NOT_UPDATING if the query is not an updating query.</xqdoc:error>", "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">zq:QUERY_IS_SEQUENTIAL if the query is sequential.</xqdoc:error>", "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">any dynamic error that is raised by evaluating the given query or applying its updates.</xqdoc:error>" ] }, { "isDocumented" : true, "arity" : 1, "name" : "evaluate", "qname" : "zq:evaluate", "signature" : "($query-key as xs:anyURI) as item()* external", "description" : " <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">Evaluates the given prepared query and returns the result\n of the evaluation. The query must not be sequential or\n updating.</p>\n", "summary" : "<p>  Evaluates the given prepared query and returns the result\n of the evaluation.</p>", "annotation_str" : "", "annotations" : [  ], "updating" : false, "parameters" : [ { "name" : "query-key", "type" : "xs:anyURI", "occurrence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> the identifier for a compiled query</div>" } ], "returns" : { "type" : "item()*", "description" : "the result of evaluating the given query" }, "errors" : [ "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">zq:NO_QUERY_MATCH if no query with the given identifier was prepared.</xqdoc:error>", "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">zq:QUERY_IS_UPDATING if the query is an updating query.</xqdoc:error>", "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">zq:QUERY_IS_SEQUENTIAL if the query is sequential.</xqdoc:error>", "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">any dynamic error that is raised by evaluating the given query.</xqdoc:error>" ] }, { "isDocumented" : true, "arity" : 1, "name" : "external-variables", "qname" : "zq:external-variables", "signature" : "($query-key as xs:anyURI) as xs:QName* external", "description" : " <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">The function returns the names of the external variables that\n are declared in the given query (either in the main module or\n in any of the imported library modules).</p>\n", "summary" : "<p>  The function returns the names of the external variables that\n are declared in the given query (either in the main module or\n in any of the imported library modules).</p>", "annotation_str" : "", "annotations" : [  ], "updating" : false, "parameters" : [ { "name" : "query-key", "type" : "xs:anyURI", "occurrence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> the identifier for a compiled query</div>" } ], "returns" : { "type" : "xs:QName*", "description" : "the sequence of names of the said external variables." }, "errors" : [ "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">zq:NO_QUERY_MATCH if no query with the given identifier was prepared.</xqdoc:error>" ] }, { "isDocumented" : true, "arity" : 1, "name" : "is-bound-context-item", "qname" : "zq:is-bound-context-item", "signature" : "($query-key as xs:anyURI) as xs:boolean external", "description" : " <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">The function tests if the context-item is bound for the\n execution of the query referred to by the given query identifier.</p>\n", "summary" : "<p>  The function tests if the context-item is bound for the\n execution of the query referred to by the given query identifier.</p>", "annotation_str" : "", "annotations" : [  ], "updating" : false, "parameters" : [ { "name" : "query-key", "type" : "xs:anyURI", "occurrence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> the identifier for a compiled query</div>" } ], "returns" : { "type" : "xs:boolean", "description" : "true if the context-item is bound, false otherwise." }, "errors" : [ "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">zq:NO_QUERY_MATCH if no query with the given identifier was prepared.</xqdoc:error>" ] }, { "isDocumented" : true, "arity" : 2, "name" : "is-bound-variable", "qname" : "zq:is-bound-variable", "signature" : "($query-key as xs:anyURI, $var-name as xs:QName) as xs:boolean external", "description" : " <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">The function tests if the given variable is bound for the\n execution of the query referred to by the given query identifier.</p>\n", "summary" : "<p>  The function tests if the given variable is bound for the\n execution of the query referred to by the given query identifier.</p>", "annotation_str" : "", "annotations" : [  ], "updating" : false, "parameters" : [ { "name" : "query-key", "type" : "xs:anyURI", "occurrence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> the identifier for a compiled query</div>" }, { "name" : "var-name", "type" : "xs:QName", "occurrence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> the name of the variable</div>" } ], "returns" : { "type" : "xs:boolean", "description" : "true if the variable is bound, false otherwise." }, "errors" : [ "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">zq:NO_QUERY_MATCH if no query with the given identifier was prepared.</xqdoc:error>", "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">zq:UNDECLARED_VARIABLE if the given variable is not declared in the query.</xqdoc:error>" ] }, { "isDocumented" : true, "arity" : 1, "name" : "is-sequential", "qname" : "zq:is-sequential", "signature" : "($query-key as xs:anyURI) as xs:boolean external", "description" : " <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">The function tests if the query identified by the given key\n is sequential query.</p>\n", "summary" : "<p>  The function tests if the query identified by the given key\n is sequential query.</p>", "annotation_str" : "", "annotations" : [  ], "updating" : false, "parameters" : [ { "name" : "query-key", "type" : "xs:anyURI", "occurrence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> the identifier for a compiled query</div>" } ], "returns" : { "type" : "xs:boolean", "description" : "true if the query is a sequential, false otherwise." }, "errors" : [ "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">zq:NO_QUERY_MATCH if no query with the given identifier was prepared.</xqdoc:error>" ] }, { "isDocumented" : true, "arity" : 1, "name" : "is-updating", "qname" : "zq:is-updating", "signature" : "($query-key as xs:anyURI) as xs:boolean external", "description" : " <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">The function tests if the query identified by the given key\n is an updating query.</p>\n", "summary" : "<p>  The function tests if the query identified by the given key\n is an updating query.</p>", "annotation_str" : "", "annotations" : [  ], "updating" : false, "parameters" : [ { "name" : "query-key", "type" : "xs:anyURI", "occurrence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> the identifier for a compiled query</div>" } ], "returns" : { "type" : "xs:boolean", "description" : "true if the query is an updating query, false otherwise." }, "errors" : [ "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">zq:NO_QUERY_MATCH if no query with the given identifier was prepared.</xqdoc:error>" ] }, { "isDocumented" : true, "arity" : 1, "name" : "load-from-query-plan", "qname" : "zq:load-from-query-plan", "signature" : "($plan as xs:base64Binary) as xs:anyURI external", "description" : " <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">The function loads a given query for execution from a\n xs:base64Binary query plan, obtained through the zq:query-plan function.</p>\n <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">If the query was successfully loaded, the function returns an\n identifier as xs:anyURI. This URI can be passed to other functions\n of this module (e.g. to actually evaluate the query). The URI\n is opaque and its lifetime is bound by the lifetime of the query\n that invoked this function. Further reference or uses\n of the identifier lead to unexpected results.</p>\n <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"/>\n <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">Successfully prepared queries need to be deleted by passing the resulting\n identifier to the zq:delete-query function of this module.</p>\n", "summary" : "<p>  The function loads a given query for execution from a\n xs:base64Binary query plan, obtained through the zq:query-plan function.</p>", "annotation_str" : "", "annotations" : [  ], "updating" : false, "parameters" : [ { "name" : "plan", "type" : "xs:base64Binary", "occurrence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> the binary query plan.</div>" } ], "returns" : { "type" : "xs:anyURI", "description" : "an identifier for the compiled query that can be passed as arguments to other functions of this module." }, "errors" : [ "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">any (static or type) error that may be raised during the compilation of the query. For example, err:XPST0003 if the given query could not be parsed.</xqdoc:error>" ] }, { "isDocumented" : true, "arity" : 3, "name" : "load-from-query-plan", "qname" : "zq:load-from-query-plan", "signature" : "($plan as xs:base64Binary, $resolver as item()?, $mapper as item()?) as xs:anyURI external", "description" : " <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">The function loads a given query for execution from a\n xs:base64Binary query plan, obtained through the zq:query-plan function.</p>\n <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">If the query was successfully loaded, the function returns an\n identifier as xs:anyURI. This URI can be passed to other functions\n of this module (e.g. to actually evaluate the query). The URI\n is opaque and its lilfetime is bound by the lifetime of the query\n that invoked this function. Further reference or uses\n of the identifier lead to unexpected results.</p>\n <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"/>\n <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">For important notes regarding the second and third parameters of the\n function, review the comments in zq:prepare-main-module#3.</p>\n <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"/>\n <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">Successfully prepared queries need to be deleted by passing the resulting\n identifier to the zq:delete-query function of this module.</p>\n", "summary" : "<p>  The function loads a given query for execution from a\n xs:base64Binary query plan, obtained through the zq:query-plan function.</p>", "annotation_str" : "", "annotations" : [  ], "updating" : false, "parameters" : [ { "name" : "plan", "type" : "xs:base64Binary", "occurrence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> the binary query plan.</div>" }, { "name" : "resolver", "type" : "item()", "occurrence" : "?", "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> the URL resolver function.</div>" }, { "name" : "mapper", "type" : "item()", "occurrence" : "?", "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> the URI mapper function.</div>" } ], "returns" : { "type" : "xs:anyURI", "description" : "an identifier for the compiled query that can be passed as arguments to other functions of this module." }, "errors" : [ "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">any (static or type) error that may be raised during the compilation of the query. For example, err:XPST0003 if the given query could not be parsed.</xqdoc:error>" ] }, { "isDocumented" : true, "arity" : 1, "name" : "prepare-library-module", "qname" : "zq:prepare-library-module", "signature" : "($library-module-text as xs:string) as empty-sequence() external", "description" : " <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">This function compiles a given XQuery or JSONiq library module.\n It can be used to compile-check a module.</p>\n", "summary" : "<p>  This function compiles a given XQuery or JSONiq library module.</p>", "annotation_str" : " %an:sequential", "annotations" : [ { "prefix" : "an", "ns" : "http://zorba.io/annotations", "name" : "sequential", "value" : "" } ], "updating" : false, "parameters" : [ { "name" : "library-module-text", "type" : "xs:string", "occurrence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> the library module that should be prepared.</div>" } ], "returns" : { "type" : "empty-sequence()", "description" : "the empty-sequence." }, "errors" : [ "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">any (static or type) error that may be raised during the compilation of the library module. For example, err:XPST0003 if the given library module could not be parsed.</xqdoc:error>" ] }, { "isDocumented" : true, "arity" : 1, "name" : "prepare-main-module", "qname" : "zq:prepare-main-module", "signature" : "($main-module-text as xs:string) as xs:anyURI external", "description" : " <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">The function prepares a given a query for execution.</p>\n <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">If the query was successfully compiled, the function returns an\n identifier as xs:anyURI. This URI can be passed to other functions\n of this module (e.g. to actually evaluate the query). The URI\n is opaque and its lifetime is bound by the lifetime of the query\n that invoked this function. Further reference or uses\n of the identifier lead to unexpected results.</p>\n <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"/>\n <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">Successfully prepared queries need to be deleted by passing the resulting\n identifier to the zq:delete-query function of this module.</p>\n", "summary" : "<p>  The function prepares a given a query for execution.</p>", "annotation_str" : " %an:sequential", "annotations" : [ { "prefix" : "an", "ns" : "http://zorba.io/annotations", "name" : "sequential", "value" : "" } ], "updating" : false, "parameters" : [ { "name" : "main-module-text", "type" : "xs:string", "occurrence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> the query that should be prepared. The query needs to be a XQuery or JSONiq main module.</div>" } ], "returns" : { "type" : "xs:anyURI", "description" : "an identifier for the compiled query that can be passed as arguments to other functions of this module." }, "errors" : [ "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">any (static or type) error that may be raised during the compilation of the query. For example, err:XPST0003 if the given query could not be parsed.</xqdoc:error>" ] }, { "isDocumented" : true, "arity" : 3, "name" : "prepare-main-module", "qname" : "zq:prepare-main-module", "signature" : "($main-module-text as xs:string, $resolver as function (xs:string, xs:string) as item()??, $mapper as function (xs:string, xs:string) as xs:string*?) as xs:anyURI external", "description" : " <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">The function prepares a given query for execution.</p>\n <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">If the query was successfully compiled, the function returns an\n identifier as xs:anyURI. This URI can be passed to other functions\n of this module (e.g. to actually evaluate the query). The URI\n is opaque and its lifetime is bound by the lifetime of the query\n that invoked this function. Further reference or uses\n of the identifier lead to unexpected results.</p>\n <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"/>\n <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">Important notes regarding the second and third parameters of the function:</p>\n <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">--------------------------------------------------------------------------</p>\n <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"/>\n <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">These parameters allow you to specify a URL resolver and a URI mapper\n for Zorba to use when executing this query. See\n <a href=\"http://www.zorba-xquery.com/html/documentation/2.7.0/zorba/uriresolvers\">here</a></p>\n <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"/>\n <ul xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">The second parameter is a function item for a URL\n resolver. The URL resolver function must recive 2 parameters:\n <li>A $namespace as xs:string that will contain the url to be resolved.</li>\n <li>A $entity as xs:string that will contain the type of resolving needed.\n   This can be one of two values: \"module\" or \"schema\".</li>\n </ul>\n <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">The function must return the empty sequence when the specified $namespace\n or $entity are not the ones to be resolved.</p>\n <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"/>\n <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">Example:</p>\n <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"/>\n <pre xmlns:xqdoc=\"http://www.xqdoc.org/1.0\" class=\"ace-static\" ace-mode=\"xquery\">declare function mymod:url-resolver($namespace as xs:string, $entity as xs:string) as item()?\n {\n  if($namespace = 'http://test.xq')\n  then \"module namespace test = 'http://test'; declare function test:foo(){'foo'};\"\n  else ()\n };</pre>\n <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"/>\n <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">The URL resolver function's namespace, name, and parameter naming are\n not restricted by ZQ.</p>\n <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"/>\n <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">The URL resolver function's return type is not restricted, it could be a string, a sequence,\n a node, etc. All the outputs types are to be serialized as a string.</p>\n <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"/>\n <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">The third parameter is a function item for a URI mapper.</p>\n <ul xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">The URI mapper function, just like the URL resolver, receives 2 parameters:\n <li>A $namespace as xs:string that will contain the URI to be mapped.</li>\n <li>A $entity as xs:string that will contain the type of resolving needed.\n   This can be one of two values: \"module\" or \"schema\".</li>\n </ul>\n <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">The URI mapper must return an empty sequence when the specified $namesapce or $entity\n are not to be mapped. Unlike the URL resolver this function must return a sequence of strings.</p>\n <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"/>\n <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">Example:</p>\n <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"/>\n <pre xmlns:xqdoc=\"http://www.xqdoc.org/1.0\" class=\"ace-static\" ace-mode=\"xquery\">declare function mymod:uri-mapper($namespace as xs:string, $entity as xs:string)\n {\n  if($namespace = 'http://test')\n  then (\"http://zorba.io/test\", \"http://foo.com/schema/test\")\n  else ()\n };</pre>\n <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"/>\n <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">The URI mapper function's namespace, name, and parameter naming are\n not restricted by ZQ.</p>\n <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"/>\n <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">In order to pass the above URL resolver and URI mapper to this function,\n use the following syntax:</p>\n <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"/>\n   <pre xmlns:xqdoc=\"http://www.xqdoc.org/1.0\" class=\"ace-static\" ace-mode=\"xquery\">variable $queryID := zq:prepare-main-module(\"..query text..\",\n      mymod:url-resolver#2, mymod:uri-mapper#2);</pre>\n <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"/>\n <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">That is, the QName of the function followed by \"#2\". This is XQuery\n \"higher-order function\" syntax, meaning the function with the specified\n QName which takes two arguments. Since URL resolvers and URI mappers\n must take two arguments, both will always be specified with \"#2\".</p>\n <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"/>\n <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">Both the URL resolver and URI mapper functions are optional, meaning you\n may pass the empty-sequence () for either.</p>\n <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"/>\n <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">Successfully prepared queries need to be deleted by passing the resulting\n identifier to the zq:delete-query function of this module.</p>\n", "summary" : "<p>  The function prepares a given query for execution.</p>", "annotation_str" : " %an:sequential", "annotations" : [ { "prefix" : "an", "ns" : "http://zorba.io/annotations", "name" : "sequential", "value" : "" } ], "updating" : false, "parameters" : [ { "name" : "main-module-text", "type" : "xs:string", "occurrence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> the query that should be prepared. The query needs to be a XQuery or JSONiq main module.</div>" }, { "name" : "resolver", "type" : "function (xs:string, xs:string) as item()?", "occurrence" : "?", "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> the URL resolver function.</div>" }, { "name" : "mapper", "type" : "function (xs:string, xs:string) as xs:string*", "occurrence" : "?", "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> the URI mapper function.</div>" } ], "returns" : { "type" : "xs:anyURI", "description" : "an identifier for the compiled query that can be passed as arguments to other functions of this module." }, "errors" : [ "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">any (static or type) error that may be raised during the compilation of the query. For example, err:XPST0003 if the given query could not be parsed.</xqdoc:error>" ] }, { "isDocumented" : true, "arity" : 1, "name" : "query-plan", "qname" : "zq:query-plan", "signature" : "($query-key as xs:anyURI) as xs:base64Binary external", "description" : " <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">Returns the compiled query identified by the given query-key\n as binary data.</p>\n", "summary" : "<p>  Returns the compiled query identified by the given query-key\n as binary data.</p>", "annotation_str" : "", "annotations" : [  ], "updating" : false, "parameters" : [ { "name" : "query-key", "type" : "xs:anyURI", "occurrence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> the identifier of a compiled query.</div>" } ], "returns" : { "type" : "xs:base64Binary", "description" : "the query as xs:base64Binary." }, "errors" : [ "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">zq:NO_QUERY_MATCH if no query with the given identifier was prepared.</xqdoc:error>", "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">zq:NO_QUERY_PLAN if there is an error serializing the query.</xqdoc:error>" ] }, { "isDocumented" : true, "arity" : 2, "name" : "variable-value", "qname" : "zq:variable-value", "signature" : "($query-key as xs:anyURI, $var-name as xs:QName) as item()* external", "description" : " <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">This function returns the value of a variable that is bound in the\n given query.</p>\n", "summary" : "<p>  This function returns the value of a variable that is bound in the\n given query.</p>", "annotation_str" : "", "annotations" : [  ], "updating" : false, "parameters" : [ { "name" : "query-key", "type" : "xs:anyURI", "occurrence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> the identifier of a compiled query.</div>" }, { "name" : "var-name", "type" : "xs:QName", "occurrence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> the name of the variable whose value should be returned.</div>" } ], "returns" : { "type" : "item()*", "description" : "the value bound to the given variable." }, "errors" : [ "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">zq:NO_QUERY_MATCH if no query with the given identifier was prepared.</xqdoc:error>", "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">zq:UNDECLARED_VARIABLE if the given variable is not declared in the query.</xqdoc:error>", "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">zq:UNBOUND_VARIABLE if the given variable doesn't have a value.</xqdoc:error>" ] } ], "variables" : [  ] }, "http://xbrl.io/modules/bizql/hypercubes" : { "ns" : "http://xbrl.io/modules/bizql/hypercubes", "description" : " <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">This module provides functionality for manipulating hypercubes.</p>\n <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">A hypercube provides a multi-dimensional structure to organize facts.</p>\n <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">The dimensions of a hypercube correspond to XBRL aspects (concepts, entities, periods,\n units, further XBRL dimensions). An XBRL hypercube only is made of XBRL dimensions, however\n including the other aspects as well is very useful in the context of NOLAP, so that xbrl.io\n does so.</p>\n <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">xbrl.io introduces the notion of default hypercube. A default hypercube is implicitly added\n to each component, and only contains the concept, entity, period and unit aspects.\n In other words, the default hypercube\n of a component contains all these facts that do not have any XBRL dimensions.</p>\n <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">With this module, you can retrieve all hypercubes contained in a component. You can\n retrieve all facts contained in a hypercube (default dimension values are processed automatically),\n either in raw form, or organized as a (2D) fact table. You can also populate a network (for example,\n a presentation network) with the facts contained in a hypercube.</p>\n", "sees" : [  ], "authors" : [ "<xqdoc:author xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">Charles Hoffman</xqdoc:author>", "<xqdoc:author xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">Matthias Brantner</xqdoc:author>", "<xqdoc:author xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">Dennis Knochenwefel</xqdoc:author>", "<xqdoc:author xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">Ghislain Fourny</xqdoc:author>" ], "version" : null, "encoding" : "utf-8", "namespaces" : [ { "uri" : "http://xbrl.io/modules/bizql/archives", "prefix" : "archives" }, { "uri" : "http://xbrl.io/modules/bizql/concept-maps", "prefix" : "concept-maps" }, { "uri" : "http://xbrl.io/modules/bizql/entities", "prefix" : "entities" }, { "uri" : "http://xbrl.io/modules/bizql/facts", "prefix" : "facts" }, { "uri" : "http://xbrl.io/modules/bizql/hypercubes", "prefix" : "hypercubes" }, { "uri" : "http://zorba.io/options/versioning", "prefix" : "ver" } ], "functions" : [ { "isDocumented" : true, "arity" : 0, "name" : "dimensionless-hypercube", "qname" : "hypercubes:dimensionless-hypercube", "signature" : "() as object()", "description" : " <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">Returns an instantiation of a dimensionless Hypercube containing only the basic\n    characteristics (xbrl:Concept, xbrl:Period, xbrl:Entity, and xbrl:Unit).\n    For each of those included aspects the value space is not limited.</p>\n", "summary" : "<p>  Returns an instantiation of a dimensionless Hypercube containing only the basic\n    characteristics (xbrl:Concept, xbrl:Period, xbrl:Entity, and xbrl:Unit).</p>", "annotation_str" : "", "annotations" : [  ], "updating" : false, "parameters" : [  ], "returns" : { "type" : "object()", "description" : "dimensionless hypercube instantiation." }, "errors" : [  ] }, { "isDocumented" : true, "arity" : 1, "name" : "dimensionless-hypercube", "qname" : "hypercubes:dimensionless-hypercube", "signature" : "($options as object()?) as object()", "description" : " <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">Returns an instantiation of a dimensionless Hypercube containing only the basic\n    characteristics (xbrl:Concept, xbrl:Period, xbrl:Entity, and xbrl:Unit).\n    For each of those included aspects the value space is not limited.</p>\n", "summary" : "<p>  Returns an instantiation of a dimensionless Hypercube containing only the basic\n    characteristics (xbrl:Concept, xbrl:Period, xbrl:Entity, and xbrl:Unit).</p>", "annotation_str" : "", "annotations" : [  ], "updating" : false, "parameters" : [ { "name" : "options", "type" : "object()", "occurrence" : "?", "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">: additional options among which: - Concepts: an array of concept names to include in the hypercube. - Periods: an array of periods to include in the hypercube. - Entities: an array of EIDs to include in the hypercube. - Units: an array of units to include in the hypercube.</div>" } ], "returns" : { "type" : "object()", "description" : "dimensionless hypercube instantiation." }, "errors" : [  ] }, { "isDocumented" : true, "arity" : 2, "name" : "fact-table-for-hypercube", "qname" : "hypercubes:fact-table-for-hypercube", "signature" : "($hypercube as object(), $archives as item()*) as array()", "description" : " <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">Retrieves all facts from the supplied archives, that are relevant to the\n supplied hypercube, and populates them with the default dimension values\n when missing.</p>\n", "summary" : "<p>  Retrieves all facts from the supplied archives, that are relevant to the\n supplied hypercube, and populates them with the default dimension values\n when missing.</p>", "annotation_str" : "", "annotations" : [  ], "updating" : false, "parameters" : [ { "name" : "hypercube", "type" : "object()", "occurrence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> a hypercube.</div>" }, { "name" : "archives", "type" : "item()", "occurrence" : "*", "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> a sequence of archives or their AIDs or $hypercubes:ALL_ARCHIVES for no filtering.</div>" } ], "returns" : { "type" : "array()", "description" : "a sequence of facts with populated dimension values." }, "errors" : [  ] }, { "isDocumented" : true, "arity" : 3, "name" : "fact-table-for-hypercube", "qname" : "hypercubes:fact-table-for-hypercube", "signature" : "($hypercube as object(), $archives as item()*, $options as object()?) as array()", "description" : " <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">Retrieves all facts from the supplied archives, that are relevant to the\n supplied hypercube, and populates them with the default dimension values\n when missing.</p>\n", "summary" : "<p>  Retrieves all facts from the supplied archives, that are relevant to the\n supplied hypercube, and populates them with the default dimension values\n when missing.</p>", "annotation_str" : "", "annotations" : [  ], "updating" : false, "parameters" : [ { "name" : "hypercube", "type" : "object()", "occurrence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> a hypercube.</div>" }, { "name" : "archives", "type" : "item()", "occurrence" : "*", "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> a sequence of archives or their AIDs</div>" }, { "name" : "options", "type" : "object()", "occurrence" : "?", "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> <a href=\"facts#standard_options\">standard fact retrieving options</a>.</div>" } ], "returns" : { "type" : "array()", "description" : "a sequence of facts with populated dimension values." }, "errors" : [  ] }, { "isDocumented" : true, "arity" : 2, "name" : "facts-for-hypercube", "qname" : "hypercubes:facts-for-hypercube", "signature" : "($hypercube as object(), $archives as item()*) as item()*", "description" : " <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">Retrieves all facts from the supplied archives, that are relevant to the\n supplied hypercube, and populates them with the default dimension values\n when missing.</p>\n", "summary" : "<p>  Retrieves all facts from the supplied archives, that are relevant to the\n supplied hypercube, and populates them with the default dimension values\n when missing.</p>", "annotation_str" : "", "annotations" : [  ], "updating" : false, "parameters" : [ { "name" : "hypercube", "type" : "object()", "occurrence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> a hypercube.</div>" }, { "name" : "archives", "type" : "item()", "occurrence" : "*", "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> a sequence of archives or their AIDs or $hypercubes:ALL_ARCHIVES for no filtering.</div>" } ], "returns" : { "type" : "item()*", "description" : "a sequence of facts with populated dimension values." }, "errors" : [  ] }, { "isDocumented" : true, "arity" : 3, "name" : "facts-for-hypercube", "qname" : "hypercubes:facts-for-hypercube", "signature" : "($hypercube as object(), $archives as item()*, $options as object()?) as item()*", "description" : " <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">Retrieves all facts from the supplied archives, that are relevant to the\n supplied hypercube, and populates them with the default dimension values\n when missing.</p>\n", "summary" : "<p>  Retrieves all facts from the supplied archives, that are relevant to the\n supplied hypercube, and populates them with the default dimension values\n when missing.</p>", "annotation_str" : "", "annotations" : [  ], "updating" : false, "parameters" : [ { "name" : "hypercube", "type" : "object()", "occurrence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> a hypercube.</div>" }, { "name" : "archives", "type" : "item()", "occurrence" : "*", "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> a sequence of archives or their AIDs or $hypercubes:ALL_ARCHIVES for no filtering.</div>" }, { "name" : "options", "type" : "object()", "occurrence" : "?", "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> <a href=\"facts#standard_options\">standard fact retrieving options</a>.</div>" } ], "returns" : { "type" : "item()*", "description" : "a sequence of facts with populated dimension values." }, "errors" : [  ] }, { "isDocumented" : true, "arity" : 1, "name" : "hypercubes-for-components", "qname" : "hypercubes:hypercubes-for-components", "signature" : "($components as object()*) as object()*", "description" : " <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">Retrieves all hypercubes in the supplied components.</p>\n", "summary" : "<p>  Retrieves all hypercubes in the supplied components.</p>", "annotation_str" : "", "annotations" : [  ], "updating" : false, "parameters" : [ { "name" : "components", "type" : "object()", "occurrence" : "*", "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> a sequence of components.</div>" } ], "returns" : { "type" : "object()*", "description" : "all hypercubes." }, "errors" : [  ] }, { "isDocumented" : true, "arity" : 2, "name" : "hypercubes-for-components", "qname" : "hypercubes:hypercubes-for-components", "signature" : "($components as object()*, $names as string*) as object()*", "description" : " <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">Retrieves all hypercubes in the supplied components and\n with the given names.</p>\n", "summary" : "<p>  Retrieves all hypercubes in the supplied components and\n with the given names.</p>", "annotation_str" : "", "annotations" : [  ], "updating" : false, "parameters" : [ { "name" : "components", "type" : "object()", "occurrence" : "*", "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> a sequence of components.</div>" }, { "name" : "names", "type" : "string", "occurrence" : "*", "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> a sequence of names.</div>" } ], "returns" : { "type" : "object()*", "description" : "all hypercubes." }, "errors" : [  ] }, { "isDocumented" : true, "arity" : 3, "name" : "populate-networks-with-facts", "qname" : "hypercubes:populate-networks-with-facts", "signature" : "($networks as object()*, $hypercube as object(), $archives as item()*) as object()*", "description" : " <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">Populates a concept-tree network with all facts from the supplied archives,\n that are relevant to the\n supplied hypercube. Default dimension values are added to the facts\n when missing.</p>\n", "summary" : "<p>  Populates a concept-tree network with all facts from the supplied archives,\n that are relevant to the\n supplied hypercube.</p>", "annotation_str" : "", "annotations" : [  ], "updating" : false, "parameters" : [ { "name" : "networks", "type" : "object()", "occurrence" : "*", "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> networks.</div>" }, { "name" : "hypercube", "type" : "object()", "occurrence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> a hypercube.</div>" }, { "name" : "archives", "type" : "item()", "occurrence" : "*", "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> a sequence of archives or their AIDs or $hypercubes:ALL_ARCHIVES for no filtering.</div>" } ], "returns" : { "type" : "object()*", "description" : "a sequence of facts with populated dimension values." }, "errors" : [  ] }, { "isDocumented" : true, "arity" : 4, "name" : "populate-networks-with-facts", "qname" : "hypercubes:populate-networks-with-facts", "signature" : "($networks as object()*, $hypercube as object(), $archives as item()*, $options as object()?) as object()*", "description" : " <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">Populates a concept-tree network with all facts from the supplied archives,\n that are relevant to the\n supplied hypercube. Default dimension values are added to the facts\n when missing.</p>\n", "summary" : "<p>  Populates a concept-tree network with all facts from the supplied archives,\n that are relevant to the\n supplied hypercube.</p>", "annotation_str" : "", "annotations" : [  ], "updating" : false, "parameters" : [ { "name" : "networks", "type" : "object()", "occurrence" : "*", "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> networks.</div>" }, { "name" : "hypercube", "type" : "object()", "occurrence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> a hypercube.</div>" }, { "name" : "archives", "type" : "item()", "occurrence" : "*", "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> a sequence of archives or their AIDs.</div>" }, { "name" : "options", "type" : "object()", "occurrence" : "?", "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> <a href=\"facts#standard_options\">standard fact retrieving options</a>.</div>" } ], "returns" : { "type" : "object()*", "description" : "a sequence of facts with populated dimension values." }, "errors" : [  ] } ], "variables" : [ { "name" : "hypercubes:ALL_ARCHIVES", "type" : "boolean", "description" : " Joker for all archives.\n" } ] }, "http://www.zorba-xquery.com/modules/xqdoc/batch" : { "ns" : "http://www.zorba-xquery.com/modules/xqdoc/batch", "description" : " Process XQDoc batches.\n This module generates XQDoc HTML documentation from multiple\n XQuery modules.\n", "sees" : [  ], "authors" : [ "<xqdoc:author xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">William Candillon <a href=\"?anchor=\">wcandillon at gmail dot com</a></xqdoc:author>" ], "version" : null, "encoding" : "utf-8", "namespaces" : [ { "uri" : "http://zorba.io/annotations", "prefix" : "an" }, { "uri" : "http://www.zorba-xquery.com/modules/xqdoc/batch", "prefix" : "batch" }, { "uri" : "http://www.w3.org/2005/xqt-errors", "prefix" : "err" }, { "uri" : "http://expath.org/ns/file", "prefix" : "file" }, { "uri" : "http://www.functx.com", "prefix" : "functx" }, { "uri" : "http://www.w3.org/1999/xhtml", "prefix" : "h" }, { "uri" : "http://www.zorba-xquery.com/modules/xqdoc/html", "prefix" : "html" }, { "uri" : "http://www.zorba-xquery.com/modules/xqdoc/menu", "prefix" : "menu" }, { "uri" : "http://www.w3.org/2010/xslt-xquery-serialization", "prefix" : "out" }, { "uri" : "http://zorba.io/options/versioning", "prefix" : "ver" }, { "uri" : "http://www.xqdoc.org/1.0", "prefix" : "xq" }, { "uri" : "http://zorba.io/modules/xqdoc", "prefix" : "xqdoc" } ], "functions" : [ { "isDocumented" : false, "arity" : 2, "name" : "add-predeclared-namespaces", "qname" : "batch:add-predeclared-namespaces", "signature" : "($xqdoc as element(xq:xqdoc), $namespaces as element(namespace)*) as element(xq:xqdoc)", "description" : "", "summary" : "", "annotation_str" : "", "annotations" : [  ], "updating" : false, "parameters" : [ { "name" : "xqdoc", "type" : "element(xq:xqdoc)", "occurrence" : null, "description" : "" }, { "name" : "namespaces", "type" : "element(namespace)", "occurrence" : "*", "description" : "" } ], "returns" : { "type" : "element(xq:xqdoc)", "description" : "" }, "errors" : [  ] }, { "isDocumented" : false, "arity" : 1, "name" : "add-trailing-slash", "qname" : "batch:add-trailing-slash", "signature" : "($path as xs:string) as xs:string", "description" : "", "summary" : "", "annotation_str" : "", "annotations" : [  ], "updating" : false, "parameters" : [ { "name" : "path", "type" : "xs:string", "occurrence" : null, "description" : "" } ], "returns" : { "type" : "xs:string", "description" : "" }, "errors" : [  ] }, { "isDocumented" : true, "arity" : 4, "name" : "build-xqdoc", "qname" : "batch:build-xqdoc", "signature" : "($output-folder as xs:string, $static-folders as xs:string*, $template as element(*), $modules as element(modules))", "description" : " Run an XQDoc batch.\n", "summary" : "<p> Run an XQDoc batch.</p>", "annotation_str" : " %an:sequential", "annotations" : [ { "prefix" : "an", "ns" : "http://zorba.io/annotations", "name" : "sequential", "value" : "" } ], "updating" : false, "parameters" : [ { "name" : "output-folder", "type" : "xs:string", "occurrence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> Where to write the generated files.</div>" }, { "name" : "static-folders", "type" : "xs:string", "occurrence" : "*", "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> Where to copy the static files from.</div>" }, { "name" : "template", "type" : "element(*)", "occurrence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> HTML layout of the generated files. The layount can contains different variables. For instance: <pre class=\"ace-static\" ace-mode=\"xml\"><body><var name=\"page\"/></body></pre> is a valid example. Three variable names are available: <code>page</code>, <code>title</code>, and <code>menu</code>.</div>" }, { "name" : "modules", "type" : "element(modules)", "occurrence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> Document describing the documentation project. For instance: <pre class=\"ace-static\" ace-mode=\"xml\"> <modules> <namespace prefix=\"ann\" uri=\"http://zorba.io/annotations\"/> <section id=\"modules\" label=\"My Modules\"> <!-- Location hints are optionnals --> <module ns=\"http://example.com/mymodule\" label=\"My Module\" id=\"module\" file=\"module.xq\"/> </section> </modules> </pre></div>" } ], "returns" : { "type" : null, "description" : "" }, "errors" : [  ] }, { "isDocumented" : false, "arity" : 2, "name" : "copy-static-folders", "qname" : "batch:copy-static-folders", "signature" : "($output-folder as xs:string, $static-folders as xs:string*)", "description" : "", "summary" : "", "annotation_str" : " %an:sequential", "annotations" : [ { "prefix" : "an", "ns" : "http://zorba.io/annotations", "name" : "sequential", "value" : "" } ], "updating" : false, "parameters" : [ { "name" : "output-folder", "type" : "xs:string", "occurrence" : null, "description" : "" }, { "name" : "static-folders", "type" : "xs:string", "occurrence" : "*", "description" : "" } ], "returns" : { "type" : null, "description" : "" }, "errors" : [  ] }, { "isDocumented" : false, "arity" : 3, "name" : "create-page", "qname" : "batch:create-page", "signature" : "($output-folder as xs:string, $page-name as xs:string, $page as element(h:html))", "description" : "", "summary" : "", "annotation_str" : " %an:sequential", "annotations" : [ { "prefix" : "an", "ns" : "http://zorba.io/annotations", "name" : "sequential", "value" : "" } ], "updating" : false, "parameters" : [ { "name" : "output-folder", "type" : "xs:string", "occurrence" : null, "description" : "" }, { "name" : "page-name", "type" : "xs:string", "occurrence" : null, "description" : "" }, { "name" : "page", "type" : "element(h:html)", "occurrence" : null, "description" : "" } ], "returns" : { "type" : null, "description" : "" }, "errors" : [  ] }, { "isDocumented" : false, "arity" : 1, "name" : "create-xml-folder", "qname" : "batch:create-xml-folder", "signature" : "($folder as xs:string)", "description" : "", "summary" : "", "annotation_str" : " %an:sequential", "annotations" : [ { "prefix" : "an", "ns" : "http://zorba.io/annotations", "name" : "sequential", "value" : "" } ], "updating" : false, "parameters" : [ { "name" : "folder", "type" : "xs:string", "occurrence" : null, "description" : "" } ], "returns" : { "type" : null, "description" : "" }, "errors" : [  ] }, { "isDocumented" : false, "arity" : 3, "name" : "page", "qname" : "batch:page", "signature" : "($template as element(*), $menu as element(ul), $section as element(*)) as element(h:html)", "description" : "", "summary" : "", "annotation_str" : " %an:nondeterministic", "annotations" : [ { "prefix" : "an", "ns" : "http://zorba.io/annotations", "name" : "nondeterministic", "value" : "" } ], "updating" : false, "parameters" : [ { "name" : "template", "type" : "element(*)", "occurrence" : null, "description" : "" }, { "name" : "menu", "type" : "element(ul)", "occurrence" : null, "description" : "" }, { "name" : "section", "type" : "element(*)", "occurrence" : null, "description" : "" } ], "returns" : { "type" : "element(h:html)", "description" : "" }, "errors" : [  ] }, { "isDocumented" : false, "arity" : 2, "name" : "save-xml", "qname" : "batch:save-xml", "signature" : "($output-file, $page)", "description" : "", "summary" : "", "annotation_str" : " %an:sequential", "annotations" : [ { "prefix" : "an", "ns" : "http://zorba.io/annotations", "name" : "sequential", "value" : "" } ], "updating" : false, "parameters" : [ { "name" : "output-file", "type" : null, "occurrence" : null, "description" : "" }, { "name" : "page", "type" : null, "occurrence" : null, "description" : "" } ], "returns" : { "type" : null, "description" : "" }, "errors" : [  ] }, { "isDocumented" : false, "arity" : 1, "name" : "section", "qname" : "batch:section", "signature" : "($sections as element(section)+) as element(section)+", "description" : "", "summary" : "", "annotation_str" : "", "annotations" : [  ], "updating" : false, "parameters" : [ { "name" : "sections", "type" : "element(section)", "occurrence" : "+", "description" : "" } ], "returns" : { "type" : "element(section)+", "description" : "" }, "errors" : [  ] }, { "isDocumented" : false, "arity" : 2, "name" : "section", "qname" : "batch:section", "signature" : "($sections as element(section)+, $level as xs:integer) as element(section)+", "description" : "", "summary" : "", "annotation_str" : "", "annotations" : [  ], "updating" : false, "parameters" : [ { "name" : "sections", "type" : "element(section)", "occurrence" : "+", "description" : "" }, { "name" : "level", "type" : "xs:integer", "occurrence" : null, "description" : "" } ], "returns" : { "type" : "element(section)+", "description" : "" }, "errors" : [  ] }, { "isDocumented" : false, "arity" : 1, "name" : "xqdoc", "qname" : "batch:xqdoc", "signature" : "($module as element(module)) as element(xq:xqdoc)", "description" : "", "summary" : "", "annotation_str" : " %an:nondeterministic", "annotations" : [ { "prefix" : "an", "ns" : "http://zorba.io/annotations", "name" : "nondeterministic", "value" : "" } ], "updating" : false, "parameters" : [ { "name" : "module", "type" : "element(module)", "occurrence" : null, "description" : "" } ], "returns" : { "type" : "element(xq:xqdoc)", "description" : "" }, "errors" : [  ] } ], "variables" : [  ] }, "http://zorba.io/modules/data-cleaning/hybrid-string-similarity" : { "ns" : "http://zorba.io/modules/data-cleaning/hybrid-string-similarity", "description" : " <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">This library module provides hybrid string similarity functions, combining the properties of\n character-based string similarity functions and token-based string similarity functions.</p>\n <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"/>\n <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">The logic contained in this module is not specific to any particular XQuery implementation,\n although the module requires the trigonometic functions of XQuery 3.0 or a math extension\n function such as sqrt($x as numeric) for computing the square root.</p>\n", "sees" : [  ], "authors" : [ "<xqdoc:author xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">Bruno Martins and Diogo Simões</xqdoc:author>" ], "version" : null, "encoding" : "utf-8", "namespaces" : [ { "uri" : "http://www.w3.org/2005/xpath-functions/math", "prefix" : "math" }, { "uri" : "http://zorba.io/modules/data-cleaning/set-similarity", "prefix" : "set" }, { "uri" : "http://zorba.io/modules/data-cleaning/character-based-string-similarity", "prefix" : "simc" }, { "uri" : "http://zorba.io/modules/data-cleaning/hybrid-string-similarity", "prefix" : "simh" }, { "uri" : "http://zorba.io/modules/data-cleaning/phonetic-string-similarity", "prefix" : "simp" }, { "uri" : "http://zorba.io/modules/data-cleaning/token-based-string-similarity", "prefix" : "simt" }, { "uri" : "http://zorba.io/options/versioning", "prefix" : "ver" } ], "functions" : [ { "isDocumented" : true, "arity" : 4, "name" : "monge-elkan-jaro-winkler", "qname" : "simh:monge-elkan-jaro-winkler", "signature" : "($s1 as xs:string, $s2 as xs:string, $prefix as xs:integer, $fact as xs:double) as xs:double", "description" : " <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">Returns the Monge-Elkan similarity coefficient between two strings, using the Jaro-Winkler</p>\n <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">similarity function to discover token identity.</p>\n <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"/>\n <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">Example usage : <pre class=\"ace-static\" ace-mode=\"xquery\"> monge-elkan-jaro-winkler(\"Comput. Sci. and Eng. Dept., University of California, San Diego\", \"Department of Computer Scinece, Univ. Calif., San Diego\", 4, 0.1) </pre></p>\n <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"/>\n <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">The function invocation in the example above returns : <pre class=\"ace-static\" ace-mode=\"xquery\"> 0.992 </pre></p>\n", "summary" : "<p>  Returns the Monge-Elkan similarity coefficient between two strings, using the Jaro-Winkler \n  similarity function to discover token identity.</p>", "annotation_str" : "", "annotations" : [  ], "updating" : false, "parameters" : [ { "name" : "s1", "type" : "xs:string", "occurrence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> The first string.</div>" }, { "name" : "s2", "type" : "xs:string", "occurrence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> The second string.</div>" }, { "name" : "prefix", "type" : "xs:integer", "occurrence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> The number of characters to consider when testing for equal prefixes with the Jaro-Winkler metric.</div>" }, { "name" : "fact", "type" : "xs:double", "occurrence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> The weighting factor to consider when the input strings have equal prefixes with the Jaro-Winkler metric.</div>" } ], "returns" : { "type" : "xs:double", "description" : "The Monge-Elkan similarity coefficient between the two strings." }, "errors" : [  ] }, { "isDocumented" : true, "arity" : 4, "name" : "soft-cosine-tokens-edit-distance", "qname" : "simh:soft-cosine-tokens-edit-distance", "signature" : "($s1 as xs:string, $s2 as xs:string, $r as xs:string, $t as xs:integer) as xs:double", "description" : " <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">Returns the cosine similarity coefficient between sets of tokens extracted from two strings.</p>\n <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">The tokens from each string are weighted according to their occurence frequency (i.e., weighted according to the\n term-frequency heuristic from Information Retrieval).</p>\n <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">The Edit Distance similarity function is used to discover token identity, and tokens having an edit distance\n bellow a given threshold are considered as matching tokens.</p>\n <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"/>\n <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">Example usage : <pre class=\"ace-static\" ace-mode=\"xquery\"> soft-cosine-tokens-edit-distance(\"The FLWOR Foundation\", \"FLWOR Found.\", \" +\", 0 ) </pre></p>\n <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"/>\n <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">The function invocation in the example above returns : <pre class=\"ace-static\" ace-mode=\"xquery\"> 0.408248290463863 </pre></p>\n", "summary" : "<p>  Returns the cosine similarity coefficient between sets of tokens extracted from two strings.</p>", "annotation_str" : "", "annotations" : [  ], "updating" : false, "parameters" : [ { "name" : "s1", "type" : "xs:string", "occurrence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> The first string.</div>" }, { "name" : "s2", "type" : "xs:string", "occurrence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> The second string.</div>" }, { "name" : "r", "type" : "xs:string", "occurrence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> A regular expression forming the delimiter character(s) which mark the boundaries between adjacent tokens.</div>" }, { "name" : "t", "type" : "xs:integer", "occurrence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> A threshold for the similarity function used to discover token identity.</div>" } ], "returns" : { "type" : "xs:double", "description" : "The cosine similarity coefficient between the sets tokens extracted from the two strings." }, "errors" : [  ] }, { "isDocumented" : true, "arity" : 6, "name" : "soft-cosine-tokens-jaro-winkler", "qname" : "simh:soft-cosine-tokens-jaro-winkler", "signature" : "($s1 as xs:string, $s2 as xs:string, $r as xs:string, $t as xs:double, $prefix as xs:integer?, $fact as xs:double?) as xs:double", "description" : " <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">Returns the cosine similarity coefficient between sets of tokens extracted from two strings.</p>\n <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">The tokens from each string are weighted according to their occurence frequency (i.e., weighted according to the\n term-frequency heuristic from Information Retrieval).</p>\n <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">The Jaro-Winkler similarity function is used to discover token identity, and tokens having a Jaro-Winkler\n similarity above a given threshold are considered as matching tokens.</p>\n <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"/>\n <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">Example usage : <pre class=\"ace-static\" ace-mode=\"xquery\"> soft-cosine-tokens-jaro-winkler(\"The FLWOR Foundation\", \"FLWOR Found.\", \" +\", 1, 4, 0.1 ) </pre></p>\n <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"/>\n <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">The function invocation in the example above returns : <pre class=\"ace-static\" ace-mode=\"xquery\"> 0.45 </pre></p>\n", "summary" : "<p>  Returns the cosine similarity coefficient between sets of tokens extracted from two strings.</p>", "annotation_str" : "", "annotations" : [  ], "updating" : false, "parameters" : [ { "name" : "s1", "type" : "xs:string", "occurrence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> The first string.</div>" }, { "name" : "s2", "type" : "xs:string", "occurrence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> The second string.</div>" }, { "name" : "r", "type" : "xs:string", "occurrence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> A regular expression forming the delimiter character(s) which mark the boundaries between adjacent tokens.</div>" }, { "name" : "t", "type" : "xs:double", "occurrence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> A threshold for the similarity function used to discover token identity.</div>" }, { "name" : "prefix", "type" : "xs:integer", "occurrence" : "?", "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> The number of characters to consider when testing for equal prefixes with the Jaro-Winkler metric.</div>" }, { "name" : "fact", "type" : "xs:double", "occurrence" : "?", "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> The weighting factor to consider when the input strings have equal prefixes with the Jaro-Winkler metric.</div>" } ], "returns" : { "type" : "xs:double", "description" : "The cosine similarity coefficient between the sets tokens extracted from the two strings." }, "errors" : [  ] }, { "isDocumented" : true, "arity" : 4, "name" : "soft-cosine-tokens-jaro", "qname" : "simh:soft-cosine-tokens-jaro", "signature" : "($s1 as xs:string, $s2 as xs:string, $r as xs:string, $t as xs:double) as xs:double", "description" : " <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">Returns the cosine similarity coefficient between sets of tokens extracted from two strings.</p>\n <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">The tokens from each string are weighted according to their occurence frequency (i.e., weighted according to the\n term-frequency heuristic from Information Retrieval).</p>\n <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">The Jaro similarity function is used to discover token identity, and tokens having a Jaro similarity above\n a given threshold are considered as matching tokens.</p>\n <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"/>\n <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">Example usage : <pre class=\"ace-static\" ace-mode=\"xquery\"> soft-cosine-tokens-jaro(\"The FLWOR Foundation\", \"FLWOR Found.\", \" +\", 1 ) </pre></p>\n <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"/>\n <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">The function invocation in the example above returns : <pre class=\"ace-static\" ace-mode=\"xquery\"> 0.5 </pre></p>\n", "summary" : "<p>  Returns the cosine similarity coefficient between sets of tokens extracted from two strings.</p>", "annotation_str" : "", "annotations" : [  ], "updating" : false, "parameters" : [ { "name" : "s1", "type" : "xs:string", "occurrence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> The first string.</div>" }, { "name" : "s2", "type" : "xs:string", "occurrence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> The second string.</div>" }, { "name" : "r", "type" : "xs:string", "occurrence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> A regular expression forming the delimiter character(s) which mark the boundaries between adjacent tokens.</div>" }, { "name" : "t", "type" : "xs:double", "occurrence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> A threshold for the similarity function used to discover token identity.</div>" } ], "returns" : { "type" : "xs:double", "description" : "The cosine similarity coefficient between the sets tokens extracted from the two strings." }, "errors" : [  ] }, { "isDocumented" : true, "arity" : 3, "name" : "soft-cosine-tokens-metaphone", "qname" : "simh:soft-cosine-tokens-metaphone", "signature" : "($s1 as xs:string, $s2 as xs:string, $r as xs:string) as xs:double", "description" : " <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">Returns the cosine similarity coefficient between sets of tokens extracted from two strings.</p>\n <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">The tokens from each string are weighted according to their occurence frequency (i.e., weighted according to the\n term-frequency heuristic from Information Retrieval).</p>\n <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">The Metaphone phonetic similarity function is used to discover token identity, which is equivalent to saying that\n this function returns the cosine similarity coefficient between sets of Metaphone keys.</p>\n <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"/>\n <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">Example usage : <pre class=\"ace-static\" ace-mode=\"xquery\"> soft-cosine-tokens-metaphone(\"ALEKSANDER SMITH\", \"ALEXANDER SMYTH\", \" +\" ) </pre></p>\n <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"/>\n <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">The function invocation in the example above returns : <pre class=\"ace-static\" ace-mode=\"xquery\"> 1.0 </pre></p>\n", "summary" : "<p>  Returns the cosine similarity coefficient between sets of tokens extracted from two strings.</p>", "annotation_str" : "", "annotations" : [  ], "updating" : false, "parameters" : [ { "name" : "s1", "type" : "xs:string", "occurrence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> The first string.</div>" }, { "name" : "s2", "type" : "xs:string", "occurrence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> The second string.</div>" }, { "name" : "r", "type" : "xs:string", "occurrence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> A regular expression forming the delimiter character(s) which mark the boundaries between adjacent tokens.</div>" } ], "returns" : { "type" : "xs:double", "description" : "The cosine similarity coefficient between the sets Metaphone keys extracted from the two strings." }, "errors" : [  ] }, { "isDocumented" : true, "arity" : 3, "name" : "soft-cosine-tokens-soundex", "qname" : "simh:soft-cosine-tokens-soundex", "signature" : "($s1 as xs:string, $s2 as xs:string, $r as xs:string) as xs:double", "description" : " <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">Returns the cosine similarity coefficient between sets of tokens extracted from two strings.</p>\n <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"/>\n <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">The tokens from each string are weighted according to their occurence frequency (i.e., weighted according to the\n term-frequency heuristic from Information Retrieval).</p>\n <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">The Soundex phonetic similarity function is used to discover token identity, which is equivalent to saying that\n this function returns the cosine similarity coefficient between sets of Soundex keys.</p>\n <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"/>\n <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">Example usage : <pre class=\"ace-static\" ace-mode=\"xquery\"> soft-cosine-tokens-soundex(\"ALEKSANDER SMITH\", \"ALEXANDER SMYTH\", \" +\") </pre></p>\n <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"/>\n <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">The function invocation in the example above returns : <pre class=\"ace-static\" ace-mode=\"xquery\"> 1.0 </pre></p>\n", "summary" : "<p>  Returns the cosine similarity coefficient between sets of tokens extracted from two strings.</p>", "annotation_str" : "", "annotations" : [  ], "updating" : false, "parameters" : [ { "name" : "s1", "type" : "xs:string", "occurrence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> The first string.</div>" }, { "name" : "s2", "type" : "xs:string", "occurrence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> The second string.</div>" }, { "name" : "r", "type" : "xs:string", "occurrence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> A regular expression forming the delimiter character(s) which mark the boundaries between adjacent tokens.</div>" } ], "returns" : { "type" : "xs:double", "description" : "The cosine similarity coefficient between the sets of Soundex keys extracted from the two strings." }, "errors" : [  ] } ], "variables" : [  ] }, "http://xbrl.io/modules/bizql/rules" : { "ns" : "http://xbrl.io/modules/bizql/rules", "description" : " <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">This module provides functions for storing, retrieving, and modifying\n rules. Rules can be used in BizQL queries to:</p>\n <ul xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">\n   <li>Impute Facts that were not reported within an instance, yet can be\n       derived from reported facts.</li>\n   <li>Compute arbitrary new Facts (Ratios, Calculated Facts, Facts from different\n       Datasources/Instances, etc.).</li>\n   <li>Run validation and/or verification rules</li>\n </ul>\n <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">A Rule is an object containing a BizQL fomula to execute if a condition is met.\n For example if a user queries for a certain concept and a rule exists for this\n concept then the rule is applied to get the fact.</p>\n <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">With this module, you can retrieve the rules associated with each report\n schema. You can also query for facts by making implicitly use of the mapping.</p>\n", "sees" : [  ], "authors" : [ "<xqdoc:author xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">Charles Hoffman</xqdoc:author>", "<xqdoc:author xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">Matthias Brantner</xqdoc:author>", "<xqdoc:author xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">Dennis Knochenwefel</xqdoc:author>", "<xqdoc:author xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">Ghislain Fourny</xqdoc:author>" ], "version" : null, "encoding" : "utf-8", "namespaces" : [ { "uri" : "http://xbrl.io/modules/bizql/archives", "prefix" : "archives" }, { "uri" : "http://xbrl.io/modules/bizql/facts", "prefix" : "facts" }, { "uri" : "http://xbrl.io/modules/bizql/networks", "prefix" : "networks" }, { "uri" : "http://xbrl.io/modules/bizql/report-schemas", "prefix" : "report-schemas" }, { "uri" : "http://xbrl.io/modules/bizql/rules", "prefix" : "rules" }, { "uri" : "http://zorba.io/options/versioning", "prefix" : "ver" } ], "functions" : [ { "isDocumented" : true, "arity" : 7, "name" : "create-computed-fact", "qname" : "rules:create-computed-fact", "signature" : "($template-fact as object(), $concept-name-or-aspects as item(), $value as item(), $rule as object(), $audit-trail-message as string, $source-facts as object()*, $options as object()?) as object()", "description" : " <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">Helper function to create a new fact within a rule.</p>\n", "summary" : "<p>  Helper function to create a new fact within a rule.</p>", "annotation_str" : "", "annotations" : [  ], "updating" : false, "parameters" : [ { "name" : "template-fact", "type" : "object()", "occurrence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> a fact object that will be used as a template for the newly created fact</div>" }, { "name" : "concept-name-or-aspects", "type" : "item()", "occurrence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> either a name of the concept for the newly created fact or a complete aspects object to be used in the new fact.</div>" }, { "name" : "value", "type" : "item()", "occurrence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> a value for the newly created fact</div>" }, { "name" : "rule", "type" : "object()", "occurrence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> the rule in which this fact has been created</div>" }, { "name" : "audit-trail-message", "type" : "string", "occurrence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> a verbose string message explaining how and why this fact has been created</div>" }, { "name" : "source-facts", "type" : "object()", "occurrence" : "*", "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> sequence of facts that have been used to compute the new fact (this will only be added to the AuditTrails if the audit-trail option is set to \"debug\")</div>" }, { "name" : "options", "type" : "object()", "occurrence" : "?", "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> <a href=\"facts#standard_options\">standard fact retrieving options</a>.</div>" } ], "returns" : { "type" : "object()", "description" : "the decimal value of the fact or 0." }, "errors" : [  ] }, { "isDocumented" : true, "arity" : 1, "name" : "fact-trail", "qname" : "rules:fact-trail", "signature" : "($fact as object()?) as string", "description" : " <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">Serializes a fact to a simple string format that can be used in\n    audit trail messages to trail the value of the fact.</p>\n <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">The returned string follows the pattern: fact-concept-name[fact-value]</p>\n", "summary" : "<p>  Serializes a fact to a simple string format that can be used in\n    audit trail messages to trail the value of the fact.</p>", "annotation_str" : "", "annotations" : [  ], "updating" : false, "parameters" : [ { "name" : "fact", "type" : "object()", "occurrence" : "?", "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> a single fact to serialize to a simple informative string</div>" } ], "returns" : { "type" : "string", "description" : "the string with key information about the fact." }, "errors" : [  ] }, { "isDocumented" : true, "arity" : 2, "name" : "fact-trail", "qname" : "rules:fact-trail", "signature" : "($fact as object()?, $name as string) as string", "description" : " <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">Serializes a fact to a simple string format that can be used in\n    audit trail messages to trail the value of the fact.</p>\n <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">The returned string follows the pattern: fact-concept-name[fact-value]</p>\n", "summary" : "<p>  Serializes a fact to a simple string format that can be used in\n    audit trail messages to trail the value of the fact.</p>", "annotation_str" : "", "annotations" : [  ], "updating" : false, "parameters" : [ { "name" : "fact", "type" : "object()", "occurrence" : "?", "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> an empty-sequence or a single fact to serialize to a simple informative string</div>" }, { "name" : "name", "type" : "string", "occurrence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> an alternative name to use if the $fact is an empty-sequence otherwise the name will be taken from the fact</div>" } ], "returns" : { "type" : "string", "description" : "the string with key information about the fact." }, "errors" : [  ] }, { "isDocumented" : true, "arity" : 0, "name" : "rules", "qname" : "rules:rules", "signature" : "() as object()*", "description" : " <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">Retrieves all rules from all report schemas.</p>\n", "summary" : "<p>  Retrieves all rules from all report schemas.</p>", "annotation_str" : "", "annotations" : [  ], "updating" : false, "parameters" : [  ], "returns" : { "type" : "object()*", "description" : "all rules." }, "errors" : [  ] }, { "isDocumented" : true, "arity" : 1, "name" : "rules", "qname" : "rules:rules", "signature" : "($report-schemas-or-ids as item()*) as object()*", "description" : " <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">Return the rules from the given report schemas.</p>\n", "summary" : "<p>  Return the rules from the given report schemas.</p>", "annotation_str" : "", "annotations" : [  ], "updating" : false, "parameters" : [ { "name" : "report-schemas-or-ids", "type" : "item()", "occurrence" : "*", "description" : "" } ], "returns" : { "type" : "object()*", "description" : "the rules from the report schemas." }, "errors" : [  ] } ], "variables" : [  ] }, "http://www.28msec.com/modules/lock" : { "ns" : "http://www.28msec.com/modules/lock", "description" : " Sausalito provides a an application level locking mechanism that can be\n used e.g. to ensure exclusive access to data.\n As the store ensures atomicity of of single document updates, atomic\n updates to multiple documents are implemented using this mechanism.\n Locks can be acquired and re-acquired at any time during a request and\n are released at the end of the request.\n", "sees" : [  ], "authors" : [ "<xqdoc:author xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">28msec</xqdoc:author>" ], "version" : null, "encoding" : "utf-8", "namespaces" : [ { "uri" : "http://zorba.io/annotations", "prefix" : "an" }, { "uri" : "http://www.28msec.com/modules/lock", "prefix" : "lock" }, { "uri" : "http://zorba.io/options/versioning", "prefix" : "ver" } ], "functions" : [ { "isDocumented" : true, "arity" : 1, "name" : "try-acquire", "qname" : "lock:try-acquire", "signature" : "($lock-name as xs:string) as xs:boolean external", "description" : " Tries to acquire a lock.\n This operation is non-blocking if the lock cannot be acquired immediately.\n To check and modify the stock of a product wihtout interference from\n concurrent requests a lock could be used like this:\n <pre xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">\n if (lock:try-acquire(\"stock-update\"))\n then\n   if (stock:check($product-id))\n   then\n     {\n       order:finalize($order-id);\n       stock:decrement($product-id);\n     }\n   else\n     order:hold($order-id);\n else\n   ...\n </pre>\n", "summary" : "<p> Tries to acquire a lock.</p>", "annotation_str" : " %an:sequential", "annotations" : [ { "prefix" : "an", "ns" : "http://zorba.io/annotations", "name" : "sequential", "value" : "" } ], "updating" : false, "parameters" : [ { "name" : "lock-name", "type" : "xs:string", "occurrence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> The name of the lock.</div>" } ], "returns" : { "type" : "xs:boolean", "description" : "true if the lock could be acquired, false otherwise." }, "errors" : [  ] }, { "isDocumented" : true, "arity" : 2, "name" : "try-acquire", "qname" : "lock:try-acquire", "signature" : "($lock-name as xs:string, $reason as xs:string) as xs:boolean external", "description" : " tries to acquire a lock\n", "summary" : "<p> tries to acquire a lock\n</p>", "annotation_str" : " %an:sequential", "annotations" : [ { "prefix" : "an", "ns" : "http://zorba.io/annotations", "name" : "sequential", "value" : "" } ], "updating" : false, "parameters" : [ { "name" : "lock-name", "type" : "xs:string", "occurrence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> The name of the lock.</div>" }, { "name" : "reason", "type" : "xs:string", "occurrence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> a reason for the acquisition of the lock that can be used for</div>" } ], "returns" : { "type" : "xs:boolean", "description" : "true if the lock could be acquired, false otherwise." }, "errors" : [  ] } ], "variables" : [  ] }, "http://www.zorba-xquery.com/modules/xqdoc/html" : { "ns" : "http://www.zorba-xquery.com/modules/xqdoc/html", "description" : " Convert an XQDoc document into an HTML document.\n This module contains a single <code xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">convert()</code> function\n that transform an XQDoc document into an HTML document.\n Usage:\n <pre xmlns:xqdoc=\"http://www.xqdoc.org/1.0\" class=\"ace-static\" ace-mode=\"xquery\">\n let $xqdoc := xqdoc:xqdoc(\"http://expath.org/ns/file\")\n return html:convert($xqdoc)\n </pre>\n", "sees" : [  ], "authors" : [ "<xqdoc:author xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">William Candillon <a href=\"?anchor=\">wcandillon at gmail dot com</a></xqdoc:author>" ], "version" : null, "encoding" : "utf-8", "namespaces" : [ { "uri" : "http://www.zorba-xquery.com/modules/xqdoc/html", "prefix" : "html" }, { "uri" : "http://www.w3.org/2010/xslt-xquery-serialization", "prefix" : "o" }, { "uri" : "http://zorba.io/options/versioning", "prefix" : "ver" }, { "uri" : "http://www.xqdoc.org/1.0", "prefix" : "xq" } ], "functions" : [ { "isDocumented" : false, "arity" : 1, "name" : "convert", "qname" : "html:convert", "signature" : "($xqdoc as element(xq:xqdoc)) as element(div)", "description" : "", "summary" : "", "annotation_str" : "", "annotations" : [  ], "updating" : false, "parameters" : [ { "name" : "xqdoc", "type" : "element(xq:xqdoc)", "occurrence" : null, "description" : "" } ], "returns" : { "type" : "element(div)", "description" : "" }, "errors" : [  ] } ], "variables" : [  ] }, "http://api.28.io/model" : { "ns" : "http://api.28.io/model", "description" : "", "sees" : [  ], "authors" : [  ], "version" : null, "encoding" : null, "namespaces" : [ { "uri" : "", "prefix" : "an" }, { "uri" : "http://zorba.io/modules/store/static/collections/ddl", "prefix" : "cddl" }, { "uri" : "http://zorba.io/modules/store/static/collections/dml", "prefix" : "cdml" }, { "uri" : "http://zorba.io/modules/store/static/indexes/ddl", "prefix" : "iddl" }, { "uri" : "http://zorba.io/modules/store/static/indexes/dml", "prefix" : "idml" }, { "uri" : "http://api.28.io/model", "prefix" : "model" }, { "uri" : "http://www.zorba-xquery.com/schemas/pul", "prefix" : "pul" }, { "uri" : "http://zorba.io/modules/reference", "prefix" : "ref" }, { "uri" : "http://www.zorba-xquery.com/schemas/xdm", "prefix" : "xdm" } ], "functions" : [ { "isDocumented" : false, "arity" : 1, "name" : "applyPUL", "qname" : "model:applyPUL", "signature" : "($pul as schema-element(pul:pending-update-list))", "description" : "", "summary" : "", "annotation_str" : " %an:sequential", "annotations" : [ { "prefix" : "an", "ns" : "", "name" : "sequential", "value" : "" } ], "updating" : false, "parameters" : [ { "name" : "pul", "type" : "schema-element(pul:pending-update-list)", "occurrence" : null, "description" : "" } ], "returns" : { "type" : null, "description" : "" }, "errors" : [  ] }, { "isDocumented" : false, "arity" : 1, "name" : "applyPULOp", "qname" : "model:applyPULOp", "signature" : "($pul)", "description" : "", "summary" : "", "annotation_str" : "", "annotations" : [  ], "updating" : true, "parameters" : [ { "name" : "pul", "type" : null, "occurrence" : null, "description" : "" } ], "returns" : { "type" : null, "description" : "" }, "errors" : [  ] }, { "isDocumented" : false, "arity" : 1, "name" : "build-nodes", "qname" : "model:build-nodes", "signature" : "($definition)", "description" : "", "summary" : "", "annotation_str" : "", "annotations" : [  ], "updating" : false, "parameters" : [ { "name" : "definition", "type" : null, "occurrence" : null, "description" : "" } ], "returns" : { "type" : null, "description" : "" }, "errors" : [  ] }, { "isDocumented" : true, "arity" : 1, "name" : "collection-qname", "qname" : "model:collection-qname", "signature" : "($name as xs:string) as xs:QName", "description" : " Returns the QName for a collection. Returns the empty sequence if no collection with the given name exists.\n", "summary" : "<p> Returns the QName for a collection.</p>", "annotation_str" : "", "annotations" : [  ], "updating" : false, "parameters" : [ { "name" : "name", "type" : "xs:string", "occurrence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> the name of the collection as string</div>" } ], "returns" : { "type" : "xs:QName", "description" : "the QName for the collection or the empty sequence" }, "errors" : [  ] }, { "isDocumented" : false, "arity" : 2, "name" : "delete-node-collection", "qname" : "model:delete-node-collection", "signature" : "($collection as xs:QName, $noderef as xs:anyURI?)", "description" : "", "summary" : "", "annotation_str" : "", "annotations" : [  ], "updating" : true, "parameters" : [ { "name" : "collection", "type" : "xs:QName", "occurrence" : null, "description" : "" }, { "name" : "noderef", "type" : "xs:anyURI", "occurrence" : "?", "description" : "" } ], "returns" : { "type" : null, "description" : "" }, "errors" : [  ] }, { "isDocumented" : false, "arity" : 1, "name" : "delete-node", "qname" : "model:delete-node", "signature" : "($noderef as xs:anyURI)", "description" : "", "summary" : "", "annotation_str" : "", "annotations" : [  ], "updating" : true, "parameters" : [ { "name" : "noderef", "type" : "xs:anyURI", "occurrence" : null, "description" : "" } ], "returns" : { "type" : null, "description" : "" }, "errors" : [  ] }, { "isDocumented" : false, "arity" : 1, "name" : "element-node", "qname" : "model:element-node", "signature" : "($definition as schema-element(xdm:element))", "description" : "", "summary" : "", "annotation_str" : "", "annotations" : [  ], "updating" : false, "parameters" : [ { "name" : "definition", "type" : "schema-element(xdm:element)", "occurrence" : null, "description" : "" } ], "returns" : { "type" : null, "description" : "" }, "errors" : [  ] }, { "isDocumented" : false, "arity" : 1, "name" : "find-keys", "qname" : "model:find-keys", "signature" : "($collection)", "description" : "", "summary" : "", "annotation_str" : "", "annotations" : [  ], "updating" : false, "parameters" : [ { "name" : "collection", "type" : null, "occurrence" : null, "description" : "" } ], "returns" : { "type" : null, "description" : "" }, "errors" : [  ] }, { "isDocumented" : true, "arity" : 0, "name" : "get-collection-names", "qname" : "model:get-collection-names", "signature" : "() as xs:string*", "description" : " Returns all collection names\n", "summary" : "<p> Returns all collection names\n</p>", "annotation_str" : "", "annotations" : [  ], "updating" : false, "parameters" : [  ], "returns" : { "type" : "xs:string*", "description" : "collection names as a sequence of strings" }, "errors" : [  ] }, { "isDocumented" : true, "arity" : 1, "name" : "get-collection-size", "qname" : "model:get-collection-size", "signature" : "($name as xs:string) as xs:integer", "description" : " Returns the size of a collection\n", "summary" : "<p> Returns the size of a collection\n</p>", "annotation_str" : "", "annotations" : [  ], "updating" : false, "parameters" : [ { "name" : "name", "type" : "xs:string", "occurrence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> the name of the collection as string</div>" } ], "returns" : { "type" : "xs:integer", "description" : "the size of the collection" }, "errors" : [ "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">if the collection chosen by $name does not exist</xqdoc:error>" ] }, { "isDocumented" : true, "arity" : 1, "name" : "get-collection", "qname" : "model:get-collection", "signature" : "($name as xs:string) as node()*", "description" : " Returns the whole collection with a given name\n", "summary" : "<p> Returns the whole collection with a given name\n</p>", "annotation_str" : "", "annotations" : [  ], "updating" : false, "parameters" : [ { "name" : "name", "type" : "xs:string", "occurrence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> name of collection to return</div>" } ], "returns" : { "type" : "node()*", "description" : "sequence of nodes of the collection" }, "errors" : [  ] }, { "isDocumented" : true, "arity" : 4, "name" : "get-collection", "qname" : "model:get-collection", "signature" : "($name as xs:string, $first-noderef as xs:anyURI?, $offset as xs:integer?, $limit as xs:integer)", "description" : " Returns \"a page\" of the collection (a part)\n", "summary" : "<p> Returns \"a page\" of the collection (a part)\n</p>", "annotation_str" : "", "annotations" : [  ], "updating" : false, "parameters" : [ { "name" : "name", "type" : "xs:string", "occurrence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> the name of the collection as string</div>" }, { "name" : "first-noderef", "type" : "xs:anyURI", "occurrence" : "?", "description" : "" }, { "name" : "offset", "type" : "xs:integer", "occurrence" : "?", "description" : "" }, { "name" : "limit", "type" : "xs:integer", "occurrence" : null, "description" : "" } ], "returns" : { "type" : null, "description" : "a sequence of nodes from the collection" }, "errors" : [  ] }, { "isDocumented" : false, "arity" : 4, "name" : "get-column-id", "qname" : "model:get-column-id", "signature" : "($basepath as xs:string?, $name as xs:string, $isattribute as xs:boolean, $columns) as xs:integer", "description" : "", "summary" : "", "annotation_str" : " %an:sequential", "annotations" : [ { "prefix" : "an", "ns" : "", "name" : "sequential", "value" : "" } ], "updating" : false, "parameters" : [ { "name" : "basepath", "type" : "xs:string", "occurrence" : "?", "description" : "" }, { "name" : "name", "type" : "xs:string", "occurrence" : null, "description" : "" }, { "name" : "isattribute", "type" : "xs:boolean", "occurrence" : null, "description" : "" }, { "name" : "columns", "type" : null, "occurrence" : null, "description" : "" } ], "returns" : { "type" : "xs:integer", "description" : "" }, "errors" : [  ] }, { "isDocumented" : true, "arity" : 0, "name" : "get-index-names", "qname" : "model:get-index-names", "signature" : "() as xs:string*", "description" : " Returns all index names\n", "summary" : "<p> Returns all index names\n</p>", "annotation_str" : "", "annotations" : [  ], "updating" : false, "parameters" : [  ], "returns" : { "type" : "xs:string*", "description" : "index names as a sequence of strings" }, "errors" : [  ] }, { "isDocumented" : false, "arity" : 2, "name" : "get-index-point", "qname" : "model:get-index-point", "signature" : "($index-name as xs:string, $index-key)", "description" : "", "summary" : "", "annotation_str" : "", "annotations" : [  ], "updating" : false, "parameters" : [ { "name" : "index-name", "type" : "xs:string", "occurrence" : null, "description" : "" }, { "name" : "index-key", "type" : null, "occurrence" : null, "description" : "" } ], "returns" : { "type" : null, "description" : "" }, "errors" : [  ] }, { "isDocumented" : false, "arity" : 1, "name" : "get-node-group", "qname" : "model:get-node-group", "signature" : "($noderef as xs:anyURI)", "description" : "", "summary" : "", "annotation_str" : "", "annotations" : [  ], "updating" : false, "parameters" : [ { "name" : "noderef", "type" : "xs:anyURI", "occurrence" : null, "description" : "" } ], "returns" : { "type" : null, "description" : "" }, "errors" : [  ] }, { "isDocumented" : false, "arity" : 1, "name" : "get-node-path", "qname" : "model:get-node-path", "signature" : "($node)", "description" : "", "summary" : "", "annotation_str" : "", "annotations" : [  ], "updating" : false, "parameters" : [ { "name" : "node", "type" : null, "occurrence" : null, "description" : "" } ], "returns" : { "type" : null, "description" : "" }, "errors" : [  ] }, { "isDocumented" : false, "arity" : 1, "name" : "get-node", "qname" : "model:get-node", "signature" : "($noderef as xs:anyURI)", "description" : "", "summary" : "", "annotation_str" : "", "annotations" : [  ], "updating" : false, "parameters" : [ { "name" : "noderef", "type" : "xs:anyURI", "occurrence" : null, "description" : "" } ], "returns" : { "type" : null, "description" : "" }, "errors" : [  ] }, { "isDocumented" : true, "arity" : 1, "name" : "index-qname", "qname" : "model:index-qname", "signature" : "($name as xs:string) as xs:QName", "description" : " Returns the QName for an index. Returns the empty sequence if no index with the given name exists.\n", "summary" : "<p> Returns the QName for an index.</p>", "annotation_str" : "", "annotations" : [  ], "updating" : false, "parameters" : [ { "name" : "name", "type" : "xs:string", "occurrence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> the name of the index as string</div>" } ], "returns" : { "type" : "xs:QName", "description" : "the QName for the index or the empty sequence" }, "errors" : [  ] }, { "isDocumented" : false, "arity" : 3, "name" : "insert-attribute", "qname" : "model:insert-attribute", "signature" : "($noderef as xs:anyURI, $attribute as xs:string, $value)", "description" : "", "summary" : "", "annotation_str" : "", "annotations" : [  ], "updating" : true, "parameters" : [ { "name" : "noderef", "type" : "xs:anyURI", "occurrence" : null, "description" : "" }, { "name" : "attribute", "type" : "xs:string", "occurrence" : null, "description" : "" }, { "name" : "value", "type" : null, "occurrence" : null, "description" : "" } ], "returns" : { "type" : null, "description" : "" }, "errors" : [  ] }, { "isDocumented" : false, "arity" : 4, "name" : "insert-node-collection-ordered", "qname" : "model:insert-node-collection-ordered", "signature" : "($collection as xs:QName, $noderef as xs:anyURI?, $position as xs:string, $nodes)", "description" : "", "summary" : "", "annotation_str" : "", "annotations" : [  ], "updating" : true, "parameters" : [ { "name" : "collection", "type" : "xs:QName", "occurrence" : null, "description" : "" }, { "name" : "noderef", "type" : "xs:anyURI", "occurrence" : "?", "description" : "" }, { "name" : "position", "type" : "xs:string", "occurrence" : null, "description" : "" }, { "name" : "nodes", "type" : null, "occurrence" : null, "description" : "" } ], "returns" : { "type" : null, "description" : "" }, "errors" : [  ] }, { "isDocumented" : false, "arity" : 4, "name" : "insert-node-collection", "qname" : "model:insert-node-collection", "signature" : "($collection as xs:QName, $noderef as xs:anyURI?, $position as xs:string, $nodes)", "description" : "", "summary" : "", "annotation_str" : "", "annotations" : [  ], "updating" : true, "parameters" : [ { "name" : "collection", "type" : "xs:QName", "occurrence" : null, "description" : "" }, { "name" : "noderef", "type" : "xs:anyURI", "occurrence" : "?", "description" : "" }, { "name" : "position", "type" : "xs:string", "occurrence" : null, "description" : "" }, { "name" : "nodes", "type" : null, "occurrence" : null, "description" : "" } ], "returns" : { "type" : null, "description" : "" }, "errors" : [  ] }, { "isDocumented" : false, "arity" : 5, "name" : "insert-node-collection", "qname" : "model:insert-node-collection", "signature" : "($collection as xs:QName, $noderef as xs:anyURI?, $position as xs:string, $nodes, $validate as xs:boolean)", "description" : "", "summary" : "", "annotation_str" : "", "annotations" : [  ], "updating" : true, "parameters" : [ { "name" : "collection", "type" : "xs:QName", "occurrence" : null, "description" : "" }, { "name" : "noderef", "type" : "xs:anyURI", "occurrence" : "?", "description" : "" }, { "name" : "position", "type" : "xs:string", "occurrence" : null, "description" : "" }, { "name" : "nodes", "type" : null, "occurrence" : null, "description" : "" }, { "name" : "validate", "type" : "xs:boolean", "occurrence" : null, "description" : "" } ], "returns" : { "type" : null, "description" : "" }, "errors" : [  ] }, { "isDocumented" : false, "arity" : 3, "name" : "insert-node", "qname" : "model:insert-node", "signature" : "($noderef as xs:anyURI, $position as xs:string, $newnodes)", "description" : "", "summary" : "", "annotation_str" : "", "annotations" : [  ], "updating" : true, "parameters" : [ { "name" : "noderef", "type" : "xs:anyURI", "occurrence" : null, "description" : "" }, { "name" : "position", "type" : "xs:string", "occurrence" : null, "description" : "" }, { "name" : "newnodes", "type" : null, "occurrence" : null, "description" : "" } ], "returns" : { "type" : null, "description" : "" }, "errors" : [  ] }, { "isDocumented" : false, "arity" : 4, "name" : "make-table-row", "qname" : "model:make-table-row", "signature" : "($idx, $node, $columns, $namespaces)", "description" : "", "summary" : "", "annotation_str" : " %an:sequential", "annotations" : [ { "prefix" : "an", "ns" : "", "name" : "sequential", "value" : "" } ], "updating" : false, "parameters" : [ { "name" : "idx", "type" : null, "occurrence" : null, "description" : "" }, { "name" : "node", "type" : null, "occurrence" : null, "description" : "" }, { "name" : "columns", "type" : null, "occurrence" : null, "description" : "" }, { "name" : "namespaces", "type" : null, "occurrence" : null, "description" : "" } ], "returns" : { "type" : null, "description" : "" }, "errors" : [  ] }, { "isDocumented" : false, "arity" : 5, "name" : "make-table-row", "qname" : "model:make-table-row", "signature" : "($node, $path as xs:string?, $row, $columns, $namespaces)", "description" : "", "summary" : "", "annotation_str" : " %an:sequential", "annotations" : [ { "prefix" : "an", "ns" : "", "name" : "sequential", "value" : "" } ], "updating" : false, "parameters" : [ { "name" : "node", "type" : null, "occurrence" : null, "description" : "" }, { "name" : "path", "type" : "xs:string", "occurrence" : "?", "description" : "" }, { "name" : "row", "type" : null, "occurrence" : null, "description" : "" }, { "name" : "columns", "type" : null, "occurrence" : null, "description" : "" }, { "name" : "namespaces", "type" : null, "occurrence" : null, "description" : "" } ], "returns" : { "type" : null, "description" : "" }, "errors" : [  ] }, { "isDocumented" : false, "arity" : 2, "name" : "make-table", "qname" : "model:make-table", "signature" : "($nodes, $namespaces)", "description" : "", "summary" : "", "annotation_str" : " %an:sequential", "annotations" : [ { "prefix" : "an", "ns" : "", "name" : "sequential", "value" : "" } ], "updating" : false, "parameters" : [ { "name" : "nodes", "type" : null, "occurrence" : null, "description" : "" }, { "name" : "namespaces", "type" : null, "occurrence" : null, "description" : "" } ], "returns" : { "type" : null, "description" : "" }, "errors" : [  ] }, { "isDocumented" : false, "arity" : 2, "name" : "node-name", "qname" : "model:node-name", "signature" : "($node as element(*), $namespaces) as xs:string", "description" : "", "summary" : "", "annotation_str" : " %an:sequential", "annotations" : [ { "prefix" : "an", "ns" : "", "name" : "sequential", "value" : "" } ], "updating" : false, "parameters" : [ { "name" : "node", "type" : "element(*)", "occurrence" : null, "description" : "" }, { "name" : "namespaces", "type" : null, "occurrence" : null, "description" : "" } ], "returns" : { "type" : "xs:string", "description" : "" }, "errors" : [  ] }, { "isDocumented" : false, "arity" : 2, "name" : "node-path-index", "qname" : "model:node-path-index", "signature" : "($node as node(), $parent as node()) as xs:integer?", "description" : "", "summary" : "", "annotation_str" : "", "annotations" : [  ], "updating" : false, "parameters" : [ { "name" : "node", "type" : "node()", "occurrence" : null, "description" : "" }, { "name" : "parent", "type" : "node()", "occurrence" : null, "description" : "" } ], "returns" : { "type" : "xs:integer?", "description" : "" }, "errors" : [  ] }, { "isDocumented" : false, "arity" : 2, "name" : "node-prefix", "qname" : "model:node-prefix", "signature" : "($node as element(*), $namespaces) as xs:string?", "description" : "", "summary" : "", "annotation_str" : " %an:sequential", "annotations" : [ { "prefix" : "an", "ns" : "", "name" : "sequential", "value" : "" } ], "updating" : false, "parameters" : [ { "name" : "node", "type" : "element(*)", "occurrence" : null, "description" : "" }, { "name" : "namespaces", "type" : null, "occurrence" : null, "description" : "" } ], "returns" : { "type" : "xs:string?", "description" : "" }, "errors" : [  ] }, { "isDocumented" : false, "arity" : 1, "name" : "node-reference", "qname" : "model:node-reference", "signature" : "($node) as xs:string", "description" : "", "summary" : "", "annotation_str" : "", "annotations" : [  ], "updating" : false, "parameters" : [ { "name" : "node", "type" : null, "occurrence" : null, "description" : "" } ], "returns" : { "type" : "xs:string", "description" : "" }, "errors" : [  ] }, { "isDocumented" : false, "arity" : 1, "name" : "node", "qname" : "model:node", "signature" : "($definition)", "description" : "", "summary" : "", "annotation_str" : "", "annotations" : [  ], "updating" : false, "parameters" : [ { "name" : "definition", "type" : null, "occurrence" : null, "description" : "" } ], "returns" : { "type" : null, "description" : "" }, "errors" : [  ] }, { "isDocumented" : false, "arity" : 2, "name" : "rename-node", "qname" : "model:rename-node", "signature" : "($noderef as xs:anyURI, $name as xs:QName)", "description" : "", "summary" : "", "annotation_str" : "", "annotations" : [  ], "updating" : true, "parameters" : [ { "name" : "noderef", "type" : "xs:anyURI", "occurrence" : null, "description" : "" }, { "name" : "name", "type" : "xs:QName", "occurrence" : null, "description" : "" } ], "returns" : { "type" : null, "description" : "" }, "errors" : [  ] }, { "isDocumented" : false, "arity" : 2, "name" : "replace-node", "qname" : "model:replace-node", "signature" : "($noderef as xs:anyURI, $nodes)", "description" : "", "summary" : "", "annotation_str" : "", "annotations" : [  ], "updating" : true, "parameters" : [ { "name" : "noderef", "type" : "xs:anyURI", "occurrence" : null, "description" : "" }, { "name" : "nodes", "type" : null, "occurrence" : null, "description" : "" } ], "returns" : { "type" : null, "description" : "" }, "errors" : [  ] }, { "isDocumented" : false, "arity" : 2, "name" : "replace-value", "qname" : "model:replace-value", "signature" : "($noderef as xs:anyURI, $value)", "description" : "", "summary" : "", "annotation_str" : "", "annotations" : [  ], "updating" : true, "parameters" : [ { "name" : "noderef", "type" : "xs:anyURI", "occurrence" : null, "description" : "" }, { "name" : "value", "type" : null, "occurrence" : null, "description" : "" } ], "returns" : { "type" : null, "description" : "" }, "errors" : [  ] }, { "isDocumented" : false, "arity" : 2, "name" : "resolve-qname", "qname" : "model:resolve-qname", "signature" : "($name as xs:QName, $namespaces) as xs:string", "description" : "", "summary" : "", "annotation_str" : "", "annotations" : [  ], "updating" : false, "parameters" : [ { "name" : "name", "type" : "xs:QName", "occurrence" : null, "description" : "" }, { "name" : "namespaces", "type" : null, "occurrence" : null, "description" : "" } ], "returns" : { "type" : "xs:string", "description" : "" }, "errors" : [  ] }, { "isDocumented" : false, "arity" : 1, "name" : "type-save", "qname" : "model:type-save", "signature" : "($val) as xs:string", "description" : "", "summary" : "", "annotation_str" : "", "annotations" : [  ], "updating" : false, "parameters" : [ { "name" : "val", "type" : null, "occurrence" : null, "description" : "" } ], "returns" : { "type" : "xs:string", "description" : "" }, "errors" : [  ] }, { "isDocumented" : false, "arity" : 1, "name" : "type", "qname" : "model:type", "signature" : "($val as xs:anyAtomicType?) as xs:string", "description" : "", "summary" : "", "annotation_str" : "", "annotations" : [  ], "updating" : false, "parameters" : [ { "name" : "val", "type" : "xs:anyAtomicType", "occurrence" : "?", "description" : "" } ], "returns" : { "type" : "xs:string", "description" : "" }, "errors" : [  ] }, { "isDocumented" : false, "arity" : 1, "name" : "unused-prefix", "qname" : "model:unused-prefix", "signature" : "($namespaces) as xs:string", "description" : "", "summary" : "", "annotation_str" : "", "annotations" : [  ], "updating" : false, "parameters" : [ { "name" : "namespaces", "type" : null, "occurrence" : null, "description" : "" } ], "returns" : { "type" : "xs:string", "description" : "" }, "errors" : [  ] } ], "variables" : [  ] }, "http://api.28.io/validation" : { "ns" : "http://api.28.io/validation", "description" : "", "sees" : [  ], "authors" : [  ], "version" : null, "encoding" : null, "namespaces" : [ { "uri" : "http://zorba.io/modules/reflection", "prefix" : "reflection" }, { "uri" : "http://www.28msec.com/modules/http/response", "prefix" : "resp" }, { "uri" : "http://api.28.io/validation", "prefix" : "validate" } ], "functions" : [ { "isDocumented" : false, "arity" : 3, "name" : "by-schema-array", "qname" : "validate:by-schema-array", "signature" : "($obj, $schema as array(), $path as xs:string)", "description" : "", "summary" : "", "annotation_str" : "", "annotations" : [  ], "updating" : false, "parameters" : [ { "name" : "obj", "type" : null, "occurrence" : null, "description" : "" }, { "name" : "schema", "type" : "array()", "occurrence" : null, "description" : "" }, { "name" : "path", "type" : "xs:string", "occurrence" : null, "description" : "" } ], "returns" : { "type" : null, "description" : "" }, "errors" : [  ] }, { "isDocumented" : false, "arity" : 3, "name" : "by-schema-obj", "qname" : "validate:by-schema-obj", "signature" : "($obj as object(), $schema as object(), $path as xs:string)", "description" : "", "summary" : "", "annotation_str" : "", "annotations" : [  ], "updating" : false, "parameters" : [ { "name" : "obj", "type" : "object()", "occurrence" : null, "description" : "" }, { "name" : "schema", "type" : "object()", "occurrence" : null, "description" : "" }, { "name" : "path", "type" : "xs:string", "occurrence" : null, "description" : "" } ], "returns" : { "type" : null, "description" : "" }, "errors" : [  ] }, { "isDocumented" : false, "arity" : 3, "name" : "by-schema-primitive", "qname" : "validate:by-schema-primitive", "signature" : "($obj, $schema-type as xs:string, $path)", "description" : "", "summary" : "", "annotation_str" : "", "annotations" : [  ], "updating" : false, "parameters" : [ { "name" : "obj", "type" : null, "occurrence" : null, "description" : "" }, { "name" : "schema-type", "type" : "xs:string", "occurrence" : null, "description" : "" }, { "name" : "path", "type" : null, "occurrence" : null, "description" : "" } ], "returns" : { "type" : null, "description" : "" }, "errors" : [  ] }, { "isDocumented" : false, "arity" : 2, "name" : "by-schema", "qname" : "validate:by-schema", "signature" : "($obj as object(), $schema as object())", "description" : "", "summary" : "", "annotation_str" : "", "annotations" : [  ], "updating" : false, "parameters" : [ { "name" : "obj", "type" : "object()", "occurrence" : null, "description" : "" }, { "name" : "schema", "type" : "object()", "occurrence" : null, "description" : "" } ], "returns" : { "type" : null, "description" : "" }, "errors" : [  ] }, { "isDocumented" : false, "arity" : 2, "name" : "expression", "qname" : "validate:expression", "signature" : "($expression as xs:string, $is-domain-expr as xs:boolean) as xs:boolean", "description" : "", "summary" : "", "annotation_str" : "", "annotations" : [  ], "updating" : false, "parameters" : [ { "name" : "expression", "type" : "xs:string", "occurrence" : null, "description" : "" }, { "name" : "is-domain-expr", "type" : "xs:boolean", "occurrence" : null, "description" : "" } ], "returns" : { "type" : "xs:boolean", "description" : "" }, "errors" : [  ] }, { "isDocumented" : false, "arity" : 1, "name" : "type", "qname" : "validate:type", "signature" : "($type as xs:string) as xs:boolean", "description" : "", "summary" : "", "annotation_str" : "", "annotations" : [  ], "updating" : false, "parameters" : [ { "name" : "type", "type" : "xs:string", "occurrence" : null, "description" : "" } ], "returns" : { "type" : "xs:boolean", "description" : "" }, "errors" : [  ] } ], "variables" : [  ] }, "http://api.28.io/sandbox" : { "ns" : "http://api.28.io/sandbox", "description" : "", "sees" : [  ], "authors" : [  ], "version" : null, "encoding" : null, "namespaces" : [ { "uri" : "http://zorba.io/modules/reference", "prefix" : "ref" }, { "uri" : "http://zorba.io/modules/reflection", "prefix" : "reflection" }, { "uri" : "http://api.28.io/sandbox", "prefix" : "sandbox" } ], "functions" : [ { "isDocumented" : false, "arity" : 3, "name" : "filter", "qname" : "sandbox:filter", "signature" : "($nodes, $xpath as xs:string, $namespaces)", "description" : "", "summary" : "", "annotation_str" : "", "annotations" : [  ], "updating" : false, "parameters" : [ { "name" : "nodes", "type" : null, "occurrence" : null, "description" : "" }, { "name" : "xpath", "type" : "xs:string", "occurrence" : null, "description" : "" }, { "name" : "namespaces", "type" : null, "occurrence" : null, "description" : "" } ], "returns" : { "type" : null, "description" : "" }, "errors" : [  ] }, { "isDocumented" : false, "arity" : 3, "name" : "get-names", "qname" : "sandbox:get-names", "signature" : "($nodes, $path as xs:string, $namespaces)", "description" : "", "summary" : "", "annotation_str" : "", "annotations" : [  ], "updating" : false, "parameters" : [ { "name" : "nodes", "type" : null, "occurrence" : null, "description" : "" }, { "name" : "path", "type" : "xs:string", "occurrence" : null, "description" : "" }, { "name" : "namespaces", "type" : null, "occurrence" : null, "description" : "" } ], "returns" : { "type" : null, "description" : "" }, "errors" : [  ] }, { "isDocumented" : false, "arity" : 3, "name" : "get-values", "qname" : "sandbox:get-values", "signature" : "($nodes, $path as xs:string, $namespaces)", "description" : "", "summary" : "", "annotation_str" : "", "annotations" : [  ], "updating" : false, "parameters" : [ { "name" : "nodes", "type" : null, "occurrence" : null, "description" : "" }, { "name" : "path", "type" : "xs:string", "occurrence" : null, "description" : "" }, { "name" : "namespaces", "type" : null, "occurrence" : null, "description" : "" } ], "returns" : { "type" : null, "description" : "" }, "errors" : [  ] }, { "isDocumented" : false, "arity" : 3, "name" : "key-constraint", "qname" : "sandbox:key-constraint", "signature" : "($nodes, $condition as xs:string, $namespaces)", "description" : "", "summary" : "", "annotation_str" : "", "annotations" : [  ], "updating" : false, "parameters" : [ { "name" : "nodes", "type" : null, "occurrence" : null, "description" : "" }, { "name" : "condition", "type" : "xs:string", "occurrence" : null, "description" : "" }, { "name" : "namespaces", "type" : null, "occurrence" : null, "description" : "" } ], "returns" : { "type" : null, "description" : "" }, "errors" : [  ] }, { "isDocumented" : false, "arity" : 1, "name" : "ns-declarations", "qname" : "sandbox:ns-declarations", "signature" : "($namespaces) as xs:string", "description" : "", "summary" : "", "annotation_str" : "", "annotations" : [  ], "updating" : false, "parameters" : [ { "name" : "namespaces", "type" : null, "occurrence" : null, "description" : "" } ], "returns" : { "type" : "xs:string", "description" : "" }, "errors" : [  ] }, { "isDocumented" : false, "arity" : 4, "name" : "order", "qname" : "sandbox:order", "signature" : "($nodes, $path as xs:string, $descending as xs:boolean, $namespaces)", "description" : "", "summary" : "", "annotation_str" : "", "annotations" : [  ], "updating" : false, "parameters" : [ { "name" : "nodes", "type" : null, "occurrence" : null, "description" : "" }, { "name" : "path", "type" : "xs:string", "occurrence" : null, "description" : "" }, { "name" : "descending", "type" : "xs:boolean", "occurrence" : null, "description" : "" }, { "name" : "namespaces", "type" : null, "occurrence" : null, "description" : "" } ], "returns" : { "type" : null, "description" : "" }, "errors" : [  ] }, { "isDocumented" : false, "arity" : 3, "name" : "tuple-constraint", "qname" : "sandbox:tuple-constraint", "signature" : "($nodes, $condition as xs:string, $namespaces)", "description" : "", "summary" : "", "annotation_str" : "", "annotations" : [  ], "updating" : false, "parameters" : [ { "name" : "nodes", "type" : null, "occurrence" : null, "description" : "" }, { "name" : "condition", "type" : "xs:string", "occurrence" : null, "description" : "" }, { "name" : "namespaces", "type" : null, "occurrence" : null, "description" : "" } ], "returns" : { "type" : null, "description" : "" }, "errors" : [  ] } ], "variables" : [  ] }, "http://zorba.io/modules/store/static/collections/dml" : { "ns" : "http://zorba.io/modules/store/static/collections/dml", "description" : " This modules provides a set of functions to modify a collection\n and retrieve the items contained in a particular collection.\n <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"/>\n This module is part of\n <a xmlns:xqdoc=\"http://www.xqdoc.org/1.0\" href=\"../zorba/xqddf.html\">Zorba's XQuery Data Definition Facility</a>.\n All the collections managed by this module have to be pre-declared in the\n prolog of a module.\n Please refer to the\n <a xmlns:xqdoc=\"http://www.xqdoc.org/1.0\" href=\"../zorba/data_lifecycle.html\">general documentation</a>\n for more information and examples.\n", "sees" : [ "<xqdoc:see xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"><a href=\"../zorba/data_lifecycle.html\">Data Lifecycle</a></xqdoc:see>", "<xqdoc:see xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"><a href=\"../zorba/xqddf.html\">XQuery Data Definition Facility</a></xqdoc:see>", "<xqdoc:see xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">http://zorba.io/modules/store/static/collections/ddl</xqdoc:see>", "<xqdoc:see xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">http://zorba.io/modules/store/static/indexes/ddl</xqdoc:see>", "<xqdoc:see xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">http://zorba.io/modules/store/static/indexes/dml</xqdoc:see>", "<xqdoc:see xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">http://zorba.io/modules/store/static/integrity-constraints/ddl</xqdoc:see>", "<xqdoc:see xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">http://zorba.io/modules/store/static/integrity-constraints/dml</xqdoc:see>", "<xqdoc:see xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">http://zorba.io/errors</xqdoc:see>" ], "authors" : [ "<xqdoc:author xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">Nicolae Brinza, Matthias Brantner, David Graf, Till Westmann, Markos Zaharioudakis</xqdoc:author>" ], "version" : null, "encoding" : "utf-8", "namespaces" : [ { "uri" : "http://zorba.io/annotations", "prefix" : "an" }, { "uri" : "http://zorba.io/modules/store/static/collections/dml", "prefix" : "cdml" }, { "uri" : "http://zorba.io/options/versioning", "prefix" : "ver" }, { "uri" : "http://zorba.io/errors", "prefix" : "zerr" } ], "functions" : [ { "isDocumented" : true, "arity" : 3, "name" : "apply-insert-after", "qname" : "cdml:apply-insert-after", "signature" : "($name as xs:QName, $pos as item(), $content as item()*) as item()* external", "description" : " This function does the same thing as the <code xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">insert-after()</code>\n function except it immediately applies the resulting pending updates and\n returns the items that have been inserted.\n", "summary" : "<p> This function does the same thing as the  insert-after() \n function except it immediately applies the resulting pending updates and\n returns the items that have been inserted.</p>", "annotation_str" : " %an:sequential", "annotations" : [ { "prefix" : "an", "ns" : "http://zorba.io/annotations", "name" : "sequential", "value" : "" } ], "updating" : false, "parameters" : [ { "name" : "name", "type" : "xs:QName", "occurrence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> The name of the collection to insert into.</div>" }, { "name" : "pos", "type" : "item()", "occurrence" : null, "description" : "" }, { "name" : "content", "type" : "item()", "occurrence" : "*", "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> The sequence of items whose copies to insert.</div>" } ], "returns" : { "type" : "item()*", "description" : "The sequence of items that have been inserted." }, "errors" : [ "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">zerr:ZDDY0001 if the collection is not declared.</xqdoc:error>", "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">zerr:ZDDY0003 if the collection is not available.</xqdoc:error>", "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">zerr:ZDDY0006 if the collection is const, append-only, or queue.</xqdoc:error>", "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">zerr:ZDDY0012 if the collection is unordered.</xqdoc:error>", "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">zerr:ZDTY0001 if <code>$content</code> does not match the expected type as specified in the collection declaration according to the rules for SequenceType Matching.</xqdoc:error>", "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">zerr:ZDDY0011 if <code>$target</code> is not in the collection.</xqdoc:error>" ] }, { "isDocumented" : true, "arity" : 3, "name" : "apply-insert-before", "qname" : "cdml:apply-insert-before", "signature" : "($name as xs:QName, $target as item(), $content as item()*) as item()* external", "description" : " This function does the same thing as <code xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">insert-before()</code> except it\n immediately applies the resulting pending updates and returns the items that\n have been inserted.\n", "summary" : "<p> This function does the same thing as  insert-before()  except it\n immediately applies the resulting pending updates and returns the items that\n have been inserted.</p>", "annotation_str" : " %an:sequential", "annotations" : [ { "prefix" : "an", "ns" : "http://zorba.io/annotations", "name" : "sequential", "value" : "" } ], "updating" : false, "parameters" : [ { "name" : "name", "type" : "xs:QName", "occurrence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> The name of the collection to insert into.</div>" }, { "name" : "target", "type" : "item()", "occurrence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> The item in the collection before which <code>$content</code> will be inserted.</div>" }, { "name" : "content", "type" : "item()", "occurrence" : "*", "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> The sequence of items whose copies to insert.</div>" } ], "returns" : { "type" : "item()*", "description" : "The sequence of items that have been inserted." }, "errors" : [ "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">zerr:ZDDY0001 if the collection is not declared.</xqdoc:error>", "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">zerr:ZDDY0003 if the collection is not available.</xqdoc:error>", "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">zerr:ZDDY0006 if the collection $name is const, append-only, or queue.</xqdoc:error>", "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">zerr:ZDDY0012 if the collection is unordered.</xqdoc:error>", "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">zerr:ZDTY0001 if <code>$content</code> does not match the expected type as specified in the collection declaration according to the rules for SequenceType Matching.</xqdoc:error>", "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">zerr:ZDDY0011 if <code>$target</code> is not an item that is contained in the collection.</xqdoc:error>" ] }, { "isDocumented" : true, "arity" : 2, "name" : "apply-insert-first", "qname" : "cdml:apply-insert-first", "signature" : "($name as xs:QName, $content as item()*) as item()* external", "description" : " This function does the same thing as <code xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">insert-first()</code> except it\n immediately applies the resulting pending updates and returns the items that\n have been inserted.\n", "summary" : "<p> This function does the same thing as  insert-first()  except it\n immediately applies the resulting pending updates and returns the items that\n have been inserted.</p>", "annotation_str" : " %an:sequential", "annotations" : [ { "prefix" : "an", "ns" : "http://zorba.io/annotations", "name" : "sequential", "value" : "" } ], "updating" : false, "parameters" : [ { "name" : "name", "type" : "xs:QName", "occurrence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> The name of the collection to insert into.</div>" }, { "name" : "content", "type" : "item()", "occurrence" : "*", "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> The sequence of items whose copies to insert.</div>" } ], "returns" : { "type" : "item()*", "description" : "The Sequence of items that have been inserted." }, "errors" : [ "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">zerr:ZDDY0001 if the collection is not declared.</xqdoc:error>", "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">zerr:ZDDY0003 if the collection is not available.</xqdoc:error>", "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">zerr:ZDDY0006 if the collection $name is append-only, const, or queue.</xqdoc:error>", "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">zerr:ZDDY0012 if the collection is unordered.</xqdoc:error>", "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">zerr:ZDTY0001 if <code>$content</code> does not match the expected type as specified in the collection declaration according to the rules for SequenceType Matching.</xqdoc:error>" ] }, { "isDocumented" : true, "arity" : 2, "name" : "apply-insert-last", "qname" : "cdml:apply-insert-last", "signature" : "($name as xs:QName, $content as item()*) as item()* external", "description" : " This function does the same thing as <code xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">insert-last()</code> except it\n immediately applies the resulting pending updates and returns the items that\n have been inserted.\n", "summary" : "<p> This function does the same thing as  insert-last()  except it\n immediately applies the resulting pending updates and returns the items that\n have been inserted.</p>", "annotation_str" : " %an:sequential", "annotations" : [ { "prefix" : "an", "ns" : "http://zorba.io/annotations", "name" : "sequential", "value" : "" } ], "updating" : false, "parameters" : [ { "name" : "name", "type" : "xs:QName", "occurrence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> The name of the collection to insert into.</div>" }, { "name" : "content", "type" : "item()", "occurrence" : "*", "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> The sequence of items whose copies to insert.</div>" } ], "returns" : { "type" : "item()*", "description" : "The sequence of items that have been inserted." }, "errors" : [ "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">zerr:ZDDY0001 if the collection is not declared.</xqdoc:error>", "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">zerr:ZDDY0003 if the collection is not available.</xqdoc:error>", "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">zerr:ZDDY0006 if the collection is const.</xqdoc:error>", "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">zerr:ZDDY0012 if the collection is unordered.</xqdoc:error>", "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">zerr:ZDTY0001 if <code>$content</code> does not match the expected type as specified in the collection declaration according to the rules for SequenceType Matching.</xqdoc:error>" ] }, { "isDocumented" : true, "arity" : 2, "name" : "apply-insert", "qname" : "cdml:apply-insert", "signature" : "($name as xs:QName, $content as item()*) as item()* external", "description" : " This function does the same thing as <code xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">insert()</code> except it\n immediately applies the resulting pending updates and returns the items that\n have been inserted.\n", "summary" : "<p> This function does the same thing as  insert()  except it\n immediately applies the resulting pending updates and returns the items that\n have been inserted.</p>", "annotation_str" : " %an:sequential", "annotations" : [ { "prefix" : "an", "ns" : "http://zorba.io/annotations", "name" : "sequential", "value" : "" } ], "updating" : false, "parameters" : [ { "name" : "name", "type" : "xs:QName", "occurrence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> The name of the collection to insert into.</div>" }, { "name" : "content", "type" : "item()", "occurrence" : "*", "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> The sequence of items whose copies to insert.</div>" } ], "returns" : { "type" : "item()*", "description" : "The sequence of items that have been inserted." }, "errors" : [ "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">zerr:ZDDY0001 if the collection is not declared.</xqdoc:error>", "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">zerr:ZDDY0003 if the collection is not available.</xqdoc:error>", "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">zerr:ZDDY0006 if the collection is append-only, const, or queue.</xqdoc:error>", "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">zerr:ZDTY0001 if <code>$content</code> does not match the expected type as specified in the collection declaration according to the rules for SequenceType Matching.</xqdoc:error>" ] }, { "isDocumented" : true, "arity" : 1, "name" : "collection-name", "qname" : "cdml:collection-name", "signature" : "($item as item()) as xs:QName external", "description" : " Gets the name of the collection the given item (node or JSON item) belongs\n to.\n", "summary" : "<p> Gets the name of the collection the given item (node or JSON item) belongs\n to.</p>", "annotation_str" : "", "annotations" : [  ], "updating" : false, "parameters" : [ { "name" : "item", "type" : "item()", "occurrence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> The item for which to get the name of its collection.</div>" } ], "returns" : { "type" : "xs:QName", "description" : "The name of the collection to which the given item belongs." }, "errors" : [ "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">zerr:ZDDY0011 if <code>$item</code> does not belong to a collection.</xqdoc:error>" ] }, { "isDocumented" : true, "arity" : 1, "name" : "collection", "qname" : "cdml:collection", "signature" : "($name as xs:QName) as item()* external", "description" : " Gets the sequence of nodes or JSON items from a collection.\n", "summary" : "<p> Gets the sequence of nodes or JSON items from a collection.</p>", "annotation_str" : "", "annotations" : [  ], "updating" : false, "parameters" : [ { "name" : "name", "type" : "xs:QName", "occurrence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> The name of the collection.</div>" } ], "returns" : { "type" : "item()*", "description" : "The seqnence of items from the collection." }, "errors" : [ "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">zerr:ZDDY0001 if the collection is not declared.</xqdoc:error>", "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">zerr:ZDDY0003 if the collection is not available.</xqdoc:error>" ] }, { "isDocumented" : true, "arity" : 2, "name" : "collection", "qname" : "cdml:collection", "signature" : "($name as xs:QName, $skip as xs:integer) as item()* external", "description" : " Gets the sequence of nodes or JSON items from a collection.\n", "summary" : "<p> Gets the sequence of nodes or JSON items from a collection.</p>", "annotation_str" : "", "annotations" : [  ], "updating" : false, "parameters" : [ { "name" : "name", "type" : "xs:QName", "occurrence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> The name of the collection.</div>" }, { "name" : "skip", "type" : "xs:integer", "occurrence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> The initial number of items to skip.</div>" } ], "returns" : { "type" : "item()*", "description" : "The (sub)sequence of items from the collection." }, "errors" : [ "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">zerr:ZDDY0001 if the collection is not declared.</xqdoc:error>", "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">zerr:ZDDY0003 if the collection is not available.</xqdoc:error>" ] }, { "isDocumented" : true, "arity" : 3, "name" : "collection", "qname" : "cdml:collection", "signature" : "($name as xs:QName, $start as xs:anyURI, $skip as xs:integer) as item()* external", "description" : " Gets the sequence of items (nodes or JSON items) from a collection.\n The parameters <code xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">$start</code> and <code xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">$skip</code> can be used to\n skip over some items at the beginning of the collection.\n If both are given, both are applied:\n first <code xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">$start</code> to skip to the referenced item\n and then <code xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">$skip</code> to skip that additional number of items.\n", "summary" : "<p> Gets the sequence of items (nodes or JSON items) from a collection.</p>", "annotation_str" : "", "annotations" : [  ], "updating" : false, "parameters" : [ { "name" : "name", "type" : "xs:QName", "occurrence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> The name of the collection.</div>" }, { "name" : "start", "type" : "xs:anyURI", "occurrence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> The reference to the first item to return.</div>" }, { "name" : "skip", "type" : "xs:integer", "occurrence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> The number of additional items to skip.</div>" } ], "returns" : { "type" : "item()*", "description" : "The sub-sequence from the collection." }, "errors" : [ "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">zerr:ZAPI0028 If the given URI is not a valid node position computed by the <code>np:node-position</code> function.</xqdoc:error>", "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">zerr:ZDDY0001 if the collection is not declared.</xqdoc:error>", "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">zerr:ZDDY0003 if the collection is not available.</xqdoc:error>", "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">zerr:ZSTR0066 if <code>$start</code> does not reference a node from the collection.</xqdoc:error>" ] }, { "isDocumented" : true, "arity" : 1, "name" : "delete-first", "qname" : "cdml:delete-first", "signature" : "($name as xs:QName) external", "description" : " Deletes the first item from a collection.\n", "summary" : "<p> Deletes the first item from a collection.</p>", "annotation_str" : "", "annotations" : [  ], "updating" : true, "parameters" : [ { "name" : "name", "type" : "xs:QName", "occurrence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> The name of the collection to delete from.</div>" } ], "returns" : { "type" : null, "description" : "An empty XDM instance and a pending update list that, once applied, deletes the first item from the collection." }, "errors" : [ "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">zerr:ZDDY0001 if the collection is not declared.</xqdoc:error>", "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">zerr:ZDDY0003 if the collection is not available.</xqdoc:error>", "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">zerr:ZDDY0006 if the collection is const or append-only.</xqdoc:error>", "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">zerr:ZDDY0012 if the collection is unordered.</xqdoc:error>", "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">zerr:ZDDY0011 if the collection is empty.</xqdoc:error>" ] }, { "isDocumented" : true, "arity" : 2, "name" : "delete-first", "qname" : "cdml:delete-first", "signature" : "($name as xs:QName, $number as xs:integer) external", "description" : " Deletes the first <i xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">N</i> items from a collection.\n", "summary" : "<p> Deletes the first  N  items from a collection.</p>", "annotation_str" : "", "annotations" : [  ], "updating" : true, "parameters" : [ { "name" : "name", "type" : "xs:QName", "occurrence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> The name of the collection to delete from.</div>" }, { "name" : "number", "type" : "xs:integer", "occurrence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> The number of items to delete.</div>" } ], "returns" : { "type" : null, "description" : "An empty XDM instance and a pending update list that, once applied, deletes the items from the collection." }, "errors" : [ "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">zerr:ZDDY0001 if the collection is not declared.</xqdoc:error>", "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">zerr:ZDDY0003 if the collection is not available.</xqdoc:error>", "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">zerr:ZDDY0006 if the collection is const or append-only.</xqdoc:error>", "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">zerr:ZDDY0012 if the collection is unordered.</xqdoc:error>", "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">zerr:ZDDY0011 if the collection contains less than <code>$number</code> items.</xqdoc:error>" ] }, { "isDocumented" : true, "arity" : 1, "name" : "delete-last", "qname" : "cdml:delete-last", "signature" : "($name as xs:QName) external", "description" : " Deletes the last item from a collection.\n", "summary" : "<p> Deletes the last item from a collection.</p>", "annotation_str" : "", "annotations" : [  ], "updating" : true, "parameters" : [ { "name" : "name", "type" : "xs:QName", "occurrence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> The name of the collection to delete from.</div>" } ], "returns" : { "type" : null, "description" : "An empty XDM instance and a pending update list that, once applied, deletes the last item from the collection." }, "errors" : [ "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">zerr:ZDDY0001 if the collection is not declared.</xqdoc:error>", "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">zerr:ZDDY0003 if the collection is not available.</xqdoc:error>", "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">zerr:ZDDY0006 if the collection is const, append-only, or queue.</xqdoc:error>", "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">zerr:ZDDY0012 if the collection is unordered.</xqdoc:error>", "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">zerr:ZDDY0011 if the collection is empty.</xqdoc:error>" ] }, { "isDocumented" : true, "arity" : 2, "name" : "delete-last", "qname" : "cdml:delete-last", "signature" : "($name as xs:QName, $number as xs:integer) external", "description" : " Deletes the last <i xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">N</i> items from a collection.\n", "summary" : "<p> Deletes the last  N  items from a collection.</p>", "annotation_str" : "", "annotations" : [  ], "updating" : true, "parameters" : [ { "name" : "name", "type" : "xs:QName", "occurrence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> The name of the collection to delete from.</div>" }, { "name" : "number", "type" : "xs:integer", "occurrence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> The number of items to delete.</div>" } ], "returns" : { "type" : null, "description" : "An empty XDM instance and a pending update list that, once applied, deletes the items." }, "errors" : [ "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">zerr:ZDDY0001 if the collection is not declared.</xqdoc:error>", "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">zerr:ZDDY0003 if the collection is not available.</xqdoc:error>", "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">zerr:ZDDY0012 if the collection is unordered.</xqdoc:error>", "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">zerr:ZDDY0011 if the collection contains less than <code>$number</code> items.</xqdoc:error>" ] }, { "isDocumented" : true, "arity" : 1, "name" : "delete", "qname" : "cdml:delete", "signature" : "($items as item()*) external", "description" : " Deletes items (nodes or JSON items) from a collection.\n", "summary" : "<p> Deletes items (nodes or JSON items) from a collection.</p>", "annotation_str" : "", "annotations" : [  ], "updating" : true, "parameters" : [ { "name" : "items", "type" : "item()", "occurrence" : "*", "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> The items in the collection to delete.</div>" } ], "returns" : { "type" : null, "description" : "An empty XDM instance and a pending update list that, once applied, deletes the items from their collections." }, "errors" : [ "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">zerr:ZDDY0001 if the collection is not declared.</xqdoc:error>", "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">zerr:ZDDY0003 if the collection is not available.</xqdoc:error>", "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">zerr:ZDDY0006 if the collection is const, append-only, or queue.</xqdoc:error>", "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">zerr:ZDDY0011 if any item in <code>$items</code> is not a member of a collection or not all items belong to the same collection.</xqdoc:error>" ] }, { "isDocumented" : true, "arity" : 2, "name" : "edit", "qname" : "cdml:edit", "signature" : "($target as item(), $content as item()) external", "description" : " Edits the first supplied item so as to make it look exactly like a copy of\n the second supplied item while retaining its original identity.\n", "summary" : "<p> Edits the first supplied item so as to make it look exactly like a copy of\n the second supplied item while retaining its original identity.</p>", "annotation_str" : "", "annotations" : [  ], "updating" : true, "parameters" : [ { "name" : "target", "type" : "item()", "occurrence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> The target item to be edited.</div>" }, { "name" : "content", "type" : "item()", "occurrence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> The item that serves as an edit goal.</div>" } ], "returns" : { "type" : null, "description" : "An empty XDM instance and a pending update list that, once applied, performs the edit." }, "errors" : [ "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">zerr:ZDDY0001 if the collection to which <code>$target</code> belongs is not declared.</xqdoc:error>", "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">zerr:ZDDY0003 if the collection to which <code>$target</code> belongs is not available.</xqdoc:error>", "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">zerr:ZDDY0006 if the collection to which <code>$target</code> belongs is append-only, const, or queue.</xqdoc:error>", "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">zerr:ZDDY0017 if <code>$target</code> is not a member of a collection.</xqdoc:error>", "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">zerr:ZDDY0037 if the collection is append-only.</xqdoc:error>", "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">zerr:ZDDY0038 if the collection is a queue.</xqdoc:error>", "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">zerr:ZDDY0039 if <code>$target</code> is not a root.</xqdoc:error>", "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">zerr:ZDDY0040 if <code>$target</code> cannot be updated to match the content (for example, because the target is a node and the content is an object).</xqdoc:error>", "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">zerr:ZDTY0001 if <code>$content</code> does not match the expected type (as specified in the collection declaration) according to the rules for SequenceType Matching.</xqdoc:error>" ] }, { "isDocumented" : true, "arity" : 1, "name" : "index-of", "qname" : "cdml:index-of", "signature" : "($item as item()) as xs:integer external", "description" : " Gets the position of the given item (node or JSON item) within its\n collection.\n", "summary" : "<p> Gets the position of the given item (node or JSON item) within its\n collection.</p>", "annotation_str" : "", "annotations" : [  ], "updating" : false, "parameters" : [ { "name" : "item", "type" : "item()", "occurrence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> The item to get the index of.</div>" } ], "returns" : { "type" : "xs:integer", "description" : "The position of <code xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">$item</code> in its collection." }, "errors" : [ "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">zerr:ZDDY0011 if <code>$item</code> does not belong to a collection.</xqdoc:error>", "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">zerr:ZDDY0012 if the collection is unordered.</xqdoc:error>" ] }, { "isDocumented" : true, "arity" : 3, "name" : "insert-after", "qname" : "cdml:insert-after", "signature" : "($name as xs:QName, $target as item(), $content as item()*) external", "description" : " The insert-after function is an updating function that inserts copies of the\n given items (nodes or JSON items) into a collection at the position\n directly following the given target item.\n", "summary" : "<p> The insert-after function is an updating function that inserts copies of the\n given items (nodes or JSON items) into a collection at the position\n directly following the given target item.</p>", "annotation_str" : "", "annotations" : [  ], "updating" : true, "parameters" : [ { "name" : "name", "type" : "xs:QName", "occurrence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> The name of the collection to insert into.</div>" }, { "name" : "target", "type" : "item()", "occurrence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> The item in the collection after which <code>$content</code> will be inserted.</div>" }, { "name" : "content", "type" : "item()", "occurrence" : "*", "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> The sequence of items whose copies to insert.</div>" } ], "returns" : { "type" : null, "description" : "An empty XDM instance and a pending update list that, once applied, inserts the items into the collection." }, "errors" : [ "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">zerr:ZDDY0001 if the collection is not declared.</xqdoc:error>", "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">zerr:ZDDY0003 if the collection is not available.</xqdoc:error>", "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">zerr:ZDDY0006 if the collection is const, append-only, or queue.</xqdoc:error>", "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">zerr:ZDDY0012 if the collection is unordered.</xqdoc:error>", "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">zerr:ZDTY0001 if <code>$content</code> does not match the expected type as specified in the collection declaration according to the rules for SequenceType Matching.</xqdoc:error>", "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">zerr:ZDDY0011 if <code>$target</code> is not a node that is contained in the collection.</xqdoc:error>" ] }, { "isDocumented" : true, "arity" : 3, "name" : "insert-before", "qname" : "cdml:insert-before", "signature" : "($name as xs:QName, $target as item(), $content as item()*) external", "description" : " Inserts copies of the given items (nodes or JSON items) into a collection at\n the position directly preceding the given target item.\n", "summary" : "<p> Inserts copies of the given items (nodes or JSON items) into a collection at\n the position directly preceding the given target item.</p>", "annotation_str" : "", "annotations" : [  ], "updating" : true, "parameters" : [ { "name" : "name", "type" : "xs:QName", "occurrence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> The name of the collection to insert into.</div>" }, { "name" : "target", "type" : "item()", "occurrence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> The item in the collection before which <code>$content</code> will be inserted.</div>" }, { "name" : "content", "type" : "item()", "occurrence" : "*", "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> The sequence of items whose copies to insert.</div>" } ], "returns" : { "type" : null, "description" : "An empty XDM instance and a pending update list that, once applied, inserts the items into the collection." }, "errors" : [ "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">zerr:ZDDY0001 if the collection is not declared.</xqdoc:error>", "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">zerr:ZDDY0003 if the collection is not available.</xqdoc:error>", "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">zerr:ZDDY0006 if the collection is const, append-only, or queue.</xqdoc:error>", "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">zerr:ZDDY0012 if the collection is unordered.</xqdoc:error>", "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">zerr:ZDTY0001 if <code>$content</code> does not match the expected type as specified in the collection declaration according to the rules for SequenceType Matching.</xqdoc:error>", "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">zerr:ZDDY0011 if <code>$target</code> is not an item that is contained in the collection.</xqdoc:error>" ] }, { "isDocumented" : true, "arity" : 2, "name" : "insert-first", "qname" : "cdml:insert-first", "signature" : "($name as xs:QName, $content as item()*) external", "description" : " Inserts copies of the given items (nodes or JSON items) at the beginning of\n a collection.\n", "summary" : "<p> Inserts copies of the given items (nodes or JSON items) at the beginning of\n a collection.</p>", "annotation_str" : "", "annotations" : [  ], "updating" : true, "parameters" : [ { "name" : "name", "type" : "xs:QName", "occurrence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> The name of the collection to insert into.</div>" }, { "name" : "content", "type" : "item()", "occurrence" : "*", "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> The sequence of items whose copies to insert.</div>" } ], "returns" : { "type" : null, "description" : "An empty XDM instance and a pending update list that, once applied, inserts the items into the collection." }, "errors" : [ "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">zerr:ZDDY0001 if the collection is not declared.</xqdoc:error>", "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">zerr:ZDDY0003 if the collection is not available.</xqdoc:error>", "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">zerr:ZDDY0006 if the collection is append-only, const, or queue.</xqdoc:error>", "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">zerr:ZDDY0012 if the collection is unordered.</xqdoc:error>", "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">zerr:ZDTY0001 if <code>$content</code> does not match the expected type as specified in the collection declaration according to the rules for SequenceType Matching.</xqdoc:error>" ] }, { "isDocumented" : true, "arity" : 2, "name" : "insert-last", "qname" : "cdml:insert-last", "signature" : "($name as xs:QName, $content as item()*) external", "description" : " Inserts copies of the given items (nodes or JSON items) at the end of a\n collection.\n", "summary" : "<p> Inserts copies of the given items (nodes or JSON items) at the end of a\n collection.</p>", "annotation_str" : "", "annotations" : [  ], "updating" : true, "parameters" : [ { "name" : "name", "type" : "xs:QName", "occurrence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> The name of the collection to insert into.</div>" }, { "name" : "content", "type" : "item()", "occurrence" : "*", "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> The sequence of itemss whose copies to insert.</div>" } ], "returns" : { "type" : null, "description" : "An empty XDM instance and a pending update list that, once applied, inserts the items into the collection." }, "errors" : [ "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">zerr:ZDDY0001 if the collection is not declared.</xqdoc:error>", "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">zerr:ZDDY0003 if the collection is not available.</xqdoc:error>", "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">zerr:ZDDY0006 if the collection is const.</xqdoc:error>", "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">zerr:ZDDY0012 if the collection is unordered.</xqdoc:error>", "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">zerr:ZDTY0001 if <code>$content</code> does not match the expected type as specified in the collection declaration according to the rules for SequenceType Matching.</xqdoc:error>" ] }, { "isDocumented" : true, "arity" : 2, "name" : "insert", "qname" : "cdml:insert", "signature" : "($name as xs:QName, $content as item()*) external", "description" : " Inserts copies of the given items (nodes or JSON items) into a collection.\n Note that the insertion position of the items in the collection is not\n defined.\n", "summary" : "<p> Inserts copies of the given items (nodes or JSON items) into a collection.</p>", "annotation_str" : "", "annotations" : [  ], "updating" : true, "parameters" : [ { "name" : "name", "type" : "xs:QName", "occurrence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> The name of the collection to insert into.</div>" }, { "name" : "content", "type" : "item()", "occurrence" : "*", "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> The sequence of items whose copies to insert.</div>" } ], "returns" : { "type" : null, "description" : "An empty XDM instance and a pending update list that, once applied, inserts the items into the collection." }, "errors" : [ "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">zerr:ZDDY0001 if the collection is not declared.</xqdoc:error>", "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">zerr:ZDDY0003 if the collection is not available.</xqdoc:error>", "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">zerr:ZDDY0006 if the collection is append-only, const, or queue.</xqdoc:error>", "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">zerr:ZDTY0001 if <code>$content</code> does not match the expected type as specified in the collection declaration according to the rules for SequenceType Matching.</xqdoc:error>" ] }, { "isDocumented" : true, "arity" : 1, "name" : "truncate", "qname" : "cdml:truncate", "signature" : "($name as xs:QName) external", "description" : " Deletes the entire contents of collection.\n Please note that applying this function can not be undone in case\n an error happens during the application of the containing PUL.\n", "summary" : "<p> Deletes the entire contents of collection.</p>", "annotation_str" : "", "annotations" : [  ], "updating" : true, "parameters" : [ { "name" : "name", "type" : "xs:QName", "occurrence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> The name of the collection whose content to delete.</div>" } ], "returns" : { "type" : null, "description" : "An empty XDM instance and a pending update list that, once applied, deletes the nodes." }, "errors" : [ "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">zerr:ZDDY0001 if the collection is not declared.</xqdoc:error>", "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">zerr:ZDDY0003 if the collection is not available.</xqdoc:error>" ] } ], "variables" : [  ] }, "http://www.28msec.com/modules/http-request" : { "ns" : "http://www.28msec.com/modules/http-request", "description" : " The request module provides functions for accessing\n information contained in the HTTP request used to evaluate the current\n query. For example, the <tt xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">param-names</tt> function can be used to\n retrieve all the names of the parameters contained in a request.\n", "sees" : [  ], "authors" : [ "<xqdoc:author xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">Matthias Brantner</xqdoc:author>" ], "version" : null, "encoding" : "utf-8", "namespaces" : [ { "uri" : "http://www.w3.org/2005/xqt-errors", "prefix" : "err" }, { "uri" : "http://www.28msec.com/modules/http/request#2.0", "prefix" : "req" }, { "uri" : "http://www.28msec.com/modules/http-request", "prefix" : "request" }, { "uri" : "http://zorba.io/options/versioning", "prefix" : "ver" } ], "functions" : [ { "isDocumented" : true, "arity" : 0, "name" : "binary-content", "qname" : "request:binary-content", "signature" : "() as xs:base64Binary", "description" : " <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">Returns the content of the request as base64Binary.</p>\n", "summary" : "<p>  Returns the content of the request as base64Binary.</p>", "annotation_str" : "", "annotations" : [  ], "updating" : false, "parameters" : [  ], "returns" : { "type" : "xs:base64Binary", "description" : "The content of the request as base64Binary." }, "errors" : [ "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">request:no-binary-content if the content contained in the body of the request cannot be treated as binary because it is a request with multipart or url-encoded content.</xqdoc:error>" ] }, { "isDocumented" : true, "arity" : 1, "name" : "binary-part", "qname" : "request:binary-part", "signature" : "($ref as xs:string) as xs:base64Binary", "description" : " <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">Returns the value of a part as base64Binary.</p>\n <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">A part is identified by a reference that is the value of a\n <tt>src</tt> field returned by the <tt>request:parts</tt> function.</p>\n", "summary" : "<p>  Returns the value of a part as base64Binary.</p>", "annotation_str" : "", "annotations" : [  ], "updating" : false, "parameters" : [ { "name" : "ref", "type" : "xs:string", "occurrence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> the name of the part</div>" } ], "returns" : { "type" : "xs:base64Binary", "description" : "the value of the part as base64Binary" }, "errors" : [ "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">request:invalid-part if the part with the given name ($ref) does not exist</xqdoc:error>", "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">request:non-multipart if the current request does not contain multipart content</xqdoc:error>", "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">request:invalid-multipart if the multipart content is invalid (e.g. the boundary is missing)</xqdoc:error>" ] }, { "isDocumented" : true, "arity" : 0, "name" : "content-length", "qname" : "request:content-length", "signature" : "() as xs:integer?", "description" : " <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">Returns the length of the content in bytes.</p>\n <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">The value returned corresponds to the value of the HTTP\n content-length header. The function returns an empty sequence\n if this header does not exist in the request or its value\n could not be converted to item of type xs:integer</p>.\n", "summary" : "<p>  Returns the length of the content in bytes.</p>", "annotation_str" : "", "annotations" : [  ], "updating" : false, "parameters" : [  ], "returns" : { "type" : "xs:integer?", "description" : "The content-length in bytes of the content sent with this request or the empty sequence if the content-length header does not exist in the request." }, "errors" : [  ] }, { "isDocumented" : true, "arity" : 0, "name" : "content-type", "qname" : "request:content-type", "signature" : "() as xs:string?", "description" : " <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">Returns the content-type of the data sent with this request.</p>\n <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">Note that the content-type is only set for PUT and POST requests.</p>\n", "summary" : "<p>  Returns the content-type of the data sent with this request.</p>", "annotation_str" : "", "annotations" : [  ], "updating" : false, "parameters" : [  ], "returns" : { "type" : "xs:string?", "description" : "The content-type of the request if it is a PUT or POST request. Otherwise, it returns the empty sequence." }, "errors" : [  ] }, { "isDocumented" : true, "arity" : 0, "name" : "header-accept", "qname" : "request:header-accept", "signature" : "() as object()*", "description" : " <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">Returns the values of the HTTP ACCEPT header.</p>\n <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">The data is returned as a sequence of objects\n as shown in the following example.</p>\n <pre xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">\n {\n   \"type\" : \"text\",\n   \"subtype\" : \"html\",\n   \"quality\" : 1\n }\n </pre>\n", "summary" : "<p>  Returns the values of the HTTP ACCEPT header.</p>", "annotation_str" : "", "annotations" : [  ], "updating" : false, "parameters" : [  ], "returns" : { "type" : "object()*", "description" : "The header values of the header ACCEPT or the empty sequence if the header is not contained in the request. The order of the returned objects reflects the order of the components in the header." }, "errors" : [ "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">request:invalid-header if the accept header cannot be parsed</xqdoc:error>" ] }, { "isDocumented" : true, "arity" : 0, "name" : "header-names", "qname" : "request:header-names", "signature" : "() as xs:string*", "description" : " <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">Returns the names of all the HTTP headers in this request.</p>\n <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">Header fields are colon-separated name-value pairs, terminated\n by a carriage return (CR) and line feed (LF) character sequence. The\n names and values of each header are allowed to consist of US-ASCII\n characters only.</p>\n <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">The names of the headers are returned using upper-case letters.\n If a header with the same name is contained multiple times in a request,\n its name is only returned once. The order of the names in the resulting\n sequence does not reflect the order of the headers in the request. If\n a header does not have a value, it is as if the header does not exist\n in the request.</p>\n <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">Note that the header names user-agent and content-type are not\n returned by this function. They are returned by the corresponding\n functions of this module module\n (e.g. <a href=\"#user-agent-0\">user-agent</a>).</p>\n", "summary" : "<p>  Returns the names of all the HTTP headers in this request.</p>", "annotation_str" : "", "annotations" : [  ], "updating" : false, "parameters" : [  ], "returns" : { "type" : "xs:string*", "description" : "The names of the headers of this request or the empty sequence if no headers are contained in the request." }, "errors" : [  ] }, { "isDocumented" : true, "arity" : 1, "name" : "header-value", "qname" : "request:header-value", "signature" : "($name as xs:string) as xs:string?", "description" : " <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">Returns the value of the HTTP header with the given name.</p>\n <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">Header fields are colon-separated name-value pairs, terminated\n by a carriage return (CR) and line feed (LF) character sequence. The\n names and values of each header are allowed to consist of US-ASCII\n characters only.</p>\n <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">Please note that header names are considered case-insensitive.\n Also note, that only one value is returned if multiple headers with the\n same names exist in the request. This value is a comma-separated list\n of the values of the headers in the order in which the headers appeared\n in the request.</p>\n <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">All headers having a name that starts with SAUSALITO_ are reserved\n and will not be returned by this function.</p>\n", "summary" : "<p>  Returns the value of the HTTP header with the given name.</p>", "annotation_str" : "", "annotations" : [  ], "updating" : false, "parameters" : [ { "name" : "name", "type" : "xs:string", "occurrence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> The header name for which the value should be returned.</div>" } ], "returns" : { "type" : "xs:string?", "description" : "The header value of the header with the <tt xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">$name</tt> argument or the empty sequence if no header with that name is contained in the request." }, "errors" : [  ] }, { "isDocumented" : true, "arity" : 0, "name" : "headers", "qname" : "request:headers", "signature" : "() as object()", "description" : " <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">Returns an object containing the request's HTTP header names and\n values.</p>\n <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">Header fields are colon-separated name-value pairs, terminated\n by a carriage return (CR) and line feed (LF) character sequence. The\n names and values of each header are allowed to consist of US-ASCII\n characters only.</p>\n <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">The structure of the object is as shown in the following example:\n <pre>\n </pre>\n </p>\n <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">All headers having a name that starts with SAUSALITO_ are reserved\n and will not be returned by this function.</p>\n", "summary" : "<p>  Returns an object containing the request's HTTP header names and\n values.</p>", "annotation_str" : "", "annotations" : [  ], "updating" : false, "parameters" : [  ], "returns" : { "type" : "object()", "description" : "The header value of the header with the <tt xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">$name</tt> argument or the empty sequence if no header with that name is contained in the request." }, "errors" : [  ] }, { "isDocumented" : true, "arity" : 0, "name" : "method-delete", "qname" : "request:method-delete", "signature" : "() as xs:boolean", "description" : " Returns true if the HTTP method of this request is DELETE.\n", "summary" : "<p> Returns true if the HTTP method of this request is DELETE.</p>", "annotation_str" : "", "annotations" : [  ], "updating" : false, "parameters" : [  ], "returns" : { "type" : "xs:boolean", "description" : "true if the HTTP method of this request is DELETE, false otherwise." }, "errors" : [  ] }, { "isDocumented" : true, "arity" : 0, "name" : "method-get", "qname" : "request:method-get", "signature" : "() as xs:boolean", "description" : " Returns true if the HTTP method of this request is GET.\n", "summary" : "<p> Returns true if the HTTP method of this request is GET.</p>", "annotation_str" : "", "annotations" : [  ], "updating" : false, "parameters" : [  ], "returns" : { "type" : "xs:boolean", "description" : "true if the HTTP method of this request is GET, false otherwise." }, "errors" : [  ] }, { "isDocumented" : true, "arity" : 0, "name" : "method-head", "qname" : "request:method-head", "signature" : "() as xs:boolean", "description" : " Returns true if the HTTP method of this request is HEAD.\n", "summary" : "<p> Returns true if the HTTP method of this request is HEAD.</p>", "annotation_str" : "", "annotations" : [  ], "updating" : false, "parameters" : [  ], "returns" : { "type" : "xs:boolean", "description" : "true if the HTTP method of this request is HEAD, false otherwise." }, "errors" : [  ] }, { "isDocumented" : true, "arity" : 0, "name" : "method-options", "qname" : "request:method-options", "signature" : "() as xs:boolean", "description" : " Returns true if the HTTP method of this request is OPTION.\n", "summary" : "<p> Returns true if the HTTP method of this request is OPTION.</p>", "annotation_str" : "", "annotations" : [  ], "updating" : false, "parameters" : [  ], "returns" : { "type" : "xs:boolean", "description" : "true if the HTTP method of this request is OPTION, false otherwise." }, "errors" : [  ] }, { "isDocumented" : true, "arity" : 0, "name" : "method-post", "qname" : "request:method-post", "signature" : "() as xs:boolean", "description" : " Returns true if the HTTP method of this request is POST.\n", "summary" : "<p> Returns true if the HTTP method of this request is POST.</p>", "annotation_str" : "", "annotations" : [  ], "updating" : false, "parameters" : [  ], "returns" : { "type" : "xs:boolean", "description" : "true if the HTTP method of this request is POST, false otherwise." }, "errors" : [  ] }, { "isDocumented" : true, "arity" : 0, "name" : "method-put", "qname" : "request:method-put", "signature" : "() as xs:boolean", "description" : " Returns true if the HTTP method of this request is PUT.\n", "summary" : "<p> Returns true if the HTTP method of this request is PUT.</p>", "annotation_str" : "", "annotations" : [  ], "updating" : false, "parameters" : [  ], "returns" : { "type" : "xs:boolean", "description" : "true if the HTTP method of this request is PUT, false otherwise." }, "errors" : [  ] }, { "isDocumented" : true, "arity" : 0, "name" : "method", "qname" : "request:method", "signature" : "() as xs:string", "description" : " <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">Returns the name of the HTTP method used to make this request.</p>\n", "summary" : "<p>  Returns the name of the HTTP method used to make this request.</p>", "annotation_str" : "", "annotations" : [  ], "updating" : false, "parameters" : [  ], "returns" : { "type" : "xs:string", "description" : "The request method used to make this request (i.e. GET, POST, PUT, DELETE or HEAD)." }, "errors" : [  ] }, { "isDocumented" : true, "arity" : 0, "name" : "param-names", "qname" : "request:param-names", "signature" : "() as xs:string*", "description" : " <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">Returns the names of the parameters contained in the current request.</p>\n <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">Parameters are name-value pairs contained in the query string of the URL\n used to make this request. As defined in RFC 1738, the query string of a\n URL starts with a \"?\" character and ends with the character (if any).\n Additionally, such name-value pairs may be part of the request's body if\n it is a PUT or POST request and the content-type of the request is\n \"application/x-www-form-urlencoded\". Name-value pairs are separated\n using either the \"&amp;\" or the \";\" character.</p>\n <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">In general, the names and the values  are precent-encoded. This function\n does the decoding of the parameters, i.e. it returns the values being\n not percent-encoded.</p>\n <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">Also, the names of each parameter (after being precent-decoded) are\n treated as UTF-8. Please see the <tt>http:param-names#1</tt> function\n for retrieving parameter names submitted using a encoding other than UTF-8.\n </p>\n", "summary" : "<p>  Returns the names of the parameters contained in the current request.</p>", "annotation_str" : "", "annotations" : [  ], "updating" : false, "parameters" : [  ], "returns" : { "type" : "xs:string*", "description" : "The names of all parameters in this request. The empty sequence is returned if there are none." }, "errors" : [  ] }, { "isDocumented" : true, "arity" : 1, "name" : "param-names", "qname" : "request:param-names", "signature" : "($encoding as xs:string) as xs:string*", "description" : " <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">Returns the names of the parameters contained in the current request.</p>\n <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">This function is similar to the <tt>request:param-names#0</tt> function.\n However, the names are treated (after precent-decoding) using the\n given encoding supplied as parameter. For example, parameters might\n be encoded using the ISO-8859-1 encoding.</p>\n", "summary" : "<p>  Returns the names of the parameters contained in the current request.</p>", "annotation_str" : "", "annotations" : [  ], "updating" : false, "parameters" : [ { "name" : "encoding", "type" : "xs:string", "occurrence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> The encoding of the parameters in the request (e.g. ISO-8859-1).</div>" } ], "returns" : { "type" : "xs:string*", "description" : "The names of all parameters in this request. The empty sequence is returned if there are none." }, "errors" : [ "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">request:invalid-encoding if the given encoding is invalid or not supported.</xqdoc:error>" ] }, { "isDocumented" : true, "arity" : 1, "name" : "param-values", "qname" : "request:param-values", "signature" : "($name as xs:string) as xs:string*", "description" : " <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">Returns a sequence of parameter values for the given parameter name\n which are contained in the URL's query string or the body of a POST or PUT\n request.</p>\n <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">Parameters are name-value pairs contained in the query string of the URL\n used to make this request. As defined in RFC 1738, the query string of a\n URL starts with a \"?\" character and ends with the character (if any).\n Additionally, such name-value pairs may be part of the request's body if\n it is a PUT or POST request and the content-type of the request is\n \"application/x-www-form-urlencoded\". Name-value pairs are separated\n using either the \"&amp;\" or the \";\" character.</p>\n <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">In general, the names and the values  are precent-encoded. This function\n does the decoding of the parameters, i.e. it returns the values being\n not percent-encoded.</p>\n <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">Also, the names and the values of each parameter (after being precent-decoded)\n are treated as UTF-8. Please see the <tt>http:param-values#3</tt> function\n for retrieving parameters submitted using a encoding other than UTF-8.</p>\n <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">This function returns the empty-sequence if no parameter with the\n given name exists in this request. If you want the function to return\n a default value other than the empty sequence, use the\n <tt>http:param-values#2</tt> function.</p>\n <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">A URL could contain the following query string:\n <tt>name1=value1&amp;name2=value2;name1=value3&amp;name3</tt>.\n <tt>name1=value1&amp;name2=value2&amp;name1=value3&amp;name3</tt>.\n The name value pairs in this query string are\n <ul>\n   <li> name: <tt>name1</tt>; values: <tt>value1</tt> and <tt>value3</tt></li>\n   <li> name: <tt>name2</tt>; value: <tt>value2</tt></li>\n   <li> name: <tt>name3</tt>; value: <tt/></li>\n </ul>\n </p>\n", "summary" : "<p>  Returns a sequence of parameter values for the given parameter name\n which are contained in the URL's query string or the body of a POST or PUT\n request.</p>", "annotation_str" : "", "annotations" : [  ], "updating" : false, "parameters" : [ { "name" : "name", "type" : "xs:string", "occurrence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> The name of the parameter whose value(s) should be returned.</div>" } ], "returns" : { "type" : "xs:string*", "description" : "A sequence of values for the parameter with the given name. The empty sequence is returned if no parameter exists with the given name." }, "errors" : [  ] }, { "isDocumented" : true, "arity" : 2, "name" : "param-values", "qname" : "request:param-values", "signature" : "($name as xs:string, $default-values as xs:string*) as xs:string*", "description" : " <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">Returns a sequence of parameter values for the given parameter name\n which are contained in the URL's query string or the body of a POST or PUT\n request.</p>\n <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">This function is similar to the <tt>request:param-values#1</tt> function.\n However, instead of returning the empty-sequence as a default value it returns\n the given default-values sequence if no parameter with the given name is found\n in this request.</p>\n", "summary" : "<p>  Returns a sequence of parameter values for the given parameter name\n which are contained in the URL's query string or the body of a POST or PUT\n request.</p>", "annotation_str" : "", "annotations" : [  ], "updating" : false, "parameters" : [ { "name" : "name", "type" : "xs:string", "occurrence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> The name of the parameter whose value(s) should be returned.</div>" }, { "name" : "default-values", "type" : "xs:string", "occurrence" : "*", "description" : "" } ], "returns" : { "type" : "xs:string*", "description" : "A sequence of values for the parameter with the given name. The sequence given as $default-values parameter is returned if no parameter exists with the given name." }, "errors" : [  ] }, { "isDocumented" : true, "arity" : 3, "name" : "param-values", "qname" : "request:param-values", "signature" : "($name as xs:string, $default-values as xs:string*, $encoding as xs:string) as xs:string*", "description" : " <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">Returns a sequence of parameter values for the given parameter name\n which are contained in the URL's query string or the body of a POST or PUT\n request.</p>\n <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">This function is similar to the <tt>request:param-values#2</tt> function.\n However, the names and values are treated (after precent-decoding) using the\n given encoding supplied as third parameter. For example, parameters might\n be encoded using the ISO-8859-1 encoding.</p>\n", "summary" : "<p>  Returns a sequence of parameter values for the given parameter name\n which are contained in the URL's query string or the body of a POST or PUT\n request.</p>", "annotation_str" : "", "annotations" : [  ], "updating" : false, "parameters" : [ { "name" : "name", "type" : "xs:string", "occurrence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> The name of the parameter whose value(s) should be returned.</div>" }, { "name" : "default-values", "type" : "xs:string", "occurrence" : "*", "description" : "" }, { "name" : "encoding", "type" : "xs:string", "occurrence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> The encoding of the parameters in the request (e.g. ISO-8859-1)</div>" } ], "returns" : { "type" : "xs:string*", "description" : "A sequence of values for the parameter with the given name. The sequence given as $default-values parameter is returned if no parameter exists with the given name." }, "errors" : [ "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">request:invalid-encoding if the given encoding is invalid or not supported.</xqdoc:error>" ] }, { "isDocumented" : true, "arity" : 0, "name" : "params", "qname" : "request:params", "signature" : "() as object()", "description" : " <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">Returns an object containg the parameter names and values contained\n in the URL's query string or the body of a POST or PUT\n request.</p>\n <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">The structure of the object for the query string\n \"param1=value1;param2&amp;param2=value2\"\n <pre>\n {\n   \"param1\" : \"value1\",\n   \"param2\" : [ \"\", \"value2\" ]\n }\n </pre>\n </p>\n <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">Parameters are name-value pairs contained in the query string of the URL\n used to make this request. As defined in RFC 1738, the query string of a\n URL starts with a \"?\" character and ends with the character (if any).\n Additionally, such name-value pairs may be part of the request's body if\n it is a PUT or POST request and the content-type of the request is\n \"application/x-www-form-urlencoded\". Name-value pairs are separated\n using either the \"&amp;\" or the \";\" character.</p>\n <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">In general, the names and the values  are precent-encoded. This function\n does the decoding of the parameters, i.e. it returns the values being\n not percent-encoded.</p>\n <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">Also, the names and the values of each parameter (after being precent-decoded)\n are treated as UTF-8. Please see the <tt>http:params#1</tt> function\n for retrieving parameters submitted using a encoding other than UTF-8.</p>\n", "summary" : "<p>  Returns an object containg the parameter names and values contained\n in the URL's query string or the body of a POST or PUT\n request.</p>", "annotation_str" : "", "annotations" : [  ], "updating" : false, "parameters" : [  ], "returns" : { "type" : "object()", "description" : "An object containing all the parameter names and values. An empty object is returned if the request doesn't contain any parameters." }, "errors" : [  ] }, { "isDocumented" : true, "arity" : 1, "name" : "params", "qname" : "request:params", "signature" : "($encoding as xs:string) as object()", "description" : " <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">Returns an object containg the parameter names and values contained\n in the URL's query string or the body of a POST or PUT\n request.</p>\n <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">The structure of the object for the query string\n \"param1=value1;param2&amp;param2=value2\"\n <pre>\n {\n   \"param1\" : \"value1\",\n   \"param2\" : [ \"\", \"value2\" ]\n }\n </pre>\n </p>\n <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">Parameters are name-value pairs contained in the query string of the URL\n used to make this request. As defined in RFC 1738, the query string of a\n URL starts with a \"?\" character and ends with the character (if any).\n Additionally, such name-value pairs may be part of the request's body if\n it is a PUT or POST request and the content-type of the request is\n \"application/x-www-form-urlencoded\". Name-value pairs are separated\n using either the \"&amp;\" or the \";\" character.</p>\n <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">In general, the names and the values  are precent-encoded. This function\n does the decoding of the parameters, i.e. it returns the values being\n not percent-encoded.</p>\n <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">The name and value of each parameter (after being percent-decoded) are treated\n in the encoding given by the <tt>$encoding</tt> paramter.</p>\n", "summary" : "<p>  Returns an object containg the parameter names and values contained\n in the URL's query string or the body of a POST or PUT\n request.</p>", "annotation_str" : "", "annotations" : [  ], "updating" : false, "parameters" : [ { "name" : "encoding", "type" : "xs:string", "occurrence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> The encoding of the parameters in the request (e.g. ISO-8859-1)</div>" } ], "returns" : { "type" : "object()", "description" : "An object containing all the parameter names and values. An empty object is returned if the request doesn't contain any parameters." }, "errors" : [ "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">request:invalid-encoding if the given encoding is invalid or not supported.</xqdoc:error>" ] }, { "isDocumented" : true, "arity" : 0, "name" : "parts", "qname" : "request:parts", "signature" : "() as object()?", "description" : " <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">Returns the metadata of all parts contained in a multipart request.</p>\n <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">The metadata is returned as an object\n as shown in the following example.</p>\n <pre xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">\n {\n   \"media-type\" : \"multipart/form-data; boundary=----------------------------93298e7a66a4\",\n   \"parts\" : [ {\n     \"headers\" : {\n       \"Content-Disposition\" : \"form-data; name=\\\"upload\\\"; filename=\\\"tmp.txt\\\"\",\n       \"Content-Type\" : \"text/plain\"\n     },\n     \"filename\" : \"tmp.txt\",\n     \"name\" : \"upload\",\n     \"src\" : \"urn:uuid:09be48d1-da0e-42c1-a115-a697e1779c45\",\n     \"size\" : \"153\"\n   }, {\n     \"headers\" : {\n       \"Content-Disposition\" : \"form-data; name=\\\"press\\\"\"\n     },\n     \"name\" : \"press\",\n     \"src\" : \"urn:uuid:c80e0609-b703-4d47-9171-441eb397a562\",\n     \"size\" : \"2\"\n   } ]\n }\n </pre>\n <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">The <tt>media-type</tt> field describes the content-type as given in the\n request. Specifically, its value is equal to the value returned by\n <tt>request:header-values(\"Content-Type\")</tt>).</p>\n <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">Each of the array members of the <tt>parts</tt> field represents one\n part of the multipart request. Each such part contains a header field\n containing one field for each headers belonging to that part.\n The value of the <tt>src</tt> field can be used to retrieve the actual value\n of the part by passing it to the <tt>http:text-part</tt> or\n <tt>http:binary-part</tt> functions. The remaining fields represent a\n parameter of the Content-Disposition header as described in RFC 2183\n (e.g. filename, name, creation-date).</p>\n <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">Please note that recursive multipart content is not supported.</p>\n", "summary" : "<p>  Returns the metadata of all parts contained in a multipart request.</p>", "annotation_str" : "", "annotations" : [  ], "updating" : false, "parameters" : [  ], "returns" : { "type" : "object()?", "description" : "an object representing the metadata of the multipart content or an empty sequence if there is no content." }, "errors" : [ "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">request:non-multipart if the current request does not contain multipart content</xqdoc:error>", "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">request:invalid-multipart if the multipart content is invalid (e.g. the boundary is missing)</xqdoc:error>" ] }, { "isDocumented" : true, "arity" : 0, "name" : "path", "qname" : "request:path", "signature" : "() as xs:string", "description" : " Return the path component of the request URI. The path starts after the\n host and ends before the query string starts.\n", "summary" : "<p> Return the path component of the request URI.</p>", "annotation_str" : "", "annotations" : [  ], "updating" : false, "parameters" : [  ], "returns" : { "type" : "xs:string", "description" : "The path component of the request URI" }, "errors" : [  ] }, { "isDocumented" : true, "arity" : 0, "name" : "query", "qname" : "request:query", "signature" : "() as xs:string", "description" : " <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">Returns the query string that was used to make this request.</p>\n <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">The query string contains the part of the request URL that\n starts with the '?' character to the end or the starting of the\n fragment (i.e. the '#' character).</p>\n", "summary" : "<p>  Returns the query string that was used to make this request.</p>", "annotation_str" : "", "annotations" : [  ], "updating" : false, "parameters" : [  ], "returns" : { "type" : "xs:string", "description" : "The query string part of the request's URL" }, "errors" : [  ] }, { "isDocumented" : true, "arity" : 0, "name" : "remote-addr", "qname" : "request:remote-addr", "signature" : "() as xs:string", "description" : " <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">Returns the IP address of the client to which this request\n is connected.</p>\n", "summary" : "<p>  Returns the IP address of the client to which this request\n is connected.</p>", "annotation_str" : "", "annotations" : [  ], "updating" : false, "parameters" : [  ], "returns" : { "type" : "xs:string", "description" : "The IP address on the client side to which this request is connected." }, "errors" : [  ] }, { "isDocumented" : true, "arity" : 0, "name" : "remote-port", "qname" : "request:remote-port", "signature" : "() as xs:int", "description" : " <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">Returns the port of the client to which this request is connected.</p>\n", "summary" : "<p>  Returns the port of the client to which this request is connected.</p>", "annotation_str" : "", "annotations" : [  ], "updating" : false, "parameters" : [  ], "returns" : { "type" : "xs:int", "description" : "The port on the client side to which this request is connected." }, "errors" : [  ] }, { "isDocumented" : true, "arity" : 0, "name" : "server-name", "qname" : "request:server-name", "signature" : "() as xs:string", "description" : " <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">Returns the server name of the server running the application.</p>\n <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">The web server's hostname or IP address.</p>\n", "summary" : "<p>  Returns the server name of the server running the application.</p>", "annotation_str" : "", "annotations" : [  ], "updating" : false, "parameters" : [  ], "returns" : { "type" : "xs:string", "description" : "The name of the server that runs the application accepting this request." }, "errors" : [  ] }, { "isDocumented" : true, "arity" : 0, "name" : "server-port", "qname" : "request:server-port", "signature" : "() as xs:int", "description" : " <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">Returns the sever port to which the client making the current request\n is connected.</p>\n", "summary" : "<p>  Returns the sever port to which the client making the current request\n is connected.</p>", "annotation_str" : "", "annotations" : [  ], "updating" : false, "parameters" : [  ], "returns" : { "type" : "xs:int", "description" : "The server port to which the client is connected." }, "errors" : [  ] }, { "isDocumented" : true, "arity" : 0, "name" : "text-content", "qname" : "request:text-content", "signature" : "() as xs:string", "description" : " <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">Returns the content of the request as string.</p>\n <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">The function returns the content of the request only\n if the content-type refers to a type that can be treated\n as text (e.g. text/* or application/xml). The function raises\n an error if the content cannot be treated as text.</p>\n <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">The text content is interpreted using the encoding/charset\n that is specified in the Content-Type header of the request. If\n no charset is specified, the default ISO-8859-1 is used. If a encoding\n other than the specified or default one should be used, the\n <tt>request:text-content#1</tt> function should be used.</p>\n", "summary" : "<p>  Returns the content of the request as string.</p>", "annotation_str" : "", "annotations" : [  ], "updating" : false, "parameters" : [  ], "returns" : { "type" : "xs:string", "description" : "The content of the request as a string." }, "errors" : [ "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">request:invalid-encoding if the encoding specified in the Content-Type header is invalid or not supported.</xqdoc:error>", "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">request:no-text-content if the content contained in the body of the request cannot be treated as text.</xqdoc:error>" ] }, { "isDocumented" : true, "arity" : 1, "name" : "text-content", "qname" : "request:text-content", "signature" : "($overwrite-encoding as xs:string) as xs:string", "description" : " <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">Returns the content of the request as string interpreting\n it with the given encoding.</p>\n <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">The function returns the content of the request only\n if the content-type refers to a type that can be treated\n as text (e.g. text/* or application/xml). The function raises\n an error if the content cannot be treated as text.</p>\n <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">The text content is interpreted using the given encoding/charset.\n That is, the charset specified in the Content-Type header of the request\n is ignored. An error is raised if the given encoding is invalid\n or not supported.</p>\n", "summary" : "<p>  Returns the content of the request as string interpreting\n it with the given encoding.</p>", "annotation_str" : "", "annotations" : [  ], "updating" : false, "parameters" : [ { "name" : "overwrite-encoding", "type" : "xs:string", "occurrence" : null, "description" : "" } ], "returns" : { "type" : "xs:string", "description" : "The content of the request as a string." }, "errors" : [ "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">request:invalid-encoding if the encoding specified in the Content-Type header or the $overwrite-encoding parameter is invalid or not supported.</xqdoc:error>", "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">request:no-text-content if the content contained in the body of the request cannot be treated as text.</xqdoc:error>" ] }, { "isDocumented" : true, "arity" : 1, "name" : "text-part", "qname" : "request:text-part", "signature" : "($ref as xs:string) as xs:string", "description" : " <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">Returns the value of a part as string</p>\n <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">A part is identified by a reference that is the value of a\n <tt>src</tt> field returned by the <tt>request:parts</tt> function.</p>\n <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">The value of the text part is interpreted using the encoding/charset\n given in the headers of the part. If no encoding is given, the default\n US-ASCII is assumed.</p>\n", "summary" : "<p>  Returns the value of a part as string \n  A part is identified by a reference that is the value of a\n  src  field returned by the  request:parts  function.</p>", "annotation_str" : "", "annotations" : [  ], "updating" : false, "parameters" : [ { "name" : "ref", "type" : "xs:string", "occurrence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> the name of the part</div>" } ], "returns" : { "type" : "xs:string", "description" : "the value of the part as string" }, "errors" : [ "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">request:invalid-encoding if the encoding given in the headers of the part is invalid or not supported.</xqdoc:error>", "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">request:no-text-content if the value of the part cannot be treated as text</xqdoc:error>", "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">request:invalid-part if the part with the given name ($ref) does not exist</xqdoc:error>", "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">request:non-multipart if the current request does not contain multipart content</xqdoc:error>", "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">request:invalid-multipart if the multipart content is invalid (e.g. the boundary is missing)</xqdoc:error>" ] }, { "isDocumented" : true, "arity" : 2, "name" : "text-part", "qname" : "request:text-part", "signature" : "($ref as xs:string, $overwrite-encoding as xs:string) as xs:string", "description" : " <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">Returns the value of a part as string interpreting\n it with the given encoding.</p>\n <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">A part is identified by a reference that is the value of a\n <tt>src</tt> field returned by the <tt>request:parts</tt> function.</p>\n", "summary" : "<p>  Returns the value of a part as string interpreting\n it with the given encoding.</p>", "annotation_str" : "", "annotations" : [  ], "updating" : false, "parameters" : [ { "name" : "ref", "type" : "xs:string", "occurrence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> the name of the part</div>" }, { "name" : "overwrite-encoding", "type" : "xs:string", "occurrence" : null, "description" : "" } ], "returns" : { "type" : "xs:string", "description" : "the value of the part as string" }, "errors" : [ "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">request:invalid-encoding if the encoding given using the $overwrite-encoding parameter is invalid or not supported.</xqdoc:error>", "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">request:no-text-content if the value of the part cannot be treated as text</xqdoc:error>", "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">request:invalid-part if the part with the given name ($ref) does not exist</xqdoc:error>", "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">request:non-multipart if the current request does not contain multipart content</xqdoc:error>", "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">request:invalid-multipart if the multipart content is invalid (e.g. the boundary is missing)</xqdoc:error>" ] }, { "isDocumented" : true, "arity" : 0, "name" : "uri", "qname" : "request:uri", "signature" : "() as xs:string", "description" : " <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">Returns the URI that was used to make this request.</p>\n <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">The value returned contains the part of the URL starting\n from the path to the end or the starting of the fragment (i.e.\n the '#' character).</p>\n", "summary" : "<p>  Returns the URI that was used to make this request.</p>", "annotation_str" : "", "annotations" : [  ], "updating" : false, "parameters" : [  ], "returns" : { "type" : "xs:string", "description" : "The path and query string part of the request's URL" }, "errors" : [  ] }, { "isDocumented" : true, "arity" : 0, "name" : "user-agent", "qname" : "request:user-agent", "signature" : "() as xs:string?", "description" : " <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">Returns the user agent that made to perform the current request.</p>\n <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">This function returns the value of the User-Agent header\n contained in the current request.</p>\n", "summary" : "<p>  Returns the user agent that made to perform the current request.</p>", "annotation_str" : "", "annotations" : [  ], "updating" : false, "parameters" : [  ], "returns" : { "type" : "xs:string?", "description" : "The user agent used to perform this request of the empty sequence if there was no User-Agent header in the request." }, "errors" : [  ] } ], "variables" : [  ] }, "http://www.28msec.com/modules/physical-reference" : { "ns" : "http://www.28msec.com/modules/physical-reference", "description" : " The module provides functions to compute an immutable and opaque reference\n for nodes, objects, or arrays and to retrieve such items given their\n identifier, respectively.\n The identifiers are immutable, i.e. a identifier does not change\n during the items lifetime and cannot be reused for another item after the\n original item gets deleted.\n Identifiers are unique, in that, two different items will never have the same\n identifier. A item, at any time during its lifetime, can be retrieved by its\n identifier. Identifiers can only be computed for items stored in a MongoDB\n collection.\n <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">Please see the <a href=\"../../html/data_lifecycle.html\">data lifecycle\n documentation</a> about details on storing items.</p>\n", "sees" : [ "<xqdoc:see xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"><a href=\"../../html/data_lifecycle.html\">Data Lifecycle</a></xqdoc:see>" ], "authors" : [ "<xqdoc:author xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">Federico Cavalieri</xqdoc:author>" ], "version" : null, "encoding" : "utf-8", "namespaces" : [ { "uri" : "http://www.28msec.com/modules/physical-reference", "prefix" : "ref" }, { "uri" : "http://zorba.io/options/versioning", "prefix" : "ver" } ], "functions" : [ { "isDocumented" : true, "arity" : 1, "name" : "dereference", "qname" : "ref:dereference", "signature" : "($arg as object()) as item()? external", "description" : " <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">Returns the node, object, or array identified by the given reference.</p>\n <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">The function returns the empty sequence if the item\n that is referenced does not exist.</p>\n", "summary" : "<p>  Returns the node, object, or array identified by the given reference.</p>", "annotation_str" : "", "annotations" : [  ], "updating" : false, "parameters" : [ { "name" : "arg", "type" : "object()", "occurrence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> the identifier of the item to retrieve.</div>" } ], "returns" : { "type" : "item()?", "description" : "the item identified by the identifier passed as parameter or the empty-sequence if no item with that URI is found." }, "errors" : [ "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">ref::REFERENCE is if the given identifier is invalid.</xqdoc:error>" ] }, { "isDocumented" : true, "arity" : 1, "name" : "reference", "qname" : "ref:reference", "signature" : "($arg as item()) as object() external", "description" : " <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">Returns an immutable and opaque reference (with type xs:anyURI) for\n a given node, object, or array.</p>\n <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">The generated identifier is immutable, i.e. a identifier does not\n change during the item's lifetime and cannot be reused for another node after\n the original item gets deleted.</p>\n <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">Identifiers are also unique, in that, two different items will never\n have the same identifier.</p>\n A item, at any time during its lifetime, can be retrieved by its\n identifier, using the <tt xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">ref:dereference</tt> function.\n Please note that a reference can only be retrieved for a JSON object or JSON\n array if the item is a member of a collection.\n", "summary" : "<p>  Returns an immutable and opaque reference (with type xs:anyURI) for\n a given node, object, or array.</p>", "annotation_str" : "", "annotations" : [  ], "updating" : false, "parameters" : [ { "name" : "arg", "type" : "item()", "occurrence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> the node, object, or array for which the URI should be computed</div>" } ], "returns" : { "type" : "object()", "description" : "the opaque URI of the item." }, "errors" : [ "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">ref::COLLECTION is raised if the object or array passed as argument is not a member of a collection.</xqdoc:error>" ] } ], "variables" : [  ] }, "http://zorba.io/modules/data-cleaning/conversion" : { "ns" : "http://zorba.io/modules/data-cleaning/conversion", "description" : " <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">This library module provides data conversion functions for processing calendar dates,\n temporal values, currency values, units of measurement, location names and postal addresses.</p>\n <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"/>\n <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">The logic contained in this module is not specific to any particular XQuery implementation.</p>\n", "sees" : [  ], "authors" : [ "<xqdoc:author xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">Bruno Martins and Diogo Simões</xqdoc:author>" ], "version" : null, "encoding" : "utf-8", "namespaces" : [ { "uri" : "http://zorba.io/annotations", "prefix" : "an" }, { "uri" : "http://zorba.io/modules/data-cleaning/conversion", "prefix" : "conversion" }, { "uri" : "http://www.ecb.int/vocabulary/2002-08-01/eurofxref", "prefix" : "exref" }, { "uri" : "http://www.zorba-xquery.com/modules/http-client", "prefix" : "http" }, { "uri" : "http://zorba.io/modules/reflection", "prefix" : "reflection" }, { "uri" : "http://zorba.io/options/versioning", "prefix" : "ver" }, { "uri" : "http://api.whitepages.com/schema/", "prefix" : "wp" } ], "functions" : [ { "isDocumented" : true, "arity" : 1, "name" : "address-from-domain", "qname" : "conversion:address-from-domain", "signature" : "($domain as xs:string) as xs:string*", "description" : " <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">Uses a whois service to discover information about a given domain name, returning a sequence of strings\n for the addresses associated to the name.</p>\n", "summary" : "<p>  Uses a whois service to discover information about a given domain name, returning a sequence of strings\n for the addresses associated to the name.</p>", "annotation_str" : "", "annotations" : [  ], "updating" : false, "parameters" : [ { "name" : "domain", "type" : "xs:string", "occurrence" : null, "description" : "" } ], "returns" : { "type" : "xs:string*", "description" : "A sequence of strings for the addresses associated to the domain name. <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"><b> Attention : This function is still not implemented. </b></p>" }, "errors" : [  ] }, { "isDocumented" : true, "arity" : 2, "name" : "address-from-geocode", "qname" : "conversion:address-from-geocode", "signature" : "($lat as xs:double, $lon as xs:double) as xs:string*", "description" : " <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">Geospatial coordinates to placename converter, acting as a wrapper over the Yahoo! reverse geocoder service.</p>\n", "summary" : "<p>  Geospatial coordinates to placename converter, acting as a wrapper over the Yahoo! reverse geocoder service.</p>", "annotation_str" : " %an:nondeterministic", "annotations" : [ { "prefix" : "an", "ns" : "http://zorba.io/annotations", "name" : "nondeterministic", "value" : "" } ], "updating" : false, "parameters" : [ { "name" : "lat", "type" : "xs:double", "occurrence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> Geospatial latitude.</div>" }, { "name" : "lon", "type" : "xs:double", "occurrence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> Geospatial longitude.</div>" } ], "returns" : { "type" : "xs:string*", "description" : "The sequence of strings corresponding to the different components (e.g., street, city, country, etc.) of the place name that corresponds to the input geospatial coordinates." }, "errors" : [  ] }, { "isDocumented" : true, "arity" : 1, "name" : "address-from-phone", "qname" : "conversion:address-from-phone", "signature" : "($phone-number as xs:string) as xs:string*", "description" : " <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">Uses a White-pages Web service to discover information about a given phone number,\n returning a string for the address associated to the phone number.</p>\n", "summary" : "<p>  Uses a White-pages Web service to discover information about a given phone number,\n returning a string for the address associated to the phone number.</p>", "annotation_str" : " %an:nondeterministic", "annotations" : [ { "prefix" : "an", "ns" : "http://zorba.io/annotations", "name" : "nondeterministic", "value" : "" } ], "updating" : false, "parameters" : [ { "name" : "phone-number", "type" : "xs:string", "occurrence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> A string with 10 digits corresponding to the phone number.</div>" } ], "returns" : { "type" : "xs:string*", "description" : "A string for the addresses associated to the phone number." }, "errors" : [  ] }, { "isDocumented" : true, "arity" : 1, "name" : "address-from-user", "qname" : "conversion:address-from-user", "signature" : "($name as xs:string) as xs:string*", "description" : " <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">Uses a White-pages Web service to discover information about a given name,\n returning a sequence of strings for the addresses associated to the name.</p>\n", "summary" : "<p>  Uses a White-pages Web service to discover information about a given name,\n returning a sequence of strings for the addresses associated to the name.</p>", "annotation_str" : " %an:nondeterministic", "annotations" : [ { "prefix" : "an", "ns" : "http://zorba.io/annotations", "name" : "nondeterministic", "value" : "" } ], "updating" : false, "parameters" : [ { "name" : "name", "type" : "xs:string", "occurrence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> The name of person or organization.</div>" } ], "returns" : { "type" : "xs:string*", "description" : "A sequence of strings for the addresses associated to the name." }, "errors" : [  ] }, { "isDocumented" : true, "arity" : 4, "name" : "currency-convert", "qname" : "conversion:currency-convert", "signature" : "($v as xs:double, $m1 as xs:string, $m2 as xs:string, $date as xs:string) as xs:double", "description" : " <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">Currency conversion function, acting as a wrapper over the WebService from the European Central Bank.</p>\n <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"/>\n <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">WebService documentation at <a src=\"http://www.ecb.int/stats/exchange/eurofxref/html/index.en.html\">http://www.ecb.int/stats/exchange/eurofxref/html/index.en.html</a></p>\n", "summary" : "<p>  Currency conversion function, acting as a wrapper over the WebService from the European Central Bank.</p>", "annotation_str" : " %an:nondeterministic", "annotations" : [ { "prefix" : "an", "ns" : "http://zorba.io/annotations", "name" : "nondeterministic", "value" : "" } ], "updating" : false, "parameters" : [ { "name" : "v", "type" : "xs:double", "occurrence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> The amount we wish to convert.</div>" }, { "name" : "m1", "type" : "xs:string", "occurrence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> The source currency (e.g., \"EUR\").</div>" }, { "name" : "m2", "type" : "xs:string", "occurrence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> The target currency (e.g., \"USD\").</div>" }, { "name" : "date", "type" : "xs:string", "occurrence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> The reference date.</div>" } ], "returns" : { "type" : "xs:double", "description" : "The value resulting from the conversion." }, "errors" : [ "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">conversion:NOTSUPPORTED if the date, the source currency type or the target currency type are not known to the service.</xqdoc:error>" ] }, { "isDocumented" : true, "arity" : 1, "name" : "geocode-from-address", "qname" : "conversion:geocode-from-address", "signature" : "($q as xs:string*) as xs:double*", "description" : " <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">Placename to geospatial coordinates converter, acting as a wrapper over the Yahoo! geocoder service.</p>\n", "summary" : "<p>  Placename to geospatial coordinates converter, acting as a wrapper over the Yahoo! geocoder service.</p>", "annotation_str" : " %an:nondeterministic", "annotations" : [ { "prefix" : "an", "ns" : "http://zorba.io/annotations", "name" : "nondeterministic", "value" : "" } ], "updating" : false, "parameters" : [ { "name" : "q", "type" : "xs:string", "occurrence" : "*", "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> A sequence of strings corresponding to the different components (e.g., street, city, country, etc.) of the place name.</div>" } ], "returns" : { "type" : "xs:double*", "description" : "The pair of latitude and longitude coordinates associated with the input address." }, "errors" : [  ] }, { "isDocumented" : true, "arity" : 1, "name" : "name-from-domain", "qname" : "conversion:name-from-domain", "signature" : "($domain as xs:string) as xs:string*", "description" : " <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">Uses a whois service to discover information about a given domain name, returning a sequence of strings\n for the person or organization names associated to the name.</p>\n", "summary" : "<p>  Uses a whois service to discover information about a given domain name, returning a sequence of strings\n for the person or organization names associated to the name.</p>", "annotation_str" : "", "annotations" : [  ], "updating" : false, "parameters" : [ { "name" : "domain", "type" : "xs:string", "occurrence" : null, "description" : "" } ], "returns" : { "type" : "xs:string*", "description" : "A sequence of strings for the person or organization names associated to the domain name. <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"><b> Attention : This function is still not implemented. </b></p>" }, "errors" : [  ] }, { "isDocumented" : true, "arity" : 1, "name" : "phone-from-address", "qname" : "conversion:phone-from-address", "signature" : "($address as xs:string) as xs:string*", "description" : " <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">Uses a White-pages Web service to discover information about a given address,\n returning a sequence of strings for the phone number associated to the address.</p>\n", "summary" : "<p>  Uses a White-pages Web service to discover information about a given address,\n returning a sequence of strings for the phone number associated to the address.</p>", "annotation_str" : " %an:nondeterministic", "annotations" : [ { "prefix" : "an", "ns" : "http://zorba.io/annotations", "name" : "nondeterministic", "value" : "" } ], "updating" : false, "parameters" : [ { "name" : "address", "type" : "xs:string", "occurrence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> A string corresponding to the address (ex: 5655 E Gaskill Rd, Willcox, AZ, US).</div>" } ], "returns" : { "type" : "xs:string*", "description" : "A sequence of strings for the phone number or organization's names associated to the address." }, "errors" : [  ] }, { "isDocumented" : true, "arity" : 1, "name" : "phone-from-domain", "qname" : "conversion:phone-from-domain", "signature" : "($domain as xs:string) as xs:string*", "description" : " <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">Uses a whois service to discover information about a given domain name, returning a sequence of strings\n for the phone numbers associated to the name.</p>\n", "summary" : "<p>  Uses a whois service to discover information about a given domain name, returning a sequence of strings\n for the phone numbers associated to the name.</p>", "annotation_str" : "", "annotations" : [  ], "updating" : false, "parameters" : [ { "name" : "domain", "type" : "xs:string", "occurrence" : null, "description" : "" } ], "returns" : { "type" : "xs:string*", "description" : "A sequence of strings for the phone numbers associated to the domain name. <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"><b> Attention : This function is still not implemented. </b></p>" }, "errors" : [  ] }, { "isDocumented" : true, "arity" : 1, "name" : "phone-from-user", "qname" : "conversion:phone-from-user", "signature" : "($name as xs:string) as xs:string*", "description" : " <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">Uses a White-pages Web service to discover information about a given name,\n returning a sequence of strings for the phone numbers associated to the name.</p>\n", "summary" : "<p>  Uses a White-pages Web service to discover information about a given name,\n returning a sequence of strings for the phone numbers associated to the name.</p>", "annotation_str" : " %an:nondeterministic", "annotations" : [ { "prefix" : "an", "ns" : "http://zorba.io/annotations", "name" : "nondeterministic", "value" : "" } ], "updating" : false, "parameters" : [ { "name" : "name", "type" : "xs:string", "occurrence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> The name of person or organization.</div>" } ], "returns" : { "type" : "xs:string*", "description" : "A sequence of strings for the phone numbers associated to the name." }, "errors" : [  ] }, { "isDocumented" : true, "arity" : 4, "name" : "unit-convert", "qname" : "conversion:unit-convert", "signature" : "($v as xs:double, $t as xs:string, $m1 as xs:string, $m2 as xs:string) as xs:double", "description" : " <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">Conversion function for units of measurement, acting as a wrapper over the CuppaIT WebService.</p>\n", "summary" : "<p>  Conversion function for units of measurement, acting as a wrapper over the CuppaIT WebService.</p>", "annotation_str" : " %an:nondeterministic", "annotations" : [ { "prefix" : "an", "ns" : "http://zorba.io/annotations", "name" : "nondeterministic", "value" : "" } ], "updating" : false, "parameters" : [ { "name" : "v", "type" : "xs:double", "occurrence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> The amount we wish to convert.</div>" }, { "name" : "t", "type" : "xs:string", "occurrence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> The type of metric (e.g., \"Distance\")</div>" }, { "name" : "m1", "type" : "xs:string", "occurrence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> The source measurement unit metric (e.g., \"meter\")</div>" }, { "name" : "m2", "type" : "xs:string", "occurrence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> The target measurement unit metric (e.g., \"mile\")</div>" } ], "returns" : { "type" : "xs:double", "description" : "The value resulting from the conversion" }, "errors" : [  ] }, { "isDocumented" : true, "arity" : 1, "name" : "user-from-address", "qname" : "conversion:user-from-address", "signature" : "($address as xs:string) as xs:string*", "description" : " <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">Uses a White-pages Web service to discover information about a given address,\n returning a sequence of strings for the names associated to the address.</p>\n", "summary" : "<p>  Uses a White-pages Web service to discover information about a given address,\n returning a sequence of strings for the names associated to the address.</p>", "annotation_str" : " %an:nondeterministic", "annotations" : [ { "prefix" : "an", "ns" : "http://zorba.io/annotations", "name" : "nondeterministic", "value" : "" } ], "updating" : false, "parameters" : [ { "name" : "address", "type" : "xs:string", "occurrence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> A string corresponding to the address (ex: 5655 E Gaskill Rd, Willcox, AZ, US).</div>" } ], "returns" : { "type" : "xs:string*", "description" : "A sequence of strings for the person or organization's names associated to the address." }, "errors" : [  ] }, { "isDocumented" : true, "arity" : 1, "name" : "user-from-phone", "qname" : "conversion:user-from-phone", "signature" : "($phone-number as xs:string) as xs:string*", "description" : " <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">Uses a White-pages Web service to discover information about a given phone number,\n returning a sequence of strings for the name associated to the phone number.</p>\n", "summary" : "<p>  Uses a White-pages Web service to discover information about a given phone number,\n returning a sequence of strings for the name associated to the phone number.</p>", "annotation_str" : " %an:nondeterministic", "annotations" : [ { "prefix" : "an", "ns" : "http://zorba.io/annotations", "name" : "nondeterministic", "value" : "" } ], "updating" : false, "parameters" : [ { "name" : "phone-number", "type" : "xs:string", "occurrence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> A string with 10 digits corresponding to the phone number.</div>" } ], "returns" : { "type" : "xs:string*", "description" : "A sequence of strings for the person or organization's name associated to the phone number." }, "errors" : [  ] } ], "variables" : [ { "name" : "conversion:key", "type" : "item()*", "description" : " <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">The key to be used when accessing the White Pages Web service</p>\n" } ] }, "http://www.28msec.com/modules/jdbc" : { "ns" : "http://www.28msec.com/modules/jdbc", "description" : " This module allows connecting, querying, and updating JDBC datasources.\n <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">The results of a query are returned as a sequence of objects:\n <code> { column: value } </code>.\n The type of the value depends on the type of the column in the database:\n <table class=\"table table-bordered\">\n   <tr><th>JDBC Types</th><th>JSONiq Type</th></tr>\n   <tr><td>integer, bigint, smallint, tinyint</td><td>integer</td></tr>\n   <tr><td>decimal, double, float, numeric, real</td><td>double</td></tr>\n   <tr><td>boolean, bit</td><td>boolean</td></tr>\n   <tr><td>char, blob, longvarchar, longnvarchar, nchar, nclob, nvarchar,\n  varchar, sqlxml, date, time, timestamp</td><td>string</td></tr>\n   <tr><td>binary, blob, longvarbinary, varbinary, array, datalink,\n  java_object, other, ref</td><td>base64Binary</td></tr>\n </table>\n </p>\n <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">\n If the value of a column is null, it is mapped to the JSONiq null value.\n </p>\n <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">Connecting to a JDBC source requires the following options:\n <ul>\n   <li><tt>url</tt>: the JDBC connection URI (mandatory)</li>\n   <li><tt>user</tt>: the user used for connecting (optional)</li>\n   <li><tt>password</tt>: the password used for connecting (optional)</li>\n </ul></p>\n <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">Examples:\n <ul>\n  <li><pre>\n {\n   \"url\" : \"jdbc:mysql://localhost/testdb\",\n   \"user\" : \"root\",\n   \"password\" : \"\"\n }</pre></li>\n  <li><pre>\n {\n   \"url\" : \"jdbc:sqlserver://192.168.1.1;databaseName=testdb\",\n   \"user\" : \"sa\",\n   \"password\" : \"\"\n }</pre></li>\n  <li><pre>\n {\n   \"url\" : \"jdbc:postgresql://localhost/testdb\",\n   \"user\" : \"root\",\n   \"password\" : \"\"\n }</pre></li>\n </ul></p>\n <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">Currently, the 28.io platform supports connections to\n <ul>\n   <li>MySQL using the mariadb-java-client.jar version 1.1.2,</li>\n   <li>PostgreSQL using postgresql.jar version 9.2, and </li>\n   <li>Microsoft SQL Server using sqljdbc4.jar version 4.0.</li>\n </ul>\n </p>\n <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">If you are interested in connecting to other JDBC datasources,\n please contact us at support@28.io.</p>\n <h2 xmlns:xqdoc=\"http://www.xqdoc.org/1.0\" id=\"determinism\">Important Notice Regarding Function Determinism</h2>\n <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">The non side-effecting functions:\n <ul>\n   <li><a href=\"?anchor=connect-0\">connect#0</a></li>\n   <li><a href=\"?anchor=connect-1\">connect#1</a></li>\n   <li><a href=\"?anchor=connect-2\">connect#2</a></li>\n   <li><a href=\"?anchor=execute-query-2\">execute-query#2</a></li>\n   <li><a href=\"?anchor=execute-query-prepared-1\">execute-query-prepared#1</a></li>\n   <li><a href=\"?anchor=tables-1\">tables#1</a></li>\n   <li><a href=\"?anchor=tables-4\">tables#4</a></li>\n </ul>\n are declared deterministic, which means that their results could be cached\n when invoked multiple times with the same arguments in the same query execution.</p>\n <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">To not use cached results you can use the following alternative functions:\n <ul>\n   <li><a href=\"?anchor=connect-notdeterministic-0\">connect-notdeterministic#0</a></li>\n   <li><a href=\"?anchor=connect-notdeterministic-1\">connect-notdeterministic#1</a></li>\n   <li><a href=\"?anchor=connect-notdeterministic-2\">connect-notdeterministic#2</a></li>\n   <li><a href=\"?anchor=execute-query-notdeterministic-2\">execute-query-notdeterministic#2</a></li>\n   <li><a href=\"?anchor=execute-query-prepared-notdeterministic-1\">execute-query-prepared-notdeterministic#1</a></li>\n   <li><a href=\"?anchor=tables-notdeterministic-1\">tables-notdeterministic#1</a></li>\n   <li><a href=\"?anchor=tables-notdeterministic-4\">tables-notdeterministic#4</a></li>\n </ul>\n which have been declared as being non deterministic.</p>\n", "sees" : [  ], "authors" : [ "<xqdoc:author xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">Cristi Dumitru</xqdoc:author>", "<xqdoc:author xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">Federico Cavalieri</xqdoc:author>" ], "version" : null, "encoding" : "utf-8", "namespaces" : [ { "uri" : "http://zorba.io/annotations", "prefix" : "an" }, { "uri" : "http://www.28msec.com/modules/credentials", "prefix" : "credentials" }, { "uri" : "http://www.28msec.com/modules/jdbc", "prefix" : "jdbc" }, { "uri" : "http://zorba.io/options/versioning", "prefix" : "ver" }, { "uri" : "http://www.zorba-xquery.com/modules/jdbc", "prefix" : "zjdbc" } ], "functions" : [ { "isDocumented" : true, "arity" : 1, "name" : "affected-rows", "qname" : "jdbc:affected-rows", "signature" : "($dataset as anyURI) as integer", "description" : " Return the number of affected rows of an updating DataSet.\n", "summary" : "<p> Return the number of affected rows of an updating DataSet.</p>", "annotation_str" : "", "annotations" : [  ], "updating" : false, "parameters" : [ { "name" : "dataset", "type" : "anyURI", "occurrence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> The identifier of the DataSet.</div>" } ], "returns" : { "type" : "integer", "description" : "the number of affected rows." }, "errors" : [ "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">SQL008 DataSet doesn't exist.</xqdoc:error>", "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">SQL08000 Connection is closed.</xqdoc:error>", "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">SQL001 Descriptive error, see error in attached message.</xqdoc:error>" ] }, { "isDocumented" : true, "arity" : 1, "name" : "clear-params", "qname" : "jdbc:clear-params", "signature" : "($prepared-statement as anyURI) as empty-sequence()", "description" : " Clear all the parameters of the statement.\n", "summary" : "<p> Clear all the parameters of the statement.</p>", "annotation_str" : " %an:sequential", "annotations" : [ { "prefix" : "an", "ns" : "http://zorba.io/annotations", "name" : "sequential", "value" : "" } ], "updating" : false, "parameters" : [ { "name" : "prepared-statement", "type" : "anyURI", "occurrence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> The identifier of the prepared statement.</div>" } ], "returns" : { "type" : "empty-sequence()", "description" : "an empty-sequence()" }, "errors" : [ "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">SQL003 Prepared statement doesn't exist.</xqdoc:error>", "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">SQL08000 Connection is closed.</xqdoc:error>", "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">SQL001 Descriptive error, see error in attached message.</xqdoc:error>" ] }, { "isDocumented" : true, "arity" : 1, "name" : "commit", "qname" : "jdbc:commit", "signature" : "($conn as anyURI) as empty-sequence()", "description" : " Commit current transaction from an active connection.\n", "summary" : "<p> Commit current transaction from an active connection.</p>", "annotation_str" : " %an:sequential", "annotations" : [ { "prefix" : "an", "ns" : "http://zorba.io/annotations", "name" : "sequential", "value" : "" } ], "updating" : false, "parameters" : [ { "name" : "conn", "type" : "anyURI", "occurrence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> The identifier of the connection with a transaction to be commited.</div>" } ], "returns" : { "type" : "empty-sequence()", "description" : "an empty-sequence()" }, "errors" : [ "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">SQL08003 Connection doesn't exist</xqdoc:error>", "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">SQL08000 Connection is closed</xqdoc:error>", "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">SQL001 Descriptive error, see error in attached message</xqdoc:error>" ] }, { "isDocumented" : true, "arity" : 0, "name" : "connect-nondeterministic", "qname" : "jdbc:connect-nondeterministic", "signature" : "() as anyURI", "description" : " Open a connection to a database using the default credentials.\n <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">This function has the same semantics as\n <a href=\"#connect-0\">connect#0</a>,\n but is declared as being non deterministic and thus should only be used when\n result caching is not desired.</p>\n", "summary" : "<p> Open a connection to a database using the default credentials.</p>", "annotation_str" : " %an:nondeterministic", "annotations" : [ { "prefix" : "an", "ns" : "http://zorba.io/annotations", "name" : "nondeterministic", "value" : "" } ], "updating" : false, "parameters" : [  ], "returns" : { "type" : "anyURI", "description" : "an identifier that represents the connection to the server." }, "errors" : [ "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">NOT-FOUND The default credentials not found.</xqdoc:error>", "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">SQL28000 Authentication failed.</xqdoc:error>", "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">SQL08001 Connection error.</xqdoc:error>", "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">SQL40003 Isolation level not supported.</xqdoc:error>", "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">SQL001 Descriptive error, see attached message.</xqdoc:error>" ] }, { "isDocumented" : true, "arity" : 1, "name" : "connect-nondeterministic", "qname" : "jdbc:connect-nondeterministic", "signature" : "($connection-config as item()) as anyURI", "description" : " Open a connection to a database.\n <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">This function has the same semantics as\n <a href=\"#connect-1\">connect#1</a>,\n but is declared as being non deterministic and thus should only be used when\n result caching is not desired.</p>\n", "summary" : "<p> Open a connection to a database.</p>", "annotation_str" : " %an:nondeterministic", "annotations" : [ { "prefix" : "an", "ns" : "http://zorba.io/annotations", "name" : "nondeterministic", "value" : "" } ], "updating" : false, "parameters" : [ { "name" : "connection-config", "type" : "item()", "occurrence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> object containing the configuration information.</div>" } ], "returns" : { "type" : "anyURI", "description" : "an identifier that represents the connection to the server." }, "errors" : [ "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">NOT-FOUND The specified credentials have not been found.</xqdoc:error>", "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">NOT-VALID Invalid connection information.</xqdoc:error>", "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">SQL28000 Authentication failed.</xqdoc:error>", "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">SQL08001 Connection error.</xqdoc:error>", "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">SQL40003 Isolation level not supported.</xqdoc:error>", "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">SQL001 Descriptive error, see attached message.</xqdoc:error>" ] }, { "isDocumented" : true, "arity" : 2, "name" : "connect-nondeterministic", "qname" : "jdbc:connect-nondeterministic", "signature" : "($connection-config as item(), $options as object()?) as anyURI", "description" : " Open a connection to a database.\n <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">This function has the same semantics as\n <a href=\"#connect-2\">connect#2</a>,\n but is declared as being non deterministic and thus should only be used when\n result caching is not desired.</p>\n", "summary" : "<p> Open a connection to a database.</p>", "annotation_str" : " %an:nondeterministic", "annotations" : [ { "prefix" : "an", "ns" : "http://zorba.io/annotations", "name" : "nondeterministic", "value" : "" } ], "updating" : false, "parameters" : [ { "name" : "connection-config", "type" : "item()", "occurrence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> object containing the configuration information.</div>" }, { "name" : "options", "type" : "object()", "occurrence" : "?", "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> object to specify additional connection options.</div>" } ], "returns" : { "type" : "anyURI", "description" : "an identifier that represents the connection to the server." }, "errors" : [ "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">NOT-FOUND The specified credentials have not been found.</xqdoc:error>", "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">NOT-VALID Invalid connection information.</xqdoc:error>", "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">SQL28000 Authentication failed.</xqdoc:error>", "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">SQL08001 Connection error.</xqdoc:error>", "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">SQL40003 Isolation level not supported.</xqdoc:error>", "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">SQL001 Descriptive error, see error in attached message.</xqdoc:error>" ] }, { "isDocumented" : true, "arity" : 0, "name" : "connect", "qname" : "jdbc:connect", "signature" : "() as anyURI", "description" : " Open a connection to a database using the default credentials.\n <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">This function is declared as deterministic and should be used whenever result\n caching is acceptable.</p>\n <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">The function returns an opaque URI that can represents the connection.\n This URI has to be passed to other functions of this module that require\n the <tt>$conn</tt> parameter as a first argument.</p>\n", "summary" : "<p> Open a connection to a database using the default credentials.</p>", "annotation_str" : "", "annotations" : [  ], "updating" : false, "parameters" : [  ], "returns" : { "type" : "anyURI", "description" : "an identifier that represents the connection to the server." }, "errors" : [ "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">NOT-FOUND The default credentials not found.</xqdoc:error>", "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">SQL28000 Authentication failed.</xqdoc:error>", "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">SQL08001 Connection error.</xqdoc:error>", "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">SQL40003 Isolation level not supported.</xqdoc:error>", "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">SQL001 Descriptive error, see attached message.</xqdoc:error>" ] }, { "isDocumented" : true, "arity" : 1, "name" : "connect", "qname" : "jdbc:connect", "signature" : "($connection-config as item()) as anyURI", "description" : " Open a connection to a database.\n <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">This function is declared as deterministic and should be used whenever result\n caching is acceptable.</p>\n <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">The input to the function contains the connection information.\n If a string is used, then the function will interpret it as credential name\n and will connect using the JDBC credentials with the specified name.\n If an object is used, then the function will open a connection using it.\n The object's required structure is described in the module's description.</p>\n <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">The function returns an opaque URI that can represents the connection.\n This URI has to be passed to other functions of this module that require\n the <tt>$conn</tt> parameter as a first argument.</p>\n", "summary" : "<p> Open a connection to a database.</p>", "annotation_str" : "", "annotations" : [  ], "updating" : false, "parameters" : [ { "name" : "connection-config", "type" : "item()", "occurrence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> object containing the configuration information.</div>" } ], "returns" : { "type" : "anyURI", "description" : "an identifier that represents the connection to the server." }, "errors" : [ "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">NOT-FOUND The specified credentials have not been found.</xqdoc:error>", "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">NOT-VALID Invalid connection information.</xqdoc:error>", "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">SQL28000 Authentication failed.</xqdoc:error>", "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">SQL08001 Connection error.</xqdoc:error>", "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">SQL40003 Isolation level not supported.</xqdoc:error>", "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">SQL001 Descriptive error, see attached message.</xqdoc:error>" ] }, { "isDocumented" : true, "arity" : 2, "name" : "connect", "qname" : "jdbc:connect", "signature" : "($connection-config as item(), $options as object()?) as anyURI", "description" : " Open a connection to a database.\n <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">This function is declared as deterministic and should be used whenever result\n caching is acceptable.</p>\n <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">The input to the function contains the connection information.\n If a string is used, then the function will interpret it as credential name\n and will connect using the JDBC credentials with the specified name.\n If an object is used, then the function will open a connection using it.\n The object's required structure is described in the module's description.</p>\n <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">In addition to the connection configuration, the function allows to\n specify several options:\n <ul>\n   <li><tt>autocommit</tt>: <tt>true/false</tt> turn on/off auto commit\n (default: true)</li>\n   <li><tt>readonly</tt>: <tt>true/false</tt> configure readonly/write on this\n connection (default: false)</li>\n   <li><tt>isolation-level</tt>: configure the isolation level for this connection\n     <ul>\n       <li><tt>READ-COMMITTED</tt>: set the isolation level read-committed</li>\n       <li><tt>READ-UNCOMMITTED</tt>: set the isolation level read-uncommitted</li>\n       <li><tt>READ-REPEATABLE</tt>: set the isolation level repeatable-read</li>\n       <li><tt>SERIALIZABLE</tt>: set the isolation level serializable</li>\n     </ul>\n   If no isolation level is provided by the user the connection will be created\n   with the default isolation level of the database.</li>\n </ul></p>\n <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">The function returns an opaque URI that represents the connection.\n This URI has to be passed to other functions of this module that require\n the <tt>$conn</tt> parameter as a first argument.</p>\n", "summary" : "<p> Open a connection to a database.</p>", "annotation_str" : "", "annotations" : [  ], "updating" : false, "parameters" : [ { "name" : "connection-config", "type" : "item()", "occurrence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> object containing the configuration information.</div>" }, { "name" : "options", "type" : "object()", "occurrence" : "?", "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> object to specify additional connection options.</div>" } ], "returns" : { "type" : "anyURI", "description" : "an identifier that represents the connection to the server." }, "errors" : [ "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">NOT-FOUND The specified credentials have not been found.</xqdoc:error>", "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">NOT-VALID Invalid connection information.</xqdoc:error>", "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">SQL28000 Authentication failed.</xqdoc:error>", "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">SQL08001 Connection error.</xqdoc:error>", "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">SQL40003 Isolation level not supported.</xqdoc:error>", "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">SQL001 Descriptive error, see error in attached message.</xqdoc:error>" ] }, { "isDocumented" : true, "arity" : 1, "name" : "connection-options", "qname" : "jdbc:connection-options", "signature" : "($conn as anyURI) as object()", "description" : " Return a set with options for a specified connection.\n The returned options are equal to the options specified in function jdbc:connect.\n Consequently, the options are specified as follows:\n <ul xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">\n   <li><tt>autocommit</tt>: <tt>true/false</tt> shows auto commit</li>\n   <li><tt>readonly</tt>: <tt>true/false</tt> shows if the connection is readonly/write</li>\n   <li><tt>isolation-level</tt>: shows the isolation level for this connection\n     <ul>\n       <li><tt>READ-COMMITTED</tt>: isolation level is read-committed</li>\n       <li><tt>READ-UNCOMMITTED</tt>: isolation level is read-uncommitted</li>\n       <li><tt>READ-REPEATABLE</tt>: isolation level is repeatable-read</li>\n       <li><tt>SERIALIZABLE</tt>: isolation level is serializable</li>\n     </ul></li>\n </ul>\n", "summary" : "<p> Return a set with options for a specified connection.</p>", "annotation_str" : "", "annotations" : [  ], "updating" : false, "parameters" : [ { "name" : "conn", "type" : "anyURI", "occurrence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> The identifier of the connection.</div>" } ], "returns" : { "type" : "object()", "description" : "an object with the connection options." }, "errors" : [ "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">SQL08003 Connection doesn't exist</xqdoc:error>", "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">SQL08000 Connection is closed</xqdoc:error>", "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">SQL001 Descriptive error, see error in attached message</xqdoc:error>" ] }, { "isDocumented" : true, "arity" : 1, "name" : "execute-prepared", "qname" : "jdbc:execute-prepared", "signature" : "($prepared-statement as anyURI) as anyURI", "description" : " Execute SQL statements prepared with jdbc:prepare-statement,\n after setting the parameters values accordingly and returns an identifier to\n a Dataset.\n", "summary" : "<p> Execute SQL statements prepared with jdbc:prepare-statement,\n after setting the parameters values accordingly and returns an identifier to\n a Dataset.</p>", "annotation_str" : " %an:sequential", "annotations" : [ { "prefix" : "an", "ns" : "http://zorba.io/annotations", "name" : "sequential", "value" : "" } ], "updating" : false, "parameters" : [ { "name" : "prepared-statement", "type" : "anyURI", "occurrence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> The identifier of the prepared statement.</div>" } ], "returns" : { "type" : "anyURI", "description" : "the identifier of a DataSet." }, "errors" : [ "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">SQL003 Prepared statement doesn't exist.</xqdoc:error>", "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">SQL08000 Connection is closed.</xqdoc:error>", "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">SQL001 Descriptive error, see error in attached message.</xqdoc:error>" ] }, { "isDocumented" : true, "arity" : 2, "name" : "execute-query-nondeterministic", "qname" : "jdbc:execute-query-nondeterministic", "signature" : "($conn as anyURI, $sql as string) as object()*", "description" : " Execute non-updating SQL statements.\n <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">This function has the same semantics as\n <a href=\"#execute-query-2\">execute-query#2</a>,\n but is declared as being non deterministic and thus should only be used when\n result caching is not desired.</p>\n", "summary" : "<p> Execute non-updating SQL statements.</p>", "annotation_str" : " %an:nondeterministic", "annotations" : [ { "prefix" : "an", "ns" : "http://zorba.io/annotations", "name" : "nondeterministic", "value" : "" } ], "updating" : false, "parameters" : [ { "name" : "conn", "type" : "anyURI", "occurrence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> The identifier of the active connection.</div>" }, { "name" : "sql", "type" : "string", "occurrence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> The query string to be executed.</div>" } ], "returns" : { "type" : "object()*", "description" : "an object with the result data rows from the query provided." }, "errors" : [ "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">SQL08003 Connection doesn't exist.</xqdoc:error>", "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">SQL08000 Connection is closed.</xqdoc:error>", "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">SQL005 The statement is Updating type.</xqdoc:error>", "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">SQL001 Descriptive error, see error in attached message.</xqdoc:error>" ] }, { "isDocumented" : true, "arity" : 1, "name" : "execute-query-prepared-nondeterministic", "qname" : "jdbc:execute-query-prepared-nondeterministic", "signature" : "($prepared-statement as anyURI) as object()*", "description" : " Execute non-updating SQL statements prepared with jdbc:prepare-statement,\n after setting the parameters values accordingly.\n <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">This function has the same semantics as\n <a href=\"#execute-query-prepared-1\">execute-query-prepared#1</a>,\n but is declared as being non deterministic and thus should only be used when\n result caching is not desired.</p>\n", "summary" : "<p> Execute non-updating SQL statements prepared with jdbc:prepare-statement,\n after setting the parameters values accordingly.</p>", "annotation_str" : " %an:nondeterministic", "annotations" : [ { "prefix" : "an", "ns" : "http://zorba.io/annotations", "name" : "nondeterministic", "value" : "" } ], "updating" : false, "parameters" : [ { "name" : "prepared-statement", "type" : "anyURI", "occurrence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> The identifier of the prepared statement.</div>" } ], "returns" : { "type" : "object()*", "description" : "an object with the result data rows from the query processed with the parameters provided." }, "errors" : [ "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">SQL003 Prepared statement doesn't exist.</xqdoc:error>", "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">SQL005 The prepared statement is an updating query.</xqdoc:error>", "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">SQL08000 Connection is closed.</xqdoc:error>", "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">SQL001 Descriptive error, see error in attached message.</xqdoc:error>" ] }, { "isDocumented" : true, "arity" : 1, "name" : "execute-query-prepared", "qname" : "jdbc:execute-query-prepared", "signature" : "($prepared-statement as anyURI) as object()*", "description" : " Execute non-updating SQL statements prepared with jdbc:prepare-statement,\n after setting the parameters values accordingly.\n <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">This function is declared as deterministic and should be used whenever result\n caching is acceptable.</p>\n <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">Every row is represented by an object of column-value representation, as\n in the module description.</p>\n", "summary" : "<p> Execute non-updating SQL statements prepared with jdbc:prepare-statement,\n after setting the parameters values accordingly.</p>", "annotation_str" : "", "annotations" : [  ], "updating" : false, "parameters" : [ { "name" : "prepared-statement", "type" : "anyURI", "occurrence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> The identifier of the prepared statement.</div>" } ], "returns" : { "type" : "object()*", "description" : "an object with the result data rows from the query processed with the parameters provided." }, "errors" : [ "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">SQL003 Prepared statement doesn't exist.</xqdoc:error>", "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">SQL005 The prepared statement is an updating query.</xqdoc:error>", "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">SQL08000 Connection is closed.</xqdoc:error>", "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">SQL001 Descriptive error, see error in attached message.</xqdoc:error>" ] }, { "isDocumented" : true, "arity" : 2, "name" : "execute-query", "qname" : "jdbc:execute-query", "signature" : "($conn as anyURI, $sql as string) as object()*", "description" : " Execute non-updating SQL statements.\n <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">This function is declared as deterministic and should be used whenever result\n caching is acceptable.</p>\n <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">Every row is represented by an object of column-value representation, as in\n the module description.</p>\n", "summary" : "<p> Execute non-updating SQL statements.</p>", "annotation_str" : "", "annotations" : [  ], "updating" : false, "parameters" : [ { "name" : "conn", "type" : "anyURI", "occurrence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> The identifier of the active connection.</div>" }, { "name" : "sql", "type" : "string", "occurrence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> The query string to be executed.</div>" } ], "returns" : { "type" : "object()*", "description" : "an object with the result data rows from the query provided." }, "errors" : [ "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">SQL08003 Connection doesn't exist.</xqdoc:error>", "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">SQL08000 Connection is closed.</xqdoc:error>", "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">SQL005 The statement is Updating type.</xqdoc:error>", "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">SQL001 Descriptive error, see error in attached message.</xqdoc:error>" ] }, { "isDocumented" : true, "arity" : 1, "name" : "execute-update-prepared", "qname" : "jdbc:execute-update-prepared", "signature" : "($prepared-statement as anyURI) as integer", "description" : " Execute updating SQL statements prepared with jdbc:prepare-statement.\n", "summary" : "<p> Execute updating SQL statements prepared with jdbc:prepare-statement.</p>", "annotation_str" : " %an:sequential", "annotations" : [ { "prefix" : "an", "ns" : "http://zorba.io/annotations", "name" : "sequential", "value" : "" } ], "updating" : false, "parameters" : [ { "name" : "prepared-statement", "type" : "anyURI", "occurrence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> The identifier of the prepared statement.</div>" } ], "returns" : { "type" : "integer", "description" : "the number of affected rows." }, "errors" : [ "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">SQL003 Prepared statement doesn't exist.</xqdoc:error>", "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">SQL006 The prepared statement is a non-updating query.</xqdoc:error>", "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">SQL08000 Connection is closed.</xqdoc:error>", "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">SQL001 Descriptive error, see error in attached message.</xqdoc:error>" ] }, { "isDocumented" : true, "arity" : 2, "name" : "execute-update", "qname" : "jdbc:execute-update", "signature" : "($conn as anyURI, $sql as string) as integer", "description" : " Execute updating SQL statements.\n", "summary" : "<p> Execute updating SQL statements.</p>", "annotation_str" : " %an:sequential", "annotations" : [ { "prefix" : "an", "ns" : "http://zorba.io/annotations", "name" : "sequential", "value" : "" } ], "updating" : false, "parameters" : [ { "name" : "conn", "type" : "anyURI", "occurrence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> The identifier of the active connection.</div>" }, { "name" : "sql", "type" : "string", "occurrence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> The query string to be executed.</div>" } ], "returns" : { "type" : "integer", "description" : "the number of affected rows." }, "errors" : [ "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">SQL08003 Connection doesn't exist.</xqdoc:error>", "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">SQL08000 Connection is closed.</xqdoc:error>", "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">SQL005 The statement is Read-only type.</xqdoc:error>", "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">SQL001 Descriptive error, see error in attached message.</xqdoc:error>" ] }, { "isDocumented" : true, "arity" : 2, "name" : "execute", "qname" : "jdbc:execute", "signature" : "($conn as anyURI, $sql as string) as anyURI", "description" : " Execute any kind of SQL statement.\n", "summary" : "<p> Execute any kind of SQL statement.</p>", "annotation_str" : " %an:sequential", "annotations" : [ { "prefix" : "an", "ns" : "http://zorba.io/annotations", "name" : "sequential", "value" : "" } ], "updating" : false, "parameters" : [ { "name" : "conn", "type" : "anyURI", "occurrence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> The identifier of the active connection.</div>" }, { "name" : "sql", "type" : "string", "occurrence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> The query string to be executed.</div>" } ], "returns" : { "type" : "anyURI", "description" : "an identifier of a DataSet." }, "errors" : [ "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">SQL08003 Connection doesn't exist.</xqdoc:error>", "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">SQL08000 Connection is closed.</xqdoc:error>", "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">SQL001 Descriptive error, see error in attached message.</xqdoc:error>" ] }, { "isDocumented" : true, "arity" : 1, "name" : "is-connected", "qname" : "jdbc:is-connected", "signature" : "($conn as anyURI) as boolean", "description" : " Verify if a connection is still active.\n", "summary" : "<p> Verify if a connection is still active.</p>", "annotation_str" : "", "annotations" : [  ], "updating" : false, "parameters" : [ { "name" : "conn", "type" : "anyURI", "occurrence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> The identifier of the connection to be verified.</div>" } ], "returns" : { "type" : "boolean", "description" : "true if connected, false otherwise" }, "errors" : [ "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">SQL08003 Connection doesn't exist</xqdoc:error>", "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">SQL001 Descriptive error, see error in attached message</xqdoc:error>" ] }, { "isDocumented" : true, "arity" : 1, "name" : "metadata", "qname" : "jdbc:metadata", "signature" : "($dataset as anyURI) as object()", "description" : " Return the metadata of the result of a DataSet.\n <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">\n More in detail, it returns information about column names, types, and whether\n a column can contain a null value.\n The metadata information can only be returned for DataSets that have been\n executed explicitly using the jdbc:execute function.\n The metadata node returned has the following structure:\n <pre>{\n   \"columns\": [ {\n       \"name\": string,\n       \"type\": string,\n       \"autoincrement\"? = boolean,\n       \"nillable\"? = boolean } * ]\n }</pre>\n </p>\n <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">\n If the query is an updating query, then the result object will return the\n number of affected rows like:\n <pre>{ \"affectedrows\": integer }</pre>\n </p>\n", "summary" : "<p> Return the metadata of the result of a DataSet.</p>", "annotation_str" : "", "annotations" : [  ], "updating" : false, "parameters" : [ { "name" : "dataset", "type" : "anyURI", "occurrence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> The identifier of the DataSet.</div>" } ], "returns" : { "type" : "object()", "description" : "the metadata associated with an executed DataSet." }, "errors" : [ "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">SQL008 DataSet doesn't exist.</xqdoc:error>", "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">SQL08000 Connection is closed.</xqdoc:error>", "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">SQL001 Descriptive error, see error in attached message.</xqdoc:error>" ] }, { "isDocumented" : true, "arity" : 1, "name" : "parameter-metadata", "qname" : "jdbc:parameter-metadata", "signature" : "($prepared-statement as anyURI) as object()", "description" : " Retrieve the names and types of the prepared statement parameters.\n The metadata returned has the following structure:\n <pre xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">  {\n     columns: [{\n       \"name\": string,\n       \"type\": string\n       }]\n   } </pre>\n", "summary" : "<p> Retrieve the names and types of the prepared statement parameters.</p>", "annotation_str" : "", "annotations" : [  ], "updating" : false, "parameters" : [ { "name" : "prepared-statement", "type" : "anyURI", "occurrence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> The identifier of the prepared statement.</div>" } ], "returns" : { "type" : "object()", "description" : "parameters metadata (name and type) associated with a prepared statement." }, "errors" : [ "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">SQL003 Prepared statement doesn't exist.</xqdoc:error>", "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">SQL08000 Connection is closed.</xqdoc:error>", "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">SQL001 Descriptive error, see error in attached message.</xqdoc:error>" ] }, { "isDocumented" : true, "arity" : 2, "name" : "prepare-statement", "qname" : "jdbc:prepare-statement", "signature" : "($conn as anyURI, $sql as string) as anyURI", "description" : " Create a prepared statement for multiple executions with diferent parameters.\n Example:\n <pre xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">\n jdbc:prepare-statement($connection, \"SELECT * FROM users WHERE id=? AND age&gt;?\")\n </pre>\n", "summary" : "<p> Create a prepared statement for multiple executions with diferent parameters.</p>", "annotation_str" : " %an:sequential", "annotations" : [ { "prefix" : "an", "ns" : "http://zorba.io/annotations", "name" : "sequential", "value" : "" } ], "updating" : false, "parameters" : [ { "name" : "conn", "type" : "anyURI", "occurrence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> The identifier of the active connection.</div>" }, { "name" : "sql", "type" : "string", "occurrence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> The query string to be executed.</div>" } ], "returns" : { "type" : "anyURI", "description" : "the identifier of the prepared statement." }, "errors" : [ "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">SQL08003 Connection doesn't exist.</xqdoc:error>", "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">SQL08000 Connection is closed.</xqdoc:error>", "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">SQL001 Descriptive error, see error in attached message.</xqdoc:error>" ] }, { "isDocumented" : true, "arity" : 1, "name" : "result-set", "qname" : "jdbc:result-set", "signature" : "($dataset as anyURI) as object()*", "description" : " Extract the data rows from a non-updating DataSet.\n Every row is represented by an object of column-value representation, as in\n the module description.\n", "summary" : "<p> Extract the data rows from a non-updating DataSet.</p>", "annotation_str" : "", "annotations" : [  ], "updating" : false, "parameters" : [ { "name" : "dataset", "type" : "anyURI", "occurrence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> The identifier of the DataSet.</div>" } ], "returns" : { "type" : "object()*", "description" : "an object with the result data rows from the DataSet provided." }, "errors" : [ "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">SQL008 DataSet doesn't exist.</xqdoc:error>", "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">SQL08000 Connection is closed.</xqdoc:error>", "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">SQL001 Descriptive error, see error in attached message.</xqdoc:error>" ] }, { "isDocumented" : true, "arity" : 1, "name" : "rollback", "qname" : "jdbc:rollback", "signature" : "($conn as anyURI) as empty-sequence()", "description" : " Rollback the current transaction of a connection.\n", "summary" : "<p> Rollback the current transaction of a connection.</p>", "annotation_str" : " %an:sequential", "annotations" : [ { "prefix" : "an", "ns" : "http://zorba.io/annotations", "name" : "sequential", "value" : "" } ], "updating" : false, "parameters" : [ { "name" : "conn", "type" : "anyURI", "occurrence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> The identifier of the connection with a transaction to be rollbacked.</div>" } ], "returns" : { "type" : "empty-sequence()", "description" : "an empty-sequence()" }, "errors" : [ "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">SQL08003 Connection doesn't exist</xqdoc:error>", "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">SQL08000 Connection is closed</xqdoc:error>", "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">SQL001 Descriptive error, see error in attached message</xqdoc:error>" ] }, { "isDocumented" : true, "arity" : 3, "name" : "set-boolean", "qname" : "jdbc:set-boolean", "signature" : "($prepared-statement as anyURI, $parameter-index as integer, $value as boolean) as empty-sequence()", "description" : " Set the value of the designated parameter with a <tt xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">boolean</tt> value.\n", "summary" : "<p> Set the value of the designated parameter with a  boolean  value.</p>", "annotation_str" : " %an:sequential", "annotations" : [ { "prefix" : "an", "ns" : "http://zorba.io/annotations", "name" : "sequential", "value" : "" } ], "updating" : false, "parameters" : [ { "name" : "prepared-statement", "type" : "anyURI", "occurrence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> The identifier of the prepared statement.</div>" }, { "name" : "parameter-index", "type" : "integer", "occurrence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> The index from the parameter to be set.</div>" }, { "name" : "value", "type" : "boolean", "occurrence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> The value to be set.</div>" } ], "returns" : { "type" : "empty-sequence()", "description" : "an empty-sequence()" }, "errors" : [ "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">SQL003 Prepared statement doesn't exist.</xqdoc:error>", "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">SQL007 Parameter casting error.</xqdoc:error>", "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">SQL08000 Connection is closed.</xqdoc:error>", "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">SQL001 Descriptive error, see error in attached message.</xqdoc:error>" ] }, { "isDocumented" : true, "arity" : 2, "name" : "set-null", "qname" : "jdbc:set-null", "signature" : "($prepared-statement as anyURI, $parameter-index as integer) as empty-sequence()", "description" : " Set the value of the designated parameter with a <tt xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">NULL</tt> value.\n", "summary" : "<p> Set the value of the designated parameter with a  NULL  value.</p>", "annotation_str" : " %an:sequential", "annotations" : [ { "prefix" : "an", "ns" : "http://zorba.io/annotations", "name" : "sequential", "value" : "" } ], "updating" : false, "parameters" : [ { "name" : "prepared-statement", "type" : "anyURI", "occurrence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> The identifier of the prepared statement.</div>" }, { "name" : "parameter-index", "type" : "integer", "occurrence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> The index from the parameter to be set.</div>" } ], "returns" : { "type" : "empty-sequence()", "description" : "an empty-sequence()" }, "errors" : [ "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">SQL003 Prepared statement doesn't exist.</xqdoc:error>", "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">SQL007 Parameter casting error.</xqdoc:error>", "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">SQL08000 Connection is closed.</xqdoc:error>", "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">SQL001 Descriptive error, see error in attached message.</xqdoc:error>" ] }, { "isDocumented" : true, "arity" : 3, "name" : "set-numeric", "qname" : "jdbc:set-numeric", "signature" : "($prepared-statement as anyURI, $parameter-index as decimal, $value as anyAtomicType) as empty-sequence()", "description" : " Set the value of the designated parameter with a <tt xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">numeric</tt> value.\n", "summary" : "<p> Set the value of the designated parameter with a  numeric  value.</p>", "annotation_str" : " %an:sequential", "annotations" : [ { "prefix" : "an", "ns" : "http://zorba.io/annotations", "name" : "sequential", "value" : "" } ], "updating" : false, "parameters" : [ { "name" : "prepared-statement", "type" : "anyURI", "occurrence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> The identifier of the prepared statement.</div>" }, { "name" : "parameter-index", "type" : "decimal", "occurrence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> The index from the parameter to be set.</div>" }, { "name" : "value", "type" : "anyAtomicType", "occurrence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> The value to be set.</div>" } ], "returns" : { "type" : "empty-sequence()", "description" : "an empty-sequence()" }, "errors" : [ "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">SQL003 Prepared statement doesn't exist.</xqdoc:error>", "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">SQL007 Parameter casting error.</xqdoc:error>", "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">SQL08000 Connection is closed.</xqdoc:error>", "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">SQL001 Descriptive error, see error in attached message.</xqdoc:error>" ] }, { "isDocumented" : true, "arity" : 3, "name" : "set-string", "qname" : "jdbc:set-string", "signature" : "($prepared-statement as anyURI, $parameter-index as integer, $value as string) as empty-sequence()", "description" : " Set the value of the designated parameter with a <tt xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">string</tt> value.\n", "summary" : "<p> Set the value of the designated parameter with a  string  value.</p>", "annotation_str" : " %an:sequential", "annotations" : [ { "prefix" : "an", "ns" : "http://zorba.io/annotations", "name" : "sequential", "value" : "" } ], "updating" : false, "parameters" : [ { "name" : "prepared-statement", "type" : "anyURI", "occurrence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> The identifier of the prepared statement.</div>" }, { "name" : "parameter-index", "type" : "integer", "occurrence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> The index from the parameter to be set.</div>" }, { "name" : "value", "type" : "string", "occurrence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> The value to be set.</div>" } ], "returns" : { "type" : "empty-sequence()", "description" : "an empty-sequence()" }, "errors" : [ "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">SQL003 Prepared statement doesn't exist.</xqdoc:error>", "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">SQL007 Parameter casting error.</xqdoc:error>", "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">SQL08000 Connection is closed.</xqdoc:error>", "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">SQL001 Descriptive error, see error in attached message.</xqdoc:error>" ] }, { "isDocumented" : true, "arity" : 3, "name" : "set-value", "qname" : "jdbc:set-value", "signature" : "($prepared-statement as anyURI, $parameter-index as decimal, $value as anyAtomicType) as empty-sequence()", "description" : " Set the value of the designated parameter with the given value.\n The function will try to cast the value to the correct data type and assign\n it to the parameter.\n", "summary" : "<p> Set the value of the designated parameter with the given value.</p>", "annotation_str" : " %an:sequential", "annotations" : [ { "prefix" : "an", "ns" : "http://zorba.io/annotations", "name" : "sequential", "value" : "" } ], "updating" : false, "parameters" : [ { "name" : "prepared-statement", "type" : "anyURI", "occurrence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> The identifier of the prepared statement.</div>" }, { "name" : "parameter-index", "type" : "decimal", "occurrence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> The index from the parameter to be set.</div>" }, { "name" : "value", "type" : "anyAtomicType", "occurrence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> The value to be set.</div>" } ], "returns" : { "type" : "empty-sequence()", "description" : "an empty-sequence()" }, "errors" : [ "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">SQL003 Prepared statement doesn't exist.</xqdoc:error>", "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">SQL007 Parameter casting error.</xqdoc:error>", "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">SQL08000 Connection is closed.</xqdoc:error>", "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">SQL001 Descriptive error, see error in attached message.</xqdoc:error>" ] }, { "isDocumented" : true, "arity" : 1, "name" : "tables-nondeterministic", "qname" : "jdbc:tables-nondeterministic", "signature" : "($conn as anyURI) as object()*", "description" : " Return the list of tables from a connection.\n <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">This function has the same semantics as\n <a href=\"#tables-1\">tables#1</a>,\n but is declared as being non deterministic and thus should only be used when\n result caching is not desired.</p>\n", "summary" : "<p> Return the list of tables from a connection.</p>", "annotation_str" : " %an:nondeterministic", "annotations" : [ { "prefix" : "an", "ns" : "http://zorba.io/annotations", "name" : "nondeterministic", "value" : "" } ], "updating" : false, "parameters" : [ { "name" : "conn", "type" : "anyURI", "occurrence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> The identifier to a connection.</div>" } ], "returns" : { "type" : "object()*", "description" : "Return an object with the result data rows from the query provided, the data rows are defined as follows: { column:value* }* Every row is represented by an object of column-value representation of the returned SQL result." }, "errors" : [ "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">SQL08000 Connection is closed.</xqdoc:error>", "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">SQL001 Descriptive error, see error in attached message.</xqdoc:error>" ] }, { "isDocumented" : true, "arity" : 4, "name" : "tables-nondeterministic", "qname" : "jdbc:tables-nondeterministic", "signature" : "($conn as anyURI, $catalog as string?, $schema as string?, $table as string?) as object()*", "description" : " Return the list of tables from a connection.\n <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">This function has the same semantics as <a href=\"#tables-4\">tables#4</a>,\n but is declared as being non deterministic and thus should only be used when\n result caching is not desired.</p>\n", "summary" : "<p> Return the list of tables from a connection.</p>", "annotation_str" : " %an:nondeterministic", "annotations" : [ { "prefix" : "an", "ns" : "http://zorba.io/annotations", "name" : "nondeterministic", "value" : "" } ], "updating" : false, "parameters" : [ { "name" : "conn", "type" : "anyURI", "occurrence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> The identifier to a connection.</div>" }, { "name" : "catalog", "type" : "string", "occurrence" : "?", "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> A filter of the catalog name of the tables. Send empty-sequence for all tables.</div>" }, { "name" : "schema", "type" : "string", "occurrence" : "?", "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> A filter of the schema name of the tables. Send empty-sequence for all tables.</div>" }, { "name" : "table", "type" : "string", "occurrence" : "?", "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> A filter of the name of the tables. Send empty-sequence for all tables.</div>" } ], "returns" : { "type" : "object()*", "description" : "Return an object with the result data rows from the query provided, the data rows are defined as follows: { column:value* }* Every row is represented by an object of column-value representation of the returned SQL result." }, "errors" : [ "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">SQL08000 Connection is closed.</xqdoc:error>", "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">SQL001 Descriptive error, see error in attached message.</xqdoc:error>" ] }, { "isDocumented" : true, "arity" : 1, "name" : "tables", "qname" : "jdbc:tables", "signature" : "($conn as anyURI) as object()*", "description" : " Return the list of tables from a connection.\n <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">This function is declared as deterministic and should be used whenever result\n caching is acceptable.</p>\n", "summary" : "<p> Return the list of tables from a connection.</p>", "annotation_str" : "", "annotations" : [  ], "updating" : false, "parameters" : [ { "name" : "conn", "type" : "anyURI", "occurrence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> The identifier to a connection.</div>" } ], "returns" : { "type" : "object()*", "description" : "Return an object with the result data rows from the query provided, the data rows are defined as follows: { column:value* }* Every row is represented by an object of column-value representation of the returned SQL result." }, "errors" : [ "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">SQL08000 Connection is closed.</xqdoc:error>", "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">SQL001 Descriptive error, see error in attached message.</xqdoc:error>" ] }, { "isDocumented" : true, "arity" : 4, "name" : "tables", "qname" : "jdbc:tables", "signature" : "($conn as anyURI, $catalog as string?, $schema as string?, $table as string?) as object()*", "description" : " Return the list of tables from a connection.\n <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">This function is declared as deterministic and should be used whenever result\n caching is acceptable.</p>\n", "summary" : "<p> Return the list of tables from a connection.</p>", "annotation_str" : "", "annotations" : [  ], "updating" : false, "parameters" : [ { "name" : "conn", "type" : "anyURI", "occurrence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> The identifier to a connection.</div>" }, { "name" : "catalog", "type" : "string", "occurrence" : "?", "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> A filter of the catalog name of the tables. Send empty-sequence for all tables.</div>" }, { "name" : "schema", "type" : "string", "occurrence" : "?", "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> A filter of the schema name of the tables. Send empty-sequence for all tables.</div>" }, { "name" : "table", "type" : "string", "occurrence" : "?", "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> A filter of the name of the tables. Send empty-sequence for all tables.</div>" } ], "returns" : { "type" : "object()*", "description" : "Return an object with the result data rows from the query provided, the data rows are defined as follows: { column:value* }* Every row is represented by an object of column-value representation of the returned SQL result." }, "errors" : [ "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">SQL08000 Connection is closed.</xqdoc:error>", "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">SQL001 Descriptive error, see error in attached message.</xqdoc:error>" ] } ], "variables" : [ { "name" : "jdbc:READ-COMMITTED", "type" : "item()*", "description" : " This variable represents the READ-COMMITTED Isolation Level.\n" }, { "name" : "jdbc:READ-UNCOMMITTED", "type" : "item()*", "description" : " This variable represents the READ-UNCOMMITTED Isolation Level.\n" }, { "name" : "jdbc:REPEATABLE-READ", "type" : "item()*", "description" : " This variable represents the REPEATABLE-READ Isolation Levels.\n" }, { "name" : "jdbc:SERIALIZABLE", "type" : "item()*", "description" : " This variable represents the SERIALIZABLE Isolation Levels.\n" }, { "name" : "jdbc:CREDENTIALS-CATEGORY", "type" : "item()*", "description" : " This variable represents the category for the credentials used.\n" } ] }, "http://zorba.io/modules/full-text" : { "ns" : "http://zorba.io/modules/full-text", "description" : " This module provides an XQuery API to full-text functions.\n For general information about this implementation of the\n <a xmlns:xqdoc=\"http://www.xqdoc.org/1.0\" href=\"http://www.w3.org/TR/xpath-full-text-10/\">XQuery and XPath Full Text 1.0 specification</a>\n as well as instructions for building an installing a thesaurus,\n see the <a xmlns:xqdoc=\"http://www.xqdoc.org/1.0\" href=\"../zorba/ft_thesaurus.html\">Full Text Thesaurus documentation</a>.\n <h2 xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">Notes on languages</h2>\n To refer to particular human languages,\n uses either the\n <a xmlns:xqdoc=\"http://www.xqdoc.org/1.0\" href=\"http://en.wikipedia.org/wiki/ISO_639-1\">ISO 639-1</a>\n or\n <a xmlns:xqdoc=\"http://www.xqdoc.org/1.0\" href=\"http://en.wikipedia.org/wiki/ISO_639-2\">ISO 639-2</a>\n languages codes.\n Note that only a subset of the\n <a xmlns:xqdoc=\"http://www.xqdoc.org/1.0\" href=\"http://en.wikipedia.org/wiki/List_of_ISO_639-1_codes\">complete list of language codes</a>\n are supported and not every function supports the same subset.\n <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"/>\n Most functions in this module take a language as a parameter\n using the\n <a xmlns:xqdoc=\"http://www.xqdoc.org/1.0\" href=\"http://www.w3.org/TR/xmlschema-2/#language\"><code>xs:language</code></a>\n XML schema data type.\n <h2 xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">Notes on stemming</h2>\n The <code xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">stem()</code> functions return the\n <a xmlns:xqdoc=\"http://www.xqdoc.org/1.0\" href=\"http://en.wikipedia.org/wiki/Word_stem\">stem</a>\n of a word.\n The stem of a word itself, however, is not guaranteed to be a word.\n It is best to consider a stem as an opaque byte sequence.\n All that is guaranteed about a stem is that,\n for a given word,\n the stem of that word will always be the same byte sequence.\n Hence,\n you should never compare the result of one of the <code xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">stem()</code>\n functions against a non-stemmed string,\n for example:\n <pre xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">\n  if ( ft:stem( \"apples\" ) eq \"apple\" )             ** WRONG **\n </pre>\n Instead do:\n <pre xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">\n  if ( ft:stem( \"apples\" ) eq ft:stem( \"apple\" ) )  ** CORRECT **\n </pre>\n <h2 xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">Notes on the thesaurus</h2>\n The <code xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">thesaurus-lookup()</code> functions have \"levels\"\n and \"relationship\" parameters.\n The values for these are implementation-defined.\n The default implementation uses the\n <a xmlns:xqdoc=\"http://www.xqdoc.org/1.0\" href=\"http://wordnet.princeton.edu/\">WordNet lexical database</a>,\n version 3.0.\n <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"/>\n In WordNet,\n the number of \"levels\" that two phrases are apart\n are how many hierarchical meanings apart they are.\n For example,\n \"canary\" is 5 levels away from \"vertebrate\"\n (carary &gt; finch &gt; oscine &gt; passerine &gt; bird &gt; vertebrate).\n <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"/>\n When using the WordNet implementation,\n all of the relationships (and their abbreviations)\n specified by\n <a xmlns:xqdoc=\"http://www.xqdoc.org/1.0\" href=\"http://www.iso.org/iso/iso_catalogue/catalogue_tc/catalogue_detail.htm?csnumber=7776\">ISO 2788</a>\n and\n <a xmlns:xqdoc=\"http://www.xqdoc.org/1.0\" href=\"http://www.niso.org/kst/reports/standards?step=2&amp;gid=&amp;project_key=7cc9b583cb5a62e8c15d3099e0bb46bbae9cf38a\">ANSI/NISO Z39.19-2005</a>\n with the exceptions of \"HN\" (history note)\n and \"X SN\" (see scope note for) are supported.\n These relationships are:\n  <table xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">\n    <tr>\n      <th>Rel.</th>\n      <th>Meaning</th>\n      <th>WordNet Rel.</th>\n    </tr>\n    <tr>\n      <td>BT</td>\n      <td>broader term</td>\n      <td>hypernym</td>\n    </tr>\n    <tr>\n      <td>BTG</td>\n      <td>broader term generic</td>\n      <td>hypernym</td>\n    </tr>\n    <tr>\n      <td>BTI</td>\n      <td>broader term instance</td>\n      <td>instance hypernym</td>\n    </tr>\n    <tr>\n      <td>BTP</td>\n      <td>broader term partitive</td>\n      <td>part meronym</td>\n    </tr>\n    <tr>\n      <td>NT</td>\n      <td>narrower term</td>\n      <td>hyponym</td>\n    </tr>\n    <tr>\n      <td>NTG</td>\n      <td>narrower term generic</td>\n      <td>hyponym</td>\n    </tr>\n    <tr>\n      <td>NTI</td>\n      <td>narrower term instance</td>\n      <td>instance hyponym</td>\n    </tr>\n    <tr>\n      <td>NTP</td>\n      <td>narrower term partitive</td>\n      <td>part holonym</td>\n    </tr>\n    <tr>\n      <td>RT</td>\n      <td>related term</td>\n      <td>also see</td>\n    </tr>\n    <tr>\n      <td>SN</td>\n      <td>scope note</td>\n      <td>n/a</td>\n    </tr>\n    <tr>\n      <td>TT</td>\n      <td>top term</td>\n      <td>hypernym</td>\n    </tr>\n    <tr>\n      <td>UF</td>\n      <td>non-preferred term</td>\n      <td>n/a</td>\n    </tr>\n    <tr>\n      <td>USE</td>\n      <td>preferred term</td>\n      <td>n/a</td>\n    </tr>\n  </table>\n Note that you can specify relationships\n either by their abbreviation\n or their meaning.\n Relationships are case-insensitive.\n In addition to the\n <a xmlns:xqdoc=\"http://www.xqdoc.org/1.0\" href=\"http://www.iso.org/iso/iso_catalogue/catalogue_tc/catalogue_detail.htm?csnumber=7776\">ISO 2788</a>\n and\n <a xmlns:xqdoc=\"http://www.xqdoc.org/1.0\" href=\"http://www.niso.org/kst/reports/standards?step=2&amp;gid=&amp;project_key=7cc9b583cb5a62e8c15d3099e0bb46bbae9cf38a\">ANSI/NISO Z39.19-2005</a>\n relationships,\n All of the relationships offered by WordNet are also supported.\n These relationships are:\n  <table xmlns:xqdoc=\"http://www.xqdoc.org/1.0\" class=\"ft_rels\">\n    <tr>\n      <th>Relationship</th>\n      <th>Meaning</th>\n    </tr>\n    <tr>\n      <td nowrap=\"nowrap\">also see</td>\n      <td>\n        A word that is related to another,\n        e.g., for \"varnished\" (furniture)\n        one should <em>also see</em> \"finished.\"\n      </td>\n    </tr>\n    <tr>\n      <td>antonym</td>\n      <td>\n        A word opposite in meaning to another,\n        e.g., \"light\" is an <em>antonym</em> for \"heavy.\"\n      </td>\n    </tr>\n    <tr>\n      <td>attribute</td>\n      <td>\n        A noun for which adjectives express values,\n        e.g., \"weight\" is an <em>attribute</em>\n        for which the adjectives \"light\" and \"heavy\"\n        express values.\n      </td>\n    </tr>\n    <tr>\n      <td>cause</td>\n      <td>\n        A verb that causes another,\n        e.g., \"show\" is a <em>cause</em> of \"see.\"\n      </td>\n    </tr>\n    <tr>\n      <td nowrap=\"nowrap\">derivationally related form</td>\n      <td>\n        A word that is derived from a root word,\n        e.g., \"metric\" is a <em>derivationally related form</em> of \"meter.\"\n      </td>\n    </tr>\n    <tr>\n      <td nowrap=\"nowrap\">derived from adjective</td>\n      <td>\n        An adverb that is derived from an adjective,\n        e.g., \"correctly\" is <em>derived from the adjective</em> \"correct.\"\n      </td>\n    </tr>\n    <tr>\n      <td>entailment</td>\n      <td>\n        A verb that presupposes another,\n        e.g., \"snoring\" <em>entails</em> \"sleeping.\"\n      </td>\n    </tr>\n    <tr>\n      <td>hypernym</td>\n      <td>\n        A word with a broad meaning that more specific words fall under,\n        e.g., \"meal\" is a <em>hypernym</em> of \"breakfast.\"\n      </td>\n    </tr>\n    <tr>\n      <td>hyponym</td>\n      <td>\n        A word of more specific meaning than a general term applicable to it,\n        e.g., \"breakfast\" is a <em>hyponym</em> of \"meal.\"\n      </td>\n    </tr>\n    <tr>\n      <td nowrap=\"nowrap\">instance hypernym</td>\n      <td>\n        A word that denotes a category of some specific instance,\n        e.g., \"author\" is an <em>instance hypernym</em> of \"Asimov.\"\n      </td>\n    </tr>\n    <tr>\n      <td nowrap=\"nowrap\">instance hyponym</td>\n      <td>\n        A term that donotes a specific instance of some general category,\n        e.g., \"Asimov\" is an <em>instance hyponym</em> of \"author.\"\n      </td>\n    </tr>\n    <tr>\n      <td nowrap=\"nowrap\">member holonym</td>\n      <td>\n        A word that denotes a collection of individuals,\n        e.g., \"faculty\" is a <em>member holonym</em> of \"professor.\"\n      </td>\n    </tr>\n    <tr>\n      <td nowrap=\"nowrap\">member meronym</td>\n      <td>\n        A word that denotes a member of a larger group,\n        e.g., a \"person\" is a <em>member meronym</em> of a \"crowd.\"\n      </td>\n    </tr>\n    <tr>\n      <td nowrap=\"nowrap\">part holonym</td>\n      <td>\n        A word that denotes a larger whole comprised of some part,\n        e.g., \"car\" is a <em>part holonym</em> of \"engine.\"\n      </td>\n    </tr>\n    <tr>\n      <td nowrap=\"nowrap\">part meronym</td>\n      <td>\n        A word that denotes a part of a larger whole,\n        e.g., an \"engine\" is <em>part meronym</em> of a \"car.\"\n      </td>\n    </tr>\n    <tr>\n      <td nowrap=\"nowrap\">participle of verb</td>\n      <td>\n        An adjective that is the participle of some verb,\n        e.g., \"breaking\" is the <em>participle of the verb</em> \"break.\"\n      </td>\n    </tr>\n    <tr>\n      <td>pertainym</td>\n      <td>\n        An adjective that classifies its noun,\n        e.g., \"musical\" is a <em>pertainym</em> in \"musical instrument.\"\n      </td>\n    </tr>\n    <tr>\n      <td nowrap=\"nowrap\">similar to</td>\n      <td>\n        Similar, though not necessarily interchangeable, adjectives.\n        For example, \"shiny\" is <em>similar to</em> \"bright\",\n        but they have subtle differences.\n      </td>\n    </tr>\n    <tr>\n      <td nowrap=\"nowrap\">substance holonym</td>\n      <td>\n        A word that denotes a larger whole containing some constituent\n        substance, e.g., \"bread\" is a <em>substance holonym</em> of \"flour.\"\n      </td>\n    </tr>\n    <tr>\n      <td nowrap=\"nowrap\">substance meronym</td>\n      <td>\n        A word that denotes a constituant substance of some larger whole,\n        e.g., \"flour\" is a <em>substance meronym</em> of \"bread.\"\n      </td>\n    </tr>\n    <tr>\n      <td nowrap=\"nowrap\">verb group</td>\n      <td>\n        A verb that is a member of a group of similar verbs,\n        e.g., \"live\" is in the <em>verb group</em>\n        of \"dwell\", \"live\", \"inhabit\", etc.\n      </td>\n    </tr>\n  </table>\n <h2 xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">Notes on tokenization</h2>\n For general information about the implementation of tokenization,\n including what constitutes a token,\n see the <a xmlns:xqdoc=\"http://www.xqdoc.org/1.0\" href=\"../zorba/ft_tokenizer.html\">Full Text Tokenizer</a> documentation.\n", "sees" : [  ], "authors" : [ "<xqdoc:author xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">Paul J. Lucas</xqdoc:author>" ], "version" : null, "encoding" : "utf-8", "namespaces" : [ { "uri" : "http://www.w3.org/2005/xqt-errors", "prefix" : "err" }, { "uri" : "http://zorba.io/modules/full-text", "prefix" : "ft" }, { "uri" : "http://zorba.io/options/versioning", "prefix" : "ver" }, { "uri" : "http://zorba.io/errors", "prefix" : "zerr" } ], "functions" : [ { "isDocumented" : true, "arity" : 0, "name" : "current-compare-options", "qname" : "ft:current-compare-options", "signature" : "() as object() external", "description" : " Gets the current compare options.\n", "summary" : "<p> Gets the current compare options.</p>", "annotation_str" : "", "annotations" : [  ], "updating" : false, "parameters" : [  ], "returns" : { "type" : "object()", "description" : "said compare options." }, "errors" : [  ] }, { "isDocumented" : true, "arity" : 0, "name" : "current-lang", "qname" : "ft:current-lang", "signature" : "() as xs:language external", "description" : " Gets the current\n <a xmlns:xqdoc=\"http://www.xqdoc.org/1.0\" href=\"http://www.w3.org/TR/xmlschema-2/#language\">language</a>:\n either the language specified by the\n <code xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"><a href=\"http://www.w3.org/TR/xpath-full-text-10/#doc-xquery10-FTOptionDecl\">declare ft-option using</a>\n <a href=\"http://www.w3.org/TR/xpath-full-text-10/#ftlanguageoption\">language</a></code>\n statement (if any)\n or the one returned by <code xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">ft:host-lang()</code> (if none).\n", "summary" : "<p> Gets the current\n  language :\n either the language specified by the\n  declare ft-option using \n  language \n statement (if any)\n or the one returned by  ft:host-lang()  (if none).</p>", "annotation_str" : "", "annotations" : [  ], "updating" : false, "parameters" : [  ], "returns" : { "type" : "xs:language", "description" : "said language." }, "errors" : [  ] }, { "isDocumented" : true, "arity" : 0, "name" : "host-lang", "qname" : "ft:host-lang", "signature" : "() as xs:language external", "description" : " Gets the host's current\n <a xmlns:xqdoc=\"http://www.xqdoc.org/1.0\" href=\"http://www.w3.org/TR/xmlschema-2/#language\">language</a>.\n The \"host\" is the computer on which the software is running.\n The host's current language is obtained as follows:\n  <ul xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">\n    <li>\n      For *nix systems:\n      <ol>\n        <li>\n          If <a ref=\"http://www.cplusplus.com/reference/clibrary/clocale/setlocale/\"><code>setlocale</code>(3)</a> returns non-null,\n          the language corresponding to that locale is used.\n        </li>\n        <li>\n          Else, if the <code>LANG</code> environment variable is set,\n          that language is ued.\n        </li>\n        <li>\n          Otherwise, there is no default language.\n        </li>\n      </ol>\n    </li>\n    <li>\n      For Windows systems,\n      the language corresponding to the locale returned by the\n      <a href=\"http://msdn.microsoft.com/en-us/library/windows/desktop/dd318101(v=vs.85).aspx\"><code>GetLocaleInfo()</code></a>\n      function is used.\n    </li>\n  </ul>\n", "summary" : "<p> Gets the host's current\n  language .</p>", "annotation_str" : "", "annotations" : [  ], "updating" : false, "parameters" : [  ], "returns" : { "type" : "xs:language", "description" : "said language." }, "errors" : [  ] }, { "isDocumented" : true, "arity" : 1, "name" : "is-stem-lang-supported", "qname" : "ft:is-stem-lang-supported", "signature" : "($lang as xs:language) as xs:boolean external", "description" : " Checks whether the given\n <a xmlns:xqdoc=\"http://www.xqdoc.org/1.0\" href=\"http://www.w3.org/TR/xmlschema-2/#language\">language</a>\n is supported for stemming.\n", "summary" : "<p> Checks whether the given\n  language \n is supported for stemming.</p>", "annotation_str" : "", "annotations" : [  ], "updating" : false, "parameters" : [ { "name" : "lang", "type" : "xs:language", "occurrence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> The language to check.</div>" } ], "returns" : { "type" : "xs:boolean", "description" : "<code xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">true</code> only if the language is supported." }, "errors" : [  ] }, { "isDocumented" : true, "arity" : 1, "name" : "is-stop-word-lang-supported", "qname" : "ft:is-stop-word-lang-supported", "signature" : "($lang as xs:language) as xs:boolean external", "description" : " Checks whether the given\n <a xmlns:xqdoc=\"http://www.xqdoc.org/1.0\" href=\"http://www.w3.org/TR/xmlschema-2/#language\">language</a>\n is supported for stop words.\n", "summary" : "<p> Checks whether the given\n  language \n is supported for stop words.</p>", "annotation_str" : "", "annotations" : [  ], "updating" : false, "parameters" : [ { "name" : "lang", "type" : "xs:language", "occurrence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> The language to check.</div>" } ], "returns" : { "type" : "xs:boolean", "description" : "<code xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">true</code> only if the language is supported." }, "errors" : [  ] }, { "isDocumented" : true, "arity" : 1, "name" : "is-stop-word", "qname" : "ft:is-stop-word", "signature" : "($word as xs:string) as xs:boolean external", "description" : " Checks whether the given word is a stop-word.\n", "summary" : "<p> Checks whether the given word is a stop-word.</p>", "annotation_str" : "", "annotations" : [  ], "updating" : false, "parameters" : [ { "name" : "word", "type" : "xs:string", "occurrence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> The word to check. The word's <a href=\"http://www.w3.org/TR/xmlschema-2/#language\">language</a> is assumed to be the one returned by <code>ft:current-lang()</code>.</div>" } ], "returns" : { "type" : "xs:boolean", "description" : "<code xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">true</code> only if <code xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">$word</code> is a stop-word." }, "errors" : [ "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">err:FTST0009 if <code>ft:current-lang()</code> is not supported.</xqdoc:error>" ] }, { "isDocumented" : true, "arity" : 2, "name" : "is-stop-word", "qname" : "ft:is-stop-word", "signature" : "($word as xs:string, $lang as xs:language) as xs:boolean external", "description" : " Checks whether the given word is a stop-word.\n", "summary" : "<p> Checks whether the given word is a stop-word.</p>", "annotation_str" : "", "annotations" : [  ], "updating" : false, "parameters" : [ { "name" : "word", "type" : "xs:string", "occurrence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> The word to check.</div>" }, { "name" : "lang", "type" : "xs:language", "occurrence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> The <a href=\"http://www.w3.org/TR/xmlschema-2/#language\">language</a> of <code>$word</code>.</div>" } ], "returns" : { "type" : "xs:boolean", "description" : "<code xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">true</code> only if <code xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">$word</code> is a stop-word." }, "errors" : [ "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">err:FTST0009 if <code>$lang</code> is not supported.</xqdoc:error>" ] }, { "isDocumented" : true, "arity" : 1, "name" : "is-thesaurus-lang-supported", "qname" : "ft:is-thesaurus-lang-supported", "signature" : "($lang as xs:language) as xs:boolean external", "description" : " Checks whether the given\n <a xmlns:xqdoc=\"http://www.xqdoc.org/1.0\" href=\"http://www.w3.org/TR/xmlschema-2/#language\">language</a>\n is supported for look-up using the default thesaurus.\n", "summary" : "<p> Checks whether the given\n  language \n is supported for look-up using the default thesaurus.</p>", "annotation_str" : "", "annotations" : [  ], "updating" : false, "parameters" : [ { "name" : "lang", "type" : "xs:language", "occurrence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> The language to check.</div>" } ], "returns" : { "type" : "xs:boolean", "description" : "<code xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">true</code> only if the language is supported." }, "errors" : [  ] }, { "isDocumented" : true, "arity" : 2, "name" : "is-thesaurus-lang-supported", "qname" : "ft:is-thesaurus-lang-supported", "signature" : "($uri as xs:string, $lang as xs:language) as xs:boolean external", "description" : " Checks whether the given\n <a xmlns:xqdoc=\"http://www.xqdoc.org/1.0\" href=\"http://www.w3.org/TR/xmlschema-2/#language\">language</a>\n is supported for look-up using the thesaurus specified by the given URI.\n", "summary" : "<p> Checks whether the given\n  language \n is supported for look-up using the thesaurus specified by the given URI.</p>", "annotation_str" : "", "annotations" : [  ], "updating" : false, "parameters" : [ { "name" : "uri", "type" : "xs:string", "occurrence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> The URI specifying the thesaurus to use.</div>" }, { "name" : "lang", "type" : "xs:language", "occurrence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> The language to check.</div>" } ], "returns" : { "type" : "xs:boolean", "description" : "<code xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">true</code> only if the language is supported." }, "errors" : [ "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">err:FTST0018 if <code>$uri</code> refers to a thesaurus that is not found in the statically known thesauri.</xqdoc:error>" ] }, { "isDocumented" : true, "arity" : 1, "name" : "is-tokenizer-lang-supported", "qname" : "ft:is-tokenizer-lang-supported", "signature" : "($lang as xs:language) as xs:boolean external", "description" : " Checks whether the given\n <a xmlns:xqdoc=\"http://www.xqdoc.org/1.0\" href=\"http://www.w3.org/TR/xmlschema-2/#language\">language</a>\n is supported for tokenization.\n", "summary" : "<p> Checks whether the given\n  language \n is supported for tokenization.</p>", "annotation_str" : "", "annotations" : [  ], "updating" : false, "parameters" : [ { "name" : "lang", "type" : "xs:language", "occurrence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> The language to check.</div>" } ], "returns" : { "type" : "xs:boolean", "description" : "<code xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">true</code> only if the language is supported." }, "errors" : [  ] }, { "isDocumented" : true, "arity" : 1, "name" : "stem", "qname" : "ft:stem", "signature" : "($word as xs:string) as xs:string external", "description" : " Stems the given word.\n", "summary" : "<p> Stems the given word.</p>", "annotation_str" : "", "annotations" : [  ], "updating" : false, "parameters" : [ { "name" : "word", "type" : "xs:string", "occurrence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> The word to stem. The word's <a href=\"http://www.w3.org/TR/xmlschema-2/#language\">language</a> is assumed to be the one returned by <code>ft:current-lang()</code>.</div>" } ], "returns" : { "type" : "xs:string", "description" : "the stem of <code xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">$word</code>." }, "errors" : [ "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">err:FTST0009 if <code>ft:current-lang()</code> is not supported.</xqdoc:error>" ] }, { "isDocumented" : true, "arity" : 2, "name" : "stem", "qname" : "ft:stem", "signature" : "($word as xs:string, $lang as xs:language) as xs:string external", "description" : " Stems the given word.\n", "summary" : "<p> Stems the given word.</p>", "annotation_str" : "", "annotations" : [  ], "updating" : false, "parameters" : [ { "name" : "word", "type" : "xs:string", "occurrence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> The word to stem.</div>" }, { "name" : "lang", "type" : "xs:language", "occurrence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> The <a href=\"http://www.w3.org/TR/xmlschema-2/#language\">language</a> of <code>$word</code>.</div>" } ], "returns" : { "type" : "xs:string", "description" : "the stem of <code xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">$word</code>." }, "errors" : [ "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">err:FTST0009 if <code>$lang</code> is not supported.</xqdoc:error>" ] }, { "isDocumented" : true, "arity" : 1, "name" : "strip-diacritics", "qname" : "ft:strip-diacritics", "signature" : "($string as xs:string) as xs:string external", "description" : " Strips all diacritical marks from all characters.\n", "summary" : "<p> Strips all diacritical marks from all characters.</p>", "annotation_str" : "", "annotations" : [  ], "updating" : false, "parameters" : [ { "name" : "string", "type" : "xs:string", "occurrence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> The string to strip diacritical marks from.</div>" } ], "returns" : { "type" : "xs:string", "description" : "<code xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">$string</code> with diacritical marks stripped." }, "errors" : [  ] }, { "isDocumented" : true, "arity" : 1, "name" : "thesaurus-lookup", "qname" : "ft:thesaurus-lookup", "signature" : "($phrase as xs:string) as xs:string* external", "description" : " Looks-up the given phrase in the default thesaurus.\n", "summary" : "<p> Looks-up the given phrase in the default thesaurus.</p>", "annotation_str" : "", "annotations" : [  ], "updating" : false, "parameters" : [ { "name" : "phrase", "type" : "xs:string", "occurrence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> The phrase to look up. The phrase's <a href=\"http://www.w3.org/TR/xmlschema-2/#language\">language</a> is assumed to be the one returned by <code>ft:current-lang()</code>.</div>" } ], "returns" : { "type" : "xs:string*", "description" : "the related phrases if <code xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">$phrase</code> is found in the thesaurus or the empty sequence if not." }, "errors" : [ "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">err:FTST0009 if <code>ft:current-lang()</code> is not supported.</xqdoc:error>", "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">zerr:ZXQP8401 if the thesaurus data file's version is not supported by the currently running version of the software.</xqdoc:error>", "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">zerr:ZXQP8402 if the thesaurus data file's endianness does not match that of the CPU on which the software is currently running.</xqdoc:error>", "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">zerr:ZXQP8403 if there was an error reading the thesaurus data.</xqdoc:error>" ] }, { "isDocumented" : true, "arity" : 2, "name" : "thesaurus-lookup", "qname" : "ft:thesaurus-lookup", "signature" : "($uri as xs:string, $phrase as xs:string) as xs:string* external", "description" : " Looks-up the given phrase in a thesaurus.\n", "summary" : "<p> Looks-up the given phrase in a thesaurus.</p>", "annotation_str" : "", "annotations" : [  ], "updating" : false, "parameters" : [ { "name" : "uri", "type" : "xs:string", "occurrence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> The URI specifying the thesaurus to use.</div>" }, { "name" : "phrase", "type" : "xs:string", "occurrence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> The phrase to look up. The phrase's <a href=\"http://www.w3.org/TR/xmlschema-2/#language\">language</a> is assumed to be the one the one returned by <code>ft:current-lang()</code>.</div>" } ], "returns" : { "type" : "xs:string*", "description" : "the related phrases if <code xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">$phrase</code> is found in the thesaurus or the empty sequence if not." }, "errors" : [ "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">err:FTST0009 if <code>ft:current-lang()</code> is unsupported.</xqdoc:error>", "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">err:FTST0018 if <code>$uri</code> refers to a thesaurus that is not found in the statically known thesauri.</xqdoc:error>", "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">zerr:ZOSE0001 if the thesaurus data file could not be found.</xqdoc:error>", "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">zerr:ZOSE0002 if the thesaurus data file is not a plain file.</xqdoc:error>", "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">zerr:ZXQP8401 if the thesaurus data file's version is not supported by the currently running version of the software.</xqdoc:error>", "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">zerr:ZXQP8402 if the thesaurus data file's endianness does not match that of the CPU on which the software is currently running.</xqdoc:error>", "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">zerr:ZXQP8403 if there was an error reading the thesaurus data file.</xqdoc:error>" ] }, { "isDocumented" : true, "arity" : 3, "name" : "thesaurus-lookup", "qname" : "ft:thesaurus-lookup", "signature" : "($uri as xs:string, $phrase as xs:string, $lang as xs:language) as xs:string* external", "description" : " Looks-up the given phrase in the thesaurus specified by the given URI.\n", "summary" : "<p> Looks-up the given phrase in the thesaurus specified by the given URI.</p>", "annotation_str" : "", "annotations" : [  ], "updating" : false, "parameters" : [ { "name" : "uri", "type" : "xs:string", "occurrence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> The URI specifying the thesaurus to use.</div>" }, { "name" : "phrase", "type" : "xs:string", "occurrence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> The phrase to look up.</div>" }, { "name" : "lang", "type" : "xs:language", "occurrence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> The <a href=\"http://www.w3.org/TR/xmlschema-2/#language\">language</a> of <code>$phrase</code>.</div>" } ], "returns" : { "type" : "xs:string*", "description" : "the related phrases if <code xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">$phrase</code> is found in the thesaurus or the empty sequence if not." }, "errors" : [ "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">err:FTST0009 if <code>$lang</code> is not supported.</xqdoc:error>", "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">err:FTST0018 if <code>$uri</code> refers to a thesaurus that is not found in the statically known thesauri.</xqdoc:error>", "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">zerr:ZOSE0001 if the thesaurus data file could not be found.</xqdoc:error>", "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">zerr:ZOSE0002 if the thesaurus data file is not a plain file.</xqdoc:error>", "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">zerr:ZXQP8401 if the thesaurus data file's version is not supported by the currently running version of the software.</xqdoc:error>", "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">zerr:ZXQP8402 if the thesaurus data file's endianness does not match that of the CPU on which the software is currently running.</xqdoc:error>", "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">zerr:ZXQP8403 if there was an error reading the thesaurus data file.</xqdoc:error>" ] }, { "isDocumented" : true, "arity" : 4, "name" : "thesaurus-lookup", "qname" : "ft:thesaurus-lookup", "signature" : "($uri as xs:string, $phrase as xs:string, $lang as xs:language, $relationship as xs:string) as xs:string* external", "description" : " Looks-up the given phrase in a thesaurus.\n", "summary" : "<p> Looks-up the given phrase in a thesaurus.</p>", "annotation_str" : "", "annotations" : [  ], "updating" : false, "parameters" : [ { "name" : "uri", "type" : "xs:string", "occurrence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> The URI specifying the thesaurus to use.</div>" }, { "name" : "phrase", "type" : "xs:string", "occurrence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> The phrase to look up.</div>" }, { "name" : "lang", "type" : "xs:language", "occurrence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> The <a href=\"http://www.w3.org/TR/xmlschema-2/#language\">language</a> of <code>$phrase</code>.</div>" }, { "name" : "relationship", "type" : "xs:string", "occurrence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> The relationship the results are to have to <code>$phrase</code>.</div>" } ], "returns" : { "type" : "xs:string*", "description" : "the related phrases if <code xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">$phrase</code> is found in the thesaurus or the empty sequence if not." }, "errors" : [ "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">err:FTST0018 if <code>$uri</code> refers to a thesaurus that is not found in the statically known thesauri.</xqdoc:error>", "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">err:FTST0009 if <code>$lang</code> is not supported.</xqdoc:error>", "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">zerr:ZOSE0001 if the thesaurus data file could not be found.</xqdoc:error>", "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">zerr:ZOSE0002 if the thesaurus data file is not a plain file.</xqdoc:error>", "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">zerr:ZXQP8401 if the thesaurus data file's version is not supported by the currently running version of the software.</xqdoc:error>", "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">zerr:ZXQP8402 if the thesaurus data file's endianness does not match that of the CPU on which the software is currently running.</xqdoc:error>", "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">zerr:ZXQP8403 if there was an error reading the thesaurus data file.</xqdoc:error>" ] }, { "isDocumented" : true, "arity" : 6, "name" : "thesaurus-lookup", "qname" : "ft:thesaurus-lookup", "signature" : "($uri as xs:string, $phrase as xs:string, $lang as xs:language, $relationship as xs:string, $level-least as xs:integer, $level-most as xs:integer) as xs:string* external", "description" : " Looks-up the given phrase in a thesaurus.\n", "summary" : "<p> Looks-up the given phrase in a thesaurus.</p>", "annotation_str" : "", "annotations" : [  ], "updating" : false, "parameters" : [ { "name" : "uri", "type" : "xs:string", "occurrence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> The URI specifying the thesaurus to use.</div>" }, { "name" : "phrase", "type" : "xs:string", "occurrence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> The phrase to look up.</div>" }, { "name" : "lang", "type" : "xs:language", "occurrence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> The <a href=\"http://www.w3.org/TR/xmlschema-2/#language\">language</a> of <code>$phrase</code>.</div>" }, { "name" : "relationship", "type" : "xs:string", "occurrence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> The relationship the results are to have to <code>$phrase</code>.</div>" }, { "name" : "level-least", "type" : "xs:integer", "occurrence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> The minimum number of levels within the thesaurus to be traversed.</div>" }, { "name" : "level-most", "type" : "xs:integer", "occurrence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> The maximum number of levels within the thesaurus to be traversed.</div>" } ], "returns" : { "type" : "xs:string*", "description" : "the related phrases if <code xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">$phrase</code> is found in the thesaurus or the empty sequence if not." }, "errors" : [ "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">err:FOCA0003 if either <code>$level-least</code> or <code>$level-most</code> is either negative or too large.</xqdoc:error>", "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">err:FTST0018 if <code>$uri</code> refers to a thesaurus that is not found in the statically known thesauri.</xqdoc:error>", "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">err:FTST0009 if <code>$lang</code> is not supported.</xqdoc:error>", "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">zerr:ZOSE0001 if the thesaurus data file could not be found.</xqdoc:error>", "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">zerr:ZOSE0002 if the thesaurus data file is not a plain file.</xqdoc:error>", "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">zerr:ZXQP8401 if the thesaurus data file's version is not supported by the currently running version of the software.</xqdoc:error>", "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">zerr:ZXQP8402 if the thesaurus data file's endianness does not match that of the CPU on which the software is currently running.</xqdoc:error>", "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">zerr:ZXQP8403 if there was an error reading the thesaurus data file.</xqdoc:error>" ] }, { "isDocumented" : true, "arity" : 1, "name" : "tokenize-node", "qname" : "ft:tokenize-node", "signature" : "($node as node()) as object()* external", "description" : " Tokenizes the given node and all of its descendants.\n", "summary" : "<p> Tokenizes the given node and all of its descendants.</p>", "annotation_str" : "", "annotations" : [  ], "updating" : false, "parameters" : [ { "name" : "node", "type" : "node()", "occurrence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> The node to tokenize. The node's default <a href=\"http://www.w3.org/TR/xmlschema-2/#language\">language</a> is assumed to be the one returned by <code>ft:current-lang()</code>.</div>" } ], "returns" : { "type" : "object()*", "description" : "a (possibly empty) sequence of tokens." }, "errors" : [ "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">err:FTST0009 if <code>ft:current-lang()</code> is not supported.</xqdoc:error>" ] }, { "isDocumented" : true, "arity" : 2, "name" : "tokenize-node", "qname" : "ft:tokenize-node", "signature" : "($node as node(), $lang as xs:language) as object()* external", "description" : " Tokenizes the given node and all of its decendants.\n", "summary" : "<p> Tokenizes the given node and all of its decendants.</p>", "annotation_str" : "", "annotations" : [  ], "updating" : false, "parameters" : [ { "name" : "node", "type" : "node()", "occurrence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> The node to tokenize.</div>" }, { "name" : "lang", "type" : "xs:language", "occurrence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> The default <a href=\"http://www.w3.org/TR/xmlschema-2/#language\">language</a> of <code>$node</code>.</div>" } ], "returns" : { "type" : "object()*", "description" : "a (possibly empty) sequence of tokens." }, "errors" : [ "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">err:FTST0009 if <code>$lang</code> is not supported.</xqdoc:error>" ] }, { "isDocumented" : true, "arity" : 2, "name" : "tokenize-nodes", "qname" : "ft:tokenize-nodes", "signature" : "($includes as node()+, $excludes as node()*) as object()* external", "description" : " Tokenizes the set of nodes comprising <code xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">$includes</code> (and all of its\n descendants) but excluding <code xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">$excludes</code> (and all of its\n descendants), if any.\n", "summary" : "<p> Tokenizes the set of nodes comprising  $includes  (and all of its\n descendants) but excluding  $excludes  (and all of its\n descendants), if any.</p>", "annotation_str" : "", "annotations" : [  ], "updating" : false, "parameters" : [ { "name" : "includes", "type" : "node()", "occurrence" : "+", "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> The set of nodes (and its descendants) to include. The default <a href=\"http://www.w3.org/TR/xmlschema-2/#language\">language</a> is assumed to be the one returned by <code>ft:current-lang()</code>.</div>" }, { "name" : "excludes", "type" : "node()", "occurrence" : "*", "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> The set of nodes (and its descendants) to exclude.</div>" } ], "returns" : { "type" : "object()*", "description" : "a (possibly empty) sequence of tokens." }, "errors" : [ "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">err:FTST0009 if <code>ft:current-lang()</code> is not supported.</xqdoc:error>" ] }, { "isDocumented" : true, "arity" : 3, "name" : "tokenize-nodes", "qname" : "ft:tokenize-nodes", "signature" : "($includes as node()+, $excludes as node()*, $lang as xs:language) as object()* external", "description" : " Tokenizes the set of nodes comprising <code xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">$includes</code> (and all of its\n descendants) but excluding <code xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">$excludes</code> (and all of its\n descendants), if any.\n", "summary" : "<p> Tokenizes the set of nodes comprising  $includes  (and all of its\n descendants) but excluding  $excludes  (and all of its\n descendants), if any.</p>", "annotation_str" : "", "annotations" : [  ], "updating" : false, "parameters" : [ { "name" : "includes", "type" : "node()", "occurrence" : "+", "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> The set of nodes (and its descendants) to include.</div>" }, { "name" : "excludes", "type" : "node()", "occurrence" : "*", "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> The set of nodes (and its descendants) to exclude.</div>" }, { "name" : "lang", "type" : "xs:language", "occurrence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> The default <a href=\"http://www.w3.org/TR/xmlschema-2/#language\">language</a> for nodes.</div>" } ], "returns" : { "type" : "object()*", "description" : "a (possibly empty) sequence of tokens." }, "errors" : [ "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">err:FTST0009 if <code>$lang</code> is not supported.</xqdoc:error>" ] }, { "isDocumented" : true, "arity" : 1, "name" : "tokenize-string", "qname" : "ft:tokenize-string", "signature" : "($string as xs:string) as xs:string* external", "description" : " Tokenizes the given string.\n", "summary" : "<p> Tokenizes the given string.</p>", "annotation_str" : "", "annotations" : [  ], "updating" : false, "parameters" : [ { "name" : "string", "type" : "xs:string", "occurrence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> The string to tokenize. The string's <a href=\"http://www.w3.org/TR/xmlschema-2/#language\">language</a> is assumed to be the one returned by <code>ft:current-lang()</code>.</div>" } ], "returns" : { "type" : "xs:string*", "description" : "a (possibly empty) sequence of tokens." }, "errors" : [ "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">err:FTST0009 if <code>ft:current-lang()</code> is not supported.</xqdoc:error>" ] }, { "isDocumented" : true, "arity" : 2, "name" : "tokenize-string", "qname" : "ft:tokenize-string", "signature" : "($string as xs:string, $lang as xs:language) as xs:string* external", "description" : " Tokenizes the given string.\n", "summary" : "<p> Tokenizes the given string.</p>", "annotation_str" : "", "annotations" : [  ], "updating" : false, "parameters" : [ { "name" : "string", "type" : "xs:string", "occurrence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> The string to tokenize.</div>" }, { "name" : "lang", "type" : "xs:language", "occurrence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> The <a href=\"http://www.w3.org/TR/xmlschema-2/#language\">language</a> of <code>$string</code>.</div>" } ], "returns" : { "type" : "xs:string*", "description" : "a (possibly empty) sequence of tokens." }, "errors" : [ "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">err:FTST0009 if <code>$lang</code> is not supported.</xqdoc:error>" ] }, { "isDocumented" : true, "arity" : 0, "name" : "tokenizer-properties", "qname" : "ft:tokenizer-properties", "signature" : "() as object() external", "description" : " Gets properties of the tokenizer for the\n <a xmlns:xqdoc=\"http://www.xqdoc.org/1.0\" href=\"http://www.w3.org/TR/xmlschema-2/#language\">language</a>\n returned by <code xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">ft:current-lang()</code>.\n", "summary" : "<p> Gets properties of the tokenizer for the\n  language \n returned by  ft:current-lang() .</p>", "annotation_str" : "", "annotations" : [  ], "updating" : false, "parameters" : [  ], "returns" : { "type" : "object()", "description" : "said properties." }, "errors" : [ "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">err:FTST0009 if <code>ft:current-lang()</code> is not supported.</xqdoc:error>" ] }, { "isDocumented" : true, "arity" : 1, "name" : "tokenizer-properties", "qname" : "ft:tokenizer-properties", "signature" : "($lang as xs:language) as object() external", "description" : " Gets properties of the tokenizer for the given\n <a xmlns:xqdoc=\"http://www.xqdoc.org/1.0\" href=\"http://www.w3.org/TR/xmlschema-2/#language\">language</a>.\n", "summary" : "<p> Gets properties of the tokenizer for the given\n  language .</p>", "annotation_str" : "", "annotations" : [  ], "updating" : false, "parameters" : [ { "name" : "lang", "type" : "xs:language", "occurrence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> The language of the tokenizer to get the properties of.</div>" } ], "returns" : { "type" : "object()", "description" : "said properties." }, "errors" : [ "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">err:FTST0009 if <code>$lang</code> is not supported. tokenization specifically.</xqdoc:error>" ] } ], "variables" : [ { "name" : "ft:LANG-DA", "type" : "xs:language", "description" : " Predeclared constant for the Danish\n <a xmlns:xqdoc=\"http://www.xqdoc.org/1.0\" href=\"http://www.w3.org/TR/xmlschema-2/#language\"><code>xs:language</code></a>.\n" }, { "name" : "ft:LANG-DE", "type" : "xs:language", "description" : " Predeclared constant for the German\n <a xmlns:xqdoc=\"http://www.xqdoc.org/1.0\" href=\"http://www.w3.org/TR/xmlschema-2/#language\"><code>xs:language</code></a>.\n" }, { "name" : "ft:LANG-EN", "type" : "xs:language", "description" : " Predeclared constant for the English\n <a xmlns:xqdoc=\"http://www.xqdoc.org/1.0\" href=\"http://www.w3.org/TR/xmlschema-2/#language\"><code>xs:language</code></a>.\n" }, { "name" : "ft:LANG-ES", "type" : "xs:language", "description" : " Predeclared constant for the Spanish\n <a xmlns:xqdoc=\"http://www.xqdoc.org/1.0\" href=\"http://www.w3.org/TR/xmlschema-2/#language\"><code>xs:language</code></a>.\n" }, { "name" : "ft:LANG-FI", "type" : "xs:language", "description" : " Predeclared constant for the Finnish\n <a xmlns:xqdoc=\"http://www.xqdoc.org/1.0\" href=\"http://www.w3.org/TR/xmlschema-2/#language\"><code>xs:language</code></a>.\n" }, { "name" : "ft:LANG-FR", "type" : "xs:language", "description" : " Predeclared constant for the French\n <a xmlns:xqdoc=\"http://www.xqdoc.org/1.0\" href=\"http://www.w3.org/TR/xmlschema-2/#language\"><code>xs:language</code></a>.\n" }, { "name" : "ft:LANG-HU", "type" : "xs:language", "description" : " Predeclared constant for the Hungarian\n <a xmlns:xqdoc=\"http://www.xqdoc.org/1.0\" href=\"http://www.w3.org/TR/xmlschema-2/#language\"><code>xs:language</code></a>.\n" }, { "name" : "ft:LANG-IT", "type" : "xs:language", "description" : " Predeclared constant for the Italian\n <a xmlns:xqdoc=\"http://www.xqdoc.org/1.0\" href=\"http://www.w3.org/TR/xmlschema-2/#language\"><code>xs:language</code></a>.\n" }, { "name" : "ft:LANG-NL", "type" : "xs:language", "description" : " Predeclared constant for the Dutch\n <a xmlns:xqdoc=\"http://www.xqdoc.org/1.0\" href=\"http://www.w3.org/TR/xmlschema-2/#language\"><code>xs:language</code></a>.\n" }, { "name" : "ft:LANG-NO", "type" : "xs:language", "description" : " Predeclared constant for the Norwegian\n <a xmlns:xqdoc=\"http://www.xqdoc.org/1.0\" href=\"http://www.w3.org/TR/xmlschema-2/#language\"><code>xs:language</code></a>.\n" }, { "name" : "ft:LANG-PT", "type" : "xs:language", "description" : " Predeclared constant for the Portuguese\n <a xmlns:xqdoc=\"http://www.xqdoc.org/1.0\" href=\"http://www.w3.org/TR/xmlschema-2/#language\"><code>xs:language</code></a>.\n" }, { "name" : "ft:LANG-RO", "type" : "xs:language", "description" : " Predeclared constant for the Romanian\n <a xmlns:xqdoc=\"http://www.xqdoc.org/1.0\" href=\"http://www.w3.org/TR/xmlschema-2/#language\"><code>xs:language</code></a>.\n" }, { "name" : "ft:LANG-RU", "type" : "xs:language", "description" : " Predeclared constant for the Russian\n <a xmlns:xqdoc=\"http://www.xqdoc.org/1.0\" href=\"http://www.w3.org/TR/xmlschema-2/#language\"><code>xs:language</code></a>.\n" }, { "name" : "ft:LANG-SV", "type" : "xs:language", "description" : " Predeclared constant for the Swedish\n <a xmlns:xqdoc=\"http://www.xqdoc.org/1.0\" href=\"http://www.w3.org/TR/xmlschema-2/#language\"><code>xs:language</code></a>.\n" }, { "name" : "ft:LANG-TR", "type" : "xs:language", "description" : " Predeclared constant for the Turkish\n <a xmlns:xqdoc=\"http://www.xqdoc.org/1.0\" href=\"http://www.w3.org/TR/xmlschema-2/#language\"><code>xs:language</code></a>.\n" } ] }, "http://www.zorba-xquery.com/modules/jdbc" : { "ns" : "http://www.zorba-xquery.com/modules/jdbc", "description" : " This module contains functions to connect to any JDBC datasource\n using jvm-util module to handle Java interaction.\n <h2 xmlns:xqdoc=\"http://www.xqdoc.org/1.0\" id=\"determinism\">Important Notice Regarding Function Determinism</h2>\n <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">The non side-effecting functions:\n <ul>\n   <li><a href=\"?anchor=connect-1\">connect#1</a></li>\n   <li><a href=\"?anchor=connect-2\">connect#2</a></li>\n   <li><a href=\"?anchor=execute-query-2\">execute-query#2</a></li>\n   <li><a href=\"?anchor=execute-query-prepared-1\">execute-query-prepared#1</a></li>\n   <li><a href=\"?anchor=tables-1\">tables#1</a></li>\n   <li><a href=\"?anchor=tables-4\">tables#4</a></li>\n </ul>\n are declared deterministic, which means that their results could be cached\n when invoked multiple times with the same arguments in the same query execution.</p>\n <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">To not use cached results you can use the following alternative functions:\n <ul>\n   <li><a href=\"?anchor=connect-notdeterministic-0\">connect-notdeterministic#0</a></li>\n   <li><a href=\"?anchor=connect-notdeterministic-1\">connect-notdeterministic#1</a></li>\n   <li><a href=\"?anchor=connect-notdeterministic-2\">connect-notdeterministic#2</a></li>\n   <li><a href=\"?anchor=execute-query-notdeterministic-2\">execute-query-notdeterministic#2</a></li>\n   <li><a href=\"?anchor=execute-query-prepared-notdeterministic-1\">execute-query-prepared-notdeterministic#1</a></li>\n   <li><a href=\"?anchor=tables-notdeterministic-1\">tables-notdeterministic#1</a></li>\n   <li><a href=\"?anchor=tables-notdeterministic-4\">tables-notdeterministic#4</a></li>\n </ul>\n which have been declared as being non deterministic.</p>\n", "sees" : [  ], "authors" : [ "<xqdoc:author xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">Rodolfo Ochoa</xqdoc:author>", "<xqdoc:author xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">Federico Cavalieri</xqdoc:author>" ], "version" : null, "encoding" : "utf-8", "namespaces" : [ { "uri" : "http://zorba.io/annotations", "prefix" : "an" }, { "uri" : "http://www.w3.org/2005/xqt-errors", "prefix" : "err" }, { "uri" : "http://www.zorba-xquery.com/modules/jdbc", "prefix" : "jdbc" }, { "uri" : "http://zorba.io/options/versioning", "prefix" : "ver" } ], "functions" : [ { "isDocumented" : true, "arity" : 1, "name" : "affected-rows", "qname" : "jdbc:affected-rows", "signature" : "($dataset-id as xs:anyURI) as xs:integer external", "description" : " Return the number of affected rows of a particular DataSet.\n", "summary" : "<p> Return the number of affected rows of a particular DataSet.</p>", "annotation_str" : "", "annotations" : [  ], "updating" : false, "parameters" : [ { "name" : "dataset-id", "type" : "xs:anyURI", "occurrence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> The identifier to a DataSet.</div>" } ], "returns" : { "type" : "xs:integer", "description" : "Returns an xs:integer with the number of affected rows." }, "errors" : [ "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">SQL008 DataSet doesn't exist.</xqdoc:error>", "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">SQL08000 Connection is closed.</xqdoc:error>", "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">SQL001 Descriptive error, see error in attached message.</xqdoc:error>" ] }, { "isDocumented" : true, "arity" : 1, "name" : "clear-params", "qname" : "jdbc:clear-params", "signature" : "($prepared-statement as xs:anyURI) as empty-sequence() external", "description" : " Clears the current parameter values immediately.\n", "summary" : "<p> Clears the current parameter values immediately.</p>", "annotation_str" : " %an:sequential", "annotations" : [ { "prefix" : "an", "ns" : "http://zorba.io/annotations", "name" : "sequential", "value" : "" } ], "updating" : false, "parameters" : [ { "name" : "prepared-statement", "type" : "xs:anyURI", "occurrence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> The identifier to a prepared statement.</div>" } ], "returns" : { "type" : "empty-sequence()", "description" : "This function returns an empty-sequence()" }, "errors" : [ "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">SQL003 Prepared statement doesn't exist.</xqdoc:error>", "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">SQL08000 Connection is closed.</xqdoc:error>", "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">SQL001 Descriptive error, see error in attached message.</xqdoc:error>" ] }, { "isDocumented" : true, "arity" : 1, "name" : "close-dataset", "qname" : "jdbc:close-dataset", "signature" : "($dataset-id as xs:anyURI) as empty-sequence() external", "description" : " Closes and free resources from a particular DataSet.\n", "summary" : "<p> Closes and free resources from a particular DataSet.</p>", "annotation_str" : " %an:sequential", "annotations" : [ { "prefix" : "an", "ns" : "http://zorba.io/annotations", "name" : "sequential", "value" : "" } ], "updating" : false, "parameters" : [ { "name" : "dataset-id", "type" : "xs:anyURI", "occurrence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> The identifier to a DataSet.</div>" } ], "returns" : { "type" : "empty-sequence()", "description" : "This function returns an empty-sequence()" }, "errors" : [ "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">SQL008 DataSet doesn't exist.</xqdoc:error>", "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">SQL08000 Connection is closed.</xqdoc:error>", "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">SQL001 Descriptive error, see error in attached message.</xqdoc:error>" ] }, { "isDocumented" : true, "arity" : 1, "name" : "close-prepared", "qname" : "jdbc:close-prepared", "signature" : "($prepared-statement as xs:anyURI) as empty-sequence() external", "description" : " Closes and frees from memory any prepared SQL statement created with jdbc:prepare-statement\n", "summary" : "<p> Closes and frees from memory any prepared SQL statement created with jdbc:prepare-statement\n</p>", "annotation_str" : " %an:sequential", "annotations" : [ { "prefix" : "an", "ns" : "http://zorba.io/annotations", "name" : "sequential", "value" : "" } ], "updating" : false, "parameters" : [ { "name" : "prepared-statement", "type" : "xs:anyURI", "occurrence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> The identifier to a prepared statement.</div>" } ], "returns" : { "type" : "empty-sequence()", "description" : "This function returns an empty-sequence()" }, "errors" : [ "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">SQL003 Prepared statement doesn't exist.</xqdoc:error>", "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">SQL08000 Connection is closed.</xqdoc:error>", "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">SQL001 Descriptive error, see error in attached message.</xqdoc:error>" ] }, { "isDocumented" : true, "arity" : 1, "name" : "commit", "qname" : "jdbc:commit", "signature" : "($connection-id as xs:anyURI) as empty-sequence() external", "description" : " Commit current transaction from an active connection.\n", "summary" : "<p> Commit current transaction from an active connection.</p>", "annotation_str" : " %an:sequential", "annotations" : [ { "prefix" : "an", "ns" : "http://zorba.io/annotations", "name" : "sequential", "value" : "" } ], "updating" : false, "parameters" : [ { "name" : "connection-id", "type" : "xs:anyURI", "occurrence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> The identifier to the connection to be commited.</div>" } ], "returns" : { "type" : "empty-sequence()", "description" : "This function returns an empty-sequence()" }, "errors" : [ "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">SQL08003 Connection doesn't exist</xqdoc:error>", "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">SQL08000 Connection is closed</xqdoc:error>", "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">SQL001 Descriptive error, see error in attached message</xqdoc:error>" ] }, { "isDocumented" : true, "arity" : 1, "name" : "connect-nondeterministic", "qname" : "jdbc:connect-nondeterministic", "signature" : "($connection-config as object()) as xs:anyURI external", "description" : " Opens a connection to a database.\n <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">This function has the same semantics as <a href=\"#connect-1\">connect#1</a>,\n but is declared as being non deterministic and thus should only be used when\n result caching is not desired.</p>\n", "summary" : "<p> Opens a connection to a database.</p>", "annotation_str" : " %an:nondeterministic", "annotations" : [ { "prefix" : "an", "ns" : "http://zorba.io/annotations", "name" : "nondeterministic", "value" : "" } ], "updating" : false, "parameters" : [ { "name" : "connection-config", "type" : "object()", "occurrence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> json object that has the host and user informations.</div>" } ], "returns" : { "type" : "xs:anyURI", "description" : "Return an identifier that represents the connection to the server." }, "errors" : [ "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">SQL28000 Authentication failed.</xqdoc:error>", "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">SQL08001 Connection error.</xqdoc:error>", "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">SQL40003 Isolation level not supported.</xqdoc:error>", "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">SQL001 Descriptive error, see attached message.</xqdoc:error>" ] }, { "isDocumented" : true, "arity" : 2, "name" : "connect-nondeterministic", "qname" : "jdbc:connect-nondeterministic", "signature" : "($connection-config as object(), $options as object()?) as xs:anyURI external", "description" : " Opens a connection to a database with specified options.\n <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">This function has the same semantics as <a href=\"#connect-2\">connect#2</a>,\n but is declared as being non deterministic and thus should only be used when\n result caching is not desired.</p>\n", "summary" : "<p> Opens a connection to a database with specified options.</p>", "annotation_str" : " %an:nondeterministic", "annotations" : [ { "prefix" : "an", "ns" : "http://zorba.io/annotations", "name" : "nondeterministic", "value" : "" } ], "updating" : false, "parameters" : [ { "name" : "connection-config", "type" : "object()", "occurrence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> json object that has the host and user informations.</div>" }, { "name" : "options", "type" : "object()", "occurrence" : "?", "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> json object that specifies the connection options.</div>" } ], "returns" : { "type" : "xs:anyURI", "description" : "Return an identifier that represents the connection to the server." }, "errors" : [ "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">SQL28000 Authentication failed.</xqdoc:error>", "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">SQL08001 Connection error.</xqdoc:error>", "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">SQL40003 Isolation level not supported.</xqdoc:error>", "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">SQL001 Descriptive error, see error in attached message.</xqdoc:error>" ] }, { "isDocumented" : true, "arity" : 1, "name" : "connect", "qname" : "jdbc:connect", "signature" : "($connection-config as object()) as xs:anyURI external", "description" : " Opens a connection to a database.\n <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">This function is declared as deterministic and should be used whenever result\n caching is acceptable.</p>\n <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">Returns a URI identifying the connection that has been opened. The\n implementing code determines from the $connection-config either explicitly\n (interpreting the driver attribute) or implicitly (using the type attribute)\n which driver it has to load.</p>\n", "summary" : "<p> Opens a connection to a database.</p>", "annotation_str" : "", "annotations" : [  ], "updating" : false, "parameters" : [ { "name" : "connection-config", "type" : "object()", "occurrence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> json object that has the host and user informations.</div>" } ], "returns" : { "type" : "xs:anyURI", "description" : "Return an identifier that represents the connection to the server. Connection coonfiguration example: { \"url\" : \"jdbc:mysql://localhost/\", \"user\" : \"root\", \"password\" : \"\" }" }, "errors" : [ "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">SQL28000 Authentication failed.</xqdoc:error>", "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">SQL08001 Connection error.</xqdoc:error>", "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">SQL40003 Isolation level not supported.</xqdoc:error>", "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">SQL001 Descriptive error, see attached message.</xqdoc:error>" ] }, { "isDocumented" : true, "arity" : 2, "name" : "connect", "qname" : "jdbc:connect", "signature" : "($connection-config as object(), $options as object()?) as xs:anyURI external", "description" : " Opens a connection to a database with specified options.\n <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">This function is declared as deterministic and should be used whenever result\n caching is acceptable.</p>\n <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">Returns a URI identifying the connection that has been opened. The\n implementing code determines from the $connection-config either explicitly\n (interpreting the driver attribute) or implicitly (using the type attribute)\n which driver it has to load.</p>\n", "summary" : "<p> Opens a connection to a database with specified options.</p>", "annotation_str" : "", "annotations" : [  ], "updating" : false, "parameters" : [ { "name" : "connection-config", "type" : "object()", "occurrence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> json object that has the host and user informations.</div>" }, { "name" : "options", "type" : "object()", "occurrence" : "?", "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> json object that specifies the connection options.</div>" } ], "returns" : { "type" : "xs:anyURI", "description" : "Return an identifier that represents the connection to the server. Connection options example: { \"autocommit\" : false, \"readonly\"? : true, \"isolation-level\"? : $jdbc:READ-COMMITTED }" }, "errors" : [ "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">SQL28000 Authentication failed.</xqdoc:error>", "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">SQL08001 Connection error.</xqdoc:error>", "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">SQL40003 Isolation level not supported.</xqdoc:error>", "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">SQL001 Descriptive error, see error in attached message.</xqdoc:error>" ] }, { "isDocumented" : true, "arity" : 1, "name" : "connection-options", "qname" : "jdbc:connection-options", "signature" : "($connection-id as xs:anyURI) as object() external", "description" : " Returns a set with options for a specified connection.\n", "summary" : "<p> Returns a set with options for a specified connection.</p>", "annotation_str" : "", "annotations" : [  ], "updating" : false, "parameters" : [ { "name" : "connection-id", "type" : "xs:anyURI", "occurrence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> The identifier to the connection to be verify.</div>" } ], "returns" : { "type" : "object()", "description" : "Returns and object with the connection options. The returned options are equal to the options specified in function jdbc:connect. Consequently, the options are specified as follows: { \"autocommit\" : xs:boolean, \"readonly\" : xs:boolean, \"isolation-level\" : xs:string }" }, "errors" : [ "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">SQL08003 Connection doesn't exist</xqdoc:error>", "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">SQL08000 Connection is closed</xqdoc:error>", "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">SQL001 Descriptive error, see error in attached message</xqdoc:error>" ] }, { "isDocumented" : true, "arity" : 1, "name" : "execute-prepared", "qname" : "jdbc:execute-prepared", "signature" : "($prepared-statement as xs:anyURI) as xs:anyURI external", "description" : " Executes SQL statements prepared with 5.1 jsql:prepare-statement with values set\n and returns an identifier to a Dataset.\n", "summary" : "<p> Executes SQL statements prepared with 5.</p>", "annotation_str" : " %an:sequential", "annotations" : [ { "prefix" : "an", "ns" : "http://zorba.io/annotations", "name" : "sequential", "value" : "" } ], "updating" : false, "parameters" : [ { "name" : "prepared-statement", "type" : "xs:anyURI", "occurrence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> The identifier to a prepared statement.</div>" } ], "returns" : { "type" : "xs:anyURI", "description" : "Return an identifier that represents a DataSet." }, "errors" : [ "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">SQL003 Prepared statement doesn't exist.</xqdoc:error>", "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">SQL08000 Connection is closed.</xqdoc:error>", "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">SQL001 Descriptive error, see error in attached message.</xqdoc:error>" ] }, { "isDocumented" : true, "arity" : 2, "name" : "execute-query-nondeterministic", "qname" : "jdbc:execute-query-nondeterministic", "signature" : "($connection-id as xs:anyURI, $sql as xs:string) as object()* external", "description" : " Executes non-updating SQL statements.\n <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">This function has the same semantics as\n <a href=\"#execute-query-2\">execute-query#2</a>,\n but is declared as being non deterministic and thus should only be used when\n result caching is not desired.</p>\n", "summary" : "<p> Executes non-updating SQL statements.</p>", "annotation_str" : " %an:nondeterministic", "annotations" : [ { "prefix" : "an", "ns" : "http://zorba.io/annotations", "name" : "nondeterministic", "value" : "" } ], "updating" : false, "parameters" : [ { "name" : "connection-id", "type" : "xs:anyURI", "occurrence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> The identifier to an active connection.</div>" }, { "name" : "sql", "type" : "xs:string", "occurrence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> The query string to be executed.</div>" } ], "returns" : { "type" : "object()*", "description" : "Return an object with the result data rows from the query provided, the data rows are defined as follows: { column:value* }* Every row is represented by an object of column-value representation of the returned SQL result." }, "errors" : [ "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">SQL08003 Connection doesn't exist.</xqdoc:error>", "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">SQL08000 Connection is closed.</xqdoc:error>", "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">SQL005 The statement is Updating type.</xqdoc:error>", "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">SQL001 Descriptive error, see error in attached message.</xqdoc:error>" ] }, { "isDocumented" : true, "arity" : 1, "name" : "execute-query-prepared-nondeterministic", "qname" : "jdbc:execute-query-prepared-nondeterministic", "signature" : "($prepared-statement as xs:anyURI) as object()* external", "description" : " Executes a non-updating SQL statement prepared with 5.1 jsql:prepare-statement.\n <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">This function has the same semantics as\n <a href=\"#execute-query-prepared-1\">execute-query-prepared#1</a>,\n but is declared as being non deterministic and thus should only be used when\n result caching is not desired.</p>\n", "summary" : "<p> Executes a non-updating SQL statement prepared with 5.</p>", "annotation_str" : " %an:nondeterministic", "annotations" : [ { "prefix" : "an", "ns" : "http://zorba.io/annotations", "name" : "nondeterministic", "value" : "" } ], "updating" : false, "parameters" : [ { "name" : "prepared-statement", "type" : "xs:anyURI", "occurrence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> The identifier to a prepared statement.</div>" } ], "returns" : { "type" : "object()*", "description" : "Return an object with the result data rows from the query processed with the parameter values provided, the data rows are defined as follows: { column:value* }* Every row is represented by an object of column-value representation of the returned SQL result." }, "errors" : [ "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">SQL003 Prepared statement doesn't exist.</xqdoc:error>", "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">SQL005 The prepared statement is an updating query.</xqdoc:error>", "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">SQL08000 Connection is closed.</xqdoc:error>", "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">SQL001 Descriptive error, see error in attached message.</xqdoc:error>" ] }, { "isDocumented" : true, "arity" : 1, "name" : "execute-query-prepared", "qname" : "jdbc:execute-query-prepared", "signature" : "($prepared-statement as xs:anyURI) as object()* external", "description" : " Executes a non-updating SQL statement prepared with 5.1 jsql:prepare-statement.\n <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">This function is declared as deterministic and should be used whenever result\n caching is acceptable.</p>\n", "summary" : "<p> Executes a non-updating SQL statement prepared with 5.</p>", "annotation_str" : "", "annotations" : [  ], "updating" : false, "parameters" : [ { "name" : "prepared-statement", "type" : "xs:anyURI", "occurrence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> The identifier to a prepared statement.</div>" } ], "returns" : { "type" : "object()*", "description" : "Return an object with the result data rows from the query processed with the parameter values provided, the data rows are defined as follows: { column:value* }* Every row is represented by an object of column-value representation of the returned SQL result." }, "errors" : [ "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">SQL003 Prepared statement doesn't exist.</xqdoc:error>", "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">SQL005 The prepared statement is an updating query.</xqdoc:error>", "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">SQL08000 Connection is closed.</xqdoc:error>", "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">SQL001 Descriptive error, see error in attached message.</xqdoc:error>" ] }, { "isDocumented" : true, "arity" : 2, "name" : "execute-query", "qname" : "jdbc:execute-query", "signature" : "($connection-id as xs:anyURI, $sql as xs:string) as object()* external", "description" : " Executes non-updating SQL statements.\n <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">This function is declared as deterministic and should be used whenever result\n caching is acceptable.</p>\n", "summary" : "<p> Executes non-updating SQL statements.</p>", "annotation_str" : "", "annotations" : [  ], "updating" : false, "parameters" : [ { "name" : "connection-id", "type" : "xs:anyURI", "occurrence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> The identifier to an active connection.</div>" }, { "name" : "sql", "type" : "xs:string", "occurrence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> The query string to be executed.</div>" } ], "returns" : { "type" : "object()*", "description" : "Return an object with the result data rows from the query provided, the data rows are defined as follows: { column:value* }* Every row is represented by an object of column-value representation of the returned SQL result." }, "errors" : [ "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">SQL08003 Connection doesn't exist.</xqdoc:error>", "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">SQL08000 Connection is closed.</xqdoc:error>", "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">SQL005 The statement is Updating type.</xqdoc:error>", "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">SQL001 Descriptive error, see error in attached message.</xqdoc:error>" ] }, { "isDocumented" : true, "arity" : 1, "name" : "execute-update-prepared", "qname" : "jdbc:execute-update-prepared", "signature" : "($prepared-statement as xs:anyURI) as xs:integer external", "description" : " Executes an updating SQL statement prepared with 5.1 jsql:prepare-statement.\n", "summary" : "<p> Executes an updating SQL statement prepared with 5.</p>", "annotation_str" : " %an:sequential", "annotations" : [ { "prefix" : "an", "ns" : "http://zorba.io/annotations", "name" : "sequential", "value" : "" } ], "updating" : false, "parameters" : [ { "name" : "prepared-statement", "type" : "xs:anyURI", "occurrence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> The identifier to a prepared statement.</div>" } ], "returns" : { "type" : "xs:integer", "description" : "Returns an xs:integer with the number of affected rows." }, "errors" : [ "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">SQL003 Prepared statement doesn't exist.</xqdoc:error>", "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">SQL006 The prepared statement is a non-updating query.</xqdoc:error>", "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">SQL08000 Connection is closed.</xqdoc:error>", "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">SQL001 Descriptive error, see error in attached message.</xqdoc:error>" ] }, { "isDocumented" : true, "arity" : 2, "name" : "execute-update", "qname" : "jdbc:execute-update", "signature" : "($connection-id as xs:anyURI, $sql as xs:string) as xs:integer external", "description" : " Executes updating SQL statements.\n", "summary" : "<p> Executes updating SQL statements.</p>", "annotation_str" : " %an:sequential", "annotations" : [ { "prefix" : "an", "ns" : "http://zorba.io/annotations", "name" : "sequential", "value" : "" } ], "updating" : false, "parameters" : [ { "name" : "connection-id", "type" : "xs:anyURI", "occurrence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> The identifier to an active connection.</div>" }, { "name" : "sql", "type" : "xs:string", "occurrence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> The query string to be executed.</div>" } ], "returns" : { "type" : "xs:integer", "description" : "Returns an xs:integer with the number of affected rows." }, "errors" : [ "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">SQL08003 Connection doesn't exist.</xqdoc:error>", "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">SQL08000 Connection is closed.</xqdoc:error>", "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">SQL005 The statement is Read-only type.</xqdoc:error>", "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">SQL001 Descriptive error, see error in attached message.</xqdoc:error>" ] }, { "isDocumented" : true, "arity" : 2, "name" : "execute", "qname" : "jdbc:execute", "signature" : "($connection-id as xs:anyURI, $sql as xs:string) as xs:anyURI external", "description" : " Executes any kind of SQL statement.\n", "summary" : "<p> Executes any kind of SQL statement.</p>", "annotation_str" : " %an:sequential", "annotations" : [ { "prefix" : "an", "ns" : "http://zorba.io/annotations", "name" : "sequential", "value" : "" } ], "updating" : false, "parameters" : [ { "name" : "connection-id", "type" : "xs:anyURI", "occurrence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> The identifier to an active connection.</div>" }, { "name" : "sql", "type" : "xs:string", "occurrence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> The query string to be executed.</div>" } ], "returns" : { "type" : "xs:anyURI", "description" : "Return an identifier that represents a DataSet." }, "errors" : [ "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">SQL08003 Connection doesn't exist.</xqdoc:error>", "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">SQL08000 Connection is closed.</xqdoc:error>", "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">SQL001 Descriptive error, see error in attached message.</xqdoc:error>" ] }, { "isDocumented" : true, "arity" : 1, "name" : "is-connected", "qname" : "jdbc:is-connected", "signature" : "($connection-id as xs:anyURI) as xs:boolean external", "description" : " Verify if a connection is still active.\n", "summary" : "<p> Verify if a connection is still active.</p>", "annotation_str" : "", "annotations" : [  ], "updating" : false, "parameters" : [ { "name" : "connection-id", "type" : "xs:anyURI", "occurrence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> The identifier to the connection to be verify.</div>" } ], "returns" : { "type" : "xs:boolean", "description" : "Returns true if connected." }, "errors" : [ "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">SQL08003 Connection doesn't exist</xqdoc:error>", "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">SQL001 Descriptive error, see error in attached message</xqdoc:error>" ] }, { "isDocumented" : true, "arity" : 1, "name" : "metadata", "qname" : "jdbc:metadata", "signature" : "($dataset-id as xs:anyURI) as object() external", "description" : " Return the metadata of the result of a particular DataSet.\n", "summary" : "<p> Return the metadata of the result of a particular DataSet.</p>", "annotation_str" : "", "annotations" : [  ], "updating" : false, "parameters" : [ { "name" : "dataset-id", "type" : "xs:anyURI", "occurrence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> The identifier to a DataSet.</div>" } ], "returns" : { "type" : "object()", "description" : "This function returns the metadata associated with an executed DataSet. More in detail, it returns information about column names, types, and whether a column can contain a null value. The metadata information can only be returned for DataSets that have been executed explicitly using the jsql:execute function. The metadata node returned by this function is defined as follows: { \"columns\": [ { \"name\": xs:string, \"type\": xs:string, \"autoincrement\"? = xs:boolean, \"nillable\"? = xs:boolean } * ] }" }, "errors" : [ "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">SQL008 DataSet doesn't exist.</xqdoc:error>", "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">SQL08000 Connection is closed.</xqdoc:error>", "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">SQL001 Descriptive error, see error in attached message.</xqdoc:error>" ] }, { "isDocumented" : true, "arity" : 1, "name" : "parameter-metadata", "qname" : "jdbc:parameter-metadata", "signature" : "($prepared-statement as xs:anyURI) as object() external", "description" : " Retrieves the number, types and properties of the prepared statement parameters.\n", "summary" : "<p> Retrieves the number, types and properties of the prepared statement parameters.</p>", "annotation_str" : "", "annotations" : [  ], "updating" : false, "parameters" : [ { "name" : "prepared-statement", "type" : "xs:anyURI", "occurrence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> The identifier to a prepared statement.</div>" } ], "returns" : { "type" : "object()", "description" : "This function returns the parameters metadata associated with a prepared statement. In other words, it returns information about the column name associated with the parameter, the type, etc. The metadata node returned by this function is defined as follows: { columns: [{ \"name\": xs:string, \"type\": xs:string }] }" }, "errors" : [ "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">SQL003 Prepared statement doesn't exist.</xqdoc:error>", "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">SQL08000 Connection is closed.</xqdoc:error>", "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">SQL001 Descriptive error, see error in attached message.</xqdoc:error>" ] }, { "isDocumented" : true, "arity" : 2, "name" : "prepare-statement", "qname" : "jdbc:prepare-statement", "signature" : "($connection-id as xs:anyURI, $sql as xs:string) as xs:anyURI external", "description" : "  Creates a prepared statement for multiple executions with diferent values.\n", "summary" : "<p>  Creates a prepared statement for multiple executions with diferent values.</p>", "annotation_str" : " %an:sequential", "annotations" : [ { "prefix" : "an", "ns" : "http://zorba.io/annotations", "name" : "sequential", "value" : "" } ], "updating" : false, "parameters" : [ { "name" : "connection-id", "type" : "xs:anyURI", "occurrence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> The identifier to an active connection.</div>" }, { "name" : "sql", "type" : "xs:string", "occurrence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> The query string to be executed.</div>" } ], "returns" : { "type" : "xs:anyURI", "description" : "Return an identifier that represents the prepared statement. Example: jsql:prepare-statement($connection, \"SELECT * FROM users WHERE id=? AND age&gt;?\")" }, "errors" : [ "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">SQL08003 Connection doesn't exist.</xqdoc:error>", "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">SQL08000 Connection is closed.</xqdoc:error>", "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">SQL001 Descriptive error, see error in attached message.</xqdoc:error>" ] }, { "isDocumented" : true, "arity" : 1, "name" : "result-set", "qname" : "jdbc:result-set", "signature" : "($dataset-id as xs:anyURI) as object()* external", "description" : " This function returns a sequence of objects representing the rows of data from a non-updating query.\n", "summary" : "<p> This function returns a sequence of objects representing the rows of data from a non-updating query.</p>", "annotation_str" : "", "annotations" : [  ], "updating" : false, "parameters" : [ { "name" : "dataset-id", "type" : "xs:anyURI", "occurrence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> The identifier to a DataSet.</div>" } ], "returns" : { "type" : "object()*", "description" : "Return an object with the result data rows from the DataSet provided, the data rows are defined as follows: { column:value* }* Every row is represented by an object of column-value representation of the returned SQL result." }, "errors" : [ "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">SQL008 DataSet doesn't exist.</xqdoc:error>", "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">SQL08000 Connection is closed.</xqdoc:error>", "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">SQL001 Descriptive error, see error in attached message.</xqdoc:error>" ] }, { "isDocumented" : true, "arity" : 1, "name" : "rollback", "qname" : "jdbc:rollback", "signature" : "($connection-id as xs:anyURI) as empty-sequence() external", "description" : " Rollback the current transaction of a connection.\n", "summary" : "<p> Rollback the current transaction of a connection.</p>", "annotation_str" : " %an:sequential", "annotations" : [ { "prefix" : "an", "ns" : "http://zorba.io/annotations", "name" : "sequential", "value" : "" } ], "updating" : false, "parameters" : [ { "name" : "connection-id", "type" : "xs:anyURI", "occurrence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> The identifier to the connection to be rollbacked.</div>" } ], "returns" : { "type" : "empty-sequence()", "description" : "This function returns an empty-sequence()" }, "errors" : [ "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">SQL08003 Connection doesn't exist</xqdoc:error>", "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">SQL08000 Connection is closed</xqdoc:error>", "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">SQL001 Descriptive error, see error in attached message</xqdoc:error>" ] }, { "isDocumented" : true, "arity" : 3, "name" : "set-boolean", "qname" : "jdbc:set-boolean", "signature" : "($prepared-statement as xs:anyURI, $parameter-index as xs:integer, $value as xs:boolean) as empty-sequence() external", "description" : " Set the value of the designated parameter with the given value, this function will assign only boolean values.\n", "summary" : "<p> Set the value of the designated parameter with the given value, this function will assign only boolean values.</p>", "annotation_str" : " %an:sequential", "annotations" : [ { "prefix" : "an", "ns" : "http://zorba.io/annotations", "name" : "sequential", "value" : "" } ], "updating" : false, "parameters" : [ { "name" : "prepared-statement", "type" : "xs:anyURI", "occurrence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> The identifier to a prepared statement.</div>" }, { "name" : "parameter-index", "type" : "xs:integer", "occurrence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> The index from the parameter to be set.</div>" }, { "name" : "value", "type" : "xs:boolean", "occurrence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> The value to be set.</div>" } ], "returns" : { "type" : "empty-sequence()", "description" : "This function returns an empty-sequence()" }, "errors" : [ "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">SQL003 Prepared statement doesn't exist.</xqdoc:error>", "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">SQL007 Parameter casting error.</xqdoc:error>", "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">SQL08000 Connection is closed.</xqdoc:error>", "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">SQL001 Descriptive error, see error in attached message.</xqdoc:error>" ] }, { "isDocumented" : true, "arity" : 2, "name" : "set-null", "qname" : "jdbc:set-null", "signature" : "($prepared-statement as xs:anyURI, $parameter-index as xs:integer) as empty-sequence() external", "description" : " Set the value of the designated parameter with the given value, this function\n will assign only null values if possible.\n", "summary" : "<p> Set the value of the designated parameter with the given value, this function\n will assign only null values if possible.</p>", "annotation_str" : " %an:sequential", "annotations" : [ { "prefix" : "an", "ns" : "http://zorba.io/annotations", "name" : "sequential", "value" : "" } ], "updating" : false, "parameters" : [ { "name" : "prepared-statement", "type" : "xs:anyURI", "occurrence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> The identifier to a prepared statement.</div>" }, { "name" : "parameter-index", "type" : "xs:integer", "occurrence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> The index from the parameter to be set.</div>" } ], "returns" : { "type" : "empty-sequence()", "description" : "This function returns an empty-sequence()" }, "errors" : [ "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">SQL003 Prepared statement doesn't exist.</xqdoc:error>", "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">SQL007 Parameter casting error.</xqdoc:error>", "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">SQL08000 Connection is closed.</xqdoc:error>", "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">SQL001 Descriptive error, see error in attached message.</xqdoc:error>" ] }, { "isDocumented" : true, "arity" : 3, "name" : "set-numeric", "qname" : "jdbc:set-numeric", "signature" : "($prepared-statement as xs:anyURI, $parameter-index as xs:decimal, $value as xs:anyAtomicType) as empty-sequence() external", "description" : " Set the value of the designated parameter with the given value, this function will assign only numeric values.\n", "summary" : "<p> Set the value of the designated parameter with the given value, this function will assign only numeric values.</p>", "annotation_str" : " %an:sequential", "annotations" : [ { "prefix" : "an", "ns" : "http://zorba.io/annotations", "name" : "sequential", "value" : "" } ], "updating" : false, "parameters" : [ { "name" : "prepared-statement", "type" : "xs:anyURI", "occurrence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> The identifier to a prepared statement.</div>" }, { "name" : "parameter-index", "type" : "xs:decimal", "occurrence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> The index from the parameter to be set.</div>" }, { "name" : "value", "type" : "xs:anyAtomicType", "occurrence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> The value to be set.</div>" } ], "returns" : { "type" : "empty-sequence()", "description" : "This function returns an empty-sequence()" }, "errors" : [ "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">SQL003 Prepared statement doesn't exist.</xqdoc:error>", "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">SQL007 Parameter casting error.</xqdoc:error>", "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">SQL08000 Connection is closed.</xqdoc:error>", "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">SQL001 Descriptive error, see error in attached message.</xqdoc:error>" ] }, { "isDocumented" : true, "arity" : 3, "name" : "set-string", "qname" : "jdbc:set-string", "signature" : "($prepared-statement as xs:anyURI, $parameter-index as xs:integer, $value as xs:string) as empty-sequence() external", "description" : " Set the value of the designated parameter with the given value, this function will assign only string values.\n", "summary" : "<p> Set the value of the designated parameter with the given value, this function will assign only string values.</p>", "annotation_str" : " %an:sequential", "annotations" : [ { "prefix" : "an", "ns" : "http://zorba.io/annotations", "name" : "sequential", "value" : "" } ], "updating" : false, "parameters" : [ { "name" : "prepared-statement", "type" : "xs:anyURI", "occurrence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> The identifier to a prepared statement.</div>" }, { "name" : "parameter-index", "type" : "xs:integer", "occurrence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> The index from the parameter to be set.</div>" }, { "name" : "value", "type" : "xs:string", "occurrence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> The value to be set.</div>" } ], "returns" : { "type" : "empty-sequence()", "description" : "This function returns an empty-sequence()" }, "errors" : [ "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">SQL003 Prepared statement doesn't exist.</xqdoc:error>", "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">SQL007 Parameter casting error.</xqdoc:error>", "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">SQL08000 Connection is closed.</xqdoc:error>", "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">SQL001 Descriptive error, see error in attached message.</xqdoc:error>" ] }, { "isDocumented" : true, "arity" : 3, "name" : "set-value", "qname" : "jdbc:set-value", "signature" : "($prepared-statement as xs:anyURI, $parameter-index as xs:decimal, $value as xs:anyAtomicType) as empty-sequence() external", "description" : " Set the value of the designated parameter with the given value,\n this function will assign any value you send\n and it will try to cast to the correct type.\n", "summary" : "<p> Set the value of the designated parameter with the given value,\n this function will assign any value you send\n and it will try to cast to the correct type.</p>", "annotation_str" : " %an:sequential", "annotations" : [ { "prefix" : "an", "ns" : "http://zorba.io/annotations", "name" : "sequential", "value" : "" } ], "updating" : false, "parameters" : [ { "name" : "prepared-statement", "type" : "xs:anyURI", "occurrence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> The identifier to a prepared statement.</div>" }, { "name" : "parameter-index", "type" : "xs:decimal", "occurrence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> The index from the parameter to be set.</div>" }, { "name" : "value", "type" : "xs:anyAtomicType", "occurrence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> The value to be set.</div>" } ], "returns" : { "type" : "empty-sequence()", "description" : "This function returns an empty-sequence()" }, "errors" : [ "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">SQL003 Prepared statement doesn't exist.</xqdoc:error>", "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">SQL007 Parameter casting error.</xqdoc:error>", "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">SQL08000 Connection is closed.</xqdoc:error>", "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">SQL001 Descriptive error, see error in attached message.</xqdoc:error>" ] }, { "isDocumented" : true, "arity" : 1, "name" : "tables-nondeterministic", "qname" : "jdbc:tables-nondeterministic", "signature" : "($connection-id as xs:anyURI) as object()*", "description" : " Return the list of tables from a connection\n <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">This function has the same semantics as <a href=\"#tables-1\">tables#1</a>,\n but is declared as being non deterministic and thus should only be used when\n result caching is not desired.</p>\n", "summary" : "<p> Return the list of tables from a connection\n  This function has the same semantics as  tables#1 ,\n but is declared as being non deterministic and thus should only be used when\n result caching is not desired.</p>", "annotation_str" : " %an:nondeterministic", "annotations" : [ { "prefix" : "an", "ns" : "http://zorba.io/annotations", "name" : "nondeterministic", "value" : "" } ], "updating" : false, "parameters" : [ { "name" : "connection-id", "type" : "xs:anyURI", "occurrence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> The identifier to a connection.</div>" } ], "returns" : { "type" : "object()*", "description" : "Return an object with the result data rows from the query provided, the data rows are defined as follows: { column:value* }* Every row is represented by an object of column-value representation of the returned SQL result." }, "errors" : [ "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">SQL08000 Connection is closed.</xqdoc:error>", "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">SQL001 Descriptive error, see error in attached message.</xqdoc:error>" ] }, { "isDocumented" : true, "arity" : 4, "name" : "tables-nondeterministic", "qname" : "jdbc:tables-nondeterministic", "signature" : "($connection-id as xs:anyURI, $catalog as xs:string?, $schema as xs:string?, $table as xs:string?) as object()* external", "description" : " Return the list of tables from a connection.\n <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">This function has the same semantics as <a href=\"#tables-4\">tables#4</a>,\n but is declared as being non deterministic and thus should only be used when\n result caching is not desired.</p>\n", "summary" : "<p> Return the list of tables from a connection.</p>", "annotation_str" : " %an:nondeterministic", "annotations" : [ { "prefix" : "an", "ns" : "http://zorba.io/annotations", "name" : "nondeterministic", "value" : "" } ], "updating" : false, "parameters" : [ { "name" : "connection-id", "type" : "xs:anyURI", "occurrence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> The identifier to a connection.</div>" }, { "name" : "catalog", "type" : "xs:string", "occurrence" : "?", "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> A filter of the catalog name of the tables. Send empty-sequence for all tables.</div>" }, { "name" : "schema", "type" : "xs:string", "occurrence" : "?", "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> A filter of the schema name of the tables. Send empty-sequence for all tables.</div>" }, { "name" : "table", "type" : "xs:string", "occurrence" : "?", "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> A filter of the name of the tables. Send empty-sequence for all tables.</div>" } ], "returns" : { "type" : "object()*", "description" : "Return an object with the result data rows from the query provided, the data rows are defined as follows: { column:value* }* Every row is represented by an object of column-value representation of the returned SQL result." }, "errors" : [ "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">SQL08000 Connection is closed.</xqdoc:error>", "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">SQL001 Descriptive error, see error in attached message.</xqdoc:error>" ] }, { "isDocumented" : true, "arity" : 1, "name" : "tables", "qname" : "jdbc:tables", "signature" : "($connection-id as xs:anyURI) as object()*", "description" : " Return the list of tables from a connection\n <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">This function is declared as deterministic and should be used whenever result\n caching is acceptable.</p>\n", "summary" : "<p> Return the list of tables from a connection\n  This function is declared as deterministic and should be used whenever result\n caching is acceptable.</p>", "annotation_str" : "", "annotations" : [  ], "updating" : false, "parameters" : [ { "name" : "connection-id", "type" : "xs:anyURI", "occurrence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> The identifier to a connection.</div>" } ], "returns" : { "type" : "object()*", "description" : "Return an object with the result data rows from the query provided, the data rows are defined as follows: { column:value* }* Every row is represented by an object of column-value representation of the returned SQL result." }, "errors" : [ "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">SQL08000 Connection is closed.</xqdoc:error>", "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">SQL001 Descriptive error, see error in attached message.</xqdoc:error>" ] }, { "isDocumented" : true, "arity" : 4, "name" : "tables", "qname" : "jdbc:tables", "signature" : "($connection-id as xs:anyURI, $catalog as xs:string?, $schema as xs:string?, $table as xs:string?) as object()* external", "description" : " Return the list of tables from a connection\n <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">This function is declared as deterministic and should be used whenever result\n caching is acceptable.</p>\n", "summary" : "<p> Return the list of tables from a connection\n  This function is declared as deterministic and should be used whenever result\n caching is acceptable.</p>", "annotation_str" : "", "annotations" : [  ], "updating" : false, "parameters" : [ { "name" : "connection-id", "type" : "xs:anyURI", "occurrence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> The identifier to a connection.</div>" }, { "name" : "catalog", "type" : "xs:string", "occurrence" : "?", "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> A filter of the catalog name of the tables. Send empty-sequence for all tables.</div>" }, { "name" : "schema", "type" : "xs:string", "occurrence" : "?", "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> A filter of the schema name of the tables. Send empty-sequence for all tables.</div>" }, { "name" : "table", "type" : "xs:string", "occurrence" : "?", "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> A filter of the name of the tables. Send empty-sequence for all tables.</div>" } ], "returns" : { "type" : "object()*", "description" : "Return an object with the result data rows from the query provided, the data rows are defined as follows: { column:value* }* Every row is represented by an object of column-value representation of the returned SQL result." }, "errors" : [ "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">SQL08000 Connection is closed.</xqdoc:error>", "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">SQL001 Descriptive error, see error in attached message.</xqdoc:error>" ] } ], "variables" : [ { "name" : "jdbc:NOT-SUPPORTED", "type" : "item()*", "description" : " This variable represents the NOT-SUPPORTED level for Isolation Levels in $options for 2.2 connect function.\n" }, { "name" : "jdbc:READ-COMMITTED", "type" : "item()*", "description" : " This variable represents the READ-COMMITTED level for Isolation Levels in $options for 2.2 connect function.\n" }, { "name" : "jdbc:READ-UNCOMMITTED", "type" : "item()*", "description" : " This variable represents the READ-UNCOMMITTED level for Isolation Levels in $options for 2.2 connect function.\n" }, { "name" : "jdbc:REPEATABLE-READ", "type" : "item()*", "description" : " This variable represents the REPEATABLE-READ level for Isolation Levels in $options for 2.2 connect function.\n" }, { "name" : "jdbc:SERIALIZABLE", "type" : "item()*", "description" : " This variable represents the SERIALIZABLE level for Isolation Levels in $options for 2.2 connect function.\n" } ] }, "http://www.28msec.com/modules/http-response" : { "ns" : "http://www.28msec.com/modules/http-response", "description" : " The response module can be used to modify the HTTP response\n that will be send as a result. For example, the\n <tt xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">content-type</tt> function can be used to set the\n Content-Type header and determine the encoding of data in the\n response.\n", "sees" : [  ], "authors" : [ "<xqdoc:author xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">Matthias Brantner</xqdoc:author>" ], "version" : null, "encoding" : "utf-8", "namespaces" : [ { "uri" : "http://zorba.io/annotations", "prefix" : "an" }, { "uri" : "http://www.28msec.com/modules/http-response", "prefix" : "http" }, { "uri" : "http://www.w3.org/2010/xslt-xquery-serialization", "prefix" : "output" }, { "uri" : "http://www.28msec.com/modules/http/response#2.0", "prefix" : "res" }, { "uri" : "http://www.28msec.com/modules/http-response", "prefix" : "resp" }, { "uri" : "http://zorba.io/options/versioning", "prefix" : "ver" } ], "functions" : [ { "isDocumented" : true, "arity" : 1, "name" : "code-for-status", "qname" : "resp:code-for-status", "signature" : "($status as xs:string) as xs:integer", "description" : " Convert between the name of the HTTP status code and\n the integer value of that status code.\n", "summary" : "<p> Convert between the name of the HTTP status code and\n the integer value of that status code.</p>", "annotation_str" : "", "annotations" : [  ], "updating" : false, "parameters" : [ { "name" : "status", "type" : "xs:string", "occurrence" : null, "description" : "" } ], "returns" : { "type" : "xs:integer", "description" : "the integer value of the given status code." }, "errors" : [ "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">http:invalid-status if the given name does not represent a valid http status code</xqdoc:error>" ] }, { "isDocumented" : true, "arity" : 1, "name" : "content-type-binary", "qname" : "resp:content-type-binary", "signature" : "($type as xs:string) as xs:boolean", "description" : " <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">Test if a given content-type is a binary content-type. A\n content-type is considered to be binary if it's not a text\n content-type.</p>\n", "summary" : "<p>  Test if a given content-type is a binary content-type.</p>", "annotation_str" : "", "annotations" : [  ], "updating" : false, "parameters" : [ { "name" : "type", "type" : "xs:string", "occurrence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> the content-type to test.</div>" } ], "returns" : { "type" : "xs:boolean", "description" : "true if the given content-type is a binary content-type, false otherwise." }, "errors" : [  ] }, { "isDocumented" : true, "arity" : 1, "name" : "content-type-html", "qname" : "resp:content-type-html", "signature" : "($type as xs:string) as xs:boolean", "description" : " <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">Test if a given content-type is a HTML content-type, i.e.\n the content-type is the string \"text/html\".</p>\n", "summary" : "<p>  Test if a given content-type is a HTML content-type, i.</p>", "annotation_str" : "", "annotations" : [  ], "updating" : false, "parameters" : [ { "name" : "type", "type" : "xs:string", "occurrence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> the content-type to test.</div>" } ], "returns" : { "type" : "xs:boolean", "description" : "true if the given content-type is the HTML content-type, false otherwise." }, "errors" : [  ] }, { "isDocumented" : true, "arity" : 1, "name" : "content-type-json", "qname" : "resp:content-type-json", "signature" : "($type as xs:string) as xs:boolean", "description" : " <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">Test if a given content-type is a JSON content-type, i.e.\n the content-type is the string \"application/json\".</p>\n", "summary" : "<p>  Test if a given content-type is a JSON content-type, i.</p>", "annotation_str" : "", "annotations" : [  ], "updating" : false, "parameters" : [ { "name" : "type", "type" : "xs:string", "occurrence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> the content-type to test.</div>" } ], "returns" : { "type" : "xs:boolean", "description" : "true if the given content-type is the JSON content-type, false otherwise." }, "errors" : [  ] }, { "isDocumented" : true, "arity" : 1, "name" : "content-type-mixed-json-xml", "qname" : "resp:content-type-mixed-json-xml", "signature" : "($type as xs:string) as xs:boolean", "description" : " <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">Test if a given content-type is a mixed JSON-XML content-type, i.e.\n the content-type is the string \"application/mixed-json-xml\".</p>\n", "summary" : "<p>  Test if a given content-type is a mixed JSON-XML content-type, i.</p>", "annotation_str" : "", "annotations" : [  ], "updating" : false, "parameters" : [ { "name" : "type", "type" : "xs:string", "occurrence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> the content-type to test.</div>" } ], "returns" : { "type" : "xs:boolean", "description" : "true if the given content-type is a mixed JSON-XML content-type, false otherwise." }, "errors" : [  ] }, { "isDocumented" : true, "arity" : 1, "name" : "content-type-text", "qname" : "resp:content-type-text", "signature" : "($type as xs:string) as xs:boolean", "description" : " <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">Test if a given content-type is a text content-type.</p>\n <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">A text content-type starts with \"text/\" or contains either of\n the strings \"xml\" or \"json\".</p>\n", "summary" : "<p>  Test if a given content-type is a text content-type.</p>", "annotation_str" : "", "annotations" : [  ], "updating" : false, "parameters" : [ { "name" : "type", "type" : "xs:string", "occurrence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> the content-type to test.</div>" } ], "returns" : { "type" : "xs:boolean", "description" : "true if the given content-type is a text content-type, false otherwise." }, "errors" : [  ] }, { "isDocumented" : true, "arity" : 1, "name" : "content-type-xhtml", "qname" : "resp:content-type-xhtml", "signature" : "($type as xs:string) as xs:boolean", "description" : " <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">Test if a given content-type is a XHTML content-type, i.e.\n the content-type is the string \"application/xhtml+xml\".</p>\n", "summary" : "<p>  Test if a given content-type is a XHTML content-type, i.</p>", "annotation_str" : "", "annotations" : [  ], "updating" : false, "parameters" : [ { "name" : "type", "type" : "xs:string", "occurrence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> the content-type to test.</div>" } ], "returns" : { "type" : "xs:boolean", "description" : "true if the given content-type is the XHTML content-type, false otherwise." }, "errors" : [  ] }, { "isDocumented" : true, "arity" : 1, "name" : "content-type-xml", "qname" : "resp:content-type-xml", "signature" : "($type as xs:string) as xs:boolean", "description" : " <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">Test if a given content-type is a XML content-type</p>\n <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">A XML content-type is a content-type that is \"application/xml\"\n or ends : with the string \"+xml\".</p>\n", "summary" : "<p>  Test if a given content-type is a XML content-type \n  A XML content-type is a content-type that is \"application/xml\"\n or ends : with the string \"+xml\".</p>", "annotation_str" : "", "annotations" : [  ], "updating" : false, "parameters" : [ { "name" : "type", "type" : "xs:string", "occurrence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> the content-type to test.</div>" } ], "returns" : { "type" : "xs:boolean", "description" : "true if the given content-type is a XML content-type, false otherwise." }, "errors" : [  ] }, { "isDocumented" : true, "arity" : 1, "name" : "content-type", "qname" : "resp:content-type", "signature" : "($type as xs:string) as empty-sequence()", "description" : " <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">Sets the Content-Type header for the response.</p>\n <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">\n For example,\n <tt>resp:content-type(\"text/plain\")</tt> will cause the\n header\n <tt>Content-Type: text/plain</tt> to be added for the response.</p>\n <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">In addtion to setting the Content-Type header, the function also\n sets the serialization parameters to the default values for serialization\n method for the given content-type. For example, if the content-type is set to\n text/plain, the default serialization parameters for the text\n serialization method will be used.</p>\n <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">The functions resp:content-type-text/xml/html/xhtml/binary may be used\n to figure out which serialization method will be used for a specific\n content-type.</p>\n <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">If the given content-type contains a charset declaration (e.g.\n <tt>resp:content-type(\"text/plain;charset=ISO-8859-1\")</tt>), the\n content of the response will be transcoded to the given encoding.</p>\n <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">The default serialization parameters set by this function can\n be overwritten using the resp:serialization-parameters() function.</p>\n", "summary" : "<p>  Sets the Content-Type header for the response.</p>", "annotation_str" : " %an:sequential", "annotations" : [ { "prefix" : "an", "ns" : "http://zorba.io/annotations", "name" : "sequential", "value" : "" } ], "updating" : false, "parameters" : [ { "name" : "type", "type" : "xs:string", "occurrence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> the content-type to be set</div>" } ], "returns" : { "type" : "empty-sequence()", "description" : "the function is sequential and returns the empty sequence" }, "errors" : [ "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">http:invalid-encoding if the given encoding is invalid or not supported.</xqdoc:error>" ] }, { "isDocumented" : true, "arity" : 2, "name" : "content-type", "qname" : "resp:content-type", "signature" : "($type as xs:string, $params as object()) as empty-sequence()", "description" : " <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">Sets the Content-Type header for the response.</p>\n <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">For example,\n <tt>resp:content-type(\"text/plain\")</tt> will cause the\n header\n <tt>Content-Type: text/plain</tt> to be added for the response.</p>\n <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">In addition to the content-type, the function also allows to\n specify the serialization method and parameters that will be used\n for serializing the result. For details about this parameter, please\n refer to resp:serialization-parameters#1.</p>\n <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">If the content-type suggest using a binary serialization,\n resp:decode-binary#1 will be called and set to true except if\n the serialization method is specified at the same time. In this\n case, the serialization method will be used as specified.</p>\n <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">If the given content-type contains a charset declaration (e.g.\n <tt>resp:content-type(\"text/plain;charset=ISO-8859-1\")</tt>), the\n content of the response will be transcoded to the given encoding.\n If the serialization parameters also contain a charset declaration,\n the charset contained in the content-type will be used. to transcode\n the result.</p>\n", "summary" : "<p>  Sets the Content-Type header for the response.</p>", "annotation_str" : " %an:sequential", "annotations" : [ { "prefix" : "an", "ns" : "http://zorba.io/annotations", "name" : "sequential", "value" : "" } ], "updating" : false, "parameters" : [ { "name" : "type", "type" : "xs:string", "occurrence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> the content-type to be set</div>" }, { "name" : "params", "type" : "object()", "occurrence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> the serialization parameters that will be used for serialization the result.</div>" } ], "returns" : { "type" : "empty-sequence()", "description" : "the function is sequential and returns the empty sequence" }, "errors" : [ "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">http:invalid-encoding if the given encoding is invalid or not supported.</xqdoc:error>" ] }, { "isDocumented" : true, "arity" : 0, "name" : "decode-binary", "qname" : "resp:decode-binary", "signature" : "() as xs:boolean", "description" : " <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">Returns the boolean indiciating whether base64Binary returned by\n this request will be decoded.</p>\n <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">The default if not modified using resp:decode-binary is false.</p>\n", "summary" : "<p>  Returns the boolean indiciating whether base64Binary returned by\n this request will be decoded.</p>", "annotation_str" : " %an:sequential", "annotations" : [ { "prefix" : "an", "ns" : "http://zorba.io/annotations", "name" : "sequential", "value" : "" } ], "updating" : false, "parameters" : [  ], "returns" : { "type" : "xs:boolean", "description" : "the said boolean value" }, "errors" : [  ] }, { "isDocumented" : true, "arity" : 1, "name" : "decode-binary", "qname" : "resp:decode-binary", "signature" : "($decode as xs:boolean) as empty-sequence()", "description" : " <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">If this function is invoked with true, the result of the request\n will not be serialized. Instead, the result will be the binary values\n of any item that is of type base64Binary. The values of all other\n items will not be part of the result.</p>\n <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">Please note that all serialization parameters which have been set using\n resp:serialization-parameters will be ignored. Also, the output encoding\n is ignored for binaries.</p>\n", "summary" : "<p>  If this function is invoked with true, the result of the request\n will not be serialized.</p>", "annotation_str" : " %an:sequential", "annotations" : [ { "prefix" : "an", "ns" : "http://zorba.io/annotations", "name" : "sequential", "value" : "" } ], "updating" : false, "parameters" : [ { "name" : "decode", "type" : "xs:boolean", "occurrence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> boolean value indicating whether base64Binary should be decoded.</div>" } ], "returns" : { "type" : "empty-sequence()", "description" : "the function is sequential and returns the empty sequence." }, "errors" : [  ] }, { "isDocumented" : true, "arity" : 1, "name" : "encoding", "qname" : "resp:encoding", "signature" : "($encoding as xs:string) as empty-sequence()", "description" : " <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">The function sets the output encoding that will be\n used for the payload of the response.</p>\n <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">For example,\n <tt>resp:encoding(\"ISO-8859-1\")</tt> will cause the\n content in the response to be encoded using ISO-8859-1.</p>\n <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">Please note that the encoding only applies to textual data.\n It is not used if the function <tt>decode-binary()</tt>\n was invoked passing true as parameter.</p>\n", "summary" : "<p>  The function sets the output encoding that will be\n used for the payload of the response.</p>", "annotation_str" : " %an:sequential", "annotations" : [ { "prefix" : "an", "ns" : "http://zorba.io/annotations", "name" : "sequential", "value" : "" } ], "updating" : false, "parameters" : [ { "name" : "encoding", "type" : "xs:string", "occurrence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> the encoding to be used for the payload of the response.</div>" } ], "returns" : { "type" : "empty-sequence()", "description" : "the function is sequential and returns the empty sequence" }, "errors" : [ "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">http:invalid-encoding if the given encoding is invalid or not supported.</xqdoc:error>" ] }, { "isDocumented" : true, "arity" : 2, "name" : "header", "qname" : "resp:header", "signature" : "($name as xs:string, $value as xs:string) as xs:string?", "description" : " <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">Set a HTTP header in the response.</p>\n <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">If a header with the same name was already set, the\n value is overwritten and the function returns the old value. As defined\n in the HTTP specification, multiple headers with the same name\n can be combined into one header whose value is a comma-separated\n list of the values.</p>\n <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">The following headers must not be set using this function.\n Instead, other functions of this module should be used in order\n to implemented the required semantics:\n <ul>\n   <li>Status: use status() instead</li>\n   <li>Content-Type: use content-type() instead</li>\n </ul>\n </p>\n", "summary" : "<p>  Set a HTTP header in the response.</p>", "annotation_str" : " %an:sequential", "annotations" : [ { "prefix" : "an", "ns" : "http://zorba.io/annotations", "name" : "sequential", "value" : "" } ], "updating" : false, "parameters" : [ { "name" : "name", "type" : "xs:string", "occurrence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> the name of the header to set</div>" }, { "name" : "value", "type" : "xs:string", "occurrence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> the value of the header to set `</div>" } ], "returns" : { "type" : "xs:string?", "description" : "the value of the header previously set or the empty sequence if no header has been set with the same name." }, "errors" : [ "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">resp:invalid-header-name if an invalid name is used for the header.</xqdoc:error>" ] }, { "isDocumented" : true, "arity" : 1, "name" : "message-for-status", "qname" : "resp:message-for-status", "signature" : "($status as xs:string) as xs:string", "description" : " Convert between the HTTP status code as string and\n the name/message of that status code.\n", "summary" : "<p> Convert between the HTTP status code as string and\n the name/message of that status code.</p>", "annotation_str" : "", "annotations" : [  ], "updating" : false, "parameters" : [ { "name" : "status", "type" : "xs:string", "occurrence" : null, "description" : "" } ], "returns" : { "type" : "xs:string", "description" : "the message for the given name" }, "errors" : [ "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">http:invalid-status if the given name does not represent a valid http status code</xqdoc:error>" ] }, { "isDocumented" : true, "arity" : 1, "name" : "redirect", "qname" : "resp:redirect", "signature" : "($url as xs:string) as empty-sequence()", "description" : " This function sets the HTTP 302 redirect status code in the response. As\n a result, a redirect to the URL given as parameter will be made.\n", "summary" : "<p> This function sets the HTTP 302 redirect status code in the response.</p>", "annotation_str" : " %an:sequential", "annotations" : [ { "prefix" : "an", "ns" : "http://zorba.io/annotations", "name" : "sequential", "value" : "" } ], "updating" : false, "parameters" : [ { "name" : "url", "type" : "xs:string", "occurrence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> The URL to which the redirect will be made.</div>" } ], "returns" : { "type" : "empty-sequence()", "description" : "The empty-sequence is returned." }, "errors" : [  ] }, { "isDocumented" : true, "arity" : 0, "name" : "serialization-parameters", "qname" : "resp:serialization-parameters", "signature" : "() as object()", "description" : " <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">Returns the serialization parameters that are currently\n active, i.e. the ones that will be used to serialize the result\n of this request.</p>\n <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">This will either be the default, the defaults set when\n calling resp:content-type(), or the ones set by\n resp:serialization-parameters().</p>\n", "summary" : "<p>  Returns the serialization parameters that are currently\n active, i.</p>", "annotation_str" : "", "annotations" : [  ], "updating" : false, "parameters" : [  ], "returns" : { "type" : "object()", "description" : "the said serialization parameters" }, "errors" : [  ] }, { "isDocumented" : true, "arity" : 1, "name" : "serialization-parameters", "qname" : "resp:serialization-parameters", "signature" : "($params as object()) as empty-sequence()", "description" : " <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">Set the serialization parameters used for serializing the result\n of the request.</p>\n <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">The following example shows how to set several options\n for the JSON serialization method.\n <pre>\n {\n   \"method\" : \"json\",\n   \"indent\" : false,\n   \"encoding\" : \"UTF-16\"\n }\n </pre>\n </p>\n <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">Please note that serialization options set by this function can\n be overwritten by a subsequent call to resp:content-type. In this\n case, the options will be reset to the default for the given\n content-type. Also note, that the output encoding can be overwritten\n by subsequently calling the resp:encoding function.</p>\n", "summary" : "<p>  Set the serialization parameters used for serializing the result\n of the request.</p>", "annotation_str" : " %an:sequential", "annotations" : [ { "prefix" : "an", "ns" : "http://zorba.io/annotations", "name" : "sequential", "value" : "" } ], "updating" : false, "parameters" : [ { "name" : "params", "type" : "object()", "occurrence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> the serialization parameters that will be used to serialize the result of the request</div>" } ], "returns" : { "type" : "empty-sequence()", "description" : "the function is sequential and, on success, returns the empty sequence." }, "errors" : [ "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">err:XQDY0027 if the input is not valid</xqdoc:error>", "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">http:invalid-encoding if the encoding specified in the serialization options is invalid or not supported.</xqdoc:error>" ] }, { "isDocumented" : true, "arity" : 0, "name" : "serializer-defaults-html", "qname" : "resp:serializer-defaults-html", "signature" : "() as object()", "description" : " <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">Returns an object that can be used to specify the\n settings of serialization parameters for the HTML serialization\n method.</p>\n <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">The defaults are\n <pre>\n {\n   \"encoding\" : \"UTF-8\",\n   \"indent\" : true,\n   \"method\" : \"html\",\n   \"version\" : \"4.01\",\n   \"doctype-system\" : \"http://www.w3.org/TR/html4/loose.dtd\",\n   \"doctype-public\" : \"-//W3C//DTD HTML 4.01 Transitional//EN\"\n }\n </pre>\n </p>\n <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">For example, those defaults are used when setting\n the content-type to some HTML content-type (i.e. text/html).</p>\n", "summary" : "<p>  Returns an object that can be used to specify the\n settings of serialization parameters for the HTML serialization\n method.</p>", "annotation_str" : "", "annotations" : [  ], "updating" : false, "parameters" : [  ], "returns" : { "type" : "object()", "description" : "an object that can be used to specify the above serialization parameters." }, "errors" : [  ] }, { "isDocumented" : true, "arity" : 0, "name" : "serializer-defaults-json-xml-hybrid", "qname" : "resp:serializer-defaults-json-xml-hybrid", "signature" : "() as object()", "description" : " <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">Returns an object that can be used to specify the\n settings of serialization parameters for the json\n serialization method.</p>\n <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">The defaults are\n <pre>\n {\n   \"encoding\" : \"UTF-8\",\n   \"indent\" : \"yes\",\n   \"method\" : \"json\"\n }\n </pre>\n </p>\n <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">For example, those defaults are used when setting\n the content-type to some XML content-type (e.g. application/atom+xml).</p>\n", "summary" : "<p>  Returns an object that can be used to specify the\n settings of serialization parameters for the json\n serialization method.</p>", "annotation_str" : "", "annotations" : [  ], "updating" : false, "parameters" : [  ], "returns" : { "type" : "object()", "description" : "an object that can be used to specify the above serialization parameters." }, "errors" : [  ] }, { "isDocumented" : true, "arity" : 0, "name" : "serializer-defaults-json", "qname" : "resp:serializer-defaults-json", "signature" : "() as object()", "description" : " <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">Returns an object that can be used to specify the\n settings of serialization parameters for the json-xml hybrid\n serialization method.</p>\n <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">The defaults are\n <pre>\n {\n   \"encoding\" : \"UTF-8\",\n   \"indent\" : \"yes\",\n   \"method\" : \"json\"\n }\n </pre>\n </p>\n <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">For example, those defaults are used when setting\n the content-type to application/mixed-json-xml.</p>\n", "summary" : "<p>  Returns an object that can be used to specify the\n settings of serialization parameters for the json-xml hybrid\n serialization method.</p>", "annotation_str" : "", "annotations" : [  ], "updating" : false, "parameters" : [  ], "returns" : { "type" : "object()", "description" : "an object that can be used to specify the above serialization parameters." }, "errors" : [  ] }, { "isDocumented" : true, "arity" : 0, "name" : "serializer-defaults-text", "qname" : "resp:serializer-defaults-text", "signature" : "() as object()", "description" : " <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">Returns an object that can be used to specify the\n settings of serialization parameters for the text serialization\n method.</p>\n <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">The only default used is\n <pre>\n {\n  \"method\" : \"text\",\n  \"encoding\" : \"UTF-8\",\n }\n </pre>\n </p>\n <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">For example, this default is used when setting\n the content-type to some text content-type (e.g. text/plain).</p>\n", "summary" : "<p>  Returns an object that can be used to specify the\n settings of serialization parameters for the text serialization\n method.</p>", "annotation_str" : "", "annotations" : [  ], "updating" : false, "parameters" : [  ], "returns" : { "type" : "object()", "description" : "an object that can be used to specify the above serialization parameters." }, "errors" : [  ] }, { "isDocumented" : true, "arity" : 0, "name" : "serializer-defaults-xhtml", "qname" : "resp:serializer-defaults-xhtml", "signature" : "() as object()", "description" : " <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">Returns an object that can be used to specify the\n settings of serialization parameters for the XHTML serialization\n method.</p>\n <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">The defaults are\n <pre>\n {\n   \"encoding\" : \"UTF-8\",\n   \"indent\" : true,\n   \"method\" : \"xhtml\",\n   \"omit-xml-declaration\" : true,\n   \"version\" : \"1.0\",\n   \"doctype-system\" : \"http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd\",\n   \"doctype-public\" : \"-//W3C//DTD XHTML 1.0 Transitional//EN\"\n }\n </pre>\n </p>\n <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">For example, those defaults are used when setting\n the content-type to some XHTML content-type (i.e. application/xhtml+xml).</p>\n", "summary" : "<p>  Returns an object that can be used to specify the\n settings of serialization parameters for the XHTML serialization\n method.</p>", "annotation_str" : "", "annotations" : [  ], "updating" : false, "parameters" : [  ], "returns" : { "type" : "object()", "description" : "an object that can be used to specify the above serialization parameters." }, "errors" : [  ] }, { "isDocumented" : true, "arity" : 0, "name" : "serializer-defaults-xml", "qname" : "resp:serializer-defaults-xml", "signature" : "() as object()", "description" : " <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">Returns an object that can be used to specify the\n settings of serialization parameters for the XML serialization\n method.</p>\n <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">The defaults are\n <pre>\n {\n  \"method\" : \"xml\",\n  \"encoding\" : \"UTF-8\",\n  \"indent\" : true,\n  \"omit-xml-declaration\" : true,\n  \"version\" : \"1.0\"\n }\n </pre>\n </p>\n <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">For example, those defaults are used when setting\n the content-type to some XML content-type (e.g. application/atom+xml).</p>\n", "summary" : "<p>  Returns an object that can be used to specify the\n settings of serialization parameters for the XML serialization\n method.</p>", "annotation_str" : "", "annotations" : [  ], "updating" : false, "parameters" : [  ], "returns" : { "type" : "object()", "description" : "an object that can be used to specify the above serialization parameters." }, "errors" : [  ] }, { "isDocumented" : true, "arity" : 1, "name" : "status-code", "qname" : "resp:status-code", "signature" : "($status as xs:integer) as empty-sequence()", "description" : " <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">Sets the status code of the HTTP response to the integer given as\n parameter.</p>\n For example,\n <tt xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">resp:status(204)</tt>\n will result in \"HTTP/1.1 204 No Content\".\n", "summary" : "<p>  Sets the status code of the HTTP response to the integer given as\n parameter.</p>", "annotation_str" : " %an:sequential", "annotations" : [ { "prefix" : "an", "ns" : "http://zorba.io/annotations", "name" : "sequential", "value" : "" } ], "updating" : false, "parameters" : [ { "name" : "status", "type" : "xs:integer", "occurrence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> The status code of the HTTP response as integer.</div>" } ], "returns" : { "type" : "empty-sequence()", "description" : "On success, the empty-sequence is returned" }, "errors" : [ "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">http:invalid-status-code if the given integer does not reflect a valid HTTP status code</xqdoc:error>" ] }, { "isDocumented" : true, "arity" : 1, "name" : "status", "qname" : "resp:status", "signature" : "($status as xs:string) as empty-sequence()", "description" : " <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">Sets the status code of the HTTP response to code associated\n with the given string.</p>\n <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">For example,\n <tt>resp:status($http:no-content)</tt>\n will result in \"HTTP/1.1 204 No Content\".</p>\n", "summary" : "<p>  Sets the status code of the HTTP response to code associated\n with the given string.</p>", "annotation_str" : " %an:sequential", "annotations" : [ { "prefix" : "an", "ns" : "http://zorba.io/annotations", "name" : "sequential", "value" : "" } ], "updating" : false, "parameters" : [ { "name" : "status", "type" : "xs:string", "occurrence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> The status code of the HTTP response as a string (e.g. $http:no-content)</div>" } ], "returns" : { "type" : "empty-sequence()", "description" : "On success, the empty-sequence is returned" }, "errors" : [ "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">http:invalid-status if the given string does not represent a valid HTTP status code;</xqdoc:error>" ] }, { "isDocumented" : true, "arity" : 1, "name" : "valid-status", "qname" : "resp:valid-status", "signature" : "($status as xs:string) as xs:boolean", "description" : " Test whether the given name refers to a valid HTTP status code.\n", "summary" : "<p> Test whether the given name refers to a valid HTTP status code.</p>", "annotation_str" : "", "annotations" : [  ], "updating" : false, "parameters" : [ { "name" : "status", "type" : "xs:string", "occurrence" : null, "description" : "" } ], "returns" : { "type" : "xs:boolean", "description" : "true if the given name refers to a valid HTTP status code, false otherwise." }, "errors" : [  ] } ], "variables" : [ { "name" : "http:precondition-required", "type" : "item()*", "description" : " A string representing the HTTP Status Code 428 Precondition Required (RFC 6585)\n" }, { "name" : "http:gone", "type" : "item()*", "description" : " A string representing the HTTP Status Code 410 GONE\n" }, { "name" : "http:length-required", "type" : "item()*", "description" : " A string representing the HTTP Status Code 411 Length Required\n" }, { "name" : "http:precondition-failed", "type" : "item()*", "description" : " A string representing the HTTP Status Code 412 Precondition Failed\n" }, { "name" : "http:request-entity-too-large", "type" : "item()*", "description" : " A string representing the HTTP Status Code 413 Request Entity Too Large\n" }, { "name" : "http:request-entity-too-long", "type" : "item()*", "description" : " A string representing the HTTP Status Code 414 Request Entity Too Long\n" }, { "name" : "http:unsupported-media-type", "type" : "item()*", "description" : " A string representing the HTTP Status Code 415 Unsupported Media Type\n" }, { "name" : "http:request-range-not-satisfiable", "type" : "item()*", "description" : " A string representing the HTTP Status Code 416 Request Range Not Satisfiable\n" }, { "name" : "http:expectation-failed", "type" : "item()*", "description" : " A string representing the HTTP Status Code 417 Expectation Failed\n" }, { "name" : "http:im-a-teapot", "type" : "item()*", "description" : " A string representing the HTTP Status Code 418 I'm a teapot (RFC 2324)\n" }, { "name" : "http:enhance-your-calm", "type" : "item()*", "description" : " A string representing the HTTP Status Code 420 Enhance Your Calm\n" }, { "name" : "http:unprocessable-entity", "type" : "item()*", "description" : " A string representing the HTTP Status Code 422 Unprocessable Entity (WebDAV; RFC 4918)\n" }, { "name" : "http:locked", "type" : "item()*", "description" : " A string representing the HTTP Status Code 423 Locked (WebDAV; RFC 4918)\n" }, { "name" : "http:failed-dependency", "type" : "item()*", "description" : " A string representing the HTTP Status Code 424 Failed Dependency (WebDAV; RFC 4918)\n" }, { "name" : "http:unordered-collection", "type" : "item()*", "description" : " A string representing the HTTP Status Code 425 Unordered Collection\n" }, { "name" : "http:upgrade-required", "type" : "item()*", "description" : " A string representing the HTTP Status Code 426 Upgrade Required\n" }, { "name" : "http:conflict", "type" : "item()*", "description" : " A string representing the HTTP Status Code 409 Conflict\n" }, { "name" : "http:too-many-requests", "type" : "item()*", "description" : " A string representing the HTTP Status Code 429 Too Many Requests (RFC 6585)\n" }, { "name" : "http:request-header-fields-too-large", "type" : "item()*", "description" : " A string representing the HTTP Status Code 431 Request Header Fields Too Large (RFC 6585)\n" }, { "name" : "http:internal-server-error", "type" : "item()*", "description" : " A string representing the HTTP Status Code 500 Internal Server Error\n" }, { "name" : "http:not-implemented", "type" : "item()*", "description" : " A string representing the HTTP Status Code 501 Not Implemented\n" }, { "name" : "http:bad-gateway", "type" : "item()*", "description" : " A string representing the HTTP Status Code 502 Bad Gateway\n" }, { "name" : "http:service-unavailable", "type" : "item()*", "description" : " A string representing the HTTP Status Code 503 Service Unavailable\n" }, { "name" : "http:gateway-timeout", "type" : "item()*", "description" : " A string representing the HTTP Status Code 504 Gateway Timeout\n" }, { "name" : "http:http-version-not-supported", "type" : "item()*", "description" : " A string representing the HTTP Status Code 505 HTTP Version Not Supported\n" }, { "name" : "http:variant-also-negotiates", "type" : "item()*", "description" : " A string representing the HTTP Status Code 506 Variant Also Negotiates (RFC 2295)\n" }, { "name" : "http:insufficient-storage", "type" : "item()*", "description" : " A string representing the HTTP Status Code 507 Insufficient Storage (WebDAV; RFC 4918)\n" }, { "name" : "http:loop-detected", "type" : "item()*", "description" : " A string representing the HTTP status code 508 Loop Detected (webdav; rfc 5842)\n" }, { "name" : "http:not-extended", "type" : "item()*", "description" : " A string representing the HTTP status code 510 Not Extended (RFC 2774)\n" }, { "name" : "http:network-authentication-required", "type" : "item()*", "description" : " A string representing the HTTP status code 511 Network Authentication Required (RFC 6585)\n" }, { "name" : "resp:status-info", "type" : "object()", "description" : " Variable containing a description for all the HTTP Status Codes\n" }, { "name" : "http:see-other", "type" : "item()*", "description" : " A string representing the HTTP Status Code 303 See Other\n" }, { "name" : "http:switching-protocols", "type" : "item()*", "description" : " A string representing the HTTP Status Code 101 Switching Protocols\n" }, { "name" : "http:processing", "type" : "item()*", "description" : " A string representing the HTTP Status Code 102 Processing (Web; RFC 2518)\n" }, { "name" : "http:ok", "type" : "item()*", "description" : " A string representing the HTTP Status Code 200 OK\n" }, { "name" : "http:created", "type" : "item()*", "description" : " A string representing the HTTP Status Code 201 Created\n" }, { "name" : "http:accepted", "type" : "item()*", "description" : " A string representing the HTTP Status Code 202 Accepted\n" }, { "name" : "http:non-authoritative", "type" : "item()*", "description" : " A string representing the HTTP Status Code 203 Non-Authoritative\n" }, { "name" : "http:no-content", "type" : "item()*", "description" : " A string representing the HTTP Status Code 204 No Content\n" }, { "name" : "http:reset-content", "type" : "item()*", "description" : " A string representing the HTTP Status Code 205 Reset Content\n" }, { "name" : "http:partial-content", "type" : "item()*", "description" : " A string representing the HTTP Status Code 206 Partial Content\n" }, { "name" : "http:multi-status", "type" : "item()*", "description" : " A string representing the HTTP Status Code 207 Multi-Status (WebDAV; RFC 5842)\n" }, { "name" : "http:already-reported", "type" : "item()*", "description" : " A string representing the HTTP Status Code 208 Already Reported (WebDAV; RFC 5842)\n" }, { "name" : "http:im-used", "type" : "item()*", "description" : " A string representing the HTTP Status Code 226 IM Used (RFC 3229)\n" }, { "name" : "http:multiple-choices", "type" : "item()*", "description" : " A string representing the HTTP Status Code 300 Multiple Choices\n" }, { "name" : "http:moved-permanently", "type" : "item()*", "description" : " A string representing the HTTP Status Code 301 Moved Permantently\n" }, { "name" : "http:found", "type" : "item()*", "description" : " A string representing the HTTP Status Code 302 Found\n" }, { "name" : "http:continue", "type" : "item()*", "description" : " A string representing the HTTP Status Code 100 Continue\n" }, { "name" : "http:not-modified", "type" : "item()*", "description" : " A string representing the HTTP Status Code 304 Not Modified\n" }, { "name" : "http:use-proxy", "type" : "item()*", "description" : " A string representing the HTTP Status Code 305 Use Proxy\n" }, { "name" : "http:switch-proxy", "type" : "item()*", "description" : " A string representing the HTTP Status Code 306 Switch Proxy\n" }, { "name" : "http:temporary-redirect", "type" : "item()*", "description" : " A string representing the HTTP Status Code 307 Temporary Redirect\n" }, { "name" : "http:permanent-redirect", "type" : "item()*", "description" : " A string representing the HTTP Status Code 308 Permanent Redirect (http://tools.ietf.org/html/draft-reschke-http-status-308-07)\n" }, { "name" : "http:bad-request", "type" : "item()*", "description" : " A string representing the HTTP Status Code 400 Bad Request\n" }, { "name" : "http:unauthorized", "type" : "item()*", "description" : " A string representing the HTTP Status Code 401 Unauthorized\n" }, { "name" : "http:payment-required", "type" : "item()*", "description" : " A string representing the HTTP Status Code 402 Payment Required\n" }, { "name" : "http:forbidden", "type" : "item()*", "description" : " A string representing the HTTP Status Code 403 Forbidden\n" }, { "name" : "http:not-found", "type" : "item()*", "description" : " A string representing the HTTP Status Code 404 Not Found\n" }, { "name" : "http:not-allowed", "type" : "item()*", "description" : " A string representing the HTTP Status Code 405 Not Allowed\n" }, { "name" : "http:not-acceptable", "type" : "item()*", "description" : " A string representing the HTTP Status Code 406 Not Acceptable\n" }, { "name" : "http:proxy-authentication-required", "type" : "item()*", "description" : " A string representing the HTTP Status Code 407 Proxy Authentication Required\n" }, { "name" : "http:request-timeout", "type" : "item()*", "description" : " A string representing the HTTP Status Code 408 Request Timeout\n" } ] }, "http://www.zorba-xquery.com/modules/email/smtp" : { "ns" : "http://www.zorba-xquery.com/modules/email/smtp", "description" : " This module can be used for sending emails.\n The SMTP module contains only one public function that receives two parameters.\n The SMTP server access information passed as an <code xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">hostInfo</code> element\n and the email message representation as a <code xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">message</code> element.\n For a quick start see the examples associates with the <code xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">send(...)</code>\n function. For a complete specification read, the description and the\n documentation associated with this function.\n", "sees" : [ "<xqdoc:see xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"><a href=\"http://www.washington.edu/imap/\">c-client Library part of UW IMAP toolkit</a></xqdoc:see>" ], "authors" : [ "<xqdoc:author xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">Sorin Nasoi, Daniel Thomas</xqdoc:author>" ], "version" : null, "encoding" : "utf-8", "namespaces" : [ { "uri" : "http://zorba.io/annotations", "prefix" : "an" }, { "uri" : "http://www.zorba-xquery.com/modules/email", "prefix" : "email" }, { "uri" : "http://www.zorba-xquery.com/modules/email/smtp", "prefix" : "smtp" }, { "uri" : "http://zorba.io/options/versioning", "prefix" : "ver" } ], "functions" : [ { "isDocumented" : true, "arity" : 2, "name" : "send", "qname" : "smtp:send", "signature" : "($host-info as element(email:hostInfo), $message as element(email:message)) as empty-sequence()", "description" : " This function sends an email message from the specified account.\n The <code xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">hostName</code> child element of <code xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">$host-info</code> must have the form:\n <code xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"><b>remote_system_name</b> [\":\" <b>port</b>] [<b>flags</b>]</code>. This syntax is part of the\n <a xmlns:xqdoc=\"http://www.xqdoc.org/1.0\" href=\"http://www.washington.edu/imap/documentation/naming.txt.html\" target=\"_blank\">Remote names</a>\n syntax defined in the UW IMAP toolkit. The <code xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"><b>remote_system_name</b></code> and\n <code xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"><b>flags</b></code> fragments are explained in the section <code xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">III</code> of this document.\n For example the hostName could look like:\n <ul xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">\n   <li><code>&lt;hostName&gt;smtp.gmail.com:587/tls/novalidate-cert&lt;hostName&gt;</code></li>\n   <li><code>&lt;hostName&gt;[209.85.129.111]:587/tls/novalidate-cert&lt;hostName&gt;</code></li>\n </ul>\n The <code xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">$host-info</code> parameter could then look like this:\n <pre xmlns:xqdoc=\"http://www.xqdoc.org/1.0\" class=\"ace-static\" ace-mode=\"xquery\">\n &lt;hostInfo&gt;\n   &lt;hostName&gt;smtp.gmail.com:587/tls/novalidate-cert&lt;/hostName&gt;\n   &lt;userName&gt;username&lt;/userName&gt;\n   &lt;password&gt;password&lt;/password&gt;\n &lt;/hostInfo&gt;\n </pre>\n For a complete of the structure of an email message, see the imported email\n schema: <code xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">http://www.zorba-xquery.com/modules/email</code>\n All the data passed to this function does not need to be validated.\n The only requirement is that they have a valid format and are in the\n correct namespace according to the schema:\n <code xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">http://www.zorba-xquery.com/modules/email</code>.\n", "summary" : "<p> This function sends an email message from the specified account.</p>", "annotation_str" : " %an:sequential", "annotations" : [ { "prefix" : "an", "ns" : "http://zorba.io/annotations", "name" : "sequential", "value" : "" } ], "updating" : false, "parameters" : [ { "name" : "host-info", "type" : "element(email:hostInfo)", "occurrence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> The SMTP host, user name, and password.</div>" }, { "name" : "message", "type" : "element(email:message)", "occurrence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> The message to send as defined in the email XML schema.</div>" } ], "returns" : { "type" : "empty-sequence()", "description" : "The function is declared as sequential and has side-effects. It returns the empty sequence." }, "errors" : [ "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">smtp:SMTP0001 The message format is invalid.</xqdoc:error>", "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">smtp:SMTP0002 The message has no recipient.</xqdoc:error>", "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">smtp:SMTP0003 The message could not be sent.</xqdoc:error>", "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">smtp:SMTP9999 If any other error occurs.</xqdoc:error>", "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">err:XQDY0027 If the values of the arguments are not not valid according to the email schema: <code>http://www.zorba-xquery.com/modules/email</code></xqdoc:error>" ] } ], "variables" : [  ] }, "http://www.28msec.com/modules/project" : { "ns" : "http://www.28msec.com/modules/project", "description" : " This module contains functions to introspect a project.\n", "sees" : [  ], "authors" : [ "<xqdoc:author xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">28msec</xqdoc:author>" ], "version" : null, "encoding" : "utf-8", "namespaces" : [ { "uri" : "http://zorba.io/annotations", "prefix" : "an" }, { "uri" : "http://zorba.io/modules/base64", "prefix" : "base64" }, { "uri" : "http://zorba.io/modules/hmac", "prefix" : "hmac" }, { "uri" : "http://www.28msec.com/modules/project", "prefix" : "project" }, { "uri" : "http://zorba.io/modules/random", "prefix" : "random" }, { "uri" : "http://zorba.io/options/versioning", "prefix" : "ver" } ], "functions" : [ { "isDocumented" : true, "arity" : 0, "name" : "create-seed", "qname" : "project:create-seed", "signature" : "() as string", "description" : " Creates and return new random project seed.\n", "summary" : "<p> Creates and return new random project seed.</p>", "annotation_str" : " %an:sequential", "annotations" : [ { "prefix" : "an", "ns" : "http://zorba.io/annotations", "name" : "sequential", "value" : "" } ], "updating" : false, "parameters" : [  ], "returns" : { "type" : "string", "description" : "the project seed" }, "errors" : [ "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">project:SEED-EXISTS the project already has a seed file</xqdoc:error>", "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">project:SEED-FILE error writing the seed file</xqdoc:error>", "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">project:SEED the specified seed is not at least 8 characters long</xqdoc:error>" ] }, { "isDocumented" : true, "arity" : 1, "name" : "create-seed", "qname" : "project:create-seed", "signature" : "($seed as string) as empty-sequence()", "description" : " Creates a new project seed.\n The specified seed must be at least 8 characters long.\n", "summary" : "<p> Creates a new project seed.</p>", "annotation_str" : " %an:sequential", "annotations" : [ { "prefix" : "an", "ns" : "http://zorba.io/annotations", "name" : "sequential", "value" : "" } ], "updating" : false, "parameters" : [ { "name" : "seed", "type" : "string", "occurrence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> The new project seed.</div>" } ], "returns" : { "type" : "empty-sequence()", "description" : "the empty sequence" }, "errors" : [ "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">project:SEED-EXISTS the project already has a seed file</xqdoc:error>", "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">project:SEED-FILE error writing the seed file</xqdoc:error>" ] }, { "isDocumented" : true, "arity" : 0, "name" : "has-seed", "qname" : "project:has-seed", "signature" : "() as boolean external", "description" : " Checks if the project has a seed file.\n", "summary" : "<p> Checks if the project has a seed file.</p>", "annotation_str" : " %an:nondeterministic", "annotations" : [ { "prefix" : "an", "ns" : "http://zorba.io/annotations", "name" : "nondeterministic", "value" : "" } ], "updating" : false, "parameters" : [  ], "returns" : { "type" : "boolean", "description" : "whether the project has a seed file or not" }, "errors" : [ "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">project:SEED-FILE error accessing the seed file</xqdoc:error>" ] }, { "isDocumented" : true, "arity" : 0, "name" : "name", "qname" : "project:name", "signature" : "() as string external", "description" : " Returns the name of the project.\n", "summary" : "<p> Returns the name of the project.</p>", "annotation_str" : "", "annotations" : [  ], "updating" : false, "parameters" : [  ], "returns" : { "type" : "string", "description" : "the said name" }, "errors" : [  ] }, { "isDocumented" : true, "arity" : 0, "name" : "read-or-create-seed", "qname" : "project:read-or-create-seed", "signature" : "() as string", "description" : " Returns the project seed. If the project has no seed a new random one is created.\n", "summary" : "<p> Returns the project seed.</p>", "annotation_str" : " %an:sequential", "annotations" : [ { "prefix" : "an", "ns" : "http://zorba.io/annotations", "name" : "sequential", "value" : "" } ], "updating" : false, "parameters" : [  ], "returns" : { "type" : "string", "description" : "the project seed" }, "errors" : [ "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">project:SEED-FILE error reading or writing the seed file</xqdoc:error>" ] }, { "isDocumented" : true, "arity" : 0, "name" : "scheduler-host", "qname" : "project:scheduler-host", "signature" : "() as string external", "description" : " Returns the host of the scheduler.\n", "summary" : "<p> Returns the host of the scheduler.</p>", "annotation_str" : "", "annotations" : [  ], "updating" : false, "parameters" : [  ], "returns" : { "type" : "string", "description" : "the scheduler host." }, "errors" : [  ] }, { "isDocumented" : true, "arity" : 0, "name" : "seed", "qname" : "project:seed", "signature" : "() as string external", "description" : " Returns the project seed.\n", "summary" : "<p> Returns the project seed.</p>", "annotation_str" : " %an:nondeterministic", "annotations" : [ { "prefix" : "an", "ns" : "http://zorba.io/annotations", "name" : "nondeterministic", "value" : "" } ], "updating" : false, "parameters" : [  ], "returns" : { "type" : "string", "description" : "the project seed" }, "errors" : [ "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">project:NO-SEED the project seed file cannot be found</xqdoc:error>", "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">project:SEED-FILE error reading the seed file</xqdoc:error>" ] }, { "isDocumented" : true, "arity" : 0, "name" : "set-seed", "qname" : "project:set-seed", "signature" : "() as string", "description" : " Sets a new random project seed.\n", "summary" : "<p> Sets a new random project seed.</p>", "annotation_str" : " %an:sequential", "annotations" : [ { "prefix" : "an", "ns" : "http://zorba.io/annotations", "name" : "sequential", "value" : "" } ], "updating" : false, "parameters" : [  ], "returns" : { "type" : "string", "description" : "the project seed" }, "errors" : [ "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">project:SEED-FILE error reading or writing the seed file</xqdoc:error>" ] }, { "isDocumented" : true, "arity" : 1, "name" : "set-seed", "qname" : "project:set-seed", "signature" : "($seed as string) as empty-sequence()", "description" : " Sets the project seed.\n The specified seed must be at least 8 characters long.\n", "summary" : "<p> Sets the project seed.</p>", "annotation_str" : " %an:sequential", "annotations" : [ { "prefix" : "an", "ns" : "http://zorba.io/annotations", "name" : "sequential", "value" : "" } ], "updating" : false, "parameters" : [ { "name" : "seed", "type" : "string", "occurrence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> The new project seed.</div>" } ], "returns" : { "type" : "empty-sequence()", "description" : "the project seed" }, "errors" : [ "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">project:SEED-FILE error reading or writing the seed file</xqdoc:error>", "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">project:SEED the specified seed is not at least 8 characters long</xqdoc:error>" ] }, { "isDocumented" : true, "arity" : 0, "name" : "token", "qname" : "project:token", "signature" : "() as xs:base64Binary", "description" : " Creates a new project token, that expires after 12 hours.\n", "summary" : "<p> Creates a new project token, that expires after 12 hours.</p>", "annotation_str" : " %an:nondeterministic", "annotations" : [ { "prefix" : "an", "ns" : "http://zorba.io/annotations", "name" : "nondeterministic", "value" : "" } ], "updating" : false, "parameters" : [  ], "returns" : { "type" : "xs:base64Binary", "description" : "the project token" }, "errors" : [  ] }, { "isDocumented" : true, "arity" : 1, "name" : "token", "qname" : "project:token", "signature" : "($expiration as xs:anyAtomicType) as xs:base64Binary", "description" : " Creates a new project token, that expires at the desired date.\n The input to the function contains the expiration information.\n If a duration is used, then the function will create a token expiring after the specified duration.\n If a dateTime is used, then the function will create a token expiring that date.\n If an integer is used, then the function will create a token expiring after the specified number of seconds.\n", "summary" : "<p> Creates a new project token, that expires at the desired date.</p>", "annotation_str" : " %an:nondeterministic", "annotations" : [ { "prefix" : "an", "ns" : "http://zorba.io/annotations", "name" : "nondeterministic", "value" : "" } ], "updating" : false, "parameters" : [ { "name" : "expiration", "type" : "xs:anyAtomicType", "occurrence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> describes the expiration date of the token.</div>" } ], "returns" : { "type" : "xs:base64Binary", "description" : "the new project token" }, "errors" : [ "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">project:INVALID-PARAMETER expiration information is invalid (not a duration, date or number of seconds)</xqdoc:error>" ] } ], "variables" : [  ] }, "http://zorba.io/modules/http-client" : { "ns" : "http://zorba.io/modules/http-client", "description" : " <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">\n This module provides functions for performing HTTP requests.\n </p>\n <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">A simple GET request using the get#1 convenience function</p>\n <pre xmlns:xqdoc=\"http://www.xqdoc.org/1.0\" class=\"ace-static\" ace-mode=\"xquery\">\n import module namespace http=\"http://zorba.io/modules/http-client\";\n http:get(\"http://www.example.com\")\n </pre>\n <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">\n This example makes a GET request to example.com and returns the server's response\n as a JSON object.\n </p>\n <pre xmlns:xqdoc=\"http://www.xqdoc.org/1.0\" class=\"ace-static\" ace-mode=\"java\">\n {\n   \"status\" : 200,\n   \"message\" : \"OK\",\n   \"headers\" : {\n     \"Content-Length\" : \"1270\",\n     \"Date\" : \"Tue, 11 Jun 2013 22:27:10 GMT\",\n     ...\n   },\n   \"body\" : {\n     \"media-type\" : \"text/html\",\n     \"content\" : \"...\"\n   }\n }\n </pre>\n <h2 xmlns:xqdoc=\"http://www.xqdoc.org/1.0\" id=\"standard_return\">Response format</h2>\n <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">Most functions in this module (all except <a href=\"?anchor=options-1\">options#1</a>)\n return a single JSON item, describing the server's response, as in the previous\n example.\n The server status (integer) and message (string) fields are always present.\n If the server replied sending one or more headers, they are reported\n in an optional headers object. Each header is represented as a single (string)\n field.</p>\n <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">For non-multipart responses, as in the previous example, the response body,\n if any, is reported as a body object. This object contains both the (string)\n media-type returned by the server and its content.\n The type of the content field is determined by the media-type returned by the\n server. If the media-type indicates that the body content is textual,\n then the content has type string, base64Binary otherwise.\n Specifically, the body content is considered textual only if the MIME-type specified in\n the media-type is one of:\n <ul>\n   <li>\"application/json\"</li>\n   <li>\"application/x-javascript\"</li>\n   <li>\"application/xml\"</li>\n   <li>\"application/xml-external-parsed-entity\"</li>\n </ul>\n or if the MIME-type starts with \"text/\" or ends with \"+xml\".</p>\n <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">For multipart responses, multiple bodies are returned, as in the following example: </p>\n <pre xmlns:xqdoc=\"http://www.xqdoc.org/1.0\" class=\"ace-static\" ace-mode=\"java\">\n {\n   \"status\" : 200,\n   \"message\" : \"OK\",\n   \"headers\" : {\n     \"Date\" : \"Tue, 11 Jun 2013 22:34:13 GMT\",\n     ...\n   },\n   \"multipart\" : {\n     \"boundary\": \"--AaB03x\",\n     \"parts\": [\n       {\n         \"headers\" : {\n            \"Content Disposition: file\",\n            ...\n         },\n         \"body\": {\n           \"media-type\" : \"image/gif\",\n           \"content\" : \"...\"\n         }\n       },\n       {\n         \"body\" : {\n           \"media-type\" : \"text/html\",\n           \"content\" : \"...\"\n         }\n       }\n    ]\n }\n </pre>\n <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">The multipart field contains both the boundary used to separate parts\n and an array containing all parts. Each part contains its specific headers,\n if any, and the corresponding body.</p>\n <h2 xmlns:xqdoc=\"http://www.xqdoc.org/1.0\" id=\"nondeterministic_warning\">Important Notice Regarding Nondeterministic Functions</h2>\n <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">\n The following functions in this module -\n <a href=\"?anchor=get-1\">get#1</a>,\n <a href=\"?anchor=get-text-1\">get-text#1</a>,\n <a href=\"?anchor=get-binary-1\">get-binary#1</a>,\n <a href=\"?anchor=send-nondeterministic-request-1\">send-nondeterministic-request-1</a>,\n <a href=\"?anchor=head-1\">head#1</a>, and\n <a href=\"?anchor=options-1\">options#1</a>\n are declared to be <i>nondeterministic</i>, which means that their results\n will not be cached.\n However, they are <b>not</b> declared to be\n <i>sequential</i>, which means that they may be re-ordered during query optimization.\n According to the HTTP RFC, GET, HEAD an OPTIONS requests should not have any side-effects.\n However, in practice it is not uncommon, especially for GET requests, to have side-effects.\n If your application depends on the ordering of side-effects from requests issued through\n these functions, you should either use the <a href=\"?anchor=send-request-1\">send-request()</a>\n function (which is declared <i>sequential</i>), or alternatively\n wrap each call to get() in your own sequential function, to ensure\n that the requests are not reordered.\n Conversely, if you want their results to be cached you can use the\n <a href=\"?anchor=send-deterministic-request-3\">send-deterministic-request()</a>\n function (which is declared <i>deterministic</i>).\n </p>\n <h2 xmlns:xqdoc=\"http://www.xqdoc.org/1.0\" id=\"url_string\">$href Arguments to Functions</h2>\n <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">Several functions in this module accept a URL argument named $href. In\n all cases, the value passed to $href must be a valid anyURI.\n However, all functions declare $href to be of type string. This\n is for convenience, since you can pass a string literal value (that\n is, a URL in double-quotes spelled out explicitly in your query)\n to an string parameter.</p>\n <h2 xmlns:xqdoc=\"http://www.xqdoc.org/1.0\" id=\"expath_relation\">Relation to the EXPath http-client module</h2>\n <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"><a href=\"http://expath.org/\">EXPath</a> defines its own http-client\n module, which is available separately.\n There are two primary differences between EXPath's http-client and\n this module:\n <ol>\n   <li>EXPath does not include the simpler get(), post(), put(), delete(),\n head(), options() and patch() functions defined by this module.</li>\n <li>EXPath uses XML to represent request for its send-request() function,\n whereas this module uses JSON.</li>\n <li>EXPath specifies that all XML content returned by an HTTP server\n will be parsed and returned as an XML document, whereas all HTML content\n will be <i>tidied up</i> into valid XML, and then parsed into an element.\n This module returns any textual content as string and any binary content\n as base6Binary.</li>\n <li>EXPath accepts XML nodes as body in the send-request() function and\n automatically serializes them into a string. The send-request() function\n defined in this module only allows string, base64Binary, and hexBinary\n as body types.\n </li>\n </ol>\n </p>\n <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">\n See <a href=\"http://www.expath.org/spec/http-client\">the full spec\n of the EXPath http-client module</a> for more information.\n </p>\n", "sees" : [ "<xqdoc:see xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"><a href=\"http://www.w3.org/TR/xquery-11/#FunctionDeclns\">XQuery 1.1: Function Declaration</a></xqdoc:see>" ], "authors" : [ "<xqdoc:author xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">Federico Cavalieri</xqdoc:author>" ], "version" : null, "encoding" : "utf-8", "namespaces" : [ { "uri" : "http://zorba.io/annotations", "prefix" : "an" }, { "uri" : "http://www.w3.org/2005/xqt-errors", "prefix" : "err" }, { "uri" : "http://zorba.io/modules/http-client", "prefix" : "http" }, { "uri" : "http://jsoniq.org/function-library", "prefix" : "libjn" }, { "uri" : "http://zorba.io/options/versioning", "prefix" : "ver" } ], "functions" : [ { "isDocumented" : true, "arity" : 1, "name" : "delete", "qname" : "http:delete", "signature" : "($href as string) as object()", "description" : " <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">\n This function makes an HTTP DELETE request to a given URL.\n </p>\n", "summary" : "<p>  \n This function makes an HTTP DELETE request to a given URL.</p>", "annotation_str" : " %an:sequential", "annotations" : [ { "prefix" : "an", "ns" : "http://zorba.io/annotations", "name" : "sequential", "value" : "" } ], "updating" : false, "parameters" : [ { "name" : "href", "type" : "string", "occurrence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> The URL to which the request will be made (see <a href=\"#url_string\">note</a> above).</div>" } ], "returns" : { "type" : "object()", "description" : "<a xmlns:xqdoc=\"http://www.xqdoc.org/1.0\" href=\"#standard_return\">standard http-client return type</a>." }, "errors" : [ "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">http:HTTP An HTTP error occurred.</xqdoc:error>", "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">http:REQUEST The specified request is not valid.</xqdoc:error>", "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">http:TIMEOUT A timeout occurred waiting for the response.</xqdoc:error>" ] }, { "isDocumented" : true, "arity" : 1, "name" : "get-binary", "qname" : "http:get-binary", "signature" : "($href as string) as object()", "description" : " <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">\n This function makes a GET request on a given URL. All returned bodies\n are forced to be interpreted as binary data, and will be returned\n as base64Binary items.\n </p>\n", "summary" : "<p>  \n This function makes a GET request on a given URL.</p>", "annotation_str" : " %an:nondeterministic", "annotations" : [ { "prefix" : "an", "ns" : "http://zorba.io/annotations", "name" : "nondeterministic", "value" : "" } ], "updating" : false, "parameters" : [ { "name" : "href", "type" : "string", "occurrence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> The URL to which the request will be made (see <a href=\"#url_string\">note</a> above).</div>" } ], "returns" : { "type" : "object()", "description" : "<a xmlns:xqdoc=\"http://www.xqdoc.org/1.0\" href=\"#standard_return\">standard http-client return type</a>." }, "errors" : [ "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">http:HTTP An HTTP error occurred.</xqdoc:error>", "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">http:REQUEST The specified href is not valid.</xqdoc:error>", "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">http:TIMEOUT A timeout occurred waiting for the response.</xqdoc:error>" ] }, { "isDocumented" : true, "arity" : 1, "name" : "get-text", "qname" : "http:get-text", "signature" : "($href as string) as object()", "description" : " <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">\n This function makes a GET request to a given URL. All returned bodies\n are forced to be interpreted as textual, with a UTF-8 charset and will\n be returned as string items.\n </p>\n", "summary" : "<p>  \n This function makes a GET request to a given URL.</p>", "annotation_str" : " %an:nondeterministic", "annotations" : [ { "prefix" : "an", "ns" : "http://zorba.io/annotations", "name" : "nondeterministic", "value" : "" } ], "updating" : false, "parameters" : [ { "name" : "href", "type" : "string", "occurrence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> The URL to which the request will be made (see <a href=\"#url_string\">note</a> above).</div>" } ], "returns" : { "type" : "object()", "description" : "<a xmlns:xqdoc=\"http://www.xqdoc.org/1.0\" href=\"#standard_return\">standard http-client return type</a>." }, "errors" : [ "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">http:HTTP An HTTP error occurred.</xqdoc:error>", "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">http:REQUEST The specified href is not valid.</xqdoc:error>", "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">http:TIMEOUT A timeout occurred waiting for the response.</xqdoc:error>" ] }, { "isDocumented" : true, "arity" : 1, "name" : "get", "qname" : "http:get", "signature" : "($href as string) as object()", "description" : " <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">\n This function makes a GET request to a given URL.\n </p>\n", "summary" : "<p>  \n This function makes a GET request to a given URL.</p>", "annotation_str" : " %an:nondeterministic", "annotations" : [ { "prefix" : "an", "ns" : "http://zorba.io/annotations", "name" : "nondeterministic", "value" : "" } ], "updating" : false, "parameters" : [ { "name" : "href", "type" : "string", "occurrence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> The URL to which the request will be made (see <a href=\"#url_string\">note</a> above).</div>" } ], "returns" : { "type" : "object()", "description" : "<a xmlns:xqdoc=\"http://www.xqdoc.org/1.0\" href=\"#standard_return\">standard http-client return type</a>." }, "errors" : [ "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">http:HTTP An HTTP error occurred.</xqdoc:error>", "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">http:REQUEST The specified href is not valid.</xqdoc:error>", "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">http:TIMEOUT A timeout occurred waiting for the response.</xqdoc:error>" ] }, { "isDocumented" : true, "arity" : 1, "name" : "head", "qname" : "http:head", "signature" : "($href as string) as object()", "description" : " <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">\n This function makes an HTTP HEAD request on a given URL.\n </p>\n", "summary" : "<p>  \n This function makes an HTTP HEAD request on a given URL.</p>", "annotation_str" : " %an:nondeterministic", "annotations" : [ { "prefix" : "an", "ns" : "http://zorba.io/annotations", "name" : "nondeterministic", "value" : "" } ], "updating" : false, "parameters" : [ { "name" : "href", "type" : "string", "occurrence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> The URL to which the request will be made (see <a href=\"#url_string\">note</a> above).</div>" } ], "returns" : { "type" : "object()", "description" : "<a xmlns:xqdoc=\"http://www.xqdoc.org/1.0\" href=\"#standard_return\">standard http-client return type</a>." }, "errors" : [ "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">http:HTTP An HTTP error occurred.</xqdoc:error>", "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">http:REQUEST The specified href is not valid.</xqdoc:error>", "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">http:TIMEOUT A timeout occurred waiting for the response.</xqdoc:error>" ] }, { "isDocumented" : true, "arity" : 1, "name" : "options", "qname" : "http:options", "signature" : "($href as string) as string*", "description" : " <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">\n This function makes an HTTP OPTIONS request, which asks the server\n which operations it supports.\n </p>\n", "summary" : "<p>  \n This function makes an HTTP OPTIONS request, which asks the server\n which operations it supports.</p>", "annotation_str" : " %an:nondeterministic", "annotations" : [ { "prefix" : "an", "ns" : "http://zorba.io/annotations", "name" : "nondeterministic", "value" : "" } ], "updating" : false, "parameters" : [ { "name" : "href", "type" : "string", "occurrence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> The URL to which the request will be made (see <a href=\"#url_string\">note</a> above).</div>" } ], "returns" : { "type" : "string*", "description" : "A sequence of string values of the allowed operations." }, "errors" : [ "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">http:HTTP An HTTP error occurred.</xqdoc:error>", "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">http:REQUEST The specified href is not valid.</xqdoc:error>", "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">http:TIMEOUT A timeout occurred waiting for the response.</xqdoc:error>" ] }, { "isDocumented" : true, "arity" : 2, "name" : "patch", "qname" : "http:patch", "signature" : "($href as string, $body as atomic) as object()", "description" : " <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">\n This function makes an HTTP PATCH request to a given URL.\n </p>\n <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">\n The body passed to this function must be either a string, a base64Binary or\n an hexBinary.\n If it is a string, the Content-Type sent to the server will be \"text/plain\",\n \"application/octet-stream\" otherwise.\n </p>\n", "summary" : "<p>  \n This function makes an HTTP PATCH request to a given URL.</p>", "annotation_str" : " %an:sequential", "annotations" : [ { "prefix" : "an", "ns" : "http://zorba.io/annotations", "name" : "sequential", "value" : "" } ], "updating" : false, "parameters" : [ { "name" : "href", "type" : "string", "occurrence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> The URL to which the request will be made (see <a href=\"#url_string\">note</a> above).</div>" }, { "name" : "body", "type" : "atomic", "occurrence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> The body which will be sent to the server.</div>" } ], "returns" : { "type" : "object()", "description" : "<a xmlns:xqdoc=\"http://www.xqdoc.org/1.0\" href=\"#standard_return\">standard http-client return type</a>." }, "errors" : [ "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">http:HTTP An HTTP error occurred.</xqdoc:error>", "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">http:REQUEST The specified request is not valid.</xqdoc:error>", "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">http:TIMEOUT A timeout occurred waiting for the response.</xqdoc:error>" ] }, { "isDocumented" : true, "arity" : 3, "name" : "patch", "qname" : "http:patch", "signature" : "($href as string, $body as atomic, $content-type as string) as object()", "description" : " <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">\n This function makes an HTTP PATCH request to a given URL.\n </p>\n <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">\n The body passed to this function must be either a string, a base64Binary, or\n an hexBinary.\n In any case, Content-Type of the request sent to the server will\n be $content-type.\n </p>\n", "summary" : "<p>  \n This function makes an HTTP PATCH request to a given URL.</p>", "annotation_str" : " %an:sequential", "annotations" : [ { "prefix" : "an", "ns" : "http://zorba.io/annotations", "name" : "sequential", "value" : "" } ], "updating" : false, "parameters" : [ { "name" : "href", "type" : "string", "occurrence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> The URL to which the request will be made (see <a href=\"#url_string\">note</a> above).</div>" }, { "name" : "body", "type" : "atomic", "occurrence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> The body which will be sent to the server.</div>" }, { "name" : "content-type", "type" : "string", "occurrence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> The content type of $body to send to the server.</div>" } ], "returns" : { "type" : "object()", "description" : "<a xmlns:xqdoc=\"http://www.xqdoc.org/1.0\" href=\"#standard_return\">standard http-client return type</a>." }, "errors" : [ "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">http:HTTP An HTTP error occurred.</xqdoc:error>", "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">http:REQUEST The specified request is not valid.</xqdoc:error>", "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">http:TIMEOUT A timeout occurred waiting for the response.</xqdoc:error>", "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">http:CHARSET The specified charset is unsupported.</xqdoc:error>" ] }, { "isDocumented" : true, "arity" : 2, "name" : "post", "qname" : "http:post", "signature" : "($href as string, $body as atomic) as object()", "description" : " <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">\n This function makes an HTTP POST request to a given URL.\n </p>\n <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">\n The body passed to this function must be either a string, a base64Binary, or an\n hexBinary.\n If it is a string, the Content-Type sent to the server will be \"text/plain\",\n \"application/octet-stream\" otherwise.\n </p>\n", "summary" : "<p>  \n This function makes an HTTP POST request to a given URL.</p>", "annotation_str" : " %an:sequential", "annotations" : [ { "prefix" : "an", "ns" : "http://zorba.io/annotations", "name" : "sequential", "value" : "" } ], "updating" : false, "parameters" : [ { "name" : "href", "type" : "string", "occurrence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> The URL to which the request will be made (see <a href=\"#url_string\">note</a> above).</div>" }, { "name" : "body", "type" : "atomic", "occurrence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> The body which will be sent to the server.</div>" } ], "returns" : { "type" : "object()", "description" : "<a xmlns:xqdoc=\"http://www.xqdoc.org/1.0\" href=\"#standard_return\">standard http-client return type</a>." }, "errors" : [ "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">http:HTTP An HTTP error occurred.</xqdoc:error>", "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">http:REQUEST The specified request is not valid.</xqdoc:error>", "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">http:TIMEOUT A timeout occurred waiting for the response.</xqdoc:error>" ] }, { "isDocumented" : true, "arity" : 3, "name" : "post", "qname" : "http:post", "signature" : "($href as string, $body as atomic, $content-type as string) as object()", "description" : " <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">\n This function makes an HTTP POST request to a given URL.\n </p>\n <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">\n The body passed to this function must be either a string, a base64Binary,\n or an hexBinary.\n In any case, Content-Type of the request sent to the server will\n be $content-type.\n </p>\n", "summary" : "<p>  \n This function makes an HTTP POST request to a given URL.</p>", "annotation_str" : " %an:sequential", "annotations" : [ { "prefix" : "an", "ns" : "http://zorba.io/annotations", "name" : "sequential", "value" : "" } ], "updating" : false, "parameters" : [ { "name" : "href", "type" : "string", "occurrence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> The URL to which the request will be made (see <a href=\"#url_string\">note</a> above).</div>" }, { "name" : "body", "type" : "atomic", "occurrence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> The body which will be sent to the server</div>" }, { "name" : "content-type", "type" : "string", "occurrence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> The content type of the body as described above.</div>" } ], "returns" : { "type" : "object()", "description" : "<a xmlns:xqdoc=\"http://www.xqdoc.org/1.0\" href=\"#standard_return\">standard http-client return type</a>." }, "errors" : [ "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">http:HTTP An HTTP error occurred.</xqdoc:error>", "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">http:REQUEST The specified request is not valid.</xqdoc:error>", "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">http:TIMEOUT A timeout occurred waiting for the response.</xqdoc:error>", "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">http:CHARSET The specified charset is unsupported.</xqdoc:error>" ] }, { "isDocumented" : true, "arity" : 2, "name" : "put", "qname" : "http:put", "signature" : "($href as string, $body as atomic) as object()", "description" : " <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">\n This function makes an HTTP PUT request to a given URL.\n </p>\n <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">\n The body passed to this function must be either a string, a base64Binary or\n an hexBinary.\n If it is a string, the Content-Type sent to the server will be \"text/plain\",\n \"application/octet-stream\" otherwise.\n </p>\n", "summary" : "<p>  \n This function makes an HTTP PUT request to a given URL.</p>", "annotation_str" : " %an:sequential", "annotations" : [ { "prefix" : "an", "ns" : "http://zorba.io/annotations", "name" : "sequential", "value" : "" } ], "updating" : false, "parameters" : [ { "name" : "href", "type" : "string", "occurrence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> The URL to which the request will be made (see <a href=\"#url_string\">note</a> above).</div>" }, { "name" : "body", "type" : "atomic", "occurrence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> The body which will be sent to the server.</div>" } ], "returns" : { "type" : "object()", "description" : "<a xmlns:xqdoc=\"http://www.xqdoc.org/1.0\" href=\"#standard_return\">standard http-client return type</a>." }, "errors" : [ "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">http:HTTP An HTTP error occurred.</xqdoc:error>", "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">http:REQUEST The specified request is not valid.</xqdoc:error>", "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">http:TIMEOUT A timeout occurred waiting for the response.</xqdoc:error>" ] }, { "isDocumented" : true, "arity" : 3, "name" : "put", "qname" : "http:put", "signature" : "($href as string, $body as atomic, $content-type as string) as object()", "description" : " <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">\n This function makes an HTTP PUT request to a given URL.\n </p>\n <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">\n The body passed to this function must be either a string, a base64Binary, or\n an hexBinary.\n In any case, Content-Type of the request sent to the server will\n be $content-type.\n </p>\n", "summary" : "<p>  \n This function makes an HTTP PUT request to a given URL.</p>", "annotation_str" : " %an:sequential", "annotations" : [ { "prefix" : "an", "ns" : "http://zorba.io/annotations", "name" : "sequential", "value" : "" } ], "updating" : false, "parameters" : [ { "name" : "href", "type" : "string", "occurrence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> The URL to which the request will be made (see <a href=\"#url_string\">note</a> above).</div>" }, { "name" : "body", "type" : "atomic", "occurrence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> The body which will be sent to the server.</div>" }, { "name" : "content-type", "type" : "string", "occurrence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> The content type of $body to send to the server.</div>" } ], "returns" : { "type" : "object()", "description" : "<a xmlns:xqdoc=\"http://www.xqdoc.org/1.0\" href=\"#standard_return\">standard http-client return type</a>." }, "errors" : [ "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">http:HTTP An HTTP error occurred.</xqdoc:error>", "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">http:REQUEST The specified request is not valid.</xqdoc:error>", "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">http:TIMEOUT A timeout occurred waiting for the response.</xqdoc:error>", "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">http:CHARSET The specified charset is unsupported.</xqdoc:error>" ] }, { "isDocumented" : true, "arity" : 1, "name" : "send-deterministic-request", "qname" : "http:send-deterministic-request", "signature" : "($request as object()) as object()", "description" : " <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">\n This function sends an HTTP request and returns the corresponding response.\n </p>\n <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">\n This function has the same semantics as <a href=\"#send-request-1\">send-request-1</a>,\n but is declared as deterministic and thus should only be used when\n the request has no side-effects and behaves deterministic as required by the\n application.\n </p>\n", "summary" : "<p>  \n This function sends an HTTP request and returns the corresponding response.</p>", "annotation_str" : "", "annotations" : [  ], "updating" : false, "parameters" : [ { "name" : "request", "type" : "object()", "occurrence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> see request parameter of <a href=\"#send-request-1\">send-request#1</a></div>" } ], "returns" : { "type" : "object()", "description" : "<a xmlns:xqdoc=\"http://www.xqdoc.org/1.0\" href=\"#standard_return\">standard http-client return type</a>." }, "errors" : [ "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">http:HTTP An HTTP error occurred.</xqdoc:error>", "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">http:REQUEST The specified request is not valid.</xqdoc:error>", "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">http:TIMEOUT A timeout occurred waiting for the response.</xqdoc:error>", "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">http:FOLLOW Cannot follow a redirect of a POST, PUT, or DELETE request.</xqdoc:error>", "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">http:CHARSET The specified charset is unsupported.</xqdoc:error>" ] }, { "isDocumented" : true, "arity" : 1, "name" : "send-nondeterministic-request", "qname" : "http:send-nondeterministic-request", "signature" : "($request as object()) as object()", "description" : " <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">\n This function sends an HTTP request and returns the corresponding response.\n </p>\n <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">\n This function has the same semantics as <a href=\"#send-request-1\">send-request-1</a>,\n but is declared as being non deterministic and thus should only be used when\n the request has no side-effects.\n </p>\n", "summary" : "<p>  \n This function sends an HTTP request and returns the corresponding response.</p>", "annotation_str" : " %an:nondeterministic", "annotations" : [ { "prefix" : "an", "ns" : "http://zorba.io/annotations", "name" : "nondeterministic", "value" : "" } ], "updating" : false, "parameters" : [ { "name" : "request", "type" : "object()", "occurrence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> see request parameter of <a href=\"#send-request-1\">send-request#1</a></div>" } ], "returns" : { "type" : "object()", "description" : "<a xmlns:xqdoc=\"http://www.xqdoc.org/1.0\" href=\"#standard_return\">standard http-client return type</a>." }, "errors" : [ "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">http:HTTP An HTTP error occurred.</xqdoc:error>", "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">http:REQUEST The specified request is not valid.</xqdoc:error>", "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">http:TIMEOUT A timeout occurred waiting for the response.</xqdoc:error>", "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">http:FOLLOW Cannot follow a redirect of a POST, PUT, or DELETE request.</xqdoc:error>", "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">http:CHARSET The specified charset is unsupported.</xqdoc:error>" ] }, { "isDocumented" : true, "arity" : 1, "name" : "send-request", "qname" : "http:send-request", "signature" : "($request as object()) as object()", "description" : " <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">\n This function sends an HTTP request and returns the corresponding response.\n </p>\n <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">\n This function is declared as sequential and should be used whenever the\n request may have side-effects.\n </p>\n <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">\n The request parameters are specified in the $request JSON object, which\n has the following minimal structure:\n <pre class=\"ace-static\" ace-mode=\"java\">\n   {\n     \"href\": \"http://www.example.com\"\n   }\n </pre>\n </p>\n <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">This object specifies a GET request of the URI \"http://www.example.com\"</p>\n <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">Additional optional parameters can be specified when issuing a request,\n using the following structure:</p>\n <pre xmlns:xqdoc=\"http://www.xqdoc.org/1.0\" class=\"ace-static\" ace-mode=\"java\">\n  {\n    \"method\": \"POST\",\n    \"href\": \"http://www.example.com\",\n    \"authentication\":\n    {\n      \"username\" : \"user\",\n      \"password\" : \"pass\",\n      \"auth-method\" : \"Basic\"\n    },\n    \"options\":\n    {\n      \"status-only\": true,\n      \"override-media-type\": \"text/plain\",\n      \"follow-redirect\": false,\n      \"timeout\": 30,\n      \"user-agent\": \"Mozilla/5.0\",\n      \"retry\":\n      {\n        \"delay\": [1000, 2000, 5000],\n        \"on-connection-error\": false,\n        \"on-statuses\": [500, 501]\n      }\n    },\n    \"headers\":\n    {\n      \"name\": \"value\",\n      ...\n    },\n    \"body\":\n    {\n      \"media-type\": \"text/plain\",\n      \"content\": \"...\"\n    }\n  }\n</pre>\n <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">\n The method field (string) defines the HTTP verb to use in the HTTP request (i.e., GET, HEAD, OPTIONS,\n POST, PUT, DELETE). If not specified GET will be used.\n The authentication field can be used to specify the credentials and authentication method\n used when issuing a request (e.g, Basic). If the authentication field is specified, all its (string)\n subfields must be specified. If an authentication object is provided, it overrides any\n Authorization header specified in the request.\n Additionally, the following options can be specified:\n <ul>\n    <li>status-only. If true, the response body contents are omitted from the response object.</li>\n    <li>override-media-type. Is a MIME type that will override the Content-Type header returned\n        by the server. It affects the type of the result body content.</li>\n    <li>follow-redirect. Control whether an http redirect is automatically followed or not. If\n        it is false, the http redirect is returned as the response. If it is\n        true (the default) the function tries to follow the redirect, by\n        sending the same request to the new address (including body, headers,\n         and authentication credentials.) Maximum one redirect is followed\n        (there is no attempt to follow a redirect in response to following a\n          first redirect).</li>\n    <li>timeout. Is the maximum number of seconds to wait for the server to respond.\n         If no response is received withing this time duration, an error is thrown.</li>\n    <li>user-agent. The user agent sent to the server when issuing the request.\n        If not specified libcurl-agent/1.0 is used.</li>\n    <li>retry. The request will be automatically retried in case of connection error\n        following mandatory suboptions:\n        <ul>\n            <li>delay: an array specifying the milliseconds of wait before each retry.</li>\n            <li>on-connection-error: whether to retry the request if a connection to the\n                server cannot be estabilished</li>\n            <li>on-statuses: an array containing the statuses which will trigger a retry</li>\n        </ul></li>\n </ul>\n </p>\n <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">One or more headers can be sent to the server, specifying them in an optional headers object.\n Each header is represented as a single (string) field. These headers are overridden if the corresponding\n option/authentication has been specified in the request.</p>\n <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">For non-multipart request a body object can be specified.\n This object must contain both the desired (string) media-type and its content.\n The type of the content field must be either string, base64Binary, or hexBinary. </p>\n <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">For multipart requests, multipart object can be specified in place of the body object.\n The multipart object has the following structure: </p>\n <pre xmlns:xqdoc=\"http://www.xqdoc.org/1.0\" class=\"ace-static\" ace-mode=\"java\">\n  \"multipart\" : {\n    \"boundary\": \"--AaB03x\",\n    \"parts\": [\n      {\n        \"headers\" : {\n           \"Content Disposition: file\",\n           ...\n        },\n        \"body\": {\n          \"media-type\" : \"image/gif\",\n          \"content\" : \"...\"\n        }\n      },\n      {\n        \"body\" : {\n          \"media-type\" : \"text/html\",\n          \"content\" : \"...\"\n        }\n      }\n   ]\n }\n </pre>\n <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">The multipart field contains an optional (string) field which specifies\n the boundary used to separate each part and an array containing all parts.\n Each part contains its specific headers, if any, and the corresponding body.\n </p>\n", "summary" : "<p>  \n This function sends an HTTP request and returns the corresponding response.</p>", "annotation_str" : " %an:sequential", "annotations" : [ { "prefix" : "an", "ns" : "http://zorba.io/annotations", "name" : "sequential", "value" : "" } ], "updating" : false, "parameters" : [ { "name" : "request", "type" : "object()", "occurrence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> a JSON http-client request object</div>" } ], "returns" : { "type" : "object()", "description" : "<a xmlns:xqdoc=\"http://www.xqdoc.org/1.0\" href=\"#standard_return\">standard http-client return type</a>." }, "errors" : [ "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">http:HTTP An HTTP error occurred.</xqdoc:error>", "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">http:REQUEST The specified request is not valid.</xqdoc:error>", "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">http:TIMEOUT A timeout occurred waiting for the response.</xqdoc:error>", "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">http:FOLLOW Cannot follow a redirect of a POST, PUT, or DELETE request.</xqdoc:error>", "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">http:CHARSET The specified charset is unsupported.</xqdoc:error>" ] } ], "variables" : [  ] }, "http://zorba.io/modules/data-cleaning/consolidation" : { "ns" : "http://zorba.io/modules/data-cleaning/consolidation", "description" : " <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">This library module provides data consolidation functions that generally take as input a sequence of XML nodes\n and apply some rule in order do decide which node is better suited to represent the entire sequence.</p>\n <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"/>\n <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">The logic contained in this module is not specific to any particular XQuery implementation,\n although the consolidation functions based on matching sequences against XPath expressions require\n some form of dynamic evaluation for XPath expressions.</p>\n", "sees" : [  ], "authors" : [ "<xqdoc:author xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">Bruno Martins</xqdoc:author>" ], "version" : null, "encoding" : "utf-8", "namespaces" : [ { "uri" : "http://zorba.io/modules/data-cleaning/consolidation", "prefix" : "con" }, { "uri" : "http://zorba.io/modules/data-cleaning/set-similarity", "prefix" : "set" }, { "uri" : "http://zorba.io/modules/data-cleaning/character-based-string-similarity", "prefix" : "simc" }, { "uri" : "http://zorba.io/options/versioning", "prefix" : "ver" } ], "functions" : [ { "isDocumented" : true, "arity" : 2, "name" : "all-xpaths", "qname" : "con:all-xpaths", "signature" : "($s as element(*)*, $paths as xs:string*) as element(*)*", "description" : " <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">Returns the elements from an input sequence of elements that, when matched to a given set of XPath expressions,\n produce a non-empty set of nodes in all the cases.</p>\n <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"/>\n <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">Example usage : <pre class=\"ace-static\" ace-mode=\"xquery\"> all-xpaths( ( &lt;a&gt;&lt;b/&gt;&lt;/a&gt;, &lt;c&gt;&lt;d/&gt;&lt;/c&gt;, &lt;d/&gt;), (\".//b\") ) </pre></p>\n <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"/>\n <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">The function invocation in the example above returns : <pre class=\"ace-static\" ace-mode=\"xquery\"> (&lt;a&gt;&lt;b/&gt;&lt;/a&gt;) </pre></p>\n", "summary" : "<p>  Returns the elements from an input sequence of elements that, when matched to a given set of XPath expressions,\n produce a non-empty set of nodes in all the cases.</p>", "annotation_str" : "", "annotations" : [  ], "updating" : false, "parameters" : [ { "name" : "s", "type" : "element(*)", "occurrence" : "*", "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> A sequence of elements.</div>" }, { "name" : "paths", "type" : "xs:string", "occurrence" : "*", "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> A sequence of strings denoting XPath expressions.</div>" } ], "returns" : { "type" : "element(*)*", "description" : "The elements that, when matched to the given set of XPath expressions, always return a non-empty set of nodes." }, "errors" : [  ] }, { "isDocumented" : true, "arity" : 1, "name" : "least-attributes", "qname" : "con:least-attributes", "signature" : "($s) as element(*)", "description" : " <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">Returns the single node having the smallest number of descending attributes (attributes at any given depth)\n in a sequence of nodes provided as input.</p>\n <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">If more then one answer is possible, return the first node according to the order of the input sequence.</p>\n <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"/>\n <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">Example usage : <pre class=\"ace-static\" ace-mode=\"xquery\">least-attributes( ( &lt;a att1=\"a1\" att2=\"a2\"/&gt;, &lt;b att1=\"a1\" /&gt;, &lt;c/&gt; ) )</pre></p>\n <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"/>\n <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">The function invocation in the example above returns : <pre class=\"ace-static\" ace-mode=\"xquery\">(&lt;c/&gt;)</pre></p>\n", "summary" : "<p>  Returns the single node having the smallest number of descending attributes (attributes at any given depth)\n in a sequence of nodes provided as input.</p>", "annotation_str" : "", "annotations" : [  ], "updating" : false, "parameters" : [ { "name" : "s", "type" : null, "occurrence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> A sequence of nodes.</div>" } ], "returns" : { "type" : "element(*)", "description" : "The node having the smallest number of descending attributes in the input sequence." }, "errors" : [  ] }, { "isDocumented" : true, "arity" : 1, "name" : "least-distinct-attributes", "qname" : "con:least-distinct-attributes", "signature" : "($s) as element(*)", "description" : " <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">Returns the single node having the smallest number of distinct descending attributes (attributes at any\n given depth) in a sequence of nodes provided as input.</p>\n <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">If more then one answer is possible, return the first node according to the order of the input sequence.</p>\n <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"/>\n <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">Example usage : <pre class=\"ace-static\" ace-mode=\"xquery\"> least-distinct-attributes( ( &lt;a att1=\"a1\" att2=\"a2\"/&gt;, &lt;b att1=\"a1\" /&gt;, &lt;c/&gt; ) ) </pre></p>\n <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"/>\n <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">The function invocation in the example above returns : <pre class=\"ace-static\" ace-mode=\"xquery\"> (&lt;c/&gt;) </pre></p>\n", "summary" : "<p>  Returns the single node having the smallest number of distinct descending attributes (attributes at any\n given depth) in a sequence of nodes provided as input.</p>", "annotation_str" : "", "annotations" : [  ], "updating" : false, "parameters" : [ { "name" : "s", "type" : null, "occurrence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> A sequence of nodes.</div>" } ], "returns" : { "type" : "element(*)", "description" : "The node having the smallest number of distinct descending attributes in the input sequence." }, "errors" : [  ] }, { "isDocumented" : true, "arity" : 1, "name" : "least-distinct-elements", "qname" : "con:least-distinct-elements", "signature" : "($s) as element(*)", "description" : " <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">Returns the single node having the smallest number of distinct descending elements (sub-elements at any\n given depth) in a sequence of nodes provided as input.</p>\n <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">If more then one answer is possible, return the first node according to the order of the input sequence.</p>\n <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"/>\n <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">Example usage : <pre class=\"ace-static\" ace-mode=\"xquery\"> least-distinct-elements( ( &lt;a&gt;&lt;b/&gt;&lt;/a&gt;, &lt;b&gt;&lt;c/&gt;&lt;/b&gt;, &lt;d/&gt;) ) </pre></p>\n <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"/>\n <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">The function invocation in the example above returns : <pre class=\"ace-static\" ace-mode=\"xquery\"> (&lt;d/&gt;) </pre></p>\n", "summary" : "<p>  Returns the single node having the smallest number of distinct descending elements (sub-elements at any\n given depth) in a sequence of nodes provided as input.</p>", "annotation_str" : "", "annotations" : [  ], "updating" : false, "parameters" : [ { "name" : "s", "type" : null, "occurrence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> A sequence of nodes.</div>" } ], "returns" : { "type" : "element(*)", "description" : "The node having the smallest number of distinct descending elements in the input sequence." }, "errors" : [  ] }, { "isDocumented" : true, "arity" : 1, "name" : "least-distinct-nodes", "qname" : "con:least-distinct-nodes", "signature" : "($s) as element(*)", "description" : " <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">Returns the single node having the smallest number of distinct descending nodes (sub-nodes at any given depth)\n in a sequence of nodes provided as input.</p>\n <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">If more then one answer is possible, return the first node according to the order of the input sequence.</p>\n <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"/>\n <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">Example usage : <pre class=\"ace-static\" ace-mode=\"xquery\"> least-distinct-nodes( ( &lt;a&gt;&lt;b/&gt;&lt;/a&gt;, &lt;b&gt;&lt;c/&gt;&lt;/b&gt;, &lt;d/&gt;) ) </pre></p>\n <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"/>\n <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">The function invocation in the example above returns : <pre class=\"ace-static\" ace-mode=\"xquery\"> (&lt;d/&gt;) </pre></p>\n", "summary" : "<p>  Returns the single node having the smallest number of distinct descending nodes (sub-nodes at any given depth)\n in a sequence of nodes provided as input.</p>", "annotation_str" : "", "annotations" : [  ], "updating" : false, "parameters" : [ { "name" : "s", "type" : null, "occurrence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> A sequence of nodes.</div>" } ], "returns" : { "type" : "element(*)", "description" : "The node having the smallest number of distinct descending nodes in the input sequence." }, "errors" : [  ] }, { "isDocumented" : true, "arity" : 1, "name" : "least-elements", "qname" : "con:least-elements", "signature" : "($s) as element(*)", "description" : " <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">Returns the single node having the smallest number of descending elements (sub-elements at any given depth)\n in a sequence of nodes provided as input.</p>\n <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">If more then one answer is possible, return the first node according to the order of the input sequence.</p>\n <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"/>\n <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">Example usage : <pre class=\"ace-static\" ace-mode=\"xquery\">least-elements( ( &lt;a&gt;&lt;b/&gt;&lt;/a&gt;, &lt;b&gt;&lt;c/&gt;&lt;/b&gt;, &lt;d/&gt;) )</pre></p>\n <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"/>\n <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">The function invocation in the example above returns : <pre class=\"ace-static\" ace-mode=\"xquery\">(&lt;d/&gt;)</pre></p>\n", "summary" : "<p>  Returns the single node having the smallest number of descending elements (sub-elements at any given depth)\n in a sequence of nodes provided as input.</p>", "annotation_str" : "", "annotations" : [  ], "updating" : false, "parameters" : [ { "name" : "s", "type" : null, "occurrence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> A sequence of nodes.</div>" } ], "returns" : { "type" : "element(*)", "description" : "The node having the smallest number of descending elements in the input sequence." }, "errors" : [  ] }, { "isDocumented" : true, "arity" : 1, "name" : "least-frequent", "qname" : "con:least-frequent", "signature" : "($s) as item()", "description" : " <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">Returns the single less frequent node in a sequence of nodes provided as input.</p>\n <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">If more then one answer is possible, return the first node according to the order of the input sequence.</p>\n <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"/>\n <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">Example usage : <pre class=\"ace-static\" ace-mode=\"xquery\">least-frequent( ( \"a\", \"a\", \"b\") )</pre></p>\n <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"/>\n <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">The function invocation in the example above returns : <pre class=\"ace-static\" ace-mode=\"xquery\">(\"b\")</pre></p>\n", "summary" : "<p>  Returns the single less frequent node in a sequence of nodes provided as input.</p>", "annotation_str" : "", "annotations" : [  ], "updating" : false, "parameters" : [ { "name" : "s", "type" : null, "occurrence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> A sequence of nodes.</div>" } ], "returns" : { "type" : "item()", "description" : "The least frequent node in the input sequence." }, "errors" : [  ] }, { "isDocumented" : true, "arity" : 1, "name" : "least-nodes", "qname" : "con:least-nodes", "signature" : "($s) as element(*)", "description" : " <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">Returns the single node having the smallest number of descending nodes (sub-nodes at any given depth)\n in a sequence of nodes provided as input.</p>\n <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">If more then one answer is possible, return the first node according to the order of the input sequence.</p>\n <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"/>\n <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">Example usage : <pre class=\"ace-static\" ace-mode=\"xquery\">least-nodes( ( &lt;a&gt;&lt;b/&gt;&lt;/a&gt;, &lt;b&gt;&lt;c/&gt;&lt;/b&gt;, &lt;d/&gt;) )</pre></p>\n <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"/>\n <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">The function invocation in the example above returns : <pre class=\"ace-static\" ace-mode=\"xquery\">(&lt;d/&gt;)</pre></p>\n", "summary" : "<p>  Returns the single node having the smallest number of descending nodes (sub-nodes at any given depth)\n in a sequence of nodes provided as input.</p>", "annotation_str" : "", "annotations" : [  ], "updating" : false, "parameters" : [ { "name" : "s", "type" : null, "occurrence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> A sequence of nodes.</div>" } ], "returns" : { "type" : "element(*)", "description" : "The node having the smallest number of descending nodes in the input sequence." }, "errors" : [  ] }, { "isDocumented" : true, "arity" : 2, "name" : "least-similar-edit-distance", "qname" : "con:least-similar-edit-distance", "signature" : "($s as xs:string*, $m as xs:string) as xs:string?", "description" : " <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">Returns the single least similar string, in terms of the edit distance metric towards an input string,\n in a sequence of strings provided as input. If more than one string has a minimum similarity (a maximum\n value for the edit distance metric), return the first string according to the order of the input sequence.</p>\n <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"/>\n <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">Example usage : <pre class=\"ace-static\" ace-mode=\"xquery\">least-similar-edit-distance( ( \"aaabbbccc\", \"aaabbb\", \"eeefff\" ), \"aaab\" )</pre></p>\n <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"/>\n <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">The function invocation in the example above returns : <pre class=\"ace-static\" ace-mode=\"xquery\">( \"eeefff\" )</pre></p>\n", "summary" : "<p>  Returns the single least similar string, in terms of the edit distance metric towards an input string,\n in a sequence of strings provided as input.</p>", "annotation_str" : "", "annotations" : [  ], "updating" : false, "parameters" : [ { "name" : "s", "type" : "xs:string", "occurrence" : "*", "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> A sequence of strings.</div>" }, { "name" : "m", "type" : "xs:string", "occurrence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> The string towards which we want to measure the edit distance.</div>" } ], "returns" : { "type" : "xs:string?", "description" : "The least similar string in the input sequence." }, "errors" : [  ] }, { "isDocumented" : true, "arity" : 2, "name" : "least-tokens", "qname" : "con:least-tokens", "signature" : "($s as xs:string*, $r as xs:string) as xs:string?", "description" : " <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">Returns the single shortest string, in terms of the number of tokens, in a sequence of strings provided as input.</p>\n <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">If more then one answer is possible, return the first string according to the order of the input sequence.</p>\n <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"/>\n <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">Example usage : <pre class=\"ace-static\" ace-mode=\"xquery\">least-tokens( ( \"a b c\", \"a b\", \"a\"), \" +\" )</pre></p>\n <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"/>\n <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">The function invocation in the example above returns : <pre class=\"ace-static\" ace-mode=\"xquery\">(\"a\")</pre></p>\n", "summary" : "<p>  Returns the single shortest string, in terms of the number of tokens, in a sequence of strings provided as input.</p>", "annotation_str" : "", "annotations" : [  ], "updating" : false, "parameters" : [ { "name" : "s", "type" : "xs:string", "occurrence" : "*", "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> A sequence of strings.</div>" }, { "name" : "r", "type" : "xs:string", "occurrence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> A regular expression forming the delimiter character(s) which mark the boundaries between adjacent tokens.</div>" } ], "returns" : { "type" : "xs:string?", "description" : "The shortest string in the input sequence, in terms of the number of tokens." }, "errors" : [  ] }, { "isDocumented" : true, "arity" : 2, "name" : "least-xpaths", "qname" : "con:least-xpaths", "signature" : "($s as element(*)*, $paths as xs:string*) as element(*)*", "description" : " <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">Returns the single element from an input sequence of elements that matches the smallest number of\n XPath expressions from a given set, producing a non-empty set of nodes.</p>\n <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">If more then one answer is possible, return the first element according to the order of the input sequence.</p>\n <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"/>\n <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">Example usage : <pre class=\"ace-static\" ace-mode=\"xquery\"> least-xpaths( ( &lt;a&gt;&lt;b/&gt;&lt;/a&gt;, &lt;d&gt;&lt;c/&gt;&lt;b/&gt;&lt;/d&gt;, &lt;d/&gt;) , (\".//b\", \".//c\") ) </pre></p>\n <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"/>\n <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">The function invocation in the example above returns : <pre class=\"ace-static\" ace-mode=\"xquery\"> ( $lt;d/&gt; ) </pre></p>\n", "summary" : "<p>  Returns the single element from an input sequence of elements that matches the smallest number of\n XPath expressions from a given set, producing a non-empty set of nodes.</p>", "annotation_str" : "", "annotations" : [  ], "updating" : false, "parameters" : [ { "name" : "s", "type" : "element(*)", "occurrence" : "*", "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> A sequence of elements.</div>" }, { "name" : "paths", "type" : "xs:string", "occurrence" : "*", "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> A sequence of strings denoting XPath expressions.</div>" } ], "returns" : { "type" : "element(*)*", "description" : "The element that matches the smallest number of XPath expressions producing a non-empty set of nodes." }, "errors" : [  ] }, { "isDocumented" : true, "arity" : 1, "name" : "longest", "qname" : "con:longest", "signature" : "($s as xs:string*) as xs:string?", "description" : " <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">Returns the single longest string, in terms of the number of characters, in a sequence of strings provided as input.</p>\n <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">If more then one answer is possible, return the first string according to the order of the input sequence.</p>\n <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"/>\n <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">Example usage : <pre class=\"ace-static\" ace-mode=\"xquery\">con:longest( ( \"a\", \"aa\", \"aaa\") )</pre></p>\n <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"/>\n <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">The function invocation in the example above returns : <pre class=\"ace-static\" ace-mode=\"xquery\">(\"aaa\")</pre></p>\n", "summary" : "<p>  Returns the single longest string, in terms of the number of characters, in a sequence of strings provided as input.</p>", "annotation_str" : "", "annotations" : [  ], "updating" : false, "parameters" : [ { "name" : "s", "type" : "xs:string", "occurrence" : "*", "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> A sequence of strings.</div>" } ], "returns" : { "type" : "xs:string?", "description" : "The longest string in the input sequence." }, "errors" : [  ] }, { "isDocumented" : true, "arity" : 2, "name" : "matching", "qname" : "con:matching", "signature" : "($s as xs:string*, $r as xs:string) as xs:string*", "description" : " <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">Returns the strings from an input sequence of strings that match a particular regular expression.</p>\n <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"/>\n <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">Example usage : <pre class=\"ace-static\" ace-mode=\"xquery\">matching( ( \"a A b\", \"c AAA d\", \"e BB f\"), \"A+\" )</pre></p>\n <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"/>\n <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">The function invocation in the example above returns : <pre class=\"ace-static\" ace-mode=\"xquery\">( \"a A b\", \"c AAA d\")</pre></p>\n", "summary" : "<p>  Returns the strings from an input sequence of strings that match a particular regular expression.</p>", "annotation_str" : "", "annotations" : [  ], "updating" : false, "parameters" : [ { "name" : "s", "type" : "xs:string", "occurrence" : "*", "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> A sequence of strings.</div>" }, { "name" : "r", "type" : "xs:string", "occurrence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> The regular expression to be used in the matching.</div>" } ], "returns" : { "type" : "xs:string*", "description" : "The strings in the input sequence that match the input regular expression." }, "errors" : [  ] }, { "isDocumented" : true, "arity" : 1, "name" : "most-attributes", "qname" : "con:most-attributes", "signature" : "($s) as element(*)", "description" : " <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">Returns the single node having the largest number of descending attributes (attributes at any given depth)\n in a sequence of nodes provided as input.</p>\n <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">If more then one answer is possible, return the first node according to the order of the input sequence.</p>\n <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"/>\n <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">Example usage : <pre class=\"ace-static\" ace-mode=\"xquery\">most-attributes( ( &lt;a att1=\"a1\" att2=\"a2\"/&gt;, &lt;b att1=\"a1\" /&gt;, &lt;c/&gt; ) )</pre></p>\n <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"/>\n <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">The function invocation in the example above returns : <pre class=\"ace-static\" ace-mode=\"xquery\">(&lt;a att1=\"a1\" att2=\"a2\"/&gt;)</pre></p>\n", "summary" : "<p>  Returns the single node having the largest number of descending attributes (attributes at any given depth)\n in a sequence of nodes provided as input.</p>", "annotation_str" : "", "annotations" : [  ], "updating" : false, "parameters" : [ { "name" : "s", "type" : null, "occurrence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> A sequence of nodes.</div>" } ], "returns" : { "type" : "element(*)", "description" : "The node having the largest number of descending attributes in the input sequence." }, "errors" : [  ] }, { "isDocumented" : true, "arity" : 1, "name" : "most-distinct-attributes", "qname" : "con:most-distinct-attributes", "signature" : "($s) as element(*)", "description" : " <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">Returns the single node having the largest number of distinct descending attributes (attributes at any\n given depth) in a sequence of nodes provided as input.</p>\n <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">If more then one answer is possible, return the first node according to the order of the input sequence.</p>\n <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"/>\n <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">Example usage : <pre class=\"ace-static\" ace-mode=\"xquery\">most-distinct-attributes( ( &lt;a att1=\"a1\" att2=\"a2\" att3=\"a3\"/&gt;, &lt;a att1=\"a1\" att2=\"a2\"&gt;&lt;b att2=\"a2\" /&gt;&lt;/a&gt;, &lt;c/&gt; ) )</pre></p>\n <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"/>\n <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">The function invocation in the example above returns : <pre class=\"ace-static\" ace-mode=\"xquery\">(&lt;a att1=\"a1\" att2=\"a2\" att3=\"a3\"/&gt;)</pre></p>\n", "summary" : "<p>  Returns the single node having the largest number of distinct descending attributes (attributes at any\n given depth) in a sequence of nodes provided as input.</p>", "annotation_str" : "", "annotations" : [  ], "updating" : false, "parameters" : [ { "name" : "s", "type" : null, "occurrence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> A sequence of nodes.</div>" } ], "returns" : { "type" : "element(*)", "description" : "The node having the largest number of distinct descending attributes in the input sequence." }, "errors" : [  ] }, { "isDocumented" : true, "arity" : 1, "name" : "most-distinct-elements", "qname" : "con:most-distinct-elements", "signature" : "($s) as element(*)", "description" : " <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">Returns the single node having the largest number of distinct descending elements (sub-elements at any\n given depth) in a sequence of nodes provided as input.</p>\n <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">If more then one answer is possible, return the first node according to the order of the input sequence.</p>\n <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"/>\n <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">Example usage : <pre class=\"ace-static\" ace-mode=\"xquery\">most-distinct-elements( ( &lt;a&gt;&lt;b/&gt;&lt;c/&gt;&lt;d/&gt;&lt;/a&gt;, &lt;a&gt;&lt;b/&gt;&lt;b/&gt;&lt;c/&gt;&lt;/a&gt;, &lt;a/&gt; ) )</pre></p>\n <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"/>\n <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">The function invocation in the example above returns : <pre class=\"ace-static\" ace-mode=\"xquery\">(&lt;a&gt;&lt;b/&gt;&lt;c/&gt;&lt;d/&gt;&lt;/a&gt;)</pre></p>\n", "summary" : "<p>  Returns the single node having the largest number of distinct descending elements (sub-elements at any\n given depth) in a sequence of nodes provided as input.</p>", "annotation_str" : "", "annotations" : [  ], "updating" : false, "parameters" : [ { "name" : "s", "type" : null, "occurrence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> A sequence of nodes.</div>" } ], "returns" : { "type" : "element(*)", "description" : "The node having the largest number of distinct descending elements in the input sequence." }, "errors" : [  ] }, { "isDocumented" : true, "arity" : 1, "name" : "most-distinct-nodes", "qname" : "con:most-distinct-nodes", "signature" : "($s) as element(*)", "description" : " <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">Returns the single node having the largest number of distinct descending nodes (sub-nodes at any given depth) in\n a sequence of nodes provided as input.</p>\n <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">If more then one answer is possible, return the first node according to the order of the input sequence.</p>\n <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"/>\n <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">Example usage : <pre class=\"ace-static\" ace-mode=\"xquery\">most-distinct-nodes( ( &lt;a&gt;&lt;b/&gt;&lt;/a&gt;, &lt;a&gt;&lt;a/&gt;&lt;/a&gt;, &lt;b/&gt;) )</pre></p>\n <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"/>\n <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">The function invocation in the example above returns : <pre class=\"ace-static\" ace-mode=\"xquery\">(&lt;a&gt;&lt;b/&gt;&lt;/a&gt;)</pre></p>\n", "summary" : "<p>  Returns the single node having the largest number of distinct descending nodes (sub-nodes at any given depth) in\n a sequence of nodes provided as input.</p>", "annotation_str" : "", "annotations" : [  ], "updating" : false, "parameters" : [ { "name" : "s", "type" : null, "occurrence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> A sequence of nodes.</div>" } ], "returns" : { "type" : "element(*)", "description" : "The node having the largest number of distinct descending nodes in the input sequence." }, "errors" : [  ] }, { "isDocumented" : true, "arity" : 1, "name" : "most-elements", "qname" : "con:most-elements", "signature" : "($s) as element(*)", "description" : " <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">Returns the single node having the largest number of descending elements (sub-elements at any given depth)\n in a sequence of nodes provided as input.</p>\n <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">If more then one answer is possible, return the first node according to the order of the input sequence.</p>\n <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"/>\n <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">Example usage : <pre class=\"ace-static\" ace-mode=\"xquery\">most-elements( ( &lt;a&gt;&lt;b/&gt;&lt;/a&gt;, &lt;a/&gt;, &lt;b/&gt;) )</pre></p>\n <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"/>\n <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">The function invocation in the example above returns : <pre class=\"ace-static\" ace-mode=\"xquery\">(&lt;a&gt;&lt;b/&gt;&lt;/a&gt;)</pre></p>\n", "summary" : "<p>  Returns the single node having the largest number of descending elements (sub-elements at any given depth)\n in a sequence of nodes provided as input.</p>", "annotation_str" : "", "annotations" : [  ], "updating" : false, "parameters" : [ { "name" : "s", "type" : null, "occurrence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> A sequence of nodes.</div>" } ], "returns" : { "type" : "element(*)", "description" : "The node having the largest number of descending elements in the input sequence." }, "errors" : [  ] }, { "isDocumented" : true, "arity" : 1, "name" : "most-frequent", "qname" : "con:most-frequent", "signature" : "($s) as item()", "description" : " <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">Returns the single most frequent node in a sequence of nodes provided as input.</p>\n <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">If more then one answer is possible, returns the first node according to the order of the input sequence.</p>\n <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"/>\n <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">Example usage : <pre class=\"ace-static\" ace-mode=\"xquery\">most-frequent( ( \"a\", \"a\", \"b\") )</pre></p>\n <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"/>\n <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">The function invocation in the example above returns : <pre class=\"ace-static\" ace-mode=\"xquery\">(\"a\")</pre></p>\n", "summary" : "<p>  Returns the single most frequent node in a sequence of nodes provided as input.</p>", "annotation_str" : "", "annotations" : [  ], "updating" : false, "parameters" : [ { "name" : "s", "type" : null, "occurrence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> A sequence of nodes.</div>" } ], "returns" : { "type" : "item()", "description" : "The most frequent node in the input sequence." }, "errors" : [  ] }, { "isDocumented" : true, "arity" : 1, "name" : "most-nodes", "qname" : "con:most-nodes", "signature" : "($s) as element(*)", "description" : " <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">Returns the single node having the largest number of descending nodes (sub-nodes at any given depth) in a\n sequence of nodes provided as input.</p>\n <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">If more then one answer is possible, return the first node according to the order of the input sequence.</p>\n <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"/>\n <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">Example usage : <pre class=\"ace-static\" ace-mode=\"xquery\">most-nodes( ( &lt;a&gt;&lt;b/&gt;&lt;/a&gt;, &lt;a/&gt;, &lt;b/&gt;) )</pre></p>\n <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"/>\n <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">The function invocation in the example above returns : <pre class=\"ace-static\" ace-mode=\"xquery\">(&lt;a&gt;&lt;b/&gt;&lt;/a&gt;)</pre></p>\n", "summary" : "<p>  Returns the single node having the largest number of descending nodes (sub-nodes at any given depth) in a\n sequence of nodes provided as input.</p>", "annotation_str" : "", "annotations" : [  ], "updating" : false, "parameters" : [ { "name" : "s", "type" : null, "occurrence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> A sequence of nodes.</div>" } ], "returns" : { "type" : "element(*)", "description" : "The node having the largest number of descending nodes in the input sequence." }, "errors" : [  ] }, { "isDocumented" : true, "arity" : 2, "name" : "most-similar-edit-distance", "qname" : "con:most-similar-edit-distance", "signature" : "($s as xs:string*, $m as xs:string) as xs:string?", "description" : " <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">Returns the single most similar string, in terms of the edit distance metric towards an input string,\n in a sequence of strings provided as input. If more than one string has a maximum similarity (a minimum\n value for the edit distance metric), the function return the first string according to the order of the\n input sequence.</p>\n <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"/>\n <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">Example usage : <pre class=\"ace-static\" ace-mode=\"xquery\">most-similar-edit-distance( ( \"aaabbbccc\", \"aaabbb\", \"eeefff\" ), \"aaab\" )</pre></p>\n <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"/>\n <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">The function invocation in the example above returns : <pre class=\"ace-static\" ace-mode=\"xquery\">( \"aaabbb\" )</pre></p>\n", "summary" : "<p>  Returns the single most similar string, in terms of the edit distance metric towards an input string,\n in a sequence of strings provided as input.</p>", "annotation_str" : "", "annotations" : [  ], "updating" : false, "parameters" : [ { "name" : "s", "type" : "xs:string", "occurrence" : "*", "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> A sequence of strings.</div>" }, { "name" : "m", "type" : "xs:string", "occurrence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> The string towards which we want to measure the edit distance.</div>" } ], "returns" : { "type" : "xs:string?", "description" : "The most similar string in the input sequence." }, "errors" : [  ] }, { "isDocumented" : true, "arity" : 2, "name" : "most-tokens", "qname" : "con:most-tokens", "signature" : "($s as xs:string*, $r as xs:string) as xs:string?", "description" : " <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">Returns the single longest string, in terms of the number of tokens, in a sequence of strings provided as input.</p>\n <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">If more then one answer is possible, return the first string according to the order of the input sequence.</p>\n <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"/>\n <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">Example usage : <pre class=\"ace-static\" ace-mode=\"xquery\">most-tokens( ( \"a b c\", \"a b\", \"a\"), \" +\" )</pre></p>\n <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"/>\n <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">The function invocation in the example above returns : <pre class=\"ace-static\" ace-mode=\"xquery\">(\"a b c\")</pre></p>\n", "summary" : "<p>  Returns the single longest string, in terms of the number of tokens, in a sequence of strings provided as input.</p>", "annotation_str" : "", "annotations" : [  ], "updating" : false, "parameters" : [ { "name" : "s", "type" : "xs:string", "occurrence" : "*", "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> A sequence of strings.</div>" }, { "name" : "r", "type" : "xs:string", "occurrence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> A regular expression forming the delimiter character(s) which mark the boundaries between adjacent tokens.</div>" } ], "returns" : { "type" : "xs:string?", "description" : "The longest string in the input sequence, in terms of the number of tokens." }, "errors" : [  ] }, { "isDocumented" : true, "arity" : 2, "name" : "most-xpaths", "qname" : "con:most-xpaths", "signature" : "($s as element(*)*, $paths as xs:string*) as element(*)*", "description" : " <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">Returns the single element from an input sequence of elements that matches the largest number of\n XPath expressions from a given set, producing a non-empty set of nodes.</p>\n <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">If more then one answer is possible, return the first element according to the order of the input sequence.</p>\n <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"/>\n <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">Example usage : <pre class=\"ace-static\" ace-mode=\"xquery\"> most-xpaths( ( &lt;a&gt;&lt;b/&gt;&lt;/a&gt;, &lt;d&gt;&lt;c/&gt;&lt;b/&gt;&lt;/d&gt;, &lt;d/&gt;) , (\".//b\", \".//c\") ) </pre></p>\n <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"/>\n <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">The function invocation in the example above returns : <pre class=\"ace-static\" ace-mode=\"xquery\"> ( &lt;d&gt;&lt;c/&gt;&lt;b/&gt;&lt;/d&gt; ) </pre></p>\n", "summary" : "<p>  Returns the single element from an input sequence of elements that matches the largest number of\n XPath expressions from a given set, producing a non-empty set of nodes.</p>", "annotation_str" : "", "annotations" : [  ], "updating" : false, "parameters" : [ { "name" : "s", "type" : "element(*)", "occurrence" : "*", "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> A sequence of elements.</div>" }, { "name" : "paths", "type" : "xs:string", "occurrence" : "*", "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> A sequence of strings denoting XPath expressions.</div>" } ], "returns" : { "type" : "element(*)*", "description" : "The element that matches the largest number of XPath expressions producing a non-empty set of nodes." }, "errors" : [  ] }, { "isDocumented" : true, "arity" : 1, "name" : "shortest", "qname" : "con:shortest", "signature" : "($s as xs:string*) as xs:string?", "description" : " <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">Returns the single shortest string, in terms of the number of characters, in a sequence of strings provided as input.</p>\n <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">If more then one answer is possible, return the first string according to the order of the input sequence.</p>\n <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"/>\n <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">Example usage : <pre class=\"ace-static\" ace-mode=\"xquery\">shortest( ( \"a\", \"aa\", \"aaa\") )</pre></p>\n <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"/>\n <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">The function invocation in the example above returns : <pre class=\"ace-static\" ace-mode=\"xquery\">(\"a\")</pre></p>\n", "summary" : "<p>  Returns the single shortest string, in terms of the number of characters, in a sequence of strings provided as input.</p>", "annotation_str" : "", "annotations" : [  ], "updating" : false, "parameters" : [ { "name" : "s", "type" : "xs:string", "occurrence" : "*", "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> A sequence of strings.</div>" } ], "returns" : { "type" : "xs:string?", "description" : "The shortest string in the input sequence." }, "errors" : [  ] }, { "isDocumented" : true, "arity" : 2, "name" : "some-xpaths", "qname" : "con:some-xpaths", "signature" : "($s as element(*)*, $paths as xs:string*) as element(*)*", "description" : " <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">Returns the elements from a sequence of elements that, when matched to a given set of XPath expressions,\n produce a non-empty set of nodes for some of the cases.</p>\n <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"/>\n <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">Example usage : <pre class=\"ace-static\" ace-mode=\"xquery\"> some-xpaths( ( &lt;a&gt;&lt;b/&gt;&lt;/a&gt;, &lt;d&gt;&lt;c/&gt;&lt;/d&gt;, &lt;d/&gt;), (\".//b\", \".//c\") ) </pre></p>\n <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"/>\n <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">The function invocation in the example above returns : <pre class=\"ace-static\" ace-mode=\"xquery\"> ( &lt;a&gt;&lt;b/&gt;&lt;/a&gt; , &lt;d&gt;&lt;c/&gt;&lt;/d&gt; ) </pre></p>\n", "summary" : "<p>  Returns the elements from a sequence of elements that, when matched to a given set of XPath expressions,\n produce a non-empty set of nodes for some of the cases.</p>", "annotation_str" : "", "annotations" : [  ], "updating" : false, "parameters" : [ { "name" : "s", "type" : "element(*)", "occurrence" : "*", "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> A sequence of elements.</div>" }, { "name" : "paths", "type" : "xs:string", "occurrence" : "*", "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> A sequence of strings denoting XPath expressions.</div>" } ], "returns" : { "type" : "element(*)*", "description" : "The elements that, when matched to the given set of XPath expressions, return a non-empty set of nodes for at least one of the cases." }, "errors" : [  ] }, { "isDocumented" : true, "arity" : 1, "name" : "superstring", "qname" : "con:superstring", "signature" : "($s as xs:string*) as xs:string?", "description" : " <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">Returns the single string, from an input sequence of strings, that appears more frequently as part\n of the other strings in the sequence. If no such string exists, the function returns an empty sequence.</p>\n <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">If more then one answer is possible, the function returns the first string according to the order of the input sequence.</p>\n <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"/>\n <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">Example usage : <pre class=\"ace-static\" ace-mode=\"xquery\">super-string( ( \"aaa bbb ccc\", \"aaa bbb\", \"aaa ddd\", \"eee fff\" ) )</pre></p>\n <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"/>\n <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">The function invocation in the example above returns : <pre class=\"ace-static\" ace-mode=\"xquery\">( \"aaa bbb\" )</pre></p>\n", "summary" : "<p>  Returns the single string, from an input sequence of strings, that appears more frequently as part\n of the other strings in the sequence.</p>", "annotation_str" : "", "annotations" : [  ], "updating" : false, "parameters" : [ { "name" : "s", "type" : "xs:string", "occurrence" : "*", "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> A sequence of strings.</div>" } ], "returns" : { "type" : "xs:string?", "description" : "The string that appears more frequently as part of the other strings in the sequence." }, "errors" : [  ] }, { "isDocumented" : true, "arity" : 2, "name" : "validating-schema", "qname" : "con:validating-schema", "signature" : "($s as element(*)*, $schema as element(*)) as element(*)*", "description" : " <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">Returns the nodes from an input sequence of nodes that validate against a given XML Schema.</p>\n <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"/>\n <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">Example usage : <pre class=\"ace-static\" ace-mode=\"xquery\"> validating-schema ( ( &lt;a/&gt; , &lt;b/&gt; ), &lt;xs:schema xmlns:xs=\"http://www.w3.org/2001/XMLSchema\"&gt;&lt;xs:element name=\"a\" /&gt;&lt;/xs:schema&gt; ) </pre></p>\n <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"/>\n <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">The function invocation in the example above returns : <pre class=\"ace-static\" ace-mode=\"xquery\"> ( &lt;a/&gt; ) </pre></p>\n", "summary" : "<p>  Returns the nodes from an input sequence of nodes that validate against a given XML Schema.</p>", "annotation_str" : "", "annotations" : [  ], "updating" : false, "parameters" : [ { "name" : "s", "type" : "element(*)", "occurrence" : "*", "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> A sequence of elements.</div>" }, { "name" : "schema", "type" : "element(*)", "occurrence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> An element encoding an XML Schema.</div>" } ], "returns" : { "type" : "element(*)*", "description" : "The nodes that validate against the XML Schema. <b xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> Attention : This function is still not implemented. </b>" }, "errors" : [  ] } ], "variables" : [  ] }, "http://zorba.io/modules/node" : { "ns" : "http://zorba.io/modules/node", "description" : " This module defines a set of function which can be used\n to determine (1) the relationship between two nodes (e.g. if one\n is the ancestor if another) and (2) properties of given\n nodes (e.g. their level in the tree).\n The same functionality can be achieved with simple XPath expressions.\n However, please note that using the functions in this modules instead\n of path expressions guarantees better performance.\n", "sees" : [  ], "authors" : [ "<xqdoc:author xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">Matthias Brantner</xqdoc:author>" ], "version" : null, "encoding" : "utf-8", "namespaces" : [ { "uri" : "http://zorba.io/modules/node", "prefix" : "node" }, { "uri" : "http://zorba.io/options/versioning", "prefix" : "ver" } ], "functions" : [ { "isDocumented" : true, "arity" : 2, "name" : "ancestor-of", "qname" : "node:ancestor-of", "signature" : "($node1 as node(), $node2 as node()) as xs:boolean external", "description" : " Determines whether the node given as second argument is an\n ancestor of the node given as first argument.\n", "summary" : "<p> Determines whether the node given as second argument is an\n ancestor of the node given as first argument.</p>", "annotation_str" : "", "annotations" : [  ], "updating" : false, "parameters" : [ { "name" : "node1", "type" : "node()", "occurrence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> the potential descendant</div>" }, { "name" : "node2", "type" : "node()", "occurrence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> the potential ancestor</div>" } ], "returns" : { "type" : "xs:boolean", "description" : "true if $node2 is an ancestor of $node1; false otherwise." }, "errors" : [  ] }, { "isDocumented" : true, "arity" : 2, "name" : "child-of", "qname" : "node:child-of", "signature" : "($node1 as node(), $node2 as node()) as xs:boolean external", "description" : " Determines whether the node given as second argument is a\n child of the node given as first argument.\n", "summary" : "<p> Determines whether the node given as second argument is a\n child of the node given as first argument.</p>", "annotation_str" : "", "annotations" : [  ], "updating" : false, "parameters" : [ { "name" : "node1", "type" : "node()", "occurrence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> the potential parent</div>" }, { "name" : "node2", "type" : "node()", "occurrence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> the potential child</div>" } ], "returns" : { "type" : "xs:boolean", "description" : "true if $node2 is a child of $node1; false otherwise." }, "errors" : [  ] }, { "isDocumented" : true, "arity" : 1, "name" : "copy", "qname" : "node:copy", "signature" : "($input as node()*) as node()* external", "description" : " Return a deep copy of every given node according to the properties\n specified in the static context of the invoking module.<p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"/>\n Please note that a copy of a node is parentless.\n", "summary" : "<p> Return a deep copy of every given node according to the properties\n specified in the static context of the invoking module.</p>", "annotation_str" : "", "annotations" : [  ], "updating" : false, "parameters" : [ { "name" : "input", "type" : "node()", "occurrence" : "*", "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> the node to copy</div>" } ], "returns" : { "type" : "node()*", "description" : "a deep copy of every node in the input sequence or the empty sequence if $input is the empty sequence." }, "errors" : [  ] }, { "isDocumented" : true, "arity" : 2, "name" : "descendant-of", "qname" : "node:descendant-of", "signature" : "($node1 as node(), $node2 as node()) as xs:boolean external", "description" : " Determines whether the node given as second argument is a\n descendant of the node given as first argument.\n", "summary" : "<p> Determines whether the node given as second argument is a\n descendant of the node given as first argument.</p>", "annotation_str" : "", "annotations" : [  ], "updating" : false, "parameters" : [ { "name" : "node1", "type" : "node()", "occurrence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> the potential ancestor</div>" }, { "name" : "node2", "type" : "node()", "occurrence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> the potential descendant</div>" } ], "returns" : { "type" : "xs:boolean", "description" : "true if $node2 is a descendant of $node1; false otherwise." }, "errors" : [  ] }, { "isDocumented" : true, "arity" : 2, "name" : "following-of", "qname" : "node:following-of", "signature" : "($node1 as node(), $node2 as node()) as xs:boolean external", "description" : " Determines whether the node given as second argument is\n following the node given as first argument.\n", "summary" : "<p> Determines whether the node given as second argument is\n following the node given as first argument.</p>", "annotation_str" : "", "annotations" : [  ], "updating" : false, "parameters" : [ { "name" : "node1", "type" : "node()", "occurrence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> the potential preceding node</div>" }, { "name" : "node2", "type" : "node()", "occurrence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> the potential following node</div>" } ], "returns" : { "type" : "xs:boolean", "description" : "true if $node2 is following the node $node1; false otherwise." }, "errors" : [  ] }, { "isDocumented" : true, "arity" : 2, "name" : "following-sibling-of", "qname" : "node:following-sibling-of", "signature" : "($node1 as node(), $node2 as node()) as xs:boolean external", "description" : " Determines whether the node given as second argument is a\n following-sibling of the node given as first argument.\n", "summary" : "<p> Determines whether the node given as second argument is a\n following-sibling of the node given as first argument.</p>", "annotation_str" : "", "annotations" : [  ], "updating" : false, "parameters" : [ { "name" : "node1", "type" : "node()", "occurrence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> the potential preceding-sibling</div>" }, { "name" : "node2", "type" : "node()", "occurrence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> the potential following-sibling</div>" } ], "returns" : { "type" : "xs:boolean", "description" : "true if $node2 is a following-sibling of $node1; false otherwise." }, "errors" : [  ] }, { "isDocumented" : true, "arity" : 2, "name" : "least-common-ancestor", "qname" : "node:least-common-ancestor", "signature" : "($node1 as node(), $node2 as node()) as node()? external", "description" : " Computes the least common ancestor of two given nodes in\n the tree.\n", "summary" : "<p> Computes the least common ancestor of two given nodes in\n the tree.</p>", "annotation_str" : "", "annotations" : [  ], "updating" : false, "parameters" : [ { "name" : "node1", "type" : "node()", "occurrence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> the first node</div>" }, { "name" : "node2", "type" : "node()", "occurrence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> the second node</div>" } ], "returns" : { "type" : "node()?", "description" : "the least common ancestor of the two given nodes or the empty sequence if the two nodes are not part of the same tree." }, "errors" : [  ] }, { "isDocumented" : true, "arity" : 1, "name" : "level", "qname" : "node:level", "signature" : "($node as node()) as xs:integer external", "description" : " Computes the level of a given node in the tree.\n Note: The first level has the number one.\n", "summary" : "<p> Computes the level of a given node in the tree.</p>", "annotation_str" : "", "annotations" : [  ], "updating" : false, "parameters" : [ { "name" : "node", "type" : "node()", "occurrence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> the node for which the level should be computed</div>" } ], "returns" : { "type" : "xs:integer", "description" : "The level as xs:integer of the given node in the tree." }, "errors" : [  ] }, { "isDocumented" : true, "arity" : 2, "name" : "parent-of", "qname" : "node:parent-of", "signature" : "($node1 as node(), $node2 as node()) as xs:boolean external", "description" : " Determines whether the node given as second argument is a\n parent of the node given as first argument.\n", "summary" : "<p> Determines whether the node given as second argument is a\n parent of the node given as first argument.</p>", "annotation_str" : "", "annotations" : [  ], "updating" : false, "parameters" : [ { "name" : "node1", "type" : "node()", "occurrence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> the potential child</div>" }, { "name" : "node2", "type" : "node()", "occurrence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> the potential parent</div>" } ], "returns" : { "type" : "xs:boolean", "description" : "true if $node2 is a parent of $node1; false otherwise." }, "errors" : [  ] }, { "isDocumented" : true, "arity" : 2, "name" : "preceding-of", "qname" : "node:preceding-of", "signature" : "($node1 as node(), $node2 as node()) as xs:boolean external", "description" : " Determines whether the node given as second argument is\n preceding the node given as first argument.\n", "summary" : "<p> Determines whether the node given as second argument is\n preceding the node given as first argument.</p>", "annotation_str" : "", "annotations" : [  ], "updating" : false, "parameters" : [ { "name" : "node1", "type" : "node()", "occurrence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> the potential following node</div>" }, { "name" : "node2", "type" : "node()", "occurrence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> the potential preceding node</div>" } ], "returns" : { "type" : "xs:boolean", "description" : "true if $node2 is preceding the node $node1; false otherwise." }, "errors" : [  ] }, { "isDocumented" : true, "arity" : 2, "name" : "preceding-sibling-of", "qname" : "node:preceding-sibling-of", "signature" : "($node1 as node(), $node2 as node()) as xs:boolean external", "description" : " Determines whether the node given as second argument is a\n preceding-sibling of the node given as first argument.\n", "summary" : "<p> Determines whether the node given as second argument is a\n preceding-sibling of the node given as first argument.</p>", "annotation_str" : "", "annotations" : [  ], "updating" : false, "parameters" : [ { "name" : "node1", "type" : "node()", "occurrence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> the potential following-sibling</div>" }, { "name" : "node2", "type" : "node()", "occurrence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> the potential preceding-sibling</div>" } ], "returns" : { "type" : "xs:boolean", "description" : "true if $node2 is a preceding-sibling of $node1; false otherwise." }, "errors" : [  ] } ], "variables" : [  ] }, "http://zorba.io/modules/archive" : { "ns" : "http://zorba.io/modules/archive", "description" : " This module provides functionality to work with (possibly compressed)\n archives. For example, it provides functions to retrieve the names or\n extract the values of several entries in a ZIP archive. Moreover,\n there exist functions that allow to create or update archives.<p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"/>\n The following archive formats and compression algorithms are supported:\n <ul xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">\n   <li>ZIP (with compression DEFLATE or STORE)</li>\n   <li>TAR (with compression GZIP)</li>\n </ul>\n <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"/>\n", "sees" : [  ], "authors" : [ "<xqdoc:author xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">Luis Rodgriguez, Juan Zacarias, and Matthias Brantner</xqdoc:author>" ], "version" : null, "encoding" : "utf-8", "namespaces" : [ { "uri" : "http://zorba.io/modules/archive", "prefix" : "a" }, { "uri" : "http://zorba.io/options/versioning", "prefix" : "ver" } ], "functions" : [ { "isDocumented" : true, "arity" : 2, "name" : "create", "qname" : "a:create", "signature" : "($entries as item()*, $contents as item()*) as xs:base64Binary external", "description" : " Creates a new ZIP archive out of the given entries and contents. <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"/>\n All entries are compressed with the DEFLATE compression algorithm.<p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"/>\n The parameters $entries and $contents have the same meaning as for\n the function a:create with three arguments.<p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"/>\n Entry entries can include a type element, this element can have one\n of two possible values: \"regular\" or \"directory\". If \"regular\" is\n specified then the entry will be created as a regular file; if \"directory\"\n is specified then the entry will be created as a directory, no contents\n will be read from $contents in this case. If no value is specified for type\n then it will be set to \"regular\". <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"/>\n Example:\n <pre xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">\n $zip-file := a:create(\n    ({ \"encoding\" : \"ISO-8859-1\", \"type\" : \"directory\", \"name\" : \"dir1\" }, \"dir1/file1\"),\n    (\"file contents\"))\n </pre>\n <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"/>\n", "summary" : "<p> Creates a new ZIP archive out of the given entries and contents.</p>", "annotation_str" : "", "annotations" : [  ], "updating" : false, "parameters" : [ { "name" : "entries", "type" : "item()", "occurrence" : "*", "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> the meta data for the entries in the archive. Each entry can be of type xs:string or a JSON oibject describing the entry.</div>" }, { "name" : "contents", "type" : "item()", "occurrence" : "*", "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> the content for the archive. Each item in the sequence can be of type xs:string or xs:base64Binary.</div>" } ], "returns" : { "type" : "xs:base64Binary", "description" : "the generated archive as xs:base64Binary" }, "errors" : [ "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">a:ENTRY-COUNT-MISMATCH if the number of entries that don't describe directories differs from the number of items in the $contents sequence: count($non-directory-entries) ne count($contents)</xqdoc:error>", "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">a:INVALID-ENTRY-VALS if a values in an entry object are invalid</xqdoc:error>", "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">a:INVALID-ENCODING if a given encoding is invalid or not supported</xqdoc:error>", "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">err:FORG0006 if an item in the contents sequence is not of type xs:string or xs:base64Binary</xqdoc:error>" ] }, { "isDocumented" : true, "arity" : 3, "name" : "create", "qname" : "a:create", "signature" : "($entries as item()*, $contents as item()*, $options as object()) as xs:base64Binary external", "description" : " Creates a new archive out of the given entries and contents. <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"/>\n The $entries arguments provides meta data for each entry in the archive.\n For example, the name of the entry (mandatory) or the last-modified date\n (optional). An entry can either be of type xs:string to describe the entry\n name or of type xs:base64Binary to provide additional meta data.<p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"/>\n The $contents sequence provides the data (xs:string or xs:base64Binary) for\n the entries that should be included in the archive. Its length needs to\n match the length of the entries in the $entries sequence that don't describe\n directory entries (a:ARCH0001). All items of type xs:base64Binary are decoded\n before being added to the archive.<p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"/>\n For each entry, the name, last-modified date and time, and compression\n can be specified. In addition, an encoding can be specified which is used to\n store entries of type xs:string. If no last-modified attribute is given, the\n default is the current date and time. The compression is useful if various\n entries in a ZIP archive are compressed using different compression\n algorithms (i.e. store or deflate).<p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"/>\n For example, the following sequence may be used to describe an archive\n containing two elements: <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"/>\n <pre xmlns:xqdoc=\"http://www.xqdoc.org/1.0\" class=\"ace-static\" ace-mode=\"xquery\">{\n   \"last-modified\" : \"{fn:current-dateTime()}\"\n   \"name\" : \"myfile.txt\"\n },\n {\n   \"encoding\" : \"ISO-8859-1\",\n   \"compression\" : \"store\",\n   \"name\" : \"dir/myfile.xml\"\n }\n </pre>\n <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"/>\n The $options argument may be used to describe general options for the\n archive.  For example, the following options can be used to create a ZIP\n archive in which all entries are compressed with the DEFLATE compression\n algorithm: <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"/>\n <pre xmlns:xqdoc=\"http://www.xqdoc.org/1.0\" class=\"ace-static\" ace-mode=\"xquery\">{\n   \"format\" : \"ZIP\",\n   \"compression\" : \"DEFLATE\"\n }\n </pre>\n <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"/>\n The result of the function is the generated archive as a item of type\n xs:base64Binary.<p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"/>\n", "summary" : "<p> Creates a new archive out of the given entries and contents.</p>", "annotation_str" : "", "annotations" : [  ], "updating" : false, "parameters" : [ { "name" : "entries", "type" : "item()", "occurrence" : "*", "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> the meta data for the entries in the archive. Each entry can be of type xs:string or an JSON object describing the entry.</div>" }, { "name" : "contents", "type" : "item()", "occurrence" : "*", "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> the content for the archive. Each item in the sequence can be of type xs:string or xs:base64Binary.</div>" }, { "name" : "options", "type" : "object()", "occurrence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> the options used to generate the archive.</div>" } ], "returns" : { "type" : "xs:base64Binary", "description" : "the generated archive as xs:base64Binary" }, "errors" : [ "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">a:ENTRY-COUNT-MISMATCH if the number of entries describing non-directories differs from the number of items in the $contents sequence: count($non-directoy-entries) ne count($contents)</xqdoc:error>", "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">a:INVALID-OPTIONS if the options argument contains invalid values</xqdoc:error>", "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">a:INVALID-ENTRY-VALS if any values in an entry are invalid</xqdoc:error>", "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">a:INVALID-ENCODING if a given encoding is invalid or not supported</xqdoc:error>", "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">a:DIFFERENT-COMPRESSIONS-NOT-SUPPORTED if different compression algorithms were selected but the actual version of libarchive doesn't support it.</xqdoc:error>", "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">err:FORG0006 if an item in the contents sequence is not of type xs:string or xs:base64Binary</xqdoc:error>" ] }, { "isDocumented" : true, "arity" : 2, "name" : "delete", "qname" : "a:delete", "signature" : "($archive as xs:base64Binary, $entry-names as xs:string*) as xs:base64Binary external", "description" : " Deletes entries from an archive. <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"/>\n", "summary" : "<p> Deletes entries from an archive.</p>", "annotation_str" : "", "annotations" : [  ], "updating" : false, "parameters" : [ { "name" : "archive", "type" : "xs:base64Binary", "occurrence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> the archive to extract the entries from as xs:base64Binary</div>" }, { "name" : "entry-names", "type" : "xs:string", "occurrence" : "*", "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> a sequence of names for entries which should be deleted</div>" } ], "returns" : { "type" : "xs:base64Binary", "description" : "the updated base64Binary" }, "errors" : [ "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">a:CORRUPTED-ARCHIVE if $archive is not an archive or corrupted</xqdoc:error>" ] }, { "isDocumented" : true, "arity" : 1, "name" : "entries", "qname" : "a:entries", "signature" : "($archive as xs:base64Binary) as object()* external", "description" : " Returns the header information of all entries in the given archive as a JSON\n objects sequence. <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"/>\n Such information includes the name of the entry, the uncompressed size,\n as well as the last-modified timestamp. Note that not all values are\n available in every archive.<p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"/>\n", "summary" : "<p> Returns the header information of all entries in the given archive as a JSON\n objects sequence.</p>", "annotation_str" : "", "annotations" : [  ], "updating" : false, "parameters" : [ { "name" : "archive", "type" : "xs:base64Binary", "occurrence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> the archive to list the entries from as xs:base64Binary</div>" } ], "returns" : { "type" : "object()*", "description" : "a sequence of strings, one for each entry in the archive" }, "errors" : [ "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">a:CORRUPTED-ARCHIVE if $archive is not an archive or corrupted</xqdoc:error>" ] }, { "isDocumented" : true, "arity" : 1, "name" : "extract-binary", "qname" : "a:extract-binary", "signature" : "($archive as xs:base64Binary) as xs:base64Binary* external", "description" : " Returns the entries identified by the given paths from the archive\n as base64Binary. <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"/>\n", "summary" : "<p> Returns the entries identified by the given paths from the archive\n as base64Binary.</p>", "annotation_str" : "", "annotations" : [  ], "updating" : false, "parameters" : [ { "name" : "archive", "type" : "xs:base64Binary", "occurrence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> the archive to extract the entries from as xs:base64Binary</div>" } ], "returns" : { "type" : "xs:base64Binary*", "description" : "one xs:base64Binary item for the contents of each entry in the archive" }, "errors" : [ "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">a:CORRUPTED-ARCHIVE if $archive is not an archive or corrupted</xqdoc:error>" ] }, { "isDocumented" : true, "arity" : 2, "name" : "extract-binary", "qname" : "a:extract-binary", "signature" : "($archive as xs:base64Binary, $entry-names as xs:string*) as xs:base64Binary* external", "description" : " Returns the entries identified by the given paths from the archive\n as base64Binary. <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"/>\n", "summary" : "<p> Returns the entries identified by the given paths from the archive\n as base64Binary.</p>", "annotation_str" : "", "annotations" : [  ], "updating" : false, "parameters" : [ { "name" : "archive", "type" : "xs:base64Binary", "occurrence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> the archive to extract the entries from as xs:base64Binary</div>" }, { "name" : "entry-names", "type" : "xs:string", "occurrence" : "*", "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> a sequence of names for entries which should be extracted</div>" } ], "returns" : { "type" : "xs:base64Binary*", "description" : "a sequence of xs:base64Binary itmes for the given sequence of names or the empty sequence if no entries match the given names." }, "errors" : [ "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">a:CORRUPTED-ARCHIVE if $archive is not an archive or corrupted</xqdoc:error>" ] }, { "isDocumented" : true, "arity" : 1, "name" : "extract-text", "qname" : "a:extract-text", "signature" : "($archive as xs:base64Binary) as xs:string* external", "description" : " Extracts the contents of all entries in the given archive as text\n using UTF-8 as default encoding. <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"/>\n", "summary" : "<p> Extracts the contents of all entries in the given archive as text\n using UTF-8 as default encoding.</p>", "annotation_str" : "", "annotations" : [  ], "updating" : false, "parameters" : [ { "name" : "archive", "type" : "xs:base64Binary", "occurrence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> the archive to extract the entries from as xs:base64Binary</div>" } ], "returns" : { "type" : "xs:string*", "description" : "one string for the contents of each entry in the archive" }, "errors" : [ "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">a:CORRUPTED-ARCHIVE if $archive is not an archive or corrupted</xqdoc:error>", "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">err:FOCH0001 if any of the entries contains invalid utf-8 characters</xqdoc:error>" ] }, { "isDocumented" : true, "arity" : 2, "name" : "extract-text", "qname" : "a:extract-text", "signature" : "($archive as xs:base64Binary, $entry-names as xs:string*) as xs:string* external", "description" : " Extracts the contets of the entries identified by a given sequence of\n names as text.\n The default encoding used to read the string is UTF-8. <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"/>\n", "summary" : "<p> Extracts the contets of the entries identified by a given sequence of\n names as text.</p>", "annotation_str" : "", "annotations" : [  ], "updating" : false, "parameters" : [ { "name" : "archive", "type" : "xs:base64Binary", "occurrence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> the archive to extract the entries from as xs:base64Binary</div>" }, { "name" : "entry-names", "type" : "xs:string", "occurrence" : "*", "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> a sequence of names for entries which should be extracted</div>" } ], "returns" : { "type" : "xs:string*", "description" : "a sequence of strings for the given sequence of names or the empty sequence if no entries match the given names." }, "errors" : [ "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">a:CORRUPTED-ARCHIVE if $archive is not an archive or corrupted</xqdoc:error>", "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">err:FOCH0001 if any of the entries requested contains invalid utf-8 characters</xqdoc:error>" ] }, { "isDocumented" : true, "arity" : 3, "name" : "extract-text", "qname" : "a:extract-text", "signature" : "($archive as xs:base64Binary, $entry-names as xs:string*, $encoding as xs:string) as xs:string* external", "description" : " Extracts the contets of the entries identified by a given sequence of\n names as text. Each entry is treated with the given encoding. <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"/>\n", "summary" : "<p> Extracts the contets of the entries identified by a given sequence of\n names as text.</p>", "annotation_str" : "", "annotations" : [  ], "updating" : false, "parameters" : [ { "name" : "archive", "type" : "xs:base64Binary", "occurrence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> the archive to extract the entries from as xs:base64Binary</div>" }, { "name" : "entry-names", "type" : "xs:string", "occurrence" : "*", "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> a sequence of entry names that should be extracted</div>" }, { "name" : "encoding", "type" : "xs:string", "occurrence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> a encoding for transcoding each of the extracted entries</div>" } ], "returns" : { "type" : "xs:string*", "description" : "a sequence of strings for the given sequence of names or the empty sequence if no entries match the given names." }, "errors" : [ "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">a:CORRUPTED-ARCHIVE if $archive is not an archive or corrupted</xqdoc:error>", "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">a:INVALID-ENCODING if the given $encoding is invalid or not supported</xqdoc:error>", "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">err:FOCH0001 if a transcoding error happens</xqdoc:error>" ] }, { "isDocumented" : true, "arity" : 1, "name" : "options", "qname" : "a:options", "signature" : "($archive as xs:base64Binary) as object() external", "description" : " Returns the algorithm and format options as a JSON object for a given archive.\n For example, for a ZIP archive, the following options element\n would be returned: <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"/>\n <pre xmlns:xqdoc=\"http://www.xqdoc.org/1.0\" class=\"ace-static\" ace-mode=\"xquery\">{\n   \"format\" : \"ZIP\",\n   \"compression\" : \"DEFLATE\"\n }\n </pre>\n <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"/>\n", "summary" : "<p> Returns the algorithm and format options as a JSON object for a given archive.</p>", "annotation_str" : "", "annotations" : [  ], "updating" : false, "parameters" : [ { "name" : "archive", "type" : "xs:base64Binary", "occurrence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> the archive as xs:base64Binary</div>" } ], "returns" : { "type" : "object()", "description" : "the algorithm and format options as a JSON object" }, "errors" : [ "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">a:CORRUPTED-ARCHIVE if $archive is not an archive or corrupted</xqdoc:error>" ] }, { "isDocumented" : true, "arity" : 3, "name" : "update", "qname" : "a:update", "signature" : "($archive as xs:base64Binary, $entries as item()*, $contents as item()*) as xs:base64Binary external", "description" : " Adds and replaces entries in an archive according to\n the given spec. The contents can be string and base64Binary items. <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"/>\n The parameters $entries and $contents have the same meaning as for\n the function a:create with three arguments.<p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"/>\n", "summary" : "<p> Adds and replaces entries in an archive according to\n the given spec.</p>", "annotation_str" : "", "annotations" : [  ], "updating" : false, "parameters" : [ { "name" : "archive", "type" : "xs:base64Binary", "occurrence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> the archive to add or replace content</div>" }, { "name" : "entries", "type" : "item()", "occurrence" : "*", "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> the meta data for the entries in the archive. Each entry can be of type xs:string or a JSON object. For mandatory fields in the JSON object see create function.</div>" }, { "name" : "contents", "type" : "item()", "occurrence" : "*", "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> the content for the archive. Each item in the sequence can be of type xs:string or xs:base64Binary.</div>" } ], "returns" : { "type" : "xs:base64Binary", "description" : "the updated xs:base64Binary" }, "errors" : [ "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">a:ENTRY-COUNT-MISMATCH if the number of entry elements differs from the number of items in the $contents sequence: count($non-directory-entries) ne count($contents)</xqdoc:error>", "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">a:INVALID-ENTRY-VALS if a value for an entry element is invalid</xqdoc:error>", "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">a:INVALID-ENCODING if a given encoding is invalid or not supported</xqdoc:error>", "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">a:DIFFERENT-COMPRESSIONS-NOT-SUPPORTED if different compression algorithms were selected but the actual version of libarchive doesn't support it.</xqdoc:error>", "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">err:FORG0006 if an item in the contents sequence is not of type xs:string or xs:base64Binary</xqdoc:error>", "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">a:CORRUPTED-ARCHIVE if $archive is not an archive or corrupted</xqdoc:error>" ] } ], "variables" : [  ] }, "http://www.zorba-xquery.com/modules/converters/html" : { "ns" : "http://www.zorba-xquery.com/modules/converters/html", "description" : " <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">\n This module provides functions to <a href=\"http://www.w3.org/People/Raggett/tidy/\" target=\"_blank\">tidy</a> a HTML document. <br/>\n The functions in this module take an HTML document (a string) as parameter,\n tidy it in order to result in valid XHTML, and return this XHTML document as a document-node.\n </p>\n", "sees" : [  ], "authors" : [ "<xqdoc:author xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">Sorin Nasoi</xqdoc:author>" ], "version" : null, "encoding" : "utf-8", "namespaces" : [ { "uri" : "http://ww.w3.org/2005/xqt-errors", "prefix" : "err" }, { "uri" : "http://www.zorba-xquery.com/modules/converters/html", "prefix" : "html" }, { "uri" : "http://www.zorba-xquery.com/modules/converters/html-options", "prefix" : "html-options" }, { "uri" : "http://zorba.io/modules/schema", "prefix" : "schema" }, { "uri" : "http://zorba.io/options/versioning", "prefix" : "ver" } ], "functions" : [ { "isDocumented" : true, "arity" : 1, "name" : "parse", "qname" : "html:parse", "signature" : "($html as xs:string) as document()", "description" : " <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">This function tidies the given HTML string and returns\n a valid XHTML document node.</p>\n <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">This functions automatically sets the following tidying parameters:\n   <ul>\n    <li>output-xml=yes</li>\n    <li>doctype=omit</li>\n    <li>quote-nbsp=no</li>\n    <li>char-encoding=utf8</li>\n    <li>newline=LF</li>\n    <li>tidy-mark=no</li>\n   </ul>\n </p>\n", "summary" : "<p>  This function tidies the given HTML string and returns\n a valid XHTML document node.</p>", "annotation_str" : "", "annotations" : [  ], "updating" : false, "parameters" : [ { "name" : "html", "type" : "xs:string", "occurrence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> the HTML string to tidy</div>" } ], "returns" : { "type" : "document()", "description" : "the tidied XML document" }, "errors" : [ "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">html:InternalError if an internal error occurred while tidying the string.</xqdoc:error>" ] }, { "isDocumented" : true, "arity" : 2, "name" : "parse", "qname" : "html:parse", "signature" : "($html as xs:string, $options as element(html-options:options)) as document()", "description" : " <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">This function tidies the given HTML string and returns\n a valid XHTML document node.</p>\n <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">The second parameter allows to specify options that\n configure the tidy process. This parameter is a sequence\n of name=value pairs. Allowed parameter names and values\n are documented at <a href=\"http://tidy.sourceforge.net/docs/quickref.html\">\n http://tidy.sourceforge.net/docs/quickref.html</a>.</p>\n", "summary" : "<p>  This function tidies the given HTML string and returns\n a valid XHTML document node.</p>", "annotation_str" : "", "annotations" : [  ], "updating" : false, "parameters" : [ { "name" : "html", "type" : "xs:string", "occurrence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> the HTML string to tidy</div>" }, { "name" : "options", "type" : "element(html-options:options)", "occurrence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> a set of name and value pairs that provide options to configure the tidy process that have to be validated against the \"http://www.zorba-xquery.com/modules/converters/html-options\" schema.</div>" } ], "returns" : { "type" : "document()", "description" : "the tidied XHTML document node" }, "errors" : [ "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">err:XQDY0027 if $options can not be validated against the html-options schema</xqdoc:error>", "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">html:TidyOption if there was an error with one of the options in the $options parameter that couldn't have been caught by validating against the schema</xqdoc:error>", "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">html:InternalError if an internal error occurred while tidying the string.</xqdoc:error>" ] } ], "variables" : [  ] }, "http://zorba.io/modules/data-cleaning/set-similarity" : { "ns" : "http://zorba.io/modules/data-cleaning/set-similarity", "description" : " <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">This library module provides similarity functions for comparing sets of XML\n nodes (e.g., sets of XML elements, attributes or atomic values).</p>\n <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"/>\n <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">These functions are particularly useful for matching near duplicate sets of XML nodes.</p>\n <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"/>\n <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">The logic contained in this module is not specific to any particular XQuery implementation.</p>\n", "sees" : [  ], "authors" : [ "<xqdoc:author xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">Bruno Martins</xqdoc:author>" ], "version" : null, "encoding" : "utf-8", "namespaces" : [ { "uri" : "http://zorba.io/modules/data-cleaning/set-similarity", "prefix" : "set" }, { "uri" : "http://zorba.io/options/versioning", "prefix" : "ver" } ], "functions" : [ { "isDocumented" : true, "arity" : 2, "name" : "deep-intersect", "qname" : "set:deep-intersect", "signature" : "($s1, $s2) as item()*", "description" : " <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">Returns the intersection between two sets, using the deep-equal() function to compare the XML nodes from the sets.</p>\n <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"/>\n <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">Example usage : <pre class=\"ace-static\" ace-mode=\"xquery\"> deep-intersect ( ( \"a\", \"b\", \"c\") , ( \"a\", \"a\", <d/> ) ) </pre></p>\n <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"/>\n <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">The function invocation in the example above returns : <pre class=\"ace-static\" ace-mode=\"xquery\"> (\"a\") </pre></p>\n", "summary" : "<p>  Returns the intersection between two sets, using the deep-equal() function to compare the XML nodes from the sets.</p>", "annotation_str" : "", "annotations" : [  ], "updating" : false, "parameters" : [ { "name" : "s1", "type" : null, "occurrence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> The first set.</div>" }, { "name" : "s2", "type" : null, "occurrence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> The second set.</div>" } ], "returns" : { "type" : "item()*", "description" : "The intersection of both sets." }, "errors" : [  ] }, { "isDocumented" : true, "arity" : 2, "name" : "deep-union", "qname" : "set:deep-union", "signature" : "($s1, $s2) as item()*", "description" : " <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">Returns the union between two sets, using the deep-equal() function to compare the XML nodes from the sets.</p>\n <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"/>\n <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">Example usage : <pre class=\"ace-static\" ace-mode=\"xquery\"> deep-union ( ( \"a\", \"b\", \"c\") , ( \"a\", \"a\", <d/> ) ) </pre></p>\n <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"/>\n <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">The function invocation in the example above returns : <pre class=\"ace-static\" ace-mode=\"xquery\"> (\"a\", \"b\", \"c\", <d/> ) </pre></p>\n", "summary" : "<p>  Returns the union between two sets, using the deep-equal() function to compare the XML nodes from the sets.</p>", "annotation_str" : "", "annotations" : [  ], "updating" : false, "parameters" : [ { "name" : "s1", "type" : null, "occurrence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> The first set.</div>" }, { "name" : "s2", "type" : null, "occurrence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> The second set.</div>" } ], "returns" : { "type" : "item()*", "description" : "The union of both sets." }, "errors" : [  ] }, { "isDocumented" : true, "arity" : 2, "name" : "dice", "qname" : "set:dice", "signature" : "($s1, $s2) as xs:double", "description" : " <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">Returns the Dice similarity coefficient between two sets of XML nodes.</p>\n <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">The Dice coefficient is defined as defined as twice the shared information between the input sets\n (i.e., the size of the intersection) over the sum of the cardinalities for the input sets.</p>\n <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"/>\n <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">Example usage : <pre class=\"ace-static\" ace-mode=\"xquery\"> dice ( ( \"a\", \"b\", <c/> ) , ( \"a\", \"a\", \"d\") ) </pre></p>\n <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"/>\n <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">The function invocation in the example above returns : <pre class=\"ace-static\" ace-mode=\"xquery\"> 0.4 </pre></p>\n", "summary" : "<p>  Returns the Dice similarity coefficient between two sets of XML nodes.</p>", "annotation_str" : "", "annotations" : [  ], "updating" : false, "parameters" : [ { "name" : "s1", "type" : null, "occurrence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> The first set.</div>" }, { "name" : "s2", "type" : null, "occurrence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> The second set.</div>" } ], "returns" : { "type" : "xs:double", "description" : "The Dice similarity coefficient between the two sets." }, "errors" : [  ] }, { "isDocumented" : true, "arity" : 1, "name" : "distinct", "qname" : "set:distinct", "signature" : "($s) as item()*", "description" : " <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">Removes exact duplicates from a set, using the deep-equal() function to compare the XML nodes from the sets.</p>\n <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"/>\n <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">Example usage : <pre class=\"ace-static\" ace-mode=\"xquery\"> distinct ( ( \"a\", \"a\", <b/> ) ) </pre></p>\n <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"/>\n <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">The function invocation in the example above returns : <pre class=\"ace-static\" ace-mode=\"xquery\"> (\"a\", <b/> ) </pre></p>\n", "summary" : "<p>  Removes exact duplicates from a set, using the deep-equal() function to compare the XML nodes from the sets.</p>", "annotation_str" : "", "annotations" : [  ], "updating" : false, "parameters" : [ { "name" : "s", "type" : null, "occurrence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> A set.</div>" } ], "returns" : { "type" : "item()*", "description" : "The set provided as input without the exact duplicates (i.e., returns the distinct nodes from the set provided as input)." }, "errors" : [  ] }, { "isDocumented" : true, "arity" : 2, "name" : "jaccard", "qname" : "set:jaccard", "signature" : "($s1, $s2) as xs:double", "description" : " <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">Returns the Jaccard similarity coefficient between two sets of XML nodes.</p>\n <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">The Jaccard coefficient is defined as the size of the intersection divided by the size of the\n union of the input sets.</p>\n <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"/>\n <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">Example usage : <pre class=\"ace-static\" ace-mode=\"xquery\"> jaccard ( ( \"a\", \"b\", <c/> ) , ( \"a\", \"a\", \"d\") ) </pre></p>\n <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"/>\n <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">The function invocation in the example above returns : <pre class=\"ace-static\" ace-mode=\"xquery\"> 0.25 </pre></p>\n", "summary" : "<p>  Returns the Jaccard similarity coefficient between two sets of XML nodes.</p>", "annotation_str" : "", "annotations" : [  ], "updating" : false, "parameters" : [ { "name" : "s1", "type" : null, "occurrence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> The first set.</div>" }, { "name" : "s2", "type" : null, "occurrence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> The second set.</div>" } ], "returns" : { "type" : "xs:double", "description" : "The Jaccard similarity coefficient between the two sets." }, "errors" : [  ] }, { "isDocumented" : true, "arity" : 2, "name" : "overlap", "qname" : "set:overlap", "signature" : "($s1, $s2) as xs:double", "description" : " <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">Returns the overlap coefficient between two sets of XML nodes.</p>\n <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">The overlap coefficient is defined as the shared information between the input sets\n (i.e., the size of the intersection) over the size of the smallest input set.</p>\n <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"/>\n <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">Example usage : <pre class=\"ace-static\" ace-mode=\"xquery\"> overlap ( ( \"a\", \"b\", <c/> ) , ( \"a\", \"a\", \"b\" ) ) </pre></p>\n <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"/>\n <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">The function invocation in the example above returns : <pre class=\"ace-static\" ace-mode=\"xquery\"> 1.0 </pre></p>\n", "summary" : "<p>  Returns the overlap coefficient between two sets of XML nodes.</p>", "annotation_str" : "", "annotations" : [  ], "updating" : false, "parameters" : [ { "name" : "s1", "type" : null, "occurrence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> The first set.</div>" }, { "name" : "s2", "type" : null, "occurrence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> The second set.</div>" } ], "returns" : { "type" : "xs:double", "description" : "The overlap coefficient between the two sets." }, "errors" : [  ] } ], "variables" : [  ] }, "http://www.28msec.com/modules/http/util/cache" : { "ns" : "http://www.28msec.com/modules/http/util/cache", "description" : " This module contains a collection of convenience functions to help\n developers work with HTTP caching options.\n", "sees" : [  ], "authors" : [ "<xqdoc:author xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">28msec</xqdoc:author>" ], "version" : null, "encoding" : "utf-8", "namespaces" : [ { "uri" : "http://zorba.io/annotations", "prefix" : "an" }, { "uri" : "http://www.28msec.com/modules/http/util/cache", "prefix" : "cache" }, { "uri" : "http://www.28msec.com/modules/http/response", "prefix" : "resp" }, { "uri" : "http://zorba.io/options/versioning", "prefix" : "ver" } ], "functions" : [ { "isDocumented" : true, "arity" : 0, "name" : "no-cache", "qname" : "cache:no-cache", "signature" : "() as empty-sequence()", "description" : " <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">Forces a client not to cache the response by setting the appropriate\n HTTP headers.</p>\n In detail, the following HTTP headers will be set in the response:\n <ul xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">\n   <li><tt>Cache-Control: no-cache</tt></li>\n   <li><tt>Pragma: no-cache</tt></li>\n   <li><tt>Expires: 0</tt></li>\n </ul>\n", "summary" : "<p>  Forces a client not to cache the response by setting the appropriate\n HTTP headers.</p>", "annotation_str" : " %an:sequential", "annotations" : [ { "prefix" : "an", "ns" : "http://zorba.io/annotations", "name" : "sequential", "value" : "" } ], "updating" : false, "parameters" : [  ], "returns" : { "type" : "empty-sequence()", "description" : "On success, the empty-sequence is returned" }, "errors" : [  ] } ], "variables" : [  ] }, "http://www.zorba-xquery.com/modules/schema-tools" : { "ns" : "http://www.zorba-xquery.com/modules/schema-tools", "description" : " This module provides funtionality to get sample XMLSchema from XML instances\n and sample XML instances from XMLSchema.\n <a xmlns:xqdoc=\"http://www.xqdoc.org/1.0\" href=\"http://xmlbeans.apache.org/\">Apache XMLBeans</a> library is used to implement\n inst2xsd and xsd2inst functions.\n <br xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"/>\n <br xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"/>\n <b xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">Note:</b> Since this module has a Java library dependency a JVM required\n to be installed on the system. For Windows: jvm.dll is required on the system\n path ( usually located in \"C:\\Program Files\\Java\\jre6\\bin\\client\".\n", "sees" : [ "<xqdoc:see xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">http://xmlbeans.apache.org/</xqdoc:see>", "<xqdoc:see xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">http://xmlbeans.apache.org</xqdoc:see>" ], "authors" : [ "<xqdoc:author xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">Cezar Andrei</xqdoc:author>" ], "version" : null, "encoding" : "utf-8", "namespaces" : [ { "uri" : "http://www.w3.org/2005/xqt-errors", "prefix" : "err" }, { "uri" : "http://zorba.io/modules/schema", "prefix" : "schema-options" }, { "uri" : "http://www.zorba-xquery.com/modules/schema-tools", "prefix" : "schema-tools" }, { "uri" : "http://www.zorba-xquery.com/modules/schema-tools/schema-tools-options", "prefix" : "st-options" }, { "uri" : "http://zorba.io/options/versioning", "prefix" : "ver" } ], "functions" : [ { "isDocumented" : true, "arity" : 2, "name" : "inst2xsd", "qname" : "schema-tools:inst2xsd", "signature" : "($instances as element(*)+, $options as element(st-options:inst2xsd-options)?) as document()*", "description" : " The inst2xsd function takes a set of sample XML instance elements as input and\n generates a set of sample XMLSchema documents that define\n the content of the given input.\n <br xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"/>\n Please consult the\n <a xmlns:xqdoc=\"http://www.xqdoc.org/1.0\" href=\"http://xmlbeans.apache.org/\">official documentation for further\n information</a>.\n <br xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"/>\n Example:<pre xmlns:xqdoc=\"http://www.xqdoc.org/1.0\" class=\"ace-static\" ace-mode=\"xquery\">\n  import module namespace st = \"http://www.zorba-xquery.com/modules/schema-tools\";\n  declare namespace sto =\n      \"http://www.zorba-xquery.com/modules/schema-tools/schema-tools-options\";\n  let $instances := (&lt;a&gt;&lt;b/&gt;&lt;c/&gt;&lt;/a&gt;, &lt;b/&gt;, &lt;c&gt;ccc&lt;/c&gt;)\n  let $options  :=\n     &lt;sto:inst2xsd-options xmlns:sto=\n       \"http://www.zorba-xquery.com/modules/schema-tools/schema-tools-options\"&gt;\n       &lt;sto:design&gt;vbd&lt;/sto:design&gt;\n       &lt;sto:simple-content-types&gt;smart&lt;/sto:simple-content-types&gt;\n       &lt;sto:use-enumeration&gt;10&lt;/sto:use-enumeration&gt;\n     &lt;/sto:inst2xsd-options&gt;\n  return\n      st:inst2xsd($instances, $options)\n </pre>\n <br xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"/>\n", "summary" : "<p> The inst2xsd function takes a set of sample XML instance elements as input and\n generates a set of sample XMLSchema documents that define\n the content of the given input.</p>", "annotation_str" : "", "annotations" : [  ], "updating" : false, "parameters" : [ { "name" : "instances", "type" : "element(*)", "occurrence" : "+", "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> The input XML instance elements</div>" }, { "name" : "options", "type" : "element(st-options:inst2xsd-options)", "occurrence" : "?", "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> Options:<br/> <ul> <li>design: Choose the generated schema design<br/> - rdd: Russian Doll Design - local elements and local types<br/> - ssd: Salami Slice Design - global elements and local types<br/> - vbd (default): Venetian Blind Design - local elements and global complex types</li> <li>simple-content-types: type of leaf nodes<br/> - smart (default): try to find the right simple XMLSchema type<br/> - always-string: use xsd:string for all simple types</li> <li>use-enumeration: - when there are multiple valid values in a list<br/> - 1: never use enumeration<br/> - 2 or more (default 10): use enumeration if less than this number of occurrences - number option</li> <li>verbose: - stdout verbose info<br/> - true: - output type holder information<br/> - false (default): no output</li></ul></div>" } ], "returns" : { "type" : "document()*", "description" : "The generated XMLSchema documents." }, "errors" : [ "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">schema-tools:VM001 If Zorba was unable to start the JVM.</xqdoc:error>", "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">schema-tools:JAVA-EXCEPTION If Apache XMLBeans throws an exception.</xqdoc:error>" ] }, { "isDocumented" : true, "arity" : 3, "name" : "xsd2inst", "qname" : "schema-tools:xsd2inst", "signature" : "($schemas as element(*)+, $rootElementName as xs:string, $options as element(st-options:xsd2inst-options)?) as document()", "description" : " The xsd2inst function takes a set of XML Schema elements as input and the\n local name of the root element and\n generates a document that represents one sample XML instance of the given\n input schemas. The local name is searched in schema global element definitions\n in the order of schemas parameter.\n <br xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"/>\n Please consult the\n <a xmlns:xqdoc=\"http://www.xqdoc.org/1.0\" href=\"http://xmlbeans.apache.org/\">official documentation for further\n   information</a>.\n <br xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"/>\n Example: <pre xmlns:xqdoc=\"http://www.xqdoc.org/1.0\" class=\"ace-static\" ace-static=\"xquery\">\n  import module namespace st = \"http://www.zorba-xquery.com/modules/schema-tools\";\n  declare namespace sto =\n      \"http://www.zorba-xquery.com/modules/schema-tools/schema-tools-options\";\n  let $xsds  :=\n     ( &lt;xs:schema xmlns:xs=\"http://www.w3.org/2001/XMLSchema\"\n           attributeFormDefault=\"unqualified\"\n           elementFormDefault=\"qualified\"&gt;\n         &lt;xs:element name=\"a\" type=\"aType\"/&gt;\n         &lt;xs:complexType name=\"aType\"&gt;\n           &lt;xs:sequence&gt;\n             &lt;xs:element type=\"xs:string\" name=\"b\"/&gt;\n             &lt;xs:element type=\"xs:string\" name=\"c\"/&gt;\n           &lt;/xs:sequence&gt;\n         &lt;/xs:complexType&gt;\n       &lt;/xs:schema&gt; )\n  let $options :=\n    &lt;sto:xsd2inst-options xmlns:sto=\n      \"http://www.zorba-xquery.com/modules/schema-tools/schema-tools-options\"&gt;\n      &lt;sto:network-downloads&gt;false&lt;/sto:network-downloads&gt;\n      &lt;sto:no-pvr&gt;false&lt;/sto:no-pvr&gt;\n      &lt;sto:no-upa&gt;false&lt;/sto:no-upa&gt;\n    &lt;/sto:xsd2inst-options&gt;\n  return\n      st:xsd2inst($xsds, \"a\", $options)\n </pre><br xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"/>\n", "summary" : "<p> The xsd2inst function takes a set of XML Schema elements as input and the\n local name of the root element and\n generates a document that represents one sample XML instance of the given\n input schemas.</p>", "annotation_str" : "", "annotations" : [  ], "updating" : false, "parameters" : [ { "name" : "schemas", "type" : "element(*)", "occurrence" : "+", "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> elements representing XMLSchema definitions</div>" }, { "name" : "rootElementName", "type" : "xs:string", "occurrence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> The local name of the instance root element. If multiple target namespaces are used, first one found - using the sequence order - will be used.</div>" }, { "name" : "options", "type" : "element(st-options:xsd2inst-options)", "occurrence" : "?", "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> Options:<br/><ul> <li>network-downloads: boolean (default false)<br/> - true allows XMLBeans to use network when resolving schema imports and includes</li> <li>no-pvr: boolean (default false)<br/> - true to disable particle valid (restriction) rule, false otherwise</li> <li>no-upa: boolean (default false)<br/> - true to disable unique particle attribution rule, false otherwise</li></ul></div>" } ], "returns" : { "type" : "document()", "description" : "The generated output document, representing a sample XML instance." }, "errors" : [ "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">schema-tools:VM001 If Zorba was unable to start the JVM.</xqdoc:error>", "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">schema-tools:JAVA-EXCEPTION If Apache XMLBeans throws an exception.</xqdoc:error>" ] } ], "variables" : [  ] }, "http://xbrl.io/modules/bizql/entities" : { "ns" : "http://xbrl.io/modules/bizql/entities", "description" : " <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">This module provides functions for retrieving information about entities.\n Entities submit archives (see archives module),\n for example, to a reporting authority. Entities\n are identified with an EID (Entity ID).</p>\n <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">With this module, you can retrieve all entities, or a certain number of entities\n with their EIDs, or obtain the EID of entities you already have.</p>\n <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">Entities are stored in a MongoDB datasource called <b>xbrl</b>.</p>\n <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">Each entity can be associated with a set of tags that makes it easier\n to manage them. The e:entities#1 function\n allows to retrieve all entities with a given tag.</p>\n", "sees" : [  ], "authors" : [ "<xqdoc:author xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">Charles Hoffman</xqdoc:author>", "<xqdoc:author xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">Matthias Brantner</xqdoc:author>", "<xqdoc:author xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">Dennis Knochenwefel</xqdoc:author>", "<xqdoc:author xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">Ghislain Fourny</xqdoc:author>" ], "version" : null, "encoding" : "utf-8", "namespaces" : [ { "uri" : "http://www.28msec.com/modules/credentials", "prefix" : "credentials" }, { "uri" : "http://xbrl.io/modules/bizql/entities", "prefix" : "entities" }, { "uri" : "http://www.28msec.com/modules/mongodb", "prefix" : "mongo" }, { "uri" : "http://zorba.io/options/versioning", "prefix" : "ver" } ], "functions" : [ { "isDocumented" : true, "arity" : 1, "name" : "eid", "qname" : "entities:eid", "signature" : "($entities-or-ids as item()*) as atomic*", "description" : " <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">Converts the input to a normalized entity identifier (EID). The input\n can be either an EID, or an entity object which contains an _id.</p>\n", "summary" : "<p>  Converts the input to a normalized entity identifier (EID).</p>", "annotation_str" : "", "annotations" : [  ], "updating" : false, "parameters" : [ { "name" : "entities-or-ids", "type" : "item()", "occurrence" : "*", "description" : "" } ], "returns" : { "type" : "atomic*", "description" : "the normalized EIDs." }, "errors" : [ "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">entities:INVALID_PARAMETER if the EID or entity is not valid.</xqdoc:error>" ] }, { "isDocumented" : true, "arity" : 0, "name" : "entities", "qname" : "entities:entities", "signature" : "() as object()*", "description" : " <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">Return all entities.</p>\n", "summary" : "<p>  Return all entities.</p>", "annotation_str" : "", "annotations" : [  ], "updating" : false, "parameters" : [  ], "returns" : { "type" : "object()*", "description" : "all entities." }, "errors" : [  ] }, { "isDocumented" : true, "arity" : 1, "name" : "entities", "qname" : "entities:entities", "signature" : "($entities-or-ids as item()*) as object()*", "description" : " <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">Return the entities with the given EIDs.</p>\n", "summary" : "<p>  Return the entities with the given EIDs.</p>", "annotation_str" : "", "annotations" : [  ], "updating" : false, "parameters" : [ { "name" : "entities-or-ids", "type" : "item()", "occurrence" : "*", "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> the ids of the entities (EIDs) or the entities themselves.</div>" } ], "returns" : { "type" : "object()*", "description" : "the entities with the given EIDs the empty sequence if no entity was found or if the input is an empty sequence." }, "errors" : [  ] } ], "variables" : [ { "name" : "entities:col", "type" : "string", "description" : " Name of the collection the entities are stored in.\n" } ] }, "http://www.zorba-xquery.com/modules/cryptography/hmac" : { "ns" : "http://www.zorba-xquery.com/modules/cryptography/hmac", "description" : " This module provides a function to generate hash-based\n message authentication codes (HMAC) involving a cryptographic\n hash function (e.g. SHA1).\n", "sees" : [  ], "authors" : [ "<xqdoc:author xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">William Candillon</xqdoc:author>" ], "version" : null, "encoding" : "utf-8", "namespaces" : [ { "uri" : "http://www.zorba-xquery.com/modules/cryptography/hmac", "prefix" : "hmac" }, { "uri" : "http://zorba.io/options/versioning", "prefix" : "ver" } ], "functions" : [ { "isDocumented" : true, "arity" : 2, "name" : "sha1", "qname" : "hmac:sha1", "signature" : "($message as xs:string, $secret-key as xs:string) as xs:string external", "description" : " This function provides hash-based message authentication code using\n the SHA1 algorithm.\n", "summary" : "<p> This function provides hash-based message authentication code using\n the SHA1 algorithm.</p>", "annotation_str" : "", "annotations" : [  ], "updating" : false, "parameters" : [ { "name" : "message", "type" : "xs:string", "occurrence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> the message to be authenticated</div>" }, { "name" : "secret-key", "type" : "xs:string", "occurrence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> the secret key used for calculating the authentication</div>" } ], "returns" : { "type" : "xs:string", "description" : "hash-based base64 encoded message authentication code" }, "errors" : [  ] } ], "variables" : [  ] }, "http://api.28.io/csvview" : { "ns" : "http://api.28.io/csvview", "description" : "", "sees" : [  ], "authors" : [  ], "version" : null, "encoding" : null, "namespaces" : [ { "uri" : "", "prefix" : "an" }, { "uri" : "http://api.28.io/csvview", "prefix" : "csvview" }, { "uri" : "http://api.28.io/model", "prefix" : "model" } ], "functions" : [ { "isDocumented" : false, "arity" : 1, "name" : "column", "qname" : "csvview:column", "signature" : "($data) as xs:string", "description" : "", "summary" : "", "annotation_str" : "", "annotations" : [  ], "updating" : false, "parameters" : [ { "name" : "data", "type" : null, "occurrence" : null, "description" : "" } ], "returns" : { "type" : "xs:string", "description" : "" }, "errors" : [  ] }, { "isDocumented" : false, "arity" : 1, "name" : "line", "qname" : "csvview:line", "signature" : "($entries as xs:string*)", "description" : "", "summary" : "", "annotation_str" : "", "annotations" : [  ], "updating" : false, "parameters" : [ { "name" : "entries", "type" : "xs:string", "occurrence" : "*", "description" : "" } ], "returns" : { "type" : null, "description" : "" }, "errors" : [  ] }, { "isDocumented" : false, "arity" : 2, "name" : "show-nodes", "qname" : "csvview:show-nodes", "signature" : "($nodes, $show-headers as xs:boolean)", "description" : "", "summary" : "", "annotation_str" : " %an:sequential", "annotations" : [ { "prefix" : "an", "ns" : "", "name" : "sequential", "value" : "" } ], "updating" : false, "parameters" : [ { "name" : "nodes", "type" : null, "occurrence" : null, "description" : "" }, { "name" : "show-headers", "type" : "xs:boolean", "occurrence" : null, "description" : "" } ], "returns" : { "type" : null, "description" : "" }, "errors" : [  ] } ], "variables" : [  ] }, "http://api.28.io/util" : { "ns" : "http://api.28.io/util", "description" : "", "sees" : [  ], "authors" : [  ], "version" : null, "encoding" : null, "namespaces" : [ { "uri" : "http://www.28msec.com/modules/http/request", "prefix" : "req" }, { "uri" : "http://api.28.io/util", "prefix" : "util" } ], "functions" : [ { "isDocumented" : false, "arity" : 1, "name" : "param-or-body", "qname" : "util:param-or-body", "signature" : "($param-name as xs:string) as xs:string?", "description" : "", "summary" : "", "annotation_str" : "", "annotations" : [  ], "updating" : false, "parameters" : [ { "name" : "param-name", "type" : "xs:string", "occurrence" : null, "description" : "" } ], "returns" : { "type" : "xs:string?", "description" : "" }, "errors" : [  ] }, { "isDocumented" : false, "arity" : 1, "name" : "path", "qname" : "util:path", "signature" : "($from as xs:integer) as xs:string*", "description" : "", "summary" : "", "annotation_str" : "", "annotations" : [  ], "updating" : false, "parameters" : [ { "name" : "from", "type" : "xs:integer", "occurrence" : null, "description" : "" } ], "returns" : { "type" : "xs:string*", "description" : "" }, "errors" : [  ] } ], "variables" : [ { "name" : "util:collection-namespace", "type" : "item()*", "description" : "" } ] } };
});
