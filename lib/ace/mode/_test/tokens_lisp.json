[
 {
  "state": "start",
  "data": [
   [ "text", "(" ],
   [ "storage.type.function-type.lisp", "defun" ],
   [ "text", " " ],
   [ "entity.name.function.lisp", "prompt-for-cd" ],
   [ "text", " ()" ]
  ]
 },
 {
  "state": "start",
  "data": [
   [ "text", "   " ],
   [ "string", "\"Prompts" ]
  ]
 },
 {
  "state": "start",
  "data": [
   [ "text", "    " ],
   [ "identifier", "for" ],
   [ "text", " " ],
   [ "identifier", "CD" ],
   [ "text", "\"" ]
  ]
 },
 {
  "state": "start",
  "data": [
   [ "text", "   (" ],
   [ "identifier", "prompt" ],
   [ "text", "-" ],
   [ "identifier", "read" ],
   [ "text", " " ],
   [ "string", "\"Title\"" ],
   [ "text", " " ],
   [ "constant.numeric", "1.53" ],
   [ "text", " " ],
   [ "constant.numeric", "1" ],
   [ "text", " " ],
   [ "constant.numeric", "2" ],
   [ "text", "/" ],
   [ "constant.numeric", "4" ],
   [ "text", " " ],
   [ "constant.numeric", "1.7" ],
   [ "text", " " ],
   [ "constant.numeric", "1.7e0" ],
   [ "text", " " ],
   [ "constant.numeric", "2.9E-4" ],
   [ "text", " " ],
   [ "constant.numeric", "+42" ],
   [ "text", " " ],
   [ "constant.numeric", "-7" ],
   [ "text", " " ],
   [ "punctuation.definition.constant.character.lisp", "#" ],
   [ "constant.character.lisp", "b001" ],
   [ "text", " " ],
   [ "punctuation.definition.constant.character.lisp", "#" ],
   [ "constant.character.lisp", "b001/100" ],
   [ "text", " " ],
   [ "punctuation.definition.constant.character.lisp", "#" ],
   [ "constant.character.lisp", "o777" ],
   [ "text", " " ],
   [ "punctuation.definition.constant.character.lisp", "#" ],
   [ "constant.character.lisp", "O777" ],
   [ "text", " " ],
   [ "punctuation.definition.constant.character.lisp", "#" ],
   [ "constant.character.lisp", "xabc55" ],
   [ "text", " " ],
   [ "punctuation.definition.constant.character.lisp", "#" ],
   [ "constant.character.lisp", "c" ],
   [ "text", "(" ],
   [ "constant.numeric", "0" ],
   [ "text", " " ],
   [ "constant.numeric", "-5.6" ],
   [ "text", "))" ]
  ]
 },
 {
  "state": "start",
  "data": [
   [ "text", "   (" ],
   [ "identifier", "prompt" ],
   [ "text", "-" ],
   [ "identifier", "read" ],
   [ "text", " " ],
   [ "string", "\"Artist\"" ],
   [ "text", " &" ],
   [ "identifier", "rest" ],
   [ "text", ")" ]
  ]
 },
 {
  "state": "start",
  "data": [
   [ "text", "   (" ],
   [ "keyword.operator", "or" ],
   [ "text", " (" ],
   [ "identifier", "parse" ],
   [ "text", "-" ],
   [ "identifier", "integer" ],
   [ "text", " (" ],
   [ "identifier", "prompt" ],
   [ "text", "-" ],
   [ "identifier", "read" ],
   [ "text", " " ],
   [ "string", "\"Rating\"" ],
   [ "text", ") :" ],
   [ "identifier", "junk" ],
   [ "text", "-" ],
   [ "identifier", "allowed" ],
   [ "text", " " ],
   [ "support.function", "t" ],
   [ "text", ") " ],
   [ "constant.numeric", "0" ],
   [ "text", ")" ]
  ]
 },
 {
  "state": "start",
  "data": [
   [ "text", "  (" ],
   [ "keyword.control", "if" ],
   [ "text", " " ],
   [ "identifier", "x" ],
   [ "text", " (" ],
   [ "support.function", "format" ],
   [ "text", " " ],
   [ "support.function", "t" ],
   [ "text", " " ],
   [ "string", "\"yes\"" ],
   [ "text", ") (" ],
   [ "support.function", "format" ],
   [ "text", " " ],
   [ "support.function", "t" ],
   [ "text", " " ],
   [ "string", "\"no\"" ],
   [ "text", " " ],
   [ "constant.language", "nil" ],
   [ "text", ") " ],
   [ "comment", ";and here comment" ]
  ]
 },
 {
  "state": "start",
  "data": [
   [ "text", "  ) " ],
   [ "constant.numeric", "0xFFLL" ],
   [ "text", " " ],
   [ "constant.numeric", "-23ull" ]
  ]
 },
 {
  "state": "start",
  "data": [
   [ "text", "  " ],
   [ "comment", ";; second line comment" ]
  ]
 },
 {
  "state": "start",
  "data": [
   [ "text", "  '(+ " ],
   [ "constant.numeric", "1" ],
   [ "text", " " ],
   [ "constant.numeric", "2" ],
   [ "text", ")" ]
  ]
 },
 {
  "state": "start",
  "data": [
   [ "text", "  (" ],
   [ "identifier", "defvar" ],
   [ "text", " " ],
   [ "punctuation.definition.variable.lisp", "*" ],
   [ "variable.other.global.lisp", "lines" ],
   [ "punctuation.definition.variable.lisp", "*" ],
   [ "text", ")                " ],
   [ "comment", "; list of all lines" ]
  ]
 },
 {
  "state": "start",
  "data": [
   [ "text", "  (" ],
   [ "identifier", "position" ],
   [ "text", "-" ],
   [ "keyword.control", "if" ],
   [ "text", "-" ],
   [ "identifier", "not" ],
   [ "text", " " ],
   [ "punctuation.definition.constant.character.lisp", "#" ],
   [ "constant.character.lisp", "'sys::whitespacep" ],
   [ "text", " " ],
   [ "identifier", "line" ],
   [ "text", " :" ],
   [ "identifier", "start" ],
   [ "text", " " ],
   [ "identifier", "beg" ],
   [ "text", "))" ]
  ]
 },
 {
  "state": "start",
  "data": [
   [ "text", "  (" ],
   [ "support.function", "quote" ],
   [ "text", " (" ],
   [ "identifier", "privet" ],
   [ "text", " " ],
   [ "constant.numeric", "1" ],
   [ "text", " " ],
   [ "constant.numeric", "2" ],
   [ "text", " " ],
   [ "constant.numeric", "3" ],
   [ "text", "))" ]
  ]
 },
 {
  "state": "start",
  "data": [
   [ "text", "  '(" ],
   [ "identifier", "hello" ],
   [ "text", " " ],
   [ "identifier", "world" ],
   [ "text", ")" ]
  ]
 },
 {
  "state": "start",
  "data": [
   [ "text", "  (* " ],
   [ "constant.numeric", "5" ],
   [ "text", " " ],
   [ "constant.numeric", "7" ],
   [ "text", ")" ]
  ]
 },
 {
  "state": "start",
  "data": [
   [ "text", "  (" ],
   [ "constant.numeric", "1" ],
   [ "text", " " ],
   [ "constant.numeric", "2" ],
   [ "text", " " ],
   [ "constant.numeric", "34" ],
   [ "text", " " ],
   [ "constant.numeric", "5" ],
   [ "text", ")" ]
  ]
 },
 {
  "state": "start",
  "data": [
   [ "text", "  (:" ],
   [ "identifier", "use" ],
   [ "text", " " ],
   [ "string", "\"aaaa\"" ],
   [ "text", ")" ]
  ]
 },
 {
  "state": "start",
  "data": [
   [ "text", "  (" ],
   [ "keyword.control", "let" ],
   [ "text", " ((" ],
   [ "identifier", "x" ],
   [ "text", " " ],
   [ "constant.numeric", "10" ],
   [ "text", ") (" ],
   [ "identifier", "y" ],
   [ "text", " " ],
   [ "constant.numeric", "20" ],
   [ "text", "))" ]
  ]
 },
 {
  "state": "start",
  "data": [
   [ "text", "    (" ],
   [ "identifier", "print" ],
   [ "text", " (+ " ],
   [ "identifier", "x" ],
   [ "text", " " ],
   [ "identifier", "y" ],
   [ "text", "))" ]
  ]
 },
 {
  "state": "start",
  "data": [
   [ "text", "  ) " ],
   [ "support.function", "LAmbDa" ]
  ]
 },
 {
  "state": "start",
  "data": []
 },
 {
  "state": "start",
  "data": [
   [ "text", "  " ],
   [ "string", "\"asdad" ],
   [ "constant.character.escape.lisp", "\\0" ],
   [ "string", "eqweqe\"" ]
  ]
 }
]