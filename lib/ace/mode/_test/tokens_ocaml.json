[
 {
  "state": "comment",
  "values": [
   "(*"
  ],
  "types": [
   "comment"
  ]
 },
 {
  "state": "comment",
  "values": [
   " * Example of early return implementation taken from"
  ],
  "types": [
   "comment"
  ]
 },
 {
  "state": "comment",
  "values": [
   " * http://ocaml.janestreet.com/?q=node/91"
  ],
  "types": [
   "comment"
  ]
 },
 {
  "state": "start",
  "values": [
   " *)"
  ],
  "types": [
   "comment"
  ]
 },
 {
  "state": "start",
  "values": [],
  "types": []
 },
 {
  "state": "start",
  "values": [
   "let",
   " ",
   "with_return",
   " ",
   "(",
   "type",
   " ",
   "t",
   ")",
   " ",
   "(",
   "f",
   " : ",
   "_",
   " ",
   "-",
   ">",
   " ",
   "t",
   ")",
   " ",
   "="
  ],
  "types": [
   "keyword",
   "text",
   "identifier",
   "text",
   "paren.lparen",
   "keyword",
   "text",
   "identifier",
   "paren.rparen",
   "text",
   "paren.lparen",
   "identifier",
   "text",
   "identifier",
   "text",
   "keyword.operator",
   "keyword.operator",
   "text",
   "identifier",
   "paren.rparen",
   "text",
   "keyword.operator"
  ]
 },
 {
  "state": "start",
  "values": [
   "  ",
   "let",
   " ",
   "module",
   " ",
   "M",
   " ",
   "="
  ],
  "types": [
   "text",
   "keyword",
   "text",
   "keyword",
   "text",
   "identifier",
   "text",
   "keyword.operator"
  ]
 },
 {
  "state": "start",
  "values": [
   "     ",
   "struct",
   " ",
   "exception",
   " ",
   "Return",
   " ",
   "of",
   " ",
   "t",
   " ",
   "end"
  ],
  "types": [
   "text",
   "keyword",
   "text",
   "keyword",
   "text",
   "identifier",
   "text",
   "keyword",
   "text",
   "identifier",
   "text",
   "keyword"
  ]
 },
 {
  "state": "start",
  "values": [
   "  ",
   "in"
  ],
  "types": [
   "text",
   "keyword"
  ]
 },
 {
  "state": "start",
  "values": [
   "  ",
   "let",
   " ",
   "return",
   " ",
   "=",
   " ",
   "{",
   " ",
   "return",
   " ",
   "=",
   " ",
   "(",
   "fun",
   " ",
   "x",
   " ",
   "-",
   ">",
   " ",
   "raise",
   " ",
   "(",
   "M",
   ".",
   "Return",
   " ",
   "x",
   ")",
   ")",
   "; ",
   "}",
   " ",
   "in"
  ],
  "types": [
   "text",
   "keyword",
   "text",
   "identifier",
   "text",
   "keyword.operator",
   "text",
   "paren.lparen",
   "text",
   "identifier",
   "text",
   "keyword.operator",
   "text",
   "paren.lparen",
   "keyword",
   "text",
   "identifier",
   "text",
   "keyword.operator",
   "keyword.operator",
   "text",
   "support.function",
   "text",
   "paren.lparen",
   "identifier",
   "text",
   "identifier",
   "text",
   "identifier",
   "paren.rparen",
   "paren.rparen",
   "text",
   "paren.rparen",
   "text",
   "keyword"
  ]
 },
 {
  "state": "start",
  "values": [
   "  ",
   "try",
   " ",
   "f",
   " ",
   "return",
   " ",
   "with",
   " ",
   "M",
   ".",
   "Return",
   " ",
   "x",
   " ",
   "-",
   ">",
   " ",
   "x"
  ],
  "types": [
   "text",
   "keyword",
   "text",
   "identifier",
   "text",
   "identifier",
   "text",
   "keyword",
   "text",
   "identifier",
   "text",
   "identifier",
   "text",
   "identifier",
   "text",
   "keyword.operator",
   "keyword.operator",
   "text",
   "identifier"
  ]
 },
 {
  "state": "start",
  "values": [],
  "types": []
 },
 {
  "state": "start",
  "values": [],
  "types": []
 },
 {
  "state": "start",
  "values": [
   "(* Function that uses the 'early return' functionality provided by `with_return` *)"
  ],
  "types": [
   "comment"
  ]
 },
 {
  "state": "start",
  "values": [
   "let",
   " ",
   "sum_until_first_negative",
   " ",
   "list",
   " ",
   "="
  ],
  "types": [
   "keyword",
   "text",
   "identifier",
   "text",
   "support.function",
   "text",
   "keyword.operator"
  ]
 },
 {
  "state": "start",
  "values": [
   "  ",
   "with_return",
   " ",
   "(",
   "fun",
   " ",
   "r",
   " ",
   "-",
   ">"
  ],
  "types": [
   "text",
   "identifier",
   "text",
   "paren.lparen",
   "keyword",
   "text",
   "identifier",
   "text",
   "keyword.operator",
   "keyword.operator"
  ]
 },
 {
  "state": "start",
  "values": [
   "    ",
   "List",
   ".",
   "fold",
   " ",
   "list",
   " ",
   "~",
   "init",
   ":",
   "0",
   " ",
   "~",
   "f",
   ":",
   "(",
   "fun",
   " ",
   "acc",
   " ",
   "x",
   " ",
   "-",
   ">"
  ],
  "types": [
   "text",
   "support.function",
   "text",
   "support.function",
   "text",
   "support.function",
   "text",
   "keyword.operator",
   "support.function",
   "text",
   "constant.numeric",
   "text",
   "keyword.operator",
   "identifier",
   "text",
   "paren.lparen",
   "keyword",
   "text",
   "identifier",
   "text",
   "identifier",
   "text",
   "keyword.operator",
   "keyword.operator"
  ]
 },
 {
  "state": "start",
  "values": [
   "      ",
   "if",
   " ",
   "x",
   " ",
   ">",
   "=",
   " ",
   "0",
   " ",
   "then",
   " ",
   "acc",
   " ",
   "+",
   " ",
   "x",
   " ",
   "else",
   " ",
   "r",
   ".",
   "return",
   " ",
   "acc",
   ")",
   ")"
  ],
  "types": [
   "text",
   "keyword",
   "text",
   "identifier",
   "text",
   "keyword.operator",
   "keyword.operator",
   "text",
   "constant.numeric",
   "text",
   "keyword",
   "text",
   "identifier",
   "text",
   "keyword.operator",
   "text",
   "identifier",
   "text",
   "keyword",
   "text",
   "identifier",
   "text",
   "identifier",
   "text",
   "identifier",
   "paren.rparen",
   "paren.rparen"
  ]
 }
]