{
    "name": "Rholang",
    "fileTypes": [
        "rho"
    ],
    "uuid": "36a6a366-07fb-4659-ba3d-86cfc03c2f1e",
    "scopeName": "source.rho",
    "repository": {
        "for-declaration": {
            "end": "(?<=\\})",
            "patterns": [
                {
                    "end": "(?<=\\))",
                    "patterns": [
                        {
                            "include": "#comment"
                        },
                        {
                            "include": "#bind"
                        }
                    ],
                    "beginCaptures": {
                        "0": {
                            "name": "keyword.control.for.rho"
                        }
                    },
                    "begin": "\\bfor\\b"
                },
                {
                    "include": "#comment"
                },
                {
                    "include": "#block-declaration"
                }
            ],
            "begin": "(?=\\bfor\\b)"
        },
        "parameter": {
            "match": "[-_'a-zA-Z0-9]+",
            "captures": {
                "0": {
                    "name": "variable.name.rho"
                }
            }
        },
        "appl": {
            "end": "(?<=\\))",
            "patterns": [
                {
                    "include": "#argument-list"
                },
                {
                    "match": "[-_'[:alnum:]]+",
                    "captures": {
                        "0": {
                            "name": "entity.name.function.rho"
                        }
                    }
                }
            ],
            "begin": "(?=\\b\\.?[-_'[:alnum:]]+\\s*\\()"
        },
        "func-declaration": {
            "end": "(?<=\\})",
            "patterns": [
                {
                    "name": "keyword.other.function.rho",
                    "match": "\\bdef\\b"
                },
                {
                    "end": "(?=\\{)",
                    "patterns": [
                        {
                            "include": "#comment"
                        },
                        {
                            "include": "#parameter-list"
                        },
                        {
                            "end": "(?=\\{)",
                            "patterns": [
                                {
                                    "name": "keyword.other.function.rho",
                                    "match": "\\="
                                }
                            ],
                            "begin": "(?<=\\))"
                        }
                    ],
                    "beginCaptures": {
                        "1": {
                            "name": "entity.name.function.rho"
                        }
                    },
                    "begin": "([-_''[:alnum:]]+)"
                },
                {
                    "include": "#comment"
                },
                {
                    "include": "#block-declaration"
                }
            ],
            "begin": "(?=\\bdef\\b)"
        },
        "parameter-list": {
            "endCaptures": {
                "0": {
                    "name": "punctuation.parenthesis.close.rho"
                }
            },
            "end": "\\)",
            "patterns": [
                {
                    "include": "#comment"
                },
                {
                    "include": "#string"
                },
                {
                    "include": "#constant"
                },
                {
                    "include": "#parameter"
                }
            ],
            "beginCaptures": {
                "0": {
                    "name": "punctuation.parenthesis.open.rho"
                }
            },
            "begin": "\\("
        },
        "block-declaration": {
            "endCaptures": {
                "0": {
                    "name": "punctuation.curlybrace.close.rho"
                }
            },
            "end": "\\}",
            "patterns": [
                {
                    "include": "#declarations"
                }
            ],
            "beginCaptures": {
                "0": {
                    "name": "punctuation.curlybrace.open.rho"
                }
            },
            "begin": "\\{"
        },
        "comment": {
            "patterns": [
                {
                    "name": "comment.block.rho",
                    "end": "\\*/",
                    "beginCaptures": {
                        "0": {
                            "name": "punctuation.definition.comment.rho"
                        }
                    },
                    "endCaptures": {
                        "0": {
                            "name": "punctuation.definition.comment.rho"
                        }
                    },
                    "begin": "/\\*"
                },
                {
                    "end": "(?=$)",
                    "patterns": [
                        {
                            "name": "comment.block.documentation.rho",
                            "end": "(?=$)",
                            "beginCaptures": {
                                "0": {
                                    "name": "punctuation.definition.comment.rho"
                                }
                            },
                            "begin": "(?<!/)///(?!/)"
                        },
                        {
                            "name": "comment.line.double-slash.rho",
                            "end": "(?=$)",
                            "beginCaptures": {
                                "0": {
                                    "name": "punctuation.definition.comment.rho"
                                }
                            },
                            "begin": "(?<!/)//(?!/)"
                        }
                    ],
                    "beginCaptures": {
                        "1": {
                            "name": "punctuation.whitespace.comment.leading.rho"
                        }
                    },
                    "begin": "(^\\s+)?(?=//)"
                }
            ]
        },
        "terminals": {
            "patterns": [
                {
                    "include": "#comment"
                },
                {
                    "include": "#string"
                },
                {
                    "include": "#appl"
                },
                {
                    "include": "#constant"
                },
                {
                    "include": "#chan"
                }
            ]
        },
        "contract-declaration": {
            "end": "(?<=\\})",
            "patterns": [
                {
                    "name": "keyword.other.contract.rho",
                    "match": "\\bcontract\\b"
                },
                {
                    "end": "(?=\\{)",
                    "patterns": [
                        {
                            "include": "#comment"
                        },
                        {
                            "include": "#parameter-list"
                        },
                        {
                            "end": "(?=\\{)",
                            "patterns": [
                                {
                                    "name": "keyword.other.contract.rho",
                                    "match": "\\="
                                }
                            ],
                            "begin": "(?<=\\))"
                        }
                    ],
                    "beginCaptures": {
                        "1": {
                            "name": "entity.name.function.rho"
                        }
                    },
                    "begin": "([-_''[:alnum:]]+)"
                },
                {
                    "include": "#comment"
                },
                {
                    "include": "#block-declaration"
                }
            ],
            "begin": "(?=\\bcontract\\b)"
        },
        "sum-total-declaration": {
            "end": "(?<=\\})",
            "patterns": [
                {
                    "end": "(?<=\\))",
                    "patterns": [
                        {
                            "include": "#comment"
                        },
                        {
                            "include": "#bind"
                        }
                    ],
                    "beginCaptures": {
                        "0": {
                            "name": "keyword.control.sum.rho"
                        }
                    },
                    "begin": "\\b(sum|total)\\b"
                },
                {
                    "include": "#comment"
                },
                {
                    "include": "#block-declaration"
                }
            ],
            "begin": "(?=\\b(sum|total)\\b)"
        },
        "parameter-bind": {
            "match": "[-_'[:alnum:]]+\\s*(?=<-)",
            "captures": {
                "0": {
                    "name": "variable.name.rho"
                }
            }
        },
        "chan": {
            "match": "([@*#]*)([-_'[:alnum:]]+)",
            "captures": {
                "1": {
                    "name": "keyword.other.chan.rho"
                }
            }
        },
        "new-declaration": {
            "patterns": [
                {
                    "endCaptures": {
                        "1": {
                            "name": "keyword.other.in.rho"
                        }
                    },
                    "end": "(in)\\s*(?=\\{)",
                    "patterns": [
                        {
                            "include": "#comment"
                        },
                        {
                            "include": "#parameter"
                        }
                    ],
                    "beginCaptures": {
                        "0": {
                            "name": "keyword.other.new.rho"
                        }
                    },
                    "begin": "\\bnew\\b"
                },
                {
                    "include": "#comment"
                },
                {
                    "include": "#block-declaration"
                }
            ]
        },
        "match-declaration": {
            "end": "(?=\\})",
            "patterns": [
                {
                    "endCaptures": {
                        "0": {
                            "name": "keyword.control.match.rho"
                        }
                    },
                    "end": "\\bwith\\b",
                    "patterns": [
                        {
                            "include": "#terminals"
                        }
                    ],
                    "beginCaptures": {
                        "0": {
                            "name": "keyword.control.match.rho"
                        }
                    },
                    "begin": "\\bmatch\\b"
                },
                {
                    "include": "#comment"
                },
                {
                    "include": "#block-declaration"
                },
                {
                    "include": "#terminals"
                },
                {
                    "name": "keyword.control.match.rho",
                    "match": "=>"
                }
            ],
            "begin": "(?=\\bmatch\\b)"
        },
        "argument-list": {
            "endCaptures": {
                "0": {
                    "name": "punctuation.parenthesis.close.rho"
                }
            },
            "end": "\\)",
            "patterns": [
                {
                    "include": "#terminals"
                }
            ],
            "beginCaptures": {
                "0": {
                    "name": "punctuation.parenthesis.open.rho"
                }
            },
            "begin": "\\("
        },
        "bind": {
            "endCaptures": {
                "0": {
                    "name": "punctuation.parenthesis.close.rho"
                }
            },
            "end": "\\)",
            "patterns": [
                {
                    "include": "#parameter-bind"
                },
                {
                    "include": "#terminals"
                },
                {
                    "name": "keyword.other.bind.rho",
                    "match": "<-|/:|:\\\\"
                }
            ],
            "beginCaptures": {
                "0": {
                    "name": "punctuation.parenthesis.open.rho"
                }
            },
            "begin": "\\("
        },
        "select-declaration": {
            "end": "(?<=\\})",
            "patterns": [
                {
                    "end": "(?=\\})",
                    "patterns": [
                        {
                            "include": "#comment"
                        },
                        {
                            "include": "#case-declaration"
                        }
                    ],
                    "beginCaptures": {
                        "0": {
                            "name": "keyword.control.select.rho"
                        }
                    },
                    "begin": "\\bselect\\b"
                },
                {
                    "include": "#comment"
                },
                {
                    "include": "#block-declaration"
                }
            ],
            "begin": "(?=\\bselect\\b)"
        },
        "string": {
            "name": "string.quoted.double.rho",
            "end": "\"",
            "patterns": [
                {
                    "name": "constant.character.escape.rho",
                    "match": "\\\\."
                }
            ],
            "begin": "\""
        },
        "declarations": {
            "patterns": [
                {
                    "include": "#comment"
                },
                {
                    "include": "#string"
                },
                {
                    "include": "#new-declaration"
                },
                {
                    "include": "#contract-declaration"
                },
                {
                    "include": "#func-declaration"
                },
                {
                    "include": "#for-declaration"
                },
                {
                    "include": "#match-declaration"
                },
                {
                    "include": "#select-declaration"
                },
                {
                    "include": "#sum-total-declaration"
                },
                {
                    "include": "#block-declaration"
                },
                {
                    "include": "#appl"
                },
                {
                    "include": "#constant"
                },
                {
                    "include": "#chan"
                }
            ]
        },
        "constant": {
            "patterns": [
                {
                    "name": "constant.language.rho",
                    "match": "\\b(Nil|true|false)\\b"
                },
                {
                    "name": "constant.numeric.rho",
                    "match": "-?\\b[0-9]+\\b"
                }
            ]
        },
        "case-declaration": {
            "end": "(?<=\\})",
            "patterns": [
                {
                    "end": "(?=\\{)",
                    "patterns": [
                        {
                            "include": "#parameter-bind"
                        },
                        {
                            "include": "#terminals"
                        },
                        {
                            "name": "keyword.control.case.rho",
                            "match": "=>"
                        },
                        {
                            "name": "keyword.other.case.rho",
                            "match": "<-"
                        }
                    ],
                    "beginCaptures": {
                        "0": {
                            "name": "keyword.control.case.rho"
                        }
                    },
                    "begin": "\\bcase\\b"
                },
                {
                    "include": "#comment"
                },
                {
                    "include": "#block-declaration"
                }
            ],
            "begin": "(?=\\bcase\\b)"
        }
    },
    "patterns": [
        {
            "include": "#declarations"
        }
    ],
    "$schema": "https://raw.githubusercontent.com/martinring/tmlanguage/master/tmlanguage.json"
}
